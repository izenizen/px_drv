;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-10-16 20:57:24
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .text
; function: asv5220_resume at 0x30 -- 0x54
0x30:      55                                    	push rbp
0x31:      48 89 e5                              	mov rbp, rsp
0x34:      48 83 ec 10                           	sub rsp, 0x10
0x38:      48 89 1c 24                           	mov qword ptr [rsp], rbx
0x3c:      4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x41:      e8 aa eb 03 00                        	call 0x3ebf0 <mcount>
0x46:      49 89 fc                              	mov r12, rdi
0x49:      e8 da ea 03 00                        	call 0x3eb28 <pci_enable_device>
0x4e:      89 c3                                 	mov ebx, eax
0x50:      85 c0                                 	test eax, eax
0x52:      75 25                                 	jne 0x79
; data inside code section at 0x54 -- 0x56
0x54:      be 00                                              |..              |
; function: asv5220_suspend at 0x56 -- 0x86
0x56:      00 00                                 	add byte ptr [rax], al
0x58:      00 4c 89 e7                           	add byte ptr [rcx + rcx*4 - 0x19], cl
0x5c:      e8 27 eb 03 00                        	call 0x3eb88 <pci_set_power_state>
0x61:      89 c3                                 	mov ebx, eax
0x63:      85 c0                                 	test eax, eax
0x65:      74 0a                                 	je 0x71 <asv5220_suspend+0x1b>
0x67:      4c 89 e7                              	mov rdi, r12
0x6a:      e8 49 ec 03 00                        	call 0x3ecb8 <pci_disable_device>
0x6f:      eb 08                                 	jmp 0x79 <asv5220_suspend+0x23>
0x71:      4c 89 e7                              	mov rdi, r12
0x74:      e8 af eb 03 00                        	call 0x3ec28 <pci_restore_state>
0x79:      89 d8                                 	mov eax, ebx
0x7b:      48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x7f:      4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x84:      c9                                    	leave 
0x85:      c3                                    	ret 
; function: asv5220_suspend at 0x86 -- 0xa7
0x86:      55                                    	push rbp
0x87:      48 89 e5                              	mov rbp, rsp
0x8a:      41 54                                 	push r12
0x8c:      53                                    	push rbx
0x8d:      e8 5e eb 03 00                        	call 0x3ebf0 <mcount>
0x92:      48 89 fb                              	mov rbx, rdi
0x95:      41 89 f4                              	mov r12d, esi
0x98:      48 8d bf 90 00 00 00                  	lea rdi, [rdi + 0x90]
0x9f:      e8 64 ea 03 00                        	call 0x3eb08 <dev_get_drvdata>
0xa4:      48 89 df                              	mov rdi, rbx
; function: asv5220_release at 0xa7 -- 0xd7
0xa7:      e8 34 ea 03 00                        	call 0x3eae0 <pci_save_state>
0xac:      44 89 e6                              	mov esi, r12d
0xaf:      48 89 df                              	mov rdi, rbx
0xb2:      e8 81 ea 03 00                        	call 0x3eb38 <pci_choose_state>
0xb7:      89 c6                                 	mov esi, eax
0xb9:      48 89 df                              	mov rdi, rbx
0xbc:      e8 c7 ea 03 00                        	call 0x3eb88 <pci_set_power_state>
0xc1:      85 c0                                 	test eax, eax
0xc3:      74 08                                 	je 0xcd <asv5220_release+0x26>
0xc5:      48 89 df                              	mov rdi, rbx
0xc8:      e8 eb eb 03 00                        	call 0x3ecb8 <pci_disable_device>
0xcd:      b8 00 00 00 00                        	mov eax, 0
0xd2:      5b                                    	pop rbx
0xd3:      41 5c                                 	pop r12
0xd5:      c9                                    	leave 
0xd6:      c3                                    	ret 
; function: asv5220_release at 0xd7 -- 0x23b
0xd7:      55                                    	push rbp
0xd8:      48 89 e5                              	mov rbp, rsp
0xdb:      41 54                                 	push r12
0xdd:      53                                    	push rbx
0xde:      48 83 ec 30                           	sub rsp, 0x30
0xe2:      e8 09 eb 03 00                        	call 0x3ebf0 <mcount>
0xe7:      65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xf0:      48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0xf4:      31 c0                                 	xor eax, eax
0xf6:      c6 45 d0 ad                           	mov byte ptr [rbp - 0x30], 0xad
0xfa:      c6 45 d1 1e                           	mov byte ptr [rbp - 0x2f], 0x1e
0xfe:      c6 45 d2 56                           	mov byte ptr [rbp - 0x2e], 0x56
0x102:     c6 45 d3 a4                           	mov byte ptr [rbp - 0x2d], 0xa4
0x106:     c6 45 d4 e8                           	mov byte ptr [rbp - 0x2c], 0xe8
0x10a:     c6 45 d5 c1                           	mov byte ptr [rbp - 0x2b], 0xc1
0x10e:     c6 45 d6 4c                           	mov byte ptr [rbp - 0x2a], 0x4c
0x112:     c6 45 d7 ce                           	mov byte ptr [rbp - 0x29], 0xce
0x116:     c6 45 d8 90                           	mov byte ptr [rbp - 0x28], 0x90
0x11a:     c6 45 d9 f7                           	mov byte ptr [rbp - 0x27], 0xf7
0x11e:     c6 45 da 33                           	mov byte ptr [rbp - 0x26], 0x33
0x122:     c6 45 db 92                           	mov byte ptr [rbp - 0x25], 0x92
0x126:     c6 45 dc 77                           	mov byte ptr [rbp - 0x24], 0x77
0x12a:     c6 45 dd 14                           	mov byte ptr [rbp - 0x23], 0x14
0x12e:     c6 45 de f8                           	mov byte ptr [rbp - 0x22], 0xf8
0x132:     c6 45 df b9                           	mov byte ptr [rbp - 0x21], 0xb9
0x136:     c6 45 c0 fd                           	mov byte ptr [rbp - 0x40], 0xfd
0x13a:     c6 45 c1 1c                           	mov byte ptr [rbp - 0x3f], 0x1c
0x13e:     c6 45 c2 ef                           	mov byte ptr [rbp - 0x3e], 0xef
0x142:     c6 45 c3 71                           	mov byte ptr [rbp - 0x3d], 0x71
0x146:     c6 45 c4 d3                           	mov byte ptr [rbp - 0x3c], 0xd3
0x14a:     c6 45 c5 69                           	mov byte ptr [rbp - 0x3b], 0x69
0x14e:     c6 45 c6 47                           	mov byte ptr [rbp - 0x3a], 0x47
0x152:     c6 45 c7 54                           	mov byte ptr [rbp - 0x39], 0x54
0x156:     c6 45 c8 ab                           	mov byte ptr [rbp - 0x38], 0xab
0x15a:     c6 45 c9 aa                           	mov byte ptr [rbp - 0x37], 0xaa
0x15e:     c6 45 ca 58                           	mov byte ptr [rbp - 0x36], 0x58
0x162:     c6 45 cb bb                           	mov byte ptr [rbp - 0x35], 0xbb
0x166:     c6 45 cc 62                           	mov byte ptr [rbp - 0x34], 0x62
0x16a:     c6 45 cd 49                           	mov byte ptr [rbp - 0x33], 0x49
0x16e:     c6 45 ce 96                           	mov byte ptr [rbp - 0x32], 0x96
0x172:     c6 45 cf 62                           	mov byte ptr [rbp - 0x31], 0x62
0x176:     48 8b 9e a0 00 00 00                  	mov rbx, qword ptr [rsi + 0xa0]
0x17d:     4c 8b a3 38 1d 00 00                  	mov r12, qword ptr [rbx + 0x1d38]
0x184:     49 81 c4 70 66 00 00                  	add r12, 0x6670
0x18b:     4c 89 e7                              	mov rdi, r12
0x18e:     e8 4d ea 03 00                        	call 0x3ebe0 <mutex_lock>
0x193:     c7 83 e4 29 09 00 00 00 00 00         	mov dword ptr [rbx + 0x929e4], 0
0x19d:     48 8d 83 a4 0d 03 00                  	lea rax, [rbx + 0x30da4]
0x1a4:     48 8d 55 d0                           	lea rdx, [rbp - 0x30]
0x1a8:     48 8b 0a                              	mov rcx, qword ptr [rdx]
0x1ab:     48 89 08                              	mov qword ptr [rax], rcx
0x1ae:     48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0x1b2:     48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x1b6:     48 8d 93 c4 0d 03 00                  	lea rdx, [rbx + 0x30dc4]
0x1bd:     48 8d 45 c0                           	lea rax, [rbp - 0x40]
0x1c1:     48 8b 08                              	mov rcx, qword ptr [rax]
0x1c4:     48 89 0a                              	mov qword ptr [rdx], rcx
0x1c7:     48 8b 48 08                           	mov rcx, qword ptr [rax + 8]
0x1cb:     48 89 4a 08                           	mov qword ptr [rdx + 8], rcx
0x1cf:     48 8d 93 d4 0d 03 00                  	lea rdx, [rbx + 0x30dd4]
0x1d6:     48 8b 08                              	mov rcx, qword ptr [rax]
0x1d9:     48 89 0a                              	mov qword ptr [rdx], rcx
0x1dc:     48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x1e0:     48 89 42 08                           	mov qword ptr [rdx + 8], rax
0x1e4:     c7 83 70 1c 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1c70], 0
0x1ee:     c6 83 60 0d 03 00 01                  	mov byte ptr [rbx + 0x30d60], 1
0x1f5:     c6 83 bc fa 08 00 00                  	mov byte ptr [rbx + 0x8fabc], 0
0x1fc:     48 8b bb b0 fa 08 00                  	mov rdi, qword ptr [rbx + 0x8fab0]
0x203:     e8 76 5f 01 00                        	call 0x1617e <TS_Destroy>
0x208:     48 c7 83 b0 fa 08 00 00 00 00 00      	mov qword ptr [rbx + 0x8fab0], 0
0x213:     c7 83 dc 02 00 00 00 00 00 00         	mov dword ptr [rbx + 0x2dc], 0
0x21d:     c7 83 9c 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x19c], 0
0x227:     48 8d bb a0 01 00 00                  	lea rdi, [rbx + 0x1a0]
0x22e:     b9 27 00 00 00                        	mov ecx, 0x27
0x233:     b8 00 00 00 00                        	mov eax, 0
0x238:     f3 48 ab                              	rep stosq qword ptr [rdi], rax
; function: asv5220_open at 0x23b -- 0x26b
0x23b:     c7 07 00 00 00 00                     	mov dword ptr [rdi], 0
0x241:     4c 89 e7                              	mov rdi, r12
0x244:     e8 3f ea 03 00                        	call 0x3ec88 <mutex_unlock>
0x249:     b8 00 00 00 00                        	mov eax, 0
0x24e:     48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x252:     65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x25b:     74 05                                 	je 0x262 <asv5220_open+0x27>
0x25d:     e8 46 e9 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x262:     48 83 c4 30                           	add rsp, 0x30
0x266:     5b                                    	pop rbx
0x267:     41 5c                                 	pop r12
0x269:     c9                                    	leave 
0x26a:     c3                                    	ret 
; function: asv5220_open at 0x26b -- 0x39c
0x26b:     55                                    	push rbp
0x26c:     48 89 e5                              	mov rbp, rsp
0x26f:     41 57                                 	push r15
0x271:     41 56                                 	push r14
0x273:     41 55                                 	push r13
0x275:     41 54                                 	push r12
0x277:     53                                    	push rbx
0x278:     48 83 ec 18                           	sub rsp, 0x18
0x27c:     e8 6f e9 03 00                        	call 0x3ebf0 <mcount>
0x281:     48 89 75 c0                           	mov qword ptr [rbp - 0x40], rsi
0x285:     44 8b 6f 58                           	mov r13d, dword ptr [rdi + 0x58]
0x289:     44 89 e8                              	mov eax, r13d
0x28c:     c1 e8 14                              	shr eax, 0x14
0x28f:     89 45 cc                              	mov dword ptr [rbp - 0x34], eax
0x292:     41 81 e5 ff ff 0f 00                  	and r13d, 0xfffff
0x299:     48 8b 3d a0 68 03 00                  	mov rdi, qword ptr [rip + 0x368a0]
0x2a0:     48 85 ff                              	test rdi, rdi
0x2a3:     0f 84 0f 01 00 00                     	je 0x3b8
0x2a9:     48 c7 c3 00 00 00 00                  	mov rbx, 0
0x2b0:     41 bc 00 00 00 00                     	mov r12d, 0
0x2b6:     4d 63 f5                              	movsxd r14, r13d
0x2b9:     49 c7 c7 00 00 00 00                  	mov r15, 0
0x2c0:     eb 10                                 	jmp 0x2d2 <asv5220_open+0x67>
0x2c2:     48 8b 3b                              	mov rdi, qword ptr [rbx]
0x2c5:     48 83 c3 08                           	add rbx, 8
0x2c9:     48 85 ff                              	test rdi, rdi
0x2cc:     0f 84 e6 00 00 00                     	je 0x3b8
0x2d2:     8b 87 20 63 00 00                     	mov eax, dword ptr [rdi + 0x6320]
0x2d8:     c1 e8 14                              	shr eax, 0x14
0x2db:     3b 45 cc                              	cmp eax, dword ptr [rbp - 0x34]
0x2de:     0f 85 c3 00 00 00                     	jne 0x3a7
0x2e4:     8b 87 24 63 00 00                     	mov eax, dword ptr [rdi + 0x6324]
0x2ea:     44 39 e8                              	cmp eax, r13d
0x2ed:     0f 87 b4 00 00 00                     	ja 0x3a7
0x2f3:     83 c0 08                              	add eax, 8
0x2f6:     44 39 e8                              	cmp eax, r13d
0x2f9:     0f 86 a8 00 00 00                     	jbe 0x3a7
0x2ff:     48 81 c7 70 66 00 00                  	add rdi, 0x6670
0x306:     e8 d5 e8 03 00                        	call 0x3ebe0 <mutex_lock>
0x30b:     48 8b 7b f8                           	mov rdi, qword ptr [rbx - 8]
0x30f:     48 8b 97 e0 04 00 00                  	mov rdx, qword ptr [rdi + 0x4e0]
0x316:     43 8b 0c b7                           	mov ecx, dword ptr [r15 + r14*4]
0x31a:     39 8a dc 29 09 00                     	cmp dword ptr [rdx + 0x929dc], ecx
0x320:     74 16                                 	je 0x338 <asv5220_open+0xcd>
0x322:     48 89 f8                              	mov rax, rdi
0x325:     48 8d 77 38                           	lea rsi, [rdi + 0x38]
0x329:     48 8b 90 e8 04 00 00                  	mov rdx, qword ptr [rax + 0x4e8]
0x330:     39 8a dc 29 09 00                     	cmp dword ptr [rdx + 0x929dc], ecx
0x336:     75 66                                 	jne 0x39e
0x338:     83 ba e4 29 09 00 01                  	cmp dword ptr [rdx + 0x929e4], 1
0x33f:     75 13                                 	jne 0x354 <asv5220_open+0xe9>
0x341:     48 81 c7 70 66 00 00                  	add rdi, 0x6670
0x348:     e8 3b e9 03 00                        	call 0x3ec88 <mutex_unlock>
0x34d:     b8 fb ff ff ff                        	mov eax, 0xfffffffb
0x352:     eb 69                                 	jmp 0x3bd
0x354:     c7 82 e4 29 09 00 01 00 00 00         	mov dword ptr [rdx + 0x929e4], 1
0x35e:     48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x362:     48 89 90 a0 00 00 00                  	mov qword ptr [rax + 0xa0], rdx
0x369:     48 8d 9a b8 29 09 00                  	lea rbx, [rdx + 0x929b8]
0x370:     48 89 df                              	mov rdi, rbx
0x373:     e8 68 e8 03 00                        	call 0x3ebe0 <mutex_lock>
0x378:     48 89 df                              	mov rdi, rbx
0x37b:     e8 08 e9 03 00                        	call 0x3ec88 <mutex_unlock>
0x380:     4d 63 e4                              	movsxd r12, r12d
0x383:     4a 8b 3c e5 00 00 00 00               	mov rdi, qword ptr [r12*8]
0x38b:     48 81 c7 70 66 00 00                  	add rdi, 0x6670
0x392:     e8 f1 e8 03 00                        	call 0x3ec88 <mutex_unlock>
0x397:     b8 00 00 00 00                        	mov eax, 0
; function: asv5220_ioctl at 0x39c -- 0x3cc
0x39c:     eb 1f                                 	jmp 0x3bd <asv5220_ioctl+0x21>
0x39e:     48 83 c0 08                           	add rax, 8
0x3a2:     48 39 f0                              	cmp rax, rsi
0x3a5:     75 82                                 	jne 0x329
0x3a7:     41 83 c4 01                           	add r12d, 1
0x3ab:     41 81 fc 80 00 00 00                  	cmp r12d, 0x80
0x3b2:     0f 85 0a ff ff ff                     	jne 0x2c2
0x3b8:     b8 fb ff ff ff                        	mov eax, 0xfffffffb
0x3bd:     48 83 c4 18                           	add rsp, 0x18
0x3c1:     5b                                    	pop rbx
0x3c2:     41 5c                                 	pop r12
0x3c4:     41 5d                                 	pop r13
0x3c6:     41 5e                                 	pop r14
0x3c8:     41 5f                                 	pop r15
0x3ca:     c9                                    	leave 
0x3cb:     c3                                    	ret 
; function: asv5220_ioctl at 0x3cc -- 0x9da
0x3cc:     55                                    	push rbp
0x3cd:     48 89 e5                              	mov rbp, rsp
0x3d0:     41 55                                 	push r13
0x3d2:     41 54                                 	push r12
0x3d4:     53                                    	push rbx
0x3d5:     48 81 ec 08 02 00 00                  	sub rsp, 0x208
0x3dc:     e8 0f e8 03 00                        	call 0x3ebf0 <mcount>
0x3e1:     49 89 cc                              	mov r12, rcx
0x3e4:     65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x3ed:     48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x3f1:     31 c0                                 	xor eax, eax
0x3f3:     48 8b 9e a0 00 00 00                  	mov rbx, qword ptr [rsi + 0xa0]
0x3fa:     48 8b bb 38 1d 00 00                  	mov rdi, qword ptr [rbx + 0x1d38]
0x401:     49 89 fd                              	mov r13, rdi
0x404:     81 fa 84 8d 08 40                     	cmp edx, 0x40088d84
0x40a:     0f 84 b6 03 00 00                     	je 0x7c6 <asv5220_ioctl+0x3fa>
0x410:     81 fa 84 8d 08 40                     	cmp edx, 0x40088d84
0x416:     77 5a                                 	ja 0x472 <asv5220_ioctl+0xa6>
0x418:     81 fa 06 8d 00 00                     	cmp edx, 0x8d06
0x41e:     0f 84 c1 02 00 00                     	je 0x6e5 <asv5220_ioctl+0x319>
0x424:     81 fa 06 8d 00 00                     	cmp edx, 0x8d06
0x42a:     77 1d                                 	ja 0x449 <asv5220_ioctl+0x7d>
0x42c:     81 fa 02 8d 00 00                     	cmp edx, 0x8d02
0x432:     0f 84 ec 01 00 00                     	je 0x624 <asv5220_ioctl+0x258>
0x438:     81 fa 03 8d 00 00                     	cmp edx, 0x8d03
0x43e:     0f 85 98 05 00 00                     	jne 0x9dc
0x444:     e9 15 02 00 00                        	jmp 0x65e <asv5220_ioctl+0x292>
0x449:     81 fa 01 8d 08 40                     	cmp edx, 0x40088d01
0x44f:     0f 84 83 00 00 00                     	je 0x4d8 <asv5220_ioctl+0x10c>
0x455:     81 fa 83 8d 08 40                     	cmp edx, 0x40088d83
0x45b:     0f 84 1f 03 00 00                     	je 0x780 <asv5220_ioctl+0x3b4>
0x461:     81 fa 05 8d 04 40                     	cmp edx, 0x40048d05
0x467:     0f 85 6f 05 00 00                     	jne 0x9dc
0x46d:     e9 53 02 00 00                        	jmp 0x6c5 <asv5220_ioctl+0x2f9>
0x472:     81 fa 81 8d 08 80                     	cmp edx, 0x80088d81
0x478:     0f 84 87 02 00 00                     	je 0x705 <asv5220_ioctl+0x339>
0x47e:     81 fa 81 8d 08 80                     	cmp edx, 0x80088d81
0x484:     77 29                                 	ja 0x4af <asv5220_ioctl+0xe3>
0x486:     81 fa 87 8d 08 40                     	cmp edx, 0x40088d87
0x48c:     0f 84 20 04 00 00                     	je 0x8b2 <asv5220_ioctl+0x4e6>
0x492:     81 fa 04 8d 08 80                     	cmp edx, 0x80088d04
0x498:     0f 84 e6 01 00 00                     	je 0x684 <asv5220_ioctl+0x2b8>
0x49e:     81 fa 86 8d 08 40                     	cmp edx, 0x40088d86
0x4a4:     0f 85 32 05 00 00                     	jne 0x9dc
0x4aa:     e9 d4 03 00 00                        	jmp 0x883 <asv5220_ioctl+0x4b7>
0x4af:     81 fa 85 8d 08 80                     	cmp edx, 0x80088d85
0x4b5:     0f 84 3b 03 00 00                     	je 0x7f6 <asv5220_ioctl+0x42a>
0x4bb:     81 fa 88 8d 08 80                     	cmp edx, 0x80088d88
0x4c1:     0f 84 82 04 00 00                     	je 0x949 <asv5220_ioctl+0x57d>
0x4c7:     81 fa 82 8d 08 80                     	cmp edx, 0x80088d82
0x4cd:     0f 85 09 05 00 00                     	jne 0x9dc
0x4d3:     e9 8a 02 00 00                        	jmp 0x762 <asv5220_ioctl+0x396>
0x4d8:     48 8d bd 60 fe ff ff                  	lea rdi, [rbp - 0x1a0]
0x4df:     ba 08 00 00 00                        	mov edx, 8
0x4e4:     48 89 ce                              	mov rsi, rcx
0x4e7:     e8 24 e6 03 00                        	call 0x3eb10 <copy_from_user>
0x4ec:     8b 83 d8 29 09 00                     	mov eax, dword ptr [rbx + 0x929d8]
0x4f2:     85 c0                                 	test eax, eax
0x4f4:     74 37                                 	je 0x52d <asv5220_ioctl+0x161>
0x4f6:     83 f8 01                              	cmp eax, 1
0x4f9:     0f 85 d8 00 00 00                     	jne 0x5d7 <asv5220_ioctl+0x20b>
0x4ff:     48 8b 35 62 18 03 00                  	mov rsi, qword ptr [rip + 0x31862]
0x506:     48 85 f6                              	test rsi, rsi
0x509:     0f 84 c8 00 00 00                     	je 0x5d7 <asv5220_ioctl+0x20b>
0x50f:     8b 8d 60 fe ff ff                     	mov ecx, dword ptr [rbp - 0x1a0]
0x515:     48 c7 c0 00 00 00 00                  	mov rax, 0
0x51c:     39 0d 3e 18 03 00                     	cmp dword ptr [rip + 0x3183e], ecx
0x522:     0f 85 98 00 00 00                     	jne 0x5c0 <asv5220_ioctl+0x1f4>
0x528:     e9 8c 00 00 00                        	jmp 0x5b9 <asv5220_ioctl+0x1ed>
0x52d:     48 8b 35 94 16 03 00                  	mov rsi, qword ptr [rip + 0x31694]
0x534:     48 85 f6                              	test rsi, rsi
0x537:     74 40                                 	je 0x579 <asv5220_ioctl+0x1ad>
0x539:     8b 8d 60 fe ff ff                     	mov ecx, dword ptr [rbp - 0x1a0]
0x53f:     48 c7 c0 00 00 00 00                  	mov rax, 0
0x546:     39 0d 74 16 03 00                     	cmp dword ptr [rip + 0x31674], ecx
0x54c:     75 14                                 	jne 0x562 <asv5220_ioctl+0x196>
0x54e:     eb 0b                                 	jmp 0x55b <asv5220_ioctl+0x18f>
0x550:     8b 50 f8                              	mov edx, dword ptr [rax - 8]
0x553:     48 83 c0 10                           	add rax, 0x10
0x557:     39 d1                                 	cmp ecx, edx
0x559:     75 07                                 	jne 0x562 <asv5220_ioctl+0x196>
0x55b:     48 85 f6                              	test rsi, rsi
0x55e:     75 0c                                 	jne 0x56c <asv5220_ioctl+0x1a0>
0x560:     eb 17                                 	jmp 0x579 <asv5220_ioctl+0x1ad>
0x562:     48 8b 30                              	mov rsi, qword ptr [rax]
0x565:     48 85 f6                              	test rsi, rsi
0x568:     75 e6                                 	jne 0x550 <asv5220_ioctl+0x184>
0x56a:     eb 0d                                 	jmp 0x579 <asv5220_ioctl+0x1ad>
0x56c:     ba 06 00 00 00                        	mov edx, 6
0x571:     48 89 df                              	mov rdi, rbx
0x574:     e8 79 0d 01 00                        	call 0x112f2 <DTV_SetTunerFreq>
0x579:     48 8d b5 e0 fd ff ff                  	lea rsi, [rbp - 0x220]
0x580:     ba 10 00 00 00                        	mov edx, 0x10
0x585:     48 89 df                              	mov rdi, rbx
0x588:     e8 c7 bc 00 00                        	call 0xc254 <DTV_GetTunerTSIDList>
0x58d:     48 63 85 64 fe ff ff                  	movsxd rax, dword ptr [rbp - 0x19c]
0x594:     8b b4 85 e0 fd ff ff                  	mov esi, dword ptr [rbp + rax*4 - 0x220]
0x59b:     85 f6                                 	test esi, esi
0x59d:     74 38                                 	je 0x5d7 <asv5220_ioctl+0x20b>
0x59f:     ba 00 00 00 00                        	mov edx, 0
0x5a4:     48 89 df                              	mov rdi, rbx
0x5a7:     e8 9c b9 00 00                        	call 0xbf48 <DTV_SetTunerTSID>
0x5ac:     eb 29                                 	jmp 0x5d7 <asv5220_ioctl+0x20b>
0x5ae:     8b 50 f8                              	mov edx, dword ptr [rax - 8]
0x5b1:     48 83 c0 10                           	add rax, 0x10
0x5b5:     39 d1                                 	cmp ecx, edx
0x5b7:     75 07                                 	jne 0x5c0 <asv5220_ioctl+0x1f4>
0x5b9:     48 85 f6                              	test rsi, rsi
0x5bc:     75 0c                                 	jne 0x5ca <asv5220_ioctl+0x1fe>
0x5be:     eb 17                                 	jmp 0x5d7 <asv5220_ioctl+0x20b>
0x5c0:     48 8b 30                              	mov rsi, qword ptr [rax]
0x5c3:     48 85 f6                              	test rsi, rsi
0x5c6:     75 e6                                 	jne 0x5ae <asv5220_ioctl+0x1e2>
0x5c8:     eb 0d                                 	jmp 0x5d7 <asv5220_ioctl+0x20b>
0x5ca:     ba 06 00 00 00                        	mov edx, 6
0x5cf:     48 89 df                              	mov rdi, rbx
0x5d2:     e8 1b 0d 01 00                        	call 0x112f2 <DTV_SetTunerFreq>
0x5d7:     c7 83 e8 29 09 00 05 00 00 00         	mov dword ptr [rbx + 0x929e8], 5
0x5e1:     41 bc 00 00 00 00                     	mov r12d, 0
0x5e7:     41 83 c4 01                           	add r12d, 1
0x5eb:     bf 32 00 00 00                        	mov edi, 0x32
0x5f0:     e8 70 4e 01 00                        	call 0x15465 <vUSB_Wait>
0x5f5:     48 89 df                              	mov rdi, rbx
0x5f8:     e8 67 05 01 00                        	call 0x10b64 <DTV_TunerLockCheck>
0x5fd:     85 c0                                 	test eax, eax
0x5ff:     75 06                                 	jne 0x607 <asv5220_ioctl+0x23b>
0x601:     41 83 fc 31                           	cmp r12d, 0x31
0x605:     7e e0                                 	jle 0x5e7 <asv5220_ioctl+0x21b>
0x607:     83 f8 01                              	cmp eax, 1
0x60a:     0f 85 cc 03 00 00                     	jne 0x9dc
0x610:     bf 2c 01 00 00                        	mov edi, 0x12c
0x615:     e8 4b 4e 01 00                        	call 0x15465 <vUSB_Wait>
0x61a:     b8 00 00 00 00                        	mov eax, 0
0x61f:     e9 c4 03 00 00                        	jmp 0x9e8
0x624:     0f b6 83 30 1d 00 00                  	movzx eax, byte ptr [rbx + 0x1d30]
0x62b:     c6 84 07 78 03 00 00 01               	mov byte ptr [rdi + rax + 0x378], 1
0x633:     48 89 df                              	mov rdi, rbx
0x636:     e8 8f 03 01 00                        	call 0x109ca <DTV_StreamThreadRun>
0x63b:     c7 83 e8 29 09 00 05 00 00 00         	mov dword ptr [rbx + 0x929e8], 5
0x645:     0f b6 b3 30 1d 00 00                  	movzx esi, byte ptr [rbx + 0x1d30]
0x64c:     4c 89 ef                              	mov rdi, r13
0x64f:     e8 10 4e 00 00                        	call 0x5464 <vCleanStreamBuffer>
0x654:     b8 00 00 00 00                        	mov eax, 0
0x659:     e9 8a 03 00 00                        	jmp 0x9e8
0x65e:     0f b6 83 30 1d 00 00                  	movzx eax, byte ptr [rbx + 0x1d30]
0x665:     c6 84 07 78 03 00 00 00               	mov byte ptr [rdi + rax + 0x378], 0
0x66d:     be 00 00 00 00                        	mov esi, 0
0x672:     48 89 df                              	mov rdi, rbx
0x675:     e8 02 08 01 00                        	call 0x10e7c <DTV_StreamThreadStop>
0x67a:     b8 00 00 00 00                        	mov eax, 0
0x67f:     e9 64 03 00 00                        	jmp 0x9e8
0x684:     48 8d 95 58 fe ff ff                  	lea rdx, [rbp - 0x1a8]
0x68b:     0f b6 b3 30 1d 00 00                  	movzx esi, byte ptr [rbx + 0x1d30]
0x692:     48 89 df                              	mov rdi, rbx
0x695:     e8 cc ab 00 00                        	call 0xb266 <DTV_GetCNRegisterValue>
0x69a:     48 8b 85 58 fe ff ff                  	mov rax, qword ptr [rbp - 0x1a8]
0x6a1:     89 85 6c fe ff ff                     	mov dword ptr [rbp - 0x194], eax
0x6a7:     48 8d b5 6c fe ff ff                  	lea rsi, [rbp - 0x194]
0x6ae:     ba 04 00 00 00                        	mov edx, 4
0x6b3:     4c 89 e7                              	mov rdi, r12
0x6b6:     e8 3d e5 03 00                        	call 0x3ebf8 <copy_to_user>
0x6bb:     b8 00 00 00 00                        	mov eax, 0
0x6c0:     e9 23 03 00 00                        	jmp 0x9e8
0x6c5:     48 8d 8f 60 59 00 00                  	lea rcx, [rdi + 0x5960]
0x6cc:     ba 01 00 00 00                        	mov edx, 1
0x6d1:     be 00 00 00 00                        	mov esi, 0
0x6d6:     e8 5a 6a 00 00                        	call 0x7135 <TC_SetLNB>
0x6db:     b8 00 00 00 00                        	mov eax, 0
0x6e0:     e9 03 03 00 00                        	jmp 0x9e8
0x6e5:     48 8d 8f 60 59 00 00                  	lea rcx, [rdi + 0x5960]
0x6ec:     ba 00 00 00 00                        	mov edx, 0
0x6f1:     be 00 00 00 00                        	mov esi, 0
0x6f6:     e8 3a 6a 00 00                        	call 0x7135 <TC_SetLNB>
0x6fb:     b8 00 00 00 00                        	mov eax, 0
0x700:     e9 e3 02 00 00                        	jmp 0x9e8
0x705:     c7 85 6c fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x194], 0
0x70f:     80 bb ec 15 00 00 00                  	cmp byte ptr [rbx + 0x15ec], 0
0x716:     b8 01 00 00 00                        	mov eax, 1
0x71b:     0f 44 85 6c fe ff ff                  	cmove eax, dword ptr [rbp - 0x194]
0x722:     83 c8 02                              	or eax, 2
0x725:     89 85 6c fe ff ff                     	mov dword ptr [rbp - 0x194], eax
0x72b:     80 bb 8d 14 00 00 00                  	cmp byte ptr [rbx + 0x148d], 0
0x732:     74 09                                 	je 0x73d <asv5220_ioctl+0x371>
0x734:     83 c8 04                              	or eax, 4
0x737:     89 85 6c fe ff ff                     	mov dword ptr [rbp - 0x194], eax
0x73d:     83 8d 6c fe ff ff 40                  	or dword ptr [rbp - 0x194], 0x40
0x744:     48 8d b5 6c fe ff ff                  	lea rsi, [rbp - 0x194]
0x74b:     ba 01 00 00 00                        	mov edx, 1
0x750:     4c 89 e7                              	mov rdi, r12
0x753:     e8 a0 e4 03 00                        	call 0x3ebf8 <copy_to_user>
0x758:     b8 00 00 00 00                        	mov eax, 0
0x75d:     e9 86 02 00 00                        	jmp 0x9e8
0x762:     48 8d b3 ed 15 00 00                  	lea rsi, [rbx + 0x15ed]
0x769:     ba 10 00 00 00                        	mov edx, 0x10
0x76e:     48 89 cf                              	mov rdi, rcx
0x771:     e8 82 e4 03 00                        	call 0x3ebf8 <copy_to_user>
0x776:     b8 00 00 00 00                        	mov eax, 0
0x77b:     e9 68 02 00 00                        	jmp 0x9e8
0x780:     48 8d bd 20 fe ff ff                  	lea rdi, [rbp - 0x1e0]
0x787:     ba 20 00 00 00                        	mov edx, 0x20
0x78c:     48 89 ce                              	mov rsi, rcx
0x78f:     e8 7c e3 03 00                        	call 0x3eb10 <copy_from_user>
0x794:     0f b6 95 28 fe ff ff                  	movzx edx, byte ptr [rbp - 0x1d8]
0x79b:     44 0f b6 85 38 fe ff ff               	movzx r8d, byte ptr [rbp - 0x1c8]
0x7a3:     48 8b 8d 30 fe ff ff                  	mov rcx, qword ptr [rbp - 0x1d0]
0x7aa:     48 8b b5 20 fe ff ff                  	mov rsi, qword ptr [rbp - 0x1e0]
0x7b1:     48 89 df                              	mov rdi, rbx
0x7b4:     e8 09 29 01 00                        	call 0x130c2 <DTV_GenEncSeed>
0x7b9:     3c 01                                 	cmp al, 1
0x7bb:     0f 84 22 02 00 00                     	je 0x9e3
0x7c1:     e9 16 02 00 00                        	jmp 0x9dc
0x7c6:     4c 8d 6d c0                           	lea r13, [rbp - 0x40]
0x7ca:     ba 11 00 00 00                        	mov edx, 0x11
0x7cf:     48 89 ce                              	mov rsi, rcx
0x7d2:     4c 89 ef                              	mov rdi, r13
0x7d5:     e8 36 e3 03 00                        	call 0x3eb10 <copy_from_user>
0x7da:     0f b6 55 d0                           	movzx edx, byte ptr [rbp - 0x30]
0x7de:     4c 89 ee                              	mov rsi, r13
0x7e1:     48 89 df                              	mov rdi, rbx
0x7e4:     e8 c2 d0 00 00                        	call 0xd8ab <DTV_Muli2LibEnable>
0x7e9:     3c 01                                 	cmp al, 1
0x7eb:     0f 84 f2 01 00 00                     	je 0x9e3
0x7f1:     e9 e6 01 00 00                        	jmp 0x9dc
0x7f6:     0f b6 83 a1 0d 03 00                  	movzx eax, byte ptr [rbx + 0x30da1]
0x7fd:     3c 01                                 	cmp al, 1
0x7ff:     0f 84 de 01 00 00                     	je 0x9e3
0x805:     80 bb e4 0d 03 00 01                  	cmp byte ptr [rbx + 0x30de4], 1
0x80c:     0f 85 d1 01 00 00                     	jne 0x9e3
0x812:     84 c0                                 	test al, al
0x814:     0f 85 c9 01 00 00                     	jne 0x9e3
0x81a:     69 79 10 bc 00 00 00                  	imul edi, dword ptr [rcx + 0x10], 0xbc
0x821:     48 63 ff                              	movsxd rdi, edi
0x824:     be 20 00 00 00                        	mov esi, 0x20
0x829:     e8 c2 e4 03 00                        	call 0x3ecf0 <__kmalloc>
0x82e:     49 89 c5                              	mov r13, rax
0x831:     41 8b 54 24 10                        	mov edx, dword ptr [r12 + 0x10]
0x836:     48 89 c1                              	mov rcx, rax
0x839:     49 8b 34 24                           	mov rsi, qword ptr [r12]
0x83d:     48 89 df                              	mov rdi, rbx
0x840:     e8 53 e5 00 00                        	call 0xed98 <DTV_DecrypMultiTS>
0x845:     3c 01                                 	cmp al, 1
0x847:     75 28                                 	jne 0x871 <asv5220_ioctl+0x4a5>
0x849:     41 69 54 24 10 bc 00 00 00            	imul edx, dword ptr [r12 + 0x10], 0xbc
0x852:     49 8b 7c 24 08                        	mov rdi, qword ptr [r12 + 8]
0x857:     4c 89 ee                              	mov rsi, r13
0x85a:     e8 99 e3 03 00                        	call 0x3ebf8 <copy_to_user>
0x85f:     4c 89 ef                              	mov rdi, r13
0x862:     e8 11 e3 03 00                        	call 0x3eb78 <kfree>
0x867:     b8 00 00 00 00                        	mov eax, 0
0x86c:     e9 77 01 00 00                        	jmp 0x9e8
0x871:     4c 89 ef                              	mov rdi, r13
0x874:     e8 ff e2 03 00                        	call 0x3eb78 <kfree>
0x879:     b8 ea ff ff ff                        	mov eax, 0xffffffea
0x87e:     e9 65 01 00 00                        	jmp 0x9e8
0x883:     48 8d bd 40 fe ff ff                  	lea rdi, [rbp - 0x1c0]
0x88a:     ba 10 00 00 00                        	mov edx, 0x10
0x88f:     48 89 ce                              	mov rsi, rcx
0x892:     e8 79 e2 03 00                        	call 0x3eb10 <copy_from_user>
0x897:     8b b5 40 fe ff ff                     	mov esi, dword ptr [rbp - 0x1c0]
0x89d:     48 89 df                              	mov rdi, rbx
0x8a0:     e8 42 b9 00 00                        	call 0xc1e7 <DTV_SetProgramID>
0x8a5:     3c 01                                 	cmp al, 1
0x8a7:     0f 84 36 01 00 00                     	je 0x9e3
0x8ad:     e9 2a 01 00 00                        	jmp 0x9dc
0x8b2:     48 8d bd 70 fe ff ff                  	lea rdi, [rbp - 0x190]
0x8b9:     ba 42 01 00 00                        	mov edx, 0x142
0x8be:     48 89 ce                              	mov rsi, rcx
0x8c1:     e8 4a e2 03 00                        	call 0x3eb10 <copy_from_user>
0x8c6:     80 bb 60 0d 03 00 01                  	cmp byte ptr [rbx + 0x30d60], 1
0x8cd:     0f 84 09 01 00 00                     	je 0x9dc
0x8d3:     80 bb 8d 14 00 00 01                  	cmp byte ptr [rbx + 0x148d], 1
0x8da:     19 c0                                 	sbb eax, eax
0x8dc:     24 3d                                 	and al, 0x3d
0x8de:     05 ff 00 00 00                        	add eax, 0xff
0x8e3:     0f b6 8d 71 fe ff ff                  	movzx ecx, byte ptr [rbp - 0x18f]
0x8ea:     39 c8                                 	cmp eax, ecx
0x8ec:     0f 82 ea 00 00 00                     	jb 0x9dc
0x8f2:     49 8b bd e0 04 00 00                  	mov rdi, qword ptr [r13 + 0x4e0]
0x8f9:     80 bb 30 1d 00 00 00                  	cmp byte ptr [rbx + 0x1d30], 0
0x900:     75 1e                                 	jne 0x920 <asv5220_ioctl+0x554>
0x902:     48 85 ff                              	test rdi, rdi
0x905:     0f 84 d1 00 00 00                     	je 0x9dc
0x90b:     48 8d 95 72 fe ff ff                  	lea rdx, [rbp - 0x18e]
0x912:     48 83 c7 08                           	add rdi, 8
0x916:     48 89 de                              	mov rsi, rbx
0x919:     e8 db b9 00 00                        	call 0xc2f9 <BCAS_CMDSet_Ext>
0x91e:     eb 1c                                 	jmp 0x93c <asv5220_ioctl+0x570>
0x920:     48 85 ff                              	test rdi, rdi
0x923:     0f 84 b3 00 00 00                     	je 0x9dc
0x929:     48 8d 95 72 fe ff ff                  	lea rdx, [rbp - 0x18e]
0x930:     48 83 c7 08                           	add rdi, 8
0x934:     48 89 de                              	mov rsi, rbx
0x937:     e8 bd b9 00 00                        	call 0xc2f9 <BCAS_CMDSet_Ext>
0x93c:     3c 01                                 	cmp al, 1
0x93e:     0f 84 9f 00 00 00                     	je 0x9e3
0x944:     e9 93 00 00 00                        	jmp 0x9dc
0x949:     80 bb 30 1d 00 00 00                  	cmp byte ptr [rbx + 0x1d30], 0
0x950:     75 23                                 	jne 0x975 <asv5220_ioctl+0x5a9>
0x952:     48 8d 95 70 fe ff ff                  	lea rdx, [rbp - 0x190]
0x959:     48 8d 4a 01                           	lea rcx, [rdx + 1]
0x95d:     48 8d 7b 08                           	lea rdi, [rbx + 8]
0x961:     41 b9 40 01 00 00                     	mov r9d, 0x140
0x967:     4c 8d 42 02                           	lea r8, [rdx + 2]
0x96b:     48 89 de                              	mov rsi, rbx
0x96e:     e8 ec ba 00 00                        	call 0xc45f <BCAS_CMDGet_Ext>
0x973:     eb 2d                                 	jmp 0x9a2 <asv5220_ioctl+0x5d6>
0x975:     48 8b bf e0 04 00 00                  	mov rdi, qword ptr [rdi + 0x4e0]
0x97c:     48 85 ff                              	test rdi, rdi
0x97f:     74 40                                 	je 0x9c1 <asv5220_ioctl+0x5f5>
0x981:     48 8d 95 70 fe ff ff                  	lea rdx, [rbp - 0x190]
0x988:     48 8d 4a 01                           	lea rcx, [rdx + 1]
0x98c:     48 83 c7 08                           	add rdi, 8
0x990:     41 b9 40 01 00 00                     	mov r9d, 0x140
0x996:     4c 8d 42 02                           	lea r8, [rdx + 2]
0x99a:     48 89 de                              	mov rsi, rbx
0x99d:     e8 bd ba 00 00                        	call 0xc45f <BCAS_CMDGet_Ext>
0x9a2:     3c 01                                 	cmp al, 1
0x9a4:     75 1b                                 	jne 0x9c1 <asv5220_ioctl+0x5f5>
0x9a6:     48 8d b5 70 fe ff ff                  	lea rsi, [rbp - 0x190]
0x9ad:     ba 42 01 00 00                        	mov edx, 0x142
0x9b2:     4c 89 e7                              	mov rdi, r12
0x9b5:     e8 3e e2 03 00                        	call 0x3ebf8 <copy_to_user>
0x9ba:     b8 00 00 00 00                        	mov eax, 0
0x9bf:     eb 27                                 	jmp 0x9e8
0x9c1:     48 8d b5 70 fe ff ff                  	lea rsi, [rbp - 0x190]
0x9c8:     ba 42 01 00 00                        	mov edx, 0x142
0x9cd:     4c 89 e7                              	mov rdi, r12
0x9d0:     e8 23 e2 03 00                        	call 0x3ebf8 <copy_to_user>
0x9d5:     b8 ea ff ff ff                        	mov eax, 0xffffffea
; function: asv5220_read at 0x9da -- 0xa0a
0x9da:     eb 0c                                 	jmp 0x9e8 <asv5220_read+0xe>
0x9dc:     b8 ea ff ff ff                        	mov eax, 0xffffffea
0x9e1:     eb 05                                 	jmp 0x9e8 <asv5220_read+0xe>
0x9e3:     b8 00 00 00 00                        	mov eax, 0
0x9e8:     48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x9ec:     65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x9f5:     74 05                                 	je 0x9fc <asv5220_read+0x22>
0x9f7:     e8 ac e1 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x9fc:     48 81 c4 08 02 00 00                  	add rsp, 0x208
0xa03:     5b                                    	pop rbx
0xa04:     41 5c                                 	pop r12
0xa06:     41 5d                                 	pop r13
0xa08:     c9                                    	leave 
0xa09:     c3                                    	ret 
; function: asv5220_read at 0xa0a -- 0xa9f
0xa0a:     55                                    	push rbp
0xa0b:     48 89 e5                              	mov rbp, rsp
0xa0e:     41 57                                 	push r15
0xa10:     41 56                                 	push r14
0xa12:     41 55                                 	push r13
0xa14:     41 54                                 	push r12
0xa16:     53                                    	push rbx
0xa17:     48 83 ec 08                           	sub rsp, 8
0xa1b:     e8 d0 e1 03 00                        	call 0x3ebf0 <mcount>
0xa20:     49 89 f7                              	mov r15, rsi
0xa23:     49 89 d4                              	mov r12, rdx
0xa26:     4c 8b b7 a0 00 00 00                  	mov r14, qword ptr [rdi + 0xa0]
0xa2d:     49 8b 86 38 1d 00 00                  	mov rax, qword ptr [r14 + 0x1d38]
0xa34:     41 0f b6 96 30 1d 00 00               	movzx edx, byte ptr [r14 + 0x1d30]
0xa3c:     4c 8b ac d0 88 04 00 00               	mov r13, qword ptr [rax + rdx*8 + 0x488]
0xa44:     bb 00 00 00 00                        	mov ebx, 0
0xa49:     eb 15                                 	jmp 0xa60 <asv5220_read+0x56>
0xa4b:     83 c3 01                              	add ebx, 1
0xa4e:     bf 01 00 00 00                        	mov edi, 1
0xa53:     e8 0d 4a 01 00                        	call 0x15465 <vUSB_Wait>
0xa58:     81 fb f5 01 00 00                     	cmp ebx, 0x1f5
0xa5e:     74 09                                 	je 0xa69 <asv5220_read+0x5f>
0xa60:     4d 39 a5 28 01 00 00                  	cmp qword ptr [r13 + 0x128], r12
0xa67:     72 e2                                 	jb 0xa4b <asv5220_read+0x41>
0xa69:     be 20 00 00 00                        	mov esi, 0x20
0xa6e:     4c 89 e7                              	mov rdi, r12
0xa71:     e8 7a e2 03 00                        	call 0x3ecf0 <__kmalloc>
0xa76:     49 89 c5                              	mov r13, rax
0xa79:     44 89 e2                              	mov edx, r12d
0xa7c:     48 89 c6                              	mov rsi, rax
0xa7f:     4c 89 f7                              	mov rdi, r14
0xa82:     e8 2c f8 00 00                        	call 0x102b3 <DTV_StreamDataRead>
0xa87:     bb 00 00 00 00                        	mov ebx, 0
0xa8c:     85 c0                                 	test eax, eax
0xa8e:     78 0f                                 	js 0xa9f <asv5220_read+0x90>
0xa90:     89 c3                                 	mov ebx, eax
0xa92:     89 c2                                 	mov edx, eax
0xa94:     4c 89 ee                              	mov rsi, r13
0xa97:     4c 89 ff                              	mov rdi, r15
0xa9a:     e8 59 e1 03 00                        	call 0x3ebf8 <copy_to_user>
; data inside code section at 0xa9f -- 0xaa4
0xa9f:     41 8b 86 e8 29                                     |A...)           |
; function: SmiDrvDispatchPnpStartComplete at 0xaa4 -- 0xab4
0xaa4:     09 00                                 	or dword ptr [rax], eax
0xaa6:     85 c0                                 	test eax, eax
0xaa8:     7e 0f                                 	jle 0xab9
0xaaa:     83 e8 01                              	sub eax, 1
0xaad:     41 89 86 e8 29 09 00                  	mov dword ptr [r14 + 0x929e8], eax
; function: SmiGetDeviceInformation at 0xab4 -- 0xab9
0xab4:     bb 00 00 00 00                        	mov ebx, 0
; data inside code section at 0xab9 -- 0xac4
0xab9:     4c 89 ef e8 b7 e0 03 00  89 d8 48                  |L.........H     |
; function: GetPCIBusInterfaceStandard at 0xac4 -- 0xad2
0xac4:     83 c4 08                              	add esp, 8
0xac7:     5b                                    	pop rbx
0xac8:     41 5c                                 	pop r12
0xaca:     41 5d                                 	pop r13
0xacc:     41 5e                                 	pop r14
0xace:     41 5f                                 	pop r15
0xad0:     c9                                    	leave 
0xad1:     c3                                    	ret 
; data inside code section at 0xad2 -- 0xad4
0xad2:     90 90                                              |..              |
; function: SmiCalculateTotalMemSize at 0xad4 -- 0xae4
0xad4:     55                                    	push rbp
0xad5:     48 89 e5                              	mov rbp, rsp
0xad8:     e8 13 e1 03 00                        	call 0x3ebf0 <mcount>
0xadd:     b8 00 00 00 00                        	mov eax, 0
0xae2:     c9                                    	leave 
0xae3:     c3                                    	ret 
; function: SmiGetDeviceInformation at 0xae4 -- 0xaf4
0xae4:     55                                    	push rbp
0xae5:     48 89 e5                              	mov rbp, rsp
0xae8:     e8 03 e1 03 00                        	call 0x3ebf0 <mcount>
0xaed:     b8 01 00 00 00                        	mov eax, 1
0xaf2:     c9                                    	leave 
0xaf3:     c3                                    	ret 
; function: GetPCIBusInterfaceStandard at 0xaf4 -- 0xb04
0xaf4:     55                                    	push rbp
0xaf5:     48 89 e5                              	mov rbp, rsp
0xaf8:     e8 f3 e0 03 00                        	call 0x3ebf0 <mcount>
0xafd:     b8 01 00 00 00                        	mov eax, 1
0xb02:     c9                                    	leave 
0xb03:     c3                                    	ret 
; function: SmiCalculateTotalMemSize at 0xb04 -- 0xb27
0xb04:     55                                    	push rbp
0xb05:     48 89 e5                              	mov rbp, rsp
0xb08:     e8 e3 e0 03 00                        	call 0x3ebf0 <mcount>
0xb0d:     83 bf e8 58 00 00 0e                  	cmp dword ptr [rdi + 0x58e8], 0xe
0xb14:     0f 87 c3 01 00 00                     	ja 0xcdd <SmiCalculateTotalMemSize+0x1c>
0xb1a:     8b 87 e8 58 00 00                     	mov eax, dword ptr [rdi + 0x58e8]
0xb20:     ff 24 c5 00 00 00 00                  	jmp qword ptr [rax*8]
; function: function_b27 at 0xb27 -- 0xb45
0xb27:     48 c7 87 e0 58 00 00 20 e5 00 00      	mov qword ptr [rdi + 0x58e0], 0xe520
0xb32:     c6 87 ec 58 00 00 01                  	mov byte ptr [rdi + 0x58ec], 1
0xb39:     c6 87 ed 58 00 00 00                  	mov byte ptr [rdi + 0x58ed], 0
0xb40:     e9 b1 01 00 00                        	jmp 0xcf6
; function: function_b45 at 0xb45 -- 0xb63
0xb45:     48 c7 87 e0 58 00 00 20 e5 00 00      	mov qword ptr [rdi + 0x58e0], 0xe520
0xb50:     c6 87 ec 58 00 00 02                  	mov byte ptr [rdi + 0x58ec], 2
0xb57:     c6 87 ed 58 00 00 00                  	mov byte ptr [rdi + 0x58ed], 0
0xb5e:     e9 93 01 00 00                        	jmp 0xcf6
; function: function_b63 at 0xb63 -- 0xb81
0xb63:     48 c7 87 e0 58 00 00 20 e5 00 00      	mov qword ptr [rdi + 0x58e0], 0xe520
0xb6e:     c6 87 ec 58 00 00 00                  	mov byte ptr [rdi + 0x58ec], 0
0xb75:     c6 87 ed 58 00 00 01                  	mov byte ptr [rdi + 0x58ed], 1
0xb7c:     e9 75 01 00 00                        	jmp 0xcf6
; function: function_b81 at 0xb81 -- 0xb9f
0xb81:     48 c7 87 e0 58 00 00 20 e5 00 00      	mov qword ptr [rdi + 0x58e0], 0xe520
0xb8c:     c6 87 ec 58 00 00 00                  	mov byte ptr [rdi + 0x58ec], 0
0xb93:     c6 87 ed 58 00 00 02                  	mov byte ptr [rdi + 0x58ed], 2
0xb9a:     e9 57 01 00 00                        	jmp 0xcf6
; function: function_b9f at 0xb9f -- 0xbbd
0xb9f:     48 c7 87 e0 58 00 00 40 ca 01 00      	mov qword ptr [rdi + 0x58e0], 0x1ca40
0xbaa:     c6 87 ec 58 00 00 03                  	mov byte ptr [rdi + 0x58ec], 3
0xbb1:     c6 87 ed 58 00 00 00                  	mov byte ptr [rdi + 0x58ed], 0
0xbb8:     e9 39 01 00 00                        	jmp 0xcf6
; function: function_bbd at 0xbbd -- 0xbdb
0xbbd:     48 c7 87 e0 58 00 00 40 ca 01 00      	mov qword ptr [rdi + 0x58e0], 0x1ca40
0xbc8:     c6 87 ec 58 00 00 00                  	mov byte ptr [rdi + 0x58ec], 0
0xbcf:     c6 87 ed 58 00 00 03                  	mov byte ptr [rdi + 0x58ed], 3
0xbd6:     e9 1b 01 00 00                        	jmp 0xcf6
; function: function_bdb at 0xbdb -- 0xbf9
0xbdb:     48 c7 87 e0 58 00 00 40 ca 01 00      	mov qword ptr [rdi + 0x58e0], 0x1ca40
0xbe6:     c6 87 ec 58 00 00 01                  	mov byte ptr [rdi + 0x58ec], 1
0xbed:     c6 87 ed 58 00 00 01                  	mov byte ptr [rdi + 0x58ed], 1
0xbf4:     e9 fd 00 00 00                        	jmp 0xcf6
; function: function_bf9 at 0xbf9 -- 0xc17
0xbf9:     48 c7 87 e0 58 00 00 40 ca 01 00      	mov qword ptr [rdi + 0x58e0], 0x1ca40
0xc04:     c6 87 ec 58 00 00 01                  	mov byte ptr [rdi + 0x58ec], 1
0xc0b:     c6 87 ed 58 00 00 02                  	mov byte ptr [rdi + 0x58ed], 2
0xc12:     e9 df 00 00 00                        	jmp 0xcf6
; function: function_c17 at 0xc17 -- 0xc35
0xc17:     48 c7 87 e0 58 00 00 40 ca 01 00      	mov qword ptr [rdi + 0x58e0], 0x1ca40
0xc22:     c6 87 ec 58 00 00 02                  	mov byte ptr [rdi + 0x58ec], 2
0xc29:     c6 87 ed 58 00 00 01                  	mov byte ptr [rdi + 0x58ed], 1
0xc30:     e9 c1 00 00 00                        	jmp 0xcf6
; function: function_c35 at 0xc35 -- 0xc53
0xc35:     48 c7 87 e0 58 00 00 40 ca 01 00      	mov qword ptr [rdi + 0x58e0], 0x1ca40
0xc40:     c6 87 ec 58 00 00 02                  	mov byte ptr [rdi + 0x58ec], 2
0xc47:     c6 87 ed 58 00 00 02                  	mov byte ptr [rdi + 0x58ed], 2
0xc4e:     e9 a3 00 00 00                        	jmp 0xcf6
; function: function_c53 at 0xc53 -- 0xc71
0xc53:     48 c7 87 e0 58 00 00 60 af 02 00      	mov qword ptr [rdi + 0x58e0], 0x2af60
0xc5e:     c6 87 ec 58 00 00 03                  	mov byte ptr [rdi + 0x58ec], 3
0xc65:     c6 87 ed 58 00 00 01                  	mov byte ptr [rdi + 0x58ed], 1
0xc6c:     e9 85 00 00 00                        	jmp 0xcf6
; function: function_c71 at 0xc71 -- 0xc8c
0xc71:     48 c7 87 e0 58 00 00 60 af 02 00      	mov qword ptr [rdi + 0x58e0], 0x2af60
0xc7c:     c6 87 ec 58 00 00 03                  	mov byte ptr [rdi + 0x58ec], 3
0xc83:     c6 87 ed 58 00 00 02                  	mov byte ptr [rdi + 0x58ed], 2
0xc8a:     eb 6a                                 	jmp 0xcf6
; function: function_c8c at 0xc8c -- 0xca7
0xc8c:     48 c7 87 e0 58 00 00 60 af 02 00      	mov qword ptr [rdi + 0x58e0], 0x2af60
0xc97:     c6 87 ec 58 00 00 01                  	mov byte ptr [rdi + 0x58ec], 1
0xc9e:     c6 87 ed 58 00 00 03                  	mov byte ptr [rdi + 0x58ed], 3
0xca5:     eb 4f                                 	jmp 0xcf6
; function: function_ca7 at 0xca7 -- 0xcc2
0xca7:     48 c7 87 e0 58 00 00 60 af 02 00      	mov qword ptr [rdi + 0x58e0], 0x2af60
0xcb2:     c6 87 ec 58 00 00 02                  	mov byte ptr [rdi + 0x58ec], 2
0xcb9:     c6 87 ed 58 00 00 03                  	mov byte ptr [rdi + 0x58ed], 3
0xcc0:     eb 34                                 	jmp 0xcf6
; function: function_cc2 at 0xcc2 -- 0xcdd
0xcc2:     48 c7 87 e0 58 00 00 80 94 03 00      	mov qword ptr [rdi + 0x58e0], 0x39480
0xccd:     c6 87 ec 58 00 00 03                  	mov byte ptr [rdi + 0x58ec], 3
0xcd4:     c6 87 ed 58 00 00 03                  	mov byte ptr [rdi + 0x58ed], 3
0xcdb:     eb 19                                 	jmp 0xcf6
; data inside code section at 0xcdd -- 0xce4
0xcdd:     48 c7 87 e0 58 00 00                               |H...X..         |
; function: SmiCalculateMemAddr at 0xce4 -- 0xd14
0xce4:     20 e5                                 	and ch, ah
0xce6:     00 00                                 	add byte ptr [rax], al
0xce8:     c6 87 ec 58 00 00 00                  	mov byte ptr [rdi + 0x58ec], 0
0xcef:     c6 87 ed 58 00 00 00                  	mov byte ptr [rdi + 0x58ed], 0
0xcf6:     0f b6 87 ed 58 00 00                  	movzx eax, byte ptr [rdi + 0x58ed]
0xcfd:     48 c1 e0 02                           	shl rax, 2
0xd01:     0f b6 97 ec 58 00 00                  	movzx edx, byte ptr [rdi + 0x58ec]
0xd08:     48 09 d0                              	or rax, rdx
0xd0b:     48 89 87 f0 58 00 00                  	mov qword ptr [rdi + 0x58f0], rax
0xd12:     c9                                    	leave 
0xd13:     c3                                    	ret 
; function: SmiCalculateMemAddr at 0xd14 -- 0x1281
0xd14:     55                                    	push rbp
0xd15:     48 89 e5                              	mov rbp, rsp
0xd18:     e8 d3 de 03 00                        	call 0x3ebf0 <mcount>
0xd1d:     83 bf e8 58 00 00 0e                  	cmp dword ptr [rdi + 0x58e8], 0xe
0xd24:     0f 87 42 05 00 00                     	ja 0x126c <SmiCalculateMemAddr+0x558>
0xd2a:     8b 87 e8 58 00 00                     	mov eax, dword ptr [rdi + 0x58e8]
0xd30:     ff 24 c5 00 00 00 00                  	jmp qword ptr [rax*8]
0xd37:     48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0xd3e:     48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0xd45:     48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0xd4c:     48 89 87 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rax
0xd53:     48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0xd5a:     48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0xd61:     48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0xd68:     48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0xd6f:     48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0xd76:     48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0xd7d:     e9 30 05 00 00                        	jmp 0x12b2
0xd82:     48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0xd89:     48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0xd90:     48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0xd97:     48 89 87 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rax
0xd9e:     48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0xda5:     48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0xdac:     48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0xdb3:     48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0xdba:     48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0xdc1:     48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0xdc8:     e9 e5 04 00 00                        	jmp 0x12b2
0xdcd:     48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0xdd4:     48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0xddb:     48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0xde2:     48 89 87 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rax
0xde9:     48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0xdf0:     48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0xdf7:     48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0xdfe:     48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0xe05:     48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0xe0c:     48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0xe13:     e9 9a 04 00 00                        	jmp 0x12b2
0xe18:     48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0xe1f:     48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0xe26:     48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0xe2d:     48 89 87 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rax
0xe34:     48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0xe3b:     48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0xe42:     48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0xe49:     48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0xe50:     48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0xe57:     48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0xe5e:     e9 4f 04 00 00                        	jmp 0x12b2
0xe63:     48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0xe6a:     48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0xe71:     48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0xe78:     48 89 97 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rdx
0xe7f:     48 89 87 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rax
0xe86:     48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0xe8d:     48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0xe94:     48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0xe9b:     48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0xea2:     48 89 97 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rdx
0xea9:     48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0xeb0:     48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0xeb7:     e9 f6 03 00 00                        	jmp 0x12b2
0xebc:     48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0xec3:     48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0xeca:     48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0xed1:     48 89 87 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rax
0xed8:     48 05 20 e5 00 00                     	add rax, 0xe520
0xede:     48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0xee5:     48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0xeec:     48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0xef3:     48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0xefa:     48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0xf01:     48 05 20 e5 00 00                     	add rax, 0xe520
0xf07:     48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0xf0e:     e9 9f 03 00 00                        	jmp 0x12b2
0xf13:     48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0xf1a:     48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0xf21:     48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0xf28:     48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0xf2f:     48 89 97 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rdx
0xf36:     48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0xf3d:     48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0xf44:     48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0xf4b:     48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0xf52:     48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0xf59:     48 89 97 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rdx
0xf60:     48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0xf67:     e9 46 03 00 00                        	jmp 0x12b2
0xf6c:     48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0xf73:     48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0xf7a:     48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0xf81:     48 89 87 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rax
0xf88:     48 05 20 e5 00 00                     	add rax, 0xe520
0xf8e:     48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0xf95:     48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0xf9c:     48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0xfa3:     48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0xfaa:     48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0xfb1:     48 05 20 e5 00 00                     	add rax, 0xe520
0xfb7:     48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0xfbe:     e9 ef 02 00 00                        	jmp 0x12b2
0xfc3:     48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0xfca:     48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0xfd1:     48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0xfd8:     48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0xfdf:     48 89 97 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rdx
0xfe6:     48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0xfed:     48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0xff4:     48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0xffb:     48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0x1002:    48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0x1009:    48 89 97 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rdx
0x1010:    48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0x1017:    e9 96 02 00 00                        	jmp 0x12b2
0x101c:    48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0x1023:    48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0x102a:    48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0x1031:    48 89 87 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rax
0x1038:    48 05 20 e5 00 00                     	add rax, 0xe520
0x103e:    48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0x1045:    48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0x104c:    48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0x1053:    48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0x105a:    48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0x1061:    48 05 20 e5 00 00                     	add rax, 0xe520
0x1067:    48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0x106e:    e9 3f 02 00 00                        	jmp 0x12b2
0x1073:    48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0x107a:    48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0x1081:    48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0x1088:    48 89 97 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rdx
0x108f:    48 8d 90 40 ca 01 00                  	lea rdx, [rax + 0x1ca40]
0x1096:    48 89 97 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rdx
0x109d:    48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0x10a4:    48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0x10ab:    48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0x10b2:    48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0x10b9:    48 89 97 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rdx
0x10c0:    48 8d 90 40 ca 01 00                  	lea rdx, [rax + 0x1ca40]
0x10c7:    48 89 97 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rdx
0x10ce:    48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0x10d5:    e9 d8 01 00 00                        	jmp 0x12b2
0x10da:    48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0x10e1:    48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0x10e8:    48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0x10ef:    48 89 97 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rdx
0x10f6:    48 89 87 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rax
0x10fd:    48 05 40 ca 01 00                     	add rax, 0x1ca40
0x1103:    48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0x110a:    48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0x1111:    48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0x1118:    48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0x111f:    48 89 97 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rdx
0x1126:    48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0x112d:    48 05 40 ca 01 00                     	add rax, 0x1ca40
0x1133:    48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0x113a:    e9 73 01 00 00                        	jmp 0x12b2
0x113f:    48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0x1146:    48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0x114d:    48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0x1154:    48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0x115b:    48 89 97 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rdx
0x1162:    48 05 40 ca 01 00                     	add rax, 0x1ca40
0x1168:    48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0x116f:    48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0x1176:    48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0x117d:    48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0x1184:    48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0x118b:    48 89 97 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rdx
0x1192:    48 05 40 ca 01 00                     	add rax, 0x1ca40
0x1198:    48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0x119f:    e9 0e 01 00 00                        	jmp 0x12b2
0x11a4:    48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0x11ab:    48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0x11b2:    48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
0x11b9:    48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0x11c0:    48 89 97 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rdx
0x11c7:    48 05 40 ca 01 00                     	add rax, 0x1ca40
0x11cd:    48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0x11d4:    48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0x11db:    48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0x11e2:    48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0x11e9:    48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0x11f0:    48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0x11f7:    e9 b6 00 00 00                        	jmp 0x12b2
0x11fc:    48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0x1203:    48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0x120a:    48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0x1211:    48 89 97 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rdx
0x1218:    48 8d 90 40 ca 01 00                  	lea rdx, [rax + 0x1ca40]
0x121f:    48 89 97 d0 58 00 00                  	mov qword ptr [rdi + 0x58d0], rdx
0x1226:    48 05 60 af 02 00                     	add rax, 0x2af60
0x122c:    48 89 87 d8 58 00 00                  	mov qword ptr [rdi + 0x58d8], rax
0x1233:    48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0x123a:    48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0x1241:    48 8d 90 20 e5 00 00                  	lea rdx, [rax + 0xe520]
0x1248:    48 89 97 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rdx
0x124f:    48 8d 90 40 ca 01 00                  	lea rdx, [rax + 0x1ca40]
0x1256:    48 89 97 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rdx
0x125d:    48 05 60 af 02 00                     	add rax, 0x2af60
0x1263:    48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0x126a:    eb 46                                 	jmp 0x12b2
0x126c:    48 8b 87 98 58 00 00                  	mov rax, qword ptr [rdi + 0x5898]
0x1273:    48 89 87 c0 58 00 00                  	mov qword ptr [rdi + 0x58c0], rax
0x127a:    48 89 87 c8 58 00 00                  	mov qword ptr [rdi + 0x58c8], rax
; data inside code section at 0x1281 -- 0x1284
0x1281:    48 89 87                                           |H..             |
; function: SmiUnmapHWResources at 0x1284 -- 0x12b4
0x1284:    d0 58 00                              	rcr byte ptr [rax], 1
0x1287:    00 48 89                              	add byte ptr [rax - 0x77], cl
0x128a:    87 d8                                 	xchg eax, ebx
0x128c:    58                                    	pop rax
0x128d:    00 00                                 	add byte ptr [rax], al
0x128f:    48 8b 87 90 58 00 00                  	mov rax, qword ptr [rdi + 0x5890]
0x1296:    48 89 87 a0 58 00 00                  	mov qword ptr [rdi + 0x58a0], rax
0x129d:    48 89 87 a8 58 00 00                  	mov qword ptr [rdi + 0x58a8], rax
0x12a4:    48 89 87 b0 58 00 00                  	mov qword ptr [rdi + 0x58b0], rax
0x12ab:    48 89 87 b8 58 00 00                  	mov qword ptr [rdi + 0x58b8], rax
0x12b2:    c9                                    	leave 
0x12b3:    c3                                    	ret 
; function: SmiUnmapHWResources at 0x12b4 -- 0x1353
0x12b4:    55                                    	push rbp
0x12b5:    48 89 e5                              	mov rbp, rsp
0x12b8:    48 83 ec 30                           	sub rsp, 0x30
0x12bc:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x12c0:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x12c4:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x12c8:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x12cc:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x12d0:    e8 1b d9 03 00                        	call 0x3ebf0 <mcount>
0x12d5:    48 89 fb                              	mov rbx, rdi
0x12d8:    48 8b b7 18 58 00 00                  	mov rsi, qword ptr [rdi + 0x5818]
0x12df:    48 8b bf 08 58 00 00                  	mov rdi, qword ptr [rdi + 0x5808]
0x12e6:    e8 fd d7 03 00                        	call 0x3eae8 <free_irq>
0x12eb:    4c 8b a3 90 58 00 00                  	mov r12, qword ptr [rbx + 0x5890]
0x12f2:    4d 85 e4                              	test r12, r12
0x12f5:    74 73                                 	je 0x136a <SmiMapHWResources>
0x12f7:    4c 8b b3 98 58 00 00                  	mov r14, qword ptr [rbx + 0x5898]
0x12fe:    4c 8b bb e0 58 00 00                  	mov r15, qword ptr [rbx + 0x58e0]
0x1305:    48 8b 83 f0 57 00 00                  	mov rax, qword ptr [rbx + 0x57f0]
0x130c:    41 bd 00 00 00 00                     	mov r13d, 0
0x1312:    48 85 c0                              	test rax, rax
0x1315:    74 18                                 	je 0x132f <SmiUnmapHWResources+0x7b>
0x1317:    49 89 c5                              	mov r13, rax
0x131a:    49 81 c5 90 00 00 00                  	add r13, 0x90
0x1321:    74 0c                                 	je 0x132f <SmiUnmapHWResources+0x7b>
0x1323:    48 8b 98 50 02 00 00                  	mov rbx, qword ptr [rax + 0x250]
0x132a:    48 85 db                              	test rbx, rbx
0x132d:    75 07                                 	jne 0x1336 <SmiUnmapHWResources+0x82>
0x132f:    48 8b 1d c2 d7 03 00                  	mov rbx, qword ptr [rip + 0x3d7c2]
0x1336:    ff 14 25 00 00 00 00                  	call qword ptr [0]
0x133d:    f6 c4 02                              	test ah, 2
0x1340:    75 11                                 	jne 0x1353 <SmiUnmapHWResources+0x9a>
0x1342:    be 9a 00 00 00                        	mov esi, 0x9a
0x1347:    48 c7 c7 00 00 00 00                  	mov rdi, 0
0x134e:    e8 95 d8 03 00                        	call 0x3ebe8 <warn_slowpath_null>
; data inside code section at 0x1353 -- 0x1355
0x1353:    48 8b                                              |H.              |
; function: SmiFreeDeviceResources at 0x1355 -- 0x136a
0x1355:    43 08 48 85                           	or byte ptr [r8 - 0x7b], cl
0x1359:    c0 74 0e 4c 89                        	sal byte ptr [rsi + rcx + 0x4c], 0x89
0x135e:    f1                                    	int1 
0x135f:    4c 89 e2                              	mov rdx, r12
0x1362:    4c 89 fe                              	mov rsi, r15
0x1365:    4c 89 ef                              	mov rdi, r13
0x1368:    ff d0                                 	call rax
; function: SmiMapHWResources at 0x136a -- 0x1385
0x136a:    b8 01 00 00 00                        	mov eax, 1
0x136f:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x1373:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x1377:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x137b:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x137f:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x1383:    c9                                    	leave 
0x1384:    c3                                    	ret 
; function: SmiFreeDeviceResources at 0x1385 -- 0x139a
0x1385:    55                                    	push rbp
0x1386:    48 89 e5                              	mov rbp, rsp
0x1389:    e8 62 d8 03 00                        	call 0x3ebf0 <mcount>
0x138e:    e8 21 ff ff ff                        	call 0x12b4 <SmiUnmapHWResources>
0x1393:    b8 01 00 00 00                        	mov eax, 1
0x1398:    c9                                    	leave 
0x1399:    c3                                    	ret 
; function: SmiMapHWResources at 0x139a -- 0x14b3
0x139a:    55                                    	push rbp
0x139b:    48 89 e5                              	mov rbp, rsp
0x139e:    53                                    	push rbx
0x139f:    48 83 ec 08                           	sub rsp, 8
0x13a3:    e8 48 d8 03 00                        	call 0x3ebf0 <mcount>
0x13a8:    48 89 fb                              	mov rbx, rdi
0x13ab:    be ff ff 00 00                        	mov esi, 0xffff
0x13b0:    e8 65 ba 01 00                        	call 0x1ce1a <smi_disable_interrupt>
0x13b5:    48 89 9b 18 58 00 00                  	mov qword ptr [rbx + 0x5818], rbx
0x13bc:    48 8b bb 08 58 00 00                  	mov rdi, qword ptr [rbx + 0x5808]
0x13c3:    49 89 d9                              	mov r9, rbx
0x13c6:    49 c7 c0 00 00 00 00                  	mov r8, 0
0x13cd:    b9 80 00 00 00                        	mov ecx, 0x80
0x13d2:    ba 00 00 00 00                        	mov edx, 0
0x13d7:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0x13de:    e8 e5 d7 03 00                        	call 0x3ebc8 <request_threaded_irq>
0x13e3:    85 c0                                 	test eax, eax
0x13e5:    0f 85 e7 00 00 00                     	jne 0x14d2
0x13eb:    48 8b b3 e0 58 00 00                  	mov rsi, qword ptr [rbx + 0x58e0]
0x13f2:    48 8b 83 f0 57 00 00                  	mov rax, qword ptr [rbx + 0x57f0]
0x13f9:    48 85 c0                              	test rax, rax
0x13fc:    74 20                                 	je 0x141e <SmiMapHWResources+0x84>
0x13fe:    48 89 c7                              	mov rdi, rax
0x1401:    48 81 c7 90 00 00 00                  	add rdi, 0x90
0x1408:    74 14                                 	je 0x141e <SmiMapHWResources+0x84>
0x140a:    48 8b 80 50 02 00 00                  	mov rax, qword ptr [rax + 0x250]
0x1411:    48 85 c0                              	test rax, rax
0x1414:    48 0f 44 05 dc d6 03 00               	cmove rax, qword ptr [rip + 0x3d6dc]
0x141c:    eb 0e                                 	jmp 0x142c <SmiMapHWResources+0x92>
0x141e:    48 8b 05 d3 d6 03 00                  	mov rax, qword ptr [rip + 0x3d6d3]
0x1425:    48 c7 c7 00 00 00 00                  	mov rdi, 0
0x142c:    48 8b 97 88 01 00 00                  	mov rdx, qword ptr [rdi + 0x188]
0x1433:    48 85 d2                              	test rdx, rdx
0x1436:    0f 84 a2 00 00 00                     	je 0x14de
0x143c:    48 83 3a 00                           	cmp qword ptr [rdx], 0
0x1440:    0f 84 98 00 00 00                     	je 0x14de
0x1446:    48 8b 00                              	mov rax, qword ptr [rax]
0x1449:    48 85 c0                              	test rax, rax
0x144c:    0f 84 8c 00 00 00                     	je 0x14de
0x1452:    48 8b 97 90 01 00 00                  	mov rdx, qword ptr [rdi + 0x190]
0x1459:    b9 20 00 00 00                        	mov ecx, 0x20
0x145e:    48 85 d2                              	test rdx, rdx
0x1461:    74 19                                 	je 0x147c <SmiMapHWResources+0xe2>
0x1463:    48 81 fa 00 00 00 01                  	cmp rdx, 0x1000000
0x146a:    19 c9                                 	sbb ecx, ecx
0x146c:    f7 d1                                 	not ecx
0x146e:    83 c1 21                              	add ecx, 0x21
0x1471:    41 b8 ff ff ff ff                     	mov r8d, 0xffffffff
0x1477:    4c 39 c2                              	cmp rdx, r8
0x147a:    77 0b                                 	ja 0x1487 <SmiMapHWResources+0xed>
0x147c:    89 ca                                 	mov edx, ecx
0x147e:    83 ca 04                              	or edx, 4
0x1481:    f6 c1 01                              	test cl, 1
0x1484:    0f 44 ca                              	cmove ecx, edx
0x1487:    48 8d 93 98 58 00 00                  	lea rdx, [rbx + 0x5898]
0x148e:    ff d0                                 	call rax
0x1490:    48 89 83 90 58 00 00                  	mov qword ptr [rbx + 0x5890], rax
0x1497:    48 85 c0                              	test rax, rax
0x149a:    74 36                                 	je 0x14d2
0x149c:    c6 83 f9 58 00 00 01                  	mov byte ptr [rbx + 0x58f9], 1
0x14a3:    c6 83 fb 58 00 00 01                  	mov byte ptr [rbx + 0x58fb], 1
0x14aa:    80 bb ec 58 00 00 00                  	cmp byte ptr [rbx + 0x58ec], 0
0x14b1:    74 0b                                 	je 0x14be
; data inside code section at 0x14b3 -- 0x14bb
0x14b3:    48 c7 83 48 59 00 00 00                            |H..HY...        |
; function: SmiInitializeDeviceExtension at 0x14bb -- 0x14de
0x14bb:    00 00                                 	add byte ptr [rax], al
0x14bd:    00 80 bb ed 58 00                     	add byte ptr [rax + 0x58edbb], al
0x14c3:    00 00                                 	add byte ptr [rax], al
0x14c5:    74 0b                                 	je 0x14d2 <SmiInitializeDeviceExtension+0x17>
0x14c7:    48 c7 83 50 59 00 00 00 00 00 00      	mov qword ptr [rbx + 0x5950], 0
0x14d2:    b8 01 00 00 00                        	mov eax, 1
0x14d7:    48 83 c4 08                           	add rsp, 8
0x14db:    5b                                    	pop rbx
0x14dc:    c9                                    	leave 
0x14dd:    c3                                    	ret 
; data inside code section at 0x14de -- 0x14e0
0x14de:    48 c7                                              |H.              |
; function: SmiDrvStartDevice at 0x14e0 -- 0x14eb
0x14e0:    83 90 58 00 00 00 00                  	adc dword ptr [rax + 0x58], 0
0x14e7:    00 00                                 	add byte ptr [rax], al
0x14e9:    eb e7                                 	jmp 0x14d2
; function: SmiInitializeDeviceExtension at 0x14eb -- 0x1510
0x14eb:    55                                    	push rbp
0x14ec:    48 89 e5                              	mov rbp, rsp
0x14ef:    53                                    	push rbx
0x14f0:    48 83 ec 08                           	sub rsp, 8
0x14f4:    e8 f7 d6 03 00                        	call 0x3ebf0 <mcount>
0x14f9:    bb 00 00 00 00                        	mov ebx, 0
0x14fe:    0f b6 fb                              	movzx edi, bl
0x1501:    e8 7a 00 00 00                        	call 0x1580 <NT_SUCCESS>
0x1506:    48 89 d8                              	mov rax, rbx
0x1509:    48 83 c4 08                           	add rsp, 8
0x150d:    5b                                    	pop rbx
0x150e:    c9                                    	leave 
0x150f:    c3                                    	ret 
; function: SmiDrvStartDevice at 0x1510 -- 0x154f
0x1510:    55                                    	push rbp
0x1511:    48 89 e5                              	mov rbp, rsp
0x1514:    48 83 ec 20                           	sub rsp, 0x20
0x1518:    48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x151c:    4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x1520:    4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x1524:    e8 c7 d6 03 00                        	call 0x3ebf0 <mcount>
0x1529:    49 89 fc                              	mov r12, rdi
0x152c:    49 89 f5                              	mov r13, rsi
0x152f:    e8 b0 f5 ff ff                        	call 0xae4 <SmiGetDeviceInformation>
0x1534:    48 89 c3                              	mov rbx, rax
0x1537:    0f b6 f8                              	movzx edi, al
0x153a:    e8 41 00 00 00                        	call 0x1580 <NT_SUCCESS>
0x153f:    84 c0                                 	test al, al
0x1541:    74 2a                                 	je 0x156d
0x1543:    41 c7 84 24 e8 58 00 00 0e 00 00 00   	mov dword ptr [r12 + 0x58e8], 0xe
; data inside code section at 0x154f -- 0x1550
0x154f:    4c                                                 |L               |
; function: NT_SUCCESS at 0x1550 -- 0x155d
0x1550:    89 e7                                 	mov edi, esp
0x1552:    e8 ad f5 ff ff                        	call 0xb04 <SmiCalculateTotalMemSize>
0x1557:    4c 89 ee                              	mov rsi, r13
0x155a:    4c 89 e7                              	mov rdi, r12
; function: storageBufferPrioritySet at 0x155d -- 0x1570
0x155d:    e8 38 fe ff ff                        	call 0x139a <SmiMapHWResources>
0x1562:    48 89 c3                              	mov rbx, rax
0x1565:    0f b6 f8                              	movzx edi, al
0x1568:    e8 13 00 00 00                        	call 0x1580 <NT_SUCCESS>
0x156d:    48 89 d8                              	mov rax, rbx
; data inside code section at 0x1570 -- 0x1571
0x1570:    48                                                 |H               |
; function: storageBufferClean at 0x1571 -- 0x157e
0x1571:    8b 5d e8                              	mov ebx, dword ptr [rbp - 0x18]
0x1574:    4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x1578:    4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x157c:    c9                                    	leave 
0x157d:    c3                                    	ret 
; data inside code section at 0x157e -- 0x1580
0x157e:    90 90                                              |..              |
; function: NT_SUCCESS at 0x1580 -- 0x158d
0x1580:    55                                    	push rbp
0x1581:    48 89 e5                              	mov rbp, rsp
0x1584:    e8 67 d6 03 00                        	call 0x3ebf0 <mcount>
0x1589:    89 f8                                 	mov eax, edi
0x158b:    c9                                    	leave 
0x158c:    c3                                    	ret 
; function: storageBufferPrioritySet at 0x158d -- 0x15a1
0x158d:    55                                    	push rbp
0x158e:    48 89 e5                              	mov rbp, rsp
0x1591:    e8 5a d6 03 00                        	call 0x3ebf0 <mcount>
0x1596:    40 88 77 28                           	mov byte ptr [rdi + 0x28], sil
0x159a:    b8 01 00 00 00                        	mov eax, 1
0x159f:    c9                                    	leave 
0x15a0:    c3                                    	ret 
; function: storageBufferClean at 0x15a1 -- 0x15aa
0x15a1:    55                                    	push rbp
0x15a2:    48 89 e5                              	mov rbp, rsp
0x15a5:    53                                    	push rbx
0x15a6:    48 83 ec 08                           	sub rsp, 8
; data inside code section at 0x15aa -- 0x15ad
0x15aa:    e8 41 d6                                           |.A.             |
; function: storageBufferFlush at 0x15ad -- 0x15dd
0x15ad:    03 00                                 	add eax, dword ptr [rax]
0x15af:    48 89 fb                              	mov rbx, rdi
0x15b2:    48 8b 3f                              	mov rdi, qword ptr [rdi]
0x15b5:    e8 be d5 03 00                        	call 0x3eb78 <kfree>
0x15ba:    48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0x15c1:    48 c7 43 08 00 00 00 00               	mov qword ptr [rbx + 8], 0
0x15c9:    48 c7 43 10 00 00 00 00               	mov qword ptr [rbx + 0x10], 0
0x15d1:    b8 01 00 00 00                        	mov eax, 1
0x15d6:    48 83 c4 08                           	add rsp, 8
0x15da:    5b                                    	pop rbx
0x15db:    c9                                    	leave 
0x15dc:    c3                                    	ret 
; function: storageBufferFlush at 0x15dd -- 0x15ee
0x15dd:    55                                    	push rbp
0x15de:    48 89 e5                              	mov rbp, rsp
0x15e1:    53                                    	push rbx
0x15e2:    48 83 ec 08                           	sub rsp, 8
0x15e6:    e8 05 d6 03 00                        	call 0x3ebf0 <mcount>
0x15eb:    48 89 fb                              	mov rbx, rdi
; function: storageBuffInitialize at 0x15ee -- 0x161e
0x15ee:    48 8b 57 20                           	mov rdx, qword ptr [rdi + 0x20]
0x15f2:    48 8b 3f                              	mov rdi, qword ptr [rdi]
0x15f5:    be 00 00 00 00                        	mov esi, 0
0x15fa:    e8 41 d6 03 00                        	call 0x3ec40 <memset>
0x15ff:    48 c7 43 18 00 00 00 00               	mov qword ptr [rbx + 0x18], 0
0x1607:    48 8b 03                              	mov rax, qword ptr [rbx]
0x160a:    48 89 43 08                           	mov qword ptr [rbx + 8], rax
0x160e:    48 89 43 10                           	mov qword ptr [rbx + 0x10], rax
0x1612:    b8 01 00 00 00                        	mov eax, 1
0x1617:    48 83 c4 08                           	add rsp, 8
0x161b:    5b                                    	pop rbx
0x161c:    c9                                    	leave 
0x161d:    c3                                    	ret 
; function: storageBuffInitialize at 0x161e -- 0x1656
0x161e:    55                                    	push rbp
0x161f:    48 89 e5                              	mov rbp, rsp
0x1622:    53                                    	push rbx
0x1623:    48 83 ec 08                           	sub rsp, 8
0x1627:    e8 c4 d5 03 00                        	call 0x3ebf0 <mcount>
0x162c:    48 89 fb                              	mov rbx, rdi
0x162f:    48 89 f7                              	mov rdi, rsi
0x1632:    48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0x1639:    48 c7 43 18 00 00 00 00               	mov qword ptr [rbx + 0x18], 0
0x1641:    48 89 73 20                           	mov qword ptr [rbx + 0x20], rsi
0x1645:    c6 43 28 00                           	mov byte ptr [rbx + 0x28], 0
0x1649:    be d0 00 00 00                        	mov esi, 0xd0
0x164e:    e8 9d d6 03 00                        	call 0x3ecf0 <__kmalloc>
0x1653:    48 89 c7                              	mov rdi, rax
; data inside code section at 0x1656 -- 0x1658
0x1656:    48 89                                              |H.              |
; function: FUSBDTV_ProcessSysControlIrp at 0x1658 -- 0x1667
0x1658:    03 b8 00 00 00 00                     	add edi, dword ptr [rax]
0x165e:    48 85 ff                              	test rdi, rdi
0x1661:    74 1e                                 	je 0x1681
0x1663:    48 8b 53 20                           	mov rdx, qword ptr [rbx + 0x20]
; data inside code section at 0x1667 -- 0x1668
0x1667:    be                                                 |.               |
; function: FUSBDTV_SetPowerUSBDevice at 0x1668 -- 0x1678
0x1668:    00 00                                 	add byte ptr [rax], al
0x166a:    00 00                                 	add byte ptr [rax], al
0x166c:    e8 cf d5 03 00                        	call 0x3ec40 <memset>
0x1671:    48 8b 03                              	mov rax, qword ptr [rbx]
0x1674:    48 89 43 08                           	mov qword ptr [rbx + 8], rax
; function: FUSBDTV_Query_Capabilities at 0x1678 -- 0x1688
0x1678:    48 89 43 10                           	mov qword ptr [rbx + 0x10], rax
0x167c:    b8 01 00 00 00                        	mov eax, 1
0x1681:    48 83 c4 08                           	add rsp, 8
0x1685:    5b                                    	pop rbx
0x1686:    c9                                    	leave 
0x1687:    c3                                    	ret 
; function: AsicenFreeStreamBuffer at 0x1688 -- 0x1698
0x1688:    55                                    	push rbp
0x1689:    48 89 e5                              	mov rbp, rsp
0x168c:    e8 5f d5 03 00                        	call 0x3ebf0 <mcount>
0x1691:    b8 01 00 00 00                        	mov eax, 1
0x1696:    c9                                    	leave 
0x1697:    c3                                    	ret 
; function: FUSBDTV_SetPowerUSBDevice at 0x1698 -- 0x16a8
0x1698:    55                                    	push rbp
0x1699:    48 89 e5                              	mov rbp, rsp
0x169c:    e8 4f d5 03 00                        	call 0x3ebf0 <mcount>
0x16a1:    b8 01 00 00 00                        	mov eax, 1
0x16a6:    c9                                    	leave 
0x16a7:    c3                                    	ret 
; function: FUSBDTV_Query_Capabilities at 0x16a8 -- 0x16b8
0x16a8:    55                                    	push rbp
0x16a9:    48 89 e5                              	mov rbp, rsp
0x16ac:    e8 3f d5 03 00                        	call 0x3ebf0 <mcount>
0x16b1:    b8 01 00 00 00                        	mov eax, 1
0x16b6:    c9                                    	leave 
0x16b7:    c3                                    	ret 
; function: AsicenFreeStreamBuffer at 0x16b8 -- 0x16c9
0x16b8:    55                                    	push rbp
0x16b9:    48 89 e5                              	mov rbp, rsp
0x16bc:    53                                    	push rbx
0x16bd:    48 83 ec 08                           	sub rsp, 8
0x16c1:    e8 2a d5 03 00                        	call 0x3ebf0 <mcount>
0x16c6:    48 89 fb                              	mov rbx, rdi
; data inside code section at 0x16c9 -- 0x16ca
0x16c9:    48                                                 |H               |
; function: AsicenAllocateStreamBuffer at 0x16ca -- 0x16fa
0x16ca:    8b bf e0 00 00 00                     	mov edi, dword ptr [rdi + 0xe0]
0x16d0:    48 85 ff                              	test rdi, rdi
0x16d3:    74 05                                 	je 0x16da <AsicenAllocateStreamBuffer+0x10>
0x16d5:    e8 7e 4a 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x16da:    48 8b bb 30 01 00 00                  	mov rdi, qword ptr [rbx + 0x130]
0x16e1:    48 85 ff                              	test rdi, rdi
0x16e4:    74 05                                 	je 0x16eb <AsicenAllocateStreamBuffer+0x21>
0x16e6:    e8 6d 4a 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x16eb:    48 89 df                              	mov rdi, rbx
0x16ee:    e8 65 4a 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x16f3:    48 83 c4 08                           	add rsp, 8
0x16f7:    5b                                    	pop rbx
0x16f8:    c9                                    	leave 
0x16f9:    c3                                    	ret 
; function: AsicenAllocateStreamBuffer at 0x16fa -- 0x18c4
0x16fa:    55                                    	push rbp
0x16fb:    48 89 e5                              	mov rbp, rsp
0x16fe:    48 83 ec 30                           	sub rsp, 0x30
0x1702:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x1706:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x170a:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x170e:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1712:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1716:    e8 d5 d4 03 00                        	call 0x3ebf0 <mcount>
0x171b:    49 89 ff                              	mov r15, rdi
0x171e:    49 89 d5                              	mov r13, rdx
0x1721:    49 89 cc                              	mov r12, rcx
0x1724:    41 89 f6                              	mov r14d, esi
0x1727:    48 89 c8                              	mov rax, rcx
0x172a:    48 d1 e8                              	shr rax, 1
0x172d:    48 39 d0                              	cmp rax, rdx
0x1730:    72 1c                                 	jb 0x174e <AsicenAllocateStreamBuffer+0x54>
0x1732:    48 85 d2                              	test rdx, rdx
0x1735:    74 17                                 	je 0x174e <AsicenAllocateStreamBuffer+0x54>
0x1737:    48 85 c9                              	test rcx, rcx
0x173a:    74 12                                 	je 0x174e <AsicenAllocateStreamBuffer+0x54>
0x173c:    48 81 fa 00 02 00 00                  	cmp rdx, 0x200
0x1743:    77 09                                 	ja 0x174e <AsicenAllocateStreamBuffer+0x54>
0x1745:    48 81 f9 e0 92 00 00                  	cmp rcx, 0x92e0
0x174c:    76 0c                                 	jbe 0x175a <AsicenAllocateStreamBuffer+0x60>
0x174e:    41 bc e0 92 00 00                     	mov r12d, 0x92e0
0x1754:    41 bd 00 02 00 00                     	mov r13d, 0x200
0x175a:    be b8 01 00 00                        	mov esi, 0x1b8
0x175f:    bf 00 00 00 00                        	mov edi, 0
0x1764:    e8 ff 49 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x1769:    48 89 c3                              	mov rbx, rax
0x176c:    b8 00 00 00 00                        	mov eax, 0
0x1771:    48 85 db                              	test rbx, rbx
0x1774:    0f 84 65 01 00 00                     	je 0x18df
0x177a:    b9 37 00 00 00                        	mov ecx, 0x37
0x177f:    48 89 df                              	mov rdi, rbx
0x1782:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x1785:    41 80 fe 07                           	cmp r14b, 7
0x1789:    0f 86 89 00 00 00                     	jbe 0x1818 <AsicenAllocateStreamBuffer+0x11e>
0x178f:    48 c7 83 e8 00 00 00 80 80 59 00      	mov qword ptr [rbx + 0xe8], 0x598080
0x179a:    be 80 80 59 00                        	mov esi, 0x598080
0x179f:    bf 00 00 00 00                        	mov edi, 0
0x17a4:    e8 bf 49 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x17a9:    48 89 83 e0 00 00 00                  	mov qword ptr [rbx + 0xe0], rax
0x17b0:    48 c7 83 28 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x128], 0
0x17bb:    48 c7 83 20 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x120], 0
0x17c6:    48 c7 83 18 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x118], 0
0x17d1:    48 c7 83 38 01 00 00 80 94 03 00      	mov qword ptr [rbx + 0x138], 0x39480
0x17dc:    be 80 94 03 00                        	mov esi, 0x39480
0x17e1:    bf 00 00 00 00                        	mov edi, 0
0x17e6:    e8 7d 49 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x17eb:    48 89 83 30 01 00 00                  	mov qword ptr [rbx + 0x130], rax
0x17f2:    48 c7 83 50 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x150], 0
0x17fd:    48 c7 83 48 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x148], 0
0x1808:    48 c7 83 40 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x140], 0
0x1813:    e9 93 00 00 00                        	jmp 0x18ab <AsicenAllocateStreamBuffer+0x1b1>
0x1818:    4c 89 e6                              	mov rsi, r12
0x181b:    48 c1 e6 09                           	shl rsi, 9
0x181f:    48 89 b3 e8 00 00 00                  	mov qword ptr [rbx + 0xe8], rsi
0x1826:    bf 00 00 00 00                        	mov edi, 0
0x182b:    e8 38 49 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x1830:    48 89 83 e0 00 00 00                  	mov qword ptr [rbx + 0xe0], rax
0x1837:    48 c7 83 28 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x128], 0
0x1842:    48 c7 83 20 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x120], 0
0x184d:    48 c7 83 18 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x118], 0
0x1858:    4c 89 ee                              	mov rsi, r13
0x185b:    48 c1 e6 0b                           	shl rsi, 0xb
0x185f:    48 89 b3 38 01 00 00                  	mov qword ptr [rbx + 0x138], rsi
0x1866:    bf 00 00 00 00                        	mov edi, 0
0x186b:    e8 f8 48 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x1870:    48 89 83 30 01 00 00                  	mov qword ptr [rbx + 0x130], rax
0x1877:    48 c7 83 50 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x150], 0
0x1882:    48 c7 83 48 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x148], 0
0x188d:    48 c7 83 40 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x140], 0
0x1898:    41 0f b6 c6                           	movzx eax, r14b
0x189c:    49 89 9c c7 88 04 00 00               	mov qword ptr [r15 + rax*8 + 0x488], rbx
0x18a4:    44 88 b3 80 00 00 00                  	mov byte ptr [rbx + 0x80], r14b
0x18ab:    41 80 fe 08                           	cmp r14b, 8
0x18af:    75 15                                 	jne 0x18c6
0x18b1:    49 89 9f c8 04 00 00                  	mov qword ptr [r15 + 0x4c8], rbx
0x18b8:    c6 83 80 00 00 00 08                  	mov byte ptr [rbx + 0x80], 8
0x18bf:    b8 01 00 00 00                        	mov eax, 1
; data inside code section at 0x18c4 -- 0x18c5
0x18c4:    eb                                                 |.               |
; function: FUSBDTV_GetCusGUIDInfo at 0x18c5 -- 0x18f5
0x18c5:    19 b8 01 00 00 00                     	sbb dword ptr [rax + 1], edi
0x18cb:    41 80 fe 09                           	cmp r14b, 9
0x18cf:    75 0e                                 	jne 0x18df <FUSBDTV_GetCusGUIDInfo+0x1a>
0x18d1:    49 89 9f d0 04 00 00                  	mov qword ptr [r15 + 0x4d0], rbx
0x18d8:    c6 83 80 00 00 00 09                  	mov byte ptr [rbx + 0x80], 9
0x18df:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x18e3:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x18e7:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x18eb:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x18ef:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x18f3:    c9                                    	leave 
0x18f4:    c3                                    	ret 
; function: FUSBDTV_GetCusGUIDInfo at 0x18f5 -- 0x1906
0x18f5:    55                                    	push rbp
0x18f6:    48 89 e5                              	mov rbp, rsp
0x18f9:    53                                    	push rbx
0x18fa:    48 83 ec 08                           	sub rsp, 8
0x18fe:    e8 ed d2 03 00                        	call 0x3ebf0 <mcount>
0x1903:    48 89 fb                              	mov rbx, rdi
; data inside code section at 0x1906 -- 0x1908
0x1906:    48 8d                                              |H.              |
; function: FUSBDTV_Start at 0x1908 -- 0x1938
0x1908:    b7 70                                 	mov bh, 0x70
0x190a:    4f 00 00                              	add byte ptr [r8], r8b
0x190d:    e8 1b 43 00 00                        	call 0x5c2d <FUSBDTV_Cmd_GetCusInfo>
0x1912:    48 83 f8 01                           	cmp rax, 1
0x1916:    75 09                                 	jne 0x1921 <FUSBDTV_Start+0x19>
0x1918:    80 bb 70 4f 00 00 01                  	cmp byte ptr [rbx + 0x4f70], 1
0x191f:    74 09                                 	je 0x192a <FUSBDTV_Start+0x22>
0x1921:    c6 83 aa 4f 00 00 00                  	mov byte ptr [rbx + 0x4faa], 0
0x1928:    eb 07                                 	jmp 0x1931 <FUSBDTV_Start+0x29>
0x192a:    c6 83 aa 4f 00 00 01                  	mov byte ptr [rbx + 0x4faa], 1
0x1931:    48 83 c4 08                           	add rsp, 8
0x1935:    5b                                    	pop rbx
0x1936:    c9                                    	leave 
0x1937:    c3                                    	ret 
; function: FUSBDTV_Start at 0x1938 -- 0x1d27
0x1938:    55                                    	push rbp
0x1939:    48 89 e5                              	mov rbp, rsp
0x193c:    48 83 ec 40                           	sub rsp, 0x40
0x1940:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x1944:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x1948:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x194c:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1950:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1954:    e8 97 d2 03 00                        	call 0x3ebf0 <mcount>
0x1959:    48 89 fb                              	mov rbx, rdi
0x195c:    48 8d b7 14 58 00 00                  	lea rsi, [rdi + 0x5814]
0x1963:    48 8b bf a0 57 00 00                  	mov rdi, qword ptr [rdi + 0x57a0]
0x196a:    e8 85 f1 ff ff                        	call 0xaf4 <GetPCIBusInterfaceStandard>
0x196f:    49 89 c4                              	mov r12, rax
0x1972:    0f b6 f8                              	movzx edi, al
0x1975:    e8 06 fc ff ff                        	call 0x1580 <NT_SUCCESS>
0x197a:    84 c0                                 	test al, al
0x197c:    0f 84 bf 03 00 00                     	je 0x1d41
0x1982:    be 00 00 00 00                        	mov esi, 0
0x1987:    48 89 df                              	mov rdi, rbx
0x198a:    e8 81 fb ff ff                        	call 0x1510 <SmiDrvStartDevice>
0x198f:    49 89 c4                              	mov r12, rax
0x1992:    48 83 f8 01                           	cmp rax, 1
0x1996:    0f 85 a5 03 00 00                     	jne 0x1d41
0x199c:    c6 83 c8 00 00 00 00                  	mov byte ptr [rbx + 0xc8], 0
0x19a3:    c6 83 0a 59 00 00 00                  	mov byte ptr [rbx + 0x590a], 0
0x19aa:    48 89 df                              	mov rdi, rbx
0x19ad:    e8 48 21 00 00                        	call 0x3afa <Hardware_Init>
0x19b2:    49 89 c4                              	mov r12, rax
0x19b5:    48 83 f8 01                           	cmp rax, 1
0x19b9:    0f 85 82 03 00 00                     	jne 0x1d41
0x19bf:    48 89 df                              	mov rdi, rbx
0x19c2:    e8 71 2b 00 00                        	call 0x4538 <RegisterInitialize>
0x19c7:    48 89 df                              	mov rdi, rbx
0x19ca:    e8 26 ff ff ff                        	call 0x18f5 <FUSBDTV_GetCusGUIDInfo>
0x19cf:    49 89 c7                              	mov r15, rax
0x19d2:    ba ff 00 00 00                        	mov edx, 0xff
0x19d7:    be 08 00 00 00                        	mov esi, 8
0x19dc:    48 89 df                              	mov rdi, rbx
0x19df:    e8 48 45 00 00                        	call 0x5f2c <FUSBDTV_Cmd_Set_GPIO>
0x19e4:    ba 02 00 00 00                        	mov edx, 2
0x19e9:    be 00 00 00 00                        	mov esi, 0
0x19ee:    48 89 df                              	mov rdi, rbx
0x19f1:    e8 b7 46 00 00                        	call 0x60ad <FUSBDTV_Cmd_Set_GPIO_Ex>
0x19f6:    ba 01 00 00 00                        	mov edx, 1
0x19fb:    be 01 00 00 00                        	mov esi, 1
0x1a00:    48 89 df                              	mov rdi, rbx
0x1a03:    e8 4f b1 01 00                        	call 0x1cb57 <TLIB_SetGPIOEx>
0x1a08:    4c 8d b3 60 59 00 00                  	lea r14, [rbx + 0x5960]
0x1a0f:    4d 89 f5                              	mov r13, r14
0x1a12:    41 b4 00                              	mov r12b, 0
0x1a15:    4c 89 e9                              	mov rcx, r13
0x1a18:    ba 00 00 00 00                        	mov edx, 0
0x1a1d:    44 89 e6                              	mov esi, r12d
0x1a20:    48 89 df                              	mov rdi, rbx
0x1a23:    e8 a0 49 00 00                        	call 0x63c8 <TC_PowerTunerDemod>
0x1a28:    41 83 c4 01                           	add r12d, 1
0x1a2c:    49 83 c5 50                           	add r13, 0x50
0x1a30:    41 83 fc 08                           	cmp r12d, 8
0x1a34:    75 df                                 	jne 0x1a15 <FUSBDTV_Start+0xdd>
0x1a36:    c6 83 68 3e 00 00 01                  	mov byte ptr [rbx + 0x3e68], 1
0x1a3d:    48 c7 83 08 62 00 00 40 09 00 00      	mov qword ptr [rbx + 0x6208], 0x940
0x1a48:    48 c7 83 10 62 00 00 44 09 00 00      	mov qword ptr [rbx + 0x6210], 0x944
0x1a53:    48 c7 83 18 62 00 00 48 09 00 00      	mov qword ptr [rbx + 0x6218], 0x948
0x1a5e:    48 c7 83 20 62 00 00 4c 09 00 00      	mov qword ptr [rbx + 0x6220], 0x94c
0x1a69:    48 c7 83 28 62 00 00 50 09 00 00      	mov qword ptr [rbx + 0x6228], 0x950
0x1a74:    48 c7 83 30 62 00 00 54 09 00 00      	mov qword ptr [rbx + 0x6230], 0x954
0x1a7f:    48 c7 83 38 62 00 00 60 09 00 00      	mov qword ptr [rbx + 0x6238], 0x960
0x1a8a:    48 c7 83 40 62 00 00 80 09 00 00      	mov qword ptr [rbx + 0x6240], 0x980
0x1a95:    48 c7 83 48 62 00 00 84 09 00 00      	mov qword ptr [rbx + 0x6248], 0x984
0x1aa0:    48 c7 83 50 62 00 00 88 09 00 00      	mov qword ptr [rbx + 0x6250], 0x988
0x1aab:    48 c7 83 58 62 00 00 8c 09 00 00      	mov qword ptr [rbx + 0x6258], 0x98c
0x1ab6:    48 c7 83 60 62 00 00 90 09 00 00      	mov qword ptr [rbx + 0x6260], 0x990
0x1ac1:    48 c7 83 68 62 00 00 94 09 00 00      	mov qword ptr [rbx + 0x6268], 0x994
0x1acc:    48 c7 83 70 62 00 00 a0 09 00 00      	mov qword ptr [rbx + 0x6270], 0x9a0
0x1ad7:    48 c7 83 78 62 00 00 c0 0a 00 00      	mov qword ptr [rbx + 0x6278], 0xac0
0x1ae2:    48 c7 83 80 62 00 00 c4 0a 00 00      	mov qword ptr [rbx + 0x6280], 0xac4
0x1aed:    48 c7 83 88 62 00 00 c8 0a 00 00      	mov qword ptr [rbx + 0x6288], 0xac8
0x1af8:    48 c7 83 90 62 00 00 cc 0a 00 00      	mov qword ptr [rbx + 0x6290], 0xacc
0x1b03:    48 c7 83 98 62 00 00 d0 0a 00 00      	mov qword ptr [rbx + 0x6298], 0xad0
0x1b0e:    48 c7 83 a0 62 00 00 d4 0a 00 00      	mov qword ptr [rbx + 0x62a0], 0xad4
0x1b19:    48 c7 83 a8 62 00 00 d8 0a 00 00      	mov qword ptr [rbx + 0x62a8], 0xad8
0x1b24:    48 c7 83 b0 62 00 00 dc 0a 00 00      	mov qword ptr [rbx + 0x62b0], 0xadc
0x1b2f:    48 c7 83 b8 62 00 00 e0 0a 00 00      	mov qword ptr [rbx + 0x62b8], 0xae0
0x1b3a:    48 c7 83 c0 62 00 00 00 0c 00 00      	mov qword ptr [rbx + 0x62c0], 0xc00
0x1b45:    48 c7 83 c8 62 00 00 04 0c 00 00      	mov qword ptr [rbx + 0x62c8], 0xc04
0x1b50:    48 c7 83 d0 62 00 00 08 0c 00 00      	mov qword ptr [rbx + 0x62d0], 0xc08
0x1b5b:    48 c7 83 d8 62 00 00 0c 0c 00 00      	mov qword ptr [rbx + 0x62d8], 0xc0c
0x1b66:    48 c7 83 e0 62 00 00 10 0c 00 00      	mov qword ptr [rbx + 0x62e0], 0xc10
0x1b71:    48 c7 83 e8 62 00 00 14 0c 00 00      	mov qword ptr [rbx + 0x62e8], 0xc14
0x1b7c:    48 c7 83 f0 62 00 00 18 0c 00 00      	mov qword ptr [rbx + 0x62f0], 0xc18
0x1b87:    48 c7 83 f8 62 00 00 1c 0c 00 00      	mov qword ptr [rbx + 0x62f8], 0xc1c
0x1b92:    48 c7 83 00 63 00 00 20 0c 00 00      	mov qword ptr [rbx + 0x6300], 0xc20
0x1b9d:    48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x1ba1:    41 b9 00 00 00 00                     	mov r9d, 0
0x1ba7:    41 b8 01 00 00 00                     	mov r8d, 1
0x1bad:    ba 00 00 00 00                        	mov edx, 0
0x1bb2:    be a0 00 00 00                        	mov esi, 0xa0
0x1bb7:    48 89 df                              	mov rdi, rbx
0x1bba:    e8 a1 b0 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x1bbf:    84 c0                                 	test al, al
0x1bc1:    0f 85 60 01 00 00                     	jne 0x1d27 <FUSBDTV_Start+0x3e4>
0x1bc7:    48 c7 83 08 62 00 00 80 0a 00 00      	mov qword ptr [rbx + 0x6208], 0xa80
0x1bd2:    48 c7 83 10 62 00 00 84 0a 00 00      	mov qword ptr [rbx + 0x6210], 0xa84
0x1bdd:    48 c7 83 18 62 00 00 88 0a 00 00      	mov qword ptr [rbx + 0x6218], 0xa88
0x1be8:    48 c7 83 20 62 00 00 8c 0a 00 00      	mov qword ptr [rbx + 0x6220], 0xa8c
0x1bf3:    48 c7 83 28 62 00 00 90 0a 00 00      	mov qword ptr [rbx + 0x6228], 0xa90
0x1bfe:    48 c7 83 30 62 00 00 94 0a 00 00      	mov qword ptr [rbx + 0x6230], 0xa94
0x1c09:    48 c7 83 38 62 00 00 a0 0a 00 00      	mov qword ptr [rbx + 0x6238], 0xaa0
0x1c14:    48 c7 83 40 62 00 00 c0 0b 00 00      	mov qword ptr [rbx + 0x6240], 0xbc0
0x1c1f:    48 c7 83 48 62 00 00 c4 0b 00 00      	mov qword ptr [rbx + 0x6248], 0xbc4
0x1c2a:    48 c7 83 50 62 00 00 c8 0b 00 00      	mov qword ptr [rbx + 0x6250], 0xbc8
0x1c35:    48 c7 83 58 62 00 00 cc 0b 00 00      	mov qword ptr [rbx + 0x6258], 0xbcc
0x1c40:    48 c7 83 60 62 00 00 d0 0b 00 00      	mov qword ptr [rbx + 0x6260], 0xbd0
0x1c4b:    48 c7 83 68 62 00 00 d4 0b 00 00      	mov qword ptr [rbx + 0x6268], 0xbd4
0x1c56:    48 c7 83 70 62 00 00 e0 0b 00 00      	mov qword ptr [rbx + 0x6270], 0xbe0
0x1c61:    48 c7 83 78 62 00 00 00 0d 00 00      	mov qword ptr [rbx + 0x6278], 0xd00
0x1c6c:    48 c7 83 80 62 00 00 04 0d 00 00      	mov qword ptr [rbx + 0x6280], 0xd04
0x1c77:    48 c7 83 88 62 00 00 08 0d 00 00      	mov qword ptr [rbx + 0x6288], 0xd08
0x1c82:    48 c7 83 90 62 00 00 0c 0d 00 00      	mov qword ptr [rbx + 0x6290], 0xd0c
0x1c8d:    48 c7 83 98 62 00 00 10 0d 00 00      	mov qword ptr [rbx + 0x6298], 0xd10
0x1c98:    48 c7 83 a0 62 00 00 14 0d 00 00      	mov qword ptr [rbx + 0x62a0], 0xd14
0x1ca3:    48 c7 83 a8 62 00 00 18 0d 00 00      	mov qword ptr [rbx + 0x62a8], 0xd18
0x1cae:    48 c7 83 b0 62 00 00 1c 0d 00 00      	mov qword ptr [rbx + 0x62b0], 0xd1c
0x1cb9:    48 c7 83 b8 62 00 00 20 0d 00 00      	mov qword ptr [rbx + 0x62b8], 0xd20
0x1cc4:    48 c7 83 c0 62 00 00 40 0d 00 00      	mov qword ptr [rbx + 0x62c0], 0xd40
0x1ccf:    48 c7 83 c8 62 00 00 44 0d 00 00      	mov qword ptr [rbx + 0x62c8], 0xd44
0x1cda:    48 c7 83 d0 62 00 00 48 0d 00 00      	mov qword ptr [rbx + 0x62d0], 0xd48
0x1ce5:    48 c7 83 d8 62 00 00 4c 0d 00 00      	mov qword ptr [rbx + 0x62d8], 0xd4c
0x1cf0:    48 c7 83 e0 62 00 00 50 0d 00 00      	mov qword ptr [rbx + 0x62e0], 0xd50
0x1cfb:    48 c7 83 e8 62 00 00 54 0d 00 00      	mov qword ptr [rbx + 0x62e8], 0xd54
0x1d06:    48 c7 83 f0 62 00 00 58 0d 00 00      	mov qword ptr [rbx + 0x62f0], 0xd58
0x1d11:    48 c7 83 f8 62 00 00 5c 0d 00 00      	mov qword ptr [rbx + 0x62f8], 0xd5c
0x1d1c:    48 c7 83 00 63 00 00 60 0d 00 00      	mov qword ptr [rbx + 0x6300], 0xd60
; data inside code section at 0x1d27 -- 0x1d2a
0x1d27:    c6 83 08                                           |...             |
; function: FUSBDTV_RemoveUSBDevice at 0x1d2a -- 0x1d5a
0x1d2a:    63 00                                 	movsxd rax, dword ptr [rax]
0x1d2c:    00 01                                 	add byte ptr [rcx], al
0x1d2e:    4c 89 f2                              	mov rdx, r14
0x1d31:    be 00 00 00 00                        	mov esi, 0
0x1d36:    48 89 df                              	mov rdi, rbx
0x1d39:    e8 ec 48 00 00                        	call 0x662a <TC_Preset>
0x1d3e:    4d 89 fc                              	mov r12, r15
0x1d41:    4c 89 e0                              	mov rax, r12
0x1d44:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x1d48:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x1d4c:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x1d50:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x1d54:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x1d58:    c9                                    	leave 
0x1d59:    c3                                    	ret 
; function: FUSBDTV_RemoveUSBDevice at 0x1d5a -- 0x1d7c
0x1d5a:    55                                    	push rbp
0x1d5b:    48 89 e5                              	mov rbp, rsp
0x1d5e:    41 55                                 	push r13
0x1d60:    41 54                                 	push r12
0x1d62:    53                                    	push rbx
0x1d63:    48 83 ec 08                           	sub rsp, 8
0x1d67:    e8 84 ce 03 00                        	call 0x3ebf0 <mcount>
0x1d6c:    49 89 fd                              	mov r13, rdi
0x1d6f:    bb 00 00 00 00                        	mov ebx, 0
0x1d74:    48 89 df                              	mov rdi, rbx
0x1d77:    e8 9b c0 01 00                        	call 0x1de17 <FUSB_IncrementIoCount>
; data inside code section at 0x1d7c -- 0x1d8a
0x1d7c:    89 de 4c 89 ef e8 06 3c  00 00 49 89 c4 83         |..L....<..I...  |
; function: function_1d8a at 0x1d8a -- 0x1d8b
0x1d8a:    c3                                    	ret 
; data inside code section at 0x1d8b -- 0x1d8c
0x1d8b:    01                                                 |.               |
; function: FUSBDTV_Remove at 0x1d8c -- 0x1dbc
0x1d8c:    83 fb 08                              	cmp ebx, 8
0x1d8f:    75 eb                                 	jne 0x1d7c
0x1d91:    bb 00 00 00 00                        	mov ebx, 0
0x1d96:    48 89 df                              	mov rdi, rbx
0x1d99:    e8 69 c0 01 00                        	call 0x1de07 <FUSB_DecrementIoCount>
0x1d9e:    41 c6 85 c8 00 00 00 01               	mov byte ptr [r13 + 0xc8], 1
0x1da6:    48 89 df                              	mov rdi, rbx
0x1da9:    e8 59 c0 01 00                        	call 0x1de07 <FUSB_DecrementIoCount>
0x1dae:    4c 89 e0                              	mov rax, r12
0x1db1:    48 83 c4 08                           	add rsp, 8
0x1db5:    5b                                    	pop rbx
0x1db6:    41 5c                                 	pop r12
0x1db8:    41 5d                                 	pop r13
0x1dba:    c9                                    	leave 
0x1dbb:    c3                                    	ret 
; function: FUSBDTV_Remove at 0x1dbc -- 0x1f0e
0x1dbc:    55                                    	push rbp
0x1dbd:    48 89 e5                              	mov rbp, rsp
0x1dc0:    41 55                                 	push r13
0x1dc2:    41 54                                 	push r12
0x1dc4:    53                                    	push rbx
0x1dc5:    48 83 ec 18                           	sub rsp, 0x18
0x1dc9:    e8 22 ce 03 00                        	call 0x3ebf0 <mcount>
0x1dce:    48 89 fb                              	mov rbx, rdi
0x1dd1:    e8 02 1e 00 00                        	call 0x3bd8 <Hardware_RemoveDevice>
0x1dd6:    48 89 df                              	mov rdi, rbx
0x1dd9:    e8 7c ff ff ff                        	call 0x1d5a <FUSBDTV_RemoveUSBDevice>
0x1dde:    41 bc 00 00 00 00                     	mov r12d, 0
0x1de4:    4e 8b ac 23 e0 04 00 00               	mov r13, qword ptr [rbx + r12 + 0x4e0]
0x1dec:    4c 89 ef                              	mov rdi, r13
0x1def:    e8 43 d8 00 00                        	call 0xf637 <DTV_PollingThreadClose>
0x1df4:    4c 89 ef                              	mov rdi, r13
0x1df7:    e8 97 d7 00 00                        	call 0xf593 <DTV_PollingWDThreadClose>
0x1dfc:    4c 89 ef                              	mov rdi, r13
0x1dff:    e8 eb d6 00 00                        	call 0xf4ef <ASV5220_BcasThreadClose>
0x1e04:    49 83 c4 08                           	add r12, 8
0x1e08:    49 83 fc 40                           	cmp r12, 0x40
0x1e0c:    75 d6                                 	jne 0x1de4 <FUSBDTV_Remove+0x28>
0x1e0e:    48 89 df                              	mov rdi, rbx
0x1e11:    e8 89 d6 00 00                        	call 0xf49f <DTV_PollingDeviceThreadClose>
0x1e16:    48 c7 45 d8 00 00 00 00               	mov qword ptr [rbp - 0x28], 0
0x1e1e:    48 8d 55 d8                           	lea rdx, [rbp - 0x28]
0x1e22:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0x1e29:    48 89 df                              	mov rdi, rbx
0x1e2c:    e8 fe 89 00 00                        	call 0xa82f <StoreDeviceLNBPower>
0x1e31:    48 8b bb c8 04 00 00                  	mov rdi, qword ptr [rbx + 0x4c8]
0x1e38:    e8 7b f8 ff ff                        	call 0x16b8 <AsicenFreeStreamBuffer>
0x1e3d:    48 c7 83 c8 04 00 00 00 00 00 00      	mov qword ptr [rbx + 0x4c8], 0
0x1e48:    48 8b bb d0 04 00 00                  	mov rdi, qword ptr [rbx + 0x4d0]
0x1e4f:    e8 64 f8 ff ff                        	call 0x16b8 <AsicenFreeStreamBuffer>
0x1e54:    48 c7 83 d0 04 00 00 00 00 00 00      	mov qword ptr [rbx + 0x4d0], 0
0x1e5f:    41 b4 00                              	mov r12b, 0
0x1e62:    4a 8b bc 23 a0 59 00 00               	mov rdi, qword ptr [rbx + r12 + 0x59a0]
0x1e6a:    48 85 ff                              	test rdi, rdi
0x1e6d:    74 11                                 	je 0x1e80 <FUSBDTV_Remove+0xc4>
0x1e6f:    e8 e4 42 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x1e74:    4a c7 84 23 a0 59 00 00 00 00 00 00   	mov qword ptr [rbx + r12 + 0x59a0], 0
0x1e80:    49 83 c4 50                           	add r12, 0x50
0x1e84:    49 81 fc 80 02 00 00                  	cmp r12, 0x280
0x1e8b:    75 d5                                 	jne 0x1e62 <FUSBDTV_Remove+0xa6>
0x1e8d:    66 41 bc 00 00                        	mov r12w, 0
0x1e92:    4a 8b bc 23 88 04 00 00               	mov rdi, qword ptr [rbx + r12 + 0x488]
0x1e9a:    48 85 ff                              	test rdi, rdi
0x1e9d:    74 11                                 	je 0x1eb0 <FUSBDTV_Remove+0xf4>
0x1e9f:    e8 14 f8 ff ff                        	call 0x16b8 <AsicenFreeStreamBuffer>
0x1ea4:    4a c7 84 23 88 04 00 00 00 00 00 00   	mov qword ptr [rbx + r12 + 0x488], 0
0x1eb0:    4a 8b bc 23 e8 60 00 00               	mov rdi, qword ptr [rbx + r12 + 0x60e8]
0x1eb8:    48 85 ff                              	test rdi, rdi
0x1ebb:    74 11                                 	je 0x1ece <FUSBDTV_Remove+0x112>
0x1ebd:    e8 96 42 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x1ec2:    4a c7 84 23 e8 60 00 00 00 00 00 00   	mov qword ptr [rbx + r12 + 0x60e8], 0
0x1ece:    49 83 c4 08                           	add r12, 8
0x1ed2:    49 83 fc 40                           	cmp r12, 0x40
0x1ed6:    75 ba                                 	jne 0x1e92 <FUSBDTV_Remove+0xd6>
0x1ed8:    41 b4 00                              	mov r12b, 0
0x1edb:    4a 8b bc 23 e0 04 00 00               	mov rdi, qword ptr [rbx + r12 + 0x4e0]
0x1ee3:    e8 70 42 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x1ee8:    49 83 c4 08                           	add r12, 8
0x1eec:    49 83 fc 40                           	cmp r12, 0x40
0x1ef0:    75 e9                                 	jne 0x1edb <FUSBDTV_Remove+0x11f>
0x1ef2:    48 c7 c2 00 00 00 00                  	mov rdx, 0
0x1ef9:    b8 01 00 00 00                        	mov eax, 1
0x1efe:    48 39 1d fb 4b 03 00                  	cmp qword ptr [rip + 0x34bfb], rbx
0x1f05:    75 04                                 	jne 0x1f0b <FUSBDTV_Remove+0x14f>
0x1f07:    b0 00                                 	mov al, 0
0x1f09:    eb 05                                 	jmp 0x1f10
0x1f0b:    48 39 1a                              	cmp qword ptr [rdx], rbx
; data inside code section at 0x1f0e -- 0x1f0f
0x1f0e:    75                                                 |u               |
; function: FUSBDTV_StopUSBDevice at 0x1f0f -- 0x1f3f
0x1f0f:    10 48 98                              	adc byte ptr [rax - 0x68], cl
0x1f12:    48 c7 04 c5 00 00 00 00 00 00 00 00   	mov qword ptr [rax*8], 0
0x1f1e:    eb 0c                                 	jmp 0x1f2c <FUSBDTV_StopUSBDevice+0x1d>
0x1f20:    83 c0 01                              	add eax, 1
0x1f23:    48 83 c2 08                           	add rdx, 8
0x1f27:    83 f8 08                              	cmp eax, 8
0x1f2a:    75 df                                 	jne 0x1f0b
0x1f2c:    48 89 df                              	mov rdi, rbx
0x1f2f:    e8 24 42 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x1f34:    48 83 c4 18                           	add rsp, 0x18
0x1f38:    5b                                    	pop rbx
0x1f39:    41 5c                                 	pop r12
0x1f3b:    41 5d                                 	pop r13
0x1f3d:    c9                                    	leave 
0x1f3e:    c3                                    	ret 
; function: FUSBDTV_StopUSBDevice at 0x1f3f -- 0x1f5e
0x1f3f:    55                                    	push rbp
0x1f40:    48 89 e5                              	mov rbp, rsp
0x1f43:    41 55                                 	push r13
0x1f45:    41 54                                 	push r12
0x1f47:    53                                    	push rbx
0x1f48:    48 83 ec 08                           	sub rsp, 8
0x1f4c:    e8 9f cc 03 00                        	call 0x3ebf0 <mcount>
0x1f51:    49 89 fd                              	mov r13, rdi
0x1f54:    bf 00 00 00 00                        	mov edi, 0
0x1f59:    e8 b9 be 01 00                        	call 0x1de17 <FUSB_IncrementIoCount>
; data inside code section at 0x1f5e -- 0x1f60
0x1f5e:    bb 00                                              |..              |
; function: FUSBDTV_Stop at 0x1f60 -- 0x1f76
0x1f60:    00 00                                 	add byte ptr [rax], al
0x1f62:    00 89 de 4c 89 ef                     	add byte ptr [rcx - 0x1076b322], cl
0x1f68:    e8 1f 3a 00 00                        	call 0x598c <FUSBDTV_StopBulkStream>
0x1f6d:    49 89 c4                              	mov r12, rax
0x1f70:    83 c3 01                              	add ebx, 1
0x1f73:    83 fb 08                              	cmp ebx, 8
; data inside code section at 0x1f76 -- 0x1f77
0x1f76:    75                                                 |u               |
; function: FUSBDTV_SetFakeDeviceObj at 0x1f77 -- 0x1f79
0x1f77:    eb bf                                 	jmp 0x1f38
; data inside code section at 0x1f79 -- 0x1f88
0x1f79:    00 00 00 00 e8 85 be 01  00 4c 89 e0 48 83 c4      |.........L..H.. |
; function: FUSBDTV_StartUSBDevice at 0x1f88 -- 0x1f90
0x1f88:    08 5b 41                              	or byte ptr [rbx + 0x41], bl
0x1f8b:    5c                                    	pop rsp
0x1f8c:    41 5d                                 	pop r13
0x1f8e:    c9                                    	leave 
0x1f8f:    c3                                    	ret 
; function: FUSBDTV_Stop at 0x1f90 -- 0x1fa7
0x1f90:    55                                    	push rbp
0x1f91:    48 89 e5                              	mov rbp, rsp
0x1f94:    e8 57 cc 03 00                        	call 0x3ebf0 <mcount>
0x1f99:    c6 87 08 63 00 00 00                  	mov byte ptr [rdi + 0x6308], 0
0x1fa0:    e8 9a ff ff ff                        	call 0x1f3f <FUSBDTV_StopUSBDevice>
0x1fa5:    c9                                    	leave 
0x1fa6:    c3                                    	ret 
; function: FUSBDTV_SetFakeDeviceObj at 0x1fa7 -- 0x1fb8
0x1fa7:    55                                    	push rbp
0x1fa8:    48 89 e5                              	mov rbp, rsp
0x1fab:    e8 40 cc 03 00                        	call 0x3ebf0 <mcount>
0x1fb0:    48 8b 07                              	mov rax, qword ptr [rdi]
0x1fb3:    48 89 02                              	mov qword ptr [rdx], rax
0x1fb6:    c9                                    	leave 
0x1fb7:    c3                                    	ret 
; function: FUSBDTV_StartUSBDevice at 0x1fb8 -- 0x1ff2
0x1fb8:    55                                    	push rbp
0x1fb9:    48 89 e5                              	mov rbp, rsp
0x1fbc:    48 83 ec 20                           	sub rsp, 0x20
0x1fc0:    48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x1fc4:    4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x1fc8:    4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x1fcc:    e8 1f cc 03 00                        	call 0x3ebf0 <mcount>
0x1fd1:    49 89 fd                              	mov r13, rdi
0x1fd4:    49 89 f4                              	mov r12, rsi
0x1fd7:    be 90 66 00 00                        	mov esi, 0x6690
0x1fdc:    bf 00 00 00 00                        	mov edi, 0
0x1fe1:    e8 82 41 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x1fe6:    48 89 c3                              	mov rbx, rax
0x1fe9:    48 89 c2                              	mov rdx, rax
0x1fec:    4c 89 e6                              	mov rsi, r12
0x1fef:    4c 89 ef                              	mov rdi, r13
; function: FUSBDTV_AddUSBDevice at 0x1ff2 -- 0x2022
0x1ff2:    e8 b0 ff ff ff                        	call 0x1fa7 <FUSBDTV_SetFakeDeviceObj>
0x1ff7:    48 89 df                              	mov rdi, rbx
0x1ffa:    e8 18 be 01 00                        	call 0x1de17 <FUSB_IncrementIoCount>
0x1fff:    48 89 df                              	mov rdi, rbx
0x2002:    e8 00 be 01 00                        	call 0x1de07 <FUSB_DecrementIoCount>
0x2007:    48 89 df                              	mov rdi, rbx
0x200a:    e8 49 41 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x200f:    b8 01 00 00 00                        	mov eax, 1
0x2014:    48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x2018:    4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x201c:    4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x2020:    c9                                    	leave 
0x2021:    c3                                    	ret 
; function: FUSBDTV_AddUSBDevice at 0x2022 -- 0x3010
0x2022:    55                                    	push rbp
0x2023:    48 89 e5                              	mov rbp, rsp
0x2026:    41 54                                 	push r12
0x2028:    53                                    	push rbx
0x2029:    48 81 ec 70 02 00 00                  	sub rsp, 0x270
0x2030:    e8 bb cb 03 00                        	call 0x3ebf0 <mcount>
0x2035:    48 89 d6                              	mov rsi, rdx
0x2038:    48 89 cb                              	mov rbx, rcx
0x203b:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x2044:    48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x2048:    31 c0                                 	xor eax, eax
0x204a:    41 b8 01 00 00 00                     	mov r8d, 1
0x2050:    ba 00 00 00 00                        	mov edx, 0
0x2055:    bf 00 00 00 00                        	mov edi, 0
0x205a:    e8 c3 bd 01 00                        	call 0x1de22 <FUSB_CreateDeviceObject>
0x205f:    49 89 c4                              	mov r12, rax
0x2062:    0f b6 f8                              	movzx edi, al
0x2065:    e8 16 f5 ff ff                        	call 0x1580 <NT_SUCCESS>
0x206a:    84 c0                                 	test al, al
0x206c:    0f 84 58 01 00 00                     	je 0x21ca <FUSBDTV_AddUSBDevice+0x1a8>
0x2072:    48 c7 83 b8 00 00 00 00 00 00 00      	mov qword ptr [rbx + 0xb8], 0
0x207d:    c6 45 e0 b5                           	mov byte ptr [rbp - 0x20], 0xb5
0x2081:    c6 45 e1 04                           	mov byte ptr [rbp - 0x1f], 4
0x2085:    c6 45 e2 89                           	mov byte ptr [rbp - 0x1e], 0x89
0x2089:    c6 45 e3 79                           	mov byte ptr [rbp - 0x1d], 0x79
0x208d:    c6 45 e4 41                           	mov byte ptr [rbp - 0x1c], 0x41
0x2091:    c6 45 e5 1f                           	mov byte ptr [rbp - 0x1b], 0x1f
0x2095:    c6 45 e6 03                           	mov byte ptr [rbp - 0x1a], 3
0x2099:    c6 45 e7 d7                           	mov byte ptr [rbp - 0x19], 0xd7
0x209d:    c6 45 d0 ab                           	mov byte ptr [rbp - 0x30], 0xab
0x20a1:    c6 45 d1 4f                           	mov byte ptr [rbp - 0x2f], 0x4f
0x20a5:    c6 45 d2 1a                           	mov byte ptr [rbp - 0x2e], 0x1a
0x20a9:    c6 45 d3 8e                           	mov byte ptr [rbp - 0x2d], 0x8e
0x20ad:    c6 45 d4 ed                           	mov byte ptr [rbp - 0x2c], 0xed
0x20b1:    c6 45 d5 eb                           	mov byte ptr [rbp - 0x2b], 0xeb ; "%("
0x20b5:    c6 45 d6 5b                           	mov byte ptr [rbp - 0x2a], 0x5b
0x20b9:    c6 45 d7 4a                           	mov byte ptr [rbp - 0x29], 0x4a
0x20bd:    c6 45 c0 8a                           	mov byte ptr [rbp - 0x40], 0x8a
0x20c1:    c6 45 c1 85                           	mov byte ptr [rbp - 0x3f], 0x85
0x20c5:    c6 45 c2 4f                           	mov byte ptr [rbp - 0x3e], 0x4f
0x20c9:    c6 45 c3 76                           	mov byte ptr [rbp - 0x3d], 0x76
0x20cd:    c6 45 c4 c0                           	mov byte ptr [rbp - 0x3c], 0xc0
0x20d1:    c6 45 c5 f4                           	mov byte ptr [rbp - 0x3b], 0xf4
0x20d5:    c6 45 c6 2a                           	mov byte ptr [rbp - 0x3a], 0x2a
0x20d9:    c6 45 c7 03                           	mov byte ptr [rbp - 0x39], 3
0x20dd:    41 b8 00 00 00 00                     	mov r8d, 0
0x20e3:    41 b9 00 00 00 00                     	mov r9d, 0
0x20e9:    48 8d 7d e0                           	lea rdi, [rbp - 0x20]
0x20ed:    eb 3b                                 	jmp 0x212a <FUSBDTV_AddUSBDevice+0x108>
0x20ef:    0f b6 31                              	movzx esi, byte ptr [rcx]
0x20f2:    40 28 c6                              	sub sil, al
0x20f5:    40 32 34 07                           	xor sil, byte ptr [rdi + rax]
0x20f9:    40 88 32                              	mov byte ptr [rdx], sil
0x20fc:    48 83 c0 01                           	add rax, 1
0x2100:    48 83 c1 01                           	add rcx, 1
0x2104:    48 83 c2 01                           	add rdx, 1
0x2108:    48 83 f8 08                           	cmp rax, 8
0x210c:    75 e1                                 	jne 0x20ef <FUSBDTV_AddUSBDevice+0xcd>
0x210e:    49 83 c0 08                           	add r8, 8
0x2112:    49 81 f8 c0 00 00 00                  	cmp r8, 0xc0
0x2119:    75 0f                                 	jne 0x212a <FUSBDTV_AddUSBDevice+0x108>
0x211b:    41 b0 00                              	mov r8b, 0
0x211e:    41 b9 00 00 00 00                     	mov r9d, 0
0x2124:    48 8d 7d d0                           	lea rdi, [rbp - 0x30]
0x2128:    eb 4c                                 	jmp 0x2176 <FUSBDTV_AddUSBDevice+0x154>
0x212a:    49 8d 88 00 00 00 00                  	lea rcx, [r8]
0x2131:    4a 8d 94 03 d8 01 00 00               	lea rdx, [rbx + r8 + 0x1d8]
0x2139:    4c 89 c8                              	mov rax, r9
0x213c:    eb b1                                 	jmp 0x20ef <FUSBDTV_AddUSBDevice+0xcd>
0x213e:    0f b6 31                              	movzx esi, byte ptr [rcx]
0x2141:    40 28 c6                              	sub sil, al
0x2144:    40 32 34 07                           	xor sil, byte ptr [rdi + rax]
0x2148:    40 88 32                              	mov byte ptr [rdx], sil
0x214b:    48 83 c0 01                           	add rax, 1
0x214f:    48 83 c1 01                           	add rcx, 1
0x2153:    48 83 c2 01                           	add rdx, 1
0x2157:    48 83 f8 08                           	cmp rax, 8
0x215b:    75 e1                                 	jne 0x213e <FUSBDTV_AddUSBDevice+0x11c>
0x215d:    49 83 c0 08                           	add r8, 8
0x2161:    49 83 f8 20                           	cmp r8, 0x20
0x2165:    75 0f                                 	jne 0x2176 <FUSBDTV_AddUSBDevice+0x154>
0x2167:    41 b0 00                              	mov r8b, 0
0x216a:    41 b9 00 00 00 00                     	mov r9d, 0
0x2170:    48 8d 7d c0                           	lea rdi, [rbp - 0x40]
0x2174:    eb 40                                 	jmp 0x21b6 <FUSBDTV_AddUSBDevice+0x194>
0x2176:    49 8d 88 00 00 00 00                  	lea rcx, [r8]
0x217d:    4a 8d 94 03 98 02 00 00               	lea rdx, [rbx + r8 + 0x298]
0x2185:    4c 89 c8                              	mov rax, r9
0x2188:    eb b4                                 	jmp 0x213e <FUSBDTV_AddUSBDevice+0x11c>
0x218a:    0f b6 31                              	movzx esi, byte ptr [rcx]
0x218d:    40 28 c6                              	sub sil, al
0x2190:    40 32 34 07                           	xor sil, byte ptr [rdi + rax]
0x2194:    40 88 32                              	mov byte ptr [rdx], sil
0x2197:    48 83 c0 01                           	add rax, 1
0x219b:    48 83 c1 01                           	add rcx, 1
0x219f:    48 83 c2 01                           	add rdx, 1
0x21a3:    48 83 f8 08                           	cmp rax, 8
0x21a7:    75 e1                                 	jne 0x218a <FUSBDTV_AddUSBDevice+0x168>
0x21a9:    49 83 c0 08                           	add r8, 8
0x21ad:    49 81 f8 c0 00 00 00                  	cmp r8, 0xc0
0x21b4:    74 14                                 	je 0x21ca <FUSBDTV_AddUSBDevice+0x1a8>
0x21b6:    49 8d 88 00 00 00 00                  	lea rcx, [r8]
0x21bd:    4a 8d 94 03 b8 02 00 00               	lea rdx, [rbx + r8 + 0x2b8]
0x21c5:    4c 89 c8                              	mov rax, r9
0x21c8:    eb c0                                 	jmp 0x218a <FUSBDTV_AddUSBDevice+0x168>
0x21ca:    c7 85 50 ff ff ff 15 57 9e 94         	mov dword ptr [rbp - 0xb0], 0x949e5715
0x21d4:    c7 85 54 ff ff ff 29 01 69 ba         	mov dword ptr [rbp - 0xac], 0xba690129
0x21de:    c7 85 58 ff ff ff 4e ef ca 70         	mov dword ptr [rbp - 0xa8], 0x70caef4e
0x21e8:    c7 85 5c ff ff ff 08 5c 21 6c         	mov dword ptr [rbp - 0xa4], 0x6c215c08
0x21f2:    c7 85 40 ff ff ff 20 99 78 0d         	mov dword ptr [rbp - 0xc0], 0xd789920
0x21fc:    c7 85 44 ff ff ff f8 49 90 63         	mov dword ptr [rbp - 0xbc], 0x639049f8
0x2206:    c7 85 48 ff ff ff ac 50 7d a8         	mov dword ptr [rbp - 0xb8], 0xa87d50ac
0x2210:    c7 85 4c ff ff ff ed 4f ad 85         	mov dword ptr [rbp - 0xb4], 0x85ad4fed
0x221a:    c7 85 30 ff ff ff 15 6c e8 81         	mov dword ptr [rbp - 0xd0], 0x81e86c15
0x2224:    c7 85 34 ff ff ff 4e 49 a1 53         	mov dword ptr [rbp - 0xcc], 0x53a1494e
0x222e:    c7 85 38 ff ff ff 11 61 5a a5         	mov dword ptr [rbp - 0xc8], 0xa55a6111
0x2238:    c7 85 3c ff ff ff de a8 d4 af         	mov dword ptr [rbp - 0xc4], 0xafd4a8de
0x2242:    c7 85 20 ff ff ff fc 2b e2 1f         	mov dword ptr [rbp - 0xe0], 0x1fe22bfc
0x224c:    c7 85 24 ff ff ff 11 49 8a 2e         	mov dword ptr [rbp - 0xdc], 0x2e8a4911
0x2256:    c7 85 28 ff ff ff 71 98 f7 91         	mov dword ptr [rbp - 0xd8], 0x91f79871
0x2260:    c7 85 2c ff ff ff cb 20 38 9f         	mov dword ptr [rbp - 0xd4], 0x9f3820cb
0x226a:    c7 85 10 ff ff ff 50 2a 1f 5c         	mov dword ptr [rbp - 0xf0], 0x5c1f2a50
0x2274:    c7 85 14 ff ff ff 94 45 2a ea         	mov dword ptr [rbp - 0xec], 0xea2a4594
0x227e:    c7 85 18 ff ff ff 77 14 0b 81         	mov dword ptr [rbp - 0xe8], 0x810b1477
0x2288:    c7 85 1c ff ff ff 1b 3c a6 c2         	mov dword ptr [rbp - 0xe4], 0xc2a63c1b
0x2292:    c7 85 00 ff ff ff dd 2c 3d fd         	mov dword ptr [rbp - 0x100], 0xfd3d2cdd
0x229c:    c7 85 04 ff ff ff c1 45 84 ce         	mov dword ptr [rbp - 0xfc], 0xce8445c1
0x22a6:    c7 85 08 ff ff ff 84 0b 17 83         	mov dword ptr [rbp - 0xf8], 0x83170b84
0x22b0:    c7 85 0c ff ff ff e7 a0 f1 77         	mov dword ptr [rbp - 0xf4], 0x77f1a0e7
0x22ba:    c7 85 f0 fe ff ff f9 3c 60 65         	mov dword ptr [rbp - 0x110], 0x65603cf9
0x22c4:    c7 85 f4 fe ff ff 8f 40 41 f7         	mov dword ptr [rbp - 0x10c], 0xf741408f
0x22ce:    c7 85 f8 fe ff ff d0 36 13 94         	mov dword ptr [rbp - 0x108], 0x941336d0
0x22d8:    c7 85 fc fe ff ff 0a 1a 47 33         	mov dword ptr [rbp - 0x104], 0x33471a0a
0x22e2:    c7 85 e0 fe ff ff dc 78 9c 27         	mov dword ptr [rbp - 0x120], 0x279c78dc
0x22ec:    c7 85 e4 fe ff ff a1 42 94 15         	mov dword ptr [rbp - 0x11c], 0x159442a1
0x22f6:    c7 85 e8 fe ff ff 29 92 32 bd         	mov dword ptr [rbp - 0x118], 0xbd329229
0x2300:    c7 85 ec fe ff ff 00 08 f7 40         	mov dword ptr [rbp - 0x114], 0x40f70800
0x230a:    c7 85 d0 fe ff ff 9c 08 2e 85         	mov dword ptr [rbp - 0x130], 0x852e089c
0x2314:    c7 85 d4 fe ff ff ca 4a 1d 3f         	mov dword ptr [rbp - 0x12c], 0x3f1d4aca
0x231e:    c7 85 d8 fe ff ff 12 67 a8 91         	mov dword ptr [rbp - 0x128], 0x91a86712
0x2328:    c7 85 dc fe ff ff 2c ec 0e c0         	mov dword ptr [rbp - 0x124], 0xc00eec2c
0x2332:    c7 85 c0 fe ff ff b4 b2 6f 29         	mov dword ptr [rbp - 0x140], 0x296fb2b4
0x233c:    c7 85 c4 fe ff ff ed 46 d3 3c         	mov dword ptr [rbp - 0x13c], 0x3cd346ed
0x2346:    c7 85 c8 fe ff ff ac fe 36 8f         	mov dword ptr [rbp - 0x138], 0x8f36feac
0x2350:    c7 85 cc fe ff ff 8d 13 e9 41         	mov dword ptr [rbp - 0x134], 0x41e9138d
0x235a:    49 b8 dd 91 08 6c e7 4e bb f3         	movabs r8, 0xf3bb4ee76c0891dd
0x2364:    b8 00 00 00 00                        	mov eax, 0
0x2369:    48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2370:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0x2377:    8b 0c 87                              	mov ecx, dword ptr [rdi + rax*4]
0x237a:    29 c1                                 	sub ecx, eax
0x237c:    44 31 c1                              	xor ecx, r8d
0x237f:    89 8c 83 e8 36 00 00                  	mov dword ptr [rbx + rax*4 + 0x36e8], ecx
0x2386:    8b 0c 86                              	mov ecx, dword ptr [rsi + rax*4]
0x2389:    29 c1                                 	sub ecx, eax
0x238b:    89 ca                                 	mov edx, ecx
0x238d:    81 f2 e7 4e bb f3                     	xor edx, 0xf3bb4ee7
0x2393:    89 94 83 ec 36 00 00                  	mov dword ptr [rbx + rax*4 + 0x36ec], edx
0x239a:    48 83 c0 02                           	add rax, 2
0x239e:    48 83 f8 0a                           	cmp rax, 0xa
0x23a2:    75 d3                                 	jne 0x2377 <FUSBDTV_AddUSBDevice+0x355>
0x23a4:    be 00 00 00 00                        	mov esi, 0
0x23a9:    41 b9 00 00 00 00                     	mov r9d, 0
0x23af:    4c 8d 85 50 ff ff ff                  	lea r8, [rbp - 0xb0]
0x23b6:    eb 3c                                 	jmp 0x23f4 <FUSBDTV_AddUSBDevice+0x3d2>
0x23b8:    8b 39                                 	mov edi, dword ptr [rcx]
0x23ba:    29 f7                                 	sub edi, esi
0x23bc:    41 33 3c 80                           	xor edi, dword ptr [r8 + rax*4]
0x23c0:    89 3a                                 	mov dword ptr [rdx], edi
0x23c2:    48 83 c0 01                           	add rax, 1
0x23c6:    48 83 c1 04                           	add rcx, 4
0x23ca:    48 83 c2 04                           	add rdx, 4
0x23ce:    48 83 f8 04                           	cmp rax, 4
0x23d2:    75 e4                                 	jne 0x23b8 <FUSBDTV_AddUSBDevice+0x396>
0x23d4:    48 83 c6 04                           	add rsi, 4
0x23d8:    48 81 fe 00 01 00 00                  	cmp rsi, 0x100
0x23df:    75 13                                 	jne 0x23f4 <FUSBDTV_AddUSBDevice+0x3d2>
0x23e1:    66 be 00 00                           	mov si, 0
0x23e5:    41 b9 00 00 00 00                     	mov r9d, 0
0x23eb:    4c 8d 85 40 ff ff ff                  	lea r8, [rbp - 0xc0]
0x23f2:    eb 51                                 	jmp 0x2445 <FUSBDTV_AddUSBDevice+0x423>
0x23f4:    48 8d 0c b5 00 00 00 00               	lea rcx, [rsi*4]
0x23fc:    48 8d 94 b3 e8 0e 00 00               	lea rdx, [rbx + rsi*4 + 0xee8]
0x2404:    4c 89 c8                              	mov rax, r9
0x2407:    eb af                                 	jmp 0x23b8 <FUSBDTV_AddUSBDevice+0x396>
0x2409:    8b 39                                 	mov edi, dword ptr [rcx]
0x240b:    29 f7                                 	sub edi, esi
0x240d:    41 33 3c 80                           	xor edi, dword ptr [r8 + rax*4]
0x2411:    89 3a                                 	mov dword ptr [rdx], edi
0x2413:    48 83 c0 01                           	add rax, 1
0x2417:    48 83 c1 04                           	add rcx, 4
0x241b:    48 83 c2 04                           	add rdx, 4
0x241f:    48 83 f8 04                           	cmp rax, 4
0x2423:    75 e4                                 	jne 0x2409 <FUSBDTV_AddUSBDevice+0x3e7>
0x2425:    48 83 c6 04                           	add rsi, 4
0x2429:    48 81 fe 00 01 00 00                  	cmp rsi, 0x100
0x2430:    75 13                                 	jne 0x2445 <FUSBDTV_AddUSBDevice+0x423>
0x2432:    66 be 00 00                           	mov si, 0
0x2436:    41 b9 00 00 00 00                     	mov r9d, 0
0x243c:    4c 8d 85 30 ff ff ff                  	lea r8, [rbp - 0xd0]
0x2443:    eb 51                                 	jmp 0x2496 <FUSBDTV_AddUSBDevice+0x474>
0x2445:    48 8d 0c b5 00 00 00 00               	lea rcx, [rsi*4]
0x244d:    48 8d 94 b3 e8 12 00 00               	lea rdx, [rbx + rsi*4 + 0x12e8]
0x2455:    4c 89 c8                              	mov rax, r9
0x2458:    eb af                                 	jmp 0x2409 <FUSBDTV_AddUSBDevice+0x3e7>
0x245a:    8b 39                                 	mov edi, dword ptr [rcx]
0x245c:    29 f7                                 	sub edi, esi
0x245e:    41 33 3c 80                           	xor edi, dword ptr [r8 + rax*4]
0x2462:    89 3a                                 	mov dword ptr [rdx], edi
0x2464:    48 83 c0 01                           	add rax, 1
0x2468:    48 83 c1 04                           	add rcx, 4
0x246c:    48 83 c2 04                           	add rdx, 4
0x2470:    48 83 f8 04                           	cmp rax, 4
0x2474:    75 e4                                 	jne 0x245a <FUSBDTV_AddUSBDevice+0x438>
0x2476:    48 83 c6 04                           	add rsi, 4
0x247a:    48 81 fe 00 01 00 00                  	cmp rsi, 0x100
0x2481:    75 13                                 	jne 0x2496 <FUSBDTV_AddUSBDevice+0x474>
0x2483:    66 be 00 00                           	mov si, 0
0x2487:    41 b9 00 00 00 00                     	mov r9d, 0
0x248d:    4c 8d 85 20 ff ff ff                  	lea r8, [rbp - 0xe0]
0x2494:    eb 51                                 	jmp 0x24e7 <FUSBDTV_AddUSBDevice+0x4c5>
0x2496:    48 8d 0c b5 00 00 00 00               	lea rcx, [rsi*4]
0x249e:    48 8d 94 b3 e8 16 00 00               	lea rdx, [rbx + rsi*4 + 0x16e8]
0x24a6:    4c 89 c8                              	mov rax, r9
0x24a9:    eb af                                 	jmp 0x245a <FUSBDTV_AddUSBDevice+0x438>
0x24ab:    8b 39                                 	mov edi, dword ptr [rcx]
0x24ad:    29 f7                                 	sub edi, esi
0x24af:    41 33 3c 80                           	xor edi, dword ptr [r8 + rax*4]
0x24b3:    89 3a                                 	mov dword ptr [rdx], edi
0x24b5:    48 83 c0 01                           	add rax, 1
0x24b9:    48 83 c1 04                           	add rcx, 4
0x24bd:    48 83 c2 04                           	add rdx, 4
0x24c1:    48 83 f8 04                           	cmp rax, 4
0x24c5:    75 e4                                 	jne 0x24ab <FUSBDTV_AddUSBDevice+0x489>
0x24c7:    48 83 c6 04                           	add rsi, 4
0x24cb:    48 81 fe 00 01 00 00                  	cmp rsi, 0x100
0x24d2:    75 13                                 	jne 0x24e7 <FUSBDTV_AddUSBDevice+0x4c5>
0x24d4:    66 be 00 00                           	mov si, 0
0x24d8:    41 b9 00 00 00 00                     	mov r9d, 0
0x24de:    4c 8d 85 10 ff ff ff                  	lea r8, [rbp - 0xf0]
0x24e5:    eb 51                                 	jmp 0x2538 <FUSBDTV_AddUSBDevice+0x516>
0x24e7:    48 8d 0c b5 00 00 00 00               	lea rcx, [rsi*4]
0x24ef:    48 8d 94 b3 e8 1a 00 00               	lea rdx, [rbx + rsi*4 + 0x1ae8]
0x24f7:    4c 89 c8                              	mov rax, r9
0x24fa:    eb af                                 	jmp 0x24ab <FUSBDTV_AddUSBDevice+0x489>
0x24fc:    8b 39                                 	mov edi, dword ptr [rcx]
0x24fe:    29 f7                                 	sub edi, esi
0x2500:    41 33 3c 80                           	xor edi, dword ptr [r8 + rax*4]
0x2504:    89 3a                                 	mov dword ptr [rdx], edi
0x2506:    48 83 c0 01                           	add rax, 1
0x250a:    48 83 c1 04                           	add rcx, 4
0x250e:    48 83 c2 04                           	add rdx, 4
0x2512:    48 83 f8 04                           	cmp rax, 4
0x2516:    75 e4                                 	jne 0x24fc <FUSBDTV_AddUSBDevice+0x4da>
0x2518:    48 83 c6 04                           	add rsi, 4
0x251c:    48 81 fe 00 01 00 00                  	cmp rsi, 0x100
0x2523:    75 13                                 	jne 0x2538 <FUSBDTV_AddUSBDevice+0x516>
0x2525:    66 be 00 00                           	mov si, 0
0x2529:    41 b9 00 00 00 00                     	mov r9d, 0
0x252f:    4c 8d 85 00 ff ff ff                  	lea r8, [rbp - 0x100]
0x2536:    eb 51                                 	jmp 0x2589 <FUSBDTV_AddUSBDevice+0x567>
0x2538:    48 8d 0c b5 00 00 00 00               	lea rcx, [rsi*4]
0x2540:    48 8d 94 b3 e8 1e 00 00               	lea rdx, [rbx + rsi*4 + 0x1ee8]
0x2548:    4c 89 c8                              	mov rax, r9
0x254b:    eb af                                 	jmp 0x24fc <FUSBDTV_AddUSBDevice+0x4da>
0x254d:    8b 39                                 	mov edi, dword ptr [rcx]
0x254f:    29 f7                                 	sub edi, esi
0x2551:    41 33 3c 80                           	xor edi, dword ptr [r8 + rax*4]
0x2555:    89 3a                                 	mov dword ptr [rdx], edi
0x2557:    48 83 c0 01                           	add rax, 1
0x255b:    48 83 c1 04                           	add rcx, 4
0x255f:    48 83 c2 04                           	add rdx, 4
0x2563:    48 83 f8 04                           	cmp rax, 4
0x2567:    75 e4                                 	jne 0x254d <FUSBDTV_AddUSBDevice+0x52b>
0x2569:    48 83 c6 04                           	add rsi, 4
0x256d:    48 81 fe 00 01 00 00                  	cmp rsi, 0x100
0x2574:    75 13                                 	jne 0x2589 <FUSBDTV_AddUSBDevice+0x567>
0x2576:    66 be 00 00                           	mov si, 0
0x257a:    41 b9 00 00 00 00                     	mov r9d, 0
0x2580:    4c 8d 85 f0 fe ff ff                  	lea r8, [rbp - 0x110]
0x2587:    eb 51                                 	jmp 0x25da <FUSBDTV_AddUSBDevice+0x5b8>
0x2589:    48 8d 0c b5 00 00 00 00               	lea rcx, [rsi*4]
0x2591:    48 8d 94 b3 e8 22 00 00               	lea rdx, [rbx + rsi*4 + 0x22e8]
0x2599:    4c 89 c8                              	mov rax, r9
0x259c:    eb af                                 	jmp 0x254d <FUSBDTV_AddUSBDevice+0x52b>
0x259e:    8b 39                                 	mov edi, dword ptr [rcx]
0x25a0:    29 f7                                 	sub edi, esi
0x25a2:    41 33 3c 80                           	xor edi, dword ptr [r8 + rax*4]
0x25a6:    89 3a                                 	mov dword ptr [rdx], edi
0x25a8:    48 83 c0 01                           	add rax, 1
0x25ac:    48 83 c1 04                           	add rcx, 4
0x25b0:    48 83 c2 04                           	add rdx, 4
0x25b4:    48 83 f8 04                           	cmp rax, 4
0x25b8:    75 e4                                 	jne 0x259e <FUSBDTV_AddUSBDevice+0x57c>
0x25ba:    48 83 c6 04                           	add rsi, 4
0x25be:    48 81 fe 00 01 00 00                  	cmp rsi, 0x100
0x25c5:    75 13                                 	jne 0x25da <FUSBDTV_AddUSBDevice+0x5b8>
0x25c7:    66 be 00 00                           	mov si, 0
0x25cb:    41 b9 00 00 00 00                     	mov r9d, 0
0x25d1:    4c 8d 85 e0 fe ff ff                  	lea r8, [rbp - 0x120]
0x25d8:    eb 51                                 	jmp 0x262b <FUSBDTV_AddUSBDevice+0x609>
0x25da:    48 8d 0c b5 00 00 00 00               	lea rcx, [rsi*4]
0x25e2:    48 8d 94 b3 e8 26 00 00               	lea rdx, [rbx + rsi*4 + 0x26e8]
0x25ea:    4c 89 c8                              	mov rax, r9
0x25ed:    eb af                                 	jmp 0x259e <FUSBDTV_AddUSBDevice+0x57c>
0x25ef:    8b 39                                 	mov edi, dword ptr [rcx]
0x25f1:    29 f7                                 	sub edi, esi
0x25f3:    41 33 3c 80                           	xor edi, dword ptr [r8 + rax*4]
0x25f7:    89 3a                                 	mov dword ptr [rdx], edi
0x25f9:    48 83 c0 01                           	add rax, 1
0x25fd:    48 83 c1 04                           	add rcx, 4
0x2601:    48 83 c2 04                           	add rdx, 4
0x2605:    48 83 f8 04                           	cmp rax, 4
0x2609:    75 e4                                 	jne 0x25ef <FUSBDTV_AddUSBDevice+0x5cd>
0x260b:    48 83 c6 04                           	add rsi, 4
0x260f:    48 81 fe 00 01 00 00                  	cmp rsi, 0x100
0x2616:    75 13                                 	jne 0x262b <FUSBDTV_AddUSBDevice+0x609>
0x2618:    66 be 00 00                           	mov si, 0
0x261c:    41 b9 00 00 00 00                     	mov r9d, 0
0x2622:    4c 8d 85 d0 fe ff ff                  	lea r8, [rbp - 0x130]
0x2629:    eb 51                                 	jmp 0x267c <FUSBDTV_AddUSBDevice+0x65a>
0x262b:    48 8d 0c b5 00 00 00 00               	lea rcx, [rsi*4]
0x2633:    48 8d 94 b3 e8 2a 00 00               	lea rdx, [rbx + rsi*4 + 0x2ae8]
0x263b:    4c 89 c8                              	mov rax, r9
0x263e:    eb af                                 	jmp 0x25ef <FUSBDTV_AddUSBDevice+0x5cd>
0x2640:    8b 39                                 	mov edi, dword ptr [rcx]
0x2642:    29 f7                                 	sub edi, esi
0x2644:    41 33 3c 80                           	xor edi, dword ptr [r8 + rax*4]
0x2648:    89 3a                                 	mov dword ptr [rdx], edi
0x264a:    48 83 c0 01                           	add rax, 1
0x264e:    48 83 c1 04                           	add rcx, 4
0x2652:    48 83 c2 04                           	add rdx, 4
0x2656:    48 83 f8 04                           	cmp rax, 4
0x265a:    75 e4                                 	jne 0x2640 <FUSBDTV_AddUSBDevice+0x61e>
0x265c:    48 83 c6 04                           	add rsi, 4
0x2660:    48 81 fe 00 01 00 00                  	cmp rsi, 0x100
0x2667:    75 13                                 	jne 0x267c <FUSBDTV_AddUSBDevice+0x65a>
0x2669:    66 be 00 00                           	mov si, 0
0x266d:    41 b9 00 00 00 00                     	mov r9d, 0
0x2673:    4c 8d 85 c0 fe ff ff                  	lea r8, [rbp - 0x140]
0x267a:    eb 3e                                 	jmp 0x26ba <FUSBDTV_AddUSBDevice+0x698>
0x267c:    48 8d 0c b5 00 00 00 00               	lea rcx, [rsi*4]
0x2684:    48 8d 94 b3 e8 2e 00 00               	lea rdx, [rbx + rsi*4 + 0x2ee8]
0x268c:    4c 89 c8                              	mov rax, r9
0x268f:    eb af                                 	jmp 0x2640 <FUSBDTV_AddUSBDevice+0x61e>
0x2691:    8b 39                                 	mov edi, dword ptr [rcx]
0x2693:    29 f7                                 	sub edi, esi
0x2695:    41 33 3c 80                           	xor edi, dword ptr [r8 + rax*4]
0x2699:    89 3a                                 	mov dword ptr [rdx], edi
0x269b:    48 83 c0 01                           	add rax, 1
0x269f:    48 83 c1 04                           	add rcx, 4
0x26a3:    48 83 c2 04                           	add rdx, 4
0x26a7:    48 83 f8 04                           	cmp rax, 4
0x26ab:    75 e4                                 	jne 0x2691 <FUSBDTV_AddUSBDevice+0x66f>
0x26ad:    48 83 c6 04                           	add rsi, 4
0x26b1:    48 81 fe 00 01 00 00                  	cmp rsi, 0x100
0x26b8:    74 15                                 	je 0x26cf <FUSBDTV_AddUSBDevice+0x6ad>
0x26ba:    48 8d 0c b5 00 00 00 00               	lea rcx, [rsi*4]
0x26c2:    48 8d 94 b3 e8 32 00 00               	lea rdx, [rbx + rsi*4 + 0x32e8]
0x26ca:    4c 89 c8                              	mov rax, r9
0x26cd:    eb c2                                 	jmp 0x2691 <FUSBDTV_AddUSBDevice+0x66f>
0x26cf:    48 c7 85 a0 fe ff ff 2e 0a 6a 05      	mov qword ptr [rbp - 0x160], 0x56a0a2e
0x26da:    c7 85 a8 fe ff ff ed 47 63 ae         	mov dword ptr [rbp - 0x158], 0xae6347ed
0x26e4:    c7 85 ac fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x154], 0
0x26ee:    c7 85 b0 fe ff ff 8a 69 af b5         	mov dword ptr [rbp - 0x150], 0xb5af698a
0x26f8:    c7 85 b4 fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x14c], 0
0x2702:    c7 85 b8 fe ff ff 83 01 84 a9         	mov dword ptr [rbp - 0x148], 0xa9840183
0x270c:    c7 85 bc fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x144], 0
0x2716:    48 c7 85 80 fe ff ff 70 95 27 51      	mov qword ptr [rbp - 0x180], 0x51279570
0x2721:    48 c7 85 88 fe ff ff 92 49 b4 10      	mov qword ptr [rbp - 0x178], 0x10b44992
0x272c:    c7 85 90 fe ff ff 1a c2 d1 81         	mov dword ptr [rbp - 0x170], 0x81d1c21a
0x2736:    c7 85 94 fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x16c], 0
0x2740:    c7 85 98 fe ff ff 56 2b bc ec         	mov dword ptr [rbp - 0x168], 0xecbc2b56
0x274a:    c7 85 9c fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x164], 0
0x2754:    48 c7 85 60 fe ff ff 99 1b 4a 5b      	mov qword ptr [rbp - 0x1a0], 0x5b4a1b99
0x275f:    c7 85 68 fe ff ff 5a 42 18 99         	mov dword ptr [rbp - 0x198], 0x9918425a
0x2769:    c7 85 6c fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x194], 0
0x2773:    c7 85 70 fe ff ff 23 50 8c 97         	mov dword ptr [rbp - 0x190], 0x978c5023
0x277d:    c7 85 74 fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x18c], 0
0x2787:    48 c7 85 78 fe ff ff be e8 9f 09      	mov qword ptr [rbp - 0x188], 0x99fe8be
0x2792:    48 c7 85 40 fe ff ff 32 a2 71 7d      	mov qword ptr [rbp - 0x1c0], 0x7d71a232
0x279d:    c7 85 48 fe ff ff b5 42 74 e0         	mov dword ptr [rbp - 0x1b8], 0xe07442b5
0x27a7:    c7 85 4c fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x1b4], 0
0x27b1:    c7 85 50 fe ff ff 72 de 2e 94         	mov dword ptr [rbp - 0x1b0], 0x942ede72
0x27bb:    c7 85 54 fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x1ac], 0
0x27c5:    48 c7 85 58 fe ff ff c9 d7 7b 2d      	mov qword ptr [rbp - 0x1a8], 0x2d7bd7c9
0x27d0:    48 c7 85 20 fe ff ff 53 84 32 18      	mov qword ptr [rbp - 0x1e0], 0x18328453
0x27db:    c7 85 28 fe ff ff 3f 49 d6 b3         	mov dword ptr [rbp - 0x1d8], 0xb3d6493f
0x27e5:    c7 85 2c fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x1d4], 0
0x27ef:    c7 85 30 fe ff ff f3 62 00 be         	mov dword ptr [rbp - 0x1d0], 0xbe0062f3
0x27f9:    c7 85 34 fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x1cc], 0
0x2803:    48 c7 85 38 fe ff ff cd 2c 78 69      	mov qword ptr [rbp - 0x1c8], 0x69782ccd
0x280e:    c7 85 00 fe ff ff 41 06 f8 ed         	mov dword ptr [rbp - 0x200], 0xedf80641
0x2818:    c7 85 04 fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x1fc], 0
0x2822:    c7 85 08 fe ff ff 9f 45 db bb         	mov dword ptr [rbp - 0x1f8], 0xbbdb459f
0x282c:    c7 85 0c fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x1f4], 0
0x2836:    c7 85 10 fe ff ff dd 70 9b bc         	mov dword ptr [rbp - 0x1f0], 0xbc9b70dd
0x2840:    c7 85 14 fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x1ec], 0
0x284a:    48 c7 85 18 fe ff ff e2 b3 db 13      	mov qword ptr [rbp - 0x1e8], 0x13dbb3e2
0x2855:    48 c7 85 e0 fd ff ff 22 a5 62 6c      	mov qword ptr [rbp - 0x220], 0x6c62a522
0x2860:    48 c7 85 e8 fd ff ff 59 41 e3 54      	mov qword ptr [rbp - 0x218], 0x54e34159
0x286b:    c7 85 f0 fd ff ff de ff c7 83         	mov dword ptr [rbp - 0x210], 0x83c7ffde
0x2875:    c7 85 f4 fd ff ff 00 00 00 00         	mov dword ptr [rbp - 0x20c], 0
0x287f:    48 c7 85 f8 fd ff ff c9 4f d8 47      	mov qword ptr [rbp - 0x208], 0x47d84fc9
0x288a:    48 c7 85 c0 fd ff ff 14 3f ad 18      	mov qword ptr [rbp - 0x240], 0x18ad3f14
0x2895:    48 c7 85 c8 fd ff ff 3a 4b c2 0b      	mov qword ptr [rbp - 0x238], 0xbc24b3a
0x28a0:    c7 85 d0 fd ff ff 68 95 62 95         	mov dword ptr [rbp - 0x230], 0x95629568
0x28aa:    c7 85 d4 fd ff ff 00 00 00 00         	mov dword ptr [rbp - 0x22c], 0
0x28b4:    c7 85 d8 fd ff ff 29 69 d6 a5         	mov dword ptr [rbp - 0x228], 0xa5d66929
0x28be:    c7 85 dc fd ff ff 00 00 00 00         	mov dword ptr [rbp - 0x224], 0
0x28c8:    c7 85 a0 fd ff ff 45 1f 47 ec         	mov dword ptr [rbp - 0x260], 0xec471f45
0x28d2:    c7 85 a4 fd ff ff 00 00 00 00         	mov dword ptr [rbp - 0x25c], 0
0x28dc:    c7 85 a8 fd ff ff ca 4c 2a a3         	mov dword ptr [rbp - 0x258], 0xa32a4cca
0x28e6:    c7 85 ac fd ff ff 00 00 00 00         	mov dword ptr [rbp - 0x254], 0
0x28f0:    c7 85 b0 fd ff ff ed ca 1b 8d         	mov dword ptr [rbp - 0x250], 0x8d1bcaed
0x28fa:    c7 85 b4 fd ff ff 00 00 00 00         	mov dword ptr [rbp - 0x24c], 0
0x2904:    48 c7 85 b8 fd ff ff b0 94 83 4f      	mov qword ptr [rbp - 0x248], 0x4f8394b0
0x290f:    c7 85 80 fd ff ff b2 6e b5 99         	mov dword ptr [rbp - 0x280], 0x99b56eb2
0x2919:    c7 85 84 fd ff ff 00 00 00 00         	mov dword ptr [rbp - 0x27c], 0
0x2923:    48 c7 85 88 fd ff ff dc 42 fe 43      	mov qword ptr [rbp - 0x278], 0x43fe42dc
0x292e:    c7 85 90 fd ff ff 75 a5 38 86         	mov dword ptr [rbp - 0x270], 0x8638a575
0x2938:    c7 85 94 fd ff ff 00 00 00 00         	mov dword ptr [rbp - 0x26c], 0
0x2942:    c7 85 98 fd ff ff 42 04 07 f6         	mov dword ptr [rbp - 0x268], 0xf6070442
0x294c:    c7 85 9c fd ff ff 00 00 00 00         	mov dword ptr [rbp - 0x264], 0
0x2956:    c6 45 b0 a4                           	mov byte ptr [rbp - 0x50], 0xa4
0x295a:    c6 45 b1 2c                           	mov byte ptr [rbp - 0x4f], 0x2c
0x295e:    c6 45 b2 7a                           	mov byte ptr [rbp - 0x4e], 0x7a
0x2962:    c6 45 b3 a0                           	mov byte ptr [rbp - 0x4d], 0xa0
0x2966:    c6 45 b4 eb                           	mov byte ptr [rbp - 0x4c], 0xeb ; "%("
0x296a:    c6 45 b5 ce                           	mov byte ptr [rbp - 0x4b], 0xce
0x296e:    c6 45 b6 f6                           	mov byte ptr [rbp - 0x4a], 0xf6
0x2972:    c6 45 b7 3a                           	mov byte ptr [rbp - 0x49], 0x3a
0x2976:    be 00 00 00 00                        	mov esi, 0
0x297b:    41 b9 00 00 00 00                     	mov r9d, 0
0x2981:    4c 8d 85 a0 fe ff ff                  	lea r8, [rbp - 0x160]
0x2988:    eb 3b                                 	jmp 0x29c5 <FUSBDTV_AddUSBDevice+0x9a3>
0x298a:    48 8b 39                              	mov rdi, qword ptr [rcx]
0x298d:    48 29 f7                              	sub rdi, rsi
0x2990:    49 33 3c c0                           	xor rdi, qword ptr [r8 + rax*8]
0x2994:    48 89 3a                              	mov qword ptr [rdx], rdi
0x2997:    48 83 c0 01                           	add rax, 1
0x299b:    48 83 c1 08                           	add rcx, 8
0x299f:    48 83 c2 08                           	add rdx, 8
0x29a3:    48 83 f8 04                           	cmp rax, 4
0x29a7:    75 e1                                 	jne 0x298a <FUSBDTV_AddUSBDevice+0x968>
0x29a9:    48 83 c6 04                           	add rsi, 4
0x29ad:    48 83 fe 40                           	cmp rsi, 0x40
0x29b1:    75 12                                 	jne 0x29c5 <FUSBDTV_AddUSBDevice+0x9a3>
0x29b3:    40 b6 00                              	mov sil, 0
0x29b6:    41 b9 00 00 00 00                     	mov r9d, 0
0x29bc:    4c 8d 85 80 fe ff ff                  	lea r8, [rbp - 0x180]
0x29c3:    eb 50                                 	jmp 0x2a15 <FUSBDTV_AddUSBDevice+0x9f3>
0x29c5:    48 8d 0c f5 00 00 00 00               	lea rcx, [rsi*8]
0x29cd:    48 8d 94 f3 70 3e 00 00               	lea rdx, [rbx + rsi*8 + 0x3e70]
0x29d5:    4c 89 c8                              	mov rax, r9
0x29d8:    eb b0                                 	jmp 0x298a <FUSBDTV_AddUSBDevice+0x968>
0x29da:    48 8b 39                              	mov rdi, qword ptr [rcx]
0x29dd:    48 29 f7                              	sub rdi, rsi
0x29e0:    49 33 3c c0                           	xor rdi, qword ptr [r8 + rax*8]
0x29e4:    48 89 3a                              	mov qword ptr [rdx], rdi
0x29e7:    48 83 c0 01                           	add rax, 1
0x29eb:    48 83 c1 08                           	add rcx, 8
0x29ef:    48 83 c2 08                           	add rdx, 8
0x29f3:    48 83 f8 04                           	cmp rax, 4
0x29f7:    75 e1                                 	jne 0x29da <FUSBDTV_AddUSBDevice+0x9b8>
0x29f9:    48 83 c6 04                           	add rsi, 4
0x29fd:    48 83 fe 40                           	cmp rsi, 0x40
0x2a01:    75 12                                 	jne 0x2a15 <FUSBDTV_AddUSBDevice+0x9f3>
0x2a03:    40 b6 00                              	mov sil, 0
0x2a06:    41 b9 00 00 00 00                     	mov r9d, 0
0x2a0c:    4c 8d 85 60 fe ff ff                  	lea r8, [rbp - 0x1a0]
0x2a13:    eb 50                                 	jmp 0x2a65 <FUSBDTV_AddUSBDevice+0xa43>
0x2a15:    48 8d 0c f5 00 00 00 00               	lea rcx, [rsi*8]
0x2a1d:    48 8d 94 f3 70 40 00 00               	lea rdx, [rbx + rsi*8 + 0x4070]
0x2a25:    4c 89 c8                              	mov rax, r9
0x2a28:    eb b0                                 	jmp 0x29da <FUSBDTV_AddUSBDevice+0x9b8>
0x2a2a:    48 8b 39                              	mov rdi, qword ptr [rcx]
0x2a2d:    48 29 f7                              	sub rdi, rsi
0x2a30:    49 33 3c c0                           	xor rdi, qword ptr [r8 + rax*8]
0x2a34:    48 89 3a                              	mov qword ptr [rdx], rdi
0x2a37:    48 83 c0 01                           	add rax, 1
0x2a3b:    48 83 c1 08                           	add rcx, 8
0x2a3f:    48 83 c2 08                           	add rdx, 8
0x2a43:    48 83 f8 04                           	cmp rax, 4
0x2a47:    75 e1                                 	jne 0x2a2a <FUSBDTV_AddUSBDevice+0xa08>
0x2a49:    48 83 c6 04                           	add rsi, 4
0x2a4d:    48 83 fe 40                           	cmp rsi, 0x40
0x2a51:    75 12                                 	jne 0x2a65 <FUSBDTV_AddUSBDevice+0xa43>
0x2a53:    40 b6 00                              	mov sil, 0
0x2a56:    41 b9 00 00 00 00                     	mov r9d, 0
0x2a5c:    4c 8d 85 40 fe ff ff                  	lea r8, [rbp - 0x1c0]
0x2a63:    eb 50                                 	jmp 0x2ab5 <FUSBDTV_AddUSBDevice+0xa93>
0x2a65:    48 8d 0c f5 00 00 00 00               	lea rcx, [rsi*8]
0x2a6d:    48 8d 94 f3 70 42 00 00               	lea rdx, [rbx + rsi*8 + 0x4270]
0x2a75:    4c 89 c8                              	mov rax, r9
0x2a78:    eb b0                                 	jmp 0x2a2a <FUSBDTV_AddUSBDevice+0xa08>
0x2a7a:    48 8b 39                              	mov rdi, qword ptr [rcx]
0x2a7d:    48 29 f7                              	sub rdi, rsi
0x2a80:    49 33 3c c0                           	xor rdi, qword ptr [r8 + rax*8]
0x2a84:    48 89 3a                              	mov qword ptr [rdx], rdi
0x2a87:    48 83 c0 01                           	add rax, 1
0x2a8b:    48 83 c1 08                           	add rcx, 8
0x2a8f:    48 83 c2 08                           	add rdx, 8
0x2a93:    48 83 f8 04                           	cmp rax, 4
0x2a97:    75 e1                                 	jne 0x2a7a <FUSBDTV_AddUSBDevice+0xa58>
0x2a99:    48 83 c6 04                           	add rsi, 4
0x2a9d:    48 83 fe 40                           	cmp rsi, 0x40
0x2aa1:    75 12                                 	jne 0x2ab5 <FUSBDTV_AddUSBDevice+0xa93>
0x2aa3:    40 b6 00                              	mov sil, 0
0x2aa6:    41 b9 00 00 00 00                     	mov r9d, 0
0x2aac:    4c 8d 85 20 fe ff ff                  	lea r8, [rbp - 0x1e0]
0x2ab3:    eb 50                                 	jmp 0x2b05 <FUSBDTV_AddUSBDevice+0xae3>
0x2ab5:    48 8d 0c f5 00 00 00 00               	lea rcx, [rsi*8]
0x2abd:    48 8d 94 f3 70 44 00 00               	lea rdx, [rbx + rsi*8 + 0x4470]
0x2ac5:    4c 89 c8                              	mov rax, r9
0x2ac8:    eb b0                                 	jmp 0x2a7a <FUSBDTV_AddUSBDevice+0xa58>
0x2aca:    48 8b 39                              	mov rdi, qword ptr [rcx]
0x2acd:    48 29 f7                              	sub rdi, rsi
0x2ad0:    49 33 3c c0                           	xor rdi, qword ptr [r8 + rax*8]
0x2ad4:    48 89 3a                              	mov qword ptr [rdx], rdi
0x2ad7:    48 83 c0 01                           	add rax, 1
0x2adb:    48 83 c1 08                           	add rcx, 8
0x2adf:    48 83 c2 08                           	add rdx, 8
0x2ae3:    48 83 f8 04                           	cmp rax, 4
0x2ae7:    75 e1                                 	jne 0x2aca <FUSBDTV_AddUSBDevice+0xaa8>
0x2ae9:    48 83 c6 04                           	add rsi, 4
0x2aed:    48 83 fe 40                           	cmp rsi, 0x40
0x2af1:    75 12                                 	jne 0x2b05 <FUSBDTV_AddUSBDevice+0xae3>
0x2af3:    40 b6 00                              	mov sil, 0
0x2af6:    41 b9 00 00 00 00                     	mov r9d, 0
0x2afc:    4c 8d 85 00 fe ff ff                  	lea r8, [rbp - 0x200]
0x2b03:    eb 50                                 	jmp 0x2b55 <FUSBDTV_AddUSBDevice+0xb33>
0x2b05:    48 8d 0c f5 00 00 00 00               	lea rcx, [rsi*8]
0x2b0d:    48 8d 94 f3 70 46 00 00               	lea rdx, [rbx + rsi*8 + 0x4670]
0x2b15:    4c 89 c8                              	mov rax, r9
0x2b18:    eb b0                                 	jmp 0x2aca <FUSBDTV_AddUSBDevice+0xaa8>
0x2b1a:    48 8b 39                              	mov rdi, qword ptr [rcx]
0x2b1d:    48 29 f7                              	sub rdi, rsi
0x2b20:    49 33 3c c0                           	xor rdi, qword ptr [r8 + rax*8]
0x2b24:    48 89 3a                              	mov qword ptr [rdx], rdi
0x2b27:    48 83 c0 01                           	add rax, 1
0x2b2b:    48 83 c1 08                           	add rcx, 8
0x2b2f:    48 83 c2 08                           	add rdx, 8
0x2b33:    48 83 f8 04                           	cmp rax, 4
0x2b37:    75 e1                                 	jne 0x2b1a <FUSBDTV_AddUSBDevice+0xaf8>
0x2b39:    48 83 c6 04                           	add rsi, 4
0x2b3d:    48 83 fe 40                           	cmp rsi, 0x40
0x2b41:    75 12                                 	jne 0x2b55 <FUSBDTV_AddUSBDevice+0xb33>
0x2b43:    40 b6 00                              	mov sil, 0
0x2b46:    41 b9 00 00 00 00                     	mov r9d, 0
0x2b4c:    4c 8d 85 e0 fd ff ff                  	lea r8, [rbp - 0x220]
0x2b53:    eb 50                                 	jmp 0x2ba5 <FUSBDTV_AddUSBDevice+0xb83>
0x2b55:    48 8d 0c f5 00 00 00 00               	lea rcx, [rsi*8]
0x2b5d:    48 8d 94 f3 70 48 00 00               	lea rdx, [rbx + rsi*8 + 0x4870]
0x2b65:    4c 89 c8                              	mov rax, r9
0x2b68:    eb b0                                 	jmp 0x2b1a <FUSBDTV_AddUSBDevice+0xaf8>
0x2b6a:    48 8b 39                              	mov rdi, qword ptr [rcx]
0x2b6d:    48 29 f7                              	sub rdi, rsi
0x2b70:    49 33 3c c0                           	xor rdi, qword ptr [r8 + rax*8]
0x2b74:    48 89 3a                              	mov qword ptr [rdx], rdi
0x2b77:    48 83 c0 01                           	add rax, 1
0x2b7b:    48 83 c1 08                           	add rcx, 8
0x2b7f:    48 83 c2 08                           	add rdx, 8
0x2b83:    48 83 f8 04                           	cmp rax, 4
0x2b87:    75 e1                                 	jne 0x2b6a <FUSBDTV_AddUSBDevice+0xb48>
0x2b89:    48 83 c6 04                           	add rsi, 4
0x2b8d:    48 83 fe 40                           	cmp rsi, 0x40
0x2b91:    75 12                                 	jne 0x2ba5 <FUSBDTV_AddUSBDevice+0xb83>
0x2b93:    40 b6 00                              	mov sil, 0
0x2b96:    41 b9 00 00 00 00                     	mov r9d, 0
0x2b9c:    4c 8d 85 c0 fd ff ff                  	lea r8, [rbp - 0x240]
0x2ba3:    eb 50                                 	jmp 0x2bf5 <FUSBDTV_AddUSBDevice+0xbd3>
0x2ba5:    48 8d 0c f5 00 00 00 00               	lea rcx, [rsi*8]
0x2bad:    48 8d 94 f3 70 4a 00 00               	lea rdx, [rbx + rsi*8 + 0x4a70]
0x2bb5:    4c 89 c8                              	mov rax, r9
0x2bb8:    eb b0                                 	jmp 0x2b6a <FUSBDTV_AddUSBDevice+0xb48>
0x2bba:    48 8b 39                              	mov rdi, qword ptr [rcx]
0x2bbd:    48 29 f7                              	sub rdi, rsi
0x2bc0:    49 33 3c c0                           	xor rdi, qword ptr [r8 + rax*8]
0x2bc4:    48 89 3a                              	mov qword ptr [rdx], rdi
0x2bc7:    48 83 c0 01                           	add rax, 1
0x2bcb:    48 83 c1 08                           	add rcx, 8
0x2bcf:    48 83 c2 08                           	add rdx, 8
0x2bd3:    48 83 f8 04                           	cmp rax, 4
0x2bd7:    75 e1                                 	jne 0x2bba <FUSBDTV_AddUSBDevice+0xb98>
0x2bd9:    48 83 c6 04                           	add rsi, 4
0x2bdd:    48 83 fe 40                           	cmp rsi, 0x40
0x2be1:    75 12                                 	jne 0x2bf5 <FUSBDTV_AddUSBDevice+0xbd3>
0x2be3:    40 b6 00                              	mov sil, 0
0x2be6:    41 b9 00 00 00 00                     	mov r9d, 0
0x2bec:    4c 8d 85 a0 fd ff ff                  	lea r8, [rbp - 0x260]
0x2bf3:    eb 50                                 	jmp 0x2c45 <FUSBDTV_AddUSBDevice+0xc23>
0x2bf5:    48 8d 0c f5 00 00 00 00               	lea rcx, [rsi*8]
0x2bfd:    48 8d 94 f3 70 4c 00 00               	lea rdx, [rbx + rsi*8 + 0x4c70]
0x2c05:    4c 89 c8                              	mov rax, r9
0x2c08:    eb b0                                 	jmp 0x2bba <FUSBDTV_AddUSBDevice+0xb98>
0x2c0a:    48 8b 39                              	mov rdi, qword ptr [rcx]
0x2c0d:    48 29 f7                              	sub rdi, rsi
0x2c10:    49 33 3c c0                           	xor rdi, qword ptr [r8 + rax*8]
0x2c14:    48 89 3a                              	mov qword ptr [rdx], rdi
0x2c17:    48 83 c0 01                           	add rax, 1
0x2c1b:    48 83 c1 08                           	add rcx, 8
0x2c1f:    48 83 c2 08                           	add rdx, 8
0x2c23:    48 83 f8 04                           	cmp rax, 4
0x2c27:    75 e1                                 	jne 0x2c0a <FUSBDTV_AddUSBDevice+0xbe8>
0x2c29:    48 83 c6 04                           	add rsi, 4
0x2c2d:    48 83 fe 10                           	cmp rsi, 0x10
0x2c31:    75 12                                 	jne 0x2c45 <FUSBDTV_AddUSBDevice+0xc23>
0x2c33:    40 b6 00                              	mov sil, 0
0x2c36:    41 b9 00 00 00 00                     	mov r9d, 0
0x2c3c:    4c 8d 85 80 fd ff ff                  	lea r8, [rbp - 0x280]
0x2c43:    eb 50                                 	jmp 0x2c95 <FUSBDTV_AddUSBDevice+0xc73>
0x2c45:    48 8d 0c f5 00 00 00 00               	lea rcx, [rsi*8]
0x2c4d:    48 8d 94 f3 70 4e 00 00               	lea rdx, [rbx + rsi*8 + 0x4e70]
0x2c55:    4c 89 c8                              	mov rax, r9
0x2c58:    eb b0                                 	jmp 0x2c0a <FUSBDTV_AddUSBDevice+0xbe8>
0x2c5a:    48 8b 39                              	mov rdi, qword ptr [rcx]
0x2c5d:    48 29 f7                              	sub rdi, rsi
0x2c60:    49 33 3c c0                           	xor rdi, qword ptr [r8 + rax*8]
0x2c64:    48 89 3a                              	mov qword ptr [rdx], rdi
0x2c67:    48 83 c0 01                           	add rax, 1
0x2c6b:    48 83 c1 08                           	add rcx, 8
0x2c6f:    48 83 c2 08                           	add rdx, 8
0x2c73:    48 83 f8 04                           	cmp rax, 4
0x2c77:    75 e1                                 	jne 0x2c5a <FUSBDTV_AddUSBDevice+0xc38>
0x2c79:    48 83 c6 04                           	add rsi, 4
0x2c7d:    48 83 fe 10                           	cmp rsi, 0x10
0x2c81:    75 12                                 	jne 0x2c95 <FUSBDTV_AddUSBDevice+0xc73>
0x2c83:    41 b8 00 00 00 00                     	mov r8d, 0
0x2c89:    41 b9 00 00 00 00                     	mov r9d, 0
0x2c8f:    48 8d 7d b0                           	lea rdi, [rbp - 0x50]
0x2c93:    eb 41                                 	jmp 0x2cd6 <FUSBDTV_AddUSBDevice+0xcb4>
0x2c95:    48 8d 0c f5 00 00 00 00               	lea rcx, [rsi*8]
0x2c9d:    48 8d 94 f3 f0 4e 00 00               	lea rdx, [rbx + rsi*8 + 0x4ef0]
0x2ca5:    4c 89 c8                              	mov rax, r9
0x2ca8:    eb b0                                 	jmp 0x2c5a <FUSBDTV_AddUSBDevice+0xc38>
0x2caa:    0f b6 31                              	movzx esi, byte ptr [rcx]
0x2cad:    40 28 c6                              	sub sil, al
0x2cb0:    40 32 34 07                           	xor sil, byte ptr [rdi + rax]
0x2cb4:    40 88 32                              	mov byte ptr [rdx], sil
0x2cb7:    48 83 c0 01                           	add rax, 1
0x2cbb:    48 83 c1 01                           	add rcx, 1
0x2cbf:    48 83 c2 01                           	add rdx, 1
0x2cc3:    48 83 f8 08                           	cmp rax, 8
0x2cc7:    75 e1                                 	jne 0x2caa <FUSBDTV_AddUSBDevice+0xc88>
0x2cc9:    49 83 c0 08                           	add r8, 8
0x2ccd:    49 81 f8 c0 00 00 00                  	cmp r8, 0xc0
0x2cd4:    74 14                                 	je 0x2cea <FUSBDTV_AddUSBDevice+0xcc8>
0x2cd6:    49 8d 88 00 00 00 00                  	lea rcx, [r8]
0x2cdd:    4a 8d 94 03 a8 55 00 00               	lea rdx, [rbx + r8 + 0x55a8]
0x2ce5:    4c 89 c8                              	mov rax, r9
0x2ce8:    eb c0                                 	jmp 0x2caa <FUSBDTV_AddUSBDevice+0xc88>
0x2cea:    c6 45 a0 41                           	mov byte ptr [rbp - 0x60], 0x41
0x2cee:    c6 45 a1 0a                           	mov byte ptr [rbp - 0x5f], 0xa
0x2cf2:    c6 45 a2 2a                           	mov byte ptr [rbp - 0x5e], 0x2a
0x2cf6:    c6 45 a3 05                           	mov byte ptr [rbp - 0x5d], 5
0x2cfa:    c6 45 a4 43                           	mov byte ptr [rbp - 0x5c], 0x43
0x2cfe:    c6 45 a5 fc                           	mov byte ptr [rbp - 0x5b], 0xfc
0x2d02:    c6 45 a6 45                           	mov byte ptr [rbp - 0x5a], 0x45
0x2d06:    c6 45 a7 4f                           	mov byte ptr [rbp - 0x59], 0x4f
0x2d0a:    c6 45 a8 a2                           	mov byte ptr [rbp - 0x58], 0xa2
0x2d0e:    c6 45 a9 7e                           	mov byte ptr [rbp - 0x57], 0x7e
0x2d12:    c6 45 aa 9a                           	mov byte ptr [rbp - 0x56], 0x9a
0x2d16:    c6 45 ab 60                           	mov byte ptr [rbp - 0x55], 0x60
0x2d1a:    c6 45 ac 58                           	mov byte ptr [rbp - 0x54], 0x58
0x2d1e:    c6 45 ad 0b                           	mov byte ptr [rbp - 0x53], 0xb
0x2d22:    c6 45 ae 06                           	mov byte ptr [rbp - 0x52], 6
0x2d26:    c6 45 af 5d                           	mov byte ptr [rbp - 0x51], 0x5d
0x2d2a:    c6 45 90 68                           	mov byte ptr [rbp - 0x70], 0x68
0x2d2e:    c6 45 91 4d                           	mov byte ptr [rbp - 0x6f], 0x4d
0x2d32:    c6 45 92 35                           	mov byte ptr [rbp - 0x6e], 0x35
0x2d36:    c6 45 93 46                           	mov byte ptr [rbp - 0x6d], 0x46
0x2d3a:    c6 45 94 45                           	mov byte ptr [rbp - 0x6c], 0x45
0x2d3e:    c6 45 95 73                           	mov byte ptr [rbp - 0x6b], 0x73
0x2d42:    c6 45 96 45                           	mov byte ptr [rbp - 0x6a], 0x45
0x2d46:    c6 45 97 b4                           	mov byte ptr [rbp - 0x69], 0xb4
0x2d4a:    c6 45 98 9e                           	mov byte ptr [rbp - 0x68], 0x9e
0x2d4e:    c6 45 99 ca                           	mov byte ptr [rbp - 0x67], 0xca
0x2d52:    c6 45 9a a1                           	mov byte ptr [rbp - 0x66], 0xa1
0x2d56:    c6 45 9b c3                           	mov byte ptr [rbp - 0x65], 0xc3
0x2d5a:    c6 45 9c f4                           	mov byte ptr [rbp - 0x64], 0xf4
0x2d5e:    c6 45 9d c7                           	mov byte ptr [rbp - 0x63], 0xc7
0x2d62:    c6 45 9e 6f                           	mov byte ptr [rbp - 0x62], 0x6f
0x2d66:    c6 45 9f 2e                           	mov byte ptr [rbp - 0x61], 0x2e
0x2d6a:    c6 45 80 55                           	mov byte ptr [rbp - 0x80], 0x55
0x2d6e:    c6 45 81 3f                           	mov byte ptr [rbp - 0x7f], 0x3f
0x2d72:    c6 45 82 be                           	mov byte ptr [rbp - 0x7e], 0xbe
0x2d76:    c6 45 83 d3                           	mov byte ptr [rbp - 0x7d], 0xd3
0x2d7a:    c6 45 84 bc                           	mov byte ptr [rbp - 0x7c], 0xbc
0x2d7e:    c6 45 85 f3                           	mov byte ptr [rbp - 0x7b], 0xf3
0x2d82:    c6 45 86 41                           	mov byte ptr [rbp - 0x7a], 0x41
0x2d86:    c6 45 87 2a                           	mov byte ptr [rbp - 0x79], 0x2a
0x2d8a:    c6 45 88 91                           	mov byte ptr [rbp - 0x78], 0x91
0x2d8e:    c6 45 89 b0                           	mov byte ptr [rbp - 0x77], 0xb0
0x2d92:    c6 45 8a e1                           	mov byte ptr [rbp - 0x76], 0xe1
0x2d96:    c6 45 8b 1b                           	mov byte ptr [rbp - 0x75], 0x1b
0x2d9a:    c6 45 8c be                           	mov byte ptr [rbp - 0x74], 0xbe
0x2d9e:    c6 45 8d 93                           	mov byte ptr [rbp - 0x73], 0x93
0x2da2:    c6 45 8e 7f                           	mov byte ptr [rbp - 0x72], 0x7f
0x2da6:    c6 45 8f 4b                           	mov byte ptr [rbp - 0x71], 0x4b
0x2daa:    c6 85 70 ff ff ff 60                  	mov byte ptr [rbp - 0x90], 0x60
0x2db1:    c6 85 71 ff ff ff 0e                  	mov byte ptr [rbp - 0x8f], 0xe
0x2db8:    c6 85 72 ff ff ff 8f                  	mov byte ptr [rbp - 0x8e], 0x8f
0x2dbf:    c6 85 73 ff ff ff d2                  	mov byte ptr [rbp - 0x8d], 0xd2
0x2dc6:    c6 85 74 ff ff ff dd                  	mov byte ptr [rbp - 0x8c], 0xdd
0x2dcd:    c6 85 75 ff ff ff b7                  	mov byte ptr [rbp - 0x8b], 0xb7
0x2dd4:    c6 85 76 ff ff ff 40                  	mov byte ptr [rbp - 0x8a], 0x40
0x2ddb:    c6 85 77 ff ff ff 2a                  	mov byte ptr [rbp - 0x89], 0x2a
0x2de2:    c6 85 78 ff ff ff ad                  	mov byte ptr [rbp - 0x88], 0xad
0x2de9:    c6 85 79 ff ff ff b2                  	mov byte ptr [rbp - 0x87], 0xb2
0x2df0:    c6 85 7a ff ff ff 0b                  	mov byte ptr [rbp - 0x86], 0xb
0x2df7:    c6 85 7b ff ff ff 96                  	mov byte ptr [rbp - 0x85], 0x96
0x2dfe:    c6 85 7c ff ff ff 43                  	mov byte ptr [rbp - 0x84], 0x43
0x2e05:    c6 85 7d ff ff ff 5f                  	mov byte ptr [rbp - 0x83], 0x5f
0x2e0c:    c6 85 7e ff ff ff ba                  	mov byte ptr [rbp - 0x82], 0xba
0x2e13:    c6 85 7f ff ff ff d9                  	mov byte ptr [rbp - 0x81], 0xd9
0x2e1a:    c6 85 60 ff ff ff 10                  	mov byte ptr [rbp - 0xa0], 0x10
0x2e21:    c6 85 61 ff ff ff 0d                  	mov byte ptr [rbp - 0x9f], 0xd ; "NU"
0x2e28:    c6 85 62 ff ff ff 77                  	mov byte ptr [rbp - 0x9e], 0x77
0x2e2f:    c6 85 63 ff ff ff 2d                  	mov byte ptr [rbp - 0x9d], 0x2d
0x2e36:    c6 85 64 ff ff ff fa                  	mov byte ptr [rbp - 0x9c], 0xfa
0x2e3d:    c6 85 65 ff ff ff d6                  	mov byte ptr [rbp - 0x9b], 0xd6
0x2e44:    c6 85 66 ff ff ff 46                  	mov byte ptr [rbp - 0x9a], 0x46
0x2e4b:    c6 85 67 ff ff ff 66                  	mov byte ptr [rbp - 0x99], 0x66
0x2e52:    c6 85 68 ff ff ff 80                  	mov byte ptr [rbp - 0x98], 0x80
0x2e59:    c6 85 69 ff ff ff 92                  	mov byte ptr [rbp - 0x97], 0x92
0x2e60:    c6 85 6a ff ff ff bb                  	mov byte ptr [rbp - 0x96], 0xbb
0x2e67:    c6 85 6b ff ff ff da                  	mov byte ptr [rbp - 0x95], 0xda
0x2e6e:    c6 85 6c ff ff ff 1f                  	mov byte ptr [rbp - 0x94], 0x1f
0x2e75:    c6 85 6d ff ff ff 32                  	mov byte ptr [rbp - 0x93], 0x32
0x2e7c:    c6 85 6e ff ff ff 95                  	mov byte ptr [rbp - 0x92], 0x95
0x2e83:    c6 85 6f ff ff ff 5d                  	mov byte ptr [rbp - 0x91], 0x5d
0x2e8a:    bf 00 00 00 00                        	mov edi, 0
0x2e8f:    41 b9 00 00 00 00                     	mov r9d, 0
0x2e95:    4c 8d 45 a0                           	lea r8, [rbp - 0x60]
0x2e99:    eb 38                                 	jmp 0x2ed3 <FUSBDTV_AddUSBDevice+0xeb1>
0x2e9b:    0f b6 31                              	movzx esi, byte ptr [rcx]
0x2e9e:    40 28 fe                              	sub sil, dil
0x2ea1:    41 32 34 00                           	xor sil, byte ptr [r8 + rax]
0x2ea5:    40 88 32                              	mov byte ptr [rdx], sil
0x2ea8:    48 83 c0 01                           	add rax, 1
0x2eac:    48 83 c1 01                           	add rcx, 1
0x2eb0:    48 83 c2 01                           	add rdx, 1
0x2eb4:    48 83 f8 10                           	cmp rax, 0x10
0x2eb8:    75 e1                                 	jne 0x2e9b <FUSBDTV_AddUSBDevice+0xe79>
0x2eba:    48 83 c7 10                           	add rdi, 0x10
0x2ebe:    48 83 ff 20                           	cmp rdi, 0x20
0x2ec2:    75 0f                                 	jne 0x2ed3 <FUSBDTV_AddUSBDevice+0xeb1>
0x2ec4:    40 b7 00                              	mov dil, 0
0x2ec7:    41 b9 00 00 00 00                     	mov r9d, 0
0x2ecd:    4c 8d 45 90                           	lea r8, [rbp - 0x70]
0x2ed1:    eb 50                                 	jmp 0x2f23 <FUSBDTV_AddUSBDevice+0xf01>
0x2ed3:    48 8d 8f 00 00 00 00                  	lea rcx, [rdi]
0x2eda:    48 8d 94 3b 28 3a 00 00               	lea rdx, [rbx + rdi + 0x3a28]
0x2ee2:    4c 89 c8                              	mov rax, r9
0x2ee5:    eb b4                                 	jmp 0x2e9b <FUSBDTV_AddUSBDevice+0xe79>
0x2ee7:    0f b6 31                              	movzx esi, byte ptr [rcx]
0x2eea:    40 28 fe                              	sub sil, dil
0x2eed:    41 32 34 00                           	xor sil, byte ptr [r8 + rax]
0x2ef1:    40 88 32                              	mov byte ptr [rdx], sil
0x2ef4:    48 83 c0 01                           	add rax, 1
0x2ef8:    48 83 c1 01                           	add rcx, 1
0x2efc:    48 83 c2 01                           	add rdx, 1
0x2f00:    48 83 f8 10                           	cmp rax, 0x10
0x2f04:    75 e1                                 	jne 0x2ee7 <FUSBDTV_AddUSBDevice+0xec5>
0x2f06:    48 83 c7 10                           	add rdi, 0x10
0x2f0a:    48 81 ff 00 01 00 00                  	cmp rdi, 0x100
0x2f11:    75 10                                 	jne 0x2f23 <FUSBDTV_AddUSBDevice+0xf01>
0x2f13:    66 bf 00 00                           	mov di, 0
0x2f17:    41 b9 00 00 00 00                     	mov r9d, 0
0x2f1d:    4c 8d 45 80                           	lea r8, [rbp - 0x80]
0x2f21:    eb 53                                 	jmp 0x2f76 <FUSBDTV_AddUSBDevice+0xf54>
0x2f23:    48 8d 8f 00 00 00 00                  	lea rcx, [rdi]
0x2f2a:    48 8d 94 3b 48 3a 00 00               	lea rdx, [rbx + rdi + 0x3a48]
0x2f32:    4c 89 c8                              	mov rax, r9
0x2f35:    eb b0                                 	jmp 0x2ee7 <FUSBDTV_AddUSBDevice+0xec5>
0x2f37:    0f b6 31                              	movzx esi, byte ptr [rcx]
0x2f3a:    40 28 fe                              	sub sil, dil
0x2f3d:    41 32 34 00                           	xor sil, byte ptr [r8 + rax]
0x2f41:    40 88 32                              	mov byte ptr [rdx], sil
0x2f44:    48 83 c0 01                           	add rax, 1
0x2f48:    48 83 c1 01                           	add rcx, 1
0x2f4c:    48 83 c2 01                           	add rdx, 1
0x2f50:    48 83 f8 10                           	cmp rax, 0x10
0x2f54:    75 e1                                 	jne 0x2f37 <FUSBDTV_AddUSBDevice+0xf15>
0x2f56:    48 83 c7 10                           	add rdi, 0x10
0x2f5a:    48 81 ff 00 01 00 00                  	cmp rdi, 0x100
0x2f61:    75 13                                 	jne 0x2f76 <FUSBDTV_AddUSBDevice+0xf54>
0x2f63:    66 bf 00 00                           	mov di, 0
0x2f67:    41 b9 00 00 00 00                     	mov r9d, 0
0x2f6d:    4c 8d 85 70 ff ff ff                  	lea r8, [rbp - 0x90]
0x2f74:    eb 53                                 	jmp 0x2fc9 <FUSBDTV_AddUSBDevice+0xfa7>
0x2f76:    48 8d 8f 00 00 00 00                  	lea rcx, [rdi]
0x2f7d:    48 8d 94 3b 48 3b 00 00               	lea rdx, [rbx + rdi + 0x3b48]
0x2f85:    4c 89 c8                              	mov rax, r9
0x2f88:    eb ad                                 	jmp 0x2f37 <FUSBDTV_AddUSBDevice+0xf15>
0x2f8a:    0f b6 31                              	movzx esi, byte ptr [rcx]
0x2f8d:    40 28 fe                              	sub sil, dil
0x2f90:    41 32 34 00                           	xor sil, byte ptr [r8 + rax]
0x2f94:    40 88 32                              	mov byte ptr [rdx], sil
0x2f97:    48 83 c0 01                           	add rax, 1
0x2f9b:    48 83 c1 01                           	add rcx, 1
0x2f9f:    48 83 c2 01                           	add rdx, 1
0x2fa3:    48 83 f8 10                           	cmp rax, 0x10
0x2fa7:    75 e1                                 	jne 0x2f8a <FUSBDTV_AddUSBDevice+0xf68>
0x2fa9:    48 83 c7 10                           	add rdi, 0x10
0x2fad:    48 81 ff 00 01 00 00                  	cmp rdi, 0x100
0x2fb4:    75 13                                 	jne 0x2fc9 <FUSBDTV_AddUSBDevice+0xfa7>
0x2fb6:    66 bf 00 00                           	mov di, 0
0x2fba:    41 b9 00 00 00 00                     	mov r9d, 0
0x2fc0:    4c 8d 85 60 ff ff ff                  	lea r8, [rbp - 0xa0]
0x2fc7:    eb 40                                 	jmp 0x3009 <FUSBDTV_AddUSBDevice+0xfe7>
0x2fc9:    48 8d 8f 00 00 00 00                  	lea rcx, [rdi]
0x2fd0:    48 8d 94 3b 48 3c 00 00               	lea rdx, [rbx + rdi + 0x3c48]
0x2fd8:    4c 89 c8                              	mov rax, r9
0x2fdb:    eb ad                                 	jmp 0x2f8a <FUSBDTV_AddUSBDevice+0xf68>
0x2fdd:    0f b6 31                              	movzx esi, byte ptr [rcx]
0x2fe0:    40 28 fe                              	sub sil, dil
0x2fe3:    41 32 34 00                           	xor sil, byte ptr [r8 + rax]
0x2fe7:    40 88 32                              	mov byte ptr [rdx], sil
0x2fea:    48 83 c0 01                           	add rax, 1
0x2fee:    48 83 c1 01                           	add rcx, 1
0x2ff2:    48 83 c2 01                           	add rdx, 1
0x2ff6:    48 83 f8 10                           	cmp rax, 0x10
0x2ffa:    75 e1                                 	jne 0x2fdd <FUSBDTV_AddUSBDevice+0xfbb>
0x2ffc:    48 83 c7 10                           	add rdi, 0x10
0x3000:    48 81 ff 00 01 00 00                  	cmp rdi, 0x100
0x3007:    74 14                                 	je 0x301d
0x3009:    48 8d 8f 00 00 00 00                  	lea rcx, [rdi]
; function: FUSBDTV_Add at 0x3010 -- 0x3040
0x3010:    48 8d 94 3b 48 3d 00 00               	lea rdx, [rbx + rdi + 0x3d48]
0x3018:    4c 89 c8                              	mov rax, r9
0x301b:    eb c0                                 	jmp 0x2fdd
0x301d:    4c 89 e0                              	mov rax, r12
0x3020:    48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x3024:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x302d:    74 05                                 	je 0x3034 <FUSBDTV_Add+0x24>
0x302f:    e8 74 bb 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x3034:    48 81 c4 70 02 00 00                  	add rsp, 0x270
0x303b:    5b                                    	pop rbx
0x303c:    41 5c                                 	pop r12
0x303e:    c9                                    	leave 
0x303f:    c3                                    	ret 
; function: FUSBDTV_Add at 0x3040 -- 0x355c
0x3040:    55                                    	push rbp
0x3041:    48 89 e5                              	mov rbp, rsp
0x3044:    41 57                                 	push r15
0x3046:    41 56                                 	push r14
0x3048:    41 55                                 	push r13
0x304a:    41 54                                 	push r12
0x304c:    53                                    	push rbx
0x304d:    48 83 ec 28                           	sub rsp, 0x28
0x3051:    e8 9a bb 03 00                        	call 0x3ebf0 <mcount>
0x3056:    48 89 fb                              	mov rbx, rdi
0x3059:    83 05 ec 3e 03 00 01                  	add dword ptr [rip + 0x33eec], 1
0x3060:    be 90 66 00 00                        	mov esi, 0x6690
0x3065:    bf 00 00 00 00                        	mov edi, 0
0x306a:    e8 f9 30 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x306f:    49 89 c4                              	mov r12, rax
0x3072:    48 85 c0                              	test rax, rax
0x3075:    0f 84 f7 04 00 00                     	je 0x3572
0x307b:    48 89 03                              	mov qword ptr [rbx], rax
0x307e:    ba 90 66 00 00                        	mov edx, 0x6690
0x3083:    be 00 00 00 00                        	mov esi, 0
0x3088:    48 89 c7                              	mov rdi, rax
0x308b:    e8 b0 bb 03 00                        	call 0x3ec40 <memset>
0x3090:    4c 89 e1                              	mov rcx, r12
0x3093:    ba 00 00 00 00                        	mov edx, 0
0x3098:    be 00 00 00 00                        	mov esi, 0
0x309d:    bf 00 00 00 00                        	mov edi, 0
0x30a2:    e8 7b ef ff ff                        	call 0x2022 <FUSBDTV_AddUSBDevice>
0x30a7:    41 c6 84 24 d8 04 00 00 00            	mov byte ptr [r12 + 0x4d8], 0
0x30b0:    41 c6 84 24 d9 53 00 00 00            	mov byte ptr [r12 + 0x53d9], 0
0x30b9:    41 c6 84 24 d8 53 00 00 01            	mov byte ptr [r12 + 0x53d8], 1
0x30c2:    4d 89 e7                              	mov r15, r12
0x30c5:    4d 8d 74 24 08                        	lea r14, [r12 + 8]
0x30ca:    4c 89 e0                              	mov rax, r12
0x30cd:    c6 80 da 53 00 00 00                  	mov byte ptr [rax + 0x53da], 0
0x30d4:    48 83 c0 01                           	add rax, 1
0x30d8:    4c 39 f0                              	cmp rax, r14
0x30db:    75 f0                                 	jne 0x30cd <FUSBDTV_Add+0x8d>
0x30dd:    41 c6 84 24 59 54 00 00 00            	mov byte ptr [r12 + 0x5459], 0
0x30e6:    41 c6 84 24 58 54 00 00 01            	mov byte ptr [r12 + 0x5458], 1
0x30ef:    4c 89 f8                              	mov rax, r15
0x30f2:    c6 80 5a 54 00 00 00                  	mov byte ptr [rax + 0x545a], 0
0x30f9:    48 83 c0 01                           	add rax, 1
0x30fd:    49 39 c6                              	cmp r14, rax
0x3100:    75 f0                                 	jne 0x30f2 <FUSBDTV_Add+0xb2>
0x3102:    41 c6 84 24 c1 54 00 00 00            	mov byte ptr [r12 + 0x54c1], 0
0x310b:    41 c6 84 24 c0 54 00 00 01            	mov byte ptr [r12 + 0x54c0], 1
0x3114:    4c 89 f8                              	mov rax, r15
0x3117:    c6 80 c2 54 00 00 00                  	mov byte ptr [rax + 0x54c2], 0
0x311e:    48 83 c0 01                           	add rax, 1
0x3122:    49 39 c6                              	cmp r14, rax
0x3125:    75 f0                                 	jne 0x3117 <FUSBDTV_Add+0xd7>
0x3127:    41 c6 84 24 a2 55 00 00 00            	mov byte ptr [r12 + 0x55a2], 0
0x3130:    41 c6 84 24 60 60 00 00 00            	mov byte ptr [r12 + 0x6060], 0
0x3139:    48 8d 7d c8                           	lea rdi, [rbp - 0x38]
0x313d:    e8 f8 32 00 00                        	call 0x643a <Get_Tuner_Extra_Data_Size>
0x3142:    4d 8d af 80 02 00 00                  	lea r13, [r15 + 0x280]
0x3149:    4c 89 fb                              	mov rbx, r15
0x314c:    48 83 7d c8 00                        	cmp qword ptr [rbp - 0x38], 0
0x3151:    75 27                                 	jne 0x317a <FUSBDTV_Add+0x13a>
0x3153:    49 8d 97 80 02 00 00                  	lea rdx, [r15 + 0x280]
0x315a:    4c 89 f8                              	mov rax, r15
0x315d:    48 c7 80 a0 59 00 00 00 00 00 00      	mov qword ptr [rax + 0x59a0], 0
0x3168:    4c 89 a0 98 59 00 00                  	mov qword ptr [rax + 0x5998], r12
0x316f:    48 83 c0 50                           	add rax, 0x50
0x3173:    48 39 d0                              	cmp rax, rdx
0x3176:    75 e5                                 	jne 0x315d <FUSBDTV_Add+0x11d>
0x3178:    eb 36                                 	jmp 0x31b0 <FUSBDTV_Add+0x170>
0x317a:    48 8b 75 c8                           	mov rsi, qword ptr [rbp - 0x38]
0x317e:    bf 00 00 00 00                        	mov edi, 0
0x3183:    e8 e0 2f 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x3188:    48 89 83 a0 59 00 00                  	mov qword ptr [rbx + 0x59a0], rax
0x318f:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x3193:    be 00 00 00 00                        	mov esi, 0
0x3198:    48 89 c7                              	mov rdi, rax
0x319b:    e8 a0 ba 03 00                        	call 0x3ec40 <memset>
0x31a0:    4c 89 a3 98 59 00 00                  	mov qword ptr [rbx + 0x5998], r12
0x31a7:    48 83 c3 50                           	add rbx, 0x50
0x31ab:    4c 39 eb                              	cmp rbx, r13
0x31ae:    75 ca                                 	jne 0x317a <FUSBDTV_Add+0x13a>
0x31b0:    41 c6 84 24 30 54 00 00 00            	mov byte ptr [r12 + 0x5430], 0
0x31b9:    41 c6 84 24 31 54 00 00 01            	mov byte ptr [r12 + 0x5431], 1
0x31c2:    4c 89 f8                              	mov rax, r15
0x31c5:    c6 80 68 56 00 00 00                  	mov byte ptr [rax + 0x5668], 0
0x31cc:    48 83 c0 01                           	add rax, 1
0x31d0:    49 39 c6                              	cmp r14, rax
0x31d3:    75 f0                                 	jne 0x31c5 <FUSBDTV_Add+0x185>
0x31d5:    41 c6 84 24 10 59 00 00 00            	mov byte ptr [r12 + 0x5910], 0
0x31de:    41 c6 84 24 0f 59 00 00 00            	mov byte ptr [r12 + 0x590f], 0
0x31e7:    48 c7 c2 00 00 00 00                  	mov rdx, 0
0x31ee:    b8 01 00 00 00                        	mov eax, 1
0x31f3:    48 83 3d 05 39 03 00 00               	cmp qword ptr [rip + 0x33905], 0
0x31fb:    75 04                                 	jne 0x3201 <FUSBDTV_Add+0x1c1>
0x31fd:    b0 00                                 	mov al, 0
0x31ff:    eb 06                                 	jmp 0x3207 <FUSBDTV_Add+0x1c7>
0x3201:    48 83 3a 00                           	cmp qword ptr [rdx], 0
0x3205:    75 16                                 	jne 0x321d <FUSBDTV_Add+0x1dd>
0x3207:    48 98                                 	cdqe 
0x3209:    4c 89 24 c5 00 00 00 00               	mov qword ptr [rax*8], r12
0x3211:    4c 89 7d b8                           	mov qword ptr [rbp - 0x48], r15
0x3215:    41 bd 00 00 00 00                     	mov r13d, 0
0x321b:    eb 0e                                 	jmp 0x322b <FUSBDTV_Add+0x1eb>
0x321d:    83 c0 01                              	add eax, 1
0x3220:    48 83 c2 08                           	add rdx, 8
0x3224:    83 f8 08                              	cmp eax, 8
0x3227:    75 d8                                 	jne 0x3201 <FUSBDTV_Add+0x1c1>
0x3229:    eb e6                                 	jmp 0x3211 <FUSBDTV_Add+0x1d1>
0x322b:    be f0 29 09 00                        	mov esi, 0x929f0
0x3230:    bf 00 00 00 00                        	mov edi, 0
0x3235:    e8 2e 2f 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x323a:    48 89 c3                              	mov rbx, rax
0x323d:    ba f0 29 09 00                        	mov edx, 0x929f0
0x3242:    be 00 00 00 00                        	mov esi, 0
0x3247:    48 89 c7                              	mov rdi, rax
0x324a:    e8 f1 b9 03 00                        	call 0x3ec40 <memset>
0x324f:    4c 89 a3 38 1d 00 00                  	mov qword ptr [rbx + 0x1d38], r12
0x3256:    44 88 ab 30 1d 00 00                  	mov byte ptr [rbx + 0x1d30], r13b
0x325d:    c7 83 40 1d 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1d40], 0
0x3267:    c7 83 44 1d 00 00 01 00 00 00         	mov dword ptr [rbx + 0x1d44], 1
0x3271:    c6 83 ad fa 08 00 01                  	mov byte ptr [rbx + 0x8faad], 1
0x3278:    48 c7 83 68 1c 00 00 00 00 00 00      	mov qword ptr [rbx + 0x1c68], 0
0x3283:    48 c7 83 60 1c 00 00 00 00 00 00      	mov qword ptr [rbx + 0x1c60], 0
0x328e:    48 c7 83 58 1c 00 00 00 00 00 00      	mov qword ptr [rbx + 0x1c58], 0
0x3299:    48 c7 83 50 1c 00 00 00 00 00 00      	mov qword ptr [rbx + 0x1c50], 0
0x32a4:    48 c7 83 48 1c 00 00 00 00 00 00      	mov qword ptr [rbx + 0x1c48], 0
0x32af:    48 8b 45 b8                           	mov rax, qword ptr [rbp - 0x48]
0x32b3:    48 89 98 e0 04 00 00                  	mov qword ptr [rax + 0x4e0], rbx
0x32ba:    41 83 c5 01                           	add r13d, 1
0x32be:    48 83 c0 08                           	add rax, 8
0x32c2:    48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0x32c6:    41 80 fd 08                           	cmp r13b, 8
0x32ca:    0f 85 5b ff ff ff                     	jne 0x322b <FUSBDTV_Add+0x1eb>
0x32d0:    41 c6 84 24 98 57 00 00 00            	mov byte ptr [r12 + 0x5798], 0
0x32d9:    4c 89 f8                              	mov rax, r15
0x32dc:    c6 80 58 59 00 00 00                  	mov byte ptr [rax + 0x5958], 0
0x32e3:    48 83 c0 01                           	add rax, 1
0x32e7:    49 39 c6                              	cmp r14, rax
0x32ea:    75 f0                                 	jne 0x32dc <FUSBDTV_Add+0x29c>
0x32ec:    49 8d 97 00 01 00 00                  	lea rdx, [r15 + 0x100]
0x32f3:    4c 89 f8                              	mov rax, r15
0x32f6:    c6 80 98 56 00 00 00                  	mov byte ptr [rax + 0x5698], 0
0x32fd:    48 83 c0 01                           	add rax, 1
0x3301:    48 39 d0                              	cmp rax, rdx
0x3304:    75 f0                                 	jne 0x32f6 <FUSBDTV_Add+0x2b6>
0x3306:    bb 00 00 00 00                        	mov ebx, 0
0x330b:    49 c7 87 88 04 00 00 00 00 00 00      	mov qword ptr [r15 + 0x488], 0
0x3316:    b9 70 49 00 00                        	mov ecx, 0x4970
0x331b:    ba 80 00 00 00                        	mov edx, 0x80
0x3320:    89 de                                 	mov esi, ebx
0x3322:    4c 89 e7                              	mov rdi, r12
0x3325:    e8 d0 e3 ff ff                        	call 0x16fa <AsicenAllocateStreamBuffer>
0x332a:    48 83 f8 01                           	cmp rax, 1
0x332e:    0f 85 3e 02 00 00                     	jne 0x3572
0x3334:    be 20 e5 00 00                        	mov esi, 0xe520
0x3339:    bf 00 00 00 00                        	mov edi, 0
0x333e:    e8 25 2e 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x3343:    49 89 87 e8 60 00 00                  	mov qword ptr [r15 + 0x60e8], rax
0x334a:    49 c7 87 28 61 00 00 00 00 00 00      	mov qword ptr [r15 + 0x6128], 0
0x3355:    48 85 c0                              	test rax, rax
0x3358:    0f 84 14 02 00 00                     	je 0x3572
0x335e:    83 c3 01                              	add ebx, 1
0x3361:    49 83 c7 08                           	add r15, 8
0x3365:    83 fb 08                              	cmp ebx, 8
0x3368:    75 a1                                 	jne 0x330b <FUSBDTV_Add+0x2cb>
0x336a:    b9 70 49 00 00                        	mov ecx, 0x4970
0x336f:    ba 80 00 00 00                        	mov edx, 0x80
0x3374:    be 08 00 00 00                        	mov esi, 8
0x3379:    4c 89 e7                              	mov rdi, r12
0x337c:    e8 79 e3 ff ff                        	call 0x16fa <AsicenAllocateStreamBuffer>
0x3381:    48 83 f8 01                           	cmp rax, 1
0x3385:    0f 85 e7 01 00 00                     	jne 0x3572
0x338b:    49 8b 84 24 c8 04 00 00               	mov rax, qword ptr [r12 + 0x4c8]
0x3393:    4c 89 20                              	mov qword ptr [rax], r12
0x3396:    49 8b 84 24 c8 04 00 00               	mov rax, qword ptr [r12 + 0x4c8]
0x339e:    c6 80 b8 00 00 00 01                  	mov byte ptr [rax + 0xb8], 1
0x33a5:    b9 70 49 00 00                        	mov ecx, 0x4970
0x33aa:    ba 80 00 00 00                        	mov edx, 0x80
0x33af:    be 09 00 00 00                        	mov esi, 9
0x33b4:    4c 89 e7                              	mov rdi, r12
0x33b7:    e8 3e e3 ff ff                        	call 0x16fa <AsicenAllocateStreamBuffer>
0x33bc:    48 83 f8 01                           	cmp rax, 1
0x33c0:    0f 85 ac 01 00 00                     	jne 0x3572
0x33c6:    49 8b 84 24 d0 04 00 00               	mov rax, qword ptr [r12 + 0x4d0]
0x33ce:    4c 89 20                              	mov qword ptr [rax], r12
0x33d1:    49 8b 84 24 d0 04 00 00               	mov rax, qword ptr [r12 + 0x4d0]
0x33d9:    c6 80 b8 00 00 00 01                  	mov byte ptr [rax + 0xb8], 1
0x33e0:    41 c6 84 24 64 60 00 00 47            	mov byte ptr [r12 + 0x6064], 0x47
0x33e9:    41 c7 84 24 68 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x6068], 0
0x33f5:    41 c7 84 24 6c 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x606c], 0
0x3401:    41 c7 84 24 70 60 00 00 01 00 00 00   	mov dword ptr [r12 + 0x6070], 1
0x340d:    41 c6 84 24 74 60 00 00 47            	mov byte ptr [r12 + 0x6074], 0x47
0x3416:    41 c7 84 24 78 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x6078], 0
0x3422:    41 c7 84 24 7c 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x607c], 0
0x342e:    41 c7 84 24 80 60 00 00 01 00 00 00   	mov dword ptr [r12 + 0x6080], 1
0x343a:    41 c6 84 24 84 60 00 00 c7            	mov byte ptr [r12 + 0x6084], 0xc7
0x3443:    41 c7 84 24 88 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x6088], 0
0x344f:    41 c7 84 24 8c 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x608c], 0
0x345b:    41 c7 84 24 90 60 00 00 01 00 00 00   	mov dword ptr [r12 + 0x6090], 1
0x3467:    41 c6 84 24 94 60 00 00 c7            	mov byte ptr [r12 + 0x6094], 0xc7
0x3470:    41 c7 84 24 98 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x6098], 0
0x347c:    41 c7 84 24 9c 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x609c], 0
0x3488:    41 c7 84 24 a0 60 00 00 01 00 00 00   	mov dword ptr [r12 + 0x60a0], 1
0x3494:    41 c6 84 24 a4 60 00 00 87            	mov byte ptr [r12 + 0x60a4], 0x87
0x349d:    41 c7 84 24 a8 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x60a8], 0
0x34a9:    41 c7 84 24 ac 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x60ac], 0
0x34b5:    41 c7 84 24 b0 60 00 00 01 00 00 00   	mov dword ptr [r12 + 0x60b0], 1
0x34c1:    41 c6 84 24 b4 60 00 00 87            	mov byte ptr [r12 + 0x60b4], 0x87
0x34ca:    41 c7 84 24 b8 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x60b8], 0
0x34d6:    41 c7 84 24 bc 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x60bc], 0
0x34e2:    41 c7 84 24 c0 60 00 00 01 00 00 00   	mov dword ptr [r12 + 0x60c0], 1
0x34ee:    41 c6 84 24 c4 60 00 00 07            	mov byte ptr [r12 + 0x60c4], 7
0x34f7:    41 c7 84 24 c8 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x60c8], 0
0x3503:    41 c7 84 24 cc 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x60cc], 0
0x350f:    41 c7 84 24 d0 60 00 00 01 00 00 00   	mov dword ptr [r12 + 0x60d0], 1
0x351b:    41 c6 84 24 d4 60 00 00 07            	mov byte ptr [r12 + 0x60d4], 7
0x3524:    41 c7 84 24 d8 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x60d8], 0
0x3530:    41 c7 84 24 dc 60 00 00 00 00 00 00   	mov dword ptr [r12 + 0x60dc], 0
0x353c:    41 c7 84 24 e0 60 00 00 01 00 00 00   	mov dword ptr [r12 + 0x60e0], 1
0x3548:    4c 89 e7                              	mov rdi, r12
0x354b:    e8 ef 72 00 00                        	call 0xa83f <InitializeDeviceLNBPowerRegistry>
0x3550:    48 c7 45 c0 01 00 00 00               	mov qword ptr [rbp - 0x40], 1
0x3558:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
; data inside code section at 0x355c -- 0x3560
0x355c:    48 c7 c6 00                                        |H...            |
; function: Hardware_Stop at 0x3560 -- 0x356b
0x3560:    00 00                                 	add byte ptr [rax], al
0x3562:    00 4c 89 e7                           	add byte ptr [rcx + rcx*4 - 0x19], cl
0x3566:    e8 c4 72 00 00                        	call 0xa82f <StoreDeviceLNBPower>
; function: Hardware_SubmitTuner at 0x356b -- 0x357b
0x356b:    b8 01 00 00 00                        	mov eax, 1
0x3570:    eb 05                                 	jmp 0x3577 <Hardware_SubmitTuner+0xc>
0x3572:    b8 00 00 00 00                        	mov eax, 0
0x3577:    48 83 c4 28                           	add rsp, 0x28
; function: Hardware_SubmitDemod at 0x357b -- 0x3586
0x357b:    5b                                    	pop rbx
0x357c:    41 5c                                 	pop r12
0x357e:    41 5d                                 	pop r13
0x3580:    41 5e                                 	pop r14
0x3582:    41 5f                                 	pop r15
0x3584:    c9                                    	leave 
0x3585:    c3                                    	ret 
; data inside code section at 0x3586 -- 0x358b
0x3586:    90 90 90 90 90                                     |.....           |
; function: Hardware_GetSignalStrength at 0x358b -- 0x3590
0x358b:    90                                    	nop 
0x358c:    90                                    	nop 
0x358d:    90                                    	nop 
0x358e:    90                                    	nop 
0x358f:    90                                    	nop 
; function: Hardware_Stop at 0x3590 -- 0x359b
0x3590:    55                                    	push rbp
0x3591:    48 89 e5                              	mov rbp, rsp
0x3594:    e8 57 b6 03 00                        	call 0x3ebf0 <mcount>
0x3599:    c9                                    	leave 
0x359a:    c3                                    	ret 
; function: Hardware_GetSignalQuality at 0x359b -- 0x35ab
0x359b:    55                                    	push rbp
0x359c:    48 89 e5                              	mov rbp, rsp
0x359f:    e8 4c b6 03 00                        	call 0x3ebf0 <mcount>
0x35a4:    b8 01 00 00 00                        	mov eax, 1
0x35a9:    c9                                    	leave 
0x35aa:    c3                                    	ret 
; function: Hardware_GetSignalLock at 0x35ab -- 0x35bb
0x35ab:    55                                    	push rbp
0x35ac:    48 89 e5                              	mov rbp, rsp
0x35af:    e8 3c b6 03 00                        	call 0x3ebf0 <mcount>
0x35b4:    b8 01 00 00 00                        	mov eax, 1
0x35b9:    c9                                    	leave 
0x35ba:    c3                                    	ret 
; function: TVTunerInit at 0x35bb -- 0x35cb
0x35bb:    55                                    	push rbp
0x35bc:    48 89 e5                              	mov rbp, rsp
0x35bf:    e8 2c b6 03 00                        	call 0x3ebf0 <mcount>
0x35c4:    b8 00 00 00 00                        	mov eax, 0
0x35c9:    c9                                    	leave 
0x35ca:    c3                                    	ret 
; function: PutTsPacketToOutputPin at 0x35cb -- 0x35d4
0x35cb:    55                                    	push rbp
0x35cc:    48 89 e5                              	mov rbp, rsp
0x35cf:    e8 1c b6 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x35d4 -- 0x35d6
0x35d4:    b8 00                                              |..              |
; function: SmiGetIRCode at 0x35d6 -- 0x35db
0x35d6:    00 00                                 	add byte ptr [rax], al
0x35d8:    00 c9                                 	add cl, cl
0x35da:    c3                                    	ret 
; function: Hardware_GetSignalLock at 0x35db -- 0x35e4
0x35db:    55                                    	push rbp
0x35dc:    48 89 e5                              	mov rbp, rsp
0x35df:    e8 0c b6 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x35e4 -- 0x35e6
0x35e4:    b8 00                                              |..              |
; function: SmiSetIRCode at 0x35e6 -- 0x35eb
0x35e6:    00 00                                 	add byte ptr [rax], al
0x35e8:    00 c9                                 	add cl, cl
0x35ea:    c3                                    	ret 
; function: TVTunerInit at 0x35eb -- 0x35f4
0x35eb:    55                                    	push rbp
0x35ec:    48 89 e5                              	mov rbp, rsp
0x35ef:    e8 fc b5 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x35f4 -- 0x35f6
0x35f4:    b8 00                                              |..              |
; function: DelayNanoseconds at 0x35f6 -- 0x35fb
0x35f6:    00 00                                 	add byte ptr [rax], al
0x35f8:    00 c9                                 	add cl, cl
0x35fa:    c3                                    	ret 
; function: PutTsPacketToOutputPin at 0x35fb -- 0x3606
0x35fb:    55                                    	push rbp
0x35fc:    48 89 e5                              	mov rbp, rsp
0x35ff:    e8 ec b5 03 00                        	call 0x3ebf0 <mcount>
0x3604:    c9                                    	leave 
0x3605:    c3                                    	ret 
; function: SmiGetIRCode at 0x3606 -- 0x3607
0x3606:    55                                    	push rbp
; data inside code section at 0x3607 -- 0x3608
0x3607:    48                                                 |H               |
; function: SmiWriteRegister at 0x3608 -- 0x3616
0x3608:    89 e5                                 	mov ebp, esp
0x360a:    e8 e1 b5 03 00                        	call 0x3ebf0 <mcount>
0x360f:    b8 00 00 00 00                        	mov eax, 0
0x3614:    c9                                    	leave 
0x3615:    c3                                    	ret 
; function: SmiSetIRCode at 0x3616 -- 0x3626
0x3616:    55                                    	push rbp
0x3617:    48 89 e5                              	mov rbp, rsp
0x361a:    e8 d1 b5 03 00                        	call 0x3ebf0 <mcount>
0x361f:    b8 01 00 00 00                        	mov eax, 1
0x3624:    c9                                    	leave 
0x3625:    c3                                    	ret 
; function: DelayNanoseconds at 0x3626 -- 0x3638
0x3626:    55                                    	push rbp
0x3627:    48 89 e5                              	mov rbp, rsp
0x362a:    e8 c1 b5 03 00                        	call 0x3ebf0 <mcount>
0x362f:    89 ff                                 	mov edi, edi
0x3631:    e8 ca b4 03 00                        	call 0x3eb00 <__udelay>
0x3636:    c9                                    	leave 
0x3637:    c3                                    	ret 
; function: SmiWriteRegister at 0x3638 -- 0x372c
0x3638:    55                                    	push rbp
0x3639:    48 89 e5                              	mov rbp, rsp
0x363c:    41 54                                 	push r12
0x363e:    53                                    	push rbx
0x363f:    48 83 ec 40                           	sub rsp, 0x40
0x3643:    e8 a8 b5 03 00                        	call 0x3ebf0 <mcount>
0x3648:    48 89 fb                              	mov rbx, rdi
0x364b:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x3654:    48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x3658:    31 c0                                 	xor eax, eax
0x365a:    b8 55 00 00 00                        	mov eax, 0x55
0x365f:    80 bf 08 59 00 00 01                  	cmp byte ptr [rdi + 0x5908], 1
0x3666:    0f 84 d3 00 00 00                     	je 0x373f
0x366c:    c6 87 08 59 00 00 01                  	mov byte ptr [rdi + 0x5908], 1
0x3673:    48 8d 45 c0                           	lea rax, [rbp - 0x40]
0x3677:    48 c7 00 00 00 00 00                  	mov qword ptr [rax], 0
0x367e:    48 c7 40 08 00 00 00 00               	mov qword ptr [rax + 8], 0
0x3686:    48 c7 40 10 00 00 00 00               	mov qword ptr [rax + 0x10], 0
0x368e:    48 c7 40 18 00 00 00 00               	mov qword ptr [rax + 0x18], 0
0x3696:    45 0f b6 d9                           	movzx r11d, r9b
0x369a:    45 89 cc                              	mov r12d, r9d
0x369d:    41 f6 c3 03                           	test r11b, 3
0x36a1:    74 0d                                 	je 0x36b0 <SmiWriteRegister+0x78>
0x36a3:    41 bc fc ff ff ff                     	mov r12d, 0xfffffffc
0x36a9:    45 21 cc                              	and r12d, r9d
0x36ac:    41 83 c4 04                           	add r12d, 4
0x36b0:    45 84 c9                              	test r9b, r9b
0x36b3:    74 25                                 	je 0x36da <SmiWriteRegister+0xa2>
0x36b5:    48 8d 45 c0                           	lea rax, [rbp - 0x40]
0x36b9:    41 83 e9 01                           	sub r9d, 1
0x36bd:    45 0f b6 c9                           	movzx r9d, r9b
0x36c1:    4f 8d 54 08 01                        	lea r10, [r8 + r9 + 1]
0x36c6:    41 0f b6 38                           	movzx edi, byte ptr [r8]
0x36ca:    40 88 38                              	mov byte ptr [rax], dil
0x36cd:    49 83 c0 01                           	add r8, 1
0x36d1:    48 83 c0 01                           	add rax, 1
0x36d5:    4d 39 d0                              	cmp r8, r10
0x36d8:    75 ec                                 	jne 0x36c6 <SmiWriteRegister+0x8e>
0x36da:    84 d2                                 	test dl, dl
0x36dc:    74 07                                 	je 0x36e5 <SmiWriteRegister+0xad>
0x36de:    80 fa 05                              	cmp dl, 5
0x36e1:    77 42                                 	ja 0x3725 <SmiWriteRegister+0xed>
0x36e3:    eb 18                                 	jmp 0x36fd <SmiWriteRegister+0xc5>
0x36e5:    48 8d 45 c0                           	lea rax, [rbp - 0x40]
0x36e9:    41 0f b6 d4                           	movzx edx, r12b
0x36ed:    0f b7 f1                              	movzx esi, cx
0x36f0:    48 89 c1                              	mov rcx, rax
0x36f3:    48 89 df                              	mov rdi, rbx
0x36f6:    e8 bf 5e 00 00                        	call 0x95ba <cfg_write>
0x36fb:    eb 36                                 	jmp 0x3733
0x36fd:    0f b6 c9                              	movzx ecx, cl
0x3700:    0f b6 d2                              	movzx edx, dl
0x3703:    40 0f b6 f6                           	movzx esi, sil
0x3707:    c7 44 24 08 00 00 00 00               	mov dword ptr [rsp + 8], 0
0x370f:    44 89 1c 24                           	mov dword ptr [rsp], r11d
0x3713:    45 0f b6 cc                           	movzx r9d, r12b
0x3717:    4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0x371b:    48 89 df                              	mov rdi, rbx
0x371e:    e8 23 66 00 00                        	call 0x9d46 <i2c_write>
0x3723:    eb 0e                                 	jmp 0x3733
0x3725:    c6 83 08 59 00 00 00                  	mov byte ptr [rbx + 0x5908], 0
; function: SmiReadRegister at 0x372c -- 0x375c
0x372c:    b8 44 00 00 00                        	mov eax, 0x44
0x3731:    eb 0c                                 	jmp 0x373f <SmiReadRegister+0x13>
0x3733:    c6 83 08 59 00 00 00                  	mov byte ptr [rbx + 0x5908], 0
0x373a:    b8 00 00 00 00                        	mov eax, 0
0x373f:    48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x3743:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x374c:    74 05                                 	je 0x3753 <SmiReadRegister+0x27>
0x374e:    e8 55 b4 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x3753:    48 83 c4 40                           	add rsp, 0x40
0x3757:    5b                                    	pop rbx
0x3758:    41 5c                                 	pop r12
0x375a:    c9                                    	leave 
0x375b:    c3                                    	ret 
; function: SmiReadRegister at 0x375c -- 0x3845
0x375c:    55                                    	push rbp
0x375d:    48 89 e5                              	mov rbp, rsp
0x3760:    41 55                                 	push r13
0x3762:    41 54                                 	push r12
0x3764:    53                                    	push rbx
0x3765:    48 83 ec 48                           	sub rsp, 0x48
0x3769:    e8 82 b4 03 00                        	call 0x3ebf0 <mcount>
0x376e:    48 89 fb                              	mov rbx, rdi
0x3771:    4d 89 c5                              	mov r13, r8
0x3774:    45 89 cc                              	mov r12d, r9d
0x3777:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x3780:    48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x3784:    31 c0                                 	xor eax, eax
0x3786:    b8 55 00 00 00                        	mov eax, 0x55
0x378b:    80 bf 08 59 00 00 01                  	cmp byte ptr [rdi + 0x5908], 1
0x3792:    0f 84 cd 00 00 00                     	je 0x3865
0x3798:    c6 87 08 59 00 00 01                  	mov byte ptr [rdi + 0x5908], 1
0x379f:    48 8d 45 b0                           	lea rax, [rbp - 0x50]
0x37a3:    48 c7 00 00 00 00 00                  	mov qword ptr [rax], 0
0x37aa:    48 c7 40 08 00 00 00 00               	mov qword ptr [rax + 8], 0
0x37b2:    48 c7 40 10 00 00 00 00               	mov qword ptr [rax + 0x10], 0
0x37ba:    48 c7 40 18 00 00 00 00               	mov qword ptr [rax + 0x18], 0
0x37c2:    41 0f b6 c1                           	movzx eax, r9b
0x37c6:    a8 03                                 	test al, 3
0x37c8:    74 0d                                 	je 0x37d7 <SmiReadRegister+0x7b>
0x37ca:    41 b9 fc ff ff ff                     	mov r9d, 0xfffffffc
0x37d0:    45 21 e1                              	and r9d, r12d
0x37d3:    41 83 c1 04                           	add r9d, 4
0x37d7:    84 d2                                 	test dl, dl
0x37d9:    74 07                                 	je 0x37e2 <SmiReadRegister+0x86>
0x37db:    80 fa 05                              	cmp dl, 5
0x37de:    77 46                                 	ja 0x3826 <SmiReadRegister+0xca>
0x37e0:    eb 18                                 	jmp 0x37fa <SmiReadRegister+0x9e>
0x37e2:    48 8d 45 b0                           	lea rax, [rbp - 0x50]
0x37e6:    41 0f b6 d1                           	movzx edx, r9b
0x37ea:    0f b7 f1                              	movzx esi, cx
0x37ed:    48 89 c1                              	mov rcx, rax
0x37f0:    48 89 df                              	mov rdi, rbx
0x37f3:    e8 48 5d 00 00                        	call 0x9540 <cfg_read>
0x37f8:    eb 25                                 	jmp 0x381f <SmiReadRegister+0xc3>
0x37fa:    0f b6 c9                              	movzx ecx, cl
0x37fd:    0f b6 d2                              	movzx edx, dl
0x3800:    40 0f b6 f6                           	movzx esi, sil
0x3804:    c7 44 24 08 00 00 00 00               	mov dword ptr [rsp + 8], 0
0x380c:    89 04 24                              	mov dword ptr [rsp], eax
0x380f:    45 0f b6 c9                           	movzx r9d, r9b
0x3813:    4c 8d 45 b0                           	lea r8, [rbp - 0x50]
0x3817:    48 89 df                              	mov rdi, rbx
0x381a:    e8 94 69 00 00                        	call 0xa1b3 <i2c_read>
0x381f:    45 84 e4                              	test r12b, r12b
0x3822:    75 10                                 	jne 0x3834 <SmiReadRegister+0xd8>
0x3824:    eb 33                                 	jmp 0x3859
0x3826:    c6 83 08 59 00 00 00                  	mov byte ptr [rbx + 0x5908], 0
0x382d:    b8 44 00 00 00                        	mov eax, 0x44
0x3832:    eb 31                                 	jmp 0x3865
0x3834:    48 8d 45 b0                           	lea rax, [rbp - 0x50]
0x3838:    41 83 ec 01                           	sub r12d, 1
0x383c:    45 0f b6 e4                           	movzx r12d, r12b
0x3840:    4a 8d 4c 20 01                        	lea rcx, [rax + r12 + 1]
; data inside code section at 0x3845 -- 0x3854
0x3845:    0f b6 10 41 88 55 00 48  83 c0 01 49 83 c5 01      |...A.U.H...I... |
; function: SetTSMode at 0x3854 -- 0x3884
0x3854:    48 39 c8                              	cmp rax, rcx
0x3857:    75 ec                                 	jne 0x3845
0x3859:    c6 83 08 59 00 00 00                  	mov byte ptr [rbx + 0x5908], 0
0x3860:    b8 00 00 00 00                        	mov eax, 0
0x3865:    48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x3869:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x3872:    74 05                                 	je 0x3879 <SetTSMode+0x25>
0x3874:    e8 2f b3 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x3879:    48 83 c4 48                           	add rsp, 0x48
0x387d:    5b                                    	pop rbx
0x387e:    41 5c                                 	pop r12
0x3880:    41 5d                                 	pop r13
0x3882:    c9                                    	leave 
0x3883:    c3                                    	ret 
; function: SetTSMode at 0x3884 -- 0x3956
0x3884:    55                                    	push rbp
0x3885:    48 89 e5                              	mov rbp, rsp
0x3888:    53                                    	push rbx
0x3889:    48 83 ec 18                           	sub rsp, 0x18
0x388d:    e8 5e b3 03 00                        	call 0x3ebf0 <mcount>
0x3892:    48 89 fb                              	mov rbx, rdi
0x3895:    c6 45 ef 00                           	mov byte ptr [rbp - 0x11], 0
0x3899:    40 84 f6                              	test sil, sil
0x389c:    74 12                                 	je 0x38b0 <SetTSMode+0x2c>
0x389e:    40 80 fe 02                           	cmp sil, 2
0x38a2:    74 0c                                 	je 0x38b0 <SetTSMode+0x2c>
0x38a4:    40 80 fe 04                           	cmp sil, 4
0x38a8:    74 06                                 	je 0x38b0 <SetTSMode+0x2c>
0x38aa:    40 80 fe 06                           	cmp sil, 6
0x38ae:    75 5e                                 	jne 0x390e <SetTSMode+0x8a>
0x38b0:    41 b9 01 00 00 00                     	mov r9d, 1
0x38b6:    4c 8d 45 ef                           	lea r8, [rbp - 0x11]
0x38ba:    b9 40 0b 00 00                        	mov ecx, 0xb40
0x38bf:    ba 00 00 00 00                        	mov edx, 0
0x38c4:    be 00 00 00 00                        	mov esi, 0
0x38c9:    48 89 df                              	mov rdi, rbx
0x38cc:    e8 8b fe ff ff                        	call 0x375c <SmiReadRegister>
0x38d1:    84 c0                                 	test al, al
0x38d3:    0f 85 a1 00 00 00                     	jne 0x397a
0x38d9:    0f b6 45 ef                           	movzx eax, byte ptr [rbp - 0x11]
0x38dd:    84 c0                                 	test al, al
0x38df:    0f 88 95 00 00 00                     	js 0x397a
0x38e5:    83 c8 80                              	or eax, 0xffffff80
0x38e8:    88 45 ef                              	mov byte ptr [rbp - 0x11], al
0x38eb:    41 b9 01 00 00 00                     	mov r9d, 1
0x38f1:    4c 8d 45 ef                           	lea r8, [rbp - 0x11]
0x38f5:    b9 40 0b 00 00                        	mov ecx, 0xb40
0x38fa:    ba 00 00 00 00                        	mov edx, 0
0x38ff:    be 00 00 00 00                        	mov esi, 0
0x3904:    48 89 df                              	mov rdi, rbx
0x3907:    e8 2c fd ff ff                        	call 0x3638 <SmiWriteRegister>
0x390c:    eb 6c                                 	jmp 0x397a
0x390e:    40 80 fe 01                           	cmp sil, 1
0x3912:    74 12                                 	je 0x3926 <SetTSMode+0xa2>
0x3914:    40 80 fe 03                           	cmp sil, 3
0x3918:    74 0c                                 	je 0x3926 <SetTSMode+0xa2>
0x391a:    40 80 fe 05                           	cmp sil, 5
0x391e:    74 06                                 	je 0x3926 <SetTSMode+0xa2>
0x3920:    40 80 fe 07                           	cmp sil, 7
0x3924:    75 54                                 	jne 0x397a
0x3926:    41 b9 01 00 00 00                     	mov r9d, 1
0x392c:    4c 8d 45 ef                           	lea r8, [rbp - 0x11]
0x3930:    b9 00 0a 00 00                        	mov ecx, 0xa00
0x3935:    ba 00 00 00 00                        	mov edx, 0
0x393a:    be 00 00 00 00                        	mov esi, 0
0x393f:    48 89 df                              	mov rdi, rbx
0x3942:    e8 15 fe ff ff                        	call 0x375c <SmiReadRegister>
0x3947:    84 c0                                 	test al, al
0x3949:    75 2f                                 	jne 0x397a
0x394b:    0f b6 45 ef                           	movzx eax, byte ptr [rbp - 0x11]
0x394f:    84 c0                                 	test al, al
0x3951:    78 27                                 	js 0x397a
0x3953:    83 c8 80                              	or eax, 0xffffff80
; function: SmiTunerPowerUp at 0x3956 -- 0x3986
0x3956:    88 45 ef                              	mov byte ptr [rbp - 0x11], al
0x3959:    41 b9 01 00 00 00                     	mov r9d, 1
0x395f:    4c 8d 45 ef                           	lea r8, [rbp - 0x11]
0x3963:    b9 00 0a 00 00                        	mov ecx, 0xa00
0x3968:    ba 00 00 00 00                        	mov edx, 0
0x396d:    be 00 00 00 00                        	mov esi, 0
0x3972:    48 89 df                              	mov rdi, rbx
0x3975:    e8 be fc ff ff                        	call 0x3638 <SmiWriteRegister>
0x397a:    b8 01 00 00 00                        	mov eax, 1
0x397f:    48 83 c4 18                           	add rsp, 0x18
0x3983:    5b                                    	pop rbx
0x3984:    c9                                    	leave 
0x3985:    c3                                    	ret 
; function: SmiTunerPowerUp at 0x3986 -- 0x39d0
0x3986:    55                                    	push rbp
0x3987:    48 89 e5                              	mov rbp, rsp
0x398a:    48 83 ec 10                           	sub rsp, 0x10
0x398e:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0x3992:    4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x3997:    e8 54 b2 03 00                        	call 0x3ebf0 <mcount>
0x399c:    48 89 fb                              	mov rbx, rdi
0x399f:    c6 87 0a 59 00 00 00                  	mov byte ptr [rdi + 0x590a], 0
0x39a6:    48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x39ad:    48 05 88 08 00 00                     	add rax, 0x888
0x39b3:    44 8b 20                              	mov r12d, dword ptr [rax]
0x39b6:    41 83 e4 fe                           	and r12d, 0xfffffffe
0x39ba:    48 8b 97 f8 57 00 00                  	mov rdx, qword ptr [rdi + 0x57f8]
0x39c1:    48 81 c2 88 08 00 00                  	add rdx, 0x888
0x39c8:    44 89 22                              	mov dword ptr [rdx], r12d
0x39cb:    bf 14 00 00 00                        	mov edi, 0x14
; data inside code section at 0x39d0 -- 0x39d3
0x39d0:    e8 80 1a                                           |...             |
; function: Hardware_PowerUp at 0x39d3 -- 0x3a03
0x39d3:    01 00                                 	add dword ptr [rax], eax
0x39d5:    41 83 cc 01                           	or r12d, 1
0x39d9:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x39e0:    48 05 88 08 00 00                     	add rax, 0x888
0x39e6:    44 89 20                              	mov dword ptr [rax], r12d
0x39e9:    bf 14 00 00 00                        	mov edi, 0x14
0x39ee:    e8 62 1a 01 00                        	call 0x15455 <DelayMilliseconds>
0x39f3:    b8 01 00 00 00                        	mov eax, 1
0x39f8:    48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x39fc:    4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x3a01:    c9                                    	leave 
0x3a02:    c3                                    	ret 
; function: Hardware_PowerUp at 0x3a03 -- 0x3a30
0x3a03:    55                                    	push rbp
0x3a04:    48 89 e5                              	mov rbp, rsp
0x3a07:    53                                    	push rbx
0x3a08:    48 83 ec 08                           	sub rsp, 8
0x3a0c:    e8 df b1 03 00                        	call 0x3ebf0 <mcount>
0x3a11:    48 89 fb                              	mov rbx, rdi
0x3a14:    b8 01 00 00 00                        	mov eax, 1
0x3a19:    80 bf d2 57 00 00 00                  	cmp byte ptr [rdi + 0x57d2], 0
0x3a20:    75 38                                 	jne 0x3a5a
0x3a22:    e8 5f ff ff ff                        	call 0x3986 <SmiTunerPowerUp>
0x3a27:    89 c2                                 	mov edx, eax
0x3a29:    b8 00 00 00 00                        	mov eax, 0
0x3a2e:    84 d2                                 	test dl, dl
; data inside code section at 0x3a30 -- 0x3a31
0x3a30:    74                                                 |t               |
; function: SmiTunerPowerDown at 0x3a31 -- 0x3a38
0x3a31:    28 48 89                              	sub byte ptr [rax - 0x77], cl
0x3a34:    df e8                                 	fucomip st(0)
0x3a36:    b1 fb                                 	mov cl, 0xfb
; data inside code section at 0x3a38 -- 0x3a39
0x3a38:    ff                                                 |.               |
; function: function_3a39 at 0x3a39 -- 0x3a4e
0x3a39:    ff 48 83                              	dec dword ptr [rax - 0x7d]
0x3a3c:    f8                                    	clc 
0x3a3d:    01 74 0e c6                           	add dword ptr [rsi + rcx - 0x3a], esi
0x3a41:    83 d2 57                              	adc edx, 0x57
0x3a44:    00 00                                 	add byte ptr [rax], al
0x3a46:    00 b8 00 00 00 00                     	add byte ptr [rax], bh
0x3a4c:    eb 0c                                 	jmp 0x3a5a
; data inside code section at 0x3a4e -- 0x3a52
0x3a4e:    c6 83 d2 57                                        |...W            |
; function: Hardware_PowerDown at 0x3a52 -- 0x3a61
0x3a52:    00 00                                 	add byte ptr [rax], al
0x3a54:    01 b8 01 00 00 00                     	add dword ptr [rax + 1], edi
0x3a5a:    48 83 c4 08                           	add rsp, 8
0x3a5e:    5b                                    	pop rbx
0x3a5f:    c9                                    	leave 
0x3a60:    c3                                    	ret 
; function: SmiTunerPowerDown at 0x3a61 -- 0x3a82
0x3a61:    55                                    	push rbp
0x3a62:    48 89 e5                              	mov rbp, rsp
0x3a65:    e8 86 b1 03 00                        	call 0x3ebf0 <mcount>
0x3a6a:    c6 87 0a 59 00 00 00                  	mov byte ptr [rdi + 0x590a], 0
0x3a71:    bf 14 00 00 00                        	mov edi, 0x14
0x3a76:    e8 da 19 01 00                        	call 0x15455 <DelayMilliseconds>
0x3a7b:    b8 01 00 00 00                        	mov eax, 1
0x3a80:    c9                                    	leave 
0x3a81:    c3                                    	ret 
; function: Hardware_PowerDown at 0x3a82 -- 0x3a93
0x3a82:    55                                    	push rbp
0x3a83:    48 89 e5                              	mov rbp, rsp
0x3a86:    53                                    	push rbx
0x3a87:    48 83 ec 08                           	sub rsp, 8
0x3a8b:    e8 60 b1 03 00                        	call 0x3ebf0 <mcount>
0x3a90:    48 89 fb                              	mov rbx, rdi
; data inside code section at 0x3a93 -- 0x3a94
0x3a93:    b8                                                 |.               |
; function: HwSoftReset at 0x3a94 -- 0x3ac4
0x3a94:    01 00                                 	add dword ptr [rax], eax
0x3a96:    00 00                                 	add byte ptr [rax], al
0x3a98:    80 bf d2 57 00 00 00                  	cmp byte ptr [rdi + 0x57d2], 0
0x3a9f:    74 1c                                 	je 0x3abd <HwSoftReset+0x29>
0x3aa1:    e8 bb ff ff ff                        	call 0x3a61 <SmiTunerPowerDown>
0x3aa6:    89 c2                                 	mov edx, eax
0x3aa8:    b8 00 00 00 00                        	mov eax, 0
0x3aad:    84 d2                                 	test dl, dl
0x3aaf:    74 0c                                 	je 0x3abd <HwSoftReset+0x29>
0x3ab1:    c6 83 d2 57 00 00 00                  	mov byte ptr [rbx + 0x57d2], 0
0x3ab8:    b8 01 00 00 00                        	mov eax, 1
0x3abd:    48 83 c4 08                           	add rsp, 8
0x3ac1:    5b                                    	pop rbx
0x3ac2:    c9                                    	leave 
0x3ac3:    c3                                    	ret 
; function: HwSoftReset at 0x3ac4 -- 0x3ac9
0x3ac4:    55                                    	push rbp
0x3ac5:    48 89 e5                              	mov rbp, rsp
0x3ac8:    53                                    	push rbx
; data inside code section at 0x3ac9 -- 0x3aca
0x3ac9:    48                                                 |H               |
; function: Hardware_Init at 0x3aca -- 0x3afa
0x3aca:    83 ec 08                              	sub esp, 8
0x3acd:    e8 1e b1 03 00                        	call 0x3ebf0 <mcount>
0x3ad2:    48 89 fb                              	mov rbx, rdi
0x3ad5:    c6 87 d4 57 00 00 01                  	mov byte ptr [rdi + 0x57d4], 1
0x3adc:    8d 34 b6                              	lea esi, [rsi + rsi*4]
0x3adf:    8d 3c 36                              	lea edi, [rsi + rsi]
0x3ae2:    e8 6e 19 01 00                        	call 0x15455 <DelayMilliseconds>
0x3ae7:    c6 83 d4 57 00 00 00                  	mov byte ptr [rbx + 0x57d4], 0
0x3aee:    b8 01 00 00 00                        	mov eax, 1
0x3af3:    48 83 c4 08                           	add rsp, 8
0x3af7:    5b                                    	pop rbx
0x3af8:    c9                                    	leave 
0x3af9:    c3                                    	ret 
; function: Hardware_Init at 0x3afa -- 0x3ba7
0x3afa:    55                                    	push rbp
0x3afb:    48 89 e5                              	mov rbp, rsp
0x3afe:    41 54                                 	push r12
0x3b00:    53                                    	push rbx
0x3b01:    48 83 ec 20                           	sub rsp, 0x20
0x3b05:    e8 e6 b0 03 00                        	call 0x3ebf0 <mcount>
0x3b0a:    48 89 fb                              	mov rbx, rdi
0x3b0d:    c6 45 e0 00                           	mov byte ptr [rbp - 0x20], 0
0x3b11:    c6 45 e1 00                           	mov byte ptr [rbp - 0x1f], 0
0x3b15:    c6 45 e2 00                           	mov byte ptr [rbp - 0x1e], 0
0x3b19:    c6 45 e3 00                           	mov byte ptr [rbp - 0x1d], 0
0x3b1d:    c6 45 ef 90                           	mov byte ptr [rbp - 0x11], 0x90
0x3b21:    c6 45 d0 c8                           	mov byte ptr [rbp - 0x30], 0xc8
0x3b25:    c6 45 d1 00                           	mov byte ptr [rbp - 0x2f], 0
0x3b29:    c6 45 d2 32                           	mov byte ptr [rbp - 0x2e], 0x32
0x3b2d:    c6 45 d3 00                           	mov byte ptr [rbp - 0x2d], 0
0x3b31:    4c 8d 65 e0                           	lea r12, [rbp - 0x20]
0x3b35:    41 b9 04 00 00 00                     	mov r9d, 4
0x3b3b:    4d 89 e0                              	mov r8, r12
0x3b3e:    b9 80 08 00 00                        	mov ecx, 0x880
0x3b43:    ba 00 00 00 00                        	mov edx, 0
0x3b48:    be 00 00 00 00                        	mov esi, 0
0x3b4d:    e8 0a fc ff ff                        	call 0x375c <SmiReadRegister>
0x3b52:    80 65 e0 c0                           	and byte ptr [rbp - 0x20], 0xc0
0x3b56:    41 b9 04 00 00 00                     	mov r9d, 4
0x3b5c:    4d 89 e0                              	mov r8, r12
0x3b5f:    b9 80 08 00 00                        	mov ecx, 0x880
0x3b64:    ba 00 00 00 00                        	mov edx, 0
0x3b69:    be 00 00 00 00                        	mov esi, 0
0x3b6e:    48 89 df                              	mov rdi, rbx
0x3b71:    e8 c2 fa ff ff                        	call 0x3638 <SmiWriteRegister>
0x3b76:    41 b9 04 00 00 00                     	mov r9d, 4
0x3b7c:    4c 8d 45 d0                           	lea r8, [rbp - 0x30]
0x3b80:    b9 04 09 00 00                        	mov ecx, 0x904
0x3b85:    ba 00 00 00 00                        	mov edx, 0
0x3b8a:    be 00 00 00 00                        	mov esi, 0
0x3b8f:    48 89 df                              	mov rdi, rbx
0x3b92:    e8 a1 fa ff ff                        	call 0x3638 <SmiWriteRegister>
0x3b97:    bf 02 00 00 00                        	mov edi, 2
0x3b9c:    e8 b4 18 01 00                        	call 0x15455 <DelayMilliseconds>
0x3ba1:    41 b9 01 00 00 00                     	mov r9d, 1
; data inside code section at 0x3ba7 -- 0x3ba8
0x3ba7:    4c                                                 |L               |
; function: Hardware_RemoveDevice at 0x3ba8 -- 0x3bb5
0x3ba8:    8d 45 ef                              	lea eax, [rbp - 0x11]
0x3bab:    b9 00 09 00 00                        	mov ecx, 0x900
0x3bb0:    ba 00 00 00 00                        	mov edx, 0
; data inside code section at 0x3bb5 -- 0x3bb8
0x3bb5:    be 00 00                                           |...             |
; function: Hardware_StopTSStream at 0x3bb8 -- 0x3bd8
0x3bb8:    00 00                                 	add byte ptr [rax], al
0x3bba:    48 89 df                              	mov rdi, rbx
0x3bbd:    e8 76 fa ff ff                        	call 0x3638 <SmiWriteRegister>
0x3bc2:    48 89 df                              	mov rdi, rbx
0x3bc5:    e8 97 fe ff ff                        	call 0x3a61 <SmiTunerPowerDown>
0x3bca:    b8 01 00 00 00                        	mov eax, 1
0x3bcf:    48 83 c4 20                           	add rsp, 0x20
0x3bd3:    5b                                    	pop rbx
0x3bd4:    41 5c                                 	pop r12
0x3bd6:    c9                                    	leave 
0x3bd7:    c3                                    	ret 
; function: Hardware_RemoveDevice at 0x3bd8 -- 0x3be8
0x3bd8:    55                                    	push rbp
0x3bd9:    48 89 e5                              	mov rbp, rsp
0x3bdc:    e8 0f b0 03 00                        	call 0x3ebf0 <mcount>
0x3be1:    e8 9f d7 ff ff                        	call 0x1385 <SmiFreeDeviceResources>
0x3be6:    c9                                    	leave 
0x3be7:    c3                                    	ret 
; function: Hardware_StopTSStream at 0x3be8 -- 0x3cc2
0x3be8:    55                                    	push rbp
0x3be9:    48 89 e5                              	mov rbp, rsp
0x3bec:    53                                    	push rbx
0x3bed:    48 83 ec 08                           	sub rsp, 8
0x3bf1:    e8 fa af 03 00                        	call 0x3ebf0 <mcount>
0x3bf6:    48 89 fb                              	mov rbx, rdi
0x3bf9:    89 f1                                 	mov ecx, esi
0x3bfb:    48 8d bf 78 03 00 00                  	lea rdi, [rdi + 0x378]
0x3c02:    ba 00 00 00 00                        	mov edx, 0
0x3c07:    40 0f b6 f6                           	movzx esi, sil
0x3c0b:    38 d1                                 	cmp cl, dl
0x3c0d:    74 11                                 	je 0x3c20 <Hardware_StopTSStream+0x38>
0x3c0f:    89 f0                                 	mov eax, esi
0x3c11:    31 d0                                 	xor eax, edx
0x3c13:    a8 01                                 	test al, 1
0x3c15:    75 09                                 	jne 0x3c20 <Hardware_StopTSStream+0x38>
0x3c17:    80 3f 01                              	cmp byte ptr [rdi], 1
0x3c1a:    0f 84 cb 00 00 00                     	je 0x3ceb
0x3c20:    83 c2 01                              	add edx, 1
0x3c23:    48 83 c7 01                           	add rdi, 1
0x3c27:    83 fa 08                              	cmp edx, 8
0x3c2a:    75 df                                 	jne 0x3c0b <Hardware_StopTSStream+0x23>
0x3c2c:    48 89 df                              	mov rdi, rbx
0x3c2f:    ba 00 00 00 00                        	mov edx, 0
0x3c34:    89 c8                                 	mov eax, ecx
0x3c36:    83 e0 01                              	and eax, 1
0x3c39:    85 c0                                 	test eax, eax
0x3c3b:    75 09                                 	jne 0x3c46 <Hardware_StopTSStream+0x5e>
0x3c3d:    c6 87 7a 61 00 00 00                  	mov byte ptr [rdi + 0x617a], 0
0x3c44:    eb 07                                 	jmp 0x3c4d <Hardware_StopTSStream+0x65>
0x3c46:    c6 87 70 61 00 00 00                  	mov byte ptr [rdi + 0x6170], 0
0x3c4d:    83 c2 01                              	add edx, 1
0x3c50:    48 83 c7 01                           	add rdi, 1
0x3c54:    80 fa 0a                              	cmp dl, 0xa
0x3c57:    75 e0                                 	jne 0x3c39 <Hardware_StopTSStream+0x51>
0x3c59:    80 f9 07                              	cmp cl, 7
0x3c5c:    0f 87 82 00 00 00                     	ja 0x3ce4
0x3c62:    b8 01 00 00 00                        	mov eax, 1
0x3c67:    48 d3 e0                              	shl rax, cl
0x3c6a:    a8 aa                                 	test al, 0xaa
0x3c6c:    75 3e                                 	jne 0x3cac <Hardware_StopTSStream+0xc4>
0x3c6e:    a8 55                                 	test al, 0x55
0x3c70:    74 72                                 	je 0x3ce4
0x3c72:    c6 83 fb 58 00 00 01                  	mov byte ptr [rbx + 0x58fb], 1
0x3c79:    48 89 df                              	mov rdi, rbx
0x3c7c:    e8 49 92 01 00                        	call 0x1ceca <smi_cancel_dma_B>
0x3c81:    48 8d bb 60 58 00 00                  	lea rdi, [rbx + 0x5860]
0x3c88:    e8 50 d9 ff ff                        	call 0x15dd <storageBufferFlush>
0x3c8d:    c6 83 fa 58 00 00 00                  	mov byte ptr [rbx + 0x58fa], 0
0x3c94:    80 bb c8 00 00 00 00                  	cmp byte ptr [rbx + 0xc8], 0
0x3c9b:    75 47                                 	jne 0x3ce4
0x3c9d:    be 0a 00 00 00                        	mov esi, 0xa
0x3ca2:    48 89 df                              	mov rdi, rbx
0x3ca5:    e8 1a fe ff ff                        	call 0x3ac4 <HwSoftReset>
0x3caa:    eb 38                                 	jmp 0x3ce4
0x3cac:    c6 83 f9 58 00 00 01                  	mov byte ptr [rbx + 0x58f9], 1
0x3cb3:    48 89 df                              	mov rdi, rbx
0x3cb6:    e8 bf 91 01 00                        	call 0x1ce7a <smi_cancel_dma_A>
0x3cbb:    48 8d bb 30 58 00 00                  	lea rdi, [rbx + 0x5830]
; function: Hardware_StopTSStream_Force at 0x3cc2 -- 0x3cf2
0x3cc2:    e8 16 d9 ff ff                        	call 0x15dd <storageBufferFlush>
0x3cc7:    c6 83 f8 58 00 00 00                  	mov byte ptr [rbx + 0x58f8], 0
0x3cce:    80 bb c8 00 00 00 00                  	cmp byte ptr [rbx + 0xc8], 0
0x3cd5:    75 0d                                 	jne 0x3ce4 <Hardware_StopTSStream_Force+0x22>
0x3cd7:    be 0a 00 00 00                        	mov esi, 0xa
0x3cdc:    48 89 df                              	mov rdi, rbx
0x3cdf:    e8 e0 fd ff ff                        	call 0x3ac4 <HwSoftReset>
0x3ce4:    c6 83 b0 57 00 00 00                  	mov byte ptr [rbx + 0x57b0], 0
0x3ceb:    48 83 c4 08                           	add rsp, 8
0x3cef:    5b                                    	pop rbx
0x3cf0:    c9                                    	leave 
0x3cf1:    c3                                    	ret 
; function: Hardware_StopTSStream_Force at 0x3cf2 -- 0x3d65
0x3cf2:    55                                    	push rbp
0x3cf3:    48 89 e5                              	mov rbp, rsp
0x3cf6:    53                                    	push rbx
0x3cf7:    48 83 ec 08                           	sub rsp, 8
0x3cfb:    e8 f0 ae 03 00                        	call 0x3ebf0 <mcount>
0x3d00:    48 89 fb                              	mov rbx, rdi
0x3d03:    89 f1                                 	mov ecx, esi
0x3d05:    40 80 fe 07                           	cmp sil, 7
0x3d09:    77 7c                                 	ja 0x3d87
0x3d0b:    b8 01 00 00 00                        	mov eax, 1
0x3d10:    48 d3 e0                              	shl rax, cl
0x3d13:    a8 aa                                 	test al, 0xaa
0x3d15:    75 3b                                 	jne 0x3d52 <Hardware_StopTSStream_Force+0x60>
0x3d17:    a8 55                                 	test al, 0x55
0x3d19:    74 6c                                 	je 0x3d87
0x3d1b:    c6 87 fb 58 00 00 01                  	mov byte ptr [rdi + 0x58fb], 1
0x3d22:    e8 a3 91 01 00                        	call 0x1ceca <smi_cancel_dma_B>
0x3d27:    48 8d bb 60 58 00 00                  	lea rdi, [rbx + 0x5860]
0x3d2e:    e8 aa d8 ff ff                        	call 0x15dd <storageBufferFlush>
0x3d33:    c6 83 fa 58 00 00 00                  	mov byte ptr [rbx + 0x58fa], 0
0x3d3a:    80 bb c8 00 00 00 00                  	cmp byte ptr [rbx + 0xc8], 0
0x3d41:    75 44                                 	jne 0x3d87
0x3d43:    be 0a 00 00 00                        	mov esi, 0xa
0x3d48:    48 89 df                              	mov rdi, rbx
0x3d4b:    e8 74 fd ff ff                        	call 0x3ac4 <HwSoftReset>
0x3d50:    eb 35                                 	jmp 0x3d87
0x3d52:    c6 87 f9 58 00 00 01                  	mov byte ptr [rdi + 0x58f9], 1
0x3d59:    e8 1c 91 01 00                        	call 0x1ce7a <smi_cancel_dma_A>
0x3d5e:    48 8d bb 30 58 00 00                  	lea rdi, [rbx + 0x5830]
; function: Hardware_StartTSStream at 0x3d65 -- 0x3d95
0x3d65:    e8 73 d8 ff ff                        	call 0x15dd <storageBufferFlush>
0x3d6a:    c6 83 f8 58 00 00 00                  	mov byte ptr [rbx + 0x58f8], 0
0x3d71:    80 bb c8 00 00 00 00                  	cmp byte ptr [rbx + 0xc8], 0
0x3d78:    75 0d                                 	jne 0x3d87 <Hardware_StartTSStream+0x22>
0x3d7a:    be 0a 00 00 00                        	mov esi, 0xa
0x3d7f:    48 89 df                              	mov rdi, rbx
0x3d82:    e8 3d fd ff ff                        	call 0x3ac4 <HwSoftReset>
0x3d87:    c6 83 b0 57 00 00 00                  	mov byte ptr [rbx + 0x57b0], 0
0x3d8e:    48 83 c4 08                           	add rsp, 8
0x3d92:    5b                                    	pop rbx
0x3d93:    c9                                    	leave 
0x3d94:    c3                                    	ret 
; function: Hardware_StartTSStream at 0x3d95 -- 0x3ea5
0x3d95:    55                                    	push rbp
0x3d96:    48 89 e5                              	mov rbp, rsp
0x3d99:    53                                    	push rbx
0x3d9a:    48 83 ec 08                           	sub rsp, 8
0x3d9e:    e8 4d ae 03 00                        	call 0x3ebf0 <mcount>
0x3da3:    48 89 fb                              	mov rbx, rdi
0x3da6:    89 f1                                 	mov ecx, esi
0x3da8:    48 8d bf 78 03 00 00                  	lea rdi, [rdi + 0x378]
0x3daf:    ba 00 00 00 00                        	mov edx, 0
0x3db4:    40 0f b6 f6                           	movzx esi, sil
0x3db8:    38 d1                                 	cmp cl, dl
0x3dba:    74 17                                 	je 0x3dd3 <Hardware_StartTSStream+0x3e>
0x3dbc:    89 f0                                 	mov eax, esi
0x3dbe:    31 d0                                 	xor eax, edx
0x3dc0:    a8 01                                 	test al, 1
0x3dc2:    75 0f                                 	jne 0x3dd3 <Hardware_StartTSStream+0x3e>
0x3dc4:    80 3f 01                              	cmp byte ptr [rdi], 1
0x3dc7:    75 0a                                 	jne 0x3dd3 <Hardware_StartTSStream+0x3e>
0x3dc9:    b8 01 00 00 00                        	mov eax, 1
0x3dce:    e9 01 01 00 00                        	jmp 0x3ed4
0x3dd3:    83 c2 01                              	add edx, 1
0x3dd6:    48 83 c7 01                           	add rdi, 1
0x3dda:    83 fa 08                              	cmp edx, 8
0x3ddd:    75 d9                                 	jne 0x3db8 <Hardware_StartTSStream+0x23>
0x3ddf:    48 89 df                              	mov rdi, rbx
0x3de2:    ba 00 00 00 00                        	mov edx, 0
0x3de7:    0f b6 c1                              	movzx eax, cl
0x3dea:    41 89 c0                              	mov r8d, eax
0x3ded:    41 83 e0 01                           	and r8d, 1
0x3df1:    89 c6                                 	mov esi, eax
0x3df3:    45 85 c0                              	test r8d, r8d
0x3df6:    75 09                                 	jne 0x3e01 <Hardware_StartTSStream+0x6c>
0x3df8:    c6 87 7a 61 00 00 00                  	mov byte ptr [rdi + 0x617a], 0
0x3dff:    eb 07                                 	jmp 0x3e08 <Hardware_StartTSStream+0x73>
0x3e01:    c6 87 70 61 00 00 00                  	mov byte ptr [rdi + 0x6170], 0
0x3e08:    83 c2 01                              	add edx, 1
0x3e0b:    48 83 c7 01                           	add rdi, 1
0x3e0f:    80 fa 0a                              	cmp dl, 0xa
0x3e12:    75 dd                                 	jne 0x3df1 <Hardware_StartTSStream+0x5c>
0x3e14:    80 f9 07                              	cmp cl, 7
0x3e17:    0f 87 a4 00 00 00                     	ja 0x3ec1
0x3e1d:    b8 01 00 00 00                        	mov eax, 1
0x3e22:    48 d3 e0                              	shl rax, cl
0x3e25:    a8 aa                                 	test al, 0xaa
0x3e27:    75 51                                 	jne 0x3e7a <Hardware_StartTSStream+0xe5>
0x3e29:    a8 55                                 	test al, 0x55
0x3e2b:    0f 84 90 00 00 00                     	je 0x3ec1
0x3e31:    48 89 df                              	mov rdi, rbx
0x3e34:    e8 4b fa ff ff                        	call 0x3884 <SetTSMode>
0x3e39:    c6 83 fb 58 00 00 00                  	mov byte ptr [rbx + 0x58fb], 0
0x3e40:    80 bb fa 58 00 00 00                  	cmp byte ptr [rbx + 0x58fa], 0
0x3e47:    75 13                                 	jne 0x3e5c <Hardware_StartTSStream+0xc7>
0x3e49:    c6 83 fa 58 00 00 01                  	mov byte ptr [rbx + 0x58fa], 1
0x3e50:    48 89 df                              	mov rdi, rbx
0x3e53:    e8 f7 92 01 00                        	call 0x1d14f <smi_cfg_dma_B>
0x3e58:    84 c0                                 	test al, al
0x3e5a:    74 73                                 	je 0x3ecf
0x3e5c:    c6 83 69 61 00 00 01                  	mov byte ptr [rbx + 0x6169], 1
0x3e63:    c6 83 6c 61 00 00 00                  	mov byte ptr [rbx + 0x616c], 0
0x3e6a:    c6 83 6d 61 00 00 01                  	mov byte ptr [rbx + 0x616d], 1
0x3e71:    c6 83 6f 61 00 00 00                  	mov byte ptr [rbx + 0x616f], 0
0x3e78:    eb 47                                 	jmp 0x3ec1
0x3e7a:    48 89 df                              	mov rdi, rbx
0x3e7d:    e8 02 fa ff ff                        	call 0x3884 <SetTSMode>
0x3e82:    c6 83 f9 58 00 00 00                  	mov byte ptr [rbx + 0x58f9], 0
0x3e89:    80 bb f8 58 00 00 00                  	cmp byte ptr [rbx + 0x58f8], 0
0x3e90:    75 13                                 	jne 0x3ea5 <Hardware_StartTSStream+0x10e>
0x3e92:    c6 83 f8 58 00 00 01                  	mov byte ptr [rbx + 0x58f8], 1
0x3e99:    48 89 df                              	mov rdi, rbx
0x3e9c:    e8 cf 93 01 00                        	call 0x1d270 <smi_cfg_dma_A>
0x3ea1:    84 c0                                 	test al, al
0x3ea3:    74 2a                                 	je 0x3ecf
; data inside code section at 0x3ea5 -- 0x3eab
0x3ea5:    c6 83 68 61 00 00                                  |..ha..          |
; function: Hardware_StartTSStream_Force at 0x3eab -- 0x3edb
0x3eab:    01 c6                                 	add esi, eax
0x3ead:    83 6a 61 00                           	sub dword ptr [rdx + 0x61], 0
0x3eb1:    00 00                                 	add byte ptr [rax], al
0x3eb3:    c6 83 6b 61 00 00 01                  	mov byte ptr [rbx + 0x616b], 1
0x3eba:    c6 83 6e 61 00 00 00                  	mov byte ptr [rbx + 0x616e], 0
0x3ec1:    c6 83 b0 57 00 00 01                  	mov byte ptr [rbx + 0x57b0], 1
0x3ec8:    b8 01 00 00 00                        	mov eax, 1
0x3ecd:    eb 05                                 	jmp 0x3ed4 <Hardware_StartTSStream_Force+0x29>
0x3ecf:    b8 00 00 00 00                        	mov eax, 0
0x3ed4:    48 83 c4 08                           	add rsp, 8
0x3ed8:    5b                                    	pop rbx
0x3ed9:    c9                                    	leave 
0x3eda:    c3                                    	ret 
; function: Hardware_StartTSStream_Force at 0x3edb -- 0x3f4b
0x3edb:    55                                    	push rbp
0x3edc:    48 89 e5                              	mov rbp, rsp
0x3edf:    53                                    	push rbx
0x3ee0:    48 83 ec 08                           	sub rsp, 8
0x3ee4:    e8 07 ad 03 00                        	call 0x3ebf0 <mcount>
0x3ee9:    48 89 fb                              	mov rbx, rdi
0x3eec:    89 f1                                 	mov ecx, esi
0x3eee:    40 80 fe 07                           	cmp sil, 7
0x3ef2:    77 6a                                 	ja 0x3f5e
0x3ef4:    b8 01 00 00 00                        	mov eax, 1
0x3ef9:    48 d3 e0                              	shl rax, cl
0x3efc:    a8 aa                                 	test al, 0xaa
0x3efe:    75 32                                 	jne 0x3f32 <Hardware_StartTSStream_Force+0x57>
0x3f00:    a8 55                                 	test al, 0x55
0x3f02:    74 5a                                 	je 0x3f5e
0x3f04:    40 0f b6 f6                           	movzx esi, sil
0x3f08:    e8 77 f9 ff ff                        	call 0x3884 <SetTSMode>
0x3f0d:    c6 83 fb 58 00 00 00                  	mov byte ptr [rbx + 0x58fb], 0
0x3f14:    80 bb fa 58 00 00 00                  	cmp byte ptr [rbx + 0x58fa], 0
0x3f1b:    75 41                                 	jne 0x3f5e
0x3f1d:    c6 83 fa 58 00 00 01                  	mov byte ptr [rbx + 0x58fa], 1
0x3f24:    48 89 df                              	mov rdi, rbx
0x3f27:    e8 23 92 01 00                        	call 0x1d14f <smi_cfg_dma_B>
0x3f2c:    84 c0                                 	test al, al
0x3f2e:    75 2e                                 	jne 0x3f5e
0x3f30:    eb 3a                                 	jmp 0x3f6c
0x3f32:    40 0f b6 f6                           	movzx esi, sil
0x3f36:    e8 49 f9 ff ff                        	call 0x3884 <SetTSMode>
0x3f3b:    c6 83 f9 58 00 00 00                  	mov byte ptr [rbx + 0x58f9], 0
0x3f42:    80 bb f8 58 00 00 00                  	cmp byte ptr [rbx + 0x58f8], 0
0x3f49:    75 13                                 	jne 0x3f5e
; data inside code section at 0x3f4b -- 0x3f50
0x3f4b:    c6 83 f8 58 00                                     |...X.           |
; function: FUSBDTV_SendTVCmd at 0x3f50 -- 0x3f5e
0x3f50:    00 01                                 	add byte ptr [rcx], al
0x3f52:    48 89 df                              	mov rdi, rbx
0x3f55:    e8 16 93 01 00                        	call 0x1d270 <smi_cfg_dma_A>
0x3f5a:    84 c0                                 	test al, al
0x3f5c:    74 0e                                 	je 0x3f6c
; data inside code section at 0x3f5e -- 0x3f60
0x3f5e:    c6 83                                              |..              |
; function: FUSBDTV_SendTVCmd_Ex at 0x3f60 -- 0x3f6c
0x3f60:    b0 57                                 	mov al, 0x57
0x3f62:    00 00                                 	add byte ptr [rax], al
0x3f64:    01 b8 01 00 00 00                     	add dword ptr [rax + 1], edi
0x3f6a:    eb 05                                 	jmp 0x3f71
; data inside code section at 0x3f6c -- 0x3f70
0x3f6c:    b8 00 00 00                                        |....            |
; function: FUSBDTV_Cmd_Get_DevRandomKey at 0x3f70 -- 0x3f78
; data inside code section at 0x3f78 -- 0x3f80
0x3f78:    90 90 90 90 90 90 90 90                            |........        |
; function: GenEncCmd at 0x3f80 -- 0x3f90
0x3f80:    55                                    	push rbp
0x3f81:    48 89 e5                              	mov rbp, rsp
0x3f84:    e8 67 ac 03 00                        	call 0x3ebf0 <mcount>
0x3f89:    b8 00 00 00 00                        	mov eax, 0
0x3f8e:    c9                                    	leave 
0x3f8f:    c3                                    	ret 
; function: FUSBDTV_SendTVCmd_Ex at 0x3f90 -- 0x3fa0
0x3f90:    55                                    	push rbp
0x3f91:    48 89 e5                              	mov rbp, rsp
0x3f94:    e8 57 ac 03 00                        	call 0x3ebf0 <mcount>
0x3f99:    b8 00 00 00 00                        	mov eax, 0
0x3f9e:    c9                                    	leave 
0x3f9f:    c3                                    	ret 
; function: FUSBDTV_Cmd_Get_DevRandomKey at 0x3fa0 -- 0x3fb0
0x3fa0:    55                                    	push rbp
0x3fa1:    48 89 e5                              	mov rbp, rsp
0x3fa4:    e8 47 ac 03 00                        	call 0x3ebf0 <mcount>
0x3fa9:    b8 00 00 00 00                        	mov eax, 0
0x3fae:    c9                                    	leave 
0x3faf:    c3                                    	ret 
; function: GenEncCmd at 0x3fb0 -- 0x3fdc
0x3fb0:    55                                    	push rbp
0x3fb1:    48 89 e5                              	mov rbp, rsp
0x3fb4:    e8 37 ac 03 00                        	call 0x3ebf0 <mcount>
0x3fb9:    84 d2                                 	test dl, dl
0x3fbb:    74 51                                 	je 0x400e
0x3fbd:    89 f8                                 	mov eax, edi
0x3fbf:    c0 e8 04                              	shr al, 4
0x3fc2:    83 e7 0f                              	and edi, 0xf
0x3fc5:    83 ea 01                              	sub edx, 1
0x3fc8:    0f b6 d2                              	movzx edx, dl
0x3fcb:    4c 8d 5c 16 01                        	lea r11, [rsi + rdx + 1]
0x3fd0:    49 c7 c2 00 00 00 00                  	mov r10, 0
0x3fd7:    ba 00 00 00 00                        	mov edx, 0
; data inside code section at 0x3fdc -- 0x3fe0
0x3fdc:    44 0f b6 c7                                        |D...            |
; function: FUSBDTV_Cmd_Set_RandomKey at 0x3fe0 -- 0x3ff0
0x3fe0:    47 0f b6 04 02                        	movzx r8d, byte ptr [r10 + r8]
0x3fe5:    44 32 06                              	xor r8b, byte ptr [rsi]
0x3fe8:    44 0f b6 c8                           	movzx r9d, al
0x3fec:    46 32 04 09                           	xor r8b, byte ptr [rcx + r9]
; function: FUSBDTV_Cmd_T_confirm at 0x3ff0 -- 0x3ffe
0x3ff0:    44 88 06                              	mov byte ptr [rsi], r8b
0x3ff3:    83 c0 01                              	add eax, 1
0x3ff6:    3c 10                                 	cmp al, 0x10
0x3ff8:    0f 43 c2                              	cmovae eax, edx
0x3ffb:    83 c7 01                              	add edi, 1
; data inside code section at 0x3ffe -- 0x4000
0x3ffe:    40 80                                              |@.              |
; function: FUSBDTV_Cmd_TimerStartStop at 0x4000 -- 0x4010
0x4000:    ff 10                                 	call qword ptr [rax]
0x4002:    0f 43 fa                              	cmovae edi, edx
0x4005:    48 83 c6 01                           	add rsi, 1
0x4009:    4c 39 de                              	cmp rsi, r11
0x400c:    75 ce                                 	jne 0x3fdc
0x400e:    c9                                    	leave 
0x400f:    c3                                    	ret 
; function: FUSBDTV_Cmd_ReadIR at 0x4010 -- 0x4020
0x4010:    55                                    	push rbp
0x4011:    48 89 e5                              	mov rbp, rsp
0x4014:    e8 d7 ab 03 00                        	call 0x3ebf0 <mcount>
0x4019:    b8 00 00 00 00                        	mov eax, 0
0x401e:    c9                                    	leave 
0x401f:    c3                                    	ret 
; function: FUSBDTV_Cmd_SetIRMode at 0x4020 -- 0x4030
0x4020:    55                                    	push rbp
0x4021:    48 89 e5                              	mov rbp, rsp
0x4024:    e8 c7 ab 03 00                        	call 0x3ebf0 <mcount>
0x4029:    b8 00 00 00 00                        	mov eax, 0
0x402e:    c9                                    	leave 
0x402f:    c3                                    	ret 
; function: FUSBDTV_Cmd_StartDSC at 0x4030 -- 0x4040
0x4030:    55                                    	push rbp
0x4031:    48 89 e5                              	mov rbp, rsp
0x4034:    e8 b7 ab 03 00                        	call 0x3ebf0 <mcount>
0x4039:    b8 01 00 00 00                        	mov eax, 1
0x403e:    c9                                    	leave 
0x403f:    c3                                    	ret 
; function: FUSBDTV_Cmd_StopDSC at 0x4040 -- 0x4050
0x4040:    55                                    	push rbp
0x4041:    48 89 e5                              	mov rbp, rsp
0x4044:    e8 a7 ab 03 00                        	call 0x3ebf0 <mcount>
0x4049:    b8 00 00 00 00                        	mov eax, 0
0x404e:    c9                                    	leave 
0x404f:    c3                                    	ret 
; function: FUSBDTV_Cmd_Reset_Channel at 0x4050 -- 0x4060
0x4050:    55                                    	push rbp
0x4051:    48 89 e5                              	mov rbp, rsp
0x4054:    e8 97 ab 03 00                        	call 0x3ebf0 <mcount>
0x4059:    b8 00 00 00 00                        	mov eax, 0
0x405e:    c9                                    	leave 
0x405f:    c3                                    	ret 
; function: FUSBDTV_Cmd_GetDev_Speed at 0x4060 -- 0x4070
0x4060:    55                                    	push rbp
0x4061:    48 89 e5                              	mov rbp, rsp
0x4064:    e8 87 ab 03 00                        	call 0x3ebf0 <mcount>
0x4069:    b8 01 00 00 00                        	mov eax, 1
0x406e:    c9                                    	leave 
0x406f:    c3                                    	ret 
; function: FUSBDTV_Cmd_I2CRead_NoWt at 0x4070 -- 0x4080
0x4070:    55                                    	push rbp
0x4071:    48 89 e5                              	mov rbp, rsp
0x4074:    e8 77 ab 03 00                        	call 0x3ebf0 <mcount>
0x4079:    b8 00 00 00 00                        	mov eax, 0
0x407e:    c9                                    	leave 
0x407f:    c3                                    	ret 
; function: FUSBDTV_Cmd_I2CRead at 0x4080 -- 0x4090
0x4080:    55                                    	push rbp
0x4081:    48 89 e5                              	mov rbp, rsp
0x4084:    e8 67 ab 03 00                        	call 0x3ebf0 <mcount>
0x4089:    b8 00 00 00 00                        	mov eax, 0
0x408e:    c9                                    	leave 
0x408f:    c3                                    	ret 
; function: FUSBDTV_Cmd_I2CWrite at 0x4090 -- 0x40a0
0x4090:    55                                    	push rbp
0x4091:    48 89 e5                              	mov rbp, rsp
0x4094:    e8 57 ab 03 00                        	call 0x3ebf0 <mcount>
0x4099:    b8 00 00 00 00                        	mov eax, 0
0x409e:    c9                                    	leave 
0x409f:    c3                                    	ret 
; function: FUSBDTV_Cmd_I2CWrite_noStop at 0x40a0 -- 0x40b0
0x40a0:    55                                    	push rbp
0x40a1:    48 89 e5                              	mov rbp, rsp
0x40a4:    e8 47 ab 03 00                        	call 0x3ebf0 <mcount>
0x40a9:    b8 00 00 00 00                        	mov eax, 0
0x40ae:    c9                                    	leave 
0x40af:    c3                                    	ret 
; function: FUSBDTV_Cmd_I2CBufFill at 0x40b0 -- 0x40c0
0x40b0:    55                                    	push rbp
0x40b1:    48 89 e5                              	mov rbp, rsp
0x40b4:    e8 37 ab 03 00                        	call 0x3ebf0 <mcount>
0x40b9:    b8 00 00 00 00                        	mov eax, 0
0x40be:    c9                                    	leave 
0x40bf:    c3                                    	ret 
; function: FUSBDTV_Cmd_I2CBufSend at 0x40c0 -- 0x40d0
0x40c0:    55                                    	push rbp
0x40c1:    48 89 e5                              	mov rbp, rsp
0x40c4:    e8 27 ab 03 00                        	call 0x3ebf0 <mcount>
0x40c9:    b8 00 00 00 00                        	mov eax, 0
0x40ce:    c9                                    	leave 
0x40cf:    c3                                    	ret 
; function: FUSBDTV_Cmd_SysCtrlWrite at 0x40d0 -- 0x40e0
0x40d0:    55                                    	push rbp
0x40d1:    48 89 e5                              	mov rbp, rsp
0x40d4:    e8 17 ab 03 00                        	call 0x3ebf0 <mcount>
0x40d9:    b8 00 00 00 00                        	mov eax, 0
0x40de:    c9                                    	leave 
0x40df:    c3                                    	ret 
; function: FUSBDTV_Cmd_CFRead at 0x40e0 -- 0x40f0
0x40e0:    55                                    	push rbp
0x40e1:    48 89 e5                              	mov rbp, rsp
0x40e4:    e8 07 ab 03 00                        	call 0x3ebf0 <mcount>
0x40e9:    b8 00 00 00 00                        	mov eax, 0
0x40ee:    c9                                    	leave 
0x40ef:    c3                                    	ret 
; function: FUSBDTV_Cmd_CFWrite at 0x40f0 -- 0x4100
0x40f0:    55                                    	push rbp
0x40f1:    48 89 e5                              	mov rbp, rsp
0x40f4:    e8 f7 aa 03 00                        	call 0x3ebf0 <mcount>
0x40f9:    b8 00 00 00 00                        	mov eax, 0
0x40fe:    c9                                    	leave 
0x40ff:    c3                                    	ret 
; function: FUSBDTV_Cmd_EncRead at 0x4100 -- 0x4110
0x4100:    55                                    	push rbp
0x4101:    48 89 e5                              	mov rbp, rsp
0x4104:    e8 e7 aa 03 00                        	call 0x3ebf0 <mcount>
0x4109:    b8 00 00 00 00                        	mov eax, 0
0x410e:    c9                                    	leave 
0x410f:    c3                                    	ret 
; function: FUSBDTV_Cmd_EncWrite at 0x4110 -- 0x4120
0x4110:    55                                    	push rbp
0x4111:    48 89 e5                              	mov rbp, rsp
0x4114:    e8 d7 aa 03 00                        	call 0x3ebf0 <mcount>
0x4119:    b8 00 00 00 00                        	mov eax, 0
0x411e:    c9                                    	leave 
0x411f:    c3                                    	ret 
; function: FUSBDTV_Cmd_Simulation_Enable at 0x4120 -- 0x4130
0x4120:    55                                    	push rbp
0x4121:    48 89 e5                              	mov rbp, rsp
0x4124:    e8 c7 aa 03 00                        	call 0x3ebf0 <mcount>
0x4129:    b8 00 00 00 00                        	mov eax, 0
0x412e:    c9                                    	leave 
0x412f:    c3                                    	ret 
; function: FUSBDTV_Cmd_Rst_Enc at 0x4130 -- 0x4140
0x4130:    55                                    	push rbp
0x4131:    48 89 e5                              	mov rbp, rsp
0x4134:    e8 b7 aa 03 00                        	call 0x3ebf0 <mcount>
0x4139:    b8 00 00 00 00                        	mov eax, 0
0x413e:    c9                                    	leave 
0x413f:    c3                                    	ret 
; function: FUSBDTV_Cmd_WriteEncReg at 0x4140 -- 0x4150
0x4140:    55                                    	push rbp
0x4141:    48 89 e5                              	mov rbp, rsp
0x4144:    e8 a7 aa 03 00                        	call 0x3ebf0 <mcount>
0x4149:    b8 00 00 00 00                        	mov eax, 0
0x414e:    c9                                    	leave 
0x414f:    c3                                    	ret 
; function: FUSBDTV_ResetParentPort at 0x4150 -- 0x4160
0x4150:    55                                    	push rbp
0x4151:    48 89 e5                              	mov rbp, rsp
0x4154:    e8 97 aa 03 00                        	call 0x3ebf0 <mcount>
0x4159:    b8 00 00 00 00                        	mov eax, 0
0x415e:    c9                                    	leave 
0x415f:    c3                                    	ret 
; function: FUSBDTV_ProcessTransfer at 0x4160 -- 0x4170
0x4160:    55                                    	push rbp
0x4161:    48 89 e5                              	mov rbp, rsp
0x4164:    e8 87 aa 03 00                        	call 0x3ebf0 <mcount>
0x4169:    b8 00 00 00 00                        	mov eax, 0
0x416e:    c9                                    	leave 
0x416f:    c3                                    	ret 
; function: FUSBDTV_InitializeStreamUrb_ISR at 0x4170 -- 0x4180
0x4170:    55                                    	push rbp
0x4171:    48 89 e5                              	mov rbp, rsp
0x4174:    e8 77 aa 03 00                        	call 0x3ebf0 <mcount>
0x4179:    b8 00 00 00 00                        	mov eax, 0
0x417e:    c9                                    	leave 
0x417f:    c3                                    	ret 
; function: FUSBDTV_DecrementIoCount at 0x4180 -- 0x4190
0x4180:    55                                    	push rbp
0x4181:    48 89 e5                              	mov rbp, rsp
0x4184:    e8 67 aa 03 00                        	call 0x3ebf0 <mcount>
0x4189:    b8 00 00 00 00                        	mov eax, 0
0x418e:    c9                                    	leave 
0x418f:    c3                                    	ret 
; function: FUSBDTV_IncrementIoCount at 0x4190 -- 0x4199
0x4190:    55                                    	push rbp
0x4191:    48 89 e5                              	mov rbp, rsp
0x4194:    e8 57 aa 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x4199 -- 0x419b
0x4199:    b8 00                                              |..              |
; function: FUSB_RstBulkPipe at 0x419b -- 0x41a0
0x419b:    00 00                                 	add byte ptr [rax], al
0x419d:    00 c9                                 	add cl, cl
0x419f:    c3                                    	ret 
; function: FUSBDTV_InitializeStreamUrb_ISR at 0x41a0 -- 0x41a4
0x41a0:    55                                    	push rbp
0x41a1:    48 89 e5                              	mov rbp, rsp
; data inside code section at 0x41a4 -- 0x41a6
0x41a4:    e8 47                                              |.G              |
; function: FUSBDTV_BulkIrp_Complete at 0x41a6 -- 0x41b0
0x41a6:    aa                                    	stosb byte ptr [rdi], al
0x41a7:    03 00                                 	add eax, dword ptr [rax]
0x41a9:    b8 01 00 00 00                        	mov eax, 1
0x41ae:    c9                                    	leave 
0x41af:    c3                                    	ret 
; function: FUSBDTV_DecrementIoCount at 0x41b0 -- 0x41b4
0x41b0:    55                                    	push rbp
0x41b1:    48 89 e5                              	mov rbp, rsp
; data inside code section at 0x41b4 -- 0x41b6
0x41b4:    e8 37                                              |.7              |
; function: FUSBDTV_InitializeStreamUrb at 0x41b6 -- 0x41c0
0x41b6:    aa                                    	stosb byte ptr [rdi], al
0x41b7:    03 00                                 	add eax, dword ptr [rax]
0x41b9:    b8 00 00 00 00                        	mov eax, 0
0x41be:    c9                                    	leave 
0x41bf:    c3                                    	ret 
; function: FUSBDTV_IncrementIoCount at 0x41c0 -- 0x41c4
0x41c0:    55                                    	push rbp
0x41c1:    48 89 e5                              	mov rbp, rsp
; data inside code section at 0x41c4 -- 0x41c6
0x41c4:    e8 27                                              |.'              |
; function: FUSBDTV_Cmd_RePlugInDevice at 0x41c6 -- 0x41cb
0x41c6:    aa                                    	stosb byte ptr [rdi], al
0x41c7:    03 00                                 	add eax, dword ptr [rax]
0x41c9:    c9                                    	leave 
0x41ca:    c3                                    	ret 
; function: FUSB_RstBulkPipe at 0x41cb -- 0x41d6
0x41cb:    55                                    	push rbp
0x41cc:    48 89 e5                              	mov rbp, rsp
0x41cf:    e8 1c aa 03 00                        	call 0x3ebf0 <mcount>
0x41d4:    c9                                    	leave 
0x41d5:    c3                                    	ret 
; function: findRingbufNumToDispatchByRuleTable at 0x41d6 -- 0x41e6
0x41d6:    55                                    	push rbp
0x41d7:    48 89 e5                              	mov rbp, rsp
0x41da:    e8 11 aa 03 00                        	call 0x3ebf0 <mcount>
0x41df:    b8 00 00 00 00                        	mov eax, 0
0x41e4:    c9                                    	leave 
0x41e5:    c3                                    	ret 
; function: FUSBDTV_InitializeStreamUrb at 0x41e6 -- 0x41f6
0x41e6:    55                                    	push rbp
0x41e7:    48 89 e5                              	mov rbp, rsp
0x41ea:    e8 01 aa 03 00                        	call 0x3ebf0 <mcount>
0x41ef:    b8 01 00 00 00                        	mov eax, 1
0x41f4:    c9                                    	leave 
0x41f5:    c3                                    	ret 
; function: FUSBDTV_Cmd_RePlugInDevice at 0x41f6 -- 0x4206
0x41f6:    55                                    	push rbp
0x41f7:    48 89 e5                              	mov rbp, rsp
0x41fa:    e8 f1 a9 03 00                        	call 0x3ebf0 <mcount>
0x41ff:    b8 00 00 00 00                        	mov eax, 0
0x4204:    c9                                    	leave 
0x4205:    c3                                    	ret 
; function: findRingbufNumToDispatchByRuleTable at 0x4206 -- 0x421d
0x4206:    55                                    	push rbp
0x4207:    48 89 e5                              	mov rbp, rsp
0x420a:    53                                    	push rbx
0x420b:    e8 e0 a9 03 00                        	call 0x3ebf0 <mcount>
0x4210:    40 84 ff                              	test dil, dil
0x4213:    0f 95 c0                              	setne al
0x4216:    0f b6 c0                              	movzx eax, al
0x4219:    39 c8                                 	cmp eax, ecx
0x421b:    73 43                                 	jae 0x4260
; data inside code section at 0x421d -- 0x4238
0x421d:    89 c7 48 c1 e7 04 48 8d  3c 3a 83 7f 0c 00 74 2c   |..H...H.<:....t,|
0x422d:    44 0f b6 07 44 3a 06 75  23 83 7f                  |D...D:.u#..     |
; function: ASV5220_GetCardInDetect at 0x4238 -- 0x4268
0x4238:    08 00                                 	or byte ptr [rax], al
0x423a:    74 0e                                 	je 0x424a <ASV5220_GetCardInDetect+0x12>
0x423c:    44 0f b6 46 01                        	movzx r8d, byte ptr [rsi + 1]
0x4241:    0f b6 5f 04                           	movzx ebx, byte ptr [rdi + 4]
0x4245:    44 30 c3                              	xor bl, r8b
0x4248:    78 0f                                 	js 0x4259 <ASV5220_GetCardInDetect+0x21>
0x424a:    c6 06 47                              	mov byte ptr [rsi], 0x47
0x424d:    83 7f 08 00                           	cmp dword ptr [rdi + 8], 0
0x4251:    74 12                                 	je 0x4265 <ASV5220_GetCardInDetect+0x2d>
0x4253:    80 66 01 7f                           	and byte ptr [rsi + 1], 0x7f
0x4257:    eb 0c                                 	jmp 0x4265 <ASV5220_GetCardInDetect+0x2d>
0x4259:    83 c0 02                              	add eax, 2
0x425c:    39 c1                                 	cmp ecx, eax
0x425e:    77 bd                                 	ja 0x421d
0x4260:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0x4265:    5b                                    	pop rbx
0x4266:    c9                                    	leave 
0x4267:    c3                                    	ret 
; function: ASV5220_GetCardInDetect at 0x4268 -- 0x4279
0x4268:    55                                    	push rbp
0x4269:    48 89 e5                              	mov rbp, rsp
0x426c:    53                                    	push rbx
0x426d:    48 83 ec 18                           	sub rsp, 0x18
0x4271:    e8 7a a9 03 00                        	call 0x3ebf0 <mcount>
0x4276:    48 89 fb                              	mov rbx, rdi
; data inside code section at 0x4279 -- 0x427a
0x4279:    48                                                 |H               |
; function: ASV5220_WriteCommand at 0x427a -- 0x42aa
0x427a:    89 f1                                 	mov ecx, esi
0x427c:    48 8d 55 e8                           	lea rdx, [rbp - 0x18]
0x4280:    be 04 00 00 00                        	mov esi, 4
0x4285:    bf 90 08 00 00                        	mov edi, 0x890
0x428a:    e8 3b 08 01 00                        	call 0x14aca <bTunerReset>
0x428f:    48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x4293:    48 c1 ea 14                           	shr rdx, 0x14
0x4297:    48 83 f2 01                           	xor rdx, 1
0x429b:    83 e2 01                              	and edx, 1
0x429e:    88 13                                 	mov byte ptr [rbx], dl
0x42a0:    0f b6 c0                              	movzx eax, al
0x42a3:    48 83 c4 18                           	add rsp, 0x18
0x42a7:    5b                                    	pop rbx
0x42a8:    c9                                    	leave 
0x42a9:    c3                                    	ret 
; function: ASV5220_WriteCommand at 0x42aa -- 0x4495
0x42aa:    55                                    	push rbp
0x42ab:    48 89 e5                              	mov rbp, rsp
0x42ae:    41 57                                 	push r15
0x42b0:    41 56                                 	push r14
0x42b2:    41 55                                 	push r13
0x42b4:    41 54                                 	push r12
0x42b6:    53                                    	push rbx
0x42b7:    48 83 ec 28                           	sub rsp, 0x28
0x42bb:    e8 30 a9 03 00                        	call 0x3ebf0 <mcount>
0x42c0:    49 89 ff                              	mov r15, rdi
0x42c3:    41 89 f6                              	mov r14d, esi
0x42c6:    48 89 d3                              	mov rbx, rdx
0x42c9:    4c 8d 65 c0                           	lea r12, [rbp - 0x40]
0x42cd:    40 88 75 c0                           	mov byte ptr [rbp - 0x40], sil
0x42d1:    89 f0                                 	mov eax, esi
0x42d3:    c1 e8 08                              	shr eax, 8
0x42d6:    88 45 c1                              	mov byte ptr [rbp - 0x3f], al
0x42d9:    c6 45 c2 23                           	mov byte ptr [rbp - 0x3e], 0x23
0x42dd:    c6 45 c3 00                           	mov byte ptr [rbp - 0x3d], 0
0x42e1:    48 89 d1                              	mov rcx, rdx
0x42e4:    4c 89 e2                              	mov rdx, r12
0x42e7:    be 04 00 00 00                        	mov esi, 4
0x42ec:    bf 8c 0c 00 00                        	mov edi, 0xc8c
0x42f1:    e8 a4 07 01 00                        	call 0x14a9a <bReadPcieReg>
0x42f6:    c6 45 c0 03                           	mov byte ptr [rbp - 0x40], 3
0x42fa:    c6 45 c1 02                           	mov byte ptr [rbp - 0x3f], 2
0x42fe:    c6 45 c2 01                           	mov byte ptr [rbp - 0x3e], 1
0x4302:    c6 45 c3 00                           	mov byte ptr [rbp - 0x3d], 0
0x4306:    48 89 d9                              	mov rcx, rbx
0x4309:    4c 89 e2                              	mov rdx, r12
0x430c:    be 04 00 00 00                        	mov esi, 4
0x4311:    bf 88 0c 00 00                        	mov edi, 0xc88
0x4316:    e8 7f 07 01 00                        	call 0x14a9a <bReadPcieReg>
0x431b:    45 0f b7 f6                           	movzx r14d, r14w
0x431f:    c7 45 b0 00 00 00 00                  	mov dword ptr [rbp - 0x50], 0
0x4326:    41 bd 00 00 00 00                     	mov r13d, 0
0x432c:    4c 8d 65 b0                           	lea r12, [rbp - 0x50]
0x4330:    48 89 d9                              	mov rcx, rbx
0x4333:    4c 89 e2                              	mov rdx, r12
0x4336:    be 04 00 00 00                        	mov esi, 4
0x433b:    bf 94 0c 00 00                        	mov edi, 0xc94
0x4340:    e8 85 07 01 00                        	call 0x14aca <bTunerReset>
0x4345:    80 7d b1 1c                           	cmp byte ptr [rbp - 0x4f], 0x1c
0x4349:    77 e5                                 	ja 0x4330 <ASV5220_WriteCommand+0x86>
0x434b:    44 89 f0                              	mov eax, r14d
0x434e:    44 29 e8                              	sub eax, r13d
0x4351:    83 f8 01                              	cmp eax, 1
0x4354:    75 47                                 	jne 0x439d <ASV5220_WriteCommand+0xf3>
0x4356:    c6 45 b0 01                           	mov byte ptr [rbp - 0x50], 1
0x435a:    c6 45 b1 00                           	mov byte ptr [rbp - 0x4f], 0
0x435e:    c6 45 b2 00                           	mov byte ptr [rbp - 0x4e], 0
0x4362:    c6 45 b3 00                           	mov byte ptr [rbp - 0x4d], 0
0x4366:    48 89 d9                              	mov rcx, rbx
0x4369:    4c 89 e2                              	mov rdx, r12
0x436c:    be 04 00 00 00                        	mov esi, 4
0x4371:    bf 98 0c 00 00                        	mov edi, 0xc98
0x4376:    e8 1f 07 01 00                        	call 0x14a9a <bReadPcieReg>
0x437b:    49 63 d5                              	movsxd rdx, r13d
0x437e:    49 8d 14 17                           	lea rdx, [r15 + rdx]
0x4382:    48 89 d9                              	mov rcx, rbx
0x4385:    be 04 00 00 00                        	mov esi, 4
0x438a:    bf 90 0c 00 00                        	mov edi, 0xc90
0x438f:    e8 06 07 01 00                        	call 0x14a9a <bReadPcieReg>
0x4394:    41 83 c5 01                           	add r13d, 1
0x4398:    e9 b4 00 00 00                        	jmp 0x4451 <ASV5220_WriteCommand+0x1a7>
0x439d:    83 f8 02                              	cmp eax, 2
0x43a0:    75 44                                 	jne 0x43e6 <ASV5220_WriteCommand+0x13c>
0x43a2:    c6 45 b0 03                           	mov byte ptr [rbp - 0x50], 3
0x43a6:    c6 45 b1 00                           	mov byte ptr [rbp - 0x4f], 0
0x43aa:    c6 45 b2 00                           	mov byte ptr [rbp - 0x4e], 0
0x43ae:    c6 45 b3 00                           	mov byte ptr [rbp - 0x4d], 0
0x43b2:    48 89 d9                              	mov rcx, rbx
0x43b5:    4c 89 e2                              	mov rdx, r12
0x43b8:    be 04 00 00 00                        	mov esi, 4
0x43bd:    bf 98 0c 00 00                        	mov edi, 0xc98
0x43c2:    e8 d3 06 01 00                        	call 0x14a9a <bReadPcieReg>
0x43c7:    49 63 d5                              	movsxd rdx, r13d
0x43ca:    49 8d 14 17                           	lea rdx, [r15 + rdx]
0x43ce:    48 89 d9                              	mov rcx, rbx
0x43d1:    be 04 00 00 00                        	mov esi, 4
0x43d6:    bf 90 0c 00 00                        	mov edi, 0xc90
0x43db:    e8 ba 06 01 00                        	call 0x14a9a <bReadPcieReg>
0x43e0:    41 83 c5 02                           	add r13d, 2
0x43e4:    eb 6b                                 	jmp 0x4451 <ASV5220_WriteCommand+0x1a7>
0x43e6:    83 f8 03                              	cmp eax, 3
0x43e9:    75 44                                 	jne 0x442f <ASV5220_WriteCommand+0x185>
0x43eb:    c6 45 b0 07                           	mov byte ptr [rbp - 0x50], 7
0x43ef:    c6 45 b1 00                           	mov byte ptr [rbp - 0x4f], 0
0x43f3:    c6 45 b2 00                           	mov byte ptr [rbp - 0x4e], 0
0x43f7:    c6 45 b3 00                           	mov byte ptr [rbp - 0x4d], 0
0x43fb:    48 89 d9                              	mov rcx, rbx
0x43fe:    4c 89 e2                              	mov rdx, r12
0x4401:    be 04 00 00 00                        	mov esi, 4
0x4406:    bf 98 0c 00 00                        	mov edi, 0xc98
0x440b:    e8 8a 06 01 00                        	call 0x14a9a <bReadPcieReg>
0x4410:    49 63 d5                              	movsxd rdx, r13d
0x4413:    49 8d 14 17                           	lea rdx, [r15 + rdx]
0x4417:    48 89 d9                              	mov rcx, rbx
0x441a:    be 04 00 00 00                        	mov esi, 4
0x441f:    bf 90 0c 00 00                        	mov edi, 0xc90
0x4424:    e8 71 06 01 00                        	call 0x14a9a <bReadPcieReg>
0x4429:    41 83 c5 03                           	add r13d, 3
0x442d:    eb 22                                 	jmp 0x4451 <ASV5220_WriteCommand+0x1a7>
0x442f:    83 f8 03                              	cmp eax, 3
0x4432:    7e 1d                                 	jle 0x4451 <ASV5220_WriteCommand+0x1a7>
0x4434:    49 63 d5                              	movsxd rdx, r13d
0x4437:    49 8d 14 17                           	lea rdx, [r15 + rdx]
0x443b:    48 89 d9                              	mov rcx, rbx
0x443e:    be 04 00 00 00                        	mov esi, 4
0x4443:    bf 90 0c 00 00                        	mov edi, 0xc90
0x4448:    e8 4d 06 01 00                        	call 0x14a9a <bReadPcieReg>
0x444d:    41 83 c5 04                           	add r13d, 4
0x4451:    45 39 ee                              	cmp r14d, r13d
0x4454:    0f 8f d6 fe ff ff                     	jg 0x4330 <ASV5220_WriteCommand+0x86>
0x445a:    4c 8d 65 b0                           	lea r12, [rbp - 0x50]
0x445e:    48 89 d9                              	mov rcx, rbx
0x4461:    4c 89 e2                              	mov rdx, r12
0x4464:    be 04 00 00 00                        	mov esi, 4
0x4469:    bf 94 0c 00 00                        	mov edi, 0xc94
0x446e:    e8 57 06 01 00                        	call 0x14aca <bTunerReset>
0x4473:    80 7d b1 00                           	cmp byte ptr [rbp - 0x4f], 0
0x4477:    75 e5                                 	jne 0x445e <ASV5220_WriteCommand+0x1b4>
0x4479:    c6 45 b0 0f                           	mov byte ptr [rbp - 0x50], 0xf
0x447d:    c6 45 b1 00                           	mov byte ptr [rbp - 0x4f], 0
0x4481:    c6 45 b2 00                           	mov byte ptr [rbp - 0x4e], 0
0x4485:    c6 45 b3 00                           	mov byte ptr [rbp - 0x4d], 0
0x4489:    48 8d 55 b0                           	lea rdx, [rbp - 0x50]
0x448d:    48 89 d9                              	mov rcx, rbx
0x4490:    be 04 00 00 00                        	mov esi, 4
; data inside code section at 0x4495 -- 0x4499
0x4495:    bf 98 0c 00                                        |....            |
; function: ASV5220_SetBaudrate at 0x4499 -- 0x44c9
0x4499:    00 e8                                 	add al, ch
0x449b:    fb                                    	sti 
0x449c:    05 01 00 48 8d                        	add eax, 0x8d480001
0x44a1:    55                                    	push rbp
0x44a2:    c0 48 89 d9                           	ror byte ptr [rax - 0x77], 0xd9
0x44a6:    be 04 00 00 00                        	mov esi, 4
0x44ab:    bf 88 0c 00 00                        	mov edi, 0xc88
0x44b0:    e8 15 06 01 00                        	call 0x14aca <bTunerReset>
0x44b5:    b8 01 00 00 00                        	mov eax, 1
0x44ba:    48 83 c4 28                           	add rsp, 0x28
0x44be:    5b                                    	pop rbx
0x44bf:    41 5c                                 	pop r12
0x44c1:    41 5d                                 	pop r13
0x44c3:    41 5e                                 	pop r14
0x44c5:    41 5f                                 	pop r15
0x44c7:    c9                                    	leave 
0x44c8:    c3                                    	ret 
; function: ASV5220_SetBaudrate at 0x44c9 -- 0x4505
0x44c9:    55                                    	push rbp
0x44ca:    48 89 e5                              	mov rbp, rsp
0x44cd:    41 54                                 	push r12
0x44cf:    53                                    	push rbx
0x44d0:    48 83 ec 10                           	sub rsp, 0x10
0x44d4:    e8 17 a7 03 00                        	call 0x3ebf0 <mcount>
0x44d9:    48 89 fb                              	mov rbx, rdi
0x44dc:    4c 8d 65 e0                           	lea r12, [rbp - 0x20]
0x44e0:    c6 45 e0 0b                           	mov byte ptr [rbp - 0x20], 0xb
0x44e4:    c6 45 e1 31                           	mov byte ptr [rbp - 0x1f], 0x31
0x44e8:    c6 45 e2 00                           	mov byte ptr [rbp - 0x1e], 0
0x44ec:    c6 45 e3 00                           	mov byte ptr [rbp - 0x1d], 0
0x44f0:    48 89 f9                              	mov rcx, rdi
0x44f3:    4c 89 e2                              	mov rdx, r12
0x44f6:    be 04 00 00 00                        	mov esi, 4
0x44fb:    bf 84 0c 00 00                        	mov edi, 0xc84
0x4500:    e8 95 05 01 00                        	call 0x14a9a <bReadPcieReg>
; data inside code section at 0x4505 -- 0x4508
0x4505:    c6 45 e0                                           |.E.             |
; function: RegisterInitialize at 0x4508 -- 0x4538
0x4508:    22 c6                                 	and al, dh
0x450a:    45 e1 00                              	loope 0x450d <RegisterInitialize+0x5>
0x450d:    c6 45 e2 7e                           	mov byte ptr [rbp - 0x1e], 0x7e
0x4511:    c6 45 e3 00                           	mov byte ptr [rbp - 0x1d], 0
0x4515:    48 89 d9                              	mov rcx, rbx
0x4518:    4c 89 e2                              	mov rdx, r12
0x451b:    be 04 00 00 00                        	mov esi, 4
0x4520:    bf 80 0c 00 00                        	mov edi, 0xc80
0x4525:    e8 70 05 01 00                        	call 0x14a9a <bReadPcieReg>
0x452a:    b8 01 00 00 00                        	mov eax, 1
0x452f:    48 83 c4 10                           	add rsp, 0x10
0x4533:    5b                                    	pop rbx
0x4534:    41 5c                                 	pop r12
0x4536:    c9                                    	leave 
0x4537:    c3                                    	ret 
; function: RegisterInitialize at 0x4538 -- 0x4670
0x4538:    55                                    	push rbp
0x4539:    48 89 e5                              	mov rbp, rsp
0x453c:    48 83 ec 20                           	sub rsp, 0x20
0x4540:    48 89 5d f0                           	mov qword ptr [rbp - 0x10], rbx
0x4544:    4c 89 65 f8                           	mov qword ptr [rbp - 8], r12
0x4548:    e8 a3 a6 03 00                        	call 0x3ebf0 <mcount>
0x454d:    48 89 fb                              	mov rbx, rdi
0x4550:    48 c7 45 e8 00 00 01 00               	mov qword ptr [rbp - 0x18], 0x10000
0x4558:    4c 8d 65 e8                           	lea r12, [rbp - 0x18]
0x455c:    48 89 f9                              	mov rcx, rdi
0x455f:    4c 89 e2                              	mov rdx, r12
0x4562:    be 04 00 00 00                        	mov esi, 4
0x4567:    bf 80 08 00 00                        	mov edi, 0x880
0x456c:    e8 29 05 01 00                        	call 0x14a9a <bReadPcieReg>
0x4571:    84 c0                                 	test al, al
0x4573:    0f 84 1e 01 00 00                     	je 0x4697
0x4579:    48 c7 45 e8 80 00 00 00               	mov qword ptr [rbp - 0x18], 0x80
0x4581:    48 89 d9                              	mov rcx, rbx
0x4584:    4c 89 e2                              	mov rdx, r12
0x4587:    be 04 00 00 00                        	mov esi, 4
0x458c:    bf 00 0a 00 00                        	mov edi, 0xa00
0x4591:    e8 04 05 01 00                        	call 0x14a9a <bReadPcieReg>
0x4596:    84 c0                                 	test al, al
0x4598:    0f 84 f9 00 00 00                     	je 0x4697
0x459e:    48 c7 45 e8 80 00 00 00               	mov qword ptr [rbp - 0x18], 0x80
0x45a6:    48 89 d9                              	mov rcx, rbx
0x45a9:    4c 89 e2                              	mov rdx, r12
0x45ac:    be 04 00 00 00                        	mov esi, 4
0x45b1:    bf 40 0b 00 00                        	mov edi, 0xb40
0x45b6:    e8 df 04 01 00                        	call 0x14a9a <bReadPcieReg>
0x45bb:    84 c0                                 	test al, al
0x45bd:    0f 84 d4 00 00 00                     	je 0x4697
0x45c3:    48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x45cb:    48 89 d9                              	mov rcx, rbx
0x45ce:    4c 89 e2                              	mov rdx, r12
0x45d1:    be 04 00 00 00                        	mov esi, 4
0x45d6:    bf 88 08 00 00                        	mov edi, 0x888
0x45db:    e8 ba 04 01 00                        	call 0x14a9a <bReadPcieReg>
0x45e0:    84 c0                                 	test al, al
0x45e2:    0f 84 af 00 00 00                     	je 0x4697
0x45e8:    48 c7 45 e8 cf 00 00 00               	mov qword ptr [rbp - 0x18], 0xcf
0x45f0:    48 89 d9                              	mov rcx, rbx
0x45f3:    4c 89 e2                              	mov rdx, r12
0x45f6:    be 04 00 00 00                        	mov esi, 4
0x45fb:    bf 94 08 00 00                        	mov edi, 0x894
0x4600:    e8 95 04 01 00                        	call 0x14a9a <bReadPcieReg>
0x4605:    84 c0                                 	test al, al
0x4607:    0f 84 8a 00 00 00                     	je 0x4697
0x460d:    48 c7 45 e8 00 80 00 00               	mov qword ptr [rbp - 0x18], 0x8000
0x4615:    48 89 d9                              	mov rcx, rbx
0x4618:    4c 89 e2                              	mov rdx, r12
0x461b:    be 04 00 00 00                        	mov esi, 4
0x4620:    bf 8c 08 00 00                        	mov edi, 0x88c
0x4625:    e8 70 04 01 00                        	call 0x14a9a <bReadPcieReg>
0x462a:    84 c0                                 	test al, al
0x462c:    74 69                                 	je 0x4697
0x462e:    48 c7 45 e8 04 10 00 00               	mov qword ptr [rbp - 0x18], 0x1004
0x4636:    48 89 d9                              	mov rcx, rbx
0x4639:    4c 89 e2                              	mov rdx, r12
0x463c:    be 04 00 00 00                        	mov esi, 4
0x4641:    bf 90 08 00 00                        	mov edi, 0x890
0x4646:    e8 4f 04 01 00                        	call 0x14a9a <bReadPcieReg>
0x464b:    84 c0                                 	test al, al
0x464d:    74 48                                 	je 0x4697
0x464f:    48 c7 45 e8 90 00 00 00               	mov qword ptr [rbp - 0x18], 0x90
0x4657:    48 89 d9                              	mov rcx, rbx
0x465a:    4c 89 e2                              	mov rdx, r12
0x465d:    be 04 00 00 00                        	mov esi, 4
0x4662:    bf 00 09 00 00                        	mov edi, 0x900
0x4667:    e8 2e 04 01 00                        	call 0x14a9a <bReadPcieReg>
0x466c:    84 c0                                 	test al, al
0x466e:    74 27                                 	je 0x4697
; data inside code section at 0x4670 -- 0x4676
0x4670:    48 c7 45 e8 c8 00                                  |H.E...          |
; function: ASV5220_ReadResponse at 0x4676 -- 0x46a6
0x4676:    32 00                                 	xor al, byte ptr [rax]
0x4678:    48 89 d9                              	mov rcx, rbx
0x467b:    4c 89 e2                              	mov rdx, r12
0x467e:    be 04 00 00 00                        	mov esi, 4
0x4683:    bf 04 09 00 00                        	mov edi, 0x904
0x4688:    e8 0d 04 01 00                        	call 0x14a9a <bReadPcieReg>
0x468d:    84 c0                                 	test al, al
0x468f:    0f 95 c0                              	setne al
0x4692:    0f b6 c0                              	movzx eax, al
0x4695:    eb 05                                 	jmp 0x469c <ASV5220_ReadResponse+0x26>
0x4697:    b8 00 00 00 00                        	mov eax, 0
0x469c:    48 8b 5d f0                           	mov rbx, qword ptr [rbp - 0x10]
0x46a0:    4c 8b 65 f8                           	mov r12, qword ptr [rbp - 8]
0x46a4:    c9                                    	leave 
0x46a5:    c3                                    	ret 
; function: ASV5220_ReadResponse at 0x46a6 -- 0x4895
0x46a6:    55                                    	push rbp
0x46a7:    48 89 e5                              	mov rbp, rsp
0x46aa:    41 57                                 	push r15
0x46ac:    41 56                                 	push r14
0x46ae:    41 55                                 	push r13
0x46b0:    41 54                                 	push r12
0x46b2:    53                                    	push rbx
0x46b3:    48 83 ec 48                           	sub rsp, 0x48
0x46b7:    e8 34 a5 03 00                        	call 0x3ebf0 <mcount>
0x46bc:    48 89 7d a0                           	mov qword ptr [rbp - 0x60], rdi
0x46c0:    89 75 9c                              	mov dword ptr [rbp - 0x64], esi
0x46c3:    48 89 55 b8                           	mov qword ptr [rbp - 0x48], rdx
0x46c7:    49 89 cd                              	mov r13, rcx
0x46ca:    85 f6                                 	test esi, esi
0x46cc:    0f 84 e2 01 00 00                     	je 0x48b4
0x46d2:    c7 45 b0 00 00 00 00                  	mov dword ptr [rbp - 0x50], 0
0x46d9:    41 bf 01 00 00 00                     	mov r15d, 1
0x46df:    4c 8d 75 c0                           	lea r14, [rbp - 0x40]
0x46e3:    44 89 7d b4                           	mov dword ptr [rbp - 0x4c], r15d
0x46e7:    48 63 45 b0                           	movsxd rax, dword ptr [rbp - 0x50]
0x46eb:    48 03 45 a0                           	add rax, qword ptr [rbp - 0x60]
0x46ef:    48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x46f3:    c7 45 c0 00 00 00 00                  	mov dword ptr [rbp - 0x40], 0
0x46fa:    41 bc 00 00 00 00                     	mov r12d, 0
0x4700:    bb 00 00 00 00                        	mov ebx, 0
0x4705:    4c 89 e9                              	mov rcx, r13
0x4708:    4c 89 f2                              	mov rdx, r14
0x470b:    be 04 00 00 00                        	mov esi, 4
0x4710:    bf 94 0c 00 00                        	mov edi, 0xc94
0x4715:    e8 b0 03 01 00                        	call 0x14aca <bTunerReset>
0x471a:    44 89 f8                              	mov eax, r15d
0x471d:    29 d8                                 	sub eax, ebx
0x471f:    83 f8 01                              	cmp eax, 1
0x4722:    75 4c                                 	jne 0x4770 <ASV5220_ReadResponse+0xca>
0x4724:    80 7d c0 00                           	cmp byte ptr [rbp - 0x40], 0
0x4728:    74 46                                 	je 0x4770 <ASV5220_ReadResponse+0xca>
0x472a:    c6 45 c0 01                           	mov byte ptr [rbp - 0x40], 1
0x472e:    c6 45 c1 00                           	mov byte ptr [rbp - 0x3f], 0
0x4732:    c6 45 c2 0f                           	mov byte ptr [rbp - 0x3e], 0xf
0x4736:    c6 45 c3 00                           	mov byte ptr [rbp - 0x3d], 0
0x473a:    4c 89 e9                              	mov rcx, r13
0x473d:    4c 89 f2                              	mov rdx, r14
0x4740:    be 04 00 00 00                        	mov esi, 4
0x4745:    bf 9c 0c 00 00                        	mov edi, 0xc9c
0x474a:    e8 4b 03 01 00                        	call 0x14a9a <bReadPcieReg>
0x474f:    48 63 d3                              	movsxd rdx, ebx
0x4752:    48 03 55 a8                           	add rdx, qword ptr [rbp - 0x58]
0x4756:    4c 89 e9                              	mov rcx, r13
0x4759:    be 04 00 00 00                        	mov esi, 4
0x475e:    bf 90 0c 00 00                        	mov edi, 0xc90
0x4763:    e8 62 03 01 00                        	call 0x14aca <bTunerReset>
0x4768:    83 c3 01                              	add ebx, 1
0x476b:    e9 07 01 00 00                        	jmp 0x4877 <ASV5220_ReadResponse+0x1d1>
0x4770:    83 f8 02                              	cmp eax, 2
0x4773:    75 4c                                 	jne 0x47c1 <ASV5220_ReadResponse+0x11b>
0x4775:    80 7d c0 01                           	cmp byte ptr [rbp - 0x40], 1
0x4779:    76 46                                 	jbe 0x47c1 <ASV5220_ReadResponse+0x11b>
0x477b:    c6 45 c0 02                           	mov byte ptr [rbp - 0x40], 2
0x477f:    c6 45 c1 00                           	mov byte ptr [rbp - 0x3f], 0
0x4783:    c6 45 c2 0f                           	mov byte ptr [rbp - 0x3e], 0xf
0x4787:    c6 45 c3 00                           	mov byte ptr [rbp - 0x3d], 0
0x478b:    4c 89 e9                              	mov rcx, r13
0x478e:    4c 89 f2                              	mov rdx, r14
0x4791:    be 04 00 00 00                        	mov esi, 4
0x4796:    bf 9c 0c 00 00                        	mov edi, 0xc9c
0x479b:    e8 fa 02 01 00                        	call 0x14a9a <bReadPcieReg>
0x47a0:    48 63 d3                              	movsxd rdx, ebx
0x47a3:    48 03 55 a8                           	add rdx, qword ptr [rbp - 0x58]
0x47a7:    4c 89 e9                              	mov rcx, r13
0x47aa:    be 04 00 00 00                        	mov esi, 4
0x47af:    bf 90 0c 00 00                        	mov edi, 0xc90
0x47b4:    e8 11 03 01 00                        	call 0x14aca <bTunerReset>
0x47b9:    83 c3 02                              	add ebx, 2
0x47bc:    e9 b6 00 00 00                        	jmp 0x4877 <ASV5220_ReadResponse+0x1d1>
0x47c1:    83 f8 03                              	cmp eax, 3
0x47c4:    75 49                                 	jne 0x480f <ASV5220_ReadResponse+0x169>
0x47c6:    80 7d c0 02                           	cmp byte ptr [rbp - 0x40], 2
0x47ca:    76 43                                 	jbe 0x480f <ASV5220_ReadResponse+0x169>
0x47cc:    c6 45 c0 03                           	mov byte ptr [rbp - 0x40], 3
0x47d0:    c6 45 c1 00                           	mov byte ptr [rbp - 0x3f], 0
0x47d4:    c6 45 c2 0f                           	mov byte ptr [rbp - 0x3e], 0xf
0x47d8:    c6 45 c3 00                           	mov byte ptr [rbp - 0x3d], 0
0x47dc:    4c 89 e9                              	mov rcx, r13
0x47df:    4c 89 f2                              	mov rdx, r14
0x47e2:    be 04 00 00 00                        	mov esi, 4
0x47e7:    bf 9c 0c 00 00                        	mov edi, 0xc9c
0x47ec:    e8 a9 02 01 00                        	call 0x14a9a <bReadPcieReg>
0x47f1:    48 63 d3                              	movsxd rdx, ebx
0x47f4:    48 03 55 a8                           	add rdx, qword ptr [rbp - 0x58]
0x47f8:    4c 89 e9                              	mov rcx, r13
0x47fb:    be 04 00 00 00                        	mov esi, 4
0x4800:    bf 90 0c 00 00                        	mov edi, 0xc90
0x4805:    e8 c0 02 01 00                        	call 0x14aca <bTunerReset>
0x480a:    83 c3 03                              	add ebx, 3
0x480d:    eb 68                                 	jmp 0x4877 <ASV5220_ReadResponse+0x1d1>
0x480f:    83 f8 03                              	cmp eax, 3
0x4812:    7e 24                                 	jle 0x4838 <ASV5220_ReadResponse+0x192>
0x4814:    80 7d c0 03                           	cmp byte ptr [rbp - 0x40], 3
0x4818:    76 1e                                 	jbe 0x4838 <ASV5220_ReadResponse+0x192>
0x481a:    48 63 d3                              	movsxd rdx, ebx
0x481d:    48 03 55 a8                           	add rdx, qword ptr [rbp - 0x58]
0x4821:    4c 89 e9                              	mov rcx, r13
0x4824:    be 04 00 00 00                        	mov esi, 4
0x4829:    bf 90 0c 00 00                        	mov edi, 0xc90
0x482e:    e8 97 02 01 00                        	call 0x14aca <bTunerReset>
0x4833:    83 c3 04                              	add ebx, 4
0x4836:    eb 3f                                 	jmp 0x4877 <ASV5220_ReadResponse+0x1d1>
0x4838:    49 83 c4 01                           	add r12, 1
0x483c:    4c 39 65 b8                           	cmp qword ptr [rbp - 0x48], r12
0x4840:    75 2d                                 	jne 0x486f <ASV5220_ReadResponse+0x1c9>
0x4842:    c6 45 c0 04                           	mov byte ptr [rbp - 0x40], 4
0x4846:    c6 45 c1 00                           	mov byte ptr [rbp - 0x3f], 0
0x484a:    c6 45 c2 0f                           	mov byte ptr [rbp - 0x3e], 0xf
0x484e:    c6 45 c3 00                           	mov byte ptr [rbp - 0x3d], 0
0x4852:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x4856:    4c 89 e9                              	mov rcx, r13
0x4859:    be 04 00 00 00                        	mov esi, 4
0x485e:    bf 9c 0c 00 00                        	mov edi, 0xc9c
0x4863:    e8 32 02 01 00                        	call 0x14a9a <bReadPcieReg>
0x4868:    b8 00 00 00 00                        	mov eax, 0
0x486d:    eb 4a                                 	jmp 0x48b9
0x486f:    8b 7d b4                              	mov edi, dword ptr [rbp - 0x4c]
0x4872:    e8 de 0b 01 00                        	call 0x15455 <DelayMilliseconds>
0x4877:    85 db                                 	test ebx, ebx
0x4879:    0f 8e 86 fe ff ff                     	jle 0x4705 <ASV5220_ReadResponse+0x5f>
0x487f:    c6 45 c0 04                           	mov byte ptr [rbp - 0x40], 4
0x4883:    c6 45 c1 00                           	mov byte ptr [rbp - 0x3f], 0
0x4887:    c6 45 c2 0f                           	mov byte ptr [rbp - 0x3e], 0xf
0x488b:    c6 45 c3 00                           	mov byte ptr [rbp - 0x3d], 0
0x488f:    4c 89 e9                              	mov rcx, r13
0x4892:    4c 89 f2                              	mov rdx, r14
; data inside code section at 0x4895 -- 0x4898
0x4895:    be 04 00                                           |...             |
; function: FUSBDTV_Wait at 0x4898 -- 0x48ab
0x4898:    00 00                                 	add byte ptr [rax], al
0x489a:    bf 9c 0c 00 00                        	mov edi, 0xc9c
0x489f:    e8 f6 01 01 00                        	call 0x14a9a <bReadPcieReg>
0x48a4:    83 45 b0 01                           	add dword ptr [rbp - 0x50], 1
0x48a8:    8b 45 b0                              	mov eax, dword ptr [rbp - 0x50]
; data inside code section at 0x48ab -- 0x48ad
0x48ab:    39 45                                              |9E              |
; function: ASV5220_InitUart at 0x48ad -- 0x48c8
0x48ad:    9c                                    	pushfq 
0x48ae:    0f 87 33 fe ff ff                     	ja 0x46e7
0x48b4:    b8 01 00 00 00                        	mov eax, 1
0x48b9:    48 83 c4 48                           	add rsp, 0x48
0x48bd:    5b                                    	pop rbx
0x48be:    41 5c                                 	pop r12
0x48c0:    41 5d                                 	pop r13
0x48c2:    41 5e                                 	pop r14
0x48c4:    41 5f                                 	pop r15
0x48c6:    c9                                    	leave 
0x48c7:    c3                                    	ret 
; function: FUSBDTV_Wait at 0x48c8 -- 0x48dd
0x48c8:    55                                    	push rbp
0x48c9:    48 89 e5                              	mov rbp, rsp
0x48cc:    e8 1f a3 03 00                        	call 0x3ebf0 <mcount>
0x48d1:    e8 7f 0b 01 00                        	call 0x15455 <DelayMilliseconds>
0x48d6:    b8 01 00 00 00                        	mov eax, 1
0x48db:    c9                                    	leave 
0x48dc:    c3                                    	ret 
; function: ASV5220_InitUart at 0x48dd -- 0x49ea
0x48dd:    55                                    	push rbp
0x48de:    48 89 e5                              	mov rbp, rsp
0x48e1:    41 54                                 	push r12
0x48e3:    53                                    	push rbx
0x48e4:    48 83 ec 10                           	sub rsp, 0x10
0x48e8:    e8 03 a3 03 00                        	call 0x3ebf0 <mcount>
0x48ed:    49 89 fc                              	mov r12, rdi
0x48f0:    48 8d 5d e0                           	lea rbx, [rbp - 0x20]
0x48f4:    c6 45 e0 17                           	mov byte ptr [rbp - 0x20], 0x17
0x48f8:    c6 45 e1 31                           	mov byte ptr [rbp - 0x1f], 0x31
0x48fc:    c6 45 e2 00                           	mov byte ptr [rbp - 0x1e], 0
0x4900:    c6 45 e3 00                           	mov byte ptr [rbp - 0x1d], 0
0x4904:    48 89 f9                              	mov rcx, rdi
0x4907:    48 89 da                              	mov rdx, rbx
0x490a:    be 04 00 00 00                        	mov esi, 4
0x490f:    bf 84 0c 00 00                        	mov edi, 0xc84
0x4914:    e8 81 01 01 00                        	call 0x14a9a <bReadPcieReg>
0x4919:    c6 45 e0 22                           	mov byte ptr [rbp - 0x20], 0x22
0x491d:    c6 45 e1 00                           	mov byte ptr [rbp - 0x1f], 0
0x4921:    c6 45 e2 76                           	mov byte ptr [rbp - 0x1e], 0x76
0x4925:    c6 45 e3 00                           	mov byte ptr [rbp - 0x1d], 0
0x4929:    4c 89 e1                              	mov rcx, r12
0x492c:    48 89 da                              	mov rdx, rbx
0x492f:    be 04 00 00 00                        	mov esi, 4
0x4934:    bf 80 0c 00 00                        	mov edi, 0xc80
0x4939:    e8 5c 01 01 00                        	call 0x14a9a <bReadPcieReg>
0x493e:    c6 45 e0 03                           	mov byte ptr [rbp - 0x20], 3
0x4942:    c6 45 e1 00                           	mov byte ptr [rbp - 0x1f], 0
0x4946:    c6 45 e2 01                           	mov byte ptr [rbp - 0x1e], 1
0x494a:    c6 45 e3 00                           	mov byte ptr [rbp - 0x1d], 0
0x494e:    4c 89 e1                              	mov rcx, r12
0x4951:    48 89 da                              	mov rdx, rbx
0x4954:    be 04 00 00 00                        	mov esi, 4
0x4959:    bf 88 0c 00 00                        	mov edi, 0xc88
0x495e:    e8 37 01 01 00                        	call 0x14a9a <bReadPcieReg>
0x4963:    c6 45 e0 00                           	mov byte ptr [rbp - 0x20], 0
0x4967:    c6 45 e1 00                           	mov byte ptr [rbp - 0x1f], 0
0x496b:    c6 45 e2 23                           	mov byte ptr [rbp - 0x1e], 0x23
0x496f:    c6 45 e3 01                           	mov byte ptr [rbp - 0x1d], 1
0x4973:    4c 89 e1                              	mov rcx, r12
0x4976:    48 89 da                              	mov rdx, rbx
0x4979:    be 04 00 00 00                        	mov esi, 4
0x497e:    bf 8c 0c 00 00                        	mov edi, 0xc8c
0x4983:    e8 12 01 01 00                        	call 0x14a9a <bReadPcieReg>
0x4988:    4c 89 e1                              	mov rcx, r12
0x498b:    48 89 da                              	mov rdx, rbx
0x498e:    be 04 00 00 00                        	mov esi, 4
0x4993:    bf 90 08 00 00                        	mov edi, 0x890
0x4998:    e8 2d 01 01 00                        	call 0x14aca <bTunerReset>
0x499d:    80 65 e0 df                           	and byte ptr [rbp - 0x20], 0xdf
0x49a1:    4c 89 e1                              	mov rcx, r12
0x49a4:    48 89 da                              	mov rdx, rbx
0x49a7:    be 04 00 00 00                        	mov esi, 4
0x49ac:    bf 90 08 00 00                        	mov edi, 0x890
0x49b1:    e8 e4 00 01 00                        	call 0x14a9a <bReadPcieReg>
0x49b6:    bb 00 00 00 00                        	mov ebx, 0
0x49bb:    bf 01 00 00 00                        	mov edi, 1
0x49c0:    e8 a0 0a 01 00                        	call 0x15465 <vUSB_Wait>
0x49c5:    83 c3 01                              	add ebx, 1
0x49c8:    83 fb 32                              	cmp ebx, 0x32
0x49cb:    75 ee                                 	jne 0x49bb <ASV5220_InitUart+0xde>
0x49cd:    80 4d e0 20                           	or byte ptr [rbp - 0x20], 0x20
0x49d1:    48 8d 5d e0                           	lea rbx, [rbp - 0x20]
0x49d5:    4c 89 e1                              	mov rcx, r12
0x49d8:    48 89 da                              	mov rdx, rbx
0x49db:    be 04 00 00 00                        	mov esi, 4
0x49e0:    bf 90 08 00 00                        	mov edi, 0x890
0x49e5:    e8 b0 00 01 00                        	call 0x14a9a <bReadPcieReg>
; data inside code section at 0x49ea -- 0x49ed
0x49ea:    c6 45 e0                                           |.E.             |
; function: ASV5220_ResetUart at 0x49ed -- 0x4a1d
0x49ed:    03 c6                                 	add eax, esi
0x49ef:    45 e1 01                              	loope 0x49f3
; data inside code section at 0x49f2 -- 0x49f3
0x49f2:    c6                                                 |.               |
0x49f3:    45 e2 01                              	loop 0x49f7
; data inside code section at 0x49f6 -- 0x49f7
0x49f6:    c6                                                 |.               |
0x49f7:    45 e3 00                              	jrcxz 0x49fa <ASV5220_ResetUart+0xd>
0x49fa:    4c 89 e1                              	mov rcx, r12
0x49fd:    48 89 da                              	mov rdx, rbx
0x4a00:    be 04 00 00 00                        	mov esi, 4
0x4a05:    bf 88 0c 00 00                        	mov edi, 0xc88
0x4a0a:    e8 8b 00 01 00                        	call 0x14a9a <bReadPcieReg>
0x4a0f:    b8 01 00 00 00                        	mov eax, 1
0x4a14:    48 83 c4 10                           	add rsp, 0x10
0x4a18:    5b                                    	pop rbx
0x4a19:    41 5c                                 	pop r12
0x4a1b:    c9                                    	leave 
0x4a1c:    c3                                    	ret 
; function: ASV5220_ResetUart at 0x4a1d -- 0x4a68
0x4a1d:    55                                    	push rbp
0x4a1e:    48 89 e5                              	mov rbp, rsp
0x4a21:    41 54                                 	push r12
0x4a23:    53                                    	push rbx
0x4a24:    48 83 ec 10                           	sub rsp, 0x10
0x4a28:    e8 c3 a1 03 00                        	call 0x3ebf0 <mcount>
0x4a2d:    49 89 fc                              	mov r12, rdi
0x4a30:    48 8d 5d e0                           	lea rbx, [rbp - 0x20]
0x4a34:    c7 03 00 00 00 00                     	mov dword ptr [rbx], 0
0x4a3a:    48 89 f9                              	mov rcx, rdi
0x4a3d:    48 89 da                              	mov rdx, rbx
0x4a40:    be 04 00 00 00                        	mov esi, 4
0x4a45:    bf 84 08 00 00                        	mov edi, 0x884
0x4a4a:    e8 7b 00 01 00                        	call 0x14aca <bTunerReset>
0x4a4f:    c6 45 e0 04                           	mov byte ptr [rbp - 0x20], 4
0x4a53:    4c 89 e1                              	mov rcx, r12
0x4a56:    48 89 da                              	mov rdx, rbx
0x4a59:    be 04 00 00 00                        	mov esi, 4
0x4a5e:    bf 84 08 00 00                        	mov edi, 0x884
0x4a63:    e8 32 00 01 00                        	call 0x14a9a <bReadPcieReg>
; data inside code section at 0x4a68 -- 0x4a69
0x4a68:    bf                                                 |.               |
; function: FUSBDTV_Cmd_I2CWriteEnc at 0x4a69 -- 0x4a97
0x4a69:    0a 00                                 	or al, byte ptr [rax]
0x4a6b:    00 00                                 	add byte ptr [rax], al
0x4a6d:    e8 f3 09 01 00                        	call 0x15465 <vUSB_Wait>
0x4a72:    c6 45 e0 00                           	mov byte ptr [rbp - 0x20], 0
0x4a76:    4c 89 e1                              	mov rcx, r12
0x4a79:    48 89 da                              	mov rdx, rbx
0x4a7c:    be 04 00 00 00                        	mov esi, 4
0x4a81:    bf 84 08 00 00                        	mov edi, 0x884
0x4a86:    e8 0f 00 01 00                        	call 0x14a9a <bReadPcieReg>
0x4a8b:    b8 01 00 00 00                        	mov eax, 1
0x4a90:    48 83 c4 10                           	add rsp, 0x10
0x4a94:    5b                                    	pop rbx
0x4a95:    41 5c                                 	pop r12
; function: mpu_i2c_write at 0x4a97 -- 0x4a99
0x4a97:    c9                                    	leave 
0x4a98:    c3                                    	ret 
; function: FUSBDTV_Cmd_I2CWriteEnc at 0x4a99 -- 0x4ac7
0x4a99:    55                                    	push rbp
0x4a9a:    48 89 e5                              	mov rbp, rsp
0x4a9d:    e8 4e a1 03 00                        	call 0x3ebf0 <mcount>
0x4aa2:    89 c8                                 	mov eax, ecx
0x4aa4:    4c 89 c1                              	mov rcx, r8
0x4aa7:    0f b6 d2                              	movzx edx, dl
0x4aaa:    40 0f b6 f6                           	movzx esi, sil
0x4aae:    41 b9 00 00 00 00                     	mov r9d, 0
0x4ab4:    44 0f b6 c0                           	movzx r8d, al
0x4ab8:    e8 44 82 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x4abd:    84 c0                                 	test al, al
0x4abf:    0f 95 c0                              	setne al
0x4ac2:    0f b6 c0                              	movzx eax, al
0x4ac5:    c9                                    	leave 
0x4ac6:    c3                                    	ret 
; function: mpu_i2c_write at 0x4ac7 -- 0x4b47
0x4ac7:    55                                    	push rbp
0x4ac8:    48 89 e5                              	mov rbp, rsp
0x4acb:    41 56                                 	push r14
0x4acd:    41 55                                 	push r13
0x4acf:    41 54                                 	push r12
0x4ad1:    53                                    	push rbx
0x4ad2:    48 83 ec 10                           	sub rsp, 0x10
0x4ad6:    e8 15 a1 03 00                        	call 0x3ebf0 <mcount>
0x4adb:    49 89 fc                              	mov r12, rdi
0x4ade:    4d 89 ce                              	mov r14, r9
0x4ae1:    44 89 c3                              	mov ebx, r8d
0x4ae4:    88 55 d0                              	mov byte ptr [rbp - 0x30], dl
0x4ae7:    88 4d d1                              	mov byte ptr [rbp - 0x2f], cl
0x4aea:    44 88 45 d2                           	mov byte ptr [rbp - 0x2e], r8b
0x4aee:    44 0f b6 ee                           	movzx r13d, sil
0x4af2:    48 8d 4d d0                           	lea rcx, [rbp - 0x30]
0x4af6:    41 b9 02 00 00 00                     	mov r9d, 2
0x4afc:    41 b8 03 00 00 00                     	mov r8d, 3
0x4b02:    ba 00 00 00 00                        	mov edx, 0
0x4b07:    44 89 ee                              	mov esi, r13d
0x4b0a:    e8 f2 81 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x4b0f:    84 c0                                 	test al, al
0x4b11:    74 7b                                 	je 0x4b8e
0x4b13:    84 db                                 	test bl, bl
0x4b15:    b8 08 00 00 00                        	mov eax, 8
0x4b1a:    0f 48 d8                              	cmovs ebx, eax
0x4b1d:    41 b9 02 00 00 00                     	mov r9d, 2
0x4b23:    44 0f b6 c3                           	movzx r8d, bl
0x4b27:    4c 89 f1                              	mov rcx, r14
0x4b2a:    ba 00 00 00 00                        	mov edx, 0
0x4b2f:    44 89 ee                              	mov esi, r13d
0x4b32:    4c 89 e7                              	mov rdi, r12
0x4b35:    e8 c7 81 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x4b3a:    84 c0                                 	test al, al
0x4b3c:    74 50                                 	je 0x4b8e
0x4b3e:    bb 00 00 00 00                        	mov ebx, 0
0x4b43:    4c 8d 75 d0                           	lea r14, [rbp - 0x30]
; data inside code section at 0x4b47 -- 0x4b70
0x4b47:    c6 45 d0 00 41 b9 02 00  00 00 41 b8 01 00 00 00   |.E..A.....A.....|
0x4b57:    4c 89 f1 ba 00 00 00 00  44 89 ee 4c 89 e7 e8 f6   |L.......D..L....|
0x4b67:    80 01 00 84 c0 74 0c 0f  b6                        |.....t...       |
; function: mpu_i2c_read at 0x4b70 -- 0x4ba0
0x4b70:    45 d0 3c 01                           	sar byte ptr [r9 + rax], 1
0x4b74:    74 0c                                 	je 0x4b82 <mpu_i2c_read+0x12>
0x4b76:    3c 02                                 	cmp al, 2
0x4b78:    74 08                                 	je 0x4b82 <mpu_i2c_read+0x12>
0x4b7a:    83 c3 01                              	add ebx, 1
0x4b7d:    80 fb 64                              	cmp bl, 0x64
0x4b80:    75 c5                                 	jne 0x4b47
0x4b82:    80 7d d0 01                           	cmp byte ptr [rbp - 0x30], 1
0x4b86:    0f 94 c0                              	sete al
0x4b89:    0f b6 c0                              	movzx eax, al
0x4b8c:    eb 05                                 	jmp 0x4b93 <mpu_i2c_read+0x23>
0x4b8e:    b8 00 00 00 00                        	mov eax, 0
0x4b93:    48 83 c4 10                           	add rsp, 0x10
0x4b97:    5b                                    	pop rbx
0x4b98:    41 5c                                 	pop r12
0x4b9a:    41 5d                                 	pop r13
0x4b9c:    41 5e                                 	pop r14
0x4b9e:    c9                                    	leave 
0x4b9f:    c3                                    	ret 
; function: mpu_i2c_read at 0x4ba0 -- 0x4ca3
0x4ba0:    55                                    	push rbp
0x4ba1:    48 89 e5                              	mov rbp, rsp
0x4ba4:    41 57                                 	push r15
0x4ba6:    41 56                                 	push r14
0x4ba8:    41 55                                 	push r13
0x4baa:    41 54                                 	push r12
0x4bac:    53                                    	push rbx
0x4bad:    48 83 ec 38                           	sub rsp, 0x38
0x4bb1:    e8 3a a0 03 00                        	call 0x3ebf0 <mcount>
0x4bb6:    49 89 fe                              	mov r14, rdi
0x4bb9:    4c 89 cb                              	mov rbx, r9
0x4bbc:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x4bc5:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x4bc9:    31 c0                                 	xor eax, eax
0x4bcb:    83 ca 01                              	or edx, 1
0x4bce:    45 84 c0                              	test r8b, r8b
0x4bd1:    41 bf 08 00 00 00                     	mov r15d, 8
0x4bd7:    45 0f 49 f8                           	cmovns r15d, r8d
0x4bdb:    44 0f b6 ee                           	movzx r13d, sil
0x4bdf:    88 55 a0                              	mov byte ptr [rbp - 0x60], dl
0x4be2:    88 4d a1                              	mov byte ptr [rbp - 0x5f], cl
0x4be5:    44 88 45 a2                           	mov byte ptr [rbp - 0x5e], r8b
0x4be9:    48 8d 4d a1                           	lea rcx, [rbp - 0x5f]
0x4bed:    0f b6 d2                              	movzx edx, dl
0x4bf0:    41 b9 00 00 00 00                     	mov r9d, 0
0x4bf6:    41 b8 02 00 00 00                     	mov r8d, 2
0x4bfc:    44 89 ee                              	mov esi, r13d
0x4bff:    e8 fd 80 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x4c04:    84 c0                                 	test al, al
0x4c06:    0f 84 99 00 00 00                     	je 0x4ca5
0x4c0c:    41 bc 00 00 00 00                     	mov r12d, 0
0x4c12:    c6 03 00                              	mov byte ptr [rbx], 0
0x4c15:    41 b9 02 00 00 00                     	mov r9d, 2
0x4c1b:    41 b8 01 00 00 00                     	mov r8d, 1
0x4c21:    48 89 d9                              	mov rcx, rbx
0x4c24:    ba 00 00 00 00                        	mov edx, 0
0x4c29:    44 89 ee                              	mov esi, r13d
0x4c2c:    4c 89 f7                              	mov rdi, r14
0x4c2f:    e8 2c 80 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x4c34:    84 c0                                 	test al, al
0x4c36:    74 0b                                 	je 0x4c43 <mpu_i2c_read+0xa3>
0x4c38:    0f b6 03                              	movzx eax, byte ptr [rbx]
0x4c3b:    3c 01                                 	cmp al, 1
0x4c3d:    74 13                                 	je 0x4c52 <mpu_i2c_read+0xb2>
0x4c3f:    3c 02                                 	cmp al, 2
0x4c41:    74 62                                 	je 0x4ca5
0x4c43:    41 83 c4 01                           	add r12d, 1
0x4c47:    41 80 fc 64                           	cmp r12b, 0x64
0x4c4b:    75 c5                                 	jne 0x4c12 <mpu_i2c_read+0x72>
0x4c4d:    80 3b 01                              	cmp byte ptr [rbx], 1
0x4c50:    75 53                                 	jne 0x4ca5
0x4c52:    45 8d 47 01                           	lea r8d, [r15 + 1]
0x4c56:    48 8d 4d a0                           	lea rcx, [rbp - 0x60]
0x4c5a:    41 b9 02 00 00 00                     	mov r9d, 2
0x4c60:    45 0f b6 c0                           	movzx r8d, r8b
0x4c64:    ba 00 00 00 00                        	mov edx, 0
0x4c69:    44 89 ee                              	mov esi, r13d
0x4c6c:    4c 89 f7                              	mov rdi, r14
0x4c6f:    e8 ec 7f 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x4c74:    84 c0                                 	test al, al
0x4c76:    74 2d                                 	je 0x4ca5
0x4c78:    45 84 ff                              	test r15b, r15b
0x4c7b:    74 2f                                 	je 0x4cac
0x4c7d:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x4c81:    48 8d 42 01                           	lea rax, [rdx + 1]
0x4c85:    41 8d 4f ff                           	lea ecx, [r15 - 1]
0x4c89:    0f b6 c9                              	movzx ecx, cl
0x4c8c:    48 8d 4c 0a 02                        	lea rcx, [rdx + rcx + 2]
0x4c91:    0f b6 10                              	movzx edx, byte ptr [rax]
0x4c94:    88 13                                 	mov byte ptr [rbx], dl
0x4c96:    48 83 c0 01                           	add rax, 1
0x4c9a:    48 83 c3 01                           	add rbx, 1
0x4c9e:    48 39 c8                              	cmp rax, rcx
0x4ca1:    75 ee                                 	jne 0x4c91
; data inside code section at 0x4ca3 -- 0x4ca4
0x4ca3:    eb                                                 |.               |
; function: FUSBDTV_Cmd_I2CReadEnc at 0x4ca4 -- 0x4cd2
; function: writeStorageBuff at 0x4cd2 -- 0x4cd4
0x4cd2:    c9                                    	leave 
0x4cd3:    c3                                    	ret 
; function: FUSBDTV_Cmd_I2CReadEnc at 0x4cd4 -- 0x4d02
0x4cd4:    55                                    	push rbp
0x4cd5:    48 89 e5                              	mov rbp, rsp
0x4cd8:    e8 13 9f 03 00                        	call 0x3ebf0 <mcount>
0x4cdd:    89 c8                                 	mov eax, ecx
0x4cdf:    4c 89 c1                              	mov rcx, r8
0x4ce2:    0f b6 d2                              	movzx edx, dl
0x4ce5:    40 0f b6 f6                           	movzx esi, sil
0x4ce9:    41 b9 00 00 00 00                     	mov r9d, 0
0x4cef:    44 0f b6 c0                           	movzx r8d, al
0x4cf3:    e8 68 7f 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x4cf8:    84 c0                                 	test al, al
0x4cfa:    0f 95 c0                              	setne al
0x4cfd:    0f b6 c0                              	movzx eax, al
0x4d00:    c9                                    	leave 
0x4d01:    c3                                    	ret 
; function: writeStorageBuff at 0x4d02 -- 0x500c
0x4d02:    55                                    	push rbp
0x4d03:    48 89 e5                              	mov rbp, rsp
0x4d06:    41 57                                 	push r15
0x4d08:    41 56                                 	push r14
0x4d0a:    41 55                                 	push r13
0x4d0c:    41 54                                 	push r12
0x4d0e:    53                                    	push rbx
0x4d0f:    48 83 ec 18                           	sub rsp, 0x18
0x4d13:    e8 d8 9e 03 00                        	call 0x3ebf0 <mcount>
0x4d18:    49 89 ff                              	mov r15, rdi
0x4d1b:    48 89 f3                              	mov rbx, rsi
0x4d1e:    49 89 d5                              	mov r13, rdx
0x4d21:    48 85 f6                              	test rsi, rsi
0x4d24:    0f 84 ce 02 00 00                     	je 0x4ff8 <writeStorageBuff+0x2f6>
0x4d2a:    48 85 ff                              	test rdi, rdi
0x4d2d:    0f 84 c5 02 00 00                     	je 0x4ff8 <writeStorageBuff+0x2f6>
0x4d33:    b8 01 00 00 00                        	mov eax, 1
0x4d38:    80 be b8 00 00 00 00                  	cmp byte ptr [rsi + 0xb8], 0
0x4d3f:    0f 84 b8 02 00 00                     	je 0x4ffd <writeStorageBuff+0x2fb>
0x4d45:    48 8b 06                              	mov rax, qword ptr [rsi]
0x4d48:    48 01 96 c8 00 00 00                  	add qword ptr [rsi + 0xc8], rdx
0x4d4f:    4c 8b a6 e8 00 00 00                  	mov r12, qword ptr [rsi + 0xe8]
0x4d56:    4c 8b b6 38 01 00 00                  	mov r14, qword ptr [rsi + 0x138]
0x4d5d:    48 83 fa 10                           	cmp rdx, 0x10
0x4d61:    76 3a                                 	jbe 0x4d9d <writeStorageBuff+0x9b>
0x4d63:    80 b8 af 4f 00 00 00                  	cmp byte ptr [rax + 0x4faf], 0
0x4d6a:    75 31                                 	jne 0x4d9d <writeStorageBuff+0x9b>
0x4d6c:    80 b8 b0 4f 00 00 00                  	cmp byte ptr [rax + 0x4fb0], 0
0x4d73:    75 28                                 	jne 0x4d9d <writeStorageBuff+0x9b>
0x4d75:    0f b6 57 0c                           	movzx edx, byte ptr [rdi + 0xc]
0x4d79:    88 90 af 4f 00 00                     	mov byte ptr [rax + 0x4faf], dl
0x4d7f:    0f b6 57 0d                           	movzx edx, byte ptr [rdi + 0xd]
0x4d83:    88 90 b0 4f 00 00                     	mov byte ptr [rax + 0x4fb0], dl
0x4d89:    0f b6 57 0e                           	movzx edx, byte ptr [rdi + 0xe]
0x4d8d:    88 90 b1 4f 00 00                     	mov byte ptr [rax + 0x4fb1], dl
0x4d93:    0f b6 57 0f                           	movzx edx, byte ptr [rdi + 0xf]
0x4d97:    88 90 b2 4f 00 00                     	mov byte ptr [rax + 0x4fb2], dl
0x4d9d:    83 bb 10 01 00 00 00                  	cmp dword ptr [rbx + 0x110], 0
0x4da4:    75 1d                                 	jne 0x4dc3 <writeStorageBuff+0xc1>
0x4da6:    b8 00 00 00 00                        	mov eax, 0
0x4dab:    b9 00 00 00 00                        	mov ecx, 0
0x4db0:    48 83 bb 50 01 00 00 00               	cmp qword ptr [rbx + 0x150], 0
0x4db8:    0f 85 d7 00 00 00                     	jne 0x4e95 <writeStorageBuff+0x193>
0x4dbe:    e9 61 01 00 00                        	jmp 0x4f24 <writeStorageBuff+0x222>
0x4dc3:    48 8b bb 48 01 00 00                  	mov rdi, qword ptr [rbx + 0x148]
0x4dca:    49 8d 44 3d 00                        	lea rax, [r13 + rdi]
0x4dcf:    49 39 c6                              	cmp r14, rax
0x4dd2:    0f 83 34 02 00 00                     	jae 0x500c <writeStorageBuff+0x309>
0x4dd8:    4c 29 f0                              	sub rax, r14
0x4ddb:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x4ddf:    4d 89 ec                              	mov r12, r13
0x4de2:    49 29 c4                              	sub r12, rax
0x4de5:    48 03 bb 30 01 00 00                  	add rdi, qword ptr [rbx + 0x130]
0x4dec:    4c 89 e2                              	mov rdx, r12
0x4def:    4c 89 fe                              	mov rsi, r15
0x4df2:    e8 71 9d 03 00                        	call 0x3eb68 <memcpy>
0x4df7:    48 83 7d c8 00                        	cmp qword ptr [rbp - 0x38], 0
0x4dfc:    75 1c                                 	jne 0x4e1a <writeStorageBuff+0x118>
0x4dfe:    4c 03 a3 48 01 00 00                  	add r12, qword ptr [rbx + 0x148]
0x4e05:    4d 39 e6                              	cmp r14, r12
0x4e08:    b8 00 00 00 00                        	mov eax, 0
0x4e0d:    4c 0f 44 e0                           	cmove r12, rax
0x4e11:    4c 89 a3 48 01 00 00                  	mov qword ptr [rbx + 0x148], r12
0x4e18:    eb 1f                                 	jmp 0x4e39 <writeStorageBuff+0x137>
0x4e1a:    48 8b bb 30 01 00 00                  	mov rdi, qword ptr [rbx + 0x130]
0x4e21:    4b 8d 34 27                           	lea rsi, [r15 + r12]
0x4e25:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x4e29:    e8 3a 9d 03 00                        	call 0x3eb68 <memcpy>
0x4e2e:    48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x4e32:    48 89 83 48 01 00 00                  	mov qword ptr [rbx + 0x148], rax
0x4e39:    48 8b 83 50 01 00 00                  	mov rax, qword ptr [rbx + 0x150]
0x4e40:    4c 39 f0                              	cmp rax, r14
0x4e43:    75 18                                 	jne 0x4e5d <writeStorageBuff+0x15b>
0x4e45:    48 8b 83 48 01 00 00                  	mov rax, qword ptr [rbx + 0x148]
0x4e4c:    48 89 83 40 01 00 00                  	mov qword ptr [rbx + 0x140], rax
0x4e53:    b8 01 00 00 00                        	mov eax, 1
0x4e58:    e9 a0 01 00 00                        	jmp 0x4ffd <writeStorageBuff+0x2fb>
0x4e5d:    49 01 c5                              	add r13, rax
0x4e60:    4d 39 ee                              	cmp r14, r13
0x4e63:    73 1f                                 	jae 0x4e84 <writeStorageBuff+0x182>
0x4e65:    48 8b 83 48 01 00 00                  	mov rax, qword ptr [rbx + 0x148]
0x4e6c:    48 89 83 40 01 00 00                  	mov qword ptr [rbx + 0x140], rax
0x4e73:    4c 89 b3 50 01 00 00                  	mov qword ptr [rbx + 0x150], r14
0x4e7a:    b8 01 00 00 00                        	mov eax, 1
0x4e7f:    e9 79 01 00 00                        	jmp 0x4ffd <writeStorageBuff+0x2fb>
0x4e84:    4c 89 ab 50 01 00 00                  	mov qword ptr [rbx + 0x150], r13
0x4e8b:    b8 01 00 00 00                        	mov eax, 1
0x4e90:    e9 68 01 00 00                        	jmp 0x4ffd <writeStorageBuff+0x2fb>
0x4e95:    48 8b b3 e0 00 00 00                  	mov rsi, qword ptr [rbx + 0xe0]
0x4e9c:    48 8b 93 20 01 00 00                  	mov rdx, qword ptr [rbx + 0x120]
0x4ea3:    4c 8b 83 30 01 00 00                  	mov r8, qword ptr [rbx + 0x130]
0x4eaa:    48 8b bb 40 01 00 00                  	mov rdi, qword ptr [rbx + 0x140]
0x4eb1:    41 0f b6 3c 38                        	movzx edi, byte ptr [r8 + rdi]
0x4eb6:    40 88 3c 16                           	mov byte ptr [rsi + rdx], dil
0x4eba:    48 8b 93 40 01 00 00                  	mov rdx, qword ptr [rbx + 0x140]
0x4ec1:    48 83 c2 01                           	add rdx, 1
0x4ec5:    49 39 d6                              	cmp r14, rdx
0x4ec8:    48 0f 44 d1                           	cmove rdx, rcx
0x4ecc:    48 89 93 40 01 00 00                  	mov qword ptr [rbx + 0x140], rdx
0x4ed3:    48 8b 93 20 01 00 00                  	mov rdx, qword ptr [rbx + 0x120]
0x4eda:    48 83 c2 01                           	add rdx, 1
0x4ede:    49 39 d4                              	cmp r12, rdx
0x4ee1:    48 0f 44 d1                           	cmove rdx, rcx
0x4ee5:    48 89 93 20 01 00 00                  	mov qword ptr [rbx + 0x120], rdx
0x4eec:    48 8b 93 28 01 00 00                  	mov rdx, qword ptr [rbx + 0x128]
0x4ef3:    49 39 d4                              	cmp r12, rdx
0x4ef6:    76 0d                                 	jbe 0x4f05 <writeStorageBuff+0x203>
0x4ef8:    48 83 c2 01                           	add rdx, 1
0x4efc:    48 89 93 28 01 00 00                  	mov qword ptr [rbx + 0x128], rdx
0x4f03:    eb 0e                                 	jmp 0x4f13 <writeStorageBuff+0x211>
0x4f05:    48 8b 93 20 01 00 00                  	mov rdx, qword ptr [rbx + 0x120]
0x4f0c:    48 89 93 18 01 00 00                  	mov qword ptr [rbx + 0x118], rdx
0x4f13:    48 83 c0 01                           	add rax, 1
0x4f17:    48 39 83 50 01 00 00                  	cmp qword ptr [rbx + 0x150], rax
0x4f1e:    0f 87 71 ff ff ff                     	ja 0x4e95 <writeStorageBuff+0x193>
0x4f24:    48 c7 83 50 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x150], 0
0x4f2f:    48 8b bb 20 01 00 00                  	mov rdi, qword ptr [rbx + 0x120]
0x4f36:    49 8d 44 3d 00                        	lea rax, [r13 + rdi]
0x4f3b:    49 39 c4                              	cmp r12, rax
0x4f3e:    0f 83 e2 00 00 00                     	jae 0x5026
0x4f44:    4c 29 e0                              	sub rax, r12
0x4f47:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x4f4b:    4d 89 ee                              	mov r14, r13
0x4f4e:    49 29 c6                              	sub r14, rax
0x4f51:    48 03 bb e0 00 00 00                  	add rdi, qword ptr [rbx + 0xe0]
0x4f58:    4c 89 f2                              	mov rdx, r14
0x4f5b:    4c 89 fe                              	mov rsi, r15
0x4f5e:    e8 05 9c 03 00                        	call 0x3eb68 <memcpy>
0x4f63:    48 83 7d c8 00                        	cmp qword ptr [rbp - 0x38], 0
0x4f68:    75 1c                                 	jne 0x4f86 <writeStorageBuff+0x284>
0x4f6a:    4c 03 b3 20 01 00 00                  	add r14, qword ptr [rbx + 0x120]
0x4f71:    4d 39 f4                              	cmp r12, r14
0x4f74:    b8 00 00 00 00                        	mov eax, 0
0x4f79:    4c 0f 44 f0                           	cmove r14, rax
0x4f7d:    4c 89 b3 20 01 00 00                  	mov qword ptr [rbx + 0x120], r14
0x4f84:    eb 1f                                 	jmp 0x4fa5 <writeStorageBuff+0x2a3>
0x4f86:    48 8b bb e0 00 00 00                  	mov rdi, qword ptr [rbx + 0xe0]
0x4f8d:    4b 8d 34 37                           	lea rsi, [r15 + r14]
0x4f91:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x4f95:    e8 ce 9b 03 00                        	call 0x3eb68 <memcpy>
0x4f9a:    48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x4f9e:    48 89 83 20 01 00 00                  	mov qword ptr [rbx + 0x120], rax
0x4fa5:    48 8b 83 28 01 00 00                  	mov rax, qword ptr [rbx + 0x128]
0x4fac:    4c 39 e0                              	cmp rax, r12
0x4faf:    75 15                                 	jne 0x4fc6 <writeStorageBuff+0x2c4>
0x4fb1:    48 8b 83 20 01 00 00                  	mov rax, qword ptr [rbx + 0x120]
0x4fb8:    48 89 83 18 01 00 00                  	mov qword ptr [rbx + 0x118], rax
0x4fbf:    b8 01 00 00 00                        	mov eax, 1
0x4fc4:    eb 37                                 	jmp 0x4ffd <writeStorageBuff+0x2fb>
0x4fc6:    49 01 c5                              	add r13, rax
0x4fc9:    4d 39 ec                              	cmp r12, r13
0x4fcc:    73 1c                                 	jae 0x4fea <writeStorageBuff+0x2e8>
0x4fce:    48 8b 83 20 01 00 00                  	mov rax, qword ptr [rbx + 0x120]
0x4fd5:    48 89 83 18 01 00 00                  	mov qword ptr [rbx + 0x118], rax
0x4fdc:    4c 89 a3 28 01 00 00                  	mov qword ptr [rbx + 0x128], r12
0x4fe3:    b8 01 00 00 00                        	mov eax, 1
0x4fe8:    eb 13                                 	jmp 0x4ffd <writeStorageBuff+0x2fb>
0x4fea:    4c 89 ab 28 01 00 00                  	mov qword ptr [rbx + 0x128], r13
0x4ff1:    b8 01 00 00 00                        	mov eax, 1
0x4ff6:    eb 05                                 	jmp 0x4ffd <writeStorageBuff+0x2fb>
0x4ff8:    b8 00 00 00 00                        	mov eax, 0
0x4ffd:    48 83 c4 18                           	add rsp, 0x18
0x5001:    5b                                    	pop rbx
0x5002:    41 5c                                 	pop r12
0x5004:    41 5d                                 	pop r13
0x5006:    41 5e                                 	pop r14
0x5008:    41 5f                                 	pop r15
0x500a:    c9                                    	leave 
0x500b:    c3                                    	ret 
; data inside code section at 0x500c -- 0x5010
0x500c:    48 03 bb 30                                        |H..0            |
; function: iGetDMAStreamData at 0x5010 -- 0x5040
0x5010:    01 00                                 	add dword ptr [rax], eax
0x5012:    00 4c 89 ea                           	add byte ptr [rcx + rcx*4 - 0x16], cl
0x5016:    4c 89 fe                              	mov rsi, r15
0x5019:    e8 4a 9b 03 00                        	call 0x3eb68 <memcpy>
0x501e:    4d 89 ec                              	mov r12, r13
0x5021:    e9 d8 fd ff ff                        	jmp 0x4dfe
0x5026:    48 03 bb e0 00 00 00                  	add rdi, qword ptr [rbx + 0xe0]
0x502d:    4c 89 ea                              	mov rdx, r13
0x5030:    4c 89 fe                              	mov rsi, r15
0x5033:    e8 30 9b 03 00                        	call 0x3eb68 <memcpy>
0x5038:    4d 89 ee                              	mov r14, r13
0x503b:    e9 2a ff ff ff                        	jmp 0x4f6a
; function: iGetDMAStreamData at 0x5040 -- 0x5146
0x5040:    55                                    	push rbp
0x5041:    48 89 e5                              	mov rbp, rsp
0x5044:    48 83 ec 20                           	sub rsp, 0x20
0x5048:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0x504c:    4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x5051:    4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x5056:    4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x505b:    e8 90 9b 03 00                        	call 0x3ebf0 <mcount>
0x5060:    49 89 d5                              	mov r13, rdx
0x5063:    49 89 cc                              	mov r12, rcx
0x5066:    40 84 f6                              	test sil, sil
0x5069:    75 09                                 	jne 0x5074 <iGetDMAStreamData+0x34>
0x506b:    48 8b 9f d0 04 00 00                  	mov rbx, qword ptr [rdi + 0x4d0]
0x5072:    eb 07                                 	jmp 0x507b <iGetDMAStreamData+0x3b>
0x5074:    48 8b 9f c8 04 00 00                  	mov rbx, qword ptr [rdi + 0x4c8]
0x507b:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0x5080:    48 85 db                              	test rbx, rbx
0x5083:    0f 84 d8 00 00 00                     	je 0x5161
0x5089:    48 8b 83 28 01 00 00                  	mov rax, qword ptr [rbx + 0x128]
0x5090:    48 85 c0                              	test rax, rax
0x5093:    0f 84 c3 00 00 00                     	je 0x515c
0x5099:    80 3f 01                              	cmp byte ptr [rdi], 1
0x509c:    0f 84 ba 00 00 00                     	je 0x515c
0x50a2:    4c 39 e0                              	cmp rax, r12
0x50a5:    0f 82 b1 00 00 00                     	jb 0x515c
0x50ab:    c7 83 10 01 00 00 02 00 00 00         	mov dword ptr [rbx + 0x110], 2
0x50b5:    48 8b b3 18 01 00 00                  	mov rsi, qword ptr [rbx + 0x118]
0x50bc:    4c 8b b3 e8 00 00 00                  	mov r14, qword ptr [rbx + 0xe8]
0x50c3:    49 8d 04 34                           	lea rax, [r12 + rsi]
0x50c7:    4c 39 f0                              	cmp rax, r14
0x50ca:    76 46                                 	jbe 0x5112 <iGetDMAStreamData+0xd2>
0x50cc:    49 29 f6                              	sub r14, rsi
0x50cf:    48 03 b3 e0 00 00 00                  	add rsi, qword ptr [rbx + 0xe0]
0x50d6:    4c 89 f2                              	mov rdx, r14
0x50d9:    4c 89 ef                              	mov rdi, r13
0x50dc:    e8 87 9a 03 00                        	call 0x3eb68 <memcpy>
0x50e1:    4b 8d 7c 35 00                        	lea rdi, [r13 + r14]
0x50e6:    4c 89 e2                              	mov rdx, r12
0x50e9:    4c 29 f2                              	sub rdx, r14
0x50ec:    48 8b b3 e0 00 00 00                  	mov rsi, qword ptr [rbx + 0xe0]
0x50f3:    e8 70 9a 03 00                        	call 0x3eb68 <memcpy>
0x50f8:    4c 89 e0                              	mov rax, r12
0x50fb:    48 03 83 18 01 00 00                  	add rax, qword ptr [rbx + 0x118]
0x5102:    48 2b 83 e8 00 00 00                  	sub rax, qword ptr [rbx + 0xe8]
0x5109:    48 89 83 18 01 00 00                  	mov qword ptr [rbx + 0x118], rax
0x5110:    eb 19                                 	jmp 0x512b <iGetDMAStreamData+0xeb>
0x5112:    48 03 b3 e0 00 00 00                  	add rsi, qword ptr [rbx + 0xe0]
0x5119:    4c 89 e2                              	mov rdx, r12
0x511c:    4c 89 ef                              	mov rdi, r13
0x511f:    e8 44 9a 03 00                        	call 0x3eb68 <memcpy>
0x5124:    4c 01 a3 18 01 00 00                  	add qword ptr [rbx + 0x118], r12
0x512b:    48 8b 83 e8 00 00 00                  	mov rax, qword ptr [rbx + 0xe8]
0x5132:    48 39 83 18 01 00 00                  	cmp qword ptr [rbx + 0x118], rax
0x5139:    75 0b                                 	jne 0x5146 <iGetStreamData>
0x513b:    48 c7 83 18 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x118], 0
; function: iGetStreamData at 0x5146 -- 0x5176
0x5146:    4c 29 a3 28 01 00 00                  	sub qword ptr [rbx + 0x128], r12
0x514d:    c7 83 10 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x110], 0
0x5157:    44 89 e0                              	mov eax, r12d
0x515a:    eb 05                                 	jmp 0x5161 <iGetStreamData+0x1b>
0x515c:    b8 00 00 00 00                        	mov eax, 0
0x5161:    48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x5165:    4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x516a:    4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x516f:    4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x5174:    c9                                    	leave 
0x5175:    c3                                    	ret 
; function: iGetStreamData at 0x5176 -- 0x526a
0x5176:    55                                    	push rbp
0x5177:    48 89 e5                              	mov rbp, rsp
0x517a:    48 83 ec 20                           	sub rsp, 0x20
0x517e:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0x5182:    4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x5187:    4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x518c:    4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x5191:    e8 5a 9a 03 00                        	call 0x3ebf0 <mcount>
0x5196:    49 89 d5                              	mov r13, rdx
0x5199:    49 89 cc                              	mov r12, rcx
0x519c:    40 0f b6 f6                           	movzx esi, sil
0x51a0:    48 8b 9c f7 88 04 00 00               	mov rbx, qword ptr [rdi + rsi*8 + 0x488]
0x51a8:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0x51ad:    48 85 db                              	test rbx, rbx
0x51b0:    0f 84 cf 00 00 00                     	je 0x5285
0x51b6:    48 8b 83 28 01 00 00                  	mov rax, qword ptr [rbx + 0x128]
0x51bd:    48 85 c0                              	test rax, rax
0x51c0:    0f 84 ba 00 00 00                     	je 0x5280
0x51c6:    48 39 c8                              	cmp rax, rcx
0x51c9:    0f 82 b1 00 00 00                     	jb 0x5280
0x51cf:    c7 83 10 01 00 00 02 00 00 00         	mov dword ptr [rbx + 0x110], 2
0x51d9:    48 8b b3 18 01 00 00                  	mov rsi, qword ptr [rbx + 0x118]
0x51e0:    4c 8b b3 e8 00 00 00                  	mov r14, qword ptr [rbx + 0xe8]
0x51e7:    48 8d 04 31                           	lea rax, [rcx + rsi]
0x51eb:    4c 39 f0                              	cmp rax, r14
0x51ee:    76 46                                 	jbe 0x5236 <iGetStreamData+0xc0>
0x51f0:    49 29 f6                              	sub r14, rsi
0x51f3:    48 03 b3 e0 00 00 00                  	add rsi, qword ptr [rbx + 0xe0]
0x51fa:    4c 89 f2                              	mov rdx, r14
0x51fd:    4c 89 ef                              	mov rdi, r13
0x5200:    e8 63 99 03 00                        	call 0x3eb68 <memcpy>
0x5205:    4b 8d 7c 35 00                        	lea rdi, [r13 + r14]
0x520a:    4c 89 e2                              	mov rdx, r12
0x520d:    4c 29 f2                              	sub rdx, r14
0x5210:    48 8b b3 e0 00 00 00                  	mov rsi, qword ptr [rbx + 0xe0]
0x5217:    e8 4c 99 03 00                        	call 0x3eb68 <memcpy>
0x521c:    4c 89 e0                              	mov rax, r12
0x521f:    48 03 83 18 01 00 00                  	add rax, qword ptr [rbx + 0x118]
0x5226:    48 2b 83 e8 00 00 00                  	sub rax, qword ptr [rbx + 0xe8]
0x522d:    48 89 83 18 01 00 00                  	mov qword ptr [rbx + 0x118], rax
0x5234:    eb 19                                 	jmp 0x524f <iGetStreamData+0xd9>
0x5236:    48 03 b3 e0 00 00 00                  	add rsi, qword ptr [rbx + 0xe0]
0x523d:    48 89 ca                              	mov rdx, rcx
0x5240:    4c 89 ef                              	mov rdi, r13
0x5243:    e8 20 99 03 00                        	call 0x3eb68 <memcpy>
0x5248:    4c 01 a3 18 01 00 00                  	add qword ptr [rbx + 0x118], r12
0x524f:    48 8b 83 e8 00 00 00                  	mov rax, qword ptr [rbx + 0xe8]
0x5256:    48 39 83 18 01 00 00                  	cmp qword ptr [rbx + 0x118], rax
0x525d:    75 0b                                 	jne 0x526a <DispatchByRuleTable>
0x525f:    48 c7 83 18 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x118], 0
; function: DispatchByRuleTable at 0x526a -- 0x529a
0x526a:    4c 29 a3 28 01 00 00                  	sub qword ptr [rbx + 0x128], r12
0x5271:    c7 83 10 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x110], 0
0x527b:    44 89 e0                              	mov eax, r12d
0x527e:    eb 05                                 	jmp 0x5285 <DispatchByRuleTable+0x1b>
0x5280:    b8 00 00 00 00                        	mov eax, 0
0x5285:    48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x5289:    4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x528e:    4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x5293:    4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x5298:    c9                                    	leave 
0x5299:    c3                                    	ret 
; function: DispatchByRuleTable at 0x529a -- 0x5311
0x529a:    55                                    	push rbp
0x529b:    48 89 e5                              	mov rbp, rsp
0x529e:    41 57                                 	push r15
0x52a0:    41 56                                 	push r14
0x52a2:    41 55                                 	push r13
0x52a4:    41 54                                 	push r12
0x52a6:    53                                    	push rbx
0x52a7:    48 83 ec 38                           	sub rsp, 0x38
0x52ab:    e8 40 99 03 00                        	call 0x3ebf0 <mcount>
0x52b0:    48 89 75 c0                           	mov qword ptr [rbp - 0x40], rsi
0x52b4:    49 89 d7                              	mov r15, rdx
0x52b7:    48 89 ca                              	mov rdx, rcx
0x52ba:    48 c1 ea 02                           	shr rdx, 2
0x52be:    48 bb 99 5c 41 4c ae 20 26 57         	movabs rbx, 0x572620ae4c415c99
0x52c8:    48 89 d0                              	mov rax, rdx
0x52cb:    48 f7 e3                              	mul rbx
0x52ce:    48 c1 ea 04                           	shr rdx, 4
0x52d2:    48 89 55 c8                           	mov qword ptr [rbp - 0x38], rdx
0x52d6:    48 85 d2                              	test rdx, rdx
0x52d9:    0f 84 71 01 00 00                     	je 0x5450
0x52df:    49 8d 87 64 60 00 00                  	lea rax, [r15 + 0x6064]
0x52e6:    48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0x52ea:    bb 00 00 00 00                        	mov ebx, 0
0x52ef:    41 bc 00 00 00 00                     	mov r12d, 0
0x52f5:    40 0f b6 ff                           	movzx edi, dil
0x52f9:    89 7d b4                              	mov dword ptr [rbp - 0x4c], edi
0x52fc:    b8 00 00 00 00                        	mov eax, 0
0x5301:    48 83 c0 04                           	add rax, 4
0x5305:    48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x5309:    b0 bc                                 	mov al, 0xbc
0x530b:    83 e8 01                              	sub eax, 1
0x530e:    89 45 a4                              	mov dword ptr [rbp - 0x5c], eax
; data inside code section at 0x5311 -- 0x533f
0x5311:    41 89 de 4c 03 75 c0 b9  08 00 00 00 48 8b 55 b8   |A..L.u......H.U.|
0x5321:    4c 89 f6 8b 7d b4 e8 da  ee ff ff 41 89 c5 83 f8   |L...}......A....|
0x5331:    07 0f 87 01 01 00 00 41  0f b6 56 01 c1 e2         |.......A..V...  |
; function: function_533f at 0x533f -- 0x5349
0x533f:    08 41 0f                              	or byte ptr [rcx + 0xf], al
0x5342:    b6 46                                 	mov dh, 0x46
0x5344:    02 09                                 	add cl, byte ptr [rcx]
0x5346:    c2 0f b7                              	ret 0xb70f
; data inside code section at 0x5349 -- 0x53b3
0x5349:    d2 41 0f b6 f5 4c 89 ff  e8 4a f9 00 00 85 c0 0f   |.A...L...J......|
0x5359:    84 db 00 00 00 49 63 c5  49 8b bc c7 e8 60 00 00   |.....Ic.I....`..|
0x5369:    49 03 bc c7 28 61 00 00  4c 89 f6 b8 bc 00 00 00   |I...(a..L.......|
0x5379:    40 f6 c7 01 74 11 41 0f  b6 06 88 07 48 83 c7 01   |@...t.A.....H...|
0x5389:    48 83 c6 01 8b 45 a4 40  f6 c7 02 74 11 0f b7 16   |H....E.@...t....|
0x5399:    66 89 17 48 83 c7 02 48  83 c6 02 83 e8 02 40 f6   |f..H...H......@.|
0x53a9:    c7 04 74 0f 8b 16 89 17  48 83                     |..t.....H.      |
; function: function_53b3 at 0x53b3 -- 0x53c4
0x53b3:    c7 04 48 83 c6 04 83                  	mov dword ptr [rax + rcx*2], 0x8304c683
0x53ba:    e8 04 89 c1 c1                        	call 0xffffffffc1c1dcc3 <unknown_ffffffffc1c1dcc3>
0x53bf:    e9 03 89 c9 f3                        	jmp 0xfffffffff3c9dcc7 <function_fffffffff3c9dcc7>
; data inside code section at 0x53c4 -- 0x53e5
0x53c4:    48 a5 ba 00 00 00 00 a8  04 74 08 8b 16 89 17 48   |H........t.....H|
0x53d4:    8b 55 a8 a8 02 74 0c 0f  b7 0c 16 66 89 0c 17 48   |.U...t.....f...H|
0x53e4:    83                                                 |.               |
; function: function_53e5 at 0x53e5 -- 0x53e8
0x53e5:    c2 02 a8                              	ret 0xa802
; data inside code section at 0x53e8 -- 0x53ff
0x53e8:    01 74 07 0f b6 04 16 88  04 17 49 63 c5 48 05 24   |.t........Ic.H.$|
0x53f8:    0c 00 00 49 8b 54 c7                               |...I.T.         |
; function: function_53ff at 0x53ff -- 0x5405
0x53ff:    08 48 81                              	or byte ptr [rax - 0x7f], cl
0x5402:    c2 bc 00                              	ret 0xbc
; data inside code section at 0x5405 -- 0x5434
0x5405:    00 00 49 89 54 c7 08 48  81 fa 1f e5 00 00 76 24   |..I.T..H......v$|
0x5415:    4d 63 ed 4b c7 84 ef 28  61 00 00 00 00 00 00 4b   |Mc.K...(a......K|
0x5425:    8b b4 ef 88 04 00 00 4b  8b bc ef e8 60 00 00      |.......K....`.. |
; function: vCleanStreamBuffer at 0x5434 -- 0x5464
0x5434:    e8 c9 f8 ff ff                        	call 0x4d02 <writeStorageBuff>
0x5439:    41 83 c4 01                           	add r12d, 1
0x543d:    81 c3 bc 00 00 00                     	add ebx, 0xbc
0x5443:    44 89 e0                              	mov eax, r12d
0x5446:    48 3b 45 c8                           	cmp rax, qword ptr [rbp - 0x38]
0x544a:    0f 82 c1 fe ff ff                     	jb 0x5311
0x5450:    b8 01 00 00 00                        	mov eax, 1
0x5455:    48 83 c4 38                           	add rsp, 0x38
0x5459:    5b                                    	pop rbx
0x545a:    41 5c                                 	pop r12
0x545c:    41 5d                                 	pop r13
0x545e:    41 5e                                 	pop r14
0x5460:    41 5f                                 	pop r15
0x5462:    c9                                    	leave 
0x5463:    c3                                    	ret 
; function: vCleanStreamBuffer at 0x5464 -- 0x54af
0x5464:    55                                    	push rbp
0x5465:    48 89 e5                              	mov rbp, rsp
0x5468:    48 83 ec 10                           	sub rsp, 0x10
0x546c:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0x5470:    4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x5475:    e8 76 97 03 00                        	call 0x3ebf0 <mcount>
0x547a:    40 0f b6 f6                           	movzx esi, sil
0x547e:    48 8b 9c f7 88 04 00 00               	mov rbx, qword ptr [rdi + rsi*8 + 0x488]
0x5486:    48 85 db                              	test rbx, rbx
0x5489:    74 4c                                 	je 0x54d7
0x548b:    48 83 bb 28 01 00 00 00               	cmp qword ptr [rbx + 0x128], 0
0x5493:    74 42                                 	je 0x54d7
0x5495:    4c 8d a7 f8 00 00 00                  	lea r12, [rdi + 0xf8]
0x549c:    4c 89 e7                              	mov rdi, r12
0x549f:    e8 34 97 03 00                        	call 0x3ebd8 <down>
0x54a4:    48 c7 83 20 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x120], 0
; data inside code section at 0x54af -- 0x54b2
0x54af:    48 c7 83                                           |H..             |
; function: FUSBDTV_Cmd_MPU_I2CWrite at 0x54b2 -- 0x54e2
0x54b2:    18 01                                 	sbb byte ptr [rcx], al
0x54b4:    00 00                                 	add byte ptr [rax], al
0x54b6:    00 00                                 	add byte ptr [rax], al
0x54b8:    00 00                                 	add byte ptr [rax], al
0x54ba:    48 c7 83 28 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x128], 0
0x54c5:    c7 83 10 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x110], 0
0x54cf:    4c 89 e7                              	mov rdi, r12
0x54d2:    e8 81 96 03 00                        	call 0x3eb58 <up>
0x54d7:    48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x54db:    4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x54e0:    c9                                    	leave 
0x54e1:    c3                                    	ret 
; function: FUSBDTV_Cmd_MPU_I2CWrite at 0x54e2 -- 0x562c
0x54e2:    55                                    	push rbp
0x54e3:    48 89 e5                              	mov rbp, rsp
0x54e6:    41 57                                 	push r15
0x54e8:    41 56                                 	push r14
0x54ea:    41 55                                 	push r13
0x54ec:    41 54                                 	push r12
0x54ee:    53                                    	push rbx
0x54ef:    48 83 ec 28                           	sub rsp, 0x28
0x54f3:    e8 f8 96 03 00                        	call 0x3ebf0 <mcount>
0x54f8:    49 89 fd                              	mov r13, rdi
0x54fb:    4d 89 cc                              	mov r12, r9
0x54fe:    40 88 75 c4                           	mov byte ptr [rbp - 0x3c], sil
0x5502:    88 55 c8                              	mov byte ptr [rbp - 0x38], dl
0x5505:    88 4d cc                              	mov byte ptr [rbp - 0x34], cl
0x5508:    44 88 45 bf                           	mov byte ptr [rbp - 0x41], r8b
0x550c:    44 0f b6 7d 10                        	movzx r15d, byte ptr [rbp + 0x10]
0x5511:    bb 00 00 00 00                        	mov ebx, 0
0x5516:    41 80 f8 40                           	cmp r8b, 0x40
0x551a:    0f 87 2e 01 00 00                     	ja 0x564e
0x5520:    48 8d 9f 58 01 00 00                  	lea rbx, [rdi + 0x158]
0x5527:    48 89 df                              	mov rdi, rbx
0x552a:    e8 a9 96 03 00                        	call 0x3ebd8 <down>
0x552f:    49 83 bd 80 56 00 00 00               	cmp qword ptr [r13 + 0x5680], 0
0x5537:    75 2f                                 	jne 0x5568 <FUSBDTV_Cmd_MPU_I2CWrite+0x86>
0x5539:    49 c7 85 80 56 00 00 01 00 00 00      	mov qword ptr [r13 + 0x5680], 1
0x5544:    48 89 df                              	mov rdi, rbx
0x5547:    e8 0c 96 03 00                        	call 0x3eb58 <up>
0x554c:    0f b6 5d bf                           	movzx ebx, byte ptr [rbp - 0x41]
0x5550:    48 89 de                              	mov rsi, rbx
0x5553:    bf 00 00 00 00                        	mov edi, 0
0x5558:    e8 0b 0c 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x555d:    49 89 c6                              	mov r14, rax
0x5560:    41 80 ff 01                           	cmp r15b, 1
0x5564:    75 1f                                 	jne 0x5585 <FUSBDTV_Cmd_MPU_I2CWrite+0xa3>
0x5566:    eb 14                                 	jmp 0x557c <FUSBDTV_Cmd_MPU_I2CWrite+0x9a>
0x5568:    48 89 df                              	mov rdi, rbx
0x556b:    e8 e8 95 03 00                        	call 0x3eb58 <up>
0x5570:    bf 01 00 00 00                        	mov edi, 1
0x5575:    e8 eb fe 00 00                        	call 0x15465 <vUSB_Wait>
0x557a:    eb ab                                 	jmp 0x5527 <FUSBDTV_Cmd_MPU_I2CWrite+0x45>
0x557c:    49 8b 04 24                           	mov rax, qword ptr [r12]
0x5580:    49 89 06                              	mov qword ptr [r14], rax
0x5583:    eb 0e                                 	jmp 0x5593 <FUSBDTV_Cmd_MPU_I2CWrite+0xb1>
0x5585:    48 89 da                              	mov rdx, rbx
0x5588:    4c 89 e6                              	mov rsi, r12
0x558b:    48 89 c7                              	mov rdi, rax
0x558e:    e8 d5 95 03 00                        	call 0x3eb68 <memcpy>
0x5593:    41 bc 00 00 00 00                     	mov r12d, 0
0x5599:    0f b6 45 bf                           	movzx eax, byte ptr [rbp - 0x41]
0x559d:    89 45 c0                              	mov dword ptr [rbp - 0x40], eax
0x55a0:    0f b6 45 cc                           	movzx eax, byte ptr [rbp - 0x34]
0x55a4:    89 45 cc                              	mov dword ptr [rbp - 0x34], eax
0x55a7:    0f b6 45 c8                           	movzx eax, byte ptr [rbp - 0x38]
0x55ab:    89 45 c8                              	mov dword ptr [rbp - 0x38], eax
0x55ae:    0f b6 45 c4                           	movzx eax, byte ptr [rbp - 0x3c]
0x55b2:    89 45 c4                              	mov dword ptr [rbp - 0x3c], eax
0x55b5:    0f b6 45 bf                           	movzx eax, byte ptr [rbp - 0x41]
0x55b9:    83 c8 80                              	or eax, 0xffffff80
0x55bc:    0f b6 c0                              	movzx eax, al
0x55bf:    89 45 b8                              	mov dword ptr [rbp - 0x48], eax
0x55c2:    41 80 ff 01                           	cmp r15b, 1
0x55c6:    75 1d                                 	jne 0x55e5 <FUSBDTV_Cmd_MPU_I2CWrite+0x103>
0x55c8:    4d 89 f1                              	mov r9, r14
0x55cb:    44 8b 45 b8                           	mov r8d, dword ptr [rbp - 0x48]
0x55cf:    8b 4d cc                              	mov ecx, dword ptr [rbp - 0x34]
0x55d2:    8b 55 c8                              	mov edx, dword ptr [rbp - 0x38]
0x55d5:    8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x55d8:    4c 89 ef                              	mov rdi, r13
0x55db:    e8 e7 f4 ff ff                        	call 0x4ac7 <mpu_i2c_write>
0x55e0:    48 89 c3                              	mov rbx, rax
0x55e3:    eb 1b                                 	jmp 0x5600 <FUSBDTV_Cmd_MPU_I2CWrite+0x11e>
0x55e5:    4d 89 f1                              	mov r9, r14
0x55e8:    44 8b 45 c0                           	mov r8d, dword ptr [rbp - 0x40]
0x55ec:    8b 4d cc                              	mov ecx, dword ptr [rbp - 0x34]
0x55ef:    8b 55 c8                              	mov edx, dword ptr [rbp - 0x38]
0x55f2:    8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x55f5:    4c 89 ef                              	mov rdi, r13
0x55f8:    e8 ca f4 ff ff                        	call 0x4ac7 <mpu_i2c_write>
0x55fd:    48 89 c3                              	mov rbx, rax
0x5600:    0f b6 fb                              	movzx edi, bl
0x5603:    e8 78 bf ff ff                        	call 0x1580 <NT_SUCCESS>
0x5608:    84 c0                                 	test al, al
0x560a:    75 14                                 	jne 0x5620 <FUSBDTV_Cmd_MPU_I2CWrite+0x13e>
0x560c:    bf 0a 00 00 00                        	mov edi, 0xa
0x5611:    e8 b2 f2 ff ff                        	call 0x48c8 <FUSBDTV_Wait>
0x5616:    41 83 c4 01                           	add r12d, 1
0x561a:    41 83 fc 03                           	cmp r12d, 3
0x561e:    75 a2                                 	jne 0x55c2 <FUSBDTV_Cmd_MPU_I2CWrite+0xe0>
0x5620:    0f b6 fb                              	movzx edi, bl
0x5623:    e8 58 bf ff ff                        	call 0x1580 <NT_SUCCESS>
0x5628:    84 c0                                 	test al, al
0x562a:    75 07                                 	jne 0x5633
; data inside code section at 0x562c -- 0x5630
0x562c:    bb 00 00 00                                        |....            |
; function: FUSBDTV_Cmd_MPU_I2CRead at 0x5630 -- 0x5660
0x5630:    00 eb                                 	add bl, ch
0x5632:    08 80 7d bf 00 48                     	or byte ptr [rax + 0x4800bf7d], al
0x5638:    0f 44 db                              	cmove ebx, ebx
0x563b:    4c 89 f7                              	mov rdi, r14
0x563e:    e8 15 0b 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x5643:    49 c7 85 80 56 00 00 00 00 00 00      	mov qword ptr [r13 + 0x5680], 0
0x564e:    48 89 d8                              	mov rax, rbx
0x5651:    48 83 c4 28                           	add rsp, 0x28
0x5655:    5b                                    	pop rbx
0x5656:    41 5c                                 	pop r12
0x5658:    41 5d                                 	pop r13
0x565a:    41 5e                                 	pop r14
0x565c:    41 5f                                 	pop r15
0x565e:    c9                                    	leave 
0x565f:    c3                                    	ret 
; function: FUSBDTV_Cmd_MPU_I2CRead at 0x5660 -- 0x57c3
0x5660:    55                                    	push rbp
0x5661:    48 89 e5                              	mov rbp, rsp
0x5664:    41 57                                 	push r15
0x5666:    41 56                                 	push r14
0x5668:    41 55                                 	push r13
0x566a:    41 54                                 	push r12
0x566c:    53                                    	push rbx
0x566d:    48 83 ec 38                           	sub rsp, 0x38
0x5671:    e8 7a 95 03 00                        	call 0x3ebf0 <mcount>
0x5676:    48 89 fb                              	mov rbx, rdi
0x5679:    4c 89 4d a0                           	mov qword ptr [rbp - 0x60], r9
0x567d:    40 88 75 c4                           	mov byte ptr [rbp - 0x3c], sil
0x5681:    88 55 c8                              	mov byte ptr [rbp - 0x38], dl
0x5684:    88 4d cc                              	mov byte ptr [rbp - 0x34], cl
0x5687:    45 89 c4                              	mov r12d, r8d
0x568a:    0f b6 45 10                           	movzx eax, byte ptr [rbp + 0x10]
0x568e:    88 45 b3                              	mov byte ptr [rbp - 0x4d], al
0x5691:    41 bd 00 00 00 00                     	mov r13d, 0
0x5697:    41 80 f8 40                           	cmp r8b, 0x40
0x569b:    0f 87 40 01 00 00                     	ja 0x57e1
0x56a1:    4c 8d af 58 01 00 00                  	lea r13, [rdi + 0x158]
0x56a8:    4c 89 ef                              	mov rdi, r13
0x56ab:    e8 28 95 03 00                        	call 0x3ebd8 <down>
0x56b0:    48 83 bb 80 56 00 00 00               	cmp qword ptr [rbx + 0x5680], 0
0x56b8:    75 5b                                 	jne 0x5715 <FUSBDTV_Cmd_MPU_I2CRead+0xb5>
0x56ba:    48 c7 83 80 56 00 00 01 00 00 00      	mov qword ptr [rbx + 0x5680], 1
0x56c5:    4c 89 ef                              	mov rdi, r13
0x56c8:    e8 8b 94 03 00                        	call 0x3eb58 <up>
0x56cd:    41 0f b6 d4                           	movzx edx, r12b
0x56d1:    48 89 55 b8                           	mov qword ptr [rbp - 0x48], rdx
0x56d5:    48 89 d6                              	mov rsi, rdx
0x56d8:    bf 00 00 00 00                        	mov edi, 0
0x56dd:    e8 86 0a 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x56e2:    49 89 c7                              	mov r15, rax
0x56e5:    41 be 00 00 00 00                     	mov r14d, 0
0x56eb:    41 0f b6 c4                           	movzx eax, r12b
0x56ef:    89 45 b4                              	mov dword ptr [rbp - 0x4c], eax
0x56f2:    0f b6 55 cc                           	movzx edx, byte ptr [rbp - 0x34]
0x56f6:    89 55 cc                              	mov dword ptr [rbp - 0x34], edx
0x56f9:    0f b6 45 c8                           	movzx eax, byte ptr [rbp - 0x38]
0x56fd:    89 45 c8                              	mov dword ptr [rbp - 0x38], eax
0x5700:    0f b6 55 c4                           	movzx edx, byte ptr [rbp - 0x3c]
0x5704:    89 55 c4                              	mov dword ptr [rbp - 0x3c], edx
0x5707:    44 89 e0                              	mov eax, r12d
0x570a:    83 c8 80                              	or eax, 0xffffff80
0x570d:    0f b6 c0                              	movzx eax, al
0x5710:    89 45 ac                              	mov dword ptr [rbp - 0x54], eax
0x5713:    eb 17                                 	jmp 0x572c <FUSBDTV_Cmd_MPU_I2CRead+0xcc>
0x5715:    4c 89 ef                              	mov rdi, r13
0x5718:    e8 3b 94 03 00                        	call 0x3eb58 <up>
0x571d:    bf 01 00 00 00                        	mov edi, 1
0x5722:    e8 3e fd 00 00                        	call 0x15465 <vUSB_Wait>
0x5727:    e9 7c ff ff ff                        	jmp 0x56a8 <FUSBDTV_Cmd_MPU_I2CRead+0x48>
0x572c:    80 7d b3 01                           	cmp byte ptr [rbp - 0x4d], 1
0x5730:    75 1d                                 	jne 0x574f <FUSBDTV_Cmd_MPU_I2CRead+0xef>
0x5732:    4d 89 f9                              	mov r9, r15
0x5735:    44 8b 45 ac                           	mov r8d, dword ptr [rbp - 0x54]
0x5739:    8b 4d cc                              	mov ecx, dword ptr [rbp - 0x34]
0x573c:    8b 55 c8                              	mov edx, dword ptr [rbp - 0x38]
0x573f:    8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x5742:    48 89 df                              	mov rdi, rbx
0x5745:    e8 56 f4 ff ff                        	call 0x4ba0 <mpu_i2c_read>
0x574a:    49 89 c5                              	mov r13, rax
0x574d:    eb 1b                                 	jmp 0x576a <FUSBDTV_Cmd_MPU_I2CRead+0x10a>
0x574f:    4d 89 f9                              	mov r9, r15
0x5752:    44 8b 45 b4                           	mov r8d, dword ptr [rbp - 0x4c]
0x5756:    8b 4d cc                              	mov ecx, dword ptr [rbp - 0x34]
0x5759:    8b 55 c8                              	mov edx, dword ptr [rbp - 0x38]
0x575c:    8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x575f:    48 89 df                              	mov rdi, rbx
0x5762:    e8 39 f4 ff ff                        	call 0x4ba0 <mpu_i2c_read>
0x5767:    49 89 c5                              	mov r13, rax
0x576a:    41 0f b6 fd                           	movzx edi, r13b
0x576e:    e8 0d be ff ff                        	call 0x1580 <NT_SUCCESS>
0x5773:    84 c0                                 	test al, al
0x5775:    75 14                                 	jne 0x578b <FUSBDTV_Cmd_MPU_I2CRead+0x12b>
0x5777:    bf 0a 00 00 00                        	mov edi, 0xa
0x577c:    e8 47 f1 ff ff                        	call 0x48c8 <FUSBDTV_Wait>
0x5781:    41 83 c6 01                           	add r14d, 1
0x5785:    41 83 fe 03                           	cmp r14d, 3
0x5789:    75 a1                                 	jne 0x572c <FUSBDTV_Cmd_MPU_I2CRead+0xcc>
0x578b:    4d 89 ee                              	mov r14, r13
0x578e:    41 0f b6 fd                           	movzx edi, r13b
0x5792:    e8 e9 bd ff ff                        	call 0x1580 <NT_SUCCESS>
0x5797:    84 c0                                 	test al, al
0x5799:    75 08                                 	jne 0x57a3 <FUSBDTV_Cmd_MPU_I2CRead+0x143>
0x579b:    41 bd 00 00 00 00                     	mov r13d, 0
0x57a1:    eb 2b                                 	jmp 0x57ce
0x57a3:    80 7d b3 01                           	cmp byte ptr [rbp - 0x4d], 1
0x57a7:    75 13                                 	jne 0x57bc <FUSBDTV_Cmd_MPU_I2CRead+0x15c>
0x57a9:    49 8b 07                              	mov rax, qword ptr [r15]
0x57ac:    48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x57b0:    48 89 02                              	mov qword ptr [rdx], rax
0x57b3:    45 84 e4                              	test r12b, r12b
0x57b6:    4d 0f 45 ee                           	cmovne r13, r14
0x57ba:    eb 12                                 	jmp 0x57ce
0x57bc:    48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x57c0:    4c 89 fe                              	mov rsi, r15
; function: FUSBDTV_BDAQueueProcessThreadInit at 0x57c3 -- 0x57f3
0x57c3:    48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x57c7:    e8 9c 93 03 00                        	call 0x3eb68 <memcpy>
0x57cc:    eb e5                                 	jmp 0x57b3
0x57ce:    4c 89 ff                              	mov rdi, r15
0x57d1:    e8 82 09 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x57d6:    48 c7 83 80 56 00 00 00 00 00 00      	mov qword ptr [rbx + 0x5680], 0
0x57e1:    4c 89 e8                              	mov rax, r13
0x57e4:    48 83 c4 38                           	add rsp, 0x38
0x57e8:    5b                                    	pop rbx
0x57e9:    41 5c                                 	pop r12
0x57eb:    41 5d                                 	pop r13
0x57ed:    41 5e                                 	pop r14
0x57ef:    41 5f                                 	pop r15
0x57f1:    c9                                    	leave 
0x57f2:    c3                                    	ret 
; function: FUSBDTV_BDAQueueProcessThreadInit at 0x57f3 -- 0x5818
0x57f3:    55                                    	push rbp
0x57f4:    48 89 e5                              	mov rbp, rsp
0x57f7:    53                                    	push rbx
0x57f8:    48 83 ec 08                           	sub rsp, 8
0x57fc:    e8 ef 93 03 00                        	call 0x3ebf0 <mcount>
0x5801:    48 89 fb                              	mov rbx, rdi
0x5804:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0x5809:    48 85 ff                              	test rdi, rdi
0x580c:    74 37                                 	je 0x5845
0x580e:    48 c7 c2 00 00 00 00                  	mov rdx, 0
0x5815:    48 89 fe                              	mov rsi, rdi
; data inside code section at 0x5818 -- 0x581c
0x5818:    48 c7 c7 00                                        |H...            |
; function: FUSBDTV_BDAQueueProcessThread at 0x581c -- 0x584c
0x581c:    00 00                                 	add byte ptr [rax], al
0x581e:    00 b8 00 00 00 00                     	add byte ptr [rax], bh
0x5824:    e8 47 93 03 00                        	call 0x3eb70 <kthread_create>
0x5829:    48 89 83 b0 01 00 00                  	mov qword ptr [rbx + 0x1b0], rax
0x5830:    48 3d 00 f0 ff ff                     	cmp rax, -0x1000
0x5836:    77 0d                                 	ja 0x5845 <FUSBDTV_BDAQueueProcessThread+0x29>
0x5838:    48 89 c7                              	mov rdi, rax
0x583b:    e8 60 93 03 00                        	call 0x3eba0 <wake_up_process>
0x5840:    b8 01 00 00 00                        	mov eax, 1
0x5845:    48 83 c4 08                           	add rsp, 8
0x5849:    5b                                    	pop rbx
0x584a:    c9                                    	leave 
0x584b:    c3                                    	ret 
; function: FUSBDTV_BDAQueueProcessThread at 0x584c -- 0x5940
0x584c:    55                                    	push rbp
0x584d:    48 89 e5                              	mov rbp, rsp
0x5850:    41 57                                 	push r15
0x5852:    41 56                                 	push r14
0x5854:    41 55                                 	push r13
0x5856:    41 54                                 	push r12
0x5858:    53                                    	push rbx
0x5859:    48 83 ec 08                           	sub rsp, 8
0x585d:    e8 8e 93 03 00                        	call 0x3ebf0 <mcount>
0x5862:    49 89 fc                              	mov r12, rdi
0x5865:    48 8b 1f                              	mov rbx, qword ptr [rdi]
0x5868:    4c 8d bb f8 00 00 00                  	lea r15, [rbx + 0xf8]
0x586f:    41 bd 5d 41 4c ae                     	mov r13d, 0xae4c415d
0x5875:    e8 06 93 03 00                        	call 0x3eb80 <kthread_should_stop>
0x587a:    85 c0                                 	test eax, eax
0x587c:    0f 85 da 00 00 00                     	jne 0x595c <FUSBDTV_StopBulkStream>
0x5882:    4c 89 ff                              	mov rdi, r15
0x5885:    e8 4e 93 03 00                        	call 0x3ebd8 <down>
0x588a:    be 20 e5 00 00                        	mov esi, 0xe520
0x588f:    bf 00 00 00 00                        	mov edi, 0
0x5894:    e8 cf 08 00 00                        	call 0x6168 <FUSB_ExAllocatePool>
0x5899:    49 89 c6                              	mov r14, rax
0x589c:    41 0f b6 b4 24 80 00 00 00            	movzx esi, byte ptr [r12 + 0x80]
0x58a5:    83 e6 01                              	and esi, 1
0x58a8:    75 2d                                 	jne 0x58d7 <FUSBDTV_BDAQueueProcessThread+0x8b>
0x58aa:    48 8b 83 d0 04 00 00                  	mov rax, qword ptr [rbx + 0x4d0]
0x58b1:    48 81 b8 28 01 00 00 1f e5 00 00      	cmp qword ptr [rax + 0x128], 0xe51f
0x58bc:    76 7f                                 	jbe 0x593d <FUSBDTV_BDAQueueProcessThread+0xf1>
0x58be:    b9 20 e5 00 00                        	mov ecx, 0xe520
0x58c3:    4c 89 f2                              	mov rdx, r14
0x58c6:    be 00 00 00 00                        	mov esi, 0
0x58cb:    48 89 df                              	mov rdi, rbx
0x58ce:    e8 6d f7 ff ff                        	call 0x5040 <iGetDMAStreamData>
0x58d3:    89 c1                                 	mov ecx, eax
0x58d5:    eb 26                                 	jmp 0x58fd <FUSBDTV_BDAQueueProcessThread+0xb1>
0x58d7:    48 8b 83 c8 04 00 00                  	mov rax, qword ptr [rbx + 0x4c8]
0x58de:    48 81 b8 28 01 00 00 1f e5 00 00      	cmp qword ptr [rax + 0x128], 0xe51f
0x58e9:    76 52                                 	jbe 0x593d <FUSBDTV_BDAQueueProcessThread+0xf1>
0x58eb:    b9 20 e5 00 00                        	mov ecx, 0xe520
0x58f0:    4c 89 f2                              	mov rdx, r14
0x58f3:    48 89 df                              	mov rdi, rbx
0x58f6:    e8 45 f7 ff ff                        	call 0x5040 <iGetDMAStreamData>
0x58fb:    89 c1                                 	mov ecx, eax
0x58fd:    85 c9                                 	test ecx, ecx
0x58ff:    74 3c                                 	je 0x593d <FUSBDTV_BDAQueueProcessThread+0xf1>
0x5901:    89 c8                                 	mov eax, ecx
0x5903:    41 f7 ed                              	imul r13d
0x5906:    01 ca                                 	add edx, ecx
0x5908:    c1 fa 07                              	sar edx, 7
0x590b:    89 c8                                 	mov eax, ecx
0x590d:    c1 f8 1f                              	sar eax, 0x1f
0x5910:    29 c2                                 	sub edx, eax
0x5912:    69 d2 bc 00 00 00                     	imul edx, edx, 0xbc
0x5918:    39 d1                                 	cmp ecx, edx
0x591a:    75 80                                 	jne 0x589c <FUSBDTV_BDAQueueProcessThread+0x50>
0x591c:    41 0f b6 bc 24 80 00 00 00            	movzx edi, byte ptr [r12 + 0x80]
0x5925:    83 e7 01                              	and edi, 1
0x5928:    b9 20 e5 00 00                        	mov ecx, 0xe520
0x592d:    48 89 da                              	mov rdx, rbx
0x5930:    4c 89 f6                              	mov rsi, r14
0x5933:    e8 62 f9 ff ff                        	call 0x529a <DispatchByRuleTable>
0x5938:    e9 5f ff ff ff                        	jmp 0x589c <FUSBDTV_BDAQueueProcessThread+0x50>
0x593d:    4c 89 f7                              	mov rdi, r14
; function: FUSBDTV_BDAQueueProcessThreadClose at 0x5940 -- 0x595c
0x5940:    e8 13 08 00 00                        	call 0x6158 <FUSB_ExFreePool>
0x5945:    4c 89 ff                              	mov rdi, r15
0x5948:    e8 0b 92 03 00                        	call 0x3eb58 <up>
0x594d:    bf 01 00 00 00                        	mov edi, 1
0x5952:    e8 4a 72 01 00                        	call 0x1cba1 <TLIB_Delay>
0x5957:    e9 19 ff ff ff                        	jmp 0x5875
; function: FUSBDTV_StopBulkStream at 0x595c -- 0x5970
0x595c:    b8 00 00 00 00                        	mov eax, 0
0x5961:    48 83 c4 08                           	add rsp, 8
0x5965:    5b                                    	pop rbx
0x5966:    41 5c                                 	pop r12
0x5968:    41 5d                                 	pop r13
0x596a:    41 5e                                 	pop r14
0x596c:    41 5f                                 	pop r15
0x596e:    c9                                    	leave 
0x596f:    c3                                    	ret 
; function: FUSBDTV_BDAQueueProcessThreadClose at 0x5970 -- 0x598c
0x5970:    55                                    	push rbp
0x5971:    48 89 e5                              	mov rbp, rsp
0x5974:    e8 77 92 03 00                        	call 0x3ebf0 <mcount>
0x5979:    48 85 ff                              	test rdi, rdi
0x597c:    74 0c                                 	je 0x598a <FUSBDTV_BDAQueueProcessThreadClose+0x1a>
0x597e:    48 8b bf b0 01 00 00                  	mov rdi, qword ptr [rdi + 0x1b0]
0x5985:    e8 7e 92 03 00                        	call 0x3ec08 <kthread_stop>
0x598a:    c9                                    	leave 
0x598b:    c3                                    	ret 
; function: FUSBDTV_StopBulkStream at 0x598c -- 0x59eb
0x598c:    55                                    	push rbp
0x598d:    48 89 e5                              	mov rbp, rsp
0x5990:    48 83 ec 20                           	sub rsp, 0x20
0x5994:    48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x5998:    4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x599c:    4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x59a0:    e8 4b 92 03 00                        	call 0x3ebf0 <mcount>
0x59a5:    44 0f b6 e6                           	movzx r12d, sil
0x59a9:    49 63 c4                              	movsxd rax, r12d
0x59ac:    48 8b 9c c7 88 04 00 00               	mov rbx, qword ptr [rdi + rax*8 + 0x488]
0x59b4:    48 85 db                              	test rbx, rbx
0x59b7:    74 51                                 	je 0x5a0a
0x59b9:    40 80 fe 07                           	cmp sil, 7
0x59bd:    77 4b                                 	ja 0x5a0a
0x59bf:    80 bc 07 80 04 00 00 00               	cmp byte ptr [rdi + rax + 0x480], 0
0x59c7:    74 41                                 	je 0x5a0a
0x59c9:    4c 8b 2b                              	mov r13, qword ptr [rbx]
0x59cc:    49 39 fd                              	cmp r13, rdi
0x59cf:    75 39                                 	jne 0x5a0a
0x59d1:    48 89 df                              	mov rdi, rbx
0x59d4:    e8 97 ff ff ff                        	call 0x5970 <FUSBDTV_BDAQueueProcessThreadClose>
0x59d9:    c6 83 b8 00 00 00 00                  	mov byte ptr [rbx + 0xb8], 0
0x59e0:    44 89 e6                              	mov esi, r12d
0x59e3:    4c 89 ef                              	mov rdi, r13
0x59e6:    e8 fd e1 ff ff                        	call 0x3be8 <Hardware_StopTSStream>
; data inside code section at 0x59eb -- 0x59ed
0x59eb:    c6 43                                              |.C              |
; function: FUSBDTV_StartTransfer at 0x59ed -- 0x5a03
0x59ed:    70 00                                 	jo 0x59ef <FUSBDTV_StartTransfer+0x2>
0x59ef:    4d 63 e4                              	movsxd r12, r12d
0x59f2:    43 c6 84 25 80 04 00 00 00            	mov byte ptr [r13 + r12 + 0x480], 0
0x59fb:    49 83 ad c0 00 00 00 01               	sub qword ptr [r13 + 0xc0], 1
; data inside code section at 0x5a03 -- 0x5a04
0x5a03:    b8                                                 |.               |
; function: FUSBDTV_StartBulkStream at 0x5a04 -- 0x5a1d
0x5a04:    01 00                                 	add dword ptr [rax], eax
0x5a06:    00 00                                 	add byte ptr [rax], al
0x5a08:    eb 05                                 	jmp 0x5a0f <FUSBDTV_StartBulkStream+0xb>
0x5a0a:    b8 00 00 00 00                        	mov eax, 0
0x5a0f:    48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x5a13:    4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x5a17:    4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x5a1b:    c9                                    	leave 
0x5a1c:    c3                                    	ret 
; function: FUSBDTV_StartTransfer at 0x5a1d -- 0x5a34
0x5a1d:    55                                    	push rbp
0x5a1e:    48 89 e5                              	mov rbp, rsp
0x5a21:    e8 ca 91 03 00                        	call 0x3ebf0 <mcount>
0x5a26:    0f b6 b6 80 00 00 00                  	movzx esi, byte ptr [rsi + 0x80]
0x5a2d:    e8 63 e3 ff ff                        	call 0x3d95 <Hardware_StartTSStream>
0x5a32:    c9                                    	leave 
0x5a33:    c3                                    	ret 
; function: FUSBDTV_StartBulkStream at 0x5a34 -- 0x5bfc
0x5a34:    55                                    	push rbp
0x5a35:    48 89 e5                              	mov rbp, rsp
0x5a38:    48 83 ec 20                           	sub rsp, 0x20
0x5a3c:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0x5a40:    4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x5a45:    4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x5a4a:    4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x5a4f:    e8 9c 91 03 00                        	call 0x3ebf0 <mcount>
0x5a54:    49 89 fc                              	mov r12, rdi
0x5a57:    49 89 c9                              	mov r9, rcx
0x5a5a:    40 80 fe 07                           	cmp sil, 7
0x5a5e:    0f 87 ab 01 00 00                     	ja 0x5c0f
0x5a64:    80 bf d8 04 00 00 00                  	cmp byte ptr [rdi + 0x4d8], 0
0x5a6b:    0f 85 9e 01 00 00                     	jne 0x5c0f
0x5a71:    44 0f b6 f6                           	movzx r14d, sil
0x5a75:    49 63 c6                              	movsxd rax, r14d
0x5a78:    80 bc 07 80 04 00 00 01               	cmp byte ptr [rdi + rax + 0x480], 1
0x5a80:    0f 84 89 01 00 00                     	je 0x5c0f
0x5a86:    48 89 c8                              	mov rax, rcx
0x5a89:    48 d1 e8                              	shr rax, 1
0x5a8c:    48 39 d0                              	cmp rax, rdx
0x5a8f:    72 1c                                 	jb 0x5aad <FUSBDTV_StartBulkStream+0x79>
0x5a91:    48 85 d2                              	test rdx, rdx
0x5a94:    74 17                                 	je 0x5aad <FUSBDTV_StartBulkStream+0x79>
0x5a96:    48 85 c9                              	test rcx, rcx
0x5a99:    74 12                                 	je 0x5aad <FUSBDTV_StartBulkStream+0x79>
0x5a9b:    48 81 fa 00 02 00 00                  	cmp rdx, 0x200
0x5aa2:    77 09                                 	ja 0x5aad <FUSBDTV_StartBulkStream+0x79>
0x5aa4:    48 81 f9 e0 92 00 00                  	cmp rcx, 0x92e0
0x5aab:    76 0b                                 	jbe 0x5ab8 <FUSBDTV_StartBulkStream+0x84>
0x5aad:    41 b9 e0 92 00 00                     	mov r9d, 0x92e0
0x5ab3:    ba 00 02 00 00                        	mov edx, 0x200
0x5ab8:    49 63 c6                              	movsxd rax, r14d
0x5abb:    49 8b 9c c4 88 04 00 00               	mov rbx, qword ptr [r12 + rax*8 + 0x488]
0x5ac3:    48 85 db                              	test rbx, rbx
0x5ac6:    0f 84 43 01 00 00                     	je 0x5c0f
0x5acc:    49 89 d5                              	mov r13, rdx
0x5acf:    49 c1 e5 09                           	shl r13, 9
0x5ad3:    4c 8b 93 e0 00 00 00                  	mov r10, qword ptr [rbx + 0xe0]
0x5ada:    4c 8b 9b 30 01 00 00                  	mov r11, qword ptr [rbx + 0x130]
0x5ae1:    b9 37 00 00 00                        	mov ecx, 0x37
0x5ae6:    b8 00 00 00 00                        	mov eax, 0
0x5aeb:    48 89 df                              	mov rdi, rbx
0x5aee:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x5af1:    49 83 84 24 c0 00 00 00 01            	add qword ptr [r12 + 0xc0], 1
0x5afa:    4c 89 83 60 01 00 00                  	mov qword ptr [rbx + 0x160], r8
0x5b01:    4c 89 23                              	mov qword ptr [rbx], r12
0x5b04:    c6 83 b8 00 00 00 01                  	mov byte ptr [rbx + 0xb8], 1
0x5b0b:    48 c7 83 d8 00 00 00 00 00 00 00      	mov qword ptr [rbx + 0xd8], 0
0x5b16:    49 c1 e1 09                           	shl r9, 9
0x5b1a:    4c 89 8b e8 00 00 00                  	mov qword ptr [rbx + 0xe8], r9
0x5b21:    c7 83 10 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x110], 0
0x5b2b:    c6 83 58 01 00 00 00                  	mov byte ptr [rbx + 0x158], 0
0x5b32:    40 88 b3 80 00 00 00                  	mov byte ptr [rbx + 0x80], sil
0x5b39:    48 c7 83 90 00 00 00 00 00 00 00      	mov qword ptr [rbx + 0x90], 0
0x5b44:    4c 89 93 e0 00 00 00                  	mov qword ptr [rbx + 0xe0], r10
0x5b4b:    48 c7 83 28 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x128], 0
0x5b56:    48 c7 83 20 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x120], 0
0x5b61:    48 c7 83 18 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x118], 0
0x5b6c:    48 c1 e2 0a                           	shl rdx, 0xa
0x5b70:    48 89 93 38 01 00 00                  	mov qword ptr [rbx + 0x138], rdx
0x5b77:    4c 89 9b 30 01 00 00                  	mov qword ptr [rbx + 0x130], r11
0x5b7e:    48 c7 83 50 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x150], 0
0x5b89:    48 c7 83 48 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x148], 0
0x5b94:    48 c7 83 40 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x140], 0
0x5b9f:    c7 83 98 00 00 00 00 00 00 00         	mov dword ptr [rbx + 0x98], 0
0x5ba9:    48 8d bb a0 00 00 00                  	lea rdi, [rbx + 0xa0]
0x5bb0:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0x5bb7:    e8 9c 90 03 00                        	call 0x3ec58 <__init_waitqueue_head>
0x5bbc:    c7 43 50 00 00 00 00                  	mov dword ptr [rbx + 0x50], 0
0x5bc3:    48 8d 7b 58                           	lea rdi, [rbx + 0x58]
0x5bc7:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0x5bce:    e8 85 90 03 00                        	call 0x3ec58 <__init_waitqueue_head>
0x5bd3:    b9 00 00 00 00                        	mov ecx, 0
0x5bd8:    4c 89 ea                              	mov rdx, r13
0x5bdb:    48 89 de                              	mov rsi, rbx
0x5bde:    4c 89 e7                              	mov rdi, r12
0x5be1:    e8 37 fe ff ff                        	call 0x5a1d <FUSBDTV_StartTransfer>
0x5be6:    49 89 c5                              	mov r13, rax
0x5be9:    0f b6 f8                              	movzx edi, al
0x5bec:    e8 8f b9 ff ff                        	call 0x1580 <NT_SUCCESS>
0x5bf1:    4d 63 f6                              	movsxd r14, r14d
0x5bf4:    4b 89 9c f4 88 04 00 00               	mov qword ptr [r12 + r14*8 + 0x488], rbx
; data inside code section at 0x5bfc -- 0x5bfd
0x5bfc:    43                                                 |C               |
; function: FUSBDTV_Cmd_GetCusInfo at 0x5bfd -- 0x5c2d
0x5bfd:    c6 84 34 80 04 00 00 01               	mov byte ptr [rsp + rsi + 0x480], 1
0x5c05:    48 89 df                              	mov rdi, rbx
0x5c08:    e8 e6 fb ff ff                        	call 0x57f3 <FUSBDTV_BDAQueueProcessThreadInit>
0x5c0d:    eb 06                                 	jmp 0x5c15 <FUSBDTV_Cmd_GetCusInfo+0x18>
0x5c0f:    41 bd 00 00 00 00                     	mov r13d, 0
0x5c15:    4c 89 e8                              	mov rax, r13
0x5c18:    48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x5c1c:    4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x5c21:    4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x5c26:    4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x5c2b:    c9                                    	leave 
0x5c2c:    c3                                    	ret 
; function: FUSBDTV_Cmd_GetCusInfo at 0x5c2d -- 0x5c68
0x5c2d:    55                                    	push rbp
0x5c2e:    48 89 e5                              	mov rbp, rsp
0x5c31:    53                                    	push rbx
0x5c32:    48 83 ec 18                           	sub rsp, 0x18
0x5c36:    e8 b5 8f 03 00                        	call 0x3ebf0 <mcount>
0x5c3b:    48 89 f9                              	mov rcx, rdi
0x5c3e:    48 89 f3                              	mov rbx, rsi
0x5c41:    48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x5c49:    48 8d 55 e8                           	lea rdx, [rbp - 0x18]
0x5c4d:    be 08 00 00 00                        	mov esi, 8
0x5c52:    bf 2c 00 00 00                        	mov edi, 0x2c
0x5c57:    e8 28 ef 00 00                        	call 0x14b84 <bReadPcieCfgReg>
0x5c5c:    89 c2                                 	mov edx, eax
0x5c5e:    b8 00 00 00 00                        	mov eax, 0
0x5c63:    80 fa 01                              	cmp dl, 1
0x5c66:    75 2a                                 	jne 0x5c92
; data inside code section at 0x5c68 -- 0x5c69
0x5c68:    48                                                 |H               |
; function: FUSBDTV_Cmd_SysCtrlRead at 0x5c69 -- 0x5c99
0x5c69:    8b 45 e8                              	mov eax, dword ptr [rbp - 0x18]
0x5c6c:    48 89 c2                              	mov rdx, rax
0x5c6f:    48 c1 ea 08                           	shr rdx, 8
0x5c73:    88 53 03                              	mov byte ptr [rbx + 3], dl
0x5c76:    88 43 04                              	mov byte ptr [rbx + 4], al
0x5c79:    48 89 c2                              	mov rdx, rax
0x5c7c:    48 c1 ea 18                           	shr rdx, 0x18
0x5c80:    88 53 05                              	mov byte ptr [rbx + 5], dl
0x5c83:    48 c1 e8 10                           	shr rax, 0x10
0x5c87:    88 43 06                              	mov byte ptr [rbx + 6], al
0x5c8a:    c6 03 01                              	mov byte ptr [rbx], 1
0x5c8d:    b8 01 00 00 00                        	mov eax, 1
0x5c92:    48 83 c4 18                           	add rsp, 0x18
0x5c96:    5b                                    	pop rbx
0x5c97:    c9                                    	leave 
0x5c98:    c3                                    	ret 
; function: FUSBDTV_Cmd_SysCtrlRead at 0x5c99 -- 0x5c9d
0x5c99:    55                                    	push rbp
0x5c9a:    48 89 e5                              	mov rbp, rsp
; data inside code section at 0x5c9d -- 0x5c9e
0x5c9d:    48                                                 |H               |
; function: FPCIEDTV_Cmd_I2CWrite at 0x5c9e -- 0x5cce
0x5c9e:    83 ec 10                              	sub esp, 0x10
0x5ca1:    e8 4a 8f 03 00                        	call 0x3ebf0 <mcount>
0x5ca6:    48 89 f9                              	mov rcx, rdi
0x5ca9:    48 c7 45 f8 00 00 00 00               	mov qword ptr [rbp - 8], 0
0x5cb1:    48 8d 55 f8                           	lea rdx, [rbp - 8]
0x5cb5:    be 08 00 00 00                        	mov esi, 8
0x5cba:    bf 2c 00 00 00                        	mov edi, 0x2c
0x5cbf:    e8 c0 ee 00 00                        	call 0x14b84 <bReadPcieCfgReg>
0x5cc4:    3c 01                                 	cmp al, 1
0x5cc6:    0f 94 c0                              	sete al
0x5cc9:    0f b6 c0                              	movzx eax, al
0x5ccc:    c9                                    	leave 
0x5ccd:    c3                                    	ret 
; function: FPCIEDTV_Cmd_I2CWrite at 0x5cce -- 0x5d6a
0x5cce:    55                                    	push rbp
0x5ccf:    48 89 e5                              	mov rbp, rsp
0x5cd2:    48 81 ec 90 00 00 00                  	sub rsp, 0x90
0x5cd9:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x5cdd:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x5ce1:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x5ce5:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x5ce9:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x5ced:    e8 fe 8e 03 00                        	call 0x3ebf0 <mcount>
0x5cf2:    48 89 7d 98                           	mov qword ptr [rbp - 0x68], rdi
0x5cf6:    41 89 f5                              	mov r13d, esi
0x5cf9:    41 89 d6                              	mov r14d, edx
0x5cfc:    41 89 cc                              	mov r12d, ecx
0x5cff:    45 89 cf                              	mov r15d, r9d
0x5d02:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x5d0b:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x5d0f:    31 c0                                 	xor eax, eax
0x5d11:    48 8d 5d a0                           	lea rbx, [rbp - 0x60]
0x5d15:    0f b7 d1                              	movzx edx, cx
0x5d18:    4c 89 c6                              	mov rsi, r8
0x5d1b:    48 89 df                              	mov rdi, rbx
0x5d1e:    e8 45 8e 03 00                        	call 0x3eb68 <memcpy>
0x5d23:    41 0f b6 cd                           	movzx ecx, r13b
0x5d27:    c7 44 24 18 00 00 00 00               	mov dword ptr [rsp + 0x18], 0
0x5d2f:    45 0f b6 e4                           	movzx r12d, r12b
0x5d33:    44 89 64 24 10                        	mov dword ptr [rsp + 0x10], r12d
0x5d38:    48 c7 44 24 08 00 00 00 00            	mov qword ptr [rsp + 8], 0
0x5d41:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0x5d45:    45 0f b6 ce                           	movzx r9d, r14b
0x5d49:    45 0f b6 c7                           	movzx r8d, r15b
0x5d4d:    48 8b 55 98                           	mov rdx, qword ptr [rbp - 0x68]
0x5d51:    be 00 00 00 00                        	mov esi, 0
0x5d56:    bf 01 00 00 00                        	mov edi, 1
0x5d5b:    e8 2c 47 00 00                        	call 0xa48c <i2c_access>
0x5d60:    0f b6 f8                              	movzx edi, al
0x5d63:    e8 18 b8 ff ff                        	call 0x1580 <NT_SUCCESS>
0x5d68:    84 c0                                 	test al, al
; function: FPCIEDTV_Cmd_I2CRead at 0x5d6a -- 0x5d9a
0x5d6a:    0f 95 c0                              	setne al
0x5d6d:    0f b6 c0                              	movzx eax, al
0x5d70:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x5d74:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x5d7d:    74 05                                 	je 0x5d84 <FPCIEDTV_Cmd_I2CRead+0x1a>
0x5d7f:    e8 24 8e 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x5d84:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x5d88:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x5d8c:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x5d90:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x5d94:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x5d98:    c9                                    	leave 
0x5d99:    c3                                    	ret 
; function: FPCIEDTV_Cmd_I2CRead at 0x5d9a -- 0x5e3f
0x5d9a:    55                                    	push rbp
0x5d9b:    48 89 e5                              	mov rbp, rsp
0x5d9e:    41 54                                 	push r12
0x5da0:    53                                    	push rbx
0x5da1:    48 83 ec 50                           	sub rsp, 0x50
0x5da5:    e8 46 8e 03 00                        	call 0x3ebf0 <mcount>
0x5daa:    4d 89 c4                              	mov r12, r8
0x5dad:    89 cb                                 	mov ebx, ecx
0x5daf:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x5db8:    48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x5dbc:    31 c0                                 	xor eax, eax
0x5dbe:    48 8d 45 c0                           	lea rax, [rbp - 0x40]
0x5dc2:    48 c7 00 00 00 00 00                  	mov qword ptr [rax], 0
0x5dc9:    48 c7 40 08 00 00 00 00               	mov qword ptr [rax + 8], 0
0x5dd1:    48 c7 40 10 00 00 00 00               	mov qword ptr [rax + 0x10], 0
0x5dd9:    48 c7 40 18 00 00 00 00               	mov qword ptr [rax + 0x18], 0
0x5de1:    45 0f b6 c1                           	movzx r8d, r9b
0x5de5:    40 0f b6 ce                           	movzx ecx, sil
0x5de9:    c7 44 24 18 00 00 00 00               	mov dword ptr [rsp + 0x18], 0
0x5df1:    0f b6 f3                              	movzx esi, bl
0x5df4:    89 74 24 10                           	mov dword ptr [rsp + 0x10], esi
0x5df8:    0f b7 f3                              	movzx esi, bx
0x5dfb:    83 c6 03                              	add esi, 3
0x5dfe:    c1 fe 02                              	sar esi, 2
0x5e01:    c1 e6 02                              	shl esi, 2
0x5e04:    40 0f b6 f6                           	movzx esi, sil
0x5e08:    48 89 74 24 08                        	mov qword ptr [rsp + 8], rsi
0x5e0d:    48 89 04 24                           	mov qword ptr [rsp], rax
0x5e11:    44 0f b6 ca                           	movzx r9d, dl
0x5e15:    48 89 fa                              	mov rdx, rdi
0x5e18:    be 01 00 00 00                        	mov esi, 1
0x5e1d:    bf 01 00 00 00                        	mov edi, 1
0x5e22:    e8 65 46 00 00                        	call 0xa48c <i2c_access>
0x5e27:    0f b6 f8                              	movzx edi, al
0x5e2a:    e8 51 b7 ff ff                        	call 0x1580 <NT_SUCCESS>
0x5e2f:    89 c2                                 	mov edx, eax
0x5e31:    b8 00 00 00 00                        	mov eax, 0
0x5e36:    84 d2                                 	test dl, dl
0x5e38:    74 21                                 	je 0x5e5b
0x5e3a:    66 85 db                              	test bx, bx
0x5e3d:    74 17                                 	je 0x5e56
; data inside code section at 0x5e3f -- 0x5e48
0x5e3f:    0f b6 d0 0f b6 4c 15 c0  41                        |.....L..A       |
; function: FUSBDTV_Cmd_Get_GPIO at 0x5e48 -- 0x5e78
0x5e48:    88 0c 14                              	mov byte ptr [rsp + rdx], cl
0x5e4b:    83 c0 01                              	add eax, 1
0x5e4e:    0f b6 d0                              	movzx edx, al
0x5e51:    66 39 d3                              	cmp bx, dx
0x5e54:    77 e9                                 	ja 0x5e3f
0x5e56:    b8 01 00 00 00                        	mov eax, 1
0x5e5b:    48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x5e5f:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x5e68:    74 05                                 	je 0x5e6f <FUSBDTV_Cmd_Get_GPIO+0x27>
0x5e6a:    e8 39 8d 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x5e6f:    48 83 c4 50                           	add rsp, 0x50
0x5e73:    5b                                    	pop rbx
0x5e74:    41 5c                                 	pop r12
0x5e76:    c9                                    	leave 
0x5e77:    c3                                    	ret 
; function: FUSBDTV_Cmd_Get_GPIO at 0x5e78 -- 0x5efc
0x5e78:    55                                    	push rbp
0x5e79:    48 89 e5                              	mov rbp, rsp
0x5e7c:    48 83 ec 30                           	sub rsp, 0x30
0x5e80:    48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x5e84:    4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x5e88:    4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x5e8c:    e8 5f 8d 03 00                        	call 0x3ebf0 <mcount>
0x5e91:    48 89 fb                              	mov rbx, rdi
0x5e94:    49 89 f4                              	mov r12, rsi
0x5e97:    4c 8d 45 d0                           	lea r8, [rbp - 0x30]
0x5e9b:    41 c7 00 00 00 00 00                  	mov dword ptr [r8], 0
0x5ea2:    b9 04 00 00 00                        	mov ecx, 4
0x5ea7:    ba 90 08 00 00                        	mov edx, 0x890
0x5eac:    48 89 fe                              	mov rsi, rdi
0x5eaf:    bf 01 00 00 00                        	mov edi, 1
0x5eb4:    e8 f9 46 00 00                        	call 0xa5b2 <cfg_access>
0x5eb9:    0f b6 f8                              	movzx edi, al
0x5ebc:    e8 bf b6 ff ff                        	call 0x1580 <NT_SUCCESS>
0x5ec1:    89 c2                                 	mov edx, eax
0x5ec3:    b8 00 00 00 00                        	mov eax, 0
0x5ec8:    84 d2                                 	test dl, dl
0x5eca:    74 52                                 	je 0x5f1e
0x5ecc:    44 0f b6 6d d2                        	movzx r13d, byte ptr [rbp - 0x2e]
0x5ed1:    41 c1 ed 02                           	shr r13d, 2
0x5ed5:    41 83 e5 01                           	and r13d, 1
0x5ed9:    4c 8d 45 d0                           	lea r8, [rbp - 0x30]
0x5edd:    b9 04 00 00 00                        	mov ecx, 4
0x5ee2:    ba 94 08 00 00                        	mov edx, 0x894
0x5ee7:    48 89 de                              	mov rsi, rbx
0x5eea:    bf 01 00 00 00                        	mov edi, 1
0x5eef:    e8 be 46 00 00                        	call 0xa5b2 <cfg_access>
0x5ef4:    0f b6 f8                              	movzx edi, al
0x5ef7:    e8 84 b6 ff ff                        	call 0x1580 <NT_SUCCESS>
; function: FUSBDTV_Cmd_Set_GPIO at 0x5efc -- 0x5f2c
0x5efc:    ba 00 00 00 00                        	mov edx, 0
0x5f01:    84 c0                                 	test al, al
0x5f03:    74 0f                                 	je 0x5f14 <FUSBDTV_Cmd_Set_GPIO+0x18>
0x5f05:    0f b6 45 d2                           	movzx eax, byte ptr [rbp - 0x2e]
0x5f09:    83 e0 fe                              	and eax, 0xfffffffe
0x5f0c:    41 09 c5                              	or r13d, eax
0x5f0f:    ba 01 00 00 00                        	mov edx, 1
0x5f14:    45 88 2c 24                           	mov byte ptr [r12], r13b
0x5f18:    48 89 d0                              	mov rax, rdx
0x5f1b:    83 e0 01                              	and eax, 1
0x5f1e:    48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x5f22:    4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x5f26:    4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x5f2a:    c9                                    	leave 
0x5f2b:    c3                                    	ret 
; function: FUSBDTV_Cmd_Set_GPIO at 0x5f2c -- 0x6017
0x5f2c:    55                                    	push rbp
0x5f2d:    48 89 e5                              	mov rbp, rsp
0x5f30:    41 55                                 	push r13
0x5f32:    41 54                                 	push r12
0x5f34:    53                                    	push rbx
0x5f35:    48 83 ec 18                           	sub rsp, 0x18
0x5f39:    e8 b2 8c 03 00                        	call 0x3ebf0 <mcount>
0x5f3e:    48 89 fb                              	mov rbx, rdi
0x5f41:    41 89 f5                              	mov r13d, esi
0x5f44:    41 89 d4                              	mov r12d, edx
0x5f47:    4c 8d 45 d0                           	lea r8, [rbp - 0x30]
0x5f4b:    41 c7 00 00 00 00 00                  	mov dword ptr [r8], 0
0x5f52:    b9 04 00 00 00                        	mov ecx, 4
0x5f57:    ba 90 08 00 00                        	mov edx, 0x890
0x5f5c:    48 89 fe                              	mov rsi, rdi
0x5f5f:    bf 01 00 00 00                        	mov edi, 1
0x5f64:    e8 49 46 00 00                        	call 0xa5b2 <cfg_access>
0x5f69:    0f b6 f8                              	movzx edi, al
0x5f6c:    e8 0f b6 ff ff                        	call 0x1580 <NT_SUCCESS>
0x5f71:    84 c0                                 	test al, al
0x5f73:    0f 84 8a 00 00 00                     	je 0x6003 <FUSBDTV_Cmd_Set_GPIO+0xd7>
0x5f79:    44 89 e0                              	mov eax, r12d
0x5f7c:    83 e0 01                              	and eax, 1
0x5f7f:    f7 d8                                 	neg eax
0x5f81:    83 e0 04                              	and eax, 4
0x5f84:    44 89 ea                              	mov edx, r13d
0x5f87:    83 e2 01                              	and edx, 1
0x5f8a:    f7 da                                 	neg edx
0x5f8c:    21 c2                                 	and edx, eax
0x5f8e:    f7 d0                                 	not eax
0x5f90:    22 45 d0                              	and al, byte ptr [rbp - 0x30]
0x5f93:    09 d0                                 	or eax, edx
0x5f95:    88 45 d0                              	mov byte ptr [rbp - 0x30], al
0x5f98:    4c 8d 45 d0                           	lea r8, [rbp - 0x30]
0x5f9c:    b9 04 00 00 00                        	mov ecx, 4
0x5fa1:    ba 90 08 00 00                        	mov edx, 0x890
0x5fa6:    48 89 de                              	mov rsi, rbx
0x5fa9:    bf 00 00 00 00                        	mov edi, 0
0x5fae:    e8 ff 45 00 00                        	call 0xa5b2 <cfg_access>
0x5fb3:    0f b6 f8                              	movzx edi, al
0x5fb6:    e8 c5 b5 ff ff                        	call 0x1580 <NT_SUCCESS>
0x5fbb:    84 c0                                 	test al, al
0x5fbd:    75 54                                 	jne 0x6013 <FUSBDTV_Cmd_Set_GPIO+0xe7>
0x5fbf:    90                                    	nop 
0x5fc0:    eb 41                                 	jmp 0x6003 <FUSBDTV_Cmd_Set_GPIO+0xd7>
0x5fc2:    44 89 e0                              	mov eax, r12d
0x5fc5:    f7 d0                                 	not eax
0x5fc7:    22 45 d0                              	and al, byte ptr [rbp - 0x30]
0x5fca:    45 21 e5                              	and r13d, r12d
0x5fcd:    44 09 e8                              	or eax, r13d
0x5fd0:    88 45 d0                              	mov byte ptr [rbp - 0x30], al
0x5fd3:    4c 8d 45 d0                           	lea r8, [rbp - 0x30]
0x5fd7:    b9 04 00 00 00                        	mov ecx, 4
0x5fdc:    ba 94 08 00 00                        	mov edx, 0x894
0x5fe1:    48 89 de                              	mov rsi, rbx
0x5fe4:    bf 00 00 00 00                        	mov edi, 0
0x5fe9:    e8 c4 45 00 00                        	call 0xa5b2 <cfg_access>
0x5fee:    0f b6 f8                              	movzx edi, al
0x5ff1:    e8 8a b5 ff ff                        	call 0x1580 <NT_SUCCESS>
0x5ff6:    84 c0                                 	test al, al
0x5ff8:    0f 95 c2                              	setne dl
0x5ffb:    48 89 d0                              	mov rax, rdx
0x5ffe:    83 e0 01                              	and eax, 1
0x6001:    eb 05                                 	jmp 0x6008 <FUSBDTV_Cmd_Set_GPIO+0xdc>
0x6003:    b8 00 00 00 00                        	mov eax, 0
0x6008:    48 83 c4 18                           	add rsp, 0x18
0x600c:    5b                                    	pop rbx
0x600d:    41 5c                                 	pop r12
0x600f:    41 5d                                 	pop r13
0x6011:    c9                                    	leave 
0x6012:    c3                                    	ret 
0x6013:    4c 8d 45 d0                           	lea r8, [rbp - 0x30]
; data inside code section at 0x6017 -- 0x601b
0x6017:    41 c7 00 00                                        |A...            |
; function: FUSBDTV_Cmd_Get_GPIO_Ex at 0x601b -- 0x604b
0x601b:    00 00                                 	add byte ptr [rax], al
0x601d:    00 b9 04 00 00 00                     	add byte ptr [rcx + 4], bh
0x6023:    ba 94 08 00 00                        	mov edx, 0x894
0x6028:    48 89 de                              	mov rsi, rbx
0x602b:    bf 01 00 00 00                        	mov edi, 1
0x6030:    e8 7d 45 00 00                        	call 0xa5b2 <cfg_access>
0x6035:    0f b6 f8                              	movzx edi, al
0x6038:    e8 43 b5 ff ff                        	call 0x1580 <NT_SUCCESS>
0x603d:    ba 00 00 00 00                        	mov edx, 0
0x6042:    84 c0                                 	test al, al
0x6044:    74 b5                                 	je 0x5ffb
0x6046:    e9 77 ff ff ff                        	jmp 0x5fc2
; function: FUSBDTV_Cmd_Get_GPIO_Ex at 0x604b -- 0x6079
0x604b:    55                                    	push rbp
0x604c:    48 89 e5                              	mov rbp, rsp
0x604f:    53                                    	push rbx
0x6050:    48 83 ec 18                           	sub rsp, 0x18
0x6054:    e8 97 8b 03 00                        	call 0x3ebf0 <mcount>
0x6059:    48 89 f3                              	mov rbx, rsi
0x605c:    4c 8d 45 e0                           	lea r8, [rbp - 0x20]
0x6060:    41 c7 00 00 00 00 00                  	mov dword ptr [r8], 0
0x6067:    b9 04 00 00 00                        	mov ecx, 4
0x606c:    ba 90 08 00 00                        	mov edx, 0x890
0x6071:    48 89 fe                              	mov rsi, rdi
0x6074:    bf 01 00 00 00                        	mov edi, 1
; data inside code section at 0x6079 -- 0x607d
0x6079:    e8 34 45 00                                        |.4E.            |
; function: FUSBDTV_Cmd_Set_GPIO_Ex at 0x607d -- 0x60ad
0x607d:    00 0f                                 	add byte ptr [rdi], cl
0x607f:    b6 f8                                 	mov dh, 0xf8
0x6081:    e8 fa b4 ff ff                        	call 0x1580 <NT_SUCCESS>
0x6086:    ba 00 00 00 00                        	mov edx, 0
0x608b:    84 c0                                 	test al, al
0x608d:    74 11                                 	je 0x60a0 <FUSBDTV_Cmd_Set_GPIO_Ex+0x23>
0x608f:    0f b6 45 e2                           	movzx eax, byte ptr [rbp - 0x1e]
0x6093:    c0 e8 03                              	shr al, 3
0x6096:    83 e0 0f                              	and eax, 0xf
0x6099:    88 03                                 	mov byte ptr [rbx], al
0x609b:    ba 01 00 00 00                        	mov edx, 1
0x60a0:    48 89 d0                              	mov rax, rdx
0x60a3:    83 e0 01                              	and eax, 1
0x60a6:    48 83 c4 18                           	add rsp, 0x18
0x60aa:    5b                                    	pop rbx
0x60ab:    c9                                    	leave 
0x60ac:    c3                                    	ret 
; function: FUSBDTV_Cmd_Set_GPIO_Ex at 0x60ad -- 0x6125
0x60ad:    55                                    	push rbp
0x60ae:    48 89 e5                              	mov rbp, rsp
0x60b1:    48 83 ec 30                           	sub rsp, 0x30
0x60b5:    48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x60b9:    4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x60bd:    4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x60c1:    e8 2a 8b 03 00                        	call 0x3ebf0 <mcount>
0x60c6:    48 89 fb                              	mov rbx, rdi
0x60c9:    41 89 f5                              	mov r13d, esi
0x60cc:    41 89 d4                              	mov r12d, edx
0x60cf:    4c 8d 45 d0                           	lea r8, [rbp - 0x30]
0x60d3:    41 c7 00 00 00 00 00                  	mov dword ptr [r8], 0
0x60da:    b9 04 00 00 00                        	mov ecx, 4
0x60df:    ba 90 08 00 00                        	mov edx, 0x890
0x60e4:    48 89 fe                              	mov rsi, rdi
0x60e7:    bf 01 00 00 00                        	mov edi, 1
0x60ec:    e8 c1 44 00 00                        	call 0xa5b2 <cfg_access>
0x60f1:    0f b6 f8                              	movzx edi, al
0x60f4:    e8 87 b4 ff ff                        	call 0x1580 <NT_SUCCESS>
0x60f9:    ba 00 00 00 00                        	mov edx, 0
0x60fe:    84 c0                                 	test al, al
0x6100:    74 42                                 	je 0x6144
0x6102:    41 c1 e4 03                           	shl r12d, 3
0x6106:    44 89 e0                              	mov eax, r12d
0x6109:    f7 d0                                 	not eax
0x610b:    22 45 d0                              	and al, byte ptr [rbp - 0x30]
0x610e:    41 c1 e5 03                           	shl r13d, 3
0x6112:    45 21 ec                              	and r12d, r13d
0x6115:    41 09 c4                              	or r12d, eax
0x6118:    44 88 65 d0                           	mov byte ptr [rbp - 0x30], r12b
0x611c:    4c 8d 45 d0                           	lea r8, [rbp - 0x30]
0x6120:    b9 04 00 00 00                        	mov ecx, 4
; data inside code section at 0x6125 -- 0x6128
0x6125:    ba 90 08                                           |...             |
; function: FUSB_ExFreePool at 0x6128 -- 0x6137
0x6128:    00 00                                 	add byte ptr [rax], al
0x612a:    48 89 de                              	mov rsi, rbx
0x612d:    bf 00 00 00 00                        	mov edi, 0
0x6132:    e8 7b 44 00 00                        	call 0xa5b2 <cfg_access>
; data inside code section at 0x6137 -- 0x6138
0x6137:    0f                                                 |.               |
; function: FUSB_ExAllocatePool at 0x6138 -- 0x614a
0x6138:    b6 f8                                 	mov dh, 0xf8
0x613a:    e8 41 b4 ff ff                        	call 0x1580 <NT_SUCCESS>
0x613f:    84 c0                                 	test al, al
0x6141:    0f 95 c2                              	setne dl
0x6144:    48 89 d0                              	mov rax, rdx
0x6147:    83 e0 01                              	and eax, 1
; data inside code section at 0x614a -- 0x6150
0x614a:    48 8b 5d e8 4c 8b                                  |H.].L.          |
; function: Adpater_TunerS_RegWrite at 0x6150 -- 0x6151
; data inside code section at 0x6151 -- 0x6152
0x6151:    f0                                                 |.               |
; function: function_6152 at 0x6152 -- 0x6158
0x6152:    4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x6156:    c9                                    	leave 
0x6157:    c3                                    	ret 
; function: FUSB_ExFreePool at 0x6158 -- 0x615c
0x6158:    55                                    	push rbp
0x6159:    48 89 e5                              	mov rbp, rsp
; data inside code section at 0x615c -- 0x6160
0x615c:    e8 8f 8a 03                                        |....            |
; function: Adpater_TunerS_RegRead at 0x6160 -- 0x6168
0x6160:    00 e8                                 	add al, ch
0x6162:    12 8b 03 00 c9 c3                     	adc cl, byte ptr [rbx - 0x3c36fffd]
; function: FUSB_ExAllocatePool at 0x6168 -- 0x616c
0x6168:    55                                    	push rbp
0x6169:    48 89 e5                              	mov rbp, rsp
; data inside code section at 0x616c -- 0x6170
0x616c:    e8 7f 8a 03                                        |....            |
; function: Adpater_TunerT_RegWrite at 0x6170 -- 0x617b
0x6170:    00 48 89                              	add byte ptr [rax - 0x77], cl
0x6173:    f7 e8                                 	imul eax
0x6175:    67 8b 03                              	mov eax, dword ptr [ebx]
0x6178:    00 c9                                 	add cl, cl
0x617a:    c3                                    	ret 
; data inside code section at 0x617b -- 0x6180
0x617b:    90 90 90 90 90                                     |.....           |
; function: Adpater_TunerT_RegRead at 0x6180 -- 0x6190
0x6180:    55                                    	push rbp
0x6181:    48 89 e5                              	mov rbp, rsp
0x6184:    e8 67 8a 03 00                        	call 0x3ebf0 <mcount>
0x6189:    b8 00 00 00 00                        	mov eax, 0
0x618e:    c9                                    	leave 
0x618f:    c3                                    	ret 
; function: Ber_to_Signal_Quality at 0x6190 -- 0x61a0
0x6190:    55                                    	push rbp
0x6191:    48 89 e5                              	mov rbp, rsp
0x6194:    e8 57 8a 03 00                        	call 0x3ebf0 <mcount>
0x6199:    b8 00 00 00 00                        	mov eax, 0
0x619e:    c9                                    	leave 
0x619f:    c3                                    	ret 
; function: Adpater_TunerT_RegWrite at 0x61a0 -- 0x61b0
0x61a0:    55                                    	push rbp
0x61a1:    48 89 e5                              	mov rbp, rsp
0x61a4:    e8 47 8a 03 00                        	call 0x3ebf0 <mcount>
0x61a9:    b8 00 00 00 00                        	mov eax, 0
0x61ae:    c9                                    	leave 
0x61af:    c3                                    	ret 
; function: Adpater_TunerT_RegRead at 0x61b0 -- 0x61c0
0x61b0:    55                                    	push rbp
0x61b1:    48 89 e5                              	mov rbp, rsp
0x61b4:    e8 37 8a 03 00                        	call 0x3ebf0 <mcount>
0x61b9:    b8 00 00 00 00                        	mov eax, 0
0x61be:    c9                                    	leave 
0x61bf:    c3                                    	ret 
; function: Ber_to_Signal_Quality at 0x61c0 -- 0x6270
0x61c0:    55                                    	push rbp
0x61c1:    48 89 e5                              	mov rbp, rsp
0x61c4:    e8 27 8a 03 00                        	call 0x3ebf0 <mcount>
0x61c9:    85 c9                                 	test ecx, ecx
0x61cb:    75 13                                 	jne 0x61e0 <Ber_to_Signal_Quality+0x20>
0x61cd:    b8 5a ef 00 00                        	mov eax, 0xef5a
0x61d2:    ba 00 00 00 00                        	mov edx, 0
0x61d7:    f7 f6                                 	div esi
0x61d9:    89 c2                                 	mov edx, eax
0x61db:    0f af d7                              	imul edx, edi
0x61de:    eb 0d                                 	jmp 0x61ed <Ber_to_Signal_Quality+0x2d>
0x61e0:    83 f9 01                              	cmp ecx, 1
0x61e3:    75 08                                 	jne 0x61ed <Ber_to_Signal_Quality+0x2d>
0x61e5:    8d 3c bf                              	lea edi, [rdi + rdi*4]
0x61e8:    89 fa                                 	mov edx, edi
0x61ea:    c1 e2 04                              	shl edx, 4
0x61ed:    b8 64 00 00 00                        	mov eax, 0x64
0x61f2:    85 d2                                 	test edx, edx
0x61f4:    0f 84 a5 00 00 00                     	je 0x629f
0x61fa:    8d 4a ff                              	lea ecx, [rdx - 1]
0x61fd:    b8 5a 00 00 00                        	mov eax, 0x5a
0x6202:    83 f9 09                              	cmp ecx, 9
0x6205:    0f 86 94 00 00 00                     	jbe 0x629f
0x620b:    8d 4a f5                              	lea ecx, [rdx - 0xb]
0x620e:    b8 50 00 00 00                        	mov eax, 0x50
0x6213:    83 f9 59                              	cmp ecx, 0x59
0x6216:    0f 86 83 00 00 00                     	jbe 0x629f
0x621c:    8d 4a 9b                              	lea ecx, [rdx - 0x65]
0x621f:    b8 46 00 00 00                        	mov eax, 0x46
0x6224:    81 f9 83 03 00 00                     	cmp ecx, 0x383
0x622a:    76 73                                 	jbe 0x629f
0x622c:    8d 8a 17 fc ff ff                     	lea ecx, [rdx - 0x3e9]
0x6232:    b8 3c 00 00 00                        	mov eax, 0x3c
0x6237:    81 f9 27 23 00 00                     	cmp ecx, 0x2327
0x623d:    76 60                                 	jbe 0x629f
0x623f:    8d 8a ef d8 ff ff                     	lea ecx, [rdx - 0x2711]
0x6245:    b8 32 00 00 00                        	mov eax, 0x32
0x624a:    81 f9 3f 9c 00 00                     	cmp ecx, 0x9c3f
0x6250:    76 4d                                 	jbe 0x629f
0x6252:    8d 8a af 3c ff ff                     	lea ecx, [rdx - 0xc351]
0x6258:    b8 28 00 00 00                        	mov eax, 0x28
0x625d:    81 f9 4f c3 00 00                     	cmp ecx, 0xc34f
0x6263:    76 3a                                 	jbe 0x629f
0x6265:    8d 8a 5f 79 fe ff                     	lea ecx, [rdx - 0x186a1]
0x626b:    b8 1e 00 00 00                        	mov eax, 0x1e
; data inside code section at 0x6270 -- 0x6271
0x6270:    81                                                 |.               |
; function: Adapter_SetTsOutput at 0x6271 -- 0x627e
0x6271:    f9                                    	stc 
0x6272:    ef                                    	out dx, eax
0x6273:    49 02 00                              	add al, byte ptr [r8]
0x6276:    76 27                                 	jbe 0x629f
0x6278:    8d 8a 6f 2f fc ff                     	lea ecx, [rdx - 0x3d091]
; data inside code section at 0x627e -- 0x6281
0x627e:    b8 14 00                                           |...             |
; function: Adapter_StopTsOutput at 0x6281 -- 0x6291
0x6281:    00 00                                 	add byte ptr [rax], al
0x6283:    81 f9 8f d0 03 00                     	cmp ecx, 0x3d08f
0x6289:    76 14                                 	jbe 0x629f
0x628b:    81 ea 21 a1 07 00                     	sub edx, 0x7a121
; function: SetTsOutput at 0x6291 -- 0x62a1
0x6291:    81 fa 20 a1 07 00                     	cmp edx, 0x7a120
0x6297:    19 c0                                 	sbb eax, eax
0x6299:    83 e0 05                              	and eax, 5
0x629c:    83 c0 05                              	add eax, 5
0x629f:    c9                                    	leave 
0x62a0:    c3                                    	ret 
; function: Adapter_SetTsOutput at 0x62a1 -- 0x62b1
0x62a1:    55                                    	push rbp
0x62a2:    48 89 e5                              	mov rbp, rsp
0x62a5:    e8 46 89 03 00                        	call 0x3ebf0 <mcount>
0x62aa:    b8 00 00 00 00                        	mov eax, 0
0x62af:    c9                                    	leave 
0x62b0:    c3                                    	ret 
; function: Adapter_StopTsOutput at 0x62b1 -- 0x62ba
0x62b1:    55                                    	push rbp
0x62b2:    48 89 e5                              	mov rbp, rsp
0x62b5:    e8 36 89 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x62ba -- 0x62bb
0x62ba:    b8                                                 |.               |
; function: TC_RemappingTunerNumber at 0x62bb -- 0x62c1
0x62bb:    00 00                                 	add byte ptr [rax], al
0x62bd:    00 00                                 	add byte ptr [rax], al
0x62bf:    c9                                    	leave 
0x62c0:    c3                                    	ret 
; function: SetTsOutput at 0x62c1 -- 0x62eb
0x62c1:    55                                    	push rbp
0x62c2:    48 89 e5                              	mov rbp, rsp
0x62c5:    e8 26 89 03 00                        	call 0x3ebf0 <mcount>
0x62ca:    89 d0                                 	mov eax, edx
0x62cc:    89 ca                                 	mov edx, ecx
0x62ce:    45 84 c0                              	test r8b, r8b
0x62d1:    74 0b                                 	je 0x62de <SetTsOutput+0x1d>
0x62d3:    40 0f b6 f6                           	movzx esi, sil
0x62d7:    e8 d5 ff ff ff                        	call 0x62b1 <Adapter_StopTsOutput>
0x62dc:    eb 0b                                 	jmp 0x62e9 <SetTsOutput+0x28>
0x62de:    40 0f b6 f6                           	movzx esi, sil
0x62e2:    89 c1                                 	mov ecx, eax
0x62e4:    e8 b8 ff ff ff                        	call 0x62a1 <Adapter_SetTsOutput>
0x62e9:    c9                                    	leave 
0x62ea:    c3                                    	ret 
; function: TC_RemappingTunerNumber at 0x62eb -- 0x6337
0x62eb:    55                                    	push rbp
0x62ec:    48 89 e5                              	mov rbp, rsp
0x62ef:    e8 fc 88 03 00                        	call 0x3ebf0 <mcount>
0x62f4:    48 c7 c0 00 00 00 00                  	mov rax, 0
0x62fb:    ba 01 00 00 00                        	mov edx, 1
0x6300:    48 39 3d f9 07 03 00                  	cmp qword ptr [rip + 0x307f9], rdi
0x6307:    75 04                                 	jne 0x630d <TC_RemappingTunerNumber+0x22>
0x6309:    b2 00                                 	mov dl, 0
0x630b:    eb 05                                 	jmp 0x6312 <TC_RemappingTunerNumber+0x27>
0x630d:    48 39 38                              	cmp qword ptr [rax], rdi
0x6310:    75 05                                 	jne 0x6317 <TC_RemappingTunerNumber+0x2c>
0x6312:    c1 e2 03                              	shl edx, 3
0x6315:    eb 11                                 	jmp 0x6328 <TC_RemappingTunerNumber+0x3d>
0x6317:    83 c2 01                              	add edx, 1
0x631a:    48 83 c0 08                           	add rax, 8
0x631e:    83 fa 08                              	cmp edx, 8
0x6321:    75 ea                                 	jne 0x630d <TC_RemappingTunerNumber+0x22>
0x6323:    ba 00 00 00 00                        	mov edx, 0
0x6328:    80 3e 07                              	cmp byte ptr [rsi], 7
0x632b:    77 32                                 	ja 0x635f
0x632d:    0f b6 06                              	movzx eax, byte ptr [rsi]
0x6330:    ff 24 c5 00 00 00 00                  	jmp qword ptr [rax*8]
; data inside code section at 0x6337 -- 0x6338
0x6337:    c6                                                 |.               |
; function: TC_Start at 0x6338 -- 0x6339
; data inside code section at 0x6339 -- 0x633a
0x6339:    01                                                 |.               |
; function: function_633a at 0x633a -- 0x633c
0x633a:    eb 23                                 	jmp 0x635f
; function: function_633c at 0x633c -- 0x6342
0x633c:    c6 06 05                              	mov byte ptr [rsi], 5
0x633f:    90                                    	nop 
0x6340:    eb 1d                                 	jmp 0x635f
; function: function_6342 at 0x6342 -- 0x6347
0x6342:    c6 06 00                              	mov byte ptr [rsi], 0
0x6345:    eb 18                                 	jmp 0x635f
; data inside code section at 0x6347 -- 0x6348
0x6347:    c6                                                 |.               |
; function: TC_PollingThread at 0x6348 -- 0x6349
; data inside code section at 0x6349 -- 0x634a
0x6349:    04                                                 |.               |
; function: function_634a at 0x634a -- 0x634c
0x634a:    eb 13                                 	jmp 0x635f
; function: function_634c at 0x634c -- 0x6352
0x634c:    c6 06 03                              	mov byte ptr [rsi], 3
0x634f:    90                                    	nop 
0x6350:    eb 0d                                 	jmp 0x635f
; function: function_6352 at 0x6352 -- 0x6357
0x6352:    c6 06 07                              	mov byte ptr [rsi], 7
0x6355:    eb 08                                 	jmp 0x635f
; data inside code section at 0x6357 -- 0x6358
0x6357:    c6                                                 |.               |
; function: TC_PollingThreadOnlyCallOnce at 0x6358 -- 0x6368
; function: TC_PollingThreadDelayTime at 0x6368 -- 0x6378
0x6368:    55                                    	push rbp
0x6369:    48 89 e5                              	mov rbp, rsp
0x636c:    e8 7f 88 03 00                        	call 0x3ebf0 <mcount>
0x6371:    b8 01 00 00 00                        	mov eax, 1
0x6376:    c9                                    	leave 
0x6377:    c3                                    	ret 
; function: TC_CurrentTSIDRead at 0x6378 -- 0x6388
0x6378:    55                                    	push rbp
0x6379:    48 89 e5                              	mov rbp, rsp
0x637c:    e8 6f 88 03 00                        	call 0x3ebf0 <mcount>
0x6381:    b8 01 00 00 00                        	mov eax, 1
0x6386:    c9                                    	leave 
0x6387:    c3                                    	ret 
; function: TC_DriverEntryFunCall at 0x6388 -- 0x6398
0x6388:    55                                    	push rbp
0x6389:    48 89 e5                              	mov rbp, rsp
0x638c:    e8 5f 88 03 00                        	call 0x3ebf0 <mcount>
0x6391:    b8 01 00 00 00                        	mov eax, 1
0x6396:    c9                                    	leave 
0x6397:    c3                                    	ret 
; function: TC_PowerTunerDemod at 0x6398 -- 0x63a1
0x6398:    55                                    	push rbp
0x6399:    48 89 e5                              	mov rbp, rsp
0x639c:    e8 4f 88 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x63a1 -- 0x63a3
0x63a1:    b8 2c                                              |.,              |
; function: TC_ResetTunerDemod at 0x63a3 -- 0x63a8
0x63a3:    01 00                                 	add dword ptr [rax], eax
0x63a5:    00 c9                                 	add cl, cl
0x63a7:    c3                                    	ret 
; function: TC_CurrentTSIDRead at 0x63a8 -- 0x63b1
0x63a8:    55                                    	push rbp
0x63a9:    48 89 e5                              	mov rbp, rsp
0x63ac:    e8 3f 88 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x63b1 -- 0x63b3
0x63b1:    b8 01                                              |..              |
; function: TC_SleepTunerDemod at 0x63b3 -- 0x63b8
0x63b3:    00 00                                 	add byte ptr [rax], al
0x63b5:    00 c9                                 	add cl, cl
0x63b7:    c3                                    	ret 
; function: TC_DriverEntryFunCall at 0x63b8 -- 0x63c1
0x63b8:    55                                    	push rbp
0x63b9:    48 89 e5                              	mov rbp, rsp
0x63bc:    e8 2f 88 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x63c1 -- 0x63c3
0x63c1:    b8 01                                              |..              |
; function: TC_WakeupTunerDemod at 0x63c3 -- 0x63c8
0x63c3:    00 00                                 	add byte ptr [rax], al
0x63c5:    00 c9                                 	add cl, cl
0x63c7:    c3                                    	ret 
; function: TC_PowerTunerDemod at 0x63c8 -- 0x63d3
0x63c8:    55                                    	push rbp
0x63c9:    48 89 e5                              	mov rbp, rsp
0x63cc:    e8 1f 88 03 00                        	call 0x3ebf0 <mcount>
0x63d1:    c9                                    	leave 
0x63d2:    c3                                    	ret 
; function: ReadWrite_Customization_Data at 0x63d3 -- 0x63e3
0x63d3:    55                                    	push rbp
0x63d4:    48 89 e5                              	mov rbp, rsp
0x63d7:    e8 14 88 03 00                        	call 0x3ebf0 <mcount>
0x63dc:    b8 00 00 00 00                        	mov eax, 0
0x63e1:    c9                                    	leave 
0x63e2:    c3                                    	ret 
; function: Erase_Customization_Data at 0x63e3 -- 0x63f3
0x63e3:    55                                    	push rbp
0x63e4:    48 89 e5                              	mov rbp, rsp
0x63e7:    e8 04 88 03 00                        	call 0x3ebf0 <mcount>
0x63ec:    b8 00 00 00 00                        	mov eax, 0
0x63f1:    c9                                    	leave 
0x63f2:    c3                                    	ret 
; function: Get_Customization_Data_Size at 0x63f3 -- 0x6403
0x63f3:    55                                    	push rbp
0x63f4:    48 89 e5                              	mov rbp, rsp
0x63f7:    e8 f4 87 03 00                        	call 0x3ebf0 <mcount>
0x63fc:    b8 00 00 00 00                        	mov eax, 0
0x6401:    c9                                    	leave 
0x6402:    c3                                    	ret 
; function: ReadWrite_Customization_Data at 0x6403 -- 0x6407
0x6403:    55                                    	push rbp
0x6404:    48 89 e5                              	mov rbp, rsp
; data inside code section at 0x6407 -- 0x640a
0x6407:    e8 e4 87                                           |...             |
; function: Get_Tuner_Extra_Data_Size at 0x640a -- 0x6413
0x640a:    03 00                                 	add eax, dword ptr [rax]
0x640c:    b8 01 00 00 00                        	mov eax, 1
0x6411:    c9                                    	leave 
0x6412:    c3                                    	ret 
; function: Erase_Customization_Data at 0x6413 -- 0x6421
0x6413:    55                                    	push rbp
0x6414:    48 89 e5                              	mov rbp, rsp
0x6417:    e8 d4 87 03 00                        	call 0x3ebf0 <mcount>
0x641c:    b8 01 00 00 00                        	mov eax, 1
; function: GetISDBTEmergencyAlarmStatus at 0x6421 -- 0x6423
0x6421:    c9                                    	leave 
0x6422:    c3                                    	ret 
; function: Get_Customization_Data_Size at 0x6423 -- 0x642c
0x6423:    55                                    	push rbp
0x6424:    48 89 e5                              	mov rbp, rsp
0x6427:    e8 c4 87 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x642c -- 0x6431
0x642c:    48 c7 02 00 00                                     |H....           |
; function: GetSatelliteEmergencyAlarmStatus at 0x6431 -- 0x643a
0x6431:    00 00                                 	add byte ptr [rax], al
0x6433:    b8 01 00 00 00                        	mov eax, 1
0x6438:    c9                                    	leave 
0x6439:    c3                                    	ret 
; function: Get_Tuner_Extra_Data_Size at 0x643a -- 0x643e
0x643a:    55                                    	push rbp
0x643b:    48 89 e5                              	mov rbp, rsp
; data inside code section at 0x643e -- 0x6441
0x643e:    e8 ad 87                                           |...             |
; function: TC_GetBER at 0x6441 -- 0x6451
0x6441:    03 00                                 	add eax, dword ptr [rax]
0x6443:    48 c7 07 08 00 00 00                  	mov qword ptr [rdi], 8
0x644a:    b8 01 00 00 00                        	mov eax, 1
0x644f:    c9                                    	leave 
0x6450:    c3                                    	ret 
; function: TC_GetAGC at 0x6451 -- 0x6461
0x6451:    55                                    	push rbp
0x6452:    48 89 e5                              	mov rbp, rsp
0x6455:    e8 96 87 03 00                        	call 0x3ebf0 <mcount>
0x645a:    b8 00 00 00 00                        	mov eax, 0
0x645f:    c9                                    	leave 
0x6460:    c3                                    	ret 
; function: TC_GetEmergencyAlarmStatus at 0x6461 -- 0x6471
0x6461:    55                                    	push rbp
0x6462:    48 89 e5                              	mov rbp, rsp
0x6465:    e8 86 87 03 00                        	call 0x3ebf0 <mcount>
0x646a:    b8 00 00 00 00                        	mov eax, 0
0x646f:    c9                                    	leave 
0x6470:    c3                                    	ret 
; function: TC_GetBER at 0x6471 -- 0x6481
0x6471:    55                                    	push rbp
0x6472:    48 89 e5                              	mov rbp, rsp
0x6475:    e8 76 87 03 00                        	call 0x3ebf0 <mcount>
0x647a:    b8 01 00 00 00                        	mov eax, 1
0x647f:    c9                                    	leave 
0x6480:    c3                                    	ret 
; function: TC_GetAGC at 0x6481 -- 0x6491
0x6481:    55                                    	push rbp
0x6482:    48 89 e5                              	mov rbp, rsp
0x6485:    e8 66 87 03 00                        	call 0x3ebf0 <mcount>
0x648a:    b8 01 00 00 00                        	mov eax, 1
0x648f:    c9                                    	leave 
0x6490:    c3                                    	ret 
; function: TC_GetEmergencyAlarmStatus at 0x6491 -- 0x6495
0x6491:    55                                    	push rbp
0x6492:    48 89 e5                              	mov rbp, rsp
; data inside code section at 0x6495 -- 0x6499
0x6495:    e8 56 87 03                                        |.V..            |
; function: Init_Tuner_S at 0x6499 -- 0x64c9
0x6499:    00 40 80                              	add byte ptr [rax - 0x80], al
0x649c:    fe 07                                 	inc byte ptr [rdi]
0x649e:    77 22                                 	ja 0x64c2 <Init_Tuner_S+0x29>
0x64a0:    8b 42 04                              	mov eax, dword ptr [rdx + 4]
0x64a3:    85 c0                                 	test eax, eax
0x64a5:    75 0b                                 	jne 0x64b2 <Init_Tuner_S+0x19>
0x64a7:    40 0f b6 f6                           	movzx esi, sil
0x64ab:    e8 a1 ff ff ff                        	call 0x6451 <TC_GetAGC>
0x64b0:    eb 15                                 	jmp 0x64c7 <Init_Tuner_S+0x2e>
0x64b2:    83 f8 01                              	cmp eax, 1
0x64b5:    75 0b                                 	jne 0x64c2 <Init_Tuner_S+0x29>
0x64b7:    40 0f b6 f6                           	movzx esi, sil
0x64bb:    e8 a1 ff ff ff                        	call 0x6461 <TC_GetEmergencyAlarmStatus>
0x64c0:    eb 05                                 	jmp 0x64c7 <Init_Tuner_S+0x2e>
0x64c2:    b8 00 00 00 00                        	mov eax, 0
0x64c7:    c9                                    	leave 
0x64c8:    c3                                    	ret 
; function: Init_Tuner_S at 0x64c9 -- 0x6567
0x64c9:    55                                    	push rbp
0x64ca:    48 89 e5                              	mov rbp, rsp
0x64cd:    48 83 ec 40                           	sub rsp, 0x40
0x64d1:    48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x64d5:    4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x64d9:    4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x64dd:    4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x64e1:    e8 0a 87 03 00                        	call 0x3ebf0 <mcount>
0x64e6:    49 89 fc                              	mov r12, rdi
0x64e9:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x64f2:    48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x64f6:    31 c0                                 	xor eax, eax
0x64f8:    44 0f b6 ee                           	movzx r13d, sil
0x64fc:    48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x6500:    41 b8 02 00 00 00                     	mov r8d, 2
0x6506:    ba 00 00 00 00                        	mov edx, 0
0x650b:    44 89 ee                              	mov esi, r13d
0x650e:    e8 6d fc ff ff                        	call 0x6180 <Adpater_TunerT_RegRead>
0x6513:    84 c0                                 	test al, al
0x6515:    74 57                                 	je 0x656e
0x6517:    c6 45 c0 09                           	mov byte ptr [rbp - 0x40], 9
0x651b:    c6 45 c1 03                           	mov byte ptr [rbp - 0x3f], 3
0x651f:    bf 01 00 00 00                        	mov edi, 1
0x6524:    e8 78 66 01 00                        	call 0x1cba1 <TLIB_Delay>
0x6529:    48 c7 c3 00 00 00 00                  	mov rbx, 0
0x6530:    49 c7 c6 00 00 00 00                  	mov r14, 0
0x6537:    41 b8 02 00 00 00                     	mov r8d, 2
0x653d:    48 89 d9                              	mov rcx, rbx
0x6540:    ba 00 00 00 00                        	mov edx, 0
0x6545:    44 89 ee                              	mov esi, r13d
0x6548:    4c 89 e7                              	mov rdi, r12
0x654b:    e8 30 fc ff ff                        	call 0x6180 <Adpater_TunerT_RegRead>
0x6550:    84 c0                                 	test al, al
0x6552:    74 1a                                 	je 0x656e
0x6554:    48 83 c3 02                           	add rbx, 2
0x6558:    4c 39 f3                              	cmp rbx, r14
0x655b:    75 da                                 	jne 0x6537 <Init_Tuner_S+0x6e>
0x655d:    bf 05 00 00 00                        	mov edi, 5
0x6562:    e8 3a 66 01 00                        	call 0x1cba1 <TLIB_Delay>
; data inside code section at 0x6567 -- 0x6569
0x6567:    b8 01                                              |..              |
; function: Init_Tuner_T at 0x6569 -- 0x6599
0x6569:    00 00                                 	add byte ptr [rax], al
0x656b:    00 eb                                 	add bl, ch
0x656d:    05 b8 00 00 00                        	add eax, 0xb8
0x6572:    00 48 8b                              	add byte ptr [rax - 0x75], cl
0x6575:    55                                    	push rbp
0x6576:    d8 65 48                              	fsub dword ptr [rbp + 0x48]
0x6579:    33 14 25 28 00 00 00                  	xor edx, dword ptr [0x28]
0x6580:    74 05                                 	je 0x6587 <Init_Tuner_T+0x1e>
0x6582:    e8 21 86 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x6587:    48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0x658b:    4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0x658f:    4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0x6593:    4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x6597:    c9                                    	leave 
0x6598:    c3                                    	ret 
; function: Init_Tuner_T at 0x6599 -- 0x65eb
0x6599:    55                                    	push rbp
0x659a:    48 89 e5                              	mov rbp, rsp
0x659d:    41 56                                 	push r14
0x659f:    41 55                                 	push r13
0x65a1:    41 54                                 	push r12
0x65a3:    53                                    	push rbx
0x65a4:    48 83 ec 10                           	sub rsp, 0x10
0x65a8:    e8 43 86 03 00                        	call 0x3ebf0 <mcount>
0x65ad:    49 89 fc                              	mov r12, rdi
0x65b0:    44 0f b6 ee                           	movzx r13d, sil
0x65b4:    48 8d 4d d0                           	lea rcx, [rbp - 0x30]
0x65b8:    41 b8 01 00 00 00                     	mov r8d, 1
0x65be:    ba 00 00 00 00                        	mov edx, 0
0x65c3:    44 89 ee                              	mov esi, r13d
0x65c6:    e8 d5 fb ff ff                        	call 0x61a0 <Adpater_TunerT_RegWrite>
0x65cb:    84 c0                                 	test al, al
0x65cd:    74 49                                 	je 0x6618
0x65cf:    c6 45 d0 ff                           	mov byte ptr [rbp - 0x30], 0xff
0x65d3:    bf 01 00 00 00                        	mov edi, 1
0x65d8:    e8 c4 65 01 00                        	call 0x1cba1 <TLIB_Delay>
0x65dd:    48 c7 c3 00 00 00 00                  	mov rbx, 0
0x65e4:    49 c7 c6 00 00 00 00                  	mov r14, 0
; data inside code section at 0x65eb -- 0x65fa
0x65eb:    41 b8 02 00 00 00 48 89  d9 ba 00 00 00 00 44      |A.....H.......D |
; function: TC_Preset at 0x65fa -- 0x662a
0x65fa:    89 ee                                 	mov esi, ebp
0x65fc:    4c 89 e7                              	mov rdi, r12
0x65ff:    e8 9c fb ff ff                        	call 0x61a0 <Adpater_TunerT_RegWrite>
0x6604:    84 c0                                 	test al, al
0x6606:    74 10                                 	je 0x6618 <TC_Preset+0x1e>
0x6608:    48 83 c3 02                           	add rbx, 2
0x660c:    4c 39 f3                              	cmp rbx, r14
0x660f:    75 da                                 	jne 0x65eb
0x6611:    b8 01 00 00 00                        	mov eax, 1
0x6616:    eb 05                                 	jmp 0x661d <TC_Preset+0x23>
0x6618:    b8 00 00 00 00                        	mov eax, 0
0x661d:    48 83 c4 10                           	add rsp, 0x10
0x6621:    5b                                    	pop rbx
0x6622:    41 5c                                 	pop r12
0x6624:    41 5d                                 	pop r13
0x6626:    41 5e                                 	pop r14
0x6628:    c9                                    	leave 
0x6629:    c3                                    	ret 
; function: TC_Preset at 0x662a -- 0x6673
0x662a:    55                                    	push rbp
0x662b:    48 89 e5                              	mov rbp, rsp
0x662e:    53                                    	push rbx
0x662f:    48 83 ec 08                           	sub rsp, 8
0x6633:    e8 b8 85 03 00                        	call 0x3ebf0 <mcount>
0x6638:    48 89 fb                              	mov rbx, rdi
0x663b:    bf 0a 00 00 00                        	mov edi, 0xa
0x6640:    e8 5c 65 01 00                        	call 0x1cba1 <TLIB_Delay>
0x6645:    ba 01 00 00 00                        	mov edx, 1
0x664a:    be 01 00 00 00                        	mov esi, 1
0x664f:    48 89 df                              	mov rdi, rbx
0x6652:    e8 33 65 01 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x6657:    bf 0a 00 00 00                        	mov edi, 0xa
0x665c:    e8 40 65 01 00                        	call 0x1cba1 <TLIB_Delay>
0x6661:    ba 01 00 00 00                        	mov edx, 1
0x6666:    be 00 00 00 00                        	mov esi, 0
0x666b:    48 89 df                              	mov rdi, rbx
0x666e:    e8 17 65 01 00                        	call 0x1cb8a <TLIB_SetGPIO>
; data inside code section at 0x6673 -- 0x6675
0x6673:    bf 0a                                              |..              |
; function: TC_GetLNBShortDetect at 0x6675 -- 0x66a5
0x6675:    00 00                                 	add byte ptr [rax], al
0x6677:    00 e8                                 	add al, ch
0x6679:    24 65                                 	and al, 0x65
0x667b:    01 00                                 	add dword ptr [rax], eax
0x667d:    ba 01 00 00 00                        	mov edx, 1
0x6682:    be 01 00 00 00                        	mov esi, 1
0x6687:    48 89 df                              	mov rdi, rbx
0x668a:    e8 fb 64 01 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x668f:    bf 0a 00 00 00                        	mov edi, 0xa
0x6694:    e8 08 65 01 00                        	call 0x1cba1 <TLIB_Delay>
0x6699:    b8 01 00 00 00                        	mov eax, 1
0x669e:    48 83 c4 08                           	add rsp, 8
0x66a2:    5b                                    	pop rbx
0x66a3:    c9                                    	leave 
0x66a4:    c3                                    	ret 
; function: TC_GetLNBShortDetect at 0x66a5 -- 0x66d4
0x66a5:    55                                    	push rbp
0x66a6:    48 89 e5                              	mov rbp, rsp
0x66a9:    53                                    	push rbx
0x66aa:    48 83 ec 18                           	sub rsp, 0x18
0x66ae:    e8 3d 85 03 00                        	call 0x3ebf0 <mcount>
0x66b3:    48 89 d3                              	mov rbx, rdx
0x66b6:    c6 02 00                              	mov byte ptr [rdx], 0
0x66b9:    40 80 fe 07                           	cmp sil, 7
0x66bd:    77 3d                                 	ja 0x66fc
0x66bf:    48 8d 4d ef                           	lea rcx, [rbp - 0x11]
0x66c3:    41 b9 00 00 00 00                     	mov r9d, 0
0x66c9:    41 b8 01 00 00 00                     	mov r8d, 1
0x66cf:    ba 0c 00 00 00                        	mov edx, 0xc ; "GNU"
; data inside code section at 0x66d4 -- 0x66d8
0x66d4:    be 4a 00 00                                        |.J..            |
; function: DemodRegRead at 0x66d8 -- 0x6708
0x66d8:    00 e8                                 	add al, ch
; data inside code section at 0x66da -- 0x66fc
0x66da:    82 65 01 00 84 c0 74 1a  f6 45 ef 01 74 0a c6 03   |.e....t..E..t...|
0x66ea:    00 b8 01 00 00 00 eb 0f  c6 03 01 b8 01 00 00 00   |................|
0x66fa:    eb 05                                              |..              |
0x66fc:    b8 00 00 00 00                        	mov eax, 0
0x6701:    48 83 c4 18                           	add rsp, 0x18
0x6705:    5b                                    	pop rbx
0x6706:    c9                                    	leave 
0x6707:    c3                                    	ret 
; function: DemodRegRead at 0x6708 -- 0x672d
0x6708:    55                                    	push rbp
0x6709:    48 89 e5                              	mov rbp, rsp
0x670c:    e8 df 84 03 00                        	call 0x3ebf0 <mcount>
0x6711:    40 80 fe 07                           	cmp sil, 7
0x6715:    77 40                                 	ja 0x6757
0x6717:    45 85 c9                              	test r9d, r9d
0x671a:    75 1c                                 	jne 0x6738
0x671c:    0f b6 d2                              	movzx edx, dl
0x671f:    40 0f b6 f6                           	movzx esi, sil
0x6723:    0f b6 b6 00 00 00 00                  	movzx esi, byte ptr [rsi]
0x672a:    41 b1 01                              	mov r9b, 1
; data inside code section at 0x672d -- 0x672e
0x672d:    45                                                 |E               |
; function: GetSatelliteAGC at 0x672e -- 0x675e
0x672e:    0f b6 c0                              	movzx eax, al
0x6731:    e8 2a 65 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x6736:    eb 24                                 	jmp 0x675c <GetSatelliteAGC+0x2e>
0x6738:    41 83 f9 01                           	cmp r9d, 1
0x673c:    75 19                                 	jne 0x6757 <GetSatelliteAGC+0x29>
0x673e:    0f b6 d2                              	movzx edx, dl
0x6741:    40 0f b6 f6                           	movzx esi, sil
0x6745:    0f b6 b6 00 00 00 00                  	movzx esi, byte ptr [rsi]
0x674c:    45 0f b6 c0                           	movzx r8d, r8b
0x6750:    e8 0b 65 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x6755:    eb 05                                 	jmp 0x675c <GetSatelliteAGC+0x2e>
0x6757:    b8 00 00 00 00                        	mov eax, 0
0x675c:    c9                                    	leave 
0x675d:    c3                                    	ret 
; function: GetSatelliteAGC at 0x675e -- 0x676b
0x675e:    55                                    	push rbp
0x675f:    48 89 e5                              	mov rbp, rsp
0x6762:    48 83 ec 10                           	sub rsp, 0x10
0x6766:    e8 85 84 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x676b -- 0x676d
0x676b:    48 8d                                              |H.              |
; function: GetISDBTAGC at 0x676d -- 0x679d
0x676d:    4d ff 40 0f                           	inc qword ptr [r8 + 0xf]
0x6771:    b6 f6                                 	mov dh, 0xf6
0x6773:    41 b9 01 00 00 00                     	mov r9d, 1
0x6779:    41 b8 01 00 00 00                     	mov r8d, 1
0x677f:    ba ba 00 00 00                        	mov edx, 0xba
0x6784:    e8 7f ff ff ff                        	call 0x6708 <DemodRegRead>
0x6789:    89 c2                                 	mov edx, eax
0x678b:    b8 00 00 00 00                        	mov eax, 0
0x6790:    84 d2                                 	test dl, dl
0x6792:    74 07                                 	je 0x679b <GetISDBTAGC+0x2e>
0x6794:    0f b6 45 ff                           	movzx eax, byte ptr [rbp - 1]
0x6798:    83 e0 7f                              	and eax, 0x7f
0x679b:    c9                                    	leave 
0x679c:    c3                                    	ret 
; function: GetISDBTAGC at 0x679d -- 0x67a5
0x679d:    55                                    	push rbp
0x679e:    48 89 e5                              	mov rbp, rsp
0x67a1:    48 83 ec 10                           	sub rsp, 0x10
; data inside code section at 0x67a5 -- 0x67a9
0x67a5:    e8 46 84 03                                        |.F..            |
; function: GetSatelliteBER at 0x67a9 -- 0x67d9
0x67a9:    00 48 8d                              	add byte ptr [rax - 0x73], cl
0x67ac:    4d ff 40 0f                           	inc qword ptr [r8 + 0xf]
0x67b0:    b6 f6                                 	mov dh, 0xf6
0x67b2:    41 b9 00 00 00 00                     	mov r9d, 0
0x67b8:    41 b8 01 00 00 00                     	mov r8d, 1
0x67be:    ba 82 00 00 00                        	mov edx, 0x82
0x67c3:    e8 40 ff ff ff                        	call 0x6708 <DemodRegRead>
0x67c8:    89 c2                                 	mov edx, eax
0x67ca:    b8 00 00 00 00                        	mov eax, 0
0x67cf:    84 d2                                 	test dl, dl
0x67d1:    74 04                                 	je 0x67d7 <GetSatelliteBER+0x2e>
0x67d3:    0f b6 45 ff                           	movzx eax, byte ptr [rbp - 1]
0x67d7:    c9                                    	leave 
0x67d8:    c3                                    	ret 
; function: GetSatelliteBER at 0x67d9 -- 0x6887
0x67d9:    55                                    	push rbp
0x67da:    48 89 e5                              	mov rbp, rsp
0x67dd:    48 83 ec 30                           	sub rsp, 0x30
0x67e1:    48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x67e5:    4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x67e9:    4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x67ed:    4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x67f1:    e8 fa 83 03 00                        	call 0x3ebf0 <mcount>
0x67f6:    49 89 fe                              	mov r14, rdi
0x67f9:    48 89 d3                              	mov rbx, rdx
0x67fc:    49 89 cc                              	mov r12, rcx
0x67ff:    48 c7 02 00 e1 f5 05                  	mov qword ptr [rdx], 0x5f5e100
0x6806:    48 c7 01 00 e1 f5 05                  	mov qword ptr [rcx], 0x5f5e100
0x680d:    44 0f b6 ee                           	movzx r13d, sil
0x6811:    48 8d 4d d0                           	lea rcx, [rbp - 0x30]
0x6815:    41 b9 01 00 00 00                     	mov r9d, 1
0x681b:    41 b8 03 00 00 00                     	mov r8d, 3
0x6821:    ba f0 00 00 00                        	mov edx, 0xf0
0x6826:    44 89 ee                              	mov esi, r13d
0x6829:    e8 da fe ff ff                        	call 0x6708 <DemodRegRead>
0x682e:    84 c0                                 	test al, al
0x6830:    74 6e                                 	je 0x68a0
0x6832:    0f b6 55 d0                           	movzx edx, byte ptr [rbp - 0x30]
0x6836:    c1 e2 10                              	shl edx, 0x10
0x6839:    0f b6 45 d1                           	movzx eax, byte ptr [rbp - 0x2f]
0x683d:    c1 e0 08                              	shl eax, 8
0x6840:    09 d0                                 	or eax, edx
0x6842:    0f b6 55 d2                           	movzx edx, byte ptr [rbp - 0x2e]
0x6846:    09 d0                                 	or eax, edx
0x6848:    8d 04 80                              	lea eax, [rax + rax*4]
0x684b:    c1 e0 04                              	shl eax, 4
0x684e:    89 c0                                 	mov eax, eax
0x6850:    48 89 03                              	mov qword ptr [rbx], rax
0x6853:    48 8d 4d d0                           	lea rcx, [rbp - 0x30]
0x6857:    41 b9 01 00 00 00                     	mov r9d, 1
0x685d:    41 b8 03 00 00 00                     	mov r8d, 3
0x6863:    ba eb 00 00 00                        	mov edx, 0xeb ; "%("
0x6868:    44 89 ee                              	mov esi, r13d
0x686b:    4c 89 f7                              	mov rdi, r14
0x686e:    e8 95 fe ff ff                        	call 0x6708 <DemodRegRead>
0x6873:    84 c0                                 	test al, al
0x6875:    74 29                                 	je 0x68a0
0x6877:    0f b6 55 d0                           	movzx edx, byte ptr [rbp - 0x30]
0x687b:    c1 e2 10                              	shl edx, 0x10
0x687e:    0f b6 45 d1                           	movzx eax, byte ptr [rbp - 0x2f]
0x6882:    c1 e0 08                              	shl eax, 8
0x6885:    09 d0                                 	or eax, edx
; function: GetISDBTBER at 0x6887 -- 0x68b7
0x6887:    0f b6 55 d2                           	movzx edx, byte ptr [rbp - 0x2e]
0x688b:    09 d0                                 	or eax, edx
0x688d:    8d 04 80                              	lea eax, [rax + rax*4]
0x6890:    c1 e0 04                              	shl eax, 4
0x6893:    89 c0                                 	mov eax, eax
0x6895:    49 89 04 24                           	mov qword ptr [r12], rax
0x6899:    b8 01 00 00 00                        	mov eax, 1
0x689e:    eb 05                                 	jmp 0x68a5 <GetISDBTBER+0x1e>
0x68a0:    b8 00 00 00 00                        	mov eax, 0
0x68a5:    48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0x68a9:    4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0x68ad:    4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0x68b1:    4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x68b5:    c9                                    	leave 
0x68b6:    c3                                    	ret 
; function: GetISDBTBER at 0x68b7 -- 0x6a0e
0x68b7:    55                                    	push rbp
0x68b8:    48 89 e5                              	mov rbp, rsp
0x68bb:    48 83 ec 60                           	sub rsp, 0x60
0x68bf:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x68c3:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x68c7:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x68cb:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x68cf:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x68d3:    e8 18 83 03 00                        	call 0x3ebf0 <mcount>
0x68d8:    49 89 fc                              	mov r12, rdi
0x68db:    49 89 d5                              	mov r13, rdx
0x68de:    49 89 ce                              	mov r14, rcx
0x68e1:    48 c7 02 00 e1 f5 05                  	mov qword ptr [rdx], 0x5f5e100
0x68e8:    48 c7 01 00 e1 f5 05                  	mov qword ptr [rcx], 0x5f5e100
0x68ef:    40 0f b6 de                           	movzx ebx, sil
0x68f3:    48 8d 4d b0                           	lea rcx, [rbp - 0x50]
0x68f7:    41 b9 00 00 00 00                     	mov r9d, 0
0x68fd:    41 b8 03 00 00 00                     	mov r8d, 3
0x6903:    ba 9d 00 00 00                        	mov edx, 0x9d
0x6908:    89 de                                 	mov esi, ebx
0x690a:    e8 f9 fd ff ff                        	call 0x6708 <DemodRegRead>
0x690f:    84 c0                                 	test al, al
0x6911:    0f 84 0c 01 00 00                     	je 0x6a23
0x6917:    44 0f b6 7d b0                        	movzx r15d, byte ptr [rbp - 0x50]
0x691c:    0f b6 45 b1                           	movzx eax, byte ptr [rbp - 0x4f]
0x6920:    88 45 ae                              	mov byte ptr [rbp - 0x52], al
0x6923:    0f b6 45 b2                           	movzx eax, byte ptr [rbp - 0x4e]
0x6927:    88 45 af                              	mov byte ptr [rbp - 0x51], al
0x692a:    48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x692e:    41 b9 00 00 00 00                     	mov r9d, 0
0x6934:    41 b8 02 00 00 00                     	mov r8d, 2
0x693a:    ba a6 00 00 00                        	mov edx, 0xa6
0x693f:    89 de                                 	mov esi, ebx
0x6941:    4c 89 e7                              	mov rdi, r12
0x6944:    e8 bf fd ff ff                        	call 0x6708 <DemodRegRead>
0x6949:    84 c0                                 	test al, al
0x694b:    0f 84 d2 00 00 00                     	je 0x6a23
0x6951:    0f b6 4d c0                           	movzx ecx, byte ptr [rbp - 0x40]
0x6955:    c1 e1 08                              	shl ecx, 8
0x6958:    0f b6 45 c1                           	movzx eax, byte ptr [rbp - 0x3f]
0x695c:    09 c1                                 	or ecx, eax
0x695e:    b8 5a ef 00 00                        	mov eax, 0xef5a
0x6963:    ba 00 00 00 00                        	mov edx, 0
0x6968:    f7 f1                                 	div ecx
0x696a:    45 0f b6 ff                           	movzx r15d, r15b
0x696e:    41 c1 e7 10                           	shl r15d, 0x10
0x6972:    0f b6 55 ae                           	movzx edx, byte ptr [rbp - 0x52]
0x6976:    c1 e2 08                              	shl edx, 8
0x6979:    41 09 d7                              	or r15d, edx
0x697c:    0f b6 55 af                           	movzx edx, byte ptr [rbp - 0x51]
0x6980:    41 09 d7                              	or r15d, edx
0x6983:    41 0f af c7                           	imul eax, r15d
0x6987:    49 89 45 00                           	mov qword ptr [r13], rax
0x698b:    48 8d 4d b0                           	lea rcx, [rbp - 0x50]
0x698f:    41 b9 00 00 00 00                     	mov r9d, 0
0x6995:    41 b8 03 00 00 00                     	mov r8d, 3
0x699b:    ba a0 00 00 00                        	mov edx, 0xa0
0x69a0:    89 de                                 	mov esi, ebx
0x69a2:    4c 89 e7                              	mov rdi, r12
0x69a5:    e8 5e fd ff ff                        	call 0x6708 <DemodRegRead>
0x69aa:    84 c0                                 	test al, al
0x69ac:    74 75                                 	je 0x6a23
0x69ae:    44 0f b6 6d b0                        	movzx r13d, byte ptr [rbp - 0x50]
0x69b3:    44 0f b6 7d b1                        	movzx r15d, byte ptr [rbp - 0x4f]
0x69b8:    0f b6 45 b2                           	movzx eax, byte ptr [rbp - 0x4e]
0x69bc:    88 45 af                              	mov byte ptr [rbp - 0x51], al
0x69bf:    48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x69c3:    41 b9 00 00 00 00                     	mov r9d, 0
0x69c9:    41 b8 02 00 00 00                     	mov r8d, 2
0x69cf:    ba a6 00 00 00                        	mov edx, 0xa6
0x69d4:    89 de                                 	mov esi, ebx
0x69d6:    4c 89 e7                              	mov rdi, r12
0x69d9:    e8 2a fd ff ff                        	call 0x6708 <DemodRegRead>
0x69de:    84 c0                                 	test al, al
0x69e0:    74 41                                 	je 0x6a23
0x69e2:    0f b6 4d c0                           	movzx ecx, byte ptr [rbp - 0x40]
0x69e6:    c1 e1 08                              	shl ecx, 8
0x69e9:    0f b6 45 c1                           	movzx eax, byte ptr [rbp - 0x3f]
0x69ed:    09 c1                                 	or ecx, eax
0x69ef:    b8 5a ef 00 00                        	mov eax, 0xef5a
0x69f4:    ba 00 00 00 00                        	mov edx, 0
0x69f9:    f7 f1                                 	div ecx
0x69fb:    45 0f b6 ed                           	movzx r13d, r13b
0x69ff:    41 c1 e5 10                           	shl r13d, 0x10
0x6a03:    45 0f b6 ff                           	movzx r15d, r15b
0x6a07:    41 c1 e7 08                           	shl r15d, 8
0x6a0b:    45 09 fd                              	or r13d, r15d
; function: GetSatelliteCNRegister at 0x6a0e -- 0x6a3e
0x6a0e:    0f b6 55 af                           	movzx edx, byte ptr [rbp - 0x51]
0x6a12:    41 09 d5                              	or r13d, edx
0x6a15:    41 0f af c5                           	imul eax, r13d
0x6a19:    49 89 06                              	mov qword ptr [r14], rax
0x6a1c:    b8 01 00 00 00                        	mov eax, 1
0x6a21:    eb 05                                 	jmp 0x6a28 <GetSatelliteCNRegister+0x1a>
0x6a23:    b8 00 00 00 00                        	mov eax, 0
0x6a28:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x6a2c:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x6a30:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x6a34:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x6a38:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x6a3c:    c9                                    	leave 
0x6a3d:    c3                                    	ret 
; function: GetSatelliteCNRegister at 0x6a3e -- 0x6a53
0x6a3e:    55                                    	push rbp
0x6a3f:    48 89 e5                              	mov rbp, rsp
0x6a42:    48 83 ec 10                           	sub rsp, 0x10
0x6a46:    e8 a5 81 03 00                        	call 0x3ebf0 <mcount>
0x6a4b:    48 8d 4d f0                           	lea rcx, [rbp - 0x10]
0x6a4f:    40 0f b6 f6                           	movzx esi, sil
; data inside code section at 0x6a53 -- 0x6a55
0x6a53:    41 b9                                              |A.              |
; function: GetSatelliteCN at 0x6a55 -- 0x6a85
0x6a55:    01 00                                 	add dword ptr [rax], eax
0x6a57:    00 00                                 	add byte ptr [rax], al
0x6a59:    41 b8 02 00 00 00                     	mov r8d, 2
0x6a5f:    ba bc 00 00 00                        	mov edx, 0xbc
0x6a64:    e8 9f fc ff ff                        	call 0x6708 <DemodRegRead>
0x6a69:    89 c2                                 	mov edx, eax
0x6a6b:    b8 00 00 00 00                        	mov eax, 0
0x6a70:    84 d2                                 	test dl, dl
0x6a72:    74 0f                                 	je 0x6a83 <GetSatelliteCN+0x2e>
0x6a74:    0f b6 45 f0                           	movzx eax, byte ptr [rbp - 0x10]
0x6a78:    c1 e0 08                              	shl eax, 8
0x6a7b:    0f b6 55 f1                           	movzx edx, byte ptr [rbp - 0xf]
0x6a7f:    09 d0                                 	or eax, edx
0x6a81:    89 c0                                 	mov eax, eax
0x6a83:    c9                                    	leave 
0x6a84:    c3                                    	ret 
; function: GetSatelliteCN at 0x6a85 -- 0x6b46
0x6a85:    55                                    	push rbp
0x6a86:    48 89 e5                              	mov rbp, rsp
0x6a89:    48 83 ec 10                           	sub rsp, 0x10
0x6a8d:    e8 5e 81 03 00                        	call 0x3ebf0 <mcount>
0x6a92:    48 8d 4d f0                           	lea rcx, [rbp - 0x10]
0x6a96:    40 0f b6 f6                           	movzx esi, sil
0x6a9a:    41 b9 01 00 00 00                     	mov r9d, 1
0x6aa0:    41 b8 02 00 00 00                     	mov r8d, 2
0x6aa6:    ba bc 00 00 00                        	mov edx, 0xbc
0x6aab:    e8 58 fc ff ff                        	call 0x6708 <DemodRegRead>
0x6ab0:    84 c0                                 	test al, al
0x6ab2:    0f 84 b9 00 00 00                     	je 0x6b71
0x6ab8:    0f b6 75 f0                           	movzx esi, byte ptr [rbp - 0x10]
0x6abc:    c1 e6 08                              	shl esi, 8
0x6abf:    0f b6 45 f1                           	movzx eax, byte ptr [rbp - 0xf]
0x6ac3:    09 c6                                 	or esi, eax
0x6ac5:    89 f6                                 	mov esi, esi
0x6ac7:    48 81 fe b7 0b 00 00                  	cmp rsi, 0xbb7
0x6ace:    0f 86 9d 00 00 00                     	jbe 0x6b71
0x6ad4:    48 c7 c0 00 00 00 00                  	mov rax, 0
0x6adb:    41 b8 03 00 00 00                     	mov r8d, 3
0x6ae1:    48 81 fe f1 8b 00 00                  	cmp rsi, 0x8bf1
0x6ae8:    76 10                                 	jbe 0x6afa <GetSatelliteCN+0x75>
0x6aea:    eb 67                                 	jmp 0x6b53
0x6aec:    41 83 c0 01                           	add r8d, 1
0x6af0:    48 83 c0 08                           	add rax, 8
0x6af4:    41 83 f8 1f                           	cmp r8d, 0x1f
0x6af8:    74 65                                 	je 0x6b5f
0x6afa:    48 3b 30                              	cmp rsi, qword ptr [rax]
0x6afd:    76 ed                                 	jbe 0x6aec <GetSatelliteCN+0x67>
0x6aff:    41 83 f8 02                           	cmp r8d, 2
0x6b03:    74 4e                                 	je 0x6b53
0x6b05:    41 83 f8 1f                           	cmp r8d, 0x1f
0x6b09:    74 54                                 	je 0x6b5f
0x6b0b:    41 8d 48 ff                           	lea ecx, [r8 - 1]
0x6b0f:    89 c8                                 	mov eax, ecx
0x6b11:    49 c7 c1 00 00 00 00                  	mov r9, 0
0x6b18:    49 8b 14 c1                           	mov rdx, qword ptr [r9 + rax*8]
0x6b1c:    48 89 d0                              	mov rax, rdx
0x6b1f:    48 29 f0                              	sub rax, rsi
0x6b22:    48 89 c6                              	mov rsi, rax
0x6b25:    45 89 c0                              	mov r8d, r8d
0x6b28:    4b 2b 14 c1                           	sub rdx, qword ptr [r9 + r8*8]
0x6b2c:    48 bf cd cc cc cc cc cc cc cc         	movabs rdi, 0xcccccccccccccccd
0x6b36:    48 89 d0                              	mov rax, rdx
0x6b39:    48 f7 e7                              	mul rdi
0x6b3c:    48 89 d7                              	mov rdi, rdx
0x6b3f:    48 c1 ef 03                           	shr rdi, 3
0x6b43:    48 89 f0                              	mov rax, rsi
; data inside code section at 0x6b46 -- 0x6b48
0x6b46:    ba 00                                              |..              |
; function: GetISDBTCNRegister at 0x6b48 -- 0x6b78
0x6b48:    00 00                                 	add byte ptr [rax], al
0x6b4a:    00 48 f7                              	add byte ptr [rax - 9], cl
0x6b4d:    f7 48 89 c6 eb 16 be                  	test dword ptr [rax - 0x77], 0xbe16ebc6
0x6b54:    00 00                                 	add byte ptr [rax], al
0x6b56:    00 00                                 	add byte ptr [rax], al
0x6b58:    b9 00 00 00 00                        	mov ecx, 0
0x6b5d:    eb 0a                                 	jmp 0x6b69 <GetISDBTCNRegister+0x21>
0x6b5f:    be 00 00 00 00                        	mov esi, 0
0x6b64:    b9 1e 00 00 00                        	mov ecx, 0x1e
0x6b69:    6b c9 64                              	imul ecx, ecx, 0x64
0x6b6c:    8d 04 31                              	lea eax, [rcx + rsi]
0x6b6f:    eb 05                                 	jmp 0x6b76 <GetISDBTCNRegister+0x2e>
0x6b71:    b8 00 00 00 00                        	mov eax, 0
0x6b76:    c9                                    	leave 
0x6b77:    c3                                    	ret 
; function: GetISDBTCNRegister at 0x6b78 -- 0x6b93
0x6b78:    55                                    	push rbp
0x6b79:    48 89 e5                              	mov rbp, rsp
0x6b7c:    48 83 ec 10                           	sub rsp, 0x10
0x6b80:    e8 6b 80 03 00                        	call 0x3ebf0 <mcount>
0x6b85:    48 8d 4d f0                           	lea rcx, [rbp - 0x10]
0x6b89:    40 0f b6 f6                           	movzx esi, sil
0x6b8d:    41 b9 00 00 00 00                     	mov r9d, 0
; data inside code section at 0x6b93 -- 0x6b98
0x6b93:    41 b8 03 00 00                                     |A....           |
; function: GetISDBTCN at 0x6b98 -- 0x6bc8
0x6b98:    00 ba 8b 00 00 00                     	add byte ptr [rdx + 0x8b], bh
0x6b9e:    e8 65 fb ff ff                        	call 0x6708 <DemodRegRead>
0x6ba3:    89 c2                                 	mov edx, eax
0x6ba5:    b8 00 00 00 00                        	mov eax, 0
0x6baa:    84 d2                                 	test dl, dl
0x6bac:    74 18                                 	je 0x6bc6 <GetISDBTCN+0x2e>
0x6bae:    0f b6 55 f0                           	movzx edx, byte ptr [rbp - 0x10]
0x6bb2:    c1 e2 10                              	shl edx, 0x10
0x6bb5:    0f b6 45 f1                           	movzx eax, byte ptr [rbp - 0xf]
0x6bb9:    c1 e0 08                              	shl eax, 8
0x6bbc:    09 d0                                 	or eax, edx
0x6bbe:    0f b6 55 f2                           	movzx edx, byte ptr [rbp - 0xe]
0x6bc2:    09 d0                                 	or eax, edx
0x6bc4:    89 c0                                 	mov eax, eax
0x6bc6:    c9                                    	leave 
0x6bc7:    c3                                    	ret 
; function: GetISDBTCN at 0x6bc8 -- 0x6c85
0x6bc8:    55                                    	push rbp
0x6bc9:    48 89 e5                              	mov rbp, rsp
0x6bcc:    48 83 ec 10                           	sub rsp, 0x10
0x6bd0:    e8 1b 80 03 00                        	call 0x3ebf0 <mcount>
0x6bd5:    48 8d 4d f0                           	lea rcx, [rbp - 0x10]
0x6bd9:    40 0f b6 f6                           	movzx esi, sil
0x6bdd:    41 b9 00 00 00 00                     	mov r9d, 0
0x6be3:    41 b8 03 00 00 00                     	mov r8d, 3
0x6be9:    ba 8b 00 00 00                        	mov edx, 0x8b
0x6bee:    e8 15 fb ff ff                        	call 0x6708 <DemodRegRead>
0x6bf3:    89 c2                                 	mov edx, eax
0x6bf5:    b8 00 00 00 00                        	mov eax, 0
0x6bfa:    84 d2                                 	test dl, dl
0x6bfc:    0f 84 b3 00 00 00                     	je 0x6cb5
0x6c02:    0f b6 75 f0                           	movzx esi, byte ptr [rbp - 0x10]
0x6c06:    c1 e6 10                              	shl esi, 0x10
0x6c09:    0f b6 45 f1                           	movzx eax, byte ptr [rbp - 0xf]
0x6c0d:    c1 e0 08                              	shl eax, 8
0x6c10:    09 c6                                 	or esi, eax
0x6c12:    0f b6 45 f2                           	movzx eax, byte ptr [rbp - 0xe]
0x6c16:    09 c6                                 	or esi, eax
0x6c18:    89 f6                                 	mov esi, esi
0x6c1a:    48 c7 c0 00 00 00 00                  	mov rax, 0
0x6c21:    41 b8 03 00 00 00                     	mov r8d, 3
0x6c27:    48 81 fe 00 35 95 00                  	cmp rsi, 0x953500
0x6c2e:    76 10                                 	jbe 0x6c40 <GetISDBTCN+0x78>
0x6c30:    eb 67                                 	jmp 0x6c99
0x6c32:    41 83 c0 01                           	add r8d, 1
0x6c36:    48 83 c0 08                           	add rax, 8
0x6c3a:    41 83 f8 1f                           	cmp r8d, 0x1f
0x6c3e:    74 65                                 	je 0x6ca5
0x6c40:    48 3b 30                              	cmp rsi, qword ptr [rax]
0x6c43:    76 ed                                 	jbe 0x6c32 <GetISDBTCN+0x6a>
0x6c45:    41 83 f8 02                           	cmp r8d, 2
0x6c49:    74 4e                                 	je 0x6c99
0x6c4b:    41 83 f8 1f                           	cmp r8d, 0x1f
0x6c4f:    74 54                                 	je 0x6ca5
0x6c51:    41 8d 48 ff                           	lea ecx, [r8 - 1]
0x6c55:    89 c8                                 	mov eax, ecx
0x6c57:    49 c7 c1 00 00 00 00                  	mov r9, 0
0x6c5e:    49 8b 14 c1                           	mov rdx, qword ptr [r9 + rax*8]
0x6c62:    48 89 d0                              	mov rax, rdx
0x6c65:    48 29 f0                              	sub rax, rsi
0x6c68:    48 89 c6                              	mov rsi, rax
0x6c6b:    45 89 c0                              	mov r8d, r8d
0x6c6e:    4b 2b 14 c1                           	sub rdx, qword ptr [r9 + r8*8]
0x6c72:    48 bf cd cc cc cc cc cc cc cc         	movabs rdi, 0xcccccccccccccccd
0x6c7c:    48 89 d0                              	mov rax, rdx
0x6c7f:    48 f7 e7                              	mul rdi
0x6c82:    48 89 d7                              	mov rdi, rdx
; data inside code section at 0x6c85 -- 0x6c87
0x6c85:    48 c1                                              |H.              |
; function: Adapter_ReadSNR_S at 0x6c87 -- 0x6cb7
0x6c87:    ef                                    	out dx, eax
0x6c88:    03 48 89                              	add ecx, dword ptr [rax - 0x77]
; data inside code section at 0x6c8b -- 0x6c8c
0x6c8b:    f0                                                 |.               |
0x6c8c:    ba 00 00 00 00                        	mov edx, 0
0x6c91:    48 f7 f7                              	div rdi
0x6c94:    48 89 c6                              	mov rsi, rax
0x6c97:    eb 16                                 	jmp 0x6caf <Adapter_ReadSNR_S+0x28>
0x6c99:    be 00 00 00 00                        	mov esi, 0
0x6c9e:    b9 00 00 00 00                        	mov ecx, 0
0x6ca3:    eb 0a                                 	jmp 0x6caf <Adapter_ReadSNR_S+0x28>
0x6ca5:    be 00 00 00 00                        	mov esi, 0
0x6caa:    b9 1e 00 00 00                        	mov ecx, 0x1e
0x6caf:    6b c9 64                              	imul ecx, ecx, 0x64
0x6cb2:    8d 04 31                              	lea eax, [rcx + rsi]
0x6cb5:    c9                                    	leave 
0x6cb6:    c3                                    	ret 
; function: Adapter_ReadSNR_S at 0x6cb7 -- 0x6cee
0x6cb7:    55                                    	push rbp
0x6cb8:    48 89 e5                              	mov rbp, rsp
0x6cbb:    53                                    	push rbx
0x6cbc:    48 83 ec 18                           	sub rsp, 0x18
0x6cc0:    e8 2b 7f 03 00                        	call 0x3ebf0 <mcount>
0x6cc5:    40 0f b6 de                           	movzx ebx, sil
0x6cc9:    48 8d 4d e0                           	lea rcx, [rbp - 0x20]
0x6ccd:    41 b9 01 00 00 00                     	mov r9d, 1
0x6cd3:    41 b8 03 00 00 00                     	mov r8d, 3
0x6cd9:    ba f0 00 00 00                        	mov edx, 0xf0
0x6cde:    89 de                                 	mov esi, ebx
0x6ce0:    e8 23 fa ff ff                        	call 0x6708 <DemodRegRead>
0x6ce5:    89 c2                                 	mov edx, eax
0x6ce7:    b8 00 00 00 00                        	mov eax, 0
0x6cec:    84 d2                                 	test dl, dl
; function: Adapter_ReadSNR_T at 0x6cee -- 0x6d1e
0x6cee:    74 27                                 	je 0x6d17 <Adapter_ReadSNR_T+0x29>
0x6cf0:    0f b6 7d e0                           	movzx edi, byte ptr [rbp - 0x20]
0x6cf4:    c1 e7 10                              	shl edi, 0x10
0x6cf7:    0f b6 45 e1                           	movzx eax, byte ptr [rbp - 0x1f]
0x6cfb:    c1 e0 08                              	shl eax, 8
0x6cfe:    09 c7                                 	or edi, eax
0x6d00:    0f b6 45 e2                           	movzx eax, byte ptr [rbp - 0x1e]
0x6d04:    09 c7                                 	or edi, eax
0x6d06:    b9 01 00 00 00                        	mov ecx, 1
0x6d0b:    89 da                                 	mov edx, ebx
0x6d0d:    be 00 00 00 00                        	mov esi, 0
0x6d12:    e8 a9 f4 ff ff                        	call 0x61c0 <Ber_to_Signal_Quality>
0x6d17:    48 83 c4 18                           	add rsp, 0x18
0x6d1b:    5b                                    	pop rbx
0x6d1c:    c9                                    	leave 
0x6d1d:    c3                                    	ret 
; function: Adapter_ReadSNR_T at 0x6d1e -- 0x6db7
0x6d1e:    55                                    	push rbp
0x6d1f:    48 89 e5                              	mov rbp, rsp
0x6d22:    48 83 ec 50                           	sub rsp, 0x50
0x6d26:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x6d2a:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x6d2e:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x6d32:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x6d36:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x6d3a:    e8 b1 7e 03 00                        	call 0x3ebf0 <mcount>
0x6d3f:    49 89 fc                              	mov r12, rdi
0x6d42:    40 0f b6 de                           	movzx ebx, sil
0x6d46:    48 8d 4d b0                           	lea rcx, [rbp - 0x50]
0x6d4a:    41 b9 00 00 00 00                     	mov r9d, 0
0x6d50:    41 b8 03 00 00 00                     	mov r8d, 3
0x6d56:    ba 9d 00 00 00                        	mov edx, 0x9d
0x6d5b:    89 de                                 	mov esi, ebx
0x6d5d:    e8 a6 f9 ff ff                        	call 0x6708 <DemodRegRead>
0x6d62:    84 c0                                 	test al, al
0x6d64:    74 66                                 	je 0x6dcc
0x6d66:    44 0f b6 6d b0                        	movzx r13d, byte ptr [rbp - 0x50]
0x6d6b:    44 0f b6 75 b1                        	movzx r14d, byte ptr [rbp - 0x4f]
0x6d70:    44 0f b6 7d b2                        	movzx r15d, byte ptr [rbp - 0x4e]
0x6d75:    48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x6d79:    41 b9 00 00 00 00                     	mov r9d, 0
0x6d7f:    41 b8 02 00 00 00                     	mov r8d, 2
0x6d85:    ba a6 00 00 00                        	mov edx, 0xa6
0x6d8a:    89 de                                 	mov esi, ebx
0x6d8c:    4c 89 e7                              	mov rdi, r12
0x6d8f:    e8 74 f9 ff ff                        	call 0x6708 <DemodRegRead>
0x6d94:    84 c0                                 	test al, al
0x6d96:    74 34                                 	je 0x6dcc
0x6d98:    0f b6 75 c0                           	movzx esi, byte ptr [rbp - 0x40]
0x6d9c:    c1 e6 08                              	shl esi, 8
0x6d9f:    0f b6 45 c1                           	movzx eax, byte ptr [rbp - 0x3f]
0x6da3:    09 c6                                 	or esi, eax
0x6da5:    41 0f b6 fd                           	movzx edi, r13b
0x6da9:    c1 e7 10                              	shl edi, 0x10
0x6dac:    45 0f b6 f6                           	movzx r14d, r14b
0x6db0:    41 c1 e6 08                           	shl r14d, 8
0x6db4:    44 09 f7                              	or edi, r14d
; function: Adapter_GetSignaLevel_S at 0x6db7 -- 0x6de7
0x6db7:    45 0f b6 ff                           	movzx r15d, r15b
0x6dbb:    44 09 ff                              	or edi, r15d
0x6dbe:    b9 00 00 00 00                        	mov ecx, 0
0x6dc3:    89 da                                 	mov edx, ebx
0x6dc5:    e8 f6 f3 ff ff                        	call 0x61c0 <Ber_to_Signal_Quality>
0x6dca:    eb 05                                 	jmp 0x6dd1 <Adapter_GetSignaLevel_S+0x1a>
0x6dcc:    b8 00 00 00 00                        	mov eax, 0
0x6dd1:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x6dd5:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x6dd9:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x6ddd:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x6de1:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x6de5:    c9                                    	leave 
0x6de6:    c3                                    	ret 
; function: Adapter_GetSignaLevel_S at 0x6de7 -- 0x6e20
0x6de7:    55                                    	push rbp
0x6de8:    48 89 e5                              	mov rbp, rsp
0x6deb:    53                                    	push rbx
0x6dec:    48 83 ec 18                           	sub rsp, 0x18
0x6df0:    e8 fb 7d 03 00                        	call 0x3ebf0 <mcount>
0x6df5:    40 0f b6 de                           	movzx ebx, sil
0x6df9:    48 8d 4d e0                           	lea rcx, [rbp - 0x20]
0x6dfd:    41 b9 01 00 00 00                     	mov r9d, 1
0x6e03:    41 b8 03 00 00 00                     	mov r8d, 3
0x6e09:    ba eb 00 00 00                        	mov edx, 0xeb ; "%("
0x6e0e:    89 de                                 	mov esi, ebx
0x6e10:    e8 f3 f8 ff ff                        	call 0x6708 <DemodRegRead>
0x6e15:    89 c2                                 	mov edx, eax
0x6e17:    b8 00 00 00 00                        	mov eax, 0
0x6e1c:    84 d2                                 	test dl, dl
0x6e1e:    74 2a                                 	je 0x6e4a
; data inside code section at 0x6e20 -- 0x6e21
0x6e20:    0f                                                 |.               |
; function: Adapter_GetSignaLevel_T at 0x6e21 -- 0x6e51
0x6e21:    b6 7d                                 	mov dh, 0x7d
0x6e23:    e0 c1                                 	loopne 0x6de6
0x6e25:    e7 10                                 	out 0x10, eax
0x6e27:    0f b6 45 e1                           	movzx eax, byte ptr [rbp - 0x1f]
0x6e2b:    c1 e0 08                              	shl eax, 8
0x6e2e:    09 c7                                 	or edi, eax
0x6e30:    0f b6 45 e2                           	movzx eax, byte ptr [rbp - 0x1e]
0x6e34:    09 c7                                 	or edi, eax
0x6e36:    b9 01 00 00 00                        	mov ecx, 1
0x6e3b:    89 da                                 	mov edx, ebx
0x6e3d:    be 00 00 00 00                        	mov esi, 0
0x6e42:    e8 79 f3 ff ff                        	call 0x61c0 <Ber_to_Signal_Quality>
0x6e47:    0f b6 c0                              	movzx eax, al
0x6e4a:    48 83 c4 18                           	add rsp, 0x18
0x6e4e:    5b                                    	pop rbx
0x6e4f:    c9                                    	leave 
0x6e50:    c3                                    	ret 
; function: Adapter_GetSignaLevel_T at 0x6e51 -- 0x6eea
0x6e51:    55                                    	push rbp
0x6e52:    48 89 e5                              	mov rbp, rsp
0x6e55:    48 83 ec 50                           	sub rsp, 0x50
0x6e59:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x6e5d:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x6e61:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x6e65:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x6e69:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x6e6d:    e8 7e 7d 03 00                        	call 0x3ebf0 <mcount>
0x6e72:    49 89 fc                              	mov r12, rdi
0x6e75:    40 0f b6 de                           	movzx ebx, sil
0x6e79:    48 8d 4d b0                           	lea rcx, [rbp - 0x50]
0x6e7d:    41 b9 00 00 00 00                     	mov r9d, 0
0x6e83:    41 b8 03 00 00 00                     	mov r8d, 3
0x6e89:    ba a0 00 00 00                        	mov edx, 0xa0
0x6e8e:    89 de                                 	mov esi, ebx
0x6e90:    e8 73 f8 ff ff                        	call 0x6708 <DemodRegRead>
0x6e95:    84 c0                                 	test al, al
0x6e97:    74 69                                 	je 0x6f02
0x6e99:    44 0f b6 6d b0                        	movzx r13d, byte ptr [rbp - 0x50]
0x6e9e:    44 0f b6 75 b1                        	movzx r14d, byte ptr [rbp - 0x4f]
0x6ea3:    44 0f b6 7d b2                        	movzx r15d, byte ptr [rbp - 0x4e]
0x6ea8:    48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x6eac:    41 b9 00 00 00 00                     	mov r9d, 0
0x6eb2:    41 b8 02 00 00 00                     	mov r8d, 2
0x6eb8:    ba a6 00 00 00                        	mov edx, 0xa6
0x6ebd:    89 de                                 	mov esi, ebx
0x6ebf:    4c 89 e7                              	mov rdi, r12
0x6ec2:    e8 41 f8 ff ff                        	call 0x6708 <DemodRegRead>
0x6ec7:    84 c0                                 	test al, al
0x6ec9:    74 37                                 	je 0x6f02
0x6ecb:    0f b6 75 c0                           	movzx esi, byte ptr [rbp - 0x40]
0x6ecf:    c1 e6 08                              	shl esi, 8
0x6ed2:    0f b6 45 c1                           	movzx eax, byte ptr [rbp - 0x3f]
0x6ed6:    09 c6                                 	or esi, eax
0x6ed8:    41 0f b6 fd                           	movzx edi, r13b
0x6edc:    c1 e7 10                              	shl edi, 0x10
0x6edf:    45 0f b6 f6                           	movzx r14d, r14b
0x6ee3:    41 c1 e6 08                           	shl r14d, 8
0x6ee7:    44 09 f7                              	or edi, r14d
; data inside code section at 0x6eea -- 0x6eed
0x6eea:    45 0f b6                                           |E..             |
; function: Adapter_TSIDRead at 0x6eed -- 0x6f1d
0x6eed:    ff 44 09 ff                           	inc dword ptr [rcx + rcx - 1]
0x6ef1:    b9 00 00 00 00                        	mov ecx, 0
0x6ef6:    89 da                                 	mov edx, ebx
0x6ef8:    e8 c3 f2 ff ff                        	call 0x61c0 <Ber_to_Signal_Quality>
0x6efd:    0f b6 c0                              	movzx eax, al
0x6f00:    eb 05                                 	jmp 0x6f07 <Adapter_TSIDRead+0x1a>
0x6f02:    b8 00 00 00 00                        	mov eax, 0
0x6f07:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x6f0b:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x6f0f:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x6f13:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x6f17:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x6f1b:    c9                                    	leave 
0x6f1c:    c3                                    	ret 
; function: Adapter_TSIDRead at 0x6f1d -- 0x6fa2
0x6f1d:    55                                    	push rbp
0x6f1e:    48 89 e5                              	mov rbp, rsp
0x6f21:    41 54                                 	push r12
0x6f23:    53                                    	push rbx
0x6f24:    48 83 ec 20                           	sub rsp, 0x20
0x6f28:    e8 c3 7c 03 00                        	call 0x3ebf0 <mcount>
0x6f2d:    48 89 d3                              	mov rbx, rdx
0x6f30:    41 89 cc                              	mov r12d, ecx
0x6f33:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x6f3c:    48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x6f40:    31 c0                                 	xor eax, eax
0x6f42:    84 c9                                 	test cl, cl
0x6f44:    74 63                                 	je 0x6fa9
0x6f46:    40 80 fe 03                           	cmp sil, 3
0x6f4a:    77 5d                                 	ja 0x6fa9
0x6f4c:    48 8d 4d d0                           	lea rcx, [rbp - 0x30]
0x6f50:    40 0f b6 f6                           	movzx esi, sil
0x6f54:    41 b9 01 00 00 00                     	mov r9d, 1
0x6f5a:    41 b8 10 00 00 00                     	mov r8d, 0x10
0x6f60:    ba ce 00 00 00                        	mov edx, 0xce
0x6f65:    e8 9e f7 ff ff                        	call 0x6708 <DemodRegRead>
0x6f6a:    84 c0                                 	test al, al
0x6f6c:    74 3b                                 	je 0x6fa9
0x6f6e:    45 0f b6 e4                           	movzx r12d, r12b
0x6f72:    45 85 e4                              	test r12d, r12d
0x6f75:    7e 3b                                 	jle 0x6fb2
0x6f77:    b8 00 00 00 00                        	mov eax, 0
0x6f7c:    ba 00 00 00 00                        	mov edx, 0
0x6f81:    48 8d 4d d0                           	lea rcx, [rbp - 0x30]
0x6f85:    0f b6 34 01                           	movzx esi, byte ptr [rcx + rax]
0x6f89:    c1 e6 08                              	shl esi, 8
0x6f8c:    0f b6 7c 01 01                        	movzx edi, byte ptr [rcx + rax + 1]
0x6f91:    09 fe                                 	or esi, edi
0x6f93:    89 34 43                              	mov dword ptr [rbx + rax*2], esi
0x6f96:    83 c2 01                              	add edx, 1
0x6f99:    48 83 c0 02                           	add rax, 2
0x6f9d:    44 39 e2                              	cmp edx, r12d
0x6fa0:    7d 10                                 	jge 0x6fb2
; data inside code section at 0x6fa2 -- 0x6fa4
0x6fa2:    83 fa                                              |..              |
; function: TC_SetFrequency at 0x6fa4 -- 0x6fd4
; function: TC_SetFrequency at 0x6fd4 -- 0x706f
0x6fd4:    55                                    	push rbp
0x6fd5:    48 89 e5                              	mov rbp, rsp
0x6fd8:    41 54                                 	push r12
0x6fda:    53                                    	push rbx
0x6fdb:    48 83 ec 10                           	sub rsp, 0x10
0x6fdf:    e8 0c 7c 03 00                        	call 0x3ebf0 <mcount>
0x6fe4:    4c 89 c3                              	mov rbx, r8
0x6fe7:    40 88 75 ec                           	mov byte ptr [rbp - 0x14], sil
0x6feb:    4c 89 c1                              	mov rcx, r8
0x6fee:    48 81 fa 3f 42 0f 00                  	cmp rdx, 0xf423f
0x6ff5:    77 6a                                 	ja 0x7061 <TC_SetFrequency+0x8d>
0x6ff7:    48 8d 82 e9 7a fd ff                  	lea rax, [rdx - 0x28517]
0x6ffe:    48 3d d0 07 00 00                     	cmp rax, 0x7d0
0x7004:    77 07                                 	ja 0x700d <TC_SetFrequency+0x39>
0x7006:    ba e7 8c 02 00                        	mov edx, 0x28ce7
0x700b:    eb 2c                                 	jmp 0x7039 <TC_SetFrequency+0x65>
0x700d:    48 8d 82 b9 05 fd ff                  	lea rax, [rdx - 0x2fa47]
0x7014:    48 3d d0 07 00 00                     	cmp rax, 0x7d0
0x701a:    77 07                                 	ja 0x7023 <TC_SetFrequency+0x4f>
0x701c:    ba 47 fa 02 00                        	mov edx, 0x2fa47
0x7021:    eb 16                                 	jmp 0x7039 <TC_SetFrequency+0x65>
0x7023:    48 8d 82 99 cf f8 ff                  	lea rax, [rdx - 0x73067]
0x702a:    48 3d d0 07 00 00                     	cmp rax, 0x7d0
0x7030:    b8 37 38 07 00                        	mov eax, 0x73837
0x7035:    48 0f 46 d0                           	cmovbe rdx, rax
0x7039:    48 c1 ea 03                           	shr rdx, 3
0x703d:    48 be cf f7 53 e3 a5 9b c4 20         	movabs rsi, 0x20c49ba5e353f7cf
0x7047:    48 89 d0                              	mov rax, rdx
0x704a:    48 f7 e6                              	mul rsi
0x704d:    48 c1 ea 04                           	shr rdx, 4
0x7051:    4c 69 e2 40 42 0f 00                  	imul r12, rdx, 0xf4240
0x7058:    c7 41 04 00 00 00 00                  	mov dword ptr [rcx + 4], 0
0x705f:    eb 16                                 	jmp 0x7077
0x7061:    4c 8d a2 10 11 5d ff                  	lea r12, [rdx - 0xa2eef0]
0x7068:    4d 69 e4 e8 03 00 00                  	imul r12, r12, 0x3e8 ; "%("
; data inside code section at 0x706f -- 0x7073
0x706f:    41 c7 40 04                                        |A.@.            |
; function: TLIB_SetGPIO_ASIE5606B5 at 0x7073 -- 0x70a3
0x7073:    01 00                                 	add dword ptr [rax], eax
0x7075:    00 00                                 	add byte ptr [rax], al
0x7077:    48 8d 75 ec                           	lea rsi, [rbp - 0x14]
0x707b:    e8 6b f2 ff ff                        	call 0x62eb <TC_RemappingTunerNumber>
0x7080:    89 c2                                 	mov edx, eax
0x7082:    b8 00 00 00 00                        	mov eax, 0
0x7087:    84 d2                                 	test dl, dl
0x7089:    74 0f                                 	je 0x709a <TLIB_SetGPIO_ASIE5606B5+0x27>
0x708b:    0f b6 7d ec                           	movzx edi, byte ptr [rbp - 0x14]
0x708f:    48 89 da                              	mov rdx, rbx
0x7092:    4c 89 e6                              	mov rsi, r12
0x7095:    e8 aa e9 01 00                        	call 0x25a44 <Japan4x4Tuner_TunerSetFrequency>
0x709a:    48 83 c4 10                           	add rsp, 0x10
0x709e:    5b                                    	pop rbx
0x709f:    41 5c                                 	pop r12
0x70a1:    c9                                    	leave 
0x70a2:    c3                                    	ret 
; function: TLIB_SetGPIO_ASIE5606B5 at 0x70a3 -- 0x7104
0x70a3:    55                                    	push rbp
0x70a4:    48 89 e5                              	mov rbp, rsp
0x70a7:    48 83 ec 30                           	sub rsp, 0x30
0x70ab:    48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x70af:    4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x70b3:    4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x70b7:    e8 34 7b 03 00                        	call 0x3ebf0 <mcount>
0x70bc:    48 89 fb                              	mov rbx, rdi
0x70bf:    41 89 f5                              	mov r13d, esi
0x70c2:    41 89 d4                              	mov r12d, edx
0x70c5:    48 8d 4d df                           	lea rcx, [rbp - 0x21]
0x70c9:    41 b9 00 00 00 00                     	mov r9d, 0
0x70cf:    41 b8 01 00 00 00                     	mov r8d, 1
0x70d5:    ba 0b 00 00 00                        	mov edx, 0xb
0x70da:    be 4a 00 00 00                        	mov esi, 0x4a
0x70df:    e8 7c 5b 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x70e4:    89 c2                                 	mov edx, eax
0x70e6:    b8 00 00 00 00                        	mov eax, 0
0x70eb:    84 d2                                 	test dl, dl
0x70ed:    74 38                                 	je 0x7127
0x70ef:    44 89 e0                              	mov eax, r12d
0x70f2:    f7 d0                                 	not eax
0x70f4:    22 45 df                              	and al, byte ptr [rbp - 0x21]
0x70f7:    45 21 e5                              	and r13d, r12d
0x70fa:    44 09 e8                              	or eax, r13d
0x70fd:    88 45 df                              	mov byte ptr [rbp - 0x21], al
0x7100:    48 8d 4d df                           	lea rcx, [rbp - 0x21]
; data inside code section at 0x7104 -- 0x7105
0x7104:    41                                                 |A               |
; function: TC_SetLNB at 0x7105 -- 0x7135
0x7105:    b9 00 00 00 00                        	mov ecx, 0
0x710a:    41 b8 01 00 00 00                     	mov r8d, 1
0x7110:    ba 0b 00 00 00                        	mov edx, 0xb
0x7115:    be 4a 00 00 00                        	mov esi, 0x4a
0x711a:    48 89 df                              	mov rdi, rbx
0x711d:    e8 df 5b 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x7122:    84 c0                                 	test al, al
0x7124:    0f 95 c0                              	setne al
0x7127:    48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x712b:    4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x712f:    4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x7133:    c9                                    	leave 
0x7134:    c3                                    	ret 
; function: TC_SetLNB at 0x7135 -- 0x7149
0x7135:    55                                    	push rbp
0x7136:    48 89 e5                              	mov rbp, rsp
0x7139:    e8 b2 7a 03 00                        	call 0x3ebf0 <mcount>
0x713e:    b8 00 00 00 00                        	mov eax, 0
0x7143:    40 80 fe 07                           	cmp sil, 7
0x7147:    77 2f                                 	ja 0x7178
; data inside code section at 0x7149 -- 0x714a
0x7149:    80                                                 |.               |
; function: TC_MOS_POWER at 0x714a -- 0x717a
0x714a:    fa                                    	cli 
0x714b:    01 75 16                              	add dword ptr [rbp + 0x16], esi
0x714e:    ba 20 00 00 00                        	mov edx, 0x20
0x7153:    be 20 00 00 00                        	mov esi, 0x20
0x7158:    e8 46 ff ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x715d:    b8 01 00 00 00                        	mov eax, 1
0x7162:    eb 14                                 	jmp 0x7178 <TC_MOS_POWER+0x2e>
0x7164:    ba 20 00 00 00                        	mov edx, 0x20
0x7169:    be 00 00 00 00                        	mov esi, 0
0x716e:    e8 30 ff ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x7173:    b8 01 00 00 00                        	mov eax, 1
0x7178:    c9                                    	leave 
0x7179:    c3                                    	ret 
; function: TC_MOS_POWER at 0x717a -- 0x72f6
0x717a:    55                                    	push rbp
0x717b:    48 89 e5                              	mov rbp, rsp
0x717e:    53                                    	push rbx
0x717f:    48 83 ec 08                           	sub rsp, 8
0x7183:    e8 68 7a 03 00                        	call 0x3ebf0 <mcount>
0x7188:    48 89 fb                              	mov rbx, rdi
0x718b:    84 d2                                 	test dl, dl
0x718d:    0f 84 33 01 00 00                     	je 0x72c6 <TC_MOS_POWER+0x14c>
0x7193:    ba 01 00 00 00                        	mov edx, 1
0x7198:    be 01 00 00 00                        	mov esi, 1
0x719d:    e8 e8 59 01 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x71a2:    bf 0a 00 00 00                        	mov edi, 0xa
0x71a7:    e8 f5 59 01 00                        	call 0x1cba1 <TLIB_Delay>
0x71ac:    ba 01 00 00 00                        	mov edx, 1
0x71b1:    be 00 00 00 00                        	mov esi, 0
0x71b6:    48 89 df                              	mov rdi, rbx
0x71b9:    e8 cc 59 01 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x71be:    bf 0a 00 00 00                        	mov edi, 0xa
0x71c3:    e8 d9 59 01 00                        	call 0x1cba1 <TLIB_Delay>
0x71c8:    ba 01 00 00 00                        	mov edx, 1
0x71cd:    be 01 00 00 00                        	mov esi, 1
0x71d2:    48 89 df                              	mov rdi, rbx
0x71d5:    e8 b0 59 01 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x71da:    bf 14 00 00 00                        	mov edi, 0x14
0x71df:    e8 bd 59 01 00                        	call 0x1cba1 <TLIB_Delay>
0x71e4:    ba 01 00 00 00                        	mov edx, 1
0x71e9:    be 01 00 00 00                        	mov esi, 1
0x71ee:    48 89 df                              	mov rdi, rbx
0x71f1:    e8 61 59 01 00                        	call 0x1cb57 <TLIB_SetGPIOEx>
0x71f6:    bf 0a 00 00 00                        	mov edi, 0xa
0x71fb:    e8 a1 59 01 00                        	call 0x1cba1 <TLIB_Delay>
0x7200:    ba 01 00 00 00                        	mov edx, 1
0x7205:    be 00 00 00 00                        	mov esi, 0
0x720a:    48 89 df                              	mov rdi, rbx
0x720d:    e8 45 59 01 00                        	call 0x1cb57 <TLIB_SetGPIOEx>
0x7212:    bf 14 00 00 00                        	mov edi, 0x14
0x7217:    e8 85 59 01 00                        	call 0x1cba1 <TLIB_Delay>
0x721c:    ba 02 00 00 00                        	mov edx, 2
0x7221:    be 02 00 00 00                        	mov esi, 2
0x7226:    48 89 df                              	mov rdi, rbx
0x7229:    e8 75 fe ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x722e:    bf 14 00 00 00                        	mov edi, 0x14
0x7233:    e8 69 59 01 00                        	call 0x1cba1 <TLIB_Delay>
0x7238:    ba 02 00 00 00                        	mov edx, 2
0x723d:    be 00 00 00 00                        	mov esi, 0
0x7242:    48 89 df                              	mov rdi, rbx
0x7245:    e8 59 fe ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x724a:    bf 14 00 00 00                        	mov edi, 0x14
0x724f:    e8 4d 59 01 00                        	call 0x1cba1 <TLIB_Delay>
0x7254:    ba 02 00 00 00                        	mov edx, 2
0x7259:    be 02 00 00 00                        	mov esi, 2
0x725e:    48 89 df                              	mov rdi, rbx
0x7261:    e8 3d fe ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x7266:    bf 14 00 00 00                        	mov edi, 0x14
0x726b:    e8 31 59 01 00                        	call 0x1cba1 <TLIB_Delay>
0x7270:    ba 04 00 00 00                        	mov edx, 4
0x7275:    be 04 00 00 00                        	mov esi, 4
0x727a:    48 89 df                              	mov rdi, rbx
0x727d:    e8 21 fe ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x7282:    bf 14 00 00 00                        	mov edi, 0x14
0x7287:    e8 15 59 01 00                        	call 0x1cba1 <TLIB_Delay>
0x728c:    ba 04 00 00 00                        	mov edx, 4
0x7291:    be 00 00 00 00                        	mov esi, 0
0x7296:    48 89 df                              	mov rdi, rbx
0x7299:    e8 05 fe ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x729e:    bf 14 00 00 00                        	mov edi, 0x14
0x72a3:    e8 f9 58 01 00                        	call 0x1cba1 <TLIB_Delay>
0x72a8:    ba 04 00 00 00                        	mov edx, 4
0x72ad:    be 04 00 00 00                        	mov esi, 4
0x72b2:    48 89 df                              	mov rdi, rbx
0x72b5:    e8 e9 fd ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x72ba:    bf 14 00 00 00                        	mov edi, 0x14
0x72bf:    e8 dd 58 01 00                        	call 0x1cba1 <TLIB_Delay>
0x72c4:    eb 54                                 	jmp 0x731a
0x72c6:    bf 0a 00 00 00                        	mov edi, 0xa
0x72cb:    e8 d1 58 01 00                        	call 0x1cba1 <TLIB_Delay>
0x72d0:    ba 01 00 00 00                        	mov edx, 1
0x72d5:    be 00 00 00 00                        	mov esi, 0
0x72da:    48 89 df                              	mov rdi, rbx
0x72dd:    e8 a8 58 01 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x72e2:    bf 0a 00 00 00                        	mov edi, 0xa
0x72e7:    e8 b5 58 01 00                        	call 0x1cba1 <TLIB_Delay>
0x72ec:    ba 01 00 00 00                        	mov edx, 1
0x72f1:    be 01 00 00 00                        	mov esi, 1
; function: DemodRegWrite at 0x72f6 -- 0x7326
0x72f6:    48 89 df                              	mov rdi, rbx
0x72f9:    e8 8c 58 01 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x72fe:    bf 0a 00 00 00                        	mov edi, 0xa
0x7303:    e8 99 58 01 00                        	call 0x1cba1 <TLIB_Delay>
0x7308:    ba 01 00 00 00                        	mov edx, 1
0x730d:    be 01 00 00 00                        	mov esi, 1
0x7312:    48 89 df                              	mov rdi, rbx
0x7315:    e8 3d 58 01 00                        	call 0x1cb57 <TLIB_SetGPIOEx>
0x731a:    b8 01 00 00 00                        	mov eax, 1
0x731f:    48 83 c4 08                           	add rsp, 8
0x7323:    5b                                    	pop rbx
0x7324:    c9                                    	leave 
0x7325:    c3                                    	ret 
; function: DemodRegWrite at 0x7326 -- 0x734c
0x7326:    55                                    	push rbp
0x7327:    48 89 e5                              	mov rbp, rsp
0x732a:    e8 c1 78 03 00                        	call 0x3ebf0 <mcount>
0x732f:    40 80 fe 07                           	cmp sil, 7
0x7333:    77 40                                 	ja 0x7375
0x7335:    45 85 c9                              	test r9d, r9d
0x7338:    75 19                                 	jne 0x7353
0x733a:    0f b6 d2                              	movzx edx, dl
0x733d:    40 0f b6 f6                           	movzx esi, sil
0x7341:    0f b6 b6 00 00 00 00                  	movzx esi, byte ptr [rsi]
0x7348:    45 0f b6 c0                           	movzx r8d, r8b
; function: ReAcqDemod at 0x734c -- 0x737c
0x734c:    e8 b0 59 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x7351:    eb 27                                 	jmp 0x737a <ReAcqDemod+0x2e>
0x7353:    41 83 f9 01                           	cmp r9d, 1
0x7357:    75 1c                                 	jne 0x7375 <ReAcqDemod+0x29>
0x7359:    0f b6 d2                              	movzx edx, dl
0x735c:    40 0f b6 f6                           	movzx esi, sil
0x7360:    0f b6 b6 00 00 00 00                  	movzx esi, byte ptr [rsi]
0x7367:    41 b1 00                              	mov r9b, 0
0x736a:    45 0f b6 c0                           	movzx r8d, r8b
0x736e:    e8 8e 59 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x7373:    eb 05                                 	jmp 0x737a <ReAcqDemod+0x2e>
0x7375:    b8 00 00 00 00                        	mov eax, 0
0x737a:    c9                                    	leave 
0x737b:    c3                                    	ret 
; function: ReAcqDemod at 0x737c -- 0x73b3
0x737c:    55                                    	push rbp
0x737d:    48 89 e5                              	mov rbp, rsp
0x7380:    48 83 ec 10                           	sub rsp, 0x10
0x7384:    e8 67 78 03 00                        	call 0x3ebf0 <mcount>
0x7389:    85 d2                                 	test edx, edx
0x738b:    75 26                                 	jne 0x73b3 <InitDemod>
0x738d:    c6 45 f0 40                           	mov byte ptr [rbp - 0x10], 0x40
0x7391:    48 8d 4d f0                           	lea rcx, [rbp - 0x10]
0x7395:    40 0f b6 f6                           	movzx esi, sil
0x7399:    41 b9 00 00 00 00                     	mov r9d, 0
0x739f:    41 b8 01 00 00 00                     	mov r8d, 1
0x73a5:    b2 01                                 	mov dl, 1
0x73a7:    e8 7a ff ff ff                        	call 0x7326 <DemodRegWrite>
0x73ac:    84 c0                                 	test al, al
0x73ae:    0f 95 c0                              	setne al
0x73b1:    eb 2e                                 	jmp 0x73e1
; function: InitDemod at 0x73b3 -- 0x73e3
0x73b3:    b8 01 00 00 00                        	mov eax, 1
0x73b8:    83 fa 01                              	cmp edx, 1
0x73bb:    75 24                                 	jne 0x73e1 <InitDemod+0x2e>
0x73bd:    c6 45 f0 01                           	mov byte ptr [rbp - 0x10], 1
0x73c1:    48 8d 4d f0                           	lea rcx, [rbp - 0x10]
0x73c5:    40 0f b6 f6                           	movzx esi, sil
0x73c9:    41 b9 01 00 00 00                     	mov r9d, 1
0x73cf:    41 b8 01 00 00 00                     	mov r8d, 1
0x73d5:    b2 03                                 	mov dl, 3
0x73d7:    e8 4a ff ff ff                        	call 0x7326 <DemodRegWrite>
0x73dc:    84 c0                                 	test al, al
0x73de:    0f 95 c0                              	setne al
0x73e1:    c9                                    	leave 
0x73e2:    c3                                    	ret 
; function: InitDemod at 0x73e3 -- 0x74af
0x73e3:    55                                    	push rbp
0x73e4:    48 89 e5                              	mov rbp, rsp
0x73e7:    41 57                                 	push r15
0x73e9:    41 56                                 	push r14
0x73eb:    41 55                                 	push r13
0x73ed:    41 54                                 	push r12
0x73ef:    53                                    	push rbx
0x73f0:    48 83 ec 28                           	sub rsp, 0x28
0x73f4:    e8 f7 77 03 00                        	call 0x3ebf0 <mcount>
0x73f9:    49 89 fe                              	mov r14, rdi
0x73fc:    41 89 f5                              	mov r13d, esi
0x73ff:    49 c7 c4 00 00 00 00                  	mov r12, 0
0x7406:    48 c7 c3 00 00 00 00                  	mov rbx, 0
0x740d:    49 c7 c7 00 00 00 00                  	mov r15, 0
0x7414:    83 7a 04 01                           	cmp dword ptr [rdx + 4], 1
0x7418:    75 55                                 	jne 0x746f <InitDemod+0x8c>
0x741a:    48 c7 c3 00 00 00 00                  	mov rbx, 0
0x7421:    49 c7 c4 00 00 00 00                  	mov r12, 0
0x7428:    4c 8d 7d cf                           	lea r15, [rbp - 0x31]
0x742c:    44 0f b6 ee                           	movzx r13d, sil
0x7430:    0f b6 13                              	movzx edx, byte ptr [rbx]
0x7433:    41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0x7438:    88 45 cf                              	mov byte ptr [rbp - 0x31], al
0x743b:    0f b6 d2                              	movzx edx, dl
0x743e:    41 b9 01 00 00 00                     	mov r9d, 1
0x7444:    41 b8 01 00 00 00                     	mov r8d, 1
0x744a:    4c 89 f9                              	mov rcx, r15
0x744d:    44 89 ee                              	mov esi, r13d
0x7450:    4c 89 f7                              	mov rdi, r14
0x7453:    e8 ce fe ff ff                        	call 0x7326 <DemodRegWrite>
0x7458:    84 c0                                 	test al, al
0x745a:    74 6b                                 	je 0x74c7
0x745c:    48 83 c3 01                           	add rbx, 1
0x7460:    49 83 c4 01                           	add r12, 1
0x7464:    48 81 fb 00 00 00 00                  	cmp rbx, 0
0x746b:    75 c3                                 	jne 0x7430 <InitDemod+0x4d>
0x746d:    eb 5f                                 	jmp 0x74ce
0x746f:    40 0f b6 c6                           	movzx eax, sil
0x7473:    89 45 bc                              	mov dword ptr [rbp - 0x44], eax
0x7476:    41 0f b6 14 24                        	movzx edx, byte ptr [r12]
0x747b:    0f b6 03                              	movzx eax, byte ptr [rbx]
0x747e:    88 45 c0                              	mov byte ptr [rbp - 0x40], al
0x7481:    41 80 fd 01                           	cmp r13b, 1
0x7485:    74 06                                 	je 0x748d <InitDemod+0xaa>
0x7487:    41 80 fd 03                           	cmp r13b, 3
0x748b:    75 09                                 	jne 0x7496 <InitDemod+0xb3>
0x748d:    80 fa 04                              	cmp dl, 4
0x7490:    75 04                                 	jne 0x7496 <InitDemod+0xb3>
0x7492:    c6 45 c0 03                           	mov byte ptr [rbp - 0x40], 3
0x7496:    0f b6 d2                              	movzx edx, dl
0x7499:    41 b9 00 00 00 00                     	mov r9d, 0
0x749f:    41 b8 01 00 00 00                     	mov r8d, 1
0x74a5:    48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x74a9:    8b 75 bc                              	mov esi, dword ptr [rbp - 0x44]
0x74ac:    4c 89 f7                              	mov rdi, r14
; data inside code section at 0x74af -- 0x74b2
0x74af:    e8 72 fe                                           |.r.             |
; function: Adapter_TSIDWrite at 0x74b2 -- 0x74e2
; function: Adapter_TSIDWrite at 0x74e2 -- 0x74fa
0x74e2:    55                                    	push rbp
0x74e3:    48 89 e5                              	mov rbp, rsp
0x74e6:    48 83 ec 10                           	sub rsp, 0x10
0x74ea:    e8 01 77 03 00                        	call 0x3ebf0 <mcount>
0x74ef:    b8 00 00 00 00                        	mov eax, 0
0x74f4:    40 80 fe 03                           	cmp sil, 3
0x74f8:    77 2e                                 	ja 0x7528
; function: TunerRegRead at 0x74fa -- 0x752a
0x74fa:    89 d0                                 	mov eax, edx
0x74fc:    c1 e8 08                              	shr eax, 8
0x74ff:    88 45 f0                              	mov byte ptr [rbp - 0x10], al
0x7502:    88 55 f1                              	mov byte ptr [rbp - 0xf], dl
0x7505:    48 8d 4d f0                           	lea rcx, [rbp - 0x10]
0x7509:    40 0f b6 f6                           	movzx esi, sil
0x750d:    41 b9 01 00 00 00                     	mov r9d, 1
0x7513:    41 b8 02 00 00 00                     	mov r8d, 2
0x7519:    ba 8f 00 00 00                        	mov edx, 0x8f
0x751e:    e8 03 fe ff ff                        	call 0x7326 <DemodRegWrite>
0x7523:    84 c0                                 	test al, al
0x7525:    0f 95 c0                              	setne al
0x7528:    c9                                    	leave 
0x7529:    c3                                    	ret 
; function: TunerRegRead at 0x752a -- 0x763f
0x752a:    55                                    	push rbp
0x752b:    48 89 e5                              	mov rbp, rsp
0x752e:    48 83 ec 40                           	sub rsp, 0x40
0x7532:    48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x7536:    4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x753a:    4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x753e:    4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x7542:    e8 a9 76 03 00                        	call 0x3ebf0 <mcount>
0x7547:    48 89 fb                              	mov rbx, rdi
0x754a:    49 89 cd                              	mov r13, rcx
0x754d:    45 89 c4                              	mov r12d, r8d
0x7550:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x7559:    48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x755d:    31 c0                                 	xor eax, eax
0x755f:    40 80 fe 03                           	cmp sil, 3
0x7563:    0f 87 db 00 00 00                     	ja 0x7644
0x7569:    45 85 c9                              	test r9d, r9d
0x756c:    75 7e                                 	jne 0x75ec <TunerRegRead+0xc2>
0x756e:    c6 45 c0 c6                           	mov byte ptr [rbp - 0x40], 0xc6
0x7572:    88 55 c1                              	mov byte ptr [rbp - 0x3f], dl
0x7575:    40 0f b6 f6                           	movzx esi, sil
0x7579:    44 0f b6 b6 00 00 00 00               	movzx r14d, byte ptr [rsi]
0x7581:    48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x7585:    41 b8 02 00 00 00                     	mov r8d, 2
0x758b:    ba fe 00 00 00                        	mov edx, 0xfe
0x7590:    44 89 f6                              	mov esi, r14d
0x7593:    e8 69 57 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x7598:    84 c0                                 	test al, al
0x759a:    0f 84 a4 00 00 00                     	je 0x7644
0x75a0:    c6 45 c0 c7                           	mov byte ptr [rbp - 0x40], 0xc7
0x75a4:    48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x75a8:    41 b9 04 00 00 00                     	mov r9d, 4
0x75ae:    41 b8 01 00 00 00                     	mov r8d, 1
0x75b4:    ba fe 00 00 00                        	mov edx, 0xfe
0x75b9:    44 89 f6                              	mov esi, r14d
0x75bc:    48 89 df                              	mov rdi, rbx
0x75bf:    e8 3d 57 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x75c4:    84 c0                                 	test al, al
0x75c6:    74 7c                                 	je 0x7644
0x75c8:    41 b9 02 00 00 00                     	mov r9d, 2
0x75ce:    45 0f b6 c4                           	movzx r8d, r12b
0x75d2:    4c 89 e9                              	mov rcx, r13
0x75d5:    ba 00 00 00 00                        	mov edx, 0
0x75da:    44 89 f6                              	mov esi, r14d
0x75dd:    48 89 df                              	mov rdi, rbx
0x75e0:    e8 7b 56 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x75e5:    84 c0                                 	test al, al
0x75e7:    0f 95 c0                              	setne al
0x75ea:    eb 5d                                 	jmp 0x7649
0x75ec:    41 83 f9 01                           	cmp r9d, 1
0x75f0:    75 52                                 	jne 0x7644
0x75f2:    c6 45 c0 c1                           	mov byte ptr [rbp - 0x40], 0xc1
0x75f6:    40 0f b6 f6                           	movzx esi, sil
0x75fa:    44 0f b6 b6 00 00 00 00               	movzx r14d, byte ptr [rsi]
0x7602:    48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x7606:    41 b1 04                              	mov r9b, 4
0x7609:    41 b8 01 00 00 00                     	mov r8d, 1
0x760f:    ba fe 00 00 00                        	mov edx, 0xfe
0x7614:    44 89 f6                              	mov esi, r14d
0x7617:    e8 e5 56 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x761c:    84 c0                                 	test al, al
0x761e:    74 24                                 	je 0x7644
0x7620:    41 b9 02 00 00 00                     	mov r9d, 2
0x7626:    45 0f b6 c4                           	movzx r8d, r12b
0x762a:    4c 89 e9                              	mov rcx, r13
0x762d:    ba 00 00 00 00                        	mov edx, 0
0x7632:    44 89 f6                              	mov esi, r14d
0x7635:    48 89 df                              	mov rdi, rbx
0x7638:    e8 23 56 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x763d:    84 c0                                 	test al, al
; function: TunerRegWrite at 0x763f -- 0x766f
0x763f:    0f 95 c0                              	setne al
0x7642:    eb 05                                 	jmp 0x7649 <TunerRegWrite+0xa>
0x7644:    b8 00 00 00 00                        	mov eax, 0
0x7649:    48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x764d:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x7656:    74 05                                 	je 0x765d <TunerRegWrite+0x1e>
0x7658:    e8 4b 75 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x765d:    48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0x7661:    4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0x7665:    4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0x7669:    4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x766d:    c9                                    	leave 
0x766e:    c3                                    	ret 
; function: TunerRegWrite at 0x766f -- 0x7748
0x766f:    55                                    	push rbp
0x7670:    48 89 e5                              	mov rbp, rsp
0x7673:    48 83 ec 20                           	sub rsp, 0x20
0x7677:    e8 74 75 03 00                        	call 0x3ebf0 <mcount>
0x767c:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x7685:    48 89 45 f8                           	mov qword ptr [rbp - 8], rax
0x7689:    31 c0                                 	xor eax, eax
0x768b:    40 80 fe 07                           	cmp sil, 7
0x768f:    0f 87 c9 00 00 00                     	ja 0x775e
0x7695:    45 85 c0                              	test r8d, r8d
0x7698:    75 63                                 	jne 0x76fd <TunerRegWrite+0x8e>
0x769a:    80 f9 0a                              	cmp cl, 0xa
0x769d:    0f 87 bb 00 00 00                     	ja 0x775e
0x76a3:    c6 45 e0 fe                           	mov byte ptr [rbp - 0x20], 0xfe
0x76a7:    c6 45 e1 c6                           	mov byte ptr [rbp - 0x1f], 0xc6
0x76ab:    84 c9                                 	test cl, cl
0x76ad:    74 25                                 	je 0x76d4 <TunerRegWrite+0x65>
0x76af:    48 8d 45 e2                           	lea rax, [rbp - 0x1e]
0x76b3:    44 8d 41 ff                           	lea r8d, [rcx - 1]
0x76b7:    45 0f b6 c0                           	movzx r8d, r8b
0x76bb:    4e 8d 44 02 01                        	lea r8, [rdx + r8 + 1]
0x76c0:    44 0f b6 0a                           	movzx r9d, byte ptr [rdx]
0x76c4:    44 88 08                              	mov byte ptr [rax], r9b
0x76c7:    48 83 c2 01                           	add rdx, 1
0x76cb:    48 83 c0 01                           	add rax, 1
0x76cf:    4c 39 c2                              	cmp rdx, r8
0x76d2:    75 ec                                 	jne 0x76c0 <TunerRegWrite+0x51>
0x76d4:    44 8d 41 02                           	lea r8d, [rcx + 2]
0x76d8:    48 8d 4d e0                           	lea rcx, [rbp - 0x20]
0x76dc:    40 0f b6 f6                           	movzx esi, sil
0x76e0:    0f b6 b6 00 00 00 00                  	movzx esi, byte ptr [rsi]
0x76e7:    41 b9 02 00 00 00                     	mov r9d, 2
0x76ed:    45 0f b6 c0                           	movzx r8d, r8b
0x76f1:    ba 00 00 00 00                        	mov edx, 0
0x76f6:    e8 06 56 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x76fb:    eb 66                                 	jmp 0x7763
0x76fd:    41 83 f8 01                           	cmp r8d, 1
0x7701:    75 5b                                 	jne 0x775e
0x7703:    80 f9 0a                              	cmp cl, 0xa
0x7706:    77 56                                 	ja 0x775e
0x7708:    c6 45 e0 fe                           	mov byte ptr [rbp - 0x20], 0xfe
0x770c:    84 c9                                 	test cl, cl
0x770e:    74 25                                 	je 0x7735 <TunerRegWrite+0xc6>
0x7710:    48 8d 45 e1                           	lea rax, [rbp - 0x1f]
0x7714:    44 8d 41 ff                           	lea r8d, [rcx - 1]
0x7718:    45 0f b6 c0                           	movzx r8d, r8b
0x771c:    4e 8d 4c 02 01                        	lea r9, [rdx + r8 + 1]
0x7721:    44 0f b6 02                           	movzx r8d, byte ptr [rdx]
0x7725:    44 88 00                              	mov byte ptr [rax], r8b
0x7728:    48 83 c2 01                           	add rdx, 1
0x772c:    48 83 c0 01                           	add rax, 1
0x7730:    4c 39 ca                              	cmp rdx, r9
0x7733:    75 ec                                 	jne 0x7721 <TunerRegWrite+0xb2>
0x7735:    44 8d 41 01                           	lea r8d, [rcx + 1]
0x7739:    48 8d 4d e0                           	lea rcx, [rbp - 0x20]
0x773d:    40 0f b6 f6                           	movzx esi, sil
0x7741:    0f b6 b6 00 00 00 00                  	movzx esi, byte ptr [rsi]
; data inside code section at 0x7748 -- 0x7749
0x7748:    41                                                 |A               |
; function: InitRFDevice at 0x7749 -- 0x7779
0x7749:    b9 02 00 00 00                        	mov ecx, 2
0x774e:    45 0f b6 c0                           	movzx r8d, r8b
0x7752:    ba 00 00 00 00                        	mov edx, 0
0x7757:    e8 a5 55 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x775c:    eb 05                                 	jmp 0x7763 <InitRFDevice+0x1a>
0x775e:    b8 00 00 00 00                        	mov eax, 0
0x7763:    48 8b 55 f8                           	mov rdx, qword ptr [rbp - 8]
0x7767:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x7770:    74 05                                 	je 0x7777 <InitRFDevice+0x2e>
0x7772:    e8 31 74 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x7777:    c9                                    	leave 
0x7778:    c3                                    	ret 
; function: InitRFDevice at 0x7779 -- 0x78e1
0x7779:    55                                    	push rbp
0x777a:    48 89 e5                              	mov rbp, rsp
0x777d:    41 57                                 	push r15
0x777f:    41 56                                 	push r14
0x7781:    41 55                                 	push r13
0x7783:    41 54                                 	push r12
0x7785:    53                                    	push rbx
0x7786:    48 83 ec 58                           	sub rsp, 0x58
0x778a:    e8 61 74 03 00                        	call 0x3ebf0 <mcount>
0x778f:    49 89 fc                              	mov r12, rdi
0x7792:    40 88 75 8f                           	mov byte ptr [rbp - 0x71], sil
0x7796:    c6 45 90 01                           	mov byte ptr [rbp - 0x70], 1
0x779a:    c6 45 91 05                           	mov byte ptr [rbp - 0x6f], 5
0x779e:    c6 45 92 02                           	mov byte ptr [rbp - 0x6e], 2
0x77a2:    c6 45 93 10                           	mov byte ptr [rbp - 0x6d], 0x10
0x77a6:    c6 45 94 03                           	mov byte ptr [rbp - 0x6c], 3
0x77aa:    c6 45 95 00                           	mov byte ptr [rbp - 0x6b], 0
0x77ae:    c6 45 96 04                           	mov byte ptr [rbp - 0x6a], 4
0x77b2:    c6 45 97 00                           	mov byte ptr [rbp - 0x69], 0
0x77b6:    c6 45 98 05                           	mov byte ptr [rbp - 0x68], 5
0x77ba:    c6 45 99 0f                           	mov byte ptr [rbp - 0x67], 0xf
0x77be:    c6 45 9a 06                           	mov byte ptr [rbp - 0x66], 6
0x77c2:    c6 45 9b 00                           	mov byte ptr [rbp - 0x65], 0
0x77c6:    c6 45 9c 07                           	mov byte ptr [rbp - 0x64], 7
0x77ca:    c6 45 9d 00                           	mov byte ptr [rbp - 0x63], 0
0x77ce:    c6 45 9e 08                           	mov byte ptr [rbp - 0x62], 8
0x77d2:    c6 45 9f ff                           	mov byte ptr [rbp - 0x61], 0xff
0x77d6:    c6 45 a0 09                           	mov byte ptr [rbp - 0x60], 9
0x77da:    c6 45 a1 6e                           	mov byte ptr [rbp - 0x5f], 0x6e
0x77de:    c6 45 a2 0a                           	mov byte ptr [rbp - 0x5e], 0xa
0x77e2:    c6 45 a3 b8                           	mov byte ptr [rbp - 0x5d], 0xb8
0x77e6:    c6 45 a4 0b                           	mov byte ptr [rbp - 0x5c], 0xb
0x77ea:    c6 45 a5 82                           	mov byte ptr [rbp - 0x5b], 0x82
0x77ee:    c6 45 a6 0c                           	mov byte ptr [rbp - 0x5a], 0xc ; "GNU"
0x77f2:    c6 45 a7 f8                           	mov byte ptr [rbp - 0x59], 0xf8
0x77f6:    c6 45 a8 0d                           	mov byte ptr [rbp - 0x58], 0xd ; "NU"
0x77fa:    c6 45 a9 02                           	mov byte ptr [rbp - 0x57], 2
0x77fe:    c6 45 aa 0e                           	mov byte ptr [rbp - 0x56], 0xe
0x7802:    c6 45 ab 00                           	mov byte ptr [rbp - 0x55], 0
0x7806:    c6 45 ac 0f                           	mov byte ptr [rbp - 0x54], 0xf
0x780a:    c6 45 ad 00                           	mov byte ptr [rbp - 0x53], 0
0x780e:    c6 45 ae 10                           	mov byte ptr [rbp - 0x52], 0x10
0x7812:    c6 45 af 00                           	mov byte ptr [rbp - 0x51], 0
0x7816:    c6 45 b0 11                           	mov byte ptr [rbp - 0x50], 0x11
0x781a:    c6 45 b1 00                           	mov byte ptr [rbp - 0x4f], 0
0x781e:    c6 45 b2 12                           	mov byte ptr [rbp - 0x4e], 0x12
0x7822:    c6 45 b3 1b                           	mov byte ptr [rbp - 0x4d], 0x1b
0x7826:    c6 45 b4 13                           	mov byte ptr [rbp - 0x4c], 0x13
0x782a:    c6 45 b5 10                           	mov byte ptr [rbp - 0x4b], 0x10
0x782e:    c6 45 b6 14                           	mov byte ptr [rbp - 0x4a], 0x14
0x7832:    c6 45 b7 00                           	mov byte ptr [rbp - 0x49], 0
0x7836:    c6 45 b8 15                           	mov byte ptr [rbp - 0x48], 0x15
0x783a:    c6 45 b9 04                           	mov byte ptr [rbp - 0x47], 4
0x783e:    83 7a 04 00                           	cmp dword ptr [rdx + 4], 0
0x7842:    75 43                                 	jne 0x7887 <InitRFDevice+0x10e>
0x7844:    48 8d 5d 90                           	lea rbx, [rbp - 0x70]
0x7848:    4c 8d 7b 2a                           	lea r15, [rbx + 0x2a]
0x784c:    4c 8d 6d c0                           	lea r13, [rbp - 0x40]
0x7850:    44 0f b6 f6                           	movzx r14d, sil
0x7854:    0f b6 03                              	movzx eax, byte ptr [rbx]
0x7857:    88 45 c0                              	mov byte ptr [rbp - 0x40], al
0x785a:    0f b6 43 01                           	movzx eax, byte ptr [rbx + 1]
0x785e:    88 45 c1                              	mov byte ptr [rbp - 0x3f], al
0x7861:    41 b8 00 00 00 00                     	mov r8d, 0
0x7867:    b9 02 00 00 00                        	mov ecx, 2
0x786c:    4c 89 ea                              	mov rdx, r13
0x786f:    44 89 f6                              	mov esi, r14d
0x7872:    4c 89 e7                              	mov rdi, r12
0x7875:    e8 f5 fd ff ff                        	call 0x766f <TunerRegWrite>
0x787a:    84 c0                                 	test al, al
0x787c:    74 7f                                 	je 0x78fd
0x787e:    48 83 c3 02                           	add rbx, 2
0x7882:    4c 39 fb                              	cmp rbx, r15
0x7885:    75 cd                                 	jne 0x7854 <InitRFDevice+0xdb>
0x7887:    c6 45 c0 10                           	mov byte ptr [rbp - 0x40], 0x10
0x788b:    c6 45 c1 00                           	mov byte ptr [rbp - 0x3f], 0
0x788f:    0f b6 5d 8f                           	movzx ebx, byte ptr [rbp - 0x71]
0x7893:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x7897:    41 b8 00 00 00 00                     	mov r8d, 0
0x789d:    b9 02 00 00 00                        	mov ecx, 2
0x78a2:    89 de                                 	mov esi, ebx
0x78a4:    4c 89 e7                              	mov rdi, r12
0x78a7:    e8 c3 fd ff ff                        	call 0x766f <TunerRegWrite>
0x78ac:    84 c0                                 	test al, al
0x78ae:    74 4d                                 	je 0x78fd
0x78b0:    c6 45 c0 10                           	mov byte ptr [rbp - 0x40], 0x10
0x78b4:    c6 45 c1 10                           	mov byte ptr [rbp - 0x3f], 0x10
0x78b8:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x78bc:    41 b8 00 00 00 00                     	mov r8d, 0
0x78c2:    b9 02 00 00 00                        	mov ecx, 2
0x78c7:    89 de                                 	mov esi, ebx
0x78c9:    4c 89 e7                              	mov rdi, r12
0x78cc:    e8 9e fd ff ff                        	call 0x766f <TunerRegWrite>
0x78d1:    84 c0                                 	test al, al
0x78d3:    74 28                                 	je 0x78fd
0x78d5:    c6 45 c0 10                           	mov byte ptr [rbp - 0x40], 0x10
0x78d9:    c6 45 c1 00                           	mov byte ptr [rbp - 0x3f], 0
0x78dd:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
; function: FC0012_RSSI_Calibration at 0x78e1 -- 0x7911
0x78e1:    41 b8 00 00 00 00                     	mov r8d, 0
0x78e7:    b9 02 00 00 00                        	mov ecx, 2
0x78ec:    89 de                                 	mov esi, ebx
0x78ee:    4c 89 e7                              	mov rdi, r12
0x78f1:    e8 79 fd ff ff                        	call 0x766f <TunerRegWrite>
0x78f6:    84 c0                                 	test al, al
0x78f8:    0f 95 c0                              	setne al
0x78fb:    eb 05                                 	jmp 0x7902 <FC0012_RSSI_Calibration+0x21>
0x78fd:    b8 00 00 00 00                        	mov eax, 0
0x7902:    48 83 c4 58                           	add rsp, 0x58
0x7906:    5b                                    	pop rbx
0x7907:    41 5c                                 	pop r12
0x7909:    41 5d                                 	pop r13
0x790b:    41 5e                                 	pop r14
0x790d:    41 5f                                 	pop r15
0x790f:    c9                                    	leave 
0x7910:    c3                                    	ret 
; function: FC0012_RSSI_Calibration at 0x7911 -- 0x7a31
0x7911:    55                                    	push rbp
0x7912:    48 89 e5                              	mov rbp, rsp
0x7915:    41 54                                 	push r12
0x7917:    53                                    	push rbx
0x7918:    48 83 ec 10                           	sub rsp, 0x10
0x791c:    e8 cf 72 03 00                        	call 0x3ebf0 <mcount>
0x7921:    49 89 fc                              	mov r12, rdi
0x7924:    40 0f b6 de                           	movzx ebx, sil
0x7928:    48 8d 4d e1                           	lea rcx, [rbp - 0x1f]
0x792c:    41 b9 00 00 00 00                     	mov r9d, 0
0x7932:    41 b8 01 00 00 00                     	mov r8d, 1
0x7938:    ba 09 00 00 00                        	mov edx, 9
0x793d:    89 de                                 	mov esi, ebx
0x793f:    e8 e6 fb ff ff                        	call 0x752a <TunerRegRead>
0x7944:    84 c0                                 	test al, al
0x7946:    0f 84 16 01 00 00                     	je 0x7a62
0x794c:    c6 45 e0 09                           	mov byte ptr [rbp - 0x20], 9
0x7950:    80 4d e1 10                           	or byte ptr [rbp - 0x1f], 0x10
0x7954:    48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x7958:    41 b8 00 00 00 00                     	mov r8d, 0
0x795e:    b9 02 00 00 00                        	mov ecx, 2
0x7963:    89 de                                 	mov esi, ebx
0x7965:    4c 89 e7                              	mov rdi, r12
0x7968:    e8 02 fd ff ff                        	call 0x766f <TunerRegWrite>
0x796d:    84 c0                                 	test al, al
0x796f:    0f 84 ed 00 00 00                     	je 0x7a62
0x7975:    48 8d 4d e1                           	lea rcx, [rbp - 0x1f]
0x7979:    41 b9 00 00 00 00                     	mov r9d, 0
0x797f:    41 b8 01 00 00 00                     	mov r8d, 1
0x7985:    ba 06 00 00 00                        	mov edx, 6
0x798a:    89 de                                 	mov esi, ebx
0x798c:    4c 89 e7                              	mov rdi, r12
0x798f:    e8 96 fb ff ff                        	call 0x752a <TunerRegRead>
0x7994:    84 c0                                 	test al, al
0x7996:    0f 84 c6 00 00 00                     	je 0x7a62
0x799c:    c6 45 e0 06                           	mov byte ptr [rbp - 0x20], 6
0x79a0:    80 4d e1 01                           	or byte ptr [rbp - 0x1f], 1
0x79a4:    48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x79a8:    41 b8 00 00 00 00                     	mov r8d, 0
0x79ae:    b9 02 00 00 00                        	mov ecx, 2
0x79b3:    89 de                                 	mov esi, ebx
0x79b5:    4c 89 e7                              	mov rdi, r12
0x79b8:    e8 b2 fc ff ff                        	call 0x766f <TunerRegWrite>
0x79bd:    84 c0                                 	test al, al
0x79bf:    0f 84 9d 00 00 00                     	je 0x7a62
0x79c5:    bf 01 00 00 00                        	mov edi, 1
0x79ca:    e8 d2 51 01 00                        	call 0x1cba1 <TLIB_Delay>
0x79cf:    48 8d 4d e1                           	lea rcx, [rbp - 0x1f]
0x79d3:    41 b9 00 00 00 00                     	mov r9d, 0
0x79d9:    41 b8 01 00 00 00                     	mov r8d, 1
0x79df:    ba 09 00 00 00                        	mov edx, 9
0x79e4:    89 de                                 	mov esi, ebx
0x79e6:    4c 89 e7                              	mov rdi, r12
0x79e9:    e8 3c fb ff ff                        	call 0x752a <TunerRegRead>
0x79ee:    84 c0                                 	test al, al
0x79f0:    74 70                                 	je 0x7a62
0x79f2:    c6 45 e0 09                           	mov byte ptr [rbp - 0x20], 9
0x79f6:    80 65 e1 ef                           	and byte ptr [rbp - 0x1f], 0xef
0x79fa:    48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x79fe:    41 b8 00 00 00 00                     	mov r8d, 0
0x7a04:    b9 02 00 00 00                        	mov ecx, 2
0x7a09:    89 de                                 	mov esi, ebx
0x7a0b:    4c 89 e7                              	mov rdi, r12
0x7a0e:    e8 5c fc ff ff                        	call 0x766f <TunerRegWrite>
0x7a13:    84 c0                                 	test al, al
0x7a15:    74 4b                                 	je 0x7a62
0x7a17:    48 8d 4d e1                           	lea rcx, [rbp - 0x1f]
0x7a1b:    41 b9 00 00 00 00                     	mov r9d, 0
0x7a21:    41 b8 01 00 00 00                     	mov r8d, 1
0x7a27:    ba 06 00 00 00                        	mov edx, 6
0x7a2c:    89 de                                 	mov esi, ebx
0x7a2e:    4c 89 e7                              	mov rdi, r12
; data inside code section at 0x7a31 -- 0x7a40
0x7a31:    e8 f4 fa ff ff 84 c0 74  28 c6 45 e0 06 80 65      |.......t(.E...e |
; function: Adpater_SetFreqISDBT at 0x7a40 -- 0x7a70
0x7a40:    e1 ef                                 	loope 0x7a31
0x7a42:    48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x7a46:    41 b8 00 00 00 00                     	mov r8d, 0
0x7a4c:    b9 02 00 00 00                        	mov ecx, 2
0x7a51:    89 de                                 	mov esi, ebx
0x7a53:    4c 89 e7                              	mov rdi, r12
0x7a56:    e8 14 fc ff ff                        	call 0x766f <TunerRegWrite>
0x7a5b:    84 c0                                 	test al, al
0x7a5d:    0f 95 c0                              	setne al
0x7a60:    eb 05                                 	jmp 0x7a67 <Adpater_SetFreqISDBT+0x27>
0x7a62:    b8 00 00 00 00                        	mov eax, 0
0x7a67:    48 83 c4 10                           	add rsp, 0x10
0x7a6b:    5b                                    	pop rbx
0x7a6c:    41 5c                                 	pop r12
0x7a6e:    c9                                    	leave 
0x7a6f:    c3                                    	ret 
; function: Adpater_SetFreqISDBT at 0x7a70 -- 0x7f23
0x7a70:    55                                    	push rbp
0x7a71:    48 89 e5                              	mov rbp, rsp
0x7a74:    41 57                                 	push r15
0x7a76:    41 56                                 	push r14
0x7a78:    41 55                                 	push r13
0x7a7a:    41 54                                 	push r12
0x7a7c:    53                                    	push rbx
0x7a7d:    48 83 ec 48                           	sub rsp, 0x48
0x7a81:    e8 6a 71 03 00                        	call 0x3ebf0 <mcount>
0x7a86:    49 89 fe                              	mov r14, rdi
0x7a89:    49 89 d7                              	mov r15, rdx
0x7a8c:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x7a95:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x7a99:    31 c0                                 	xor eax, eax
0x7a9b:    44 0f b6 ee                           	movzx r13d, sil
0x7a9f:    44 89 ee                              	mov esi, r13d
0x7aa2:    e8 6a fe ff ff                        	call 0x7911 <FC0012_RSSI_Calibration>
0x7aa7:    4b 8d 04 7f                           	lea rax, [r15 + r15*2]
0x7aab:    48 c1 e0 05                           	shl rax, 5
0x7aaf:    48 3d 3f 52 36 00                     	cmp rax, 0x36523f
0x7ab5:    77 12                                 	ja 0x7ac9 <Adpater_SetFreqISDBT+0x59>
0x7ab7:    c6 45 b5 82                           	mov byte ptr [rbp - 0x4b], 0x82
0x7abb:    c6 45 b6 00                           	mov byte ptr [rbp - 0x4a], 0
0x7abf:    b9 60 00 00 00                        	mov ecx, 0x60
0x7ac4:    e9 0a 01 00 00                        	jmp 0x7bd3 <Adpater_SetFreqISDBT+0x163>
0x7ac9:    4c 89 f8                              	mov rax, r15
0x7acc:    48 c1 e0 06                           	shl rax, 6
0x7ad0:    48 3d 3f 52 36 00                     	cmp rax, 0x36523f
0x7ad6:    77 12                                 	ja 0x7aea <Adpater_SetFreqISDBT+0x7a>
0x7ad8:    c6 45 b5 82                           	mov byte ptr [rbp - 0x4b], 0x82
0x7adc:    c6 45 b6 02                           	mov byte ptr [rbp - 0x4a], 2
0x7ae0:    b9 40 00 00 00                        	mov ecx, 0x40
0x7ae5:    e9 e9 00 00 00                        	jmp 0x7bd3 <Adpater_SetFreqISDBT+0x163>
0x7aea:    4b 8d 04 7f                           	lea rax, [r15 + r15*2]
0x7aee:    48 c1 e0 04                           	shl rax, 4
0x7af2:    48 3d 3f 52 36 00                     	cmp rax, 0x36523f
0x7af8:    77 12                                 	ja 0x7b0c <Adpater_SetFreqISDBT+0x9c>
0x7afa:    c6 45 b5 42                           	mov byte ptr [rbp - 0x4b], 0x42
0x7afe:    c6 45 b6 00                           	mov byte ptr [rbp - 0x4a], 0
0x7b02:    b9 30 00 00 00                        	mov ecx, 0x30
0x7b07:    e9 c7 00 00 00                        	jmp 0x7bd3 <Adpater_SetFreqISDBT+0x163>
0x7b0c:    4c 89 f8                              	mov rax, r15
0x7b0f:    48 c1 e0 05                           	shl rax, 5
0x7b13:    48 3d 3f 52 36 00                     	cmp rax, 0x36523f
0x7b19:    77 12                                 	ja 0x7b2d <Adpater_SetFreqISDBT+0xbd>
0x7b1b:    c6 45 b5 42                           	mov byte ptr [rbp - 0x4b], 0x42
0x7b1f:    c6 45 b6 02                           	mov byte ptr [rbp - 0x4a], 2
0x7b23:    b9 20 00 00 00                        	mov ecx, 0x20
0x7b28:    e9 a6 00 00 00                        	jmp 0x7bd3 <Adpater_SetFreqISDBT+0x163>
0x7b2d:    4b 8d 04 7f                           	lea rax, [r15 + r15*2]
0x7b31:    48 c1 e0 03                           	shl rax, 3
0x7b35:    48 3d 3f 52 36 00                     	cmp rax, 0x36523f
0x7b3b:    77 12                                 	ja 0x7b4f <Adpater_SetFreqISDBT+0xdf>
0x7b3d:    c6 45 b5 22                           	mov byte ptr [rbp - 0x4b], 0x22
0x7b41:    c6 45 b6 00                           	mov byte ptr [rbp - 0x4a], 0
0x7b45:    b9 18 00 00 00                        	mov ecx, 0x18
0x7b4a:    e9 84 00 00 00                        	jmp 0x7bd3 <Adpater_SetFreqISDBT+0x163>
0x7b4f:    4c 89 f8                              	mov rax, r15
0x7b52:    48 c1 e0 04                           	shl rax, 4
0x7b56:    48 3d 3f 52 36 00                     	cmp rax, 0x36523f
0x7b5c:    77 0f                                 	ja 0x7b6d <Adpater_SetFreqISDBT+0xfd>
0x7b5e:    c6 45 b5 22                           	mov byte ptr [rbp - 0x4b], 0x22
0x7b62:    c6 45 b6 02                           	mov byte ptr [rbp - 0x4a], 2
0x7b66:    b9 10 00 00 00                        	mov ecx, 0x10
0x7b6b:    eb 66                                 	jmp 0x7bd3 <Adpater_SetFreqISDBT+0x163>
0x7b6d:    4b 8d 04 7f                           	lea rax, [r15 + r15*2]
0x7b71:    48 c1 e0 02                           	shl rax, 2
0x7b75:    48 3d 3f 52 36 00                     	cmp rax, 0x36523f
0x7b7b:    77 0f                                 	ja 0x7b8c <Adpater_SetFreqISDBT+0x11c>
0x7b7d:    c6 45 b5 12                           	mov byte ptr [rbp - 0x4b], 0x12
0x7b81:    c6 45 b6 00                           	mov byte ptr [rbp - 0x4a], 0
0x7b85:    b9 0c 00 00 00                        	mov ecx, 0xc ; "GNU"
0x7b8a:    eb 47                                 	jmp 0x7bd3 <Adpater_SetFreqISDBT+0x163>
0x7b8c:    4a 8d 04 fd 00 00 00 00               	lea rax, [r15*8]
0x7b94:    48 3d 3f 52 36 00                     	cmp rax, 0x36523f
0x7b9a:    77 0f                                 	ja 0x7bab <Adpater_SetFreqISDBT+0x13b>
0x7b9c:    c6 45 b5 12                           	mov byte ptr [rbp - 0x4b], 0x12
0x7ba0:    c6 45 b6 02                           	mov byte ptr [rbp - 0x4a], 2
0x7ba4:    b9 08 00 00 00                        	mov ecx, 8
0x7ba9:    eb 28                                 	jmp 0x7bd3 <Adpater_SetFreqISDBT+0x163>
0x7bab:    49 6b c7 06                           	imul rax, r15, 6
0x7baf:    48 3d 3f 52 36 00                     	cmp rax, 0x36523f
0x7bb5:    77 0f                                 	ja 0x7bc6 <Adpater_SetFreqISDBT+0x156>
0x7bb7:    c6 45 b5 0a                           	mov byte ptr [rbp - 0x4b], 0xa
0x7bbb:    c6 45 b6 00                           	mov byte ptr [rbp - 0x4a], 0
0x7bbf:    b9 06 00 00 00                        	mov ecx, 6
0x7bc4:    eb 0d                                 	jmp 0x7bd3 <Adpater_SetFreqISDBT+0x163>
0x7bc6:    c6 45 b5 0a                           	mov byte ptr [rbp - 0x4b], 0xa
0x7bca:    c6 45 b6 02                           	mov byte ptr [rbp - 0x4a], 2
0x7bce:    b9 04 00 00 00                        	mov ecx, 4
0x7bd3:    0f b6 c9                              	movzx ecx, cl
0x7bd6:    41 0f af cf                           	imul ecx, r15d
0x7bda:    c6 45 9e 00                           	mov byte ptr [rbp - 0x62], 0
0x7bde:    81 f9 1f b1 2e 00                     	cmp ecx, 0x2eb11f
0x7be4:    76 08                                 	jbe 0x7bee <Adpater_SetFreqISDBT+0x17e>
0x7be6:    80 4d b6 08                           	or byte ptr [rbp - 0x4a], 8
0x7bea:    c6 45 9e 01                           	mov byte ptr [rbp - 0x62], 1
0x7bee:    ba d5 52 04 e9                        	mov edx, 0xe90452d5
0x7bf3:    89 c8                                 	mov eax, ecx
0x7bf5:    f7 e2                                 	mul edx
0x7bf7:    c1 ea 0e                              	shr edx, 0xe
0x7bfa:    0f b7 c2                              	movzx eax, dx
0x7bfd:    69 c0 b0 b9 ff ff                     	imul eax, eax, 0xffffb9b0
0x7c03:    01 c8                                 	add eax, ecx
0x7c05:    8d 5a 01                              	lea ebx, [rdx + 1]
0x7c08:    3d 27 23 00 00                        	cmp eax, 0x2327
0x7c0d:    0f 46 da                              	cmovbe ebx, edx
0x7c10:    89 d8                                 	mov eax, ebx
0x7c12:    66 c1 e8 03                           	shr ax, 3
0x7c16:    8d 34 c5 00 00 00 00                  	lea esi, [rax*8]
0x7c1d:    40 28 f3                              	sub bl, sil
0x7c20:    80 fb 01                              	cmp bl, 1
0x7c23:    77 0e                                 	ja 0x7c33 <Adpater_SetFreqISDBT+0x1c3>
0x7c25:    83 c3 08                              	add ebx, 8
0x7c28:    88 5d b1                              	mov byte ptr [rbp - 0x4f], bl
0x7c2b:    83 e8 01                              	sub eax, 1
0x7c2e:    88 45 b2                              	mov byte ptr [rbp - 0x4e], al
0x7c31:    eb 06                                 	jmp 0x7c39 <Adpater_SetFreqISDBT+0x1c9>
0x7c33:    88 5d b1                              	mov byte ptr [rbp - 0x4f], bl
0x7c36:    88 45 b2                              	mov byte ptr [rbp - 0x4e], al
0x7c39:    66 69 d2 b0 b9                        	imul dx, dx, 0xb9b0
0x7c3e:    01 ca                                 	add edx, ecx
0x7c40:    0f b7 d2                              	movzx edx, dx
0x7c43:    c1 e2 0f                              	shl edx, 0xf
0x7c46:    bb 6b 29 82 74                        	mov ebx, 0x7482296b
0x7c4b:    89 d0                                 	mov eax, edx
0x7c4d:    f7 eb                                 	imul ebx
0x7c4f:    c1 ea 0d                              	shr edx, 0xd ; "NU"
0x7c52:    8d 82 00 80 ff ff                     	lea eax, [rdx - 0x8000]
0x7c58:    66 81 fa 00 40                        	cmp dx, 0x4000
0x7c5d:    0f 43 d0                              	cmovae edx, eax
0x7c60:    89 d0                                 	mov eax, edx
0x7c62:    66 c1 e8 08                           	shr ax, 8
0x7c66:    88 45 b3                              	mov byte ptr [rbp - 0x4d], al
0x7c69:    88 55 b4                              	mov byte ptr [rbp - 0x4c], dl
0x7c6c:    0f b6 45 b6                           	movzx eax, byte ptr [rbp - 0x4a]
0x7c70:    83 c8 80                              	or eax, 0xffffff80
0x7c73:    88 45 9f                              	mov byte ptr [rbp - 0x61], al
0x7c76:    88 45 b6                              	mov byte ptr [rbp - 0x4a], al
0x7c79:    80 4d b5 07                           	or byte ptr [rbp - 0x4b], 7
0x7c7d:    48 8d 5d b1                           	lea rbx, [rbp - 0x4f]
0x7c81:    41 bc 01 00 00 00                     	mov r12d, 1
0x7c87:    44 88 65 a0                           	mov byte ptr [rbp - 0x60], r12b
0x7c8b:    0f b6 03                              	movzx eax, byte ptr [rbx]
0x7c8e:    88 45 a1                              	mov byte ptr [rbp - 0x5f], al
0x7c91:    41 b8 00 00 00 00                     	mov r8d, 0
0x7c97:    b9 02 00 00 00                        	mov ecx, 2
0x7c9c:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x7ca0:    44 89 ee                              	mov esi, r13d
0x7ca3:    4c 89 f7                              	mov rdi, r14
0x7ca6:    e8 c4 f9 ff ff                        	call 0x766f <TunerRegWrite>
0x7cab:    84 c0                                 	test al, al
0x7cad:    0f 84 7c 02 00 00                     	je 0x7f2f
0x7cb3:    41 83 c4 01                           	add r12d, 1
0x7cb7:    48 83 c3 01                           	add rbx, 1
0x7cbb:    41 83 fc 07                           	cmp r12d, 7
0x7cbf:    75 c6                                 	jne 0x7c87 <Adpater_SetFreqISDBT+0x217>
0x7cc1:    c6 45 a0 0e                           	mov byte ptr [rbp - 0x60], 0xe
0x7cc5:    c6 45 a1 80                           	mov byte ptr [rbp - 0x5f], 0x80
0x7cc9:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x7ccd:    41 b8 00 00 00 00                     	mov r8d, 0
0x7cd3:    b9 02 00 00 00                        	mov ecx, 2
0x7cd8:    44 89 ee                              	mov esi, r13d
0x7cdb:    4c 89 f7                              	mov rdi, r14
0x7cde:    e8 8c f9 ff ff                        	call 0x766f <TunerRegWrite>
0x7ce3:    84 c0                                 	test al, al
0x7ce5:    0f 84 44 02 00 00                     	je 0x7f2f
0x7ceb:    c6 45 a1 00                           	mov byte ptr [rbp - 0x5f], 0
0x7cef:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x7cf3:    41 b8 00 00 00 00                     	mov r8d, 0
0x7cf9:    b9 02 00 00 00                        	mov ecx, 2
0x7cfe:    44 89 ee                              	mov esi, r13d
0x7d01:    4c 89 f7                              	mov rdi, r14
0x7d04:    e8 66 f9 ff ff                        	call 0x766f <TunerRegWrite>
0x7d09:    84 c0                                 	test al, al
0x7d0b:    0f 84 1e 02 00 00                     	je 0x7f2f
0x7d11:    bf 01 00 00 00                        	mov edi, 1
0x7d16:    e8 86 4e 01 00                        	call 0x1cba1 <TLIB_Delay>
0x7d1b:    c6 45 a1 00                           	mov byte ptr [rbp - 0x5f], 0
0x7d1f:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x7d23:    41 b8 00 00 00 00                     	mov r8d, 0
0x7d29:    b9 02 00 00 00                        	mov ecx, 2
0x7d2e:    44 89 ee                              	mov esi, r13d
0x7d31:    4c 89 f7                              	mov rdi, r14
0x7d34:    e8 36 f9 ff ff                        	call 0x766f <TunerRegWrite>
0x7d39:    84 c0                                 	test al, al
0x7d3b:    0f 84 ee 01 00 00                     	je 0x7f2f
0x7d41:    48 8d 4d a1                           	lea rcx, [rbp - 0x5f]
0x7d45:    41 b9 00 00 00 00                     	mov r9d, 0
0x7d4b:    41 b8 01 00 00 00                     	mov r8d, 1
0x7d51:    ba 0e 00 00 00                        	mov edx, 0xe
0x7d56:    44 89 ee                              	mov esi, r13d
0x7d59:    4c 89 f7                              	mov rdi, r14
0x7d5c:    e8 c9 f7 ff ff                        	call 0x752a <TunerRegRead>
0x7d61:    84 c0                                 	test al, al
0x7d63:    0f 84 c6 01 00 00                     	je 0x7f2f
0x7d69:    0f b6 45 a1                           	movzx eax, byte ptr [rbp - 0x5f]
0x7d6d:    83 e0 3f                              	and eax, 0x3f
0x7d70:    80 7d 9e 00                           	cmp byte ptr [rbp - 0x62], 0
0x7d74:    0f 84 97 00 00 00                     	je 0x7e11 <Adpater_SetFreqISDBT+0x3a1>
0x7d7a:    3c 3c                                 	cmp al, 0x3c
0x7d7c:    0f 86 21 01 00 00                     	jbe 0x7ea3 <Adpater_SetFreqISDBT+0x433>
0x7d82:    c6 45 a0 06                           	mov byte ptr [rbp - 0x60], 6
0x7d86:    0f b6 45 9f                           	movzx eax, byte ptr [rbp - 0x61]
0x7d8a:    83 e0 f7                              	and eax, 0xfffffff7
0x7d8d:    88 45 a1                              	mov byte ptr [rbp - 0x5f], al
0x7d90:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x7d94:    41 b8 00 00 00 00                     	mov r8d, 0
0x7d9a:    b9 02 00 00 00                        	mov ecx, 2
0x7d9f:    44 89 ee                              	mov esi, r13d
0x7da2:    4c 89 f7                              	mov rdi, r14
0x7da5:    e8 c5 f8 ff ff                        	call 0x766f <TunerRegWrite>
0x7daa:    84 c0                                 	test al, al
0x7dac:    0f 84 7d 01 00 00                     	je 0x7f2f
0x7db2:    c6 45 a0 0e                           	mov byte ptr [rbp - 0x60], 0xe
0x7db6:    c6 45 a1 80                           	mov byte ptr [rbp - 0x5f], 0x80
0x7dba:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x7dbe:    41 b8 00 00 00 00                     	mov r8d, 0
0x7dc4:    b9 02 00 00 00                        	mov ecx, 2
0x7dc9:    44 89 ee                              	mov esi, r13d
0x7dcc:    4c 89 f7                              	mov rdi, r14
0x7dcf:    e8 9b f8 ff ff                        	call 0x766f <TunerRegWrite>
0x7dd4:    84 c0                                 	test al, al
0x7dd6:    0f 84 53 01 00 00                     	je 0x7f2f
0x7ddc:    c6 45 a1 00                           	mov byte ptr [rbp - 0x5f], 0
0x7de0:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x7de4:    41 b8 00 00 00 00                     	mov r8d, 0
0x7dea:    b9 02 00 00 00                        	mov ecx, 2
0x7def:    44 89 ee                              	mov esi, r13d
0x7df2:    4c 89 f7                              	mov rdi, r14
0x7df5:    e8 75 f8 ff ff                        	call 0x766f <TunerRegWrite>
0x7dfa:    84 c0                                 	test al, al
0x7dfc:    0f 84 2d 01 00 00                     	je 0x7f2f
0x7e02:    bf 01 00 00 00                        	mov edi, 1
0x7e07:    e8 95 4d 01 00                        	call 0x1cba1 <TLIB_Delay>
0x7e0c:    e9 92 00 00 00                        	jmp 0x7ea3 <Adpater_SetFreqISDBT+0x433>
0x7e11:    3c 01                                 	cmp al, 1
0x7e13:    0f 87 8a 00 00 00                     	ja 0x7ea3 <Adpater_SetFreqISDBT+0x433>
0x7e19:    c6 45 a0 06                           	mov byte ptr [rbp - 0x60], 6
0x7e1d:    0f b6 45 9f                           	movzx eax, byte ptr [rbp - 0x61]
0x7e21:    83 c8 08                              	or eax, 8
0x7e24:    88 45 a1                              	mov byte ptr [rbp - 0x5f], al
0x7e27:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x7e2b:    41 b8 00 00 00 00                     	mov r8d, 0
0x7e31:    b9 02 00 00 00                        	mov ecx, 2
0x7e36:    44 89 ee                              	mov esi, r13d
0x7e39:    4c 89 f7                              	mov rdi, r14
0x7e3c:    e8 2e f8 ff ff                        	call 0x766f <TunerRegWrite>
0x7e41:    84 c0                                 	test al, al
0x7e43:    0f 84 e6 00 00 00                     	je 0x7f2f
0x7e49:    c6 45 a0 0e                           	mov byte ptr [rbp - 0x60], 0xe
0x7e4d:    c6 45 a1 80                           	mov byte ptr [rbp - 0x5f], 0x80
0x7e51:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x7e55:    41 b8 00 00 00 00                     	mov r8d, 0
0x7e5b:    b9 02 00 00 00                        	mov ecx, 2
0x7e60:    44 89 ee                              	mov esi, r13d
0x7e63:    4c 89 f7                              	mov rdi, r14
0x7e66:    e8 04 f8 ff ff                        	call 0x766f <TunerRegWrite>
0x7e6b:    84 c0                                 	test al, al
0x7e6d:    0f 84 bc 00 00 00                     	je 0x7f2f
0x7e73:    c6 45 a1 00                           	mov byte ptr [rbp - 0x5f], 0
0x7e77:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x7e7b:    41 b8 00 00 00 00                     	mov r8d, 0
0x7e81:    b9 02 00 00 00                        	mov ecx, 2
0x7e86:    44 89 ee                              	mov esi, r13d
0x7e89:    4c 89 f7                              	mov rdi, r14
0x7e8c:    e8 de f7 ff ff                        	call 0x766f <TunerRegWrite>
0x7e91:    84 c0                                 	test al, al
0x7e93:    0f 84 96 00 00 00                     	je 0x7f2f
0x7e99:    bf 01 00 00 00                        	mov edi, 1
0x7e9e:    e8 fe 4c 01 00                        	call 0x1cba1 <TLIB_Delay>
0x7ea3:    48 8d 4d a0                           	lea rcx, [rbp - 0x60]
0x7ea7:    41 b9 00 00 00 00                     	mov r9d, 0
0x7ead:    41 b8 01 00 00 00                     	mov r8d, 1
0x7eb3:    ba 1e 00 00 00                        	mov edx, 0x1e
0x7eb8:    44 89 ee                              	mov esi, r13d
0x7ebb:    4c 89 f7                              	mov rdi, r14
0x7ebe:    e8 45 e8 ff ff                        	call 0x6708 <DemodRegRead>
0x7ec3:    84 c0                                 	test al, al
0x7ec5:    74 68                                 	je 0x7f2f
0x7ec7:    49 81 ff 87 fb 03 00                  	cmp r15, 0x3fb87
0x7ece:    77 34                                 	ja 0x7f04 <Adpater_SetFreqISDBT+0x494>
0x7ed0:    0f b6 45 a0                           	movzx eax, byte ptr [rbp - 0x60]
0x7ed4:    83 e0 cf                              	and eax, 0xffffffcf
0x7ed7:    83 c8 20                              	or eax, 0x20
0x7eda:    88 45 a0                              	mov byte ptr [rbp - 0x60], al
0x7edd:    48 8d 4d a0                           	lea rcx, [rbp - 0x60]
0x7ee1:    41 b9 00 00 00 00                     	mov r9d, 0
0x7ee7:    41 b8 01 00 00 00                     	mov r8d, 1
0x7eed:    ba 1e 00 00 00                        	mov edx, 0x1e
0x7ef2:    44 89 ee                              	mov esi, r13d
0x7ef5:    4c 89 f7                              	mov rdi, r14
0x7ef8:    e8 29 f4 ff ff                        	call 0x7326 <DemodRegWrite>
0x7efd:    84 c0                                 	test al, al
0x7eff:    0f 95 c0                              	setne al
0x7f02:    eb 30                                 	jmp 0x7f34
0x7f04:    80 4d a0 30                           	or byte ptr [rbp - 0x60], 0x30
0x7f08:    48 8d 4d a0                           	lea rcx, [rbp - 0x60]
0x7f0c:    41 b9 00 00 00 00                     	mov r9d, 0
0x7f12:    41 b8 01 00 00 00                     	mov r8d, 1
0x7f18:    ba 1e 00 00 00                        	mov edx, 0x1e
0x7f1d:    44 89 ee                              	mov esi, r13d
0x7f20:    4c 89 f7                              	mov rdi, r14
; data inside code section at 0x7f23 -- 0x7f27
0x7f23:    e8 fe f3 ff                                        |....            |
; function: Adpater_SetFreqISDBS at 0x7f27 -- 0x7f57
0x7f27:    ff 84 c0 0f 95 c0 eb                  	inc dword ptr [rax + rax*8 - 0x143f6af1]
0x7f2e:    05 b8 00 00 00                        	add eax, 0xb8
0x7f33:    00 48 8b                              	add byte ptr [rax - 0x75], cl
0x7f36:    55                                    	push rbp
0x7f37:    c8 65 48 33                           	enter 0x4865, 0x33
0x7f3b:    14 25                                 	adc al, 0x25
0x7f3d:    28 00                                 	sub byte ptr [rax], al
0x7f3f:    00 00                                 	add byte ptr [rax], al
0x7f41:    74 05                                 	je 0x7f48 <Adpater_SetFreqISDBS+0x21>
0x7f43:    e8 60 6c 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x7f48:    48 83 c4 48                           	add rsp, 0x48
0x7f4c:    5b                                    	pop rbx
0x7f4d:    41 5c                                 	pop r12
0x7f4f:    41 5d                                 	pop r13
0x7f51:    41 5e                                 	pop r14
0x7f53:    41 5f                                 	pop r15
0x7f55:    c9                                    	leave 
0x7f56:    c3                                    	ret 
; function: Adpater_SetFreqISDBS at 0x7f57 -- 0x811d
0x7f57:    55                                    	push rbp
0x7f58:    48 89 e5                              	mov rbp, rsp
0x7f5b:    41 55                                 	push r13
0x7f5d:    41 54                                 	push r12
0x7f5f:    53                                    	push rbx
0x7f60:    48 83 ec 28                           	sub rsp, 0x28
0x7f64:    e8 87 6c 03 00                        	call 0x3ebf0 <mcount>
0x7f69:    49 89 fc                              	mov r12, rdi
0x7f6c:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x7f75:    48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x7f79:    31 c0                                 	xor eax, eax
0x7f7b:    8b 05 1f d6 02 00                     	mov eax, dword ptr [rip + 0x2d61f]
0x7f81:    48 39 d0                              	cmp rax, rdx
0x7f84:    74 24                                 	je 0x7faa <Adpater_SetFreqISDBS+0x53>
0x7f86:    48 c7 c0 00 00 00 00                  	mov rax, 0
0x7f8d:    bb 01 00 00 00                        	mov ebx, 1
0x7f92:    8b 08                                 	mov ecx, dword ptr [rax]
0x7f94:    48 39 d1                              	cmp rcx, rdx
0x7f97:    74 16                                 	je 0x7faf <Adpater_SetFreqISDBS+0x58>
0x7f99:    83 c3 01                              	add ebx, 1
0x7f9c:    48 83 c0 0c                           	add rax, 0xc ; "GNU"
0x7fa0:    83 fb 18                              	cmp ebx, 0x18
0x7fa3:    75 ed                                 	jne 0x7f92 <Adpater_SetFreqISDBS+0x3b>
0x7fa5:    e9 7f 01 00 00                        	jmp 0x8129
0x7faa:    bb 00 00 00 00                        	mov ebx, 0
0x7faf:    48 81 fa 78 f2 b2 00                  	cmp rdx, 0xb2f278
0x7fb6:    74 09                                 	je 0x7fc1 <Adpater_SetFreqISDBS+0x6a>
0x7fb8:    48 81 fa 78 42 c2 00                  	cmp rdx, 0xc24278
0x7fbf:    75 5c                                 	jne 0x801d <Adpater_SetFreqISDBS+0xc6>
0x7fc1:    40 84 f6                              	test sil, sil
0x7fc4:    75 57                                 	jne 0x801d <Adpater_SetFreqISDBS+0xc6>
0x7fc6:    c6 45 c0 c0                           	mov byte ptr [rbp - 0x40], 0xc0
0x7fca:    48 63 db                              	movsxd rbx, ebx
0x7fcd:    48 8d 04 5b                           	lea rax, [rbx + rbx*2]
0x7fd1:    48 8d 14 85 00 00 00 00               	lea rdx, [rax*4]
0x7fd9:    48 8d 5d c0                           	lea rbx, [rbp - 0x40]
0x7fdd:    48 8d 43 01                           	lea rax, [rbx + 1]
0x7fe1:    48 83 c3 05                           	add rbx, 5
0x7fe5:    0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x7fe8:    88 08                                 	mov byte ptr [rax], cl
0x7fea:    48 83 c2 01                           	add rdx, 1
0x7fee:    48 83 c0 01                           	add rax, 1
0x7ff2:    48 39 d8                              	cmp rax, rbx
0x7ff5:    75 ee                                 	jne 0x7fe5 <Adpater_SetFreqISDBS+0x8e>
0x7ff7:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x7ffb:    41 b8 01 00 00 00                     	mov r8d, 1
0x8001:    b9 05 00 00 00                        	mov ecx, 5
0x8006:    be 00 00 00 00                        	mov esi, 0
0x800b:    4c 89 e7                              	mov rdi, r12
0x800e:    e8 5c f6 ff ff                        	call 0x766f <TunerRegWrite>
0x8013:    84 c0                                 	test al, al
0x8015:    0f 95 c0                              	setne al
0x8018:    e9 11 01 00 00                        	jmp 0x812e
0x801d:    c6 45 c0 c0                           	mov byte ptr [rbp - 0x40], 0xc0
0x8021:    48 63 c3                              	movsxd rax, ebx
0x8024:    48 8d 04 40                           	lea rax, [rax + rax*2]
0x8028:    48 8d 14 85 00 00 00 00               	lea rdx, [rax*4]
0x8030:    48 8d 7d c0                           	lea rdi, [rbp - 0x40]
0x8034:    48 8d 47 01                           	lea rax, [rdi + 1]
0x8038:    48 83 c7 05                           	add rdi, 5
0x803c:    0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x803f:    88 08                                 	mov byte ptr [rax], cl
0x8041:    48 83 c2 01                           	add rdx, 1
0x8045:    48 83 c0 01                           	add rax, 1
0x8049:    48 39 f8                              	cmp rax, rdi
0x804c:    75 ee                                 	jne 0x803c <Adpater_SetFreqISDBS+0xe5>
0x804e:    44 0f b6 ee                           	movzx r13d, sil
0x8052:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x8056:    41 b8 01 00 00 00                     	mov r8d, 1
0x805c:    b9 05 00 00 00                        	mov ecx, 5
0x8061:    44 89 ee                              	mov esi, r13d
0x8064:    4c 89 e7                              	mov rdi, r12
0x8067:    e8 03 f6 ff ff                        	call 0x766f <TunerRegWrite>
0x806c:    84 c0                                 	test al, al
0x806e:    0f 84 b5 00 00 00                     	je 0x8129
0x8074:    48 63 c3                              	movsxd rax, ebx
0x8077:    48 8d 44 40 01                        	lea rax, [rax + rax*2 + 1]
0x807c:    0f b6 04 85 00 00 00 00               	movzx eax, byte ptr [rax*4]
0x8084:    88 45 c1                              	mov byte ptr [rbp - 0x3f], al
0x8087:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x808b:    41 b8 01 00 00 00                     	mov r8d, 1
0x8091:    b9 02 00 00 00                        	mov ecx, 2
0x8096:    44 89 ee                              	mov esi, r13d
0x8099:    4c 89 e7                              	mov rdi, r12
0x809c:    e8 ce f5 ff ff                        	call 0x766f <TunerRegWrite>
0x80a1:    84 c0                                 	test al, al
0x80a3:    0f 84 80 00 00 00                     	je 0x8129
0x80a9:    bf 0a 00 00 00                        	mov edi, 0xa
0x80ae:    e8 ee 4a 01 00                        	call 0x1cba1 <TLIB_Delay>
0x80b3:    48 63 c3                              	movsxd rax, ebx
0x80b6:    48 8d 14 00                           	lea rdx, [rax + rax]
0x80ba:    48 8d 0c 02                           	lea rcx, [rdx + rax]
0x80be:    0f b6 0c 8d 00 00 00 00               	movzx ecx, byte ptr [rcx*4]
0x80c6:    88 4d c1                              	mov byte ptr [rbp - 0x3f], cl
0x80c9:    48 8d 04 02                           	lea rax, [rdx + rax]
0x80cd:    0f b6 04 85 00 00 00 00               	movzx eax, byte ptr [rax*4]
0x80d5:    88 45 c2                              	mov byte ptr [rbp - 0x3e], al
0x80d8:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x80dc:    41 b8 01 00 00 00                     	mov r8d, 1
0x80e2:    b9 03 00 00 00                        	mov ecx, 3
0x80e7:    44 89 ee                              	mov esi, r13d
0x80ea:    4c 89 e7                              	mov rdi, r12
0x80ed:    e8 7d f5 ff ff                        	call 0x766f <TunerRegWrite>
0x80f2:    84 c0                                 	test al, al
0x80f4:    74 33                                 	je 0x8129
0x80f6:    48 63 db                              	movsxd rbx, ebx
0x80f9:    48 8d 04 5b                           	lea rax, [rbx + rbx*2]
0x80fd:    0f b6 04 85 00 00 00 00               	movzx eax, byte ptr [rax*4]
0x8105:    88 45 c1                              	mov byte ptr [rbp - 0x3f], al
0x8108:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x810c:    41 b8 01 00 00 00                     	mov r8d, 1
0x8112:    b9 02 00 00 00                        	mov ecx, 2
0x8117:    44 89 ee                              	mov esi, r13d
0x811a:    4c 89 e7                              	mov rdi, r12
; function: Adpater_SetFreqISDBS_1 at 0x811d -- 0x814d
0x811d:    e8 4d f5 ff ff                        	call 0x766f <TunerRegWrite>
0x8122:    84 c0                                 	test al, al
0x8124:    0f 95 c0                              	setne al
0x8127:    eb 05                                 	jmp 0x812e <Adpater_SetFreqISDBS_1+0x11>
0x8129:    b8 00 00 00 00                        	mov eax, 0
0x812e:    48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x8132:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x813b:    74 05                                 	je 0x8142 <Adpater_SetFreqISDBS_1+0x25>
0x813d:    e8 66 6a 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x8142:    48 83 c4 28                           	add rsp, 0x28
0x8146:    5b                                    	pop rbx
0x8147:    41 5c                                 	pop r12
0x8149:    41 5d                                 	pop r13
0x814b:    c9                                    	leave 
0x814c:    c3                                    	ret 
; function: Adpater_SetFreqISDBS_1 at 0x814d -- 0x82a5
0x814d:    55                                    	push rbp
0x814e:    48 89 e5                              	mov rbp, rsp
0x8151:    41 55                                 	push r13
0x8153:    41 54                                 	push r12
0x8155:    53                                    	push rbx
0x8156:    48 83 ec 28                           	sub rsp, 0x28
0x815a:    e8 91 6a 03 00                        	call 0x3ebf0 <mcount>
0x815f:    49 89 fc                              	mov r12, rdi
0x8162:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x816b:    48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x816f:    31 c0                                 	xor eax, eax
0x8171:    8b 05 49 d5 02 00                     	mov eax, dword ptr [rip + 0x2d549]
0x8177:    48 39 d0                              	cmp rax, rdx
0x817a:    74 24                                 	je 0x81a0 <Adpater_SetFreqISDBS_1+0x53>
0x817c:    48 c7 c0 00 00 00 00                  	mov rax, 0
0x8183:    bb 01 00 00 00                        	mov ebx, 1
0x8188:    8b 08                                 	mov ecx, dword ptr [rax]
0x818a:    48 39 d1                              	cmp rcx, rdx
0x818d:    74 16                                 	je 0x81a5 <Adpater_SetFreqISDBS_1+0x58>
0x818f:    83 c3 01                              	add ebx, 1
0x8192:    48 83 c0 0c                           	add rax, 0xc ; "GNU"
0x8196:    83 fb 18                              	cmp ebx, 0x18
0x8199:    75 ed                                 	jne 0x8188 <Adpater_SetFreqISDBS_1+0x3b>
0x819b:    e9 11 01 00 00                        	jmp 0x82b1
0x81a0:    bb 00 00 00 00                        	mov ebx, 0
0x81a5:    c6 45 c0 c0                           	mov byte ptr [rbp - 0x40], 0xc0
0x81a9:    48 63 c3                              	movsxd rax, ebx
0x81ac:    48 8d 04 40                           	lea rax, [rax + rax*2]
0x81b0:    48 8d 14 85 00 00 00 00               	lea rdx, [rax*4]
0x81b8:    48 8d 7d c0                           	lea rdi, [rbp - 0x40]
0x81bc:    48 8d 47 01                           	lea rax, [rdi + 1]
0x81c0:    48 83 c7 05                           	add rdi, 5
0x81c4:    0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x81c7:    88 08                                 	mov byte ptr [rax], cl
0x81c9:    48 83 c2 01                           	add rdx, 1
0x81cd:    48 83 c0 01                           	add rax, 1
0x81d1:    48 39 f8                              	cmp rax, rdi
0x81d4:    75 ee                                 	jne 0x81c4 <Adpater_SetFreqISDBS_1+0x77>
0x81d6:    44 0f b6 ee                           	movzx r13d, sil
0x81da:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x81de:    41 b8 01 00 00 00                     	mov r8d, 1
0x81e4:    b9 05 00 00 00                        	mov ecx, 5
0x81e9:    44 89 ee                              	mov esi, r13d
0x81ec:    4c 89 e7                              	mov rdi, r12
0x81ef:    e8 7b f4 ff ff                        	call 0x766f <TunerRegWrite>
0x81f4:    84 c0                                 	test al, al
0x81f6:    0f 84 b5 00 00 00                     	je 0x82b1
0x81fc:    48 63 c3                              	movsxd rax, ebx
0x81ff:    48 8d 44 40 01                        	lea rax, [rax + rax*2 + 1]
0x8204:    0f b6 04 85 00 00 00 00               	movzx eax, byte ptr [rax*4]
0x820c:    88 45 c1                              	mov byte ptr [rbp - 0x3f], al
0x820f:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x8213:    41 b8 01 00 00 00                     	mov r8d, 1
0x8219:    b9 02 00 00 00                        	mov ecx, 2
0x821e:    44 89 ee                              	mov esi, r13d
0x8221:    4c 89 e7                              	mov rdi, r12
0x8224:    e8 46 f4 ff ff                        	call 0x766f <TunerRegWrite>
0x8229:    84 c0                                 	test al, al
0x822b:    0f 84 80 00 00 00                     	je 0x82b1
0x8231:    bf 64 00 00 00                        	mov edi, 0x64
0x8236:    e8 66 49 01 00                        	call 0x1cba1 <TLIB_Delay>
0x823b:    48 63 c3                              	movsxd rax, ebx
0x823e:    48 8d 14 00                           	lea rdx, [rax + rax]
0x8242:    48 8d 0c 02                           	lea rcx, [rdx + rax]
0x8246:    0f b6 0c 8d 00 00 00 00               	movzx ecx, byte ptr [rcx*4]
0x824e:    88 4d c1                              	mov byte ptr [rbp - 0x3f], cl
0x8251:    48 8d 04 02                           	lea rax, [rdx + rax]
0x8255:    0f b6 04 85 00 00 00 00               	movzx eax, byte ptr [rax*4]
0x825d:    88 45 c2                              	mov byte ptr [rbp - 0x3e], al
0x8260:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x8264:    41 b8 01 00 00 00                     	mov r8d, 1
0x826a:    b9 03 00 00 00                        	mov ecx, 3
0x826f:    44 89 ee                              	mov esi, r13d
0x8272:    4c 89 e7                              	mov rdi, r12
0x8275:    e8 f5 f3 ff ff                        	call 0x766f <TunerRegWrite>
0x827a:    84 c0                                 	test al, al
0x827c:    74 33                                 	je 0x82b1
0x827e:    48 63 db                              	movsxd rbx, ebx
0x8281:    48 8d 04 5b                           	lea rax, [rbx + rbx*2]
0x8285:    0f b6 04 85 00 00 00 00               	movzx eax, byte ptr [rax*4]
0x828d:    88 45 c1                              	mov byte ptr [rbp - 0x3f], al
0x8290:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x8294:    41 b8 01 00 00 00                     	mov r8d, 1
0x829a:    b9 02 00 00 00                        	mov ecx, 2
0x829f:    44 89 ee                              	mov esi, r13d
0x82a2:    4c 89 e7                              	mov rdi, r12
; function: TC_Initialise at 0x82a5 -- 0x82d5
0x82a5:    e8 c5 f3 ff ff                        	call 0x766f <TunerRegWrite>
0x82aa:    84 c0                                 	test al, al
0x82ac:    0f 95 c0                              	setne al
0x82af:    eb 05                                 	jmp 0x82b6 <TC_Initialise+0x11>
0x82b1:    b8 00 00 00 00                        	mov eax, 0
0x82b6:    48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x82ba:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x82c3:    74 05                                 	je 0x82ca <TC_Initialise+0x25>
0x82c5:    e8 de 68 03 00                        	call 0x3eba8 <__stack_chk_fail>
0x82ca:    48 83 c4 28                           	add rsp, 0x28
0x82ce:    5b                                    	pop rbx
0x82cf:    41 5c                                 	pop r12
0x82d1:    41 5d                                 	pop r13
0x82d3:    c9                                    	leave 
0x82d4:    c3                                    	ret 
; function: TC_Initialise at 0x82d5 -- 0x8334
0x82d5:    55                                    	push rbp
0x82d6:    48 89 e5                              	mov rbp, rsp
0x82d9:    41 54                                 	push r12
0x82db:    53                                    	push rbx
0x82dc:    48 83 ec 10                           	sub rsp, 0x10
0x82e0:    e8 0b 69 03 00                        	call 0x3ebf0 <mcount>
0x82e5:    48 89 fb                              	mov rbx, rdi
0x82e8:    49 89 d4                              	mov r12, rdx
0x82eb:    40 88 75 ec                           	mov byte ptr [rbp - 0x14], sil
0x82ef:    40 84 f6                              	test sil, sil
0x82f2:    75 49                                 	jne 0x833d
0x82f4:    48 c7 c2 00 00 00 00                  	mov rdx, 0
0x82fb:    b8 01 00 00 00                        	mov eax, 1
0x8300:    48 39 3d f9 e7 02 00                  	cmp qword ptr [rip + 0x2e7f9], rdi
0x8307:    75 04                                 	jne 0x830d <TC_Initialise+0x38>
0x8309:    b0 00                                 	mov al, 0
0x830b:    eb 05                                 	jmp 0x8312 <TC_Initialise+0x3d>
0x830d:    48 39 1a                              	cmp qword ptr [rdx], rbx
0x8310:    75 0a                                 	jne 0x831c <TC_Initialise+0x47>
0x8312:    c1 e0 04                              	shl eax, 4
0x8315:    89 c7                                 	mov edi, eax
0x8317:    83 c7 80                              	add edi, -0x80
0x831a:    eb 11                                 	jmp 0x832d <TC_Initialise+0x58>
0x831c:    83 c0 01                              	add eax, 1
0x831f:    48 83 c2 08                           	add rdx, 8
0x8323:    83 f8 08                              	cmp eax, 8
0x8326:    75 e5                                 	jne 0x830d <TC_Initialise+0x38>
0x8328:    bf 00 00 00 00                        	mov edi, 0
0x832d:    40 0f b6 ff                           	movzx edi, dil
0x8331:    48 89 ce                              	mov rsi, rcx
; data inside code section at 0x8334 -- 0x8337
0x8334:    e8 ee db                                           |...             |
; function: TC_IsLocked at 0x8337 -- 0x8367
0x8337:    01 00                                 	add dword ptr [rax], eax
0x8339:    84 c0                                 	test al, al
0x833b:    74 1c                                 	je 0x8359 <TC_IsLocked+0x22>
0x833d:    48 8d 75 ec                           	lea rsi, [rbp - 0x14]
0x8341:    48 89 df                              	mov rdi, rbx
0x8344:    e8 a2 df ff ff                        	call 0x62eb <TC_RemappingTunerNumber>
0x8349:    84 c0                                 	test al, al
0x834b:    74 0c                                 	je 0x8359 <TC_IsLocked+0x22>
0x834d:    41 c6 04 24 e9                        	mov byte ptr [r12], 0xe9
0x8352:    b8 01 00 00 00                        	mov eax, 1
0x8357:    eb 05                                 	jmp 0x835e <TC_IsLocked+0x27>
0x8359:    b8 00 00 00 00                        	mov eax, 0
0x835e:    48 83 c4 10                           	add rsp, 0x10
0x8362:    5b                                    	pop rbx
0x8363:    41 5c                                 	pop r12
0x8365:    c9                                    	leave 
0x8366:    c3                                    	ret 
; function: TC_IsLocked at 0x8367 -- 0x8378
0x8367:    55                                    	push rbp
0x8368:    48 89 e5                              	mov rbp, rsp
0x836b:    53                                    	push rbx
0x836c:    48 83 ec 28                           	sub rsp, 0x28
0x8370:    e8 7b 68 03 00                        	call 0x3ebf0 <mcount>
0x8375:    48 89 d3                              	mov rbx, rdx
; data inside code section at 0x8378 -- 0x837b
0x8378:    40 88 75                                           |@.u             |
; function: TC_GetCNRegister at 0x837b -- 0x83ab
0x837b:    dc 48 8d                              	fmul qword ptr [rax - 0x73]
0x837e:    75 dc                                 	jne 0x835c
0x8380:    e8 66 df ff ff                        	call 0x62eb <TC_RemappingTunerNumber>
0x8385:    89 c2                                 	mov edx, eax
0x8387:    b8 00 00 00 00                        	mov eax, 0
0x838c:    84 d2                                 	test dl, dl
0x838e:    74 14                                 	je 0x83a4 <TC_GetCNRegister+0x29>
0x8390:    48 8d 75 ef                           	lea rsi, [rbp - 0x11]
0x8394:    0f b6 7d dc                           	movzx edi, byte ptr [rbp - 0x24]
0x8398:    48 89 da                              	mov rdx, rbx
0x839b:    e8 85 d4 01 00                        	call 0x25825 <Japan4x4Tuner_TunerCheckLockStatus>
0x83a0:    0f b6 45 ef                           	movzx eax, byte ptr [rbp - 0x11]
0x83a4:    48 83 c4 28                           	add rsp, 0x28
0x83a8:    5b                                    	pop rbx
0x83a9:    c9                                    	leave 
0x83aa:    c3                                    	ret 
; function: TC_GetCNRegister at 0x83ab -- 0x83f2
0x83ab:    55                                    	push rbp
0x83ac:    48 89 e5                              	mov rbp, rsp
0x83af:    48 83 ec 20                           	sub rsp, 0x20
0x83b3:    48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x83b7:    4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x83bb:    4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x83bf:    e8 2c 68 03 00                        	call 0x3ebf0 <mcount>
0x83c4:    48 89 fb                              	mov rbx, rdi
0x83c7:    40 80 fe 07                           	cmp sil, 7
0x83cb:    77 46                                 	ja 0x8413
0x83cd:    49 89 d4                              	mov r12, rdx
0x83d0:    44 0f b6 ee                           	movzx r13d, sil
0x83d4:    44 89 ee                              	mov esi, r13d
0x83d7:    e8 8b ff ff ff                        	call 0x8367 <TC_IsLocked>
0x83dc:    84 c0                                 	test al, al
0x83de:    74 33                                 	je 0x8413
0x83e0:    41 8b 54 24 04                        	mov edx, dword ptr [r12 + 4]
0x83e5:    85 d2                                 	test edx, edx
0x83e7:    75 10                                 	jne 0x83f9
0x83e9:    4c 89 e2                              	mov rdx, r12
0x83ec:    44 89 ee                              	mov esi, r13d
0x83ef:    48 89 df                              	mov rdi, rbx
; data inside code section at 0x83f2 -- 0x83f6
0x83f2:    e8 81 e7 ff                                        |....            |
; function: TC_GetCN at 0x83f6 -- 0x8426
; function: TC_GetCN at 0x8426 -- 0x845c
0x8426:    55                                    	push rbp
0x8427:    48 89 e5                              	mov rbp, rsp
0x842a:    48 83 ec 30                           	sub rsp, 0x30
0x842e:    48 89 5d f0                           	mov qword ptr [rbp - 0x10], rbx
0x8432:    4c 89 65 f8                           	mov qword ptr [rbp - 8], r12
0x8436:    e8 b5 67 03 00                        	call 0x3ebf0 <mcount>
0x843b:    48 89 fb                              	mov rbx, rdi
0x843e:    49 89 d4                              	mov r12, rdx
0x8441:    40 88 75 dc                           	mov byte ptr [rbp - 0x24], sil
0x8445:    40 80 fe 07                           	cmp sil, 7
0x8449:    77 33                                 	ja 0x847e
0x844b:    40 0f b6 f6                           	movzx esi, sil
0x844f:    e8 13 ff ff ff                        	call 0x8367 <TC_IsLocked>
0x8454:    84 c0                                 	test al, al
0x8456:    74 26                                 	je 0x847e
0x8458:    48 8d 75 dc                           	lea rsi, [rbp - 0x24]
; data inside code section at 0x845c -- 0x845d
0x845c:    48                                                 |H               |
; function: Fiti_LAN_Gain at 0x845d -- 0x848d
0x845d:    89 df                                 	mov edi, ebx
0x845f:    e8 87 de ff ff                        	call 0x62eb <TC_RemappingTunerNumber>
0x8464:    84 c0                                 	test al, al
0x8466:    74 16                                 	je 0x847e <Fiti_LAN_Gain+0x21>
0x8468:    48 8d 75 e8                           	lea rsi, [rbp - 0x18]
0x846c:    0f b6 7d dc                           	movzx edi, byte ptr [rbp - 0x24]
0x8470:    4c 89 e2                              	mov rdx, r12
0x8473:    e8 7f cb 01 00                        	call 0x24ff7 <Japan4x4Tuner_TunerGetCN>
0x8478:    48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x847c:    eb 05                                 	jmp 0x8483 <Fiti_LAN_Gain+0x26>
0x847e:    b8 00 00 00 00                        	mov eax, 0
0x8483:    48 8b 5d f0                           	mov rbx, qword ptr [rbp - 0x10]
0x8487:    4c 8b 65 f8                           	mov r12, qword ptr [rbp - 8]
0x848b:    c9                                    	leave 
0x848c:    c3                                    	ret 
; function: Fiti_LAN_Gain at 0x848d -- 0x937a
0x848d:    55                                    	push rbp
0x848e:    48 89 e5                              	mov rbp, rsp
0x8491:    41 57                                 	push r15
0x8493:    41 56                                 	push r14
0x8495:    41 55                                 	push r13
0x8497:    41 54                                 	push r12
0x8499:    53                                    	push rbx
0x849a:    48 81 ec d8 00 00 00                  	sub rsp, 0xd8
0x84a1:    e8 4a 67 03 00                        	call 0x3ebf0 <mcount>
0x84a6:    48 89 bd 48 ff ff ff                  	mov qword ptr [rbp - 0xb8], rdi
0x84ad:    49 89 f6                              	mov r14, rsi
0x84b0:    48 89 cb                              	mov rbx, rcx
0x84b3:    c6 85 50 ff ff ff 00                  	mov byte ptr [rbp - 0xb0], 0
0x84ba:    c6 85 51 ff ff ff 02                  	mov byte ptr [rbp - 0xaf], 2
0x84c1:    c6 85 52 ff ff ff 00                  	mov byte ptr [rbp - 0xae], 0
0x84c8:    c6 85 53 ff ff ff 03                  	mov byte ptr [rbp - 0xad], 3
0x84cf:    c6 85 54 ff ff ff 00                  	mov byte ptr [rbp - 0xac], 0
0x84d6:    c6 85 55 ff ff ff 05                  	mov byte ptr [rbp - 0xab], 5
0x84dd:    c6 85 56 ff ff ff 00                  	mov byte ptr [rbp - 0xaa], 0
0x84e4:    c6 85 57 ff ff ff 04                  	mov byte ptr [rbp - 0xa9], 4
0x84eb:    c6 85 58 ff ff ff 00                  	mov byte ptr [rbp - 0xa8], 0
0x84f2:    c6 85 59 ff ff ff 00                  	mov byte ptr [rbp - 0xa7], 0
0x84f9:    c6 85 5a ff ff ff 00                  	mov byte ptr [rbp - 0xa6], 0
0x8500:    c6 85 5b ff ff ff 07                  	mov byte ptr [rbp - 0xa5], 7
0x8507:    c6 85 5c ff ff ff 00                  	mov byte ptr [rbp - 0xa4], 0
0x850e:    c6 85 5d ff ff ff 01                  	mov byte ptr [rbp - 0xa3], 1
0x8515:    c6 85 5e ff ff ff 00                  	mov byte ptr [rbp - 0xa2], 0
0x851c:    c6 85 5f ff ff ff 06                  	mov byte ptr [rbp - 0xa1], 6
0x8523:    c6 85 60 ff ff ff 08                  	mov byte ptr [rbp - 0xa0], 8
0x852a:    c6 85 61 ff ff ff 07                  	mov byte ptr [rbp - 0x9f], 7
0x8531:    c6 85 62 ff ff ff 08                  	mov byte ptr [rbp - 0x9e], 8
0x8538:    c6 85 63 ff ff ff 06                  	mov byte ptr [rbp - 0x9d], 6
0x853f:    c6 85 64 ff ff ff 08                  	mov byte ptr [rbp - 0x9c], 8
0x8546:    c6 85 65 ff ff ff 05                  	mov byte ptr [rbp - 0x9b], 5
0x854d:    c6 85 66 ff ff ff 08                  	mov byte ptr [rbp - 0x9a], 8
0x8554:    c6 85 67 ff ff ff 04                  	mov byte ptr [rbp - 0x99], 4
0x855b:    c6 85 68 ff ff ff 08                  	mov byte ptr [rbp - 0x98], 8
0x8562:    c6 85 69 ff ff ff 03                  	mov byte ptr [rbp - 0x97], 3
0x8569:    c6 85 6a ff ff ff 08                  	mov byte ptr [rbp - 0x96], 8
0x8570:    c6 85 6b ff ff ff 02                  	mov byte ptr [rbp - 0x95], 2
0x8577:    c6 85 6c ff ff ff 08                  	mov byte ptr [rbp - 0x94], 8
0x857e:    c6 85 6d ff ff ff 01                  	mov byte ptr [rbp - 0x93], 1
0x8585:    c6 85 6e ff ff ff 08                  	mov byte ptr [rbp - 0x92], 8
0x858c:    c6 85 6f ff ff ff 00                  	mov byte ptr [rbp - 0x91], 0
0x8593:    c6 85 70 ff ff ff 10                  	mov byte ptr [rbp - 0x90], 0x10
0x859a:    c6 85 71 ff ff ff 07                  	mov byte ptr [rbp - 0x8f], 7
0x85a1:    c6 85 72 ff ff ff 10                  	mov byte ptr [rbp - 0x8e], 0x10
0x85a8:    c6 85 73 ff ff ff 06                  	mov byte ptr [rbp - 0x8d], 6
0x85af:    c6 85 74 ff ff ff 10                  	mov byte ptr [rbp - 0x8c], 0x10
0x85b6:    c6 85 75 ff ff ff 05                  	mov byte ptr [rbp - 0x8b], 5
0x85bd:    c6 85 76 ff ff ff 10                  	mov byte ptr [rbp - 0x8a], 0x10
0x85c4:    c6 85 77 ff ff ff 04                  	mov byte ptr [rbp - 0x89], 4
0x85cb:    c6 85 78 ff ff ff 10                  	mov byte ptr [rbp - 0x88], 0x10
0x85d2:    c6 85 79 ff ff ff 03                  	mov byte ptr [rbp - 0x87], 3
0x85d9:    c6 85 7a ff ff ff 10                  	mov byte ptr [rbp - 0x86], 0x10
0x85e0:    c6 85 7b ff ff ff 02                  	mov byte ptr [rbp - 0x85], 2
0x85e7:    c6 85 7c ff ff ff 10                  	mov byte ptr [rbp - 0x84], 0x10
0x85ee:    c6 85 7d ff ff ff 01                  	mov byte ptr [rbp - 0x83], 1
0x85f5:    c6 85 7e ff ff ff 10                  	mov byte ptr [rbp - 0x82], 0x10
0x85fc:    c6 85 7f ff ff ff 00                  	mov byte ptr [rbp - 0x81], 0
0x8603:    80 fa 03                              	cmp dl, 3
0x8606:    0f 86 83 0d 00 00                     	jbe 0x938f
0x860c:    4c 8d a1 a0 00 00 00                  	lea r12, [rcx + 0xa0]
0x8613:    49 83 7c 24 08 00                     	cmp qword ptr [r12 + 8], 0
0x8619:    0f 85 ef 00 00 00                     	jne 0x870e <Fiti_LAN_Gain+0x281>
0x861f:    49 83 7c 24 10 00                     	cmp qword ptr [r12 + 0x10], 0
0x8625:    75 11                                 	jne 0x8638 <Fiti_LAN_Gain+0x1ab>
0x8627:    ba 01 00 00 00                        	mov edx, 1
0x862c:    be 00 00 00 00                        	mov esi, 0
0x8631:    e8 6d ea ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x8636:    eb 16                                 	jmp 0x864e <Fiti_LAN_Gain+0x1c1>
0x8638:    ba 01 00 00 00                        	mov edx, 1
0x863d:    be 01 00 00 00                        	mov esi, 1
0x8642:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8649:    e8 55 ea ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x864e:    4c 89 f0                              	mov rax, r14
0x8651:    4c 8d 75 b2                           	lea r14, [rbp - 0x4e]
0x8655:    4c 8d 6d a4                           	lea r13, [rbp - 0x5c]
0x8659:    4c 8d bb a0 00 00 00                  	lea r15, [rbx + 0xa0]
0x8660:    49 89 c4                              	mov r12, rax
0x8663:    ba 02 00 00 00                        	mov edx, 2
0x8668:    29 c2                                 	sub edx, eax
0x866a:    89 95 40 ff ff ff                     	mov dword ptr [rbp - 0xc0], edx
0x8670:    48 83 bb b8 00 00 00 17               	cmp qword ptr [rbx + 0xb8], 0x17
0x8678:    76 0b                                 	jbe 0x8685 <Fiti_LAN_Gain+0x1f8>
0x867a:    48 c7 83 b8 00 00 00 17 00 00 00      	mov qword ptr [rbx + 0xb8], 0x17
0x8685:    41 80 7c 24 02 00                     	cmp byte ptr [r12 + 2], 0
0x868b:    74 63                                 	je 0x86f0 <Fiti_LAN_Gain+0x263>
0x868d:    41 c6 45 00 13                        	mov byte ptr [r13], 0x13
0x8692:    48 8b 83 b8 00 00 00                  	mov rax, qword ptr [rbx + 0xb8]
0x8699:    0f b6 94 45 51 ff ff ff               	movzx edx, byte ptr [rbp + rax*2 - 0xaf]
0x86a1:    0a 94 45 50 ff ff ff                  	or dl, byte ptr [rbp + rax*2 - 0xb0]
0x86a8:    41 88 55 01                           	mov byte ptr [r13 + 1], dl
0x86ac:    8b b5 40 ff ff ff                     	mov esi, dword ptr [rbp - 0xc0]
0x86b2:    44 01 e6                              	add esi, r12d
0x86b5:    41 b8 00 00 00 00                     	mov r8d, 0
0x86bb:    b9 02 00 00 00                        	mov ecx, 2
0x86c0:    4c 89 ea                              	mov rdx, r13
0x86c3:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x86ca:    e8 a0 ef ff ff                        	call 0x766f <TunerRegWrite>
0x86cf:    84 c0                                 	test al, al
0x86d1:    0f 84 b8 0c 00 00                     	je 0x938f
0x86d7:    48 8b 83 b8 00 00 00                  	mov rax, qword ptr [rbx + 0xb8]
0x86de:    0f b6 94 45 51 ff ff ff               	movzx edx, byte ptr [rbp + rax*2 - 0xaf]
0x86e6:    0a 94 45 50 ff ff ff                  	or dl, byte ptr [rbp + rax*2 - 0xb0]
0x86ed:    41 88 16                              	mov byte ptr [r14], dl
0x86f0:    48 83 c3 50                           	add rbx, 0x50
0x86f4:    49 83 c4 01                           	add r12, 1
0x86f8:    49 83 c6 01                           	add r14, 1
0x86fc:    49 83 c5 02                           	add r13, 2
0x8700:    4c 39 fb                              	cmp rbx, r15
0x8703:    0f 85 67 ff ff ff                     	jne 0x8670 <Fiti_LAN_Gain+0x1e3>
0x8709:    e9 88 0c 00 00                        	jmp 0x9396
0x870e:    48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x8712:    41 b9 00 00 00 00                     	mov r9d, 0
0x8718:    41 b8 01 00 00 00                     	mov r8d, 1
0x871e:    ba 0b 00 00 00                        	mov edx, 0xb
0x8723:    be 4a 00 00 00                        	mov esi, 0x4a
0x8728:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x872f:    e8 2c 45 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x8734:    80 65 cf 01                           	and byte ptr [rbp - 0x31], 1
0x8738:    48 8d 45 b0                           	lea rax, [rbp - 0x50]
0x873c:    4c 8d 78 02                           	lea r15, [rax + 2]
0x8740:    48 89 9d 28 ff ff ff                  	mov qword ptr [rbp - 0xd8], rbx
0x8747:    48 8d 55 c2                           	lea rdx, [rbp - 0x3e]
0x874b:    48 89 95 38 ff ff ff                  	mov qword ptr [rbp - 0xc8], rdx
0x8752:    48 8d 55 8c                           	lea rdx, [rbp - 0x74]
0x8756:    48 89 95 30 ff ff ff                  	mov qword ptr [rbp - 0xd0], rdx
0x875d:    4c 8d 6d a4                           	lea r13, [rbp - 0x5c]
0x8761:    48 83 c0 04                           	add rax, 4
0x8765:    48 89 85 20 ff ff ff                  	mov qword ptr [rbp - 0xe0], rax
0x876c:    4c 89 b5 40 ff ff ff                  	mov qword ptr [rbp - 0xc0], r14
0x8773:    b8 02 00 00 00                        	mov eax, 2
0x8778:    44 29 f0                              	sub eax, r14d
0x877b:    89 85 0c ff ff ff                     	mov dword ptr [rbp - 0xf4], eax
0x8781:    4c 89 a5 18 ff ff ff                  	mov qword ptr [rbp - 0xe8], r12
0x8788:    49 89 dc                              	mov r12, rbx
0x878b:    48 8b 95 40 ff ff ff                  	mov rdx, qword ptr [rbp - 0xc0]
0x8792:    80 7a 02 00                           	cmp byte ptr [rdx + 2], 0
0x8796:    75 09                                 	jne 0x87a1 <Fiti_LAN_Gain+0x314>
0x8798:    41 c6 07 10                           	mov byte ptr [r15], 0x10
0x879c:    e9 8c 09 00 00                        	jmp 0x912d <Fiti_LAN_Gain+0xca0>
0x87a1:    8b 9d 0c ff ff ff                     	mov ebx, dword ptr [rbp - 0xf4]
0x87a7:    03 9d 40 ff ff ff                     	add ebx, dword ptr [rbp - 0xc0]
0x87ad:    41 c6 45 00 12                        	mov byte ptr [r13], 0x12
0x87b2:    41 c6 45 01 00                        	mov byte ptr [r13 + 1], 0
0x87b7:    4c 89 ad 10 ff ff ff                  	mov qword ptr [rbp - 0xf0], r13
0x87be:    41 b8 00 00 00 00                     	mov r8d, 0
0x87c4:    b9 02 00 00 00                        	mov ecx, 2
0x87c9:    4c 89 ea                              	mov rdx, r13
0x87cc:    89 de                                 	mov esi, ebx
0x87ce:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x87d5:    e8 95 ee ff ff                        	call 0x766f <TunerRegWrite>
0x87da:    84 c0                                 	test al, al
0x87dc:    0f 84 ad 0b 00 00                     	je 0x938f
0x87e2:    41 b9 00 00 00 00                     	mov r9d, 0
0x87e8:    41 b8 01 00 00 00                     	mov r8d, 1
0x87ee:    48 8b 8d 38 ff ff ff                  	mov rcx, qword ptr [rbp - 0xc8]
0x87f5:    ba 12 00 00 00                        	mov edx, 0x12
0x87fa:    89 de                                 	mov esi, ebx
0x87fc:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8803:    e8 22 ed ff ff                        	call 0x752a <TunerRegRead>
0x8808:    84 c0                                 	test al, al
0x880a:    0f 84 7f 0b 00 00                     	je 0x938f
0x8810:    41 b9 00 00 00 00                     	mov r9d, 0
0x8816:    41 b8 01 00 00 00                     	mov r8d, 1
0x881c:    4c 89 f9                              	mov rcx, r15
0x881f:    ba 13 00 00 00                        	mov edx, 0x13
0x8824:    89 de                                 	mov esi, ebx
0x8826:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x882d:    e8 f8 ec ff ff                        	call 0x752a <TunerRegRead>
0x8832:    84 c0                                 	test al, al
0x8834:    0f 84 55 0b 00 00                     	je 0x938f
0x883a:    41 80 27 1f                           	and byte ptr [r15], 0x1f
0x883e:    49 8d 45 01                           	lea rax, [r13 + 1]
0x8842:    48 89 85 00 ff ff ff                  	mov qword ptr [rbp - 0x100], rax
0x8849:    41 b9 00 00 00 00                     	mov r9d, 0
0x884f:    41 b8 01 00 00 00                     	mov r8d, 1
0x8855:    48 89 c1                              	mov rcx, rax
0x8858:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x885d:    89 de                                 	mov esi, ebx
0x885f:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8866:    e8 bf ec ff ff                        	call 0x752a <TunerRegRead>
0x886b:    84 c0                                 	test al, al
0x886d:    0f 84 1c 0b 00 00                     	je 0x938f
0x8873:    41 f6 45 01 10                        	test byte ptr [r13 + 1], 0x10
0x8878:    75 32                                 	jne 0x88ac <Fiti_LAN_Gain+0x41f>
0x887a:    41 c6 45 00 10                        	mov byte ptr [r13], 0x10
0x887f:    41 c6 45 01 00                        	mov byte ptr [r13 + 1], 0
0x8884:    41 b8 00 00 00 00                     	mov r8d, 0
0x888a:    b9 02 00 00 00                        	mov ecx, 2
0x888f:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8896:    89 de                                 	mov esi, ebx
0x8898:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x889f:    e8 cb ed ff ff                        	call 0x766f <TunerRegWrite>
0x88a4:    84 c0                                 	test al, al
0x88a6:    0f 84 e3 0a 00 00                     	je 0x938f
0x88ac:    41 b9 00 00 00 00                     	mov r9d, 0
0x88b2:    41 b8 01 00 00 00                     	mov r8d, 1
0x88b8:    48 8b 8d 30 ff ff ff                  	mov rcx, qword ptr [rbp - 0xd0]
0x88bf:    ba 10 00 00 00                        	mov edx, 0x10
0x88c4:    89 de                                 	mov esi, ebx
0x88c6:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x88cd:    e8 58 ec ff ff                        	call 0x752a <TunerRegRead>
0x88d2:    84 c0                                 	test al, al
0x88d4:    0f 84 b5 0a 00 00                     	je 0x938f
0x88da:    48 8b 95 38 ff ff ff                  	mov rdx, qword ptr [rbp - 0xc8]
0x88e1:    0f b6 02                              	movzx eax, byte ptr [rdx]
0x88e4:    89 c2                                 	mov edx, eax
0x88e6:    c0 ea 05                              	shr dl, 5
0x88e9:    0f b6 d2                              	movzx edx, dl
0x88ec:    83 e0 1f                              	and eax, 0x1f
0x88ef:    01 c0                                 	add eax, eax
0x88f1:    02 82 00 00 00 00                     	add al, byte ptr [rdx]
0x88f7:    89 c2                                 	mov edx, eax
0x88f9:    41 0f b6 07                           	movzx eax, byte ptr [r15]
0x88fd:    3c 0a                                 	cmp al, 0xa
0x88ff:    0f 84 62 03 00 00                     	je 0x8c67 <Fiti_LAN_Gain+0x7da>
0x8905:    3c 0a                                 	cmp al, 0xa
0x8907:    77 0d                                 	ja 0x8916 <Fiti_LAN_Gain+0x489>
0x8909:    3c 02                                 	cmp al, 2
0x890b:    0f 85 86 07 00 00                     	jne 0x9097 <Fiti_LAN_Gain+0xc0a>
0x8911:    e9 c2 05 00 00                        	jmp 0x8ed8 <Fiti_LAN_Gain+0xa4b>
0x8916:    3c 10                                 	cmp al, 0x10
0x8918:    74 11                                 	je 0x892b <Fiti_LAN_Gain+0x49e>
0x891a:    3c 14                                 	cmp al, 0x14
0x891c:    0f 1f 40 00                           	nop dword ptr [rax]
0x8920:    0f 85 71 07 00 00                     	jne 0x9097 <Fiti_LAN_Gain+0xc0a>
0x8926:    e9 c9 00 00 00                        	jmp 0x89f4 <Fiti_LAN_Gain+0x567>
0x892b:    48 8b 85 28 ff ff ff                  	mov rax, qword ptr [rbp - 0xd8]
0x8932:    48 c7 80 b8 00 00 00 17 00 00 00      	mov qword ptr [rax + 0xb8], 0x17
0x893d:    80 7d cf 00                           	cmp byte ptr [rbp - 0x31], 0
0x8941:    8b 05 e1 ce 02 00                     	mov eax, dword ptr [rip + 0x2cee1]
0x8947:    0f 45 05 f2 ce 02 00                  	cmovne eax, dword ptr [rip + 0x2cef2]
0x894e:    0f b6 d2                              	movzx edx, dl
0x8951:    39 d0                                 	cmp eax, edx
0x8953:    0f 8e d4 07 00 00                     	jle 0x912d <Fiti_LAN_Gain+0xca0>
0x8959:    41 b9 00 00 00 00                     	mov r9d, 0
0x895f:    41 b8 01 00 00 00                     	mov r8d, 1
0x8965:    48 8b 8d 00 ff ff ff                  	mov rcx, qword ptr [rbp - 0x100]
0x896c:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x8971:    89 de                                 	mov esi, ebx
0x8973:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x897a:    e8 ab eb ff ff                        	call 0x752a <TunerRegRead>
0x897f:    84 c0                                 	test al, al
0x8981:    0f 84 08 0a 00 00                     	je 0x938f
0x8987:    41 c6 45 00 0d                        	mov byte ptr [r13], 0xd ; "NU"
0x898c:    41 80 65 01 ef                        	and byte ptr [r13 + 1], 0xef
0x8991:    41 b8 00 00 00 00                     	mov r8d, 0
0x8997:    b9 02 00 00 00                        	mov ecx, 2
0x899c:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x89a3:    89 de                                 	mov esi, ebx
0x89a5:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x89ac:    e8 be ec ff ff                        	call 0x766f <TunerRegWrite>
0x89b1:    84 c0                                 	test al, al
0x89b3:    0f 84 d6 09 00 00                     	je 0x938f
0x89b9:    41 c6 45 00 13                        	mov byte ptr [r13], 0x13
0x89be:    41 c6 45 01 14                        	mov byte ptr [r13 + 1], 0x14
0x89c3:    41 b8 00 00 00 00                     	mov r8d, 0
0x89c9:    b9 02 00 00 00                        	mov ecx, 2
0x89ce:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x89d5:    89 de                                 	mov esi, ebx
0x89d7:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x89de:    e8 8c ec ff ff                        	call 0x766f <TunerRegWrite>
0x89e3:    84 c0                                 	test al, al
0x89e5:    0f 84 a4 09 00 00                     	je 0x938f
0x89eb:    41 c6 07 14                           	mov byte ptr [r15], 0x14
0x89ef:    e9 39 07 00 00                        	jmp 0x912d <Fiti_LAN_Gain+0xca0>
0x89f4:    48 8b 85 28 ff ff ff                  	mov rax, qword ptr [rbp - 0xd8]
0x89fb:    48 c7 80 b8 00 00 00 13 00 00 00      	mov qword ptr [rax + 0xb8], 0x13
0x8a06:    80 7d cf 00                           	cmp byte ptr [rbp - 0x31], 0
0x8a0a:    75 0e                                 	jne 0x8a1a <Fiti_LAN_Gain+0x58d>
0x8a0c:    8b 05 1a ce 02 00                     	mov eax, dword ptr [rip + 0x2ce1a]
0x8a12:    8b 0d 18 ce 02 00                     	mov ecx, dword ptr [rip + 0x2ce18]
0x8a18:    eb 0c                                 	jmp 0x8a26 <Fiti_LAN_Gain+0x599>
0x8a1a:    8b 05 24 ce 02 00                     	mov eax, dword ptr [rip + 0x2ce24]
0x8a20:    8b 0d 22 ce 02 00                     	mov ecx, dword ptr [rip + 0x2ce22]
0x8a26:    0f b6 d2                              	movzx edx, dl
0x8a29:    39 d0                                 	cmp eax, edx
0x8a2b:    0f 8d 9b 00 00 00                     	jge 0x8acc <Fiti_LAN_Gain+0x63f>
0x8a31:    41 b9 00 00 00 00                     	mov r9d, 0
0x8a37:    41 b8 01 00 00 00                     	mov r8d, 1
0x8a3d:    48 8b 8d 00 ff ff ff                  	mov rcx, qword ptr [rbp - 0x100]
0x8a44:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x8a49:    89 de                                 	mov esi, ebx
0x8a4b:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8a52:    e8 d3 ea ff ff                        	call 0x752a <TunerRegRead>
0x8a57:    84 c0                                 	test al, al
0x8a59:    0f 84 30 09 00 00                     	je 0x938f
0x8a5f:    41 c6 45 00 0d                        	mov byte ptr [r13], 0xd ; "NU"
0x8a64:    41 80 65 01 ef                        	and byte ptr [r13 + 1], 0xef
0x8a69:    41 b8 00 00 00 00                     	mov r8d, 0
0x8a6f:    b9 02 00 00 00                        	mov ecx, 2
0x8a74:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8a7b:    89 de                                 	mov esi, ebx
0x8a7d:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8a84:    e8 e6 eb ff ff                        	call 0x766f <TunerRegWrite>
0x8a89:    84 c0                                 	test al, al
0x8a8b:    0f 84 fe 08 00 00                     	je 0x938f
0x8a91:    41 c6 45 00 13                        	mov byte ptr [r13], 0x13
0x8a96:    41 c6 45 01 10                        	mov byte ptr [r13 + 1], 0x10
0x8a9b:    41 b8 00 00 00 00                     	mov r8d, 0
0x8aa1:    b9 02 00 00 00                        	mov ecx, 2
0x8aa6:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8aad:    89 de                                 	mov esi, ebx
0x8aaf:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8ab6:    e8 b4 eb ff ff                        	call 0x766f <TunerRegWrite>
0x8abb:    84 c0                                 	test al, al
0x8abd:    0f 84 cc 08 00 00                     	je 0x938f
0x8ac3:    41 c6 07 10                           	mov byte ptr [r15], 0x10
0x8ac7:    e9 61 06 00 00                        	jmp 0x912d <Fiti_LAN_Gain+0xca0>
0x8acc:    39 d1                                 	cmp ecx, edx
0x8ace:    66 90                                 	nop 
0x8ad0:    0f 8e 57 06 00 00                     	jle 0x912d <Fiti_LAN_Gain+0xca0>
0x8ad6:    41 b9 00 00 00 00                     	mov r9d, 0
0x8adc:    41 b8 01 00 00 00                     	mov r8d, 1
0x8ae2:    48 8b 8d 00 ff ff ff                  	mov rcx, qword ptr [rbp - 0x100]
0x8ae9:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x8aee:    89 de                                 	mov esi, ebx
0x8af0:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8af7:    e8 2e ea ff ff                        	call 0x752a <TunerRegRead>
0x8afc:    84 c0                                 	test al, al
0x8afe:    0f 84 8b 08 00 00                     	je 0x938f
0x8b04:    41 c6 45 00 0d                        	mov byte ptr [r13], 0xd ; "NU"
0x8b09:    41 80 65 01 ef                        	and byte ptr [r13 + 1], 0xef
0x8b0e:    41 b8 00 00 00 00                     	mov r8d, 0
0x8b14:    b9 02 00 00 00                        	mov ecx, 2
0x8b19:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8b20:    89 de                                 	mov esi, ebx
0x8b22:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8b29:    e8 41 eb ff ff                        	call 0x766f <TunerRegWrite>
0x8b2e:    84 c0                                 	test al, al
0x8b30:    0f 84 59 08 00 00                     	je 0x938f
0x8b36:    41 c6 45 00 10                        	mov byte ptr [r13], 0x10
0x8b3b:    41 c6 45 01 00                        	mov byte ptr [r13 + 1], 0
0x8b40:    41 b8 00 00 00 00                     	mov r8d, 0
0x8b46:    b9 02 00 00 00                        	mov ecx, 2
0x8b4b:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8b52:    89 de                                 	mov esi, ebx
0x8b54:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8b5b:    e8 0f eb ff ff                        	call 0x766f <TunerRegWrite>
0x8b60:    84 c0                                 	test al, al
0x8b62:    0f 84 27 08 00 00                     	je 0x938f
0x8b68:    41 b9 00 00 00 00                     	mov r9d, 0
0x8b6e:    41 b8 01 00 00 00                     	mov r8d, 1
0x8b74:    48 8d 4d ce                           	lea rcx, [rbp - 0x32]
0x8b78:    ba 10 00 00 00                        	mov edx, 0x10
0x8b7d:    89 de                                 	mov esi, ebx
0x8b7f:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8b86:    e8 9f e9 ff ff                        	call 0x752a <TunerRegRead>
0x8b8b:    84 c0                                 	test al, al
0x8b8d:    0f 84 fc 07 00 00                     	je 0x938f
0x8b93:    80 6d ce 03                           	sub byte ptr [rbp - 0x32], 3
0x8b97:    41 b9 00 00 00 00                     	mov r9d, 0
0x8b9d:    41 b8 01 00 00 00                     	mov r8d, 1
0x8ba3:    48 8b 8d 00 ff ff ff                  	mov rcx, qword ptr [rbp - 0x100]
0x8baa:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x8baf:    89 de                                 	mov esi, ebx
0x8bb1:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8bb8:    e8 6d e9 ff ff                        	call 0x752a <TunerRegRead>
0x8bbd:    84 c0                                 	test al, al
0x8bbf:    0f 84 ca 07 00 00                     	je 0x938f
0x8bc5:    41 c6 45 00 0d                        	mov byte ptr [r13], 0xd ; "NU"
0x8bca:    41 80 4d 01 10                        	or byte ptr [r13 + 1], 0x10
0x8bcf:    41 b8 00 00 00 00                     	mov r8d, 0
0x8bd5:    b9 02 00 00 00                        	mov ecx, 2
0x8bda:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8be1:    89 de                                 	mov esi, ebx
0x8be3:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8bea:    e8 80 ea ff ff                        	call 0x766f <TunerRegWrite>
0x8bef:    84 c0                                 	test al, al
0x8bf1:    0f 84 98 07 00 00                     	je 0x938f
0x8bf7:    41 c6 45 00 10                        	mov byte ptr [r13], 0x10
0x8bfc:    0f b6 45 ce                           	movzx eax, byte ptr [rbp - 0x32]
0x8c00:    41 88 45 01                           	mov byte ptr [r13 + 1], al
0x8c04:    41 b8 00 00 00 00                     	mov r8d, 0
0x8c0a:    b9 02 00 00 00                        	mov ecx, 2
0x8c0f:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8c16:    89 de                                 	mov esi, ebx
0x8c18:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8c1f:    e8 4b ea ff ff                        	call 0x766f <TunerRegWrite>
0x8c24:    84 c0                                 	test al, al
0x8c26:    0f 84 63 07 00 00                     	je 0x938f
0x8c2c:    41 c6 45 00 13                        	mov byte ptr [r13], 0x13
0x8c31:    41 c6 45 01 0a                        	mov byte ptr [r13 + 1], 0xa
0x8c36:    41 b8 00 00 00 00                     	mov r8d, 0
0x8c3c:    b9 02 00 00 00                        	mov ecx, 2
0x8c41:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8c48:    89 de                                 	mov esi, ebx
0x8c4a:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8c51:    e8 19 ea ff ff                        	call 0x766f <TunerRegWrite>
0x8c56:    84 c0                                 	test al, al
0x8c58:    0f 84 31 07 00 00                     	je 0x938f
0x8c5e:    41 c6 07 0a                           	mov byte ptr [r15], 0xa
0x8c62:    e9 c6 04 00 00                        	jmp 0x912d <Fiti_LAN_Gain+0xca0>
0x8c67:    48 8b 85 28 ff ff ff                  	mov rax, qword ptr [rbp - 0xd8]
0x8c6e:    48 c7 80 b8 00 00 00 0d 00 00 00      	mov qword ptr [rax + 0xb8], 0xd ; "NU"
0x8c79:    80 7d cf 00                           	cmp byte ptr [rbp - 0x31], 0
0x8c7d:    75 0e                                 	jne 0x8c8d <Fiti_LAN_Gain+0x800>
0x8c7f:    8b 05 af cb 02 00                     	mov eax, dword ptr [rip + 0x2cbaf]
0x8c85:    8b 0d ad cb 02 00                     	mov ecx, dword ptr [rip + 0x2cbad]
0x8c8b:    eb 0c                                 	jmp 0x8c99 <Fiti_LAN_Gain+0x80c>
0x8c8d:    8b 05 b9 cb 02 00                     	mov eax, dword ptr [rip + 0x2cbb9]
0x8c93:    8b 0d b7 cb 02 00                     	mov ecx, dword ptr [rip + 0x2cbb7]
0x8c99:    0f b6 d2                              	movzx edx, dl
0x8c9c:    39 d0                                 	cmp eax, edx
0x8c9e:    0f 8d 9b 00 00 00                     	jge 0x8d3f <Fiti_LAN_Gain+0x8b2>
0x8ca4:    41 b9 00 00 00 00                     	mov r9d, 0
0x8caa:    41 b8 01 00 00 00                     	mov r8d, 1
0x8cb0:    48 8b 8d 00 ff ff ff                  	mov rcx, qword ptr [rbp - 0x100]
0x8cb7:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x8cbc:    89 de                                 	mov esi, ebx
0x8cbe:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8cc5:    e8 60 e8 ff ff                        	call 0x752a <TunerRegRead>
0x8cca:    84 c0                                 	test al, al
0x8ccc:    0f 84 bd 06 00 00                     	je 0x938f
0x8cd2:    41 c6 45 00 0d                        	mov byte ptr [r13], 0xd ; "NU"
0x8cd7:    41 80 65 01 ef                        	and byte ptr [r13 + 1], 0xef
0x8cdc:    41 b8 00 00 00 00                     	mov r8d, 0
0x8ce2:    b9 02 00 00 00                        	mov ecx, 2
0x8ce7:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8cee:    89 de                                 	mov esi, ebx
0x8cf0:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8cf7:    e8 73 e9 ff ff                        	call 0x766f <TunerRegWrite>
0x8cfc:    84 c0                                 	test al, al
0x8cfe:    0f 84 8b 06 00 00                     	je 0x938f
0x8d04:    41 c6 45 00 13                        	mov byte ptr [r13], 0x13
0x8d09:    41 c6 45 01 14                        	mov byte ptr [r13 + 1], 0x14
0x8d0e:    41 b8 00 00 00 00                     	mov r8d, 0
0x8d14:    b9 02 00 00 00                        	mov ecx, 2
0x8d19:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8d20:    89 de                                 	mov esi, ebx
0x8d22:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8d29:    e8 41 e9 ff ff                        	call 0x766f <TunerRegWrite>
0x8d2e:    84 c0                                 	test al, al
0x8d30:    0f 84 59 06 00 00                     	je 0x938f
0x8d36:    41 c6 07 14                           	mov byte ptr [r15], 0x14
0x8d3a:    e9 ee 03 00 00                        	jmp 0x912d <Fiti_LAN_Gain+0xca0>
0x8d3f:    39 d1                                 	cmp ecx, edx
0x8d41:    0f 8e e6 03 00 00                     	jle 0x912d <Fiti_LAN_Gain+0xca0>
0x8d47:    41 b9 00 00 00 00                     	mov r9d, 0
0x8d4d:    41 b8 01 00 00 00                     	mov r8d, 1
0x8d53:    48 8b 8d 00 ff ff ff                  	mov rcx, qword ptr [rbp - 0x100]
0x8d5a:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x8d5f:    89 de                                 	mov esi, ebx
0x8d61:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8d68:    e8 bd e7 ff ff                        	call 0x752a <TunerRegRead>
0x8d6d:    84 c0                                 	test al, al
0x8d6f:    0f 84 1a 06 00 00                     	je 0x938f
0x8d75:    41 c6 45 00 0d                        	mov byte ptr [r13], 0xd ; "NU"
0x8d7a:    41 80 65 01 ef                        	and byte ptr [r13 + 1], 0xef
0x8d7f:    41 b8 00 00 00 00                     	mov r8d, 0
0x8d85:    b9 02 00 00 00                        	mov ecx, 2
0x8d8a:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8d91:    89 de                                 	mov esi, ebx
0x8d93:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8d9a:    e8 d0 e8 ff ff                        	call 0x766f <TunerRegWrite>
0x8d9f:    84 c0                                 	test al, al
0x8da1:    0f 84 e8 05 00 00                     	je 0x938f
0x8da7:    41 c6 45 00 10                        	mov byte ptr [r13], 0x10
0x8dac:    41 c6 45 01 00                        	mov byte ptr [r13 + 1], 0
0x8db1:    41 b8 00 00 00 00                     	mov r8d, 0
0x8db7:    b9 02 00 00 00                        	mov ecx, 2
0x8dbc:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8dc3:    89 de                                 	mov esi, ebx
0x8dc5:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8dcc:    e8 9e e8 ff ff                        	call 0x766f <TunerRegWrite>
0x8dd1:    84 c0                                 	test al, al
0x8dd3:    0f 84 b6 05 00 00                     	je 0x938f
0x8dd9:    41 b9 00 00 00 00                     	mov r9d, 0
0x8ddf:    41 b8 01 00 00 00                     	mov r8d, 1
0x8de5:    48 8d 4d ce                           	lea rcx, [rbp - 0x32]
0x8de9:    ba 10 00 00 00                        	mov edx, 0x10
0x8dee:    89 de                                 	mov esi, ebx
0x8df0:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8df7:    e8 2e e7 ff ff                        	call 0x752a <TunerRegRead>
0x8dfc:    84 c0                                 	test al, al
0x8dfe:    0f 84 8b 05 00 00                     	je 0x938f
0x8e04:    80 6d ce 03                           	sub byte ptr [rbp - 0x32], 3
0x8e08:    41 b9 00 00 00 00                     	mov r9d, 0
0x8e0e:    41 b8 01 00 00 00                     	mov r8d, 1
0x8e14:    48 8b 8d 00 ff ff ff                  	mov rcx, qword ptr [rbp - 0x100]
0x8e1b:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x8e20:    89 de                                 	mov esi, ebx
0x8e22:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8e29:    e8 fc e6 ff ff                        	call 0x752a <TunerRegRead>
0x8e2e:    84 c0                                 	test al, al
0x8e30:    0f 84 59 05 00 00                     	je 0x938f
0x8e36:    41 c6 45 00 0d                        	mov byte ptr [r13], 0xd ; "NU"
0x8e3b:    41 80 4d 01 10                        	or byte ptr [r13 + 1], 0x10
0x8e40:    41 b8 00 00 00 00                     	mov r8d, 0
0x8e46:    b9 02 00 00 00                        	mov ecx, 2
0x8e4b:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8e52:    89 de                                 	mov esi, ebx
0x8e54:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8e5b:    e8 0f e8 ff ff                        	call 0x766f <TunerRegWrite>
0x8e60:    84 c0                                 	test al, al
0x8e62:    0f 84 27 05 00 00                     	je 0x938f
0x8e68:    41 c6 45 00 10                        	mov byte ptr [r13], 0x10
0x8e6d:    0f b6 45 ce                           	movzx eax, byte ptr [rbp - 0x32]
0x8e71:    41 88 45 01                           	mov byte ptr [r13 + 1], al
0x8e75:    41 b8 00 00 00 00                     	mov r8d, 0
0x8e7b:    b9 02 00 00 00                        	mov ecx, 2
0x8e80:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8e87:    89 de                                 	mov esi, ebx
0x8e89:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8e90:    e8 da e7 ff ff                        	call 0x766f <TunerRegWrite>
0x8e95:    84 c0                                 	test al, al
0x8e97:    0f 84 f2 04 00 00                     	je 0x938f
0x8e9d:    41 c6 45 00 13                        	mov byte ptr [r13], 0x13
0x8ea2:    41 c6 45 01 02                        	mov byte ptr [r13 + 1], 2
0x8ea7:    41 b8 00 00 00 00                     	mov r8d, 0
0x8ead:    b9 02 00 00 00                        	mov ecx, 2
0x8eb2:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8eb9:    89 de                                 	mov esi, ebx
0x8ebb:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8ec2:    e8 a8 e7 ff ff                        	call 0x766f <TunerRegWrite>
0x8ec7:    84 c0                                 	test al, al
0x8ec9:    0f 84 c0 04 00 00                     	je 0x938f
0x8ecf:    41 c6 07 02                           	mov byte ptr [r15], 2
0x8ed3:    e9 55 02 00 00                        	jmp 0x912d <Fiti_LAN_Gain+0xca0>
0x8ed8:    48 8b 85 28 ff ff ff                  	mov rax, qword ptr [rbp - 0xd8]
0x8edf:    48 c7 80 b8 00 00 00 00 00 00 00      	mov qword ptr [rax + 0xb8], 0
0x8eea:    80 7d cf 00                           	cmp byte ptr [rbp - 0x31], 0
0x8eee:    8b 05 48 c9 02 00                     	mov eax, dword ptr [rip + 0x2c948]
0x8ef4:    0f 45 05 59 c9 02 00                  	cmovne eax, dword ptr [rip + 0x2c959]
0x8efb:    0f b6 d2                              	movzx edx, dl
0x8efe:    39 d0                                 	cmp eax, edx
0x8f00:    0f 8d 27 02 00 00                     	jge 0x912d <Fiti_LAN_Gain+0xca0>
0x8f06:    41 b9 00 00 00 00                     	mov r9d, 0
0x8f0c:    41 b8 01 00 00 00                     	mov r8d, 1
0x8f12:    48 8b 8d 00 ff ff ff                  	mov rcx, qword ptr [rbp - 0x100]
0x8f19:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x8f1e:    89 de                                 	mov esi, ebx
0x8f20:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8f27:    e8 fe e5 ff ff                        	call 0x752a <TunerRegRead>
0x8f2c:    84 c0                                 	test al, al
0x8f2e:    0f 84 5b 04 00 00                     	je 0x938f
0x8f34:    41 c6 45 00 0d                        	mov byte ptr [r13], 0xd ; "NU"
0x8f39:    41 80 65 01 ef                        	and byte ptr [r13 + 1], 0xef
0x8f3e:    41 b8 00 00 00 00                     	mov r8d, 0
0x8f44:    b9 02 00 00 00                        	mov ecx, 2
0x8f49:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8f50:    89 de                                 	mov esi, ebx
0x8f52:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8f59:    e8 11 e7 ff ff                        	call 0x766f <TunerRegWrite>
0x8f5e:    84 c0                                 	test al, al
0x8f60:    0f 84 29 04 00 00                     	je 0x938f
0x8f66:    41 c6 45 00 10                        	mov byte ptr [r13], 0x10
0x8f6b:    41 c6 45 01 00                        	mov byte ptr [r13 + 1], 0
0x8f70:    41 b8 00 00 00 00                     	mov r8d, 0
0x8f76:    b9 02 00 00 00                        	mov ecx, 2
0x8f7b:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x8f82:    89 de                                 	mov esi, ebx
0x8f84:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8f8b:    e8 df e6 ff ff                        	call 0x766f <TunerRegWrite>
0x8f90:    84 c0                                 	test al, al
0x8f92:    0f 84 f7 03 00 00                     	je 0x938f
0x8f98:    41 b9 00 00 00 00                     	mov r9d, 0
0x8f9e:    41 b8 01 00 00 00                     	mov r8d, 1
0x8fa4:    48 8d 4d ce                           	lea rcx, [rbp - 0x32]
0x8fa8:    ba 10 00 00 00                        	mov edx, 0x10
0x8fad:    89 de                                 	mov esi, ebx
0x8faf:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8fb6:    e8 6f e5 ff ff                        	call 0x752a <TunerRegRead>
0x8fbb:    84 c0                                 	test al, al
0x8fbd:    0f 84 cc 03 00 00                     	je 0x938f
0x8fc3:    80 6d ce 03                           	sub byte ptr [rbp - 0x32], 3
0x8fc7:    41 b9 00 00 00 00                     	mov r9d, 0
0x8fcd:    41 b8 01 00 00 00                     	mov r8d, 1
0x8fd3:    48 8b 8d 00 ff ff ff                  	mov rcx, qword ptr [rbp - 0x100]
0x8fda:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x8fdf:    89 de                                 	mov esi, ebx
0x8fe1:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x8fe8:    e8 3d e5 ff ff                        	call 0x752a <TunerRegRead>
0x8fed:    84 c0                                 	test al, al
0x8fef:    0f 84 9a 03 00 00                     	je 0x938f
0x8ff5:    41 c6 45 00 0d                        	mov byte ptr [r13], 0xd ; "NU"
0x8ffa:    41 80 4d 01 10                        	or byte ptr [r13 + 1], 0x10
0x8fff:    41 b8 00 00 00 00                     	mov r8d, 0
0x9005:    b9 02 00 00 00                        	mov ecx, 2
0x900a:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x9011:    89 de                                 	mov esi, ebx
0x9013:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x901a:    e8 50 e6 ff ff                        	call 0x766f <TunerRegWrite>
0x901f:    84 c0                                 	test al, al
0x9021:    0f 84 68 03 00 00                     	je 0x938f
0x9027:    41 c6 45 00 10                        	mov byte ptr [r13], 0x10
0x902c:    0f b6 45 ce                           	movzx eax, byte ptr [rbp - 0x32]
0x9030:    41 88 45 01                           	mov byte ptr [r13 + 1], al
0x9034:    41 b8 00 00 00 00                     	mov r8d, 0
0x903a:    b9 02 00 00 00                        	mov ecx, 2
0x903f:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x9046:    89 de                                 	mov esi, ebx
0x9048:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x904f:    e8 1b e6 ff ff                        	call 0x766f <TunerRegWrite>
0x9054:    84 c0                                 	test al, al
0x9056:    0f 84 33 03 00 00                     	je 0x938f
0x905c:    41 c6 45 00 13                        	mov byte ptr [r13], 0x13
0x9061:    41 c6 45 01 0a                        	mov byte ptr [r13 + 1], 0xa
0x9066:    41 b8 00 00 00 00                     	mov r8d, 0
0x906c:    b9 02 00 00 00                        	mov ecx, 2
0x9071:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x9078:    89 de                                 	mov esi, ebx
0x907a:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x9081:    e8 e9 e5 ff ff                        	call 0x766f <TunerRegWrite>
0x9086:    84 c0                                 	test al, al
0x9088:    0f 84 01 03 00 00                     	je 0x938f
0x908e:    41 c6 07 0a                           	mov byte ptr [r15], 0xa
0x9092:    e9 96 00 00 00                        	jmp 0x912d <Fiti_LAN_Gain+0xca0>
0x9097:    41 b9 00 00 00 00                     	mov r9d, 0
0x909d:    41 b8 01 00 00 00                     	mov r8d, 1
0x90a3:    48 8b 8d 00 ff ff ff                  	mov rcx, qword ptr [rbp - 0x100]
0x90aa:    ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x90af:    89 de                                 	mov esi, ebx
0x90b1:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x90b8:    e8 6d e4 ff ff                        	call 0x752a <TunerRegRead>
0x90bd:    84 c0                                 	test al, al
0x90bf:    0f 84 ca 02 00 00                     	je 0x938f
0x90c5:    41 c6 45 00 0d                        	mov byte ptr [r13], 0xd ; "NU"
0x90ca:    41 80 65 01 ef                        	and byte ptr [r13 + 1], 0xef
0x90cf:    41 b8 00 00 00 00                     	mov r8d, 0
0x90d5:    b9 02 00 00 00                        	mov ecx, 2
0x90da:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x90e1:    89 de                                 	mov esi, ebx
0x90e3:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x90ea:    e8 80 e5 ff ff                        	call 0x766f <TunerRegWrite>
0x90ef:    84 c0                                 	test al, al
0x90f1:    0f 84 98 02 00 00                     	je 0x938f
0x90f7:    41 c6 45 00 13                        	mov byte ptr [r13], 0x13
0x90fc:    41 c6 45 01 10                        	mov byte ptr [r13 + 1], 0x10
0x9101:    41 b8 00 00 00 00                     	mov r8d, 0
0x9107:    b9 02 00 00 00                        	mov ecx, 2
0x910c:    48 8b 95 10 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf0]
0x9113:    89 de                                 	mov esi, ebx
0x9115:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x911c:    e8 4e e5 ff ff                        	call 0x766f <TunerRegWrite>
0x9121:    84 c0                                 	test al, al
0x9123:    0f 84 66 02 00 00                     	je 0x938f
0x9129:    41 c6 07 10                           	mov byte ptr [r15], 0x10
0x912d:    48 83 85 40 ff ff ff 01               	add qword ptr [rbp - 0xc0], 1
0x9135:    49 83 c7 01                           	add r15, 1
0x9139:    48 83 85 28 ff ff ff 50               	add qword ptr [rbp - 0xd8], 0x50
0x9141:    48 83 85 38 ff ff ff 01               	add qword ptr [rbp - 0xc8], 1
0x9149:    48 83 85 30 ff ff ff 06               	add qword ptr [rbp - 0xd0], 6
0x9151:    49 83 c5 02                           	add r13, 2
0x9155:    4c 3b bd 20 ff ff ff                  	cmp r15, qword ptr [rbp - 0xe0]
0x915c:    0f 85 29 f6 ff ff                     	jne 0x878b <Fiti_LAN_Gain+0x2fe>
0x9162:    4c 89 e3                              	mov rbx, r12
0x9165:    4c 8b a5 18 ff ff ff                  	mov r12, qword ptr [rbp - 0xe8]
0x916c:    41 0f b6 46 02                        	movzx eax, byte ptr [r14 + 2]
0x9171:    3c 01                                 	cmp al, 1
0x9173:    0f 85 a4 00 00 00                     	jne 0x921d <Fiti_LAN_Gain+0xd90>
0x9179:    41 80 7e 03 00                        	cmp byte ptr [r14 + 3], 0
0x917e:    0f 85 45 01 00 00                     	jne 0x92c9 <Fiti_LAN_Gain+0xe3c>
0x9184:    80 7d b2 10                           	cmp byte ptr [rbp - 0x4e], 0x10
0x9188:    75 6a                                 	jne 0x91f4 <Fiti_LAN_Gain+0xd67>
0x918a:    48 89 da                              	mov rdx, rbx
0x918d:    be 02 00 00 00                        	mov esi, 2
0x9192:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x9199:    e8 c9 f1 ff ff                        	call 0x8367 <TC_IsLocked>
0x919e:    3c 01                                 	cmp al, 1
0x91a0:    75 29                                 	jne 0x91cb <Fiti_LAN_Gain+0xd3e>
0x91a2:    ba 01 00 00 00                        	mov edx, 1
0x91a7:    be 01 00 00 00                        	mov esi, 1
0x91ac:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x91b3:    e8 eb de ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x91b8:    49 c7 44 24 10 01 00 00 00            	mov qword ptr [r12 + 0x10], 1
0x91c1:    b8 01 00 00 00                        	mov eax, 1
0x91c6:    e9 d0 01 00 00                        	jmp 0x939b
0x91cb:    ba 01 00 00 00                        	mov edx, 1
0x91d0:    be 00 00 00 00                        	mov esi, 0
0x91d5:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x91dc:    e8 c2 de ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x91e1:    49 c7 44 24 10 00 00 00 00            	mov qword ptr [r12 + 0x10], 0
0x91ea:    b8 01 00 00 00                        	mov eax, 1
0x91ef:    e9 a7 01 00 00                        	jmp 0x939b
0x91f4:    ba 01 00 00 00                        	mov edx, 1
0x91f9:    be 00 00 00 00                        	mov esi, 0
0x91fe:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x9205:    e8 99 de ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x920a:    49 c7 44 24 10 00 00 00 00            	mov qword ptr [r12 + 0x10], 0
0x9213:    b8 01 00 00 00                        	mov eax, 1
0x9218:    e9 7e 01 00 00                        	jmp 0x939b
0x921d:    84 c0                                 	test al, al
0x921f:    0f 85 71 01 00 00                     	jne 0x9396
0x9225:    41 80 7e 03 01                        	cmp byte ptr [r14 + 3], 1
0x922a:    0f 85 66 01 00 00                     	jne 0x9396
0x9230:    80 7d b3 10                           	cmp byte ptr [rbp - 0x4d], 0x10
0x9234:    75 6a                                 	jne 0x92a0 <Fiti_LAN_Gain+0xe13>
0x9236:    48 89 da                              	mov rdx, rbx
0x9239:    be 03 00 00 00                        	mov esi, 3
0x923e:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x9245:    e8 1d f1 ff ff                        	call 0x8367 <TC_IsLocked>
0x924a:    3c 01                                 	cmp al, 1
0x924c:    75 29                                 	jne 0x9277 <Fiti_LAN_Gain+0xdea>
0x924e:    ba 01 00 00 00                        	mov edx, 1
0x9253:    be 01 00 00 00                        	mov esi, 1
0x9258:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x925f:    e8 3f de ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x9264:    49 c7 44 24 10 01 00 00 00            	mov qword ptr [r12 + 0x10], 1
0x926d:    b8 01 00 00 00                        	mov eax, 1
0x9272:    e9 24 01 00 00                        	jmp 0x939b
0x9277:    ba 01 00 00 00                        	mov edx, 1
0x927c:    be 00 00 00 00                        	mov esi, 0
0x9281:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x9288:    e8 16 de ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x928d:    49 c7 44 24 10 00 00 00 00            	mov qword ptr [r12 + 0x10], 0
0x9296:    b8 01 00 00 00                        	mov eax, 1
0x929b:    e9 fb 00 00 00                        	jmp 0x939b
0x92a0:    ba 01 00 00 00                        	mov edx, 1
0x92a5:    be 00 00 00 00                        	mov esi, 0
0x92aa:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x92b1:    e8 ed dd ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x92b6:    49 c7 44 24 10 00 00 00 00            	mov qword ptr [r12 + 0x10], 0
0x92bf:    b8 01 00 00 00                        	mov eax, 1
0x92c4:    e9 d2 00 00 00                        	jmp 0x939b
0x92c9:    41 80 7e 03 01                        	cmp byte ptr [r14 + 3], 1
0x92ce:    0f 85 c2 00 00 00                     	jne 0x9396
0x92d4:    80 7d b2 10                           	cmp byte ptr [rbp - 0x4e], 0x10
0x92d8:    0f 85 8b 00 00 00                     	jne 0x9369 <Fiti_LAN_Gain+0xedc>
0x92de:    80 7d b3 10                           	cmp byte ptr [rbp - 0x4d], 0x10
0x92e2:    0f 85 81 00 00 00                     	jne 0x9369 <Fiti_LAN_Gain+0xedc>
0x92e8:    48 89 da                              	mov rdx, rbx
0x92eb:    be 02 00 00 00                        	mov esi, 2
0x92f0:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x92f7:    e8 6b f0 ff ff                        	call 0x8367 <TC_IsLocked>
0x92fc:    41 89 c5                              	mov r13d, eax
0x92ff:    48 89 da                              	mov rdx, rbx
0x9302:    be 03 00 00 00                        	mov esi, 3
0x9307:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x930e:    e8 54 f0 ff ff                        	call 0x8367 <TC_IsLocked>
0x9313:    41 80 fd 01                           	cmp r13b, 1
0x9317:    74 04                                 	je 0x931d <Fiti_LAN_Gain+0xe90>
0x9319:    3c 01                                 	cmp al, 1
0x931b:    75 26                                 	jne 0x9343 <Fiti_LAN_Gain+0xeb6>
0x931d:    ba 01 00 00 00                        	mov edx, 1
0x9322:    be 01 00 00 00                        	mov esi, 1
0x9327:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x932e:    e8 70 dd ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x9333:    49 c7 44 24 10 01 00 00 00            	mov qword ptr [r12 + 0x10], 1
0x933c:    b8 01 00 00 00                        	mov eax, 1
0x9341:    eb 58                                 	jmp 0x939b
0x9343:    ba 01 00 00 00                        	mov edx, 1
0x9348:    be 00 00 00 00                        	mov esi, 0
0x934d:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
0x9354:    e8 4a dd ff ff                        	call 0x70a3 <TLIB_SetGPIO_ASIE5606B5>
0x9359:    49 c7 44 24 10 00 00 00 00            	mov qword ptr [r12 + 0x10], 0
0x9362:    b8 01 00 00 00                        	mov eax, 1
0x9367:    eb 32                                 	jmp 0x939b
0x9369:    ba 01 00 00 00                        	mov edx, 1
0x936e:    be 00 00 00 00                        	mov esi, 0
0x9373:    48 8b bd 48 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb8]
; data inside code section at 0x937a -- 0x937d
0x937a:    e8 24 dd                                           |.$.             |
; function: TC_GetSignaLevel at 0x937d -- 0x93ad
; function: TC_GetSignaLevel at 0x93ad -- 0x93dd
0x93ad:    55                                    	push rbp
0x93ae:    48 89 e5                              	mov rbp, rsp
0x93b1:    48 83 ec 30                           	sub rsp, 0x30
0x93b5:    48 89 5d f0                           	mov qword ptr [rbp - 0x10], rbx
0x93b9:    4c 89 65 f8                           	mov qword ptr [rbp - 8], r12
0x93bd:    e8 2e 58 03 00                        	call 0x3ebf0 <mcount>
0x93c2:    48 89 fb                              	mov rbx, rdi
0x93c5:    49 89 d4                              	mov r12, rdx
0x93c8:    40 88 75 dc                           	mov byte ptr [rbp - 0x24], sil
0x93cc:    40 0f b6 f6                           	movzx esi, sil
0x93d0:    e8 92 ef ff ff                        	call 0x8367 <TC_IsLocked>
0x93d5:    84 c0                                 	test al, al
0x93d7:    74 26                                 	je 0x93ff
0x93d9:    48 8d 75 dc                           	lea rsi, [rbp - 0x24]
; data inside code section at 0x93dd -- 0x93de
0x93dd:    48                                                 |H               |
; function: TC_ReadSNR at 0x93de -- 0x940e
0x93de:    89 df                                 	mov edi, ebx
0x93e0:    e8 06 cf ff ff                        	call 0x62eb <TC_RemappingTunerNumber>
0x93e5:    84 c0                                 	test al, al
0x93e7:    74 16                                 	je 0x93ff <TC_ReadSNR+0x21>
0x93e9:    48 8d 75 ef                           	lea rsi, [rbp - 0x11]
0x93ed:    0f b6 7d dc                           	movzx edi, byte ptr [rbp - 0x24]
0x93f1:    4c 89 e2                              	mov rdx, r12
0x93f4:    e8 6c bf 01 00                        	call 0x25365 <Japan4x4Tuner_TunerGetQuality>
0x93f9:    0f b6 45 ef                           	movzx eax, byte ptr [rbp - 0x11]
0x93fd:    eb 05                                 	jmp 0x9404 <TC_ReadSNR+0x26>
0x93ff:    b8 00 00 00 00                        	mov eax, 0
0x9404:    48 8b 5d f0                           	mov rbx, qword ptr [rbp - 0x10]
0x9408:    4c 8b 65 f8                           	mov r12, qword ptr [rbp - 8]
0x940c:    c9                                    	leave 
0x940d:    c3                                    	ret 
; function: TC_ReadSNR at 0x940e -- 0x943e
0x940e:    55                                    	push rbp
0x940f:    48 89 e5                              	mov rbp, rsp
0x9412:    48 83 ec 30                           	sub rsp, 0x30
0x9416:    48 89 5d f0                           	mov qword ptr [rbp - 0x10], rbx
0x941a:    4c 89 65 f8                           	mov qword ptr [rbp - 8], r12
0x941e:    e8 cd 57 03 00                        	call 0x3ebf0 <mcount>
0x9423:    48 89 fb                              	mov rbx, rdi
0x9426:    49 89 d4                              	mov r12, rdx
0x9429:    40 88 75 dc                           	mov byte ptr [rbp - 0x24], sil
0x942d:    40 0f b6 f6                           	movzx esi, sil
0x9431:    e8 31 ef ff ff                        	call 0x8367 <TC_IsLocked>
0x9436:    84 c0                                 	test al, al
0x9438:    74 26                                 	je 0x9460
0x943a:    48 8d 75 dc                           	lea rsi, [rbp - 0x24]
; data inside code section at 0x943e -- 0x943f
0x943e:    48                                                 |H               |
; function: TC_TSIDWrite at 0x943f -- 0x946f
0x943f:    89 df                                 	mov edi, ebx
0x9441:    e8 a5 ce ff ff                        	call 0x62eb <TC_RemappingTunerNumber>
0x9446:    84 c0                                 	test al, al
0x9448:    74 16                                 	je 0x9460 <TC_TSIDWrite+0x21>
0x944a:    48 8d 75 ef                           	lea rsi, [rbp - 0x11]
0x944e:    0f b6 7d dc                           	movzx edi, byte ptr [rbp - 0x24]
0x9452:    4c 89 e2                              	mov rdx, r12
0x9455:    e8 4e c2 01 00                        	call 0x256a8 <Japan4x4Tuner_TunerGetStrength>
0x945a:    0f b6 45 ef                           	movzx eax, byte ptr [rbp - 0x11]
0x945e:    eb 05                                 	jmp 0x9465 <TC_TSIDWrite+0x26>
0x9460:    b8 00 00 00 00                        	mov eax, 0
0x9465:    48 8b 5d f0                           	mov rbx, qword ptr [rbp - 0x10]
0x9469:    4c 8b 65 f8                           	mov r12, qword ptr [rbp - 8]
0x946d:    c9                                    	leave 
0x946e:    c3                                    	ret 
; function: TC_TSIDWrite at 0x946f -- 0x9489
0x946f:    55                                    	push rbp
0x9470:    48 89 e5                              	mov rbp, rsp
0x9473:    48 83 ec 20                           	sub rsp, 0x20
0x9477:    48 89 5d f0                           	mov qword ptr [rbp - 0x10], rbx
0x947b:    4c 89 65 f8                           	mov qword ptr [rbp - 8], r12
0x947f:    e8 6c 57 03 00                        	call 0x3ebf0 <mcount>
0x9484:    89 d3                                 	mov ebx, edx
0x9486:    4d 89 c4                              	mov r12, r8
; data inside code section at 0x9489 -- 0x948a
0x9489:    40                                                 |@               |
; function: TC_TSIDRead at 0x948a -- 0x94ba
0x948a:    88 75 ec                              	mov byte ptr [rbp - 0x14], dh
0x948d:    48 8d 75 ec                           	lea rsi, [rbp - 0x14]
0x9491:    e8 55 ce ff ff                        	call 0x62eb <TC_RemappingTunerNumber>
0x9496:    89 c2                                 	mov edx, eax
0x9498:    b8 00 00 00 00                        	mov eax, 0
0x949d:    84 d2                                 	test dl, dl
0x949f:    74 0f                                 	je 0x94b0 <TC_TSIDRead+0x26>
0x94a1:    0f b7 f3                              	movzx esi, bx
0x94a4:    0f b6 7d ec                           	movzx edi, byte ptr [rbp - 0x14]
0x94a8:    4c 89 e2                              	mov rdx, r12
0x94ab:    e8 6a b1 01 00                        	call 0x2461a <Japan4x4Tuner_TunerSetTSID>
0x94b0:    48 8b 5d f0                           	mov rbx, qword ptr [rbp - 0x10]
0x94b4:    4c 8b 65 f8                           	mov r12, qword ptr [rbp - 8]
0x94b8:    c9                                    	leave 
0x94b9:    c3                                    	ret 
; function: TC_TSIDRead at 0x94ba -- 0x950e
0x94ba:    55                                    	push rbp
0x94bb:    48 89 e5                              	mov rbp, rsp
0x94be:    41 55                                 	push r13
0x94c0:    41 54                                 	push r12
0x94c2:    53                                    	push rbx
0x94c3:    48 83 ec 28                           	sub rsp, 0x28
0x94c7:    e8 24 57 03 00                        	call 0x3ebf0 <mcount>
0x94cc:    49 89 d5                              	mov r13, rdx
0x94cf:    4d 89 c4                              	mov r12, r8
0x94d2:    40 88 75 cc                           	mov byte ptr [rbp - 0x34], sil
0x94d6:    89 cb                                 	mov ebx, ecx
0x94d8:    48 8d 75 cc                           	lea rsi, [rbp - 0x34]
0x94dc:    e8 0a ce ff ff                        	call 0x62eb <TC_RemappingTunerNumber>
0x94e1:    89 c2                                 	mov edx, eax
0x94e3:    b8 00 00 00 00                        	mov eax, 0
0x94e8:    84 d2                                 	test dl, dl
0x94ea:    74 42                                 	je 0x952e
0x94ec:    48 8d 75 d0                           	lea rsi, [rbp - 0x30]
0x94f0:    0f b6 7d cc                           	movzx edi, byte ptr [rbp - 0x34]
0x94f4:    4c 89 e2                              	mov rdx, r12
0x94f7:    e8 87 b7 01 00                        	call 0x24c83 <Japan4x4Tuner_TunerGetTSID>
0x94fc:    84 db                                 	test bl, bl
0x94fe:    74 2e                                 	je 0x952e
0x9500:    48 8d 4d d0                           	lea rcx, [rbp - 0x30]
0x9504:    ba 00 00 00 00                        	mov edx, 0
0x9509:    80 fa 07                              	cmp dl, 7
0x950c:    76 0a                                 	jbe 0x9518
; data inside code section at 0x950e -- 0x9510
0x950e:    41 c7                                              |A.              |
; function: cfg_read at 0x9510 -- 0x9539
0x9510:    45 00 00                              	add byte ptr [r8], r8b
0x9513:    00 00                                 	add byte ptr [rax], al
0x9515:    00 eb                                 	add bl, ch
; data inside code section at 0x9517 -- 0x9518
0x9517:    07                                                 |.               |
0x9518:    0f b7 31                              	movzx esi, word ptr [rcx]
0x951b:    41 89 75 00                           	mov dword ptr [r13], esi
0x951f:    83 c2 01                              	add edx, 1
0x9522:    49 83 c5 04                           	add r13, 4
0x9526:    48 83 c1 02                           	add rcx, 2
0x952a:    38 d3                                 	cmp bl, dl
0x952c:    77 db                                 	ja 0x9509
0x952e:    48 83 c4 28                           	add rsp, 0x28
0x9532:    5b                                    	pop rbx
0x9533:    41 5c                                 	pop r12
0x9535:    41 5d                                 	pop r13
0x9537:    c9                                    	leave 
0x9538:    c3                                    	ret 
; data inside code section at 0x9539 -- 0x9540
0x9539:    90 90 90 90 90 90 90                               |.......         |
; function: cfg_read at 0x9540 -- 0x9589
0x9540:    55                                    	push rbp
0x9541:    48 89 e5                              	mov rbp, rsp
0x9544:    e8 a7 56 03 00                        	call 0x3ebf0 <mcount>
0x9549:    48 85 c9                              	test rcx, rcx
0x954c:    74 5e                                 	je 0x95ac
0x954e:    f6 c2 03                              	test dl, 3
0x9551:    75 59                                 	jne 0x95ac
0x9553:    48 85 d2                              	test rdx, rdx
0x9556:    74 5b                                 	je 0x95b3
0x9558:    0f b7 f6                              	movzx esi, si
0x955b:    b8 00 00 00 00                        	mov eax, 0
0x9560:    41 b9 00 00 00 00                     	mov r9d, 0
0x9566:    41 89 f0                              	mov r8d, esi
0x9569:    4c 03 87 f8 57 00 00                  	add r8, qword ptr [rdi + 0x57f8]
0x9570:    45 8b 00                              	mov r8d, dword ptr [r8]
0x9573:    45 89 c0                              	mov r8d, r8d
0x9576:    44 88 04 01                           	mov byte ptr [rcx + rax], r8b
0x957a:    4d 89 c2                              	mov r10, r8
0x957d:    49 c1 ea 08                           	shr r10, 8
0x9581:    44 88 54 01 01                        	mov byte ptr [rcx + rax + 1], r10b
0x9586:    4d 89 c2                              	mov r10, r8
; data inside code section at 0x9589 -- 0x958a
0x9589:    49                                                 |I               |
; function: cfg_write at 0x958a -- 0x95ba
0x958a:    c1 ea 10                              	shr edx, 0x10
0x958d:    44 88 54 01 02                        	mov byte ptr [rcx + rax + 2], r10b
0x9592:    49 c1 e8 18                           	shr r8, 0x18
0x9596:    44 88 44 01 03                        	mov byte ptr [rcx + rax + 3], r8b
0x959b:    41 83 c1 04                           	add r9d, 4
0x959f:    44 89 c8                              	mov eax, r9d
0x95a2:    83 c6 04                              	add esi, 4
0x95a5:    48 39 c2                              	cmp rdx, rax
0x95a8:    77 bc                                 	ja 0x9566
0x95aa:    eb 07                                 	jmp 0x95b3 <cfg_write+0x29>
0x95ac:    b8 00 00 00 00                        	mov eax, 0
0x95b1:    eb 05                                 	jmp 0x95b8 <cfg_write+0x2e>
0x95b3:    b8 01 00 00 00                        	mov eax, 1
0x95b8:    c9                                    	leave 
0x95b9:    c3                                    	ret 
; function: cfg_write at 0x95ba -- 0x9609
0x95ba:    55                                    	push rbp
0x95bb:    48 89 e5                              	mov rbp, rsp
0x95be:    e8 2d 56 03 00                        	call 0x3ebf0 <mcount>
0x95c3:    48 85 c9                              	test rcx, rcx
0x95c6:    74 63                                 	je 0x962b
0x95c8:    f6 c2 03                              	test dl, 3
0x95cb:    75 5e                                 	jne 0x962b
0x95cd:    48 85 d2                              	test rdx, rdx
0x95d0:    74 60                                 	je 0x9632
0x95d2:    0f b7 f6                              	movzx esi, si
0x95d5:    b8 00 00 00 00                        	mov eax, 0
0x95da:    41 b8 00 00 00 00                     	mov r8d, 0
0x95e0:    44 0f b6 54 01 03                     	movzx r10d, byte ptr [rcx + rax + 3]
0x95e6:    49 c1 e2 08                           	shl r10, 8
0x95ea:    44 0f b6 4c 01 02                     	movzx r9d, byte ptr [rcx + rax + 2]
0x95f0:    4d 01 ca                              	add r10, r9
0x95f3:    49 c1 e2 08                           	shl r10, 8
0x95f7:    44 0f b6 4c 01 01                     	movzx r9d, byte ptr [rcx + rax + 1]
0x95fd:    4d 01 ca                              	add r10, r9
0x9600:    49 c1 e2 08                           	shl r10, 8
0x9604:    44 0f b6 0c 01                        	movzx r9d, byte ptr [rcx + rax]
; function: i2c_soft_reset_2 at 0x9609 -- 0x9639
0x9609:    43 8d 04 0a                           	lea eax, [r10 + r9]
0x960d:    41 89 f1                              	mov r9d, esi
0x9610:    4c 03 8f f8 57 00 00                  	add r9, qword ptr [rdi + 0x57f8]
0x9617:    41 89 01                              	mov dword ptr [r9], eax
0x961a:    41 83 c0 04                           	add r8d, 4
0x961e:    44 89 c0                              	mov eax, r8d
0x9621:    83 c6 04                              	add esi, 4
0x9624:    48 39 c2                              	cmp rdx, rax
0x9627:    77 b7                                 	ja 0x95e0
0x9629:    eb 07                                 	jmp 0x9632 <i2c_soft_reset_2+0x29>
0x962b:    b8 00 00 00 00                        	mov eax, 0
0x9630:    eb 05                                 	jmp 0x9637 <i2c_soft_reset_2+0x2e>
0x9632:    b8 01 00 00 00                        	mov eax, 1
0x9637:    c9                                    	leave 
0x9638:    c3                                    	ret 
; function: i2c_soft_reset_2 at 0x9639 -- 0x965d
0x9639:    55                                    	push rbp
0x963a:    48 89 e5                              	mov rbp, rsp
0x963d:    53                                    	push rbx
0x963e:    48 83 ec 08                           	sub rsp, 8
0x9642:    e8 a9 55 03 00                        	call 0x3ebf0 <mcount>
0x9647:    48 89 fb                              	mov rbx, rdi
0x964a:    48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x9651:    48 03 87 50 62 00 00                  	add rax, qword ptr [rdi + 0x6250]
0x9658:    8b 00                                 	mov eax, dword ptr [rax]
0x965a:    83 c8 20                              	or eax, 0x20
; data inside code section at 0x965d -- 0x9663
0x965d:    48 8b 97 f8 57 00                                  |H...W.          |
; function: i2c_soft_reset at 0x9663 -- 0x9668
0x9663:    00 48 03                              	add byte ptr [rax + 3], cl
0x9666:    97                                    	xchg eax, edi
0x9667:    50                                    	push rax
; data inside code section at 0x9668 -- 0x9669
0x9668:    62                                                 |b               |
; function: function_9669 at 0x9669 -- 0x9693
0x9669:    00 00                                 	add byte ptr [rax], al
0x966b:    89 02                                 	mov dword ptr [rdx], eax
0x966d:    bf 0a 00 00 00                        	mov edi, 0xa
0x9672:    e8 c7 bd 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0x9677:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x967e:    48 03 93 50 62 00 00                  	add rdx, qword ptr [rbx + 0x6250]
0x9685:    b8 00 32 00 00                        	mov eax, 0x3200
0x968a:    89 02                                 	mov dword ptr [rdx], eax
0x968c:    48 83 c4 08                           	add rsp, 8
0x9690:    5b                                    	pop rbx
0x9691:    c9                                    	leave 
0x9692:    c3                                    	ret 
; function: i2c_soft_reset at 0x9693 -- 0x96be
0x9693:    55                                    	push rbp
0x9694:    48 89 e5                              	mov rbp, rsp
0x9697:    53                                    	push rbx
0x9698:    48 83 ec 08                           	sub rsp, 8
0x969c:    e8 4f 55 03 00                        	call 0x3ebf0 <mcount>
0x96a1:    48 89 fb                              	mov rbx, rdi
0x96a4:    c6 87 0a 59 00 00 01                  	mov byte ptr [rdi + 0x590a], 1
0x96ab:    48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x96b2:    48 03 87 18 62 00 00                  	add rax, qword ptr [rdi + 0x6218]
0x96b9:    8b 00                                 	mov eax, dword ptr [rax]
0x96bb:    83 c8 20                              	or eax, 0x20
; data inside code section at 0x96be -- 0x96c4
0x96be:    48 8b 97 f8 57 00                                  |H...W.          |
; function: i2c_write_2 at 0x96c4 -- 0x96f4
0x96c4:    00 48 03                              	add byte ptr [rax + 3], cl
0x96c7:    97                                    	xchg eax, edi
0x96c8:    18 62 00                              	sbb byte ptr [rdx], ah
0x96cb:    00 89 02 bf 0a 00                     	add byte ptr [rcx + 0xabf02], cl
0x96d1:    00 00                                 	add byte ptr [rax], al
0x96d3:    e8 66 bd 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0x96d8:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x96df:    48 03 93 18 62 00 00                  	add rdx, qword ptr [rbx + 0x6218]
0x96e6:    b8 00 32 00 00                        	mov eax, 0x3200
0x96eb:    89 02                                 	mov dword ptr [rdx], eax
0x96ed:    48 83 c4 08                           	add rsp, 8
0x96f1:    5b                                    	pop rbx
0x96f2:    c9                                    	leave 
0x96f3:    c3                                    	ret 
; function: i2c_write_2 at 0x96f4 -- 0x9a30
0x96f4:    55                                    	push rbp
0x96f5:    48 89 e5                              	mov rbp, rsp
0x96f8:    41 57                                 	push r15
0x96fa:    41 56                                 	push r14
0x96fc:    41 55                                 	push r13
0x96fe:    41 54                                 	push r12
0x9700:    53                                    	push rbx
0x9701:    48 83 ec 18                           	sub rsp, 0x18
0x9705:    e8 e6 54 03 00                        	call 0x3ebf0 <mcount>
0x970a:    48 89 fb                              	mov rbx, rdi
0x970d:    4d 89 c4                              	mov r12, r8
0x9710:    40 88 75 cf                           	mov byte ptr [rbp - 0x31], sil
0x9714:    41 89 d5                              	mov r13d, edx
0x9717:    41 89 ce                              	mov r14d, ecx
0x971a:    44 0f b6 7d 10                        	movzx r15d, byte ptr [rbp + 0x10]
0x971f:    41 f6 c1 03                           	test r9b, 3
0x9723:    0f 85 24 03 00 00                     	jne 0x9a4d
0x9729:    4d 85 c0                              	test r8, r8
0x972c:    0f 84 1b 03 00 00                     	je 0x9a4d
0x9732:    48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x9739:    48 03 87 60 62 00 00                  	add rax, qword ptr [rdi + 0x6260]
0x9740:    8b 00                                 	mov eax, dword ptr [rax]
0x9742:    89 c0                                 	mov eax, eax
0x9744:    89 c2                                 	mov edx, eax
0x9746:    83 e2 1f                              	and edx, 0x1f
0x9749:    80 fa 10                              	cmp dl, 0x10
0x974c:    75 05                                 	jne 0x9753 <i2c_write_2+0x5f>
0x974e:    f6 c4 1f                              	test ah, 0x1f
0x9751:    74 57                                 	je 0x97aa <i2c_write_2+0xb6>
0x9753:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x975a:    48 03 83 18 62 00 00                  	add rax, qword ptr [rbx + 0x6218]
0x9761:    8b 00                                 	mov eax, dword ptr [rax]
0x9763:    89 c0                                 	mov eax, eax
0x9765:    48 83 c8 20                           	or rax, 0x20
0x9769:    48 89 45 c0                           	mov qword ptr [rbp - 0x40], rax
0x976d:    8b 45 c0                              	mov eax, dword ptr [rbp - 0x40]
0x9770:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9777:    48 03 93 18 62 00 00                  	add rdx, qword ptr [rbx + 0x6218]
0x977e:    89 02                                 	mov dword ptr [rdx], eax
0x9780:    bf 01 00 00 00                        	mov edi, 1
0x9785:    e8 9c 9e ff ff                        	call 0x3626 <DelayNanoseconds>
0x978a:    8b 45 c0                              	mov eax, dword ptr [rbp - 0x40]
0x978d:    83 e0 df                              	and eax, 0xffffffdf
0x9790:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9797:    48 03 93 18 62 00 00                  	add rdx, qword ptr [rbx + 0x6218]
0x979e:    89 02                                 	mov dword ptr [rdx], eax
0x97a0:    bf 01 00 00 00                        	mov edi, 1
0x97a5:    e8 7c 9e ff ff                        	call 0x3626 <DelayNanoseconds>
0x97aa:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x97b1:    48 03 93 40 62 00 00                  	add rdx, qword ptr [rbx + 0x6240]
0x97b8:    b8 00 00 00 00                        	mov eax, 0
0x97bd:    89 02                                 	mov dword ptr [rdx], eax
0x97bf:    41 80 fd 03                           	cmp r13b, 3
0x97c3:    77 17                                 	ja 0x97dc <i2c_write_2+0xe8>
0x97c5:    bf c0 ff ff ff                        	mov edi, 0xffffffc0
0x97ca:    41 80 fd 02                           	cmp r13b, 2
0x97ce:    73 2a                                 	jae 0x97fa <i2c_write_2+0x106>
0x97d0:    41 80 fd 01                           	cmp r13b, 1
0x97d4:    0f 85 73 02 00 00                     	jne 0x9a4d
0x97da:    eb 0c                                 	jmp 0x97e8 <i2c_write_2+0xf4>
0x97dc:    41 80 fd 04                           	cmp r13b, 4
0x97e0:    0f 85 67 02 00 00                     	jne 0x9a4d
0x97e6:    eb 0d                                 	jmp 0x97f5 <i2c_write_2+0x101>
0x97e8:    41 be 00 00 00 00                     	mov r14d, 0
0x97ee:    bf 80 ff ff ff                        	mov edi, 0xffffff80
0x97f3:    eb 05                                 	jmp 0x97fa <i2c_write_2+0x106>
0x97f5:    bf c4 ff ff ff                        	mov edi, 0xffffffc4
0x97fa:    45 0f b6 f6                           	movzx r14d, r14b
0x97fe:    0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x9802:    c1 e0 08                              	shl eax, 8
0x9805:    41 01 c6                              	add r14d, eax
0x9808:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x980f:    48 03 83 48 62 00 00                  	add rax, qword ptr [rbx + 0x6248]
0x9816:    44 89 30                              	mov dword ptr [rax], r14d
0x9819:    41 0f b6 54 24 03                     	movzx edx, byte ptr [r12 + 3]
0x981f:    48 c1 e2 08                           	shl rdx, 8
0x9823:    41 0f b6 44 24 02                     	movzx eax, byte ptr [r12 + 2]
0x9829:    48 01 c2                              	add rdx, rax
0x982c:    48 c1 e2 08                           	shl rdx, 8
0x9830:    41 0f b6 44 24 01                     	movzx eax, byte ptr [r12 + 1]
0x9836:    48 01 c2                              	add rdx, rax
0x9839:    48 c1 e2 08                           	shl rdx, 8
0x983d:    41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0x9842:    8d 04 02                              	lea eax, [rdx + rax]
0x9845:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x984c:    48 03 93 70 62 00 00                  	add rdx, qword ptr [rbx + 0x6270]
0x9853:    89 02                                 	mov dword ptr [rdx], eax
0x9855:    45 0f b6 f7                           	movzx r14d, r15b
0x9859:    4c 89 e0                              	mov rax, r12
0x985c:    be 04 00 00 00                        	mov esi, 4
0x9861:    41 83 fe 04                           	cmp r14d, 4
0x9865:    76 46                                 	jbe 0x98ad <i2c_write_2+0x1b9>
0x9867:    0f b6 48 07                           	movzx ecx, byte ptr [rax + 7]
0x986b:    48 c1 e1 08                           	shl rcx, 8
0x986f:    0f b6 50 06                           	movzx edx, byte ptr [rax + 6]
0x9873:    48 01 d1                              	add rcx, rdx
0x9876:    48 c1 e1 08                           	shl rcx, 8
0x987a:    0f b6 50 05                           	movzx edx, byte ptr [rax + 5]
0x987e:    48 01 d1                              	add rcx, rdx
0x9881:    48 c1 e1 08                           	shl rcx, 8
0x9885:    0f b6 50 04                           	movzx edx, byte ptr [rax + 4]
0x9889:    8d 14 11                              	lea edx, [rcx + rdx]
0x988c:    48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x9893:    48 03 8b 70 62 00 00                  	add rcx, qword ptr [rbx + 0x6270]
0x989a:    89 11                                 	mov dword ptr [rcx], edx
0x989c:    83 c6 04                              	add esi, 4
0x989f:    44 39 f6                              	cmp esi, r14d
0x98a2:    73 09                                 	jae 0x98ad <i2c_write_2+0x1b9>
0x98a4:    48 83 c0 04                           	add rax, 4
0x98a8:    83 fe 10                              	cmp esi, 0x10
0x98ab:    75 ba                                 	jne 0x9867 <i2c_write_2+0x173>
0x98ad:    40 0f b6 ff                           	movzx edi, dil
0x98b1:    41 c1 e7 08                           	shl r15d, 8
0x98b5:    44 01 ff                              	add edi, r15d
0x98b8:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x98bf:    48 03 83 40 62 00 00                  	add rax, qword ptr [rbx + 0x6240]
0x98c6:    66 89 38                              	mov word ptr [rax], di
0x98c9:    41 bf 00 00 00 00                     	mov r15d, 0
0x98cf:    44 39 f6                              	cmp esi, r14d
0x98d2:    0f 83 c5 00 00 00                     	jae 0x999d <i2c_write_2+0x2a9>
0x98d8:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x98df:    48 03 83 60 62 00 00                  	add rax, qword ptr [rbx + 0x6260]
0x98e6:    8b 38                                 	mov edi, dword ptr [rax]
0x98e8:    83 e7 1f                              	and edi, 0x1f
0x98eb:    40 f6 c7 03                           	test dil, 3
0x98ef:    0f 85 58 01 00 00                     	jne 0x9a4d
0x98f5:    40 0f b6 ff                           	movzx edi, dil
0x98f9:    85 ff                                 	test edi, edi
0x98fb:    0f 84 9c 00 00 00                     	je 0x999d <i2c_write_2+0x2a9>
0x9901:    89 f0                                 	mov eax, esi
0x9903:    41 0f b6 4c 04 03                     	movzx ecx, byte ptr [r12 + rax + 3]
0x9909:    48 c1 e1 08                           	shl rcx, 8
0x990d:    41 0f b6 54 04 02                     	movzx edx, byte ptr [r12 + rax + 2]
0x9913:    48 01 d1                              	add rcx, rdx
0x9916:    48 c1 e1 08                           	shl rcx, 8
0x991a:    41 0f b6 54 04 01                     	movzx edx, byte ptr [r12 + rax + 1]
0x9920:    48 01 d1                              	add rcx, rdx
0x9923:    48 c1 e1 08                           	shl rcx, 8
0x9927:    41 0f b6 14 04                        	movzx edx, byte ptr [r12 + rax]
0x992c:    8d 04 11                              	lea eax, [rcx + rdx]
0x992f:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9936:    48 03 93 70 62 00 00                  	add rdx, qword ptr [rbx + 0x6270]
0x993d:    89 02                                 	mov dword ptr [rdx], eax
0x993f:    44 8d 6e 04                           	lea r13d, [rsi + 4]
0x9943:    45 39 f5                              	cmp r13d, r14d
0x9946:    72 4a                                 	jb 0x9992 <i2c_write_2+0x29e>
0x9948:    eb 56                                 	jmp 0x99a0 <i2c_write_2+0x2ac>
0x994a:    44 89 e8                              	mov eax, r13d
0x994d:    41 0f b6 4c 04 03                     	movzx ecx, byte ptr [r12 + rax + 3]
0x9953:    48 c1 e1 08                           	shl rcx, 8
0x9957:    41 0f b6 54 04 02                     	movzx edx, byte ptr [r12 + rax + 2]
0x995d:    48 01 d1                              	add rcx, rdx
0x9960:    48 c1 e1 08                           	shl rcx, 8
0x9964:    41 0f b6 54 04 01                     	movzx edx, byte ptr [r12 + rax + 1]
0x996a:    48 01 d1                              	add rcx, rdx
0x996d:    48 c1 e1 08                           	shl rcx, 8
0x9971:    41 0f b6 14 04                        	movzx edx, byte ptr [r12 + rax]
0x9976:    8d 04 11                              	lea eax, [rcx + rdx]
0x9979:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9980:    48 03 93 70 62 00 00                  	add rdx, qword ptr [rbx + 0x6270]
0x9987:    89 02                                 	mov dword ptr [rdx], eax
0x9989:    41 83 c5 04                           	add r13d, 4
0x998d:    45 39 f5                              	cmp r13d, r14d
0x9990:    73 0e                                 	jae 0x99a0 <i2c_write_2+0x2ac>
0x9992:    44 89 e8                              	mov eax, r13d
0x9995:    29 f0                                 	sub eax, esi
0x9997:    39 f8                                 	cmp eax, edi
0x9999:    72 af                                 	jb 0x994a <i2c_write_2+0x256>
0x999b:    eb 03                                 	jmp 0x99a0 <i2c_write_2+0x2ac>
0x999d:    41 89 f5                              	mov r13d, esi
0x99a0:    41 83 c7 01                           	add r15d, 1
0x99a4:    bf 01 00 00 00                        	mov edi, 1
0x99a9:    e8 90 ba 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0x99ae:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x99b5:    48 03 83 40 62 00 00                  	add rax, qword ptr [rbx + 0x6240]
0x99bc:    8b 00                                 	mov eax, dword ptr [rax]
0x99be:    48 89 c2                              	mov rdx, rax
0x99c1:    48 c1 ea 10                           	shr rdx, 0x10
0x99c5:    a9 00 00 40 00                        	test eax, 0x400000
0x99ca:    74 16                                 	je 0x99e2 <i2c_write_2+0x2ee>
0x99cc:    f6 c2 28                              	test dl, 0x28
0x99cf:    41 0f 94 c4                           	sete r12b
0x99d3:    45 0f b6 e4                           	movzx r12d, r12b
0x99d7:    41 81 ff e7 03 00 00                  	cmp r15d, 0x3e7
0x99de:    76 73                                 	jbe 0x9a53
0x99e0:    eb 17                                 	jmp 0x99f9 <i2c_write_2+0x305>
0x99e2:    41 81 ff e8 03 00 00                  	cmp r15d, 0x3e8 ; "%("
0x99e9:    74 08                                 	je 0x99f3 <i2c_write_2+0x2ff>
0x99eb:    44 89 ee                              	mov esi, r13d
0x99ee:    e9 dc fe ff ff                        	jmp 0x98cf <i2c_write_2+0x1db>
0x99f3:    41 bc 00 00 00 00                     	mov r12d, 0
0x99f9:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x9a00:    48 03 83 18 62 00 00                  	add rax, qword ptr [rbx + 0x6218]
0x9a07:    44 8b 28                              	mov r13d, dword ptr [rax]
0x9a0a:    45 89 ed                              	mov r13d, r13d
0x9a0d:    49 83 cd 20                           	or r13, 0x20
0x9a11:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9a18:    48 03 93 18 62 00 00                  	add rdx, qword ptr [rbx + 0x6218]
0x9a1f:    44 89 2a                              	mov dword ptr [rdx], r13d
0x9a22:    bf 01 00 00 00                        	mov edi, 1
0x9a27:    e8 fa 9b ff ff                        	call 0x3626 <DelayNanoseconds>
0x9a2c:    41 83 e5 df                           	and r13d, 0xffffffdf
; data inside code section at 0x9a30 -- 0x9a35
0x9a30:    48 8b 83 f8 57                                     |H...W           |
; function: i2c_2_read_mode1 at 0x9a35 -- 0x9a65
0x9a35:    00 00                                 	add byte ptr [rax], al
0x9a37:    48 03 83 18 62 00 00                  	add rax, qword ptr [rbx + 0x6218]
0x9a3e:    44 89 28                              	mov dword ptr [rax], r13d
0x9a41:    bf 01 00 00 00                        	mov edi, 1
0x9a46:    e8 db 9b ff ff                        	call 0x3626 <DelayNanoseconds>
0x9a4b:    eb 06                                 	jmp 0x9a53 <i2c_2_read_mode1+0x1e>
0x9a4d:    41 bc 00 00 00 00                     	mov r12d, 0
0x9a53:    4c 89 e0                              	mov rax, r12
0x9a56:    48 83 c4 18                           	add rsp, 0x18
0x9a5a:    5b                                    	pop rbx
0x9a5b:    41 5c                                 	pop r12
0x9a5d:    41 5d                                 	pop r13
0x9a5f:    41 5e                                 	pop r14
0x9a61:    41 5f                                 	pop r15
0x9a63:    c9                                    	leave 
0x9a64:    c3                                    	ret 
; function: i2c_2_read_mode1 at 0x9a65 -- 0x9ae3
0x9a65:    55                                    	push rbp
0x9a66:    48 89 e5                              	mov rbp, rsp
0x9a69:    48 83 ec 60                           	sub rsp, 0x60
0x9a6d:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x9a71:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x9a75:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x9a79:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x9a7d:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x9a81:    e8 6a 51 03 00                        	call 0x3ebf0 <mcount>
0x9a86:    49 89 fe                              	mov r14, rdi
0x9a89:    4c 89 45 b8                           	mov qword ptr [rbp - 0x48], r8
0x9a8d:    4c 89 4d b0                           	mov qword ptr [rbp - 0x50], r9
0x9a91:    44 0f b6 7d 10                        	movzx r15d, byte ptr [rbp + 0x10]
0x9a96:    88 4d c0                              	mov byte ptr [rbp - 0x40], cl
0x9a99:    0f b6 5d 18                           	movzx ebx, byte ptr [rbp + 0x18]
0x9a9d:    44 0f b6 e1                           	movzx r12d, cl
0x9aa1:    44 0f b6 ee                           	movzx r13d, sil
0x9aa5:    89 5c 24 08                           	mov dword ptr [rsp + 8], ebx
0x9aa9:    c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x9ab0:    41 b9 04 00 00 00                     	mov r9d, 4
0x9ab6:    4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0x9aba:    44 89 e1                              	mov ecx, r12d
0x9abd:    ba 01 00 00 00                        	mov edx, 1
0x9ac2:    44 89 ee                              	mov esi, r13d
0x9ac5:    e8 2a fc ff ff                        	call 0x96f4 <i2c_write_2>
0x9aca:    48 89 c2                              	mov rdx, rax
0x9acd:    b8 00 00 00 00                        	mov eax, 0
0x9ad2:    48 85 d2                              	test rdx, rdx
0x9ad5:    74 27                                 	je 0x9afe
0x9ad7:    89 5c 24 08                           	mov dword ptr [rsp + 8], ebx
0x9adb:    45 0f b6 ff                           	movzx r15d, r15b
0x9adf:    44 89 3c 24                           	mov dword ptr [rsp], r15d
; data inside code section at 0x9ae3 -- 0x9ae4
0x9ae3:    4c                                                 |L               |
; function: i2c_read_2 at 0x9ae4 -- 0x9b14
0x9ae4:    8b 4d b0                              	mov ecx, dword ptr [rbp - 0x50]
0x9ae7:    4c 8b 45 b8                           	mov r8, qword ptr [rbp - 0x48]
0x9aeb:    44 89 e1                              	mov ecx, r12d
0x9aee:    ba 01 00 00 00                        	mov edx, 1
0x9af3:    44 89 ee                              	mov esi, r13d
0x9af6:    4c 89 f7                              	mov rdi, r14
0x9af9:    e8 16 00 00 00                        	call 0x9b14 <i2c_read_2>
0x9afe:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x9b02:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x9b06:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x9b0a:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x9b0e:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x9b12:    c9                                    	leave 
0x9b13:    c3                                    	ret 
; function: i2c_read_2 at 0x9b14 -- 0x9bbe
0x9b14:    55                                    	push rbp
0x9b15:    48 89 e5                              	mov rbp, rsp
0x9b18:    41 57                                 	push r15
0x9b1a:    41 56                                 	push r14
0x9b1c:    41 55                                 	push r13
0x9b1e:    41 54                                 	push r12
0x9b20:    53                                    	push rbx
0x9b21:    48 83 ec 28                           	sub rsp, 0x28
0x9b25:    e8 c6 50 03 00                        	call 0x3ebf0 <mcount>
0x9b2a:    48 89 fb                              	mov rbx, rdi
0x9b2d:    4d 89 c4                              	mov r12, r8
0x9b30:    0f b6 45 10                           	movzx eax, byte ptr [rbp + 0x10]
0x9b34:    88 45 c0                              	mov byte ptr [rbp - 0x40], al
0x9b37:    0f b6 7d 18                           	movzx edi, byte ptr [rbp + 0x18]
0x9b3b:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x9b42:    48 03 83 28 62 00 00                  	add rax, qword ptr [rbx + 0x6228]
0x9b49:    8b 00                                 	mov eax, dword ptr [rax]
0x9b4b:    f6 c4 1f                              	test ah, 0x1f
0x9b4e:    0f 85 de 01 00 00                     	jne 0x9d32
0x9b54:    41 f6 c1 03                           	test r9b, 3
0x9b58:    0f 85 d4 01 00 00                     	jne 0x9d32
0x9b5e:    4d 85 c0                              	test r8, r8
0x9b61:    0f 84 cb 01 00 00                     	je 0x9d32
0x9b67:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x9b6e:    48 03 83 60 62 00 00                  	add rax, qword ptr [rbx + 0x6260]
0x9b75:    8b 00                                 	mov eax, dword ptr [rax]
0x9b77:    41 89 c2                              	mov r10d, eax
0x9b7a:    44 89 d0                              	mov eax, r10d
0x9b7d:    83 e0 1f                              	and eax, 0x1f
0x9b80:    3c 10                                 	cmp al, 0x10
0x9b82:    0f 85 aa 01 00 00                     	jne 0x9d32
0x9b88:    41 f7 c2 00 1f 00 00                  	test r10d, 0x1f00
0x9b8f:    0f 85 9d 01 00 00                     	jne 0x9d32
0x9b95:    4c 8b 83 f8 57 00 00                  	mov r8, qword ptr [rbx + 0x57f8]
0x9b9c:    4c 03 83 40 62 00 00                  	add r8, qword ptr [rbx + 0x6240]
0x9ba3:    b8 00 00 00 00                        	mov eax, 0
0x9ba8:    41 89 00                              	mov dword ptr [r8], eax
0x9bab:    80 fa 10                              	cmp dl, 0x10
0x9bae:    0f 87 7e 01 00 00                     	ja 0x9d32
0x9bb4:    0f b6 d2                              	movzx edx, dl
0x9bb7:    ff 24 d5 00 00 00 00                  	jmp qword ptr [rdx*8]
; function: function_9bbe at 0x9bbe -- 0x9bc5
0x9bbe:    ba e0 ff ff ff                        	mov edx, 0xffffffe0
0x9bc3:    eb 3c                                 	jmp 0x9c01 <function_9c01>
; function: function_9bc5 at 0x9bc5 -- 0x9bcc
0x9bc5:    ba e4 ff ff ff                        	mov edx, 0xffffffe4
0x9bca:    eb 35                                 	jmp 0x9c01 <function_9c01>
; function: function_9bcc at 0x9bcc -- 0x9bf7
0x9bcc:    0f b6 c9                              	movzx ecx, cl
0x9bcf:    40 0f b6 f6                           	movzx esi, sil
0x9bd3:    40 0f b6 ff                           	movzx edi, dil
0x9bd7:    89 7c 24 08                           	mov dword ptr [rsp + 8], edi
0x9bdb:    0f b6 45 c0                           	movzx eax, byte ptr [rbp - 0x40]
0x9bdf:    89 04 24                              	mov dword ptr [rsp], eax
0x9be2:    4d 89 e0                              	mov r8, r12
0x9be5:    ba 10 00 00 00                        	mov edx, 0x10
0x9bea:    48 89 df                              	mov rdi, rbx
0x9bed:    e8 73 fe ff ff                        	call 0x9a65 <i2c_2_read_mode1>
0x9bf2:    e9 40 01 00 00                        	jmp 0x9d37
; data inside code section at 0x9bf7 -- 0x9c01
0x9bf7:    b9 00 00 00 00 ba a0 ff  ff ff                     |..........      |
; function: function_9c01 at 0x9c01 -- 0x9d12
0x9c01:    0f b6 c9                              	movzx ecx, cl
0x9c04:    40 0f b6 c6                           	movzx eax, sil
0x9c08:    c1 e0 08                              	shl eax, 8
0x9c0b:    8d 04 01                              	lea eax, [rcx + rax]
0x9c0e:    48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x9c15:    48 03 8b 48 62 00 00                  	add rcx, qword ptr [rbx + 0x6248]
0x9c1c:    89 01                                 	mov dword ptr [rcx], eax
0x9c1e:    0f b6 d2                              	movzx edx, dl
0x9c21:    0f b6 45 c0                           	movzx eax, byte ptr [rbp - 0x40]
0x9c25:    c1 e0 08                              	shl eax, 8
0x9c28:    8d 04 02                              	lea eax, [rdx + rax]
0x9c2b:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9c32:    48 03 93 40 62 00 00                  	add rdx, qword ptr [rbx + 0x6240]
0x9c39:    66 89 02                              	mov word ptr [rdx], ax
0x9c3c:    41 bf 01 00 00 00                     	mov r15d, 1
0x9c42:    41 bd 00 00 00 00                     	mov r13d, 0
0x9c48:    44 0f b6 75 c0                        	movzx r14d, byte ptr [rbp - 0x40]
0x9c4d:    bf 02 00 00 00                        	mov edi, 2
0x9c52:    e8 e7 b7 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0x9c57:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x9c5e:    48 03 83 60 62 00 00                  	add rax, qword ptr [rbx + 0x6260]
0x9c65:    8b 38                                 	mov edi, dword ptr [rax]
0x9c67:    81 e7 00 1f 00 00                     	and edi, 0x1f00
0x9c6d:    48 c1 ef 08                           	shr rdi, 8
0x9c71:    40 f6 c7 03                           	test dil, 3
0x9c75:    0f 85 8c 00 00 00                     	jne 0x9d07 <function_9c01+0x106>
0x9c7b:    40 38 7d c0                           	cmp byte ptr [rbp - 0x40], dil
0x9c7f:    0f 87 82 00 00 00                     	ja 0x9d07 <function_9c01+0x106>
0x9c85:    40 0f b6 ff                           	movzx edi, dil
0x9c89:    85 ff                                 	test edi, edi
0x9c8b:    74 50                                 	je 0x9cdd <function_9c01+0xdc>
0x9c8d:    44 89 e8                              	mov eax, r13d
0x9c90:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9c97:    48 03 93 70 62 00 00                  	add rdx, qword ptr [rbx + 0x6270]
0x9c9e:    8b 0a                                 	mov ecx, dword ptr [rdx]
0x9ca0:    89 c9                                 	mov ecx, ecx
0x9ca2:    89 c2                                 	mov edx, eax
0x9ca4:    41 88 0c 14                           	mov byte ptr [r12 + rdx], cl
0x9ca8:    48 89 ce                              	mov rsi, rcx
0x9cab:    48 c1 ee 08                           	shr rsi, 8
0x9caf:    41 88 74 14 01                        	mov byte ptr [r12 + rdx + 1], sil
0x9cb4:    48 89 ce                              	mov rsi, rcx
0x9cb7:    48 c1 ee 10                           	shr rsi, 0x10
0x9cbb:    41 88 74 14 02                        	mov byte ptr [r12 + rdx + 2], sil
0x9cc0:    48 c1 e9 18                           	shr rcx, 0x18
0x9cc4:    41 88 4c 14 03                        	mov byte ptr [r12 + rdx + 3], cl
0x9cc9:    83 c0 04                              	add eax, 4
0x9ccc:    44 39 f0                              	cmp eax, r14d
0x9ccf:    73 09                                 	jae 0x9cda <function_9c01+0xd9>
0x9cd1:    89 c2                                 	mov edx, eax
0x9cd3:    44 29 ea                              	sub edx, r13d
0x9cd6:    39 fa                                 	cmp edx, edi
0x9cd8:    72 b6                                 	jb 0x9c90 <function_9c01+0x8f>
0x9cda:    41 89 c5                              	mov r13d, eax
0x9cdd:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x9ce4:    48 03 83 40 62 00 00                  	add rax, qword ptr [rbx + 0x6240]
0x9ceb:    8b 10                                 	mov edx, dword ptr [rax]
0x9ced:    81 e2 00 00 ff 00                     	and edx, 0xff0000
0x9cf3:    48 c1 ea 10                           	shr rdx, 0x10
0x9cf7:    84 d2                                 	test dl, dl
0x9cf9:    79 0c                                 	jns 0x9d07 <function_9c01+0x106>
0x9cfb:    b8 01 00 00 00                        	mov eax, 1
0x9d00:    f6 c2 28                              	test dl, 0x28
0x9d03:    74 18                                 	je 0x9d1d
0x9d05:    eb 11                                 	jmp 0x9d18
0x9d07:    41 83 c7 01                           	add r15d, 1
0x9d0b:    41 81 ff f5 01 00 00                  	cmp r15d, 0x1f5
; data inside code section at 0x9d12 -- 0x9d16
0x9d12:    0f 85 35 ff                                        |..5.            |
; function: i2c_write at 0x9d16 -- 0x9d46
; function: i2c_write at 0x9d46 -- 0xa0d3
0x9d46:    55                                    	push rbp
0x9d47:    48 89 e5                              	mov rbp, rsp
0x9d4a:    41 57                                 	push r15
0x9d4c:    41 56                                 	push r14
0x9d4e:    41 55                                 	push r13
0x9d50:    41 54                                 	push r12
0x9d52:    53                                    	push rbx
0x9d53:    48 83 ec 38                           	sub rsp, 0x38
0x9d57:    e8 94 4e 03 00                        	call 0x3ebf0 <mcount>
0x9d5c:    48 89 fb                              	mov rbx, rdi
0x9d5f:    4d 89 c5                              	mov r13, r8
0x9d62:    41 89 f6                              	mov r14d, esi
0x9d65:    41 89 d4                              	mov r12d, edx
0x9d68:    41 89 cf                              	mov r15d, ecx
0x9d6b:    0f b6 45 10                           	movzx eax, byte ptr [rbp + 0x10]
0x9d6f:    88 45 a0                              	mov byte ptr [rbp - 0x60], al
0x9d72:    41 f6 c1 03                           	test r9b, 3
0x9d76:    74 15                                 	je 0x9d8d <i2c_write+0x47>
0x9d78:    bf 01 00 00 00                        	mov edi, 1
0x9d7d:    e8 bc b6 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0x9d82:    41 bc 00 00 00 00                     	mov r12d, 0
0x9d88:    e9 65 03 00 00                        	jmp 0xa0f2
0x9d8d:    4d 85 c0                              	test r8, r8
0x9d90:    75 15                                 	jne 0x9da7 <i2c_write+0x61>
0x9d92:    bf 01 00 00 00                        	mov edi, 1
0x9d97:    e8 a2 b6 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0x9d9c:    41 bc 00 00 00 00                     	mov r12d, 0
0x9da2:    e9 4b 03 00 00                        	jmp 0xa0f2
0x9da7:    48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x9dae:    48 03 87 28 62 00 00                  	add rax, qword ptr [rdi + 0x6228]
0x9db5:    8b 00                                 	mov eax, dword ptr [rax]
0x9db7:    89 c0                                 	mov eax, eax
0x9db9:    89 c2                                 	mov edx, eax
0x9dbb:    83 e2 1f                              	and edx, 0x1f
0x9dbe:    80 fa 10                              	cmp dl, 0x10
0x9dc1:    75 09                                 	jne 0x9dcc <i2c_write+0x86>
0x9dc3:    f6 c4 1f                              	test ah, 0x1f
0x9dc6:    0f 84 83 00 00 00                     	je 0x9e4f <i2c_write+0x109>
0x9dcc:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x9dd3:    48 03 83 18 62 00 00                  	add rax, qword ptr [rbx + 0x6218]
0x9dda:    8b 00                                 	mov eax, dword ptr [rax]
0x9ddc:    89 c0                                 	mov eax, eax
0x9dde:    48 83 c8 20                           	or rax, 0x20
0x9de2:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x9de6:    8b 45 c8                              	mov eax, dword ptr [rbp - 0x38]
0x9de9:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9df0:    48 03 93 18 62 00 00                  	add rdx, qword ptr [rbx + 0x6218]
0x9df7:    89 02                                 	mov dword ptr [rdx], eax
0x9df9:    bf 01 00 00 00                        	mov edi, 1
0x9dfe:    e8 23 98 ff ff                        	call 0x3626 <DelayNanoseconds>
0x9e03:    8b 45 c8                              	mov eax, dword ptr [rbp - 0x38]
0x9e06:    83 e0 df                              	and eax, 0xffffffdf
0x9e09:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9e10:    48 03 93 18 62 00 00                  	add rdx, qword ptr [rbx + 0x6218]
0x9e17:    89 02                                 	mov dword ptr [rdx], eax
0x9e19:    bf 01 00 00 00                        	mov edi, 1
0x9e1e:    e8 03 98 ff ff                        	call 0x3626 <DelayNanoseconds>
0x9e23:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x9e2a:    48 03 83 28 62 00 00                  	add rax, qword ptr [rbx + 0x6228]
0x9e31:    8b 00                                 	mov eax, dword ptr [rax]
0x9e33:    83 e0 1f                              	and eax, 0x1f
0x9e36:    3c 10                                 	cmp al, 0x10
0x9e38:    74 15                                 	je 0x9e4f <i2c_write+0x109>
0x9e3a:    bf 01 00 00 00                        	mov edi, 1
0x9e3f:    e8 fa b5 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0x9e44:    41 bc 00 00 00 00                     	mov r12d, 0
0x9e4a:    e9 a3 02 00 00                        	jmp 0xa0f2
0x9e4f:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9e56:    48 03 93 08 62 00 00                  	add rdx, qword ptr [rbx + 0x6208]
0x9e5d:    b8 00 00 00 00                        	mov eax, 0
0x9e62:    89 02                                 	mov dword ptr [rdx], eax
0x9e64:    41 80 fc 05                           	cmp r12b, 5
0x9e68:    77 24                                 	ja 0x9e8e <i2c_write+0x148>
0x9e6a:    45 0f b6 e4                           	movzx r12d, r12b
0x9e6e:    42 ff 24 e5 00 00 00 00               	jmp qword ptr [r12*8]
0x9e76:    c6 45 c0 c0                           	mov byte ptr [rbp - 0x40], 0xc0
0x9e7a:    eb 31                                 	jmp 0x9ead <i2c_write+0x167>
0x9e7c:    c6 45 c0 c4                           	mov byte ptr [rbp - 0x40], 0xc4
0x9e80:    eb 2b                                 	jmp 0x9ead <i2c_write+0x167>
0x9e82:    41 bf 00 00 00 00                     	mov r15d, 0
0x9e88:    c6 45 c0 84                           	mov byte ptr [rbp - 0x40], 0x84
0x9e8c:    eb 1f                                 	jmp 0x9ead <i2c_write+0x167>
0x9e8e:    bf 01 00 00 00                        	mov edi, 1
0x9e93:    e8 a6 b5 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0x9e98:    41 bc 00 00 00 00                     	mov r12d, 0
0x9e9e:    e9 4f 02 00 00                        	jmp 0xa0f2
0x9ea3:    41 bf 00 00 00 00                     	mov r15d, 0
0x9ea9:    c6 45 c0 80                           	mov byte ptr [rbp - 0x40], 0x80
0x9ead:    41 0f b6 d7                           	movzx edx, r15b
0x9eb1:    41 0f b6 c6                           	movzx eax, r14b
0x9eb5:    c1 e0 08                              	shl eax, 8
0x9eb8:    8d 04 02                              	lea eax, [rdx + rax]
0x9ebb:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9ec2:    48 03 93 10 62 00 00                  	add rdx, qword ptr [rbx + 0x6210]
0x9ec9:    89 02                                 	mov dword ptr [rdx], eax
0x9ecb:    4d 89 ec                              	mov r12, r13
0x9ece:    c7 45 c8 00 00 00 00                  	mov dword ptr [rbp - 0x38], 0
0x9ed5:    44 0f b6 75 a0                        	movzx r14d, byte ptr [rbp - 0x60]
0x9eda:    45 0f b6 7c 24 03                     	movzx r15d, byte ptr [r12 + 3]
0x9ee0:    49 c1 e7 08                           	shl r15, 8
0x9ee4:    41 0f b6 44 24 02                     	movzx eax, byte ptr [r12 + 2]
0x9eea:    49 01 c7                              	add r15, rax
0x9eed:    49 c1 e7 08                           	shl r15, 8
0x9ef1:    41 0f b6 44 24 01                     	movzx eax, byte ptr [r12 + 1]
0x9ef7:    49 01 c7                              	add r15, rax
0x9efa:    49 c1 e7 08                           	shl r15, 8
0x9efe:    41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0x9f03:    49 01 c7                              	add r15, rax
0x9f06:    bf 01 00 00 00                        	mov edi, 1
0x9f0b:    e8 16 97 ff ff                        	call 0x3626 <DelayNanoseconds>
0x9f10:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x9f17:    48 03 83 38 62 00 00                  	add rax, qword ptr [rbx + 0x6238]
0x9f1e:    44 89 38                              	mov dword ptr [rax], r15d
0x9f21:    83 45 c8 04                           	add dword ptr [rbp - 0x38], 4
0x9f25:    44 89 75 c4                           	mov dword ptr [rbp - 0x3c], r14d
0x9f29:    44 39 75 c8                           	cmp dword ptr [rbp - 0x38], r14d
0x9f2d:    73 0a                                 	jae 0x9f39 <i2c_write+0x1f3>
0x9f2f:    49 83 c4 04                           	add r12, 4
0x9f33:    83 7d c8 10                           	cmp dword ptr [rbp - 0x38], 0x10
0x9f37:    75 a1                                 	jne 0x9eda <i2c_write+0x194>
0x9f39:    0f b6 55 c0                           	movzx edx, byte ptr [rbp - 0x40]
0x9f3d:    0f b6 45 a0                           	movzx eax, byte ptr [rbp - 0x60]
0x9f41:    c1 e0 08                              	shl eax, 8
0x9f44:    8d 04 02                              	lea eax, [rdx + rax]
0x9f47:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x9f4e:    48 03 93 08 62 00 00                  	add rdx, qword ptr [rbx + 0x6208]
0x9f55:    66 89 02                              	mov word ptr [rdx], ax
0x9f58:    c7 45 bc 00 00 00 00                  	mov dword ptr [rbp - 0x44], 0
0x9f5f:    44 0f b6 7d a0                        	movzx r15d, byte ptr [rbp - 0x60]
0x9f64:    41 83 ef 10                           	sub r15d, 0x10
0x9f68:    8b 45 c4                              	mov eax, dword ptr [rbp - 0x3c]
0x9f6b:    39 45 c8                              	cmp dword ptr [rbp - 0x38], eax
0x9f6e:    0f 83 d7 00 00 00                     	jae 0xa04b <i2c_write+0x305>
0x9f74:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x9f7b:    48 03 83 28 62 00 00                  	add rax, qword ptr [rbx + 0x6228]
0x9f82:    44 8b 30                              	mov r14d, dword ptr [rax]
0x9f85:    41 83 e6 1f                           	and r14d, 0x1f
0x9f89:    41 bc 00 00 00 00                     	mov r12d, 0
0x9f8f:    80 7d a0 10                           	cmp byte ptr [rbp - 0x60], 0x10
0x9f93:    77 2e                                 	ja 0x9fc3 <i2c_write+0x27d>
0x9f95:    eb 35                                 	jmp 0x9fcc <i2c_write+0x286>
0x9f97:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x9f9e:    48 03 83 28 62 00 00                  	add rax, qword ptr [rbx + 0x6228]
0x9fa5:    44 8b 30                              	mov r14d, dword ptr [rax]
0x9fa8:    41 83 e6 1f                           	and r14d, 0x1f
0x9fac:    bf 01 00 00 00                        	mov edi, 1
0x9fb1:    e8 70 96 ff ff                        	call 0x3626 <DelayNanoseconds>
0x9fb6:    41 83 c4 01                           	add r12d, 1
0x9fba:    41 81 fc f4 01 00 00                  	cmp r12d, 0x1f4
0x9fc1:    74 09                                 	je 0x9fcc <i2c_write+0x286>
0x9fc3:    41 0f b6 c6                           	movzx eax, r14b
0x9fc7:    44 39 f8                              	cmp eax, r15d
0x9fca:    7c cb                                 	jl 0x9f97 <i2c_write+0x251>
0x9fcc:    41 f6 c6 03                           	test r14b, 3
0x9fd0:    0f 85 b3 00 00 00                     	jne 0xa089 <i2c_write+0x343>
0x9fd6:    45 0f b6 f6                           	movzx r14d, r14b
0x9fda:    44 89 75 c0                           	mov dword ptr [rbp - 0x40], r14d
0x9fde:    45 85 f6                              	test r14d, r14d
0x9fe1:    74 68                                 	je 0xa04b <i2c_write+0x305>
0x9fe3:    44 8b 65 c8                           	mov r12d, dword ptr [rbp - 0x38]
0x9fe7:    44 89 e0                              	mov eax, r12d
0x9fea:    45 0f b6 74 05 03                     	movzx r14d, byte ptr [r13 + rax + 3]
0x9ff0:    49 c1 e6 08                           	shl r14, 8
0x9ff4:    41 0f b6 54 05 02                     	movzx edx, byte ptr [r13 + rax + 2]
0x9ffa:    49 01 d6                              	add r14, rdx
0x9ffd:    49 c1 e6 08                           	shl r14, 8
0xa001:    41 0f b6 54 05 01                     	movzx edx, byte ptr [r13 + rax + 1]
0xa007:    49 01 d6                              	add r14, rdx
0xa00a:    49 c1 e6 08                           	shl r14, 8
0xa00e:    41 0f b6 44 05 00                     	movzx eax, byte ptr [r13 + rax]
0xa014:    49 01 c6                              	add r14, rax
0xa017:    bf 01 00 00 00                        	mov edi, 1
0xa01c:    e8 05 96 ff ff                        	call 0x3626 <DelayNanoseconds>
0xa021:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0xa028:    48 03 83 38 62 00 00                  	add rax, qword ptr [rbx + 0x6238]
0xa02f:    44 89 30                              	mov dword ptr [rax], r14d
0xa032:    41 83 c4 04                           	add r12d, 4
0xa036:    44 3b 65 c4                           	cmp r12d, dword ptr [rbp - 0x3c]
0xa03a:    73 0b                                 	jae 0xa047 <i2c_write+0x301>
0xa03c:    44 89 e0                              	mov eax, r12d
0xa03f:    2b 45 c8                              	sub eax, dword ptr [rbp - 0x38]
0xa042:    3b 45 c0                              	cmp eax, dword ptr [rbp - 0x40]
0xa045:    72 a0                                 	jb 0x9fe7 <i2c_write+0x2a1>
0xa047:    44 89 65 c8                           	mov dword ptr [rbp - 0x38], r12d
0xa04b:    bf 01 00 00 00                        	mov edi, 1
0xa050:    e8 e9 b3 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0xa055:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0xa05c:    48 03 83 08 62 00 00                  	add rax, qword ptr [rbx + 0x6208]
0xa063:    8b 00                                 	mov eax, dword ptr [rax]
0xa065:    48 89 c2                              	mov rdx, rax
0xa068:    48 c1 ea 10                           	shr rdx, 0x10
0xa06c:    a9 00 00 40 00                        	test eax, 0x400000
0xa071:    74 16                                 	je 0xa089 <i2c_write+0x343>
0xa073:    f6 c2 28                              	test dl, 0x28
0xa076:    41 0f 94 c4                           	sete r12b
0xa07a:    45 0f b6 e4                           	movzx r12d, r12b
0xa07e:    81 7d bc e7 03 00 00                  	cmp dword ptr [rbp - 0x44], 0x3e7
0xa085:    76 6b                                 	jbe 0xa0f2
0xa087:    eb 17                                 	jmp 0xa0a0 <i2c_write+0x35a>
0xa089:    83 45 bc 01                           	add dword ptr [rbp - 0x44], 1
0xa08d:    81 7d bc e8 03 00 00                  	cmp dword ptr [rbp - 0x44], 0x3e8 ; "%("
0xa094:    0f 85 ce fe ff ff                     	jne 0x9f68 <i2c_write+0x222>
0xa09a:    41 bc 00 00 00 00                     	mov r12d, 0
0xa0a0:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0xa0a7:    48 03 83 18 62 00 00                  	add rax, qword ptr [rbx + 0x6218]
0xa0ae:    44 8b 28                              	mov r13d, dword ptr [rax]
0xa0b1:    45 89 ed                              	mov r13d, r13d
0xa0b4:    49 83 cd 20                           	or r13, 0x20
0xa0b8:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0xa0bf:    48 03 93 18 62 00 00                  	add rdx, qword ptr [rbx + 0x6218]
0xa0c6:    44 89 2a                              	mov dword ptr [rdx], r13d
0xa0c9:    bf 01 00 00 00                        	mov edi, 1
0xa0ce:    e8 53 95 ff ff                        	call 0x3626 <DelayNanoseconds>
; data inside code section at 0xa0d3 -- 0xa0d4
0xa0d3:    41                                                 |A               |
; function: i2c_1_read_mode1 at 0xa0d4 -- 0xa104
0xa0d4:    83 e5 df                              	and ebp, 0xffffffdf
0xa0d7:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0xa0de:    48 03 83 18 62 00 00                  	add rax, qword ptr [rbx + 0x6218]
0xa0e5:    44 89 28                              	mov dword ptr [rax], r13d
0xa0e8:    bf 01 00 00 00                        	mov edi, 1
0xa0ed:    e8 34 95 ff ff                        	call 0x3626 <DelayNanoseconds>
0xa0f2:    4c 89 e0                              	mov rax, r12
0xa0f5:    48 83 c4 38                           	add rsp, 0x38
0xa0f9:    5b                                    	pop rbx
0xa0fa:    41 5c                                 	pop r12
0xa0fc:    41 5d                                 	pop r13
0xa0fe:    41 5e                                 	pop r14
0xa100:    41 5f                                 	pop r15
0xa102:    c9                                    	leave 
0xa103:    c3                                    	ret 
; function: i2c_1_read_mode1 at 0xa104 -- 0xa182
0xa104:    55                                    	push rbp
0xa105:    48 89 e5                              	mov rbp, rsp
0xa108:    48 83 ec 60                           	sub rsp, 0x60
0xa10c:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xa110:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xa114:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xa118:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xa11c:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xa120:    e8 cb 4a 03 00                        	call 0x3ebf0 <mcount>
0xa125:    49 89 fe                              	mov r14, rdi
0xa128:    4c 89 45 b8                           	mov qword ptr [rbp - 0x48], r8
0xa12c:    4c 89 4d b0                           	mov qword ptr [rbp - 0x50], r9
0xa130:    44 0f b6 7d 10                        	movzx r15d, byte ptr [rbp + 0x10]
0xa135:    88 4d c0                              	mov byte ptr [rbp - 0x40], cl
0xa138:    0f b6 5d 18                           	movzx ebx, byte ptr [rbp + 0x18]
0xa13c:    44 0f b6 e1                           	movzx r12d, cl
0xa140:    44 0f b6 ee                           	movzx r13d, sil
0xa144:    89 5c 24 08                           	mov dword ptr [rsp + 8], ebx
0xa148:    c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0xa14f:    41 b9 04 00 00 00                     	mov r9d, 4
0xa155:    4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0xa159:    44 89 e1                              	mov ecx, r12d
0xa15c:    ba 01 00 00 00                        	mov edx, 1
0xa161:    44 89 ee                              	mov esi, r13d
0xa164:    e8 dd fb ff ff                        	call 0x9d46 <i2c_write>
0xa169:    48 89 c2                              	mov rdx, rax
0xa16c:    b8 00 00 00 00                        	mov eax, 0
0xa171:    48 85 d2                              	test rdx, rdx
0xa174:    74 27                                 	je 0xa19d
0xa176:    89 5c 24 08                           	mov dword ptr [rsp + 8], ebx
0xa17a:    45 0f b6 ff                           	movzx r15d, r15b
0xa17e:    44 89 3c 24                           	mov dword ptr [rsp], r15d
; data inside code section at 0xa182 -- 0xa183
0xa182:    4c                                                 |L               |
; function: i2c_read at 0xa183 -- 0xa1b3
0xa183:    8b 4d b0                              	mov ecx, dword ptr [rbp - 0x50]
0xa186:    4c 8b 45 b8                           	mov r8, qword ptr [rbp - 0x48]
0xa18a:    44 89 e1                              	mov ecx, r12d
0xa18d:    ba 01 00 00 00                        	mov edx, 1
0xa192:    44 89 ee                              	mov esi, r13d
0xa195:    4c 89 f7                              	mov rdi, r14
0xa198:    e8 16 00 00 00                        	call 0xa1b3 <i2c_read>
0xa19d:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0xa1a1:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0xa1a5:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0xa1a9:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xa1ad:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xa1b1:    c9                                    	leave 
0xa1b2:    c3                                    	ret 
; function: i2c_read at 0xa1b3 -- 0xa45b
0xa1b3:    55                                    	push rbp
0xa1b4:    48 89 e5                              	mov rbp, rsp
0xa1b7:    41 57                                 	push r15
0xa1b9:    41 56                                 	push r14
0xa1bb:    41 55                                 	push r13
0xa1bd:    41 54                                 	push r12
0xa1bf:    53                                    	push rbx
0xa1c0:    48 83 ec 38                           	sub rsp, 0x38
0xa1c4:    e8 27 4a 03 00                        	call 0x3ebf0 <mcount>
0xa1c9:    48 89 fb                              	mov rbx, rdi
0xa1cc:    4d 89 c4                              	mov r12, r8
0xa1cf:    0f b6 7d 10                           	movzx edi, byte ptr [rbp + 0x10]
0xa1d3:    44 0f b6 45 18                        	movzx r8d, byte ptr [rbp + 0x18]
0xa1d8:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0xa1df:    48 03 83 28 62 00 00                  	add rax, qword ptr [rbx + 0x6228]
0xa1e6:    8b 00                                 	mov eax, dword ptr [rax]
0xa1e8:    f6 c4 1f                              	test ah, 0x1f
0xa1eb:    0f 85 83 02 00 00                     	jne 0xa474
0xa1f1:    41 f6 c1 03                           	test r9b, 3
0xa1f5:    74 15                                 	je 0xa20c <i2c_read+0x59>
0xa1f7:    bf 01 00 00 00                        	mov edi, 1
0xa1fc:    e8 3d b2 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0xa201:    41 bf 00 00 00 00                     	mov r15d, 0
0xa207:    e9 6e 02 00 00                        	jmp 0xa47a
0xa20c:    4d 85 e4                              	test r12, r12
0xa20f:    75 15                                 	jne 0xa226 <i2c_read+0x73>
0xa211:    bf 01 00 00 00                        	mov edi, 1
0xa216:    e8 23 b2 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0xa21b:    41 bf 00 00 00 00                     	mov r15d, 0
0xa221:    e9 54 02 00 00                        	jmp 0xa47a
0xa226:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0xa22d:    48 03 83 28 62 00 00                  	add rax, qword ptr [rbx + 0x6228]
0xa234:    8b 00                                 	mov eax, dword ptr [rax]
0xa236:    41 89 c3                              	mov r11d, eax
0xa239:    44 89 d8                              	mov eax, r11d
0xa23c:    83 e0 1f                              	and eax, 0x1f
0xa23f:    3c 10                                 	cmp al, 0x10
0xa241:    75 09                                 	jne 0xa24c <i2c_read+0x99>
0xa243:    41 f7 c3 00 1f 00 00                  	test r11d, 0x1f00
0xa24a:    74 15                                 	je 0xa261 <i2c_read+0xae>
0xa24c:    bf 01 00 00 00                        	mov edi, 1
0xa251:    e8 e8 b1 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0xa256:    41 bf 00 00 00 00                     	mov r15d, 0
0xa25c:    e9 19 02 00 00                        	jmp 0xa47a
0xa261:    4c 8b 93 f8 57 00 00                  	mov r10, qword ptr [rbx + 0x57f8]
0xa268:    4c 03 93 08 62 00 00                  	add r10, qword ptr [rbx + 0x6208]
0xa26f:    b8 00 00 00 00                        	mov eax, 0
0xa274:    41 89 02                              	mov dword ptr [r10], eax
0xa277:    80 fa 10                              	cmp dl, 0x10
0xa27a:    77 47                                 	ja 0xa2c3 <i2c_read+0x110>
0xa27c:    0f b6 d2                              	movzx edx, dl
0xa27f:    ff 24 d5 00 00 00 00                  	jmp qword ptr [rdx*8]
0xa286:    ba e0 ff ff ff                        	mov edx, 0xffffffe0
0xa28b:    eb 55                                 	jmp 0xa2e2 <i2c_read+0x12f>
0xa28d:    ba e4 ff ff ff                        	mov edx, 0xffffffe4
0xa292:    eb 4e                                 	jmp 0xa2e2 <i2c_read+0x12f>
0xa294:    0f b6 c9                              	movzx ecx, cl
0xa297:    40 0f b6 f6                           	movzx esi, sil
0xa29b:    45 0f b6 c0                           	movzx r8d, r8b
0xa29f:    44 89 44 24 08                        	mov dword ptr [rsp + 8], r8d
0xa2a4:    40 0f b6 ff                           	movzx edi, dil
0xa2a8:    89 3c 24                              	mov dword ptr [rsp], edi
0xa2ab:    4d 89 e0                              	mov r8, r12
0xa2ae:    ba 10 00 00 00                        	mov edx, 0x10
0xa2b3:    48 89 df                              	mov rdi, rbx
0xa2b6:    e8 49 fe ff ff                        	call 0xa104 <i2c_1_read_mode1>
0xa2bb:    49 89 c7                              	mov r15, rax
0xa2be:    e9 b7 01 00 00                        	jmp 0xa47a
0xa2c3:    bf 01 00 00 00                        	mov edi, 1
0xa2c8:    e8 71 b1 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0xa2cd:    41 bf 00 00 00 00                     	mov r15d, 0
0xa2d3:    e9 a2 01 00 00                        	jmp 0xa47a
0xa2d8:    b9 00 00 00 00                        	mov ecx, 0
0xa2dd:    ba a0 ff ff ff                        	mov edx, 0xffffffa0
0xa2e2:    0f b6 c9                              	movzx ecx, cl
0xa2e5:    40 0f b6 c6                           	movzx eax, sil
0xa2e9:    c1 e0 08                              	shl eax, 8
0xa2ec:    8d 04 01                              	lea eax, [rcx + rax]
0xa2ef:    48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0xa2f6:    48 03 8b 10 62 00 00                  	add rcx, qword ptr [rbx + 0x6210]
0xa2fd:    89 01                                 	mov dword ptr [rcx], eax
0xa2ff:    0f b6 d2                              	movzx edx, dl
0xa302:    89 f8                                 	mov eax, edi
0xa304:    c1 e0 08                              	shl eax, 8
0xa307:    8d 04 02                              	lea eax, [rdx + rax]
0xa30a:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0xa311:    48 03 93 08 62 00 00                  	add rdx, qword ptr [rbx + 0x6208]
0xa318:    66 89 02                              	mov word ptr [rdx], ax
0xa31b:    40 88 7d bf                           	mov byte ptr [rbp - 0x41], dil
0xa31f:    41 bd 00 00 00 00                     	mov r13d, 0
0xa325:    41 be 00 00 00 00                     	mov r14d, 0
0xa32b:    41 bf 00 00 00 00                     	mov r15d, 0
0xa331:    40 0f b6 ff                           	movzx edi, dil
0xa335:    89 7d cc                              	mov dword ptr [rbp - 0x34], edi
0xa338:    4c 89 7d c0                           	mov qword ptr [rbp - 0x40], r15
0xa33c:    44 0f b6 7d bf                        	movzx r15d, byte ptr [rbp - 0x41]
0xa341:    bf 01 00 00 00                        	mov edi, 1
0xa346:    e8 f3 b0 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0xa34b:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0xa352:    48 03 83 08 62 00 00                  	add rax, qword ptr [rbx + 0x6208]
0xa359:    8b 00                                 	mov eax, dword ptr [rax]
0xa35b:    25 00 00 ff 00                        	and eax, 0xff0000
0xa360:    48 c1 e8 10                           	shr rax, 0x10
0xa364:    84 c0                                 	test al, al
0xa366:    79 10                                 	jns 0xa378 <i2c_read+0x1c5>
0xa368:    a8 28                                 	test al, 0x28
0xa36a:    0f 85 eb 00 00 00                     	jne 0xa45b <i2c_read+0x2a6>
0xa370:    48 c7 45 c0 01 00 00 00               	mov qword ptr [rbp - 0x40], 1
0xa378:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0xa37f:    48 03 83 28 62 00 00                  	add rax, qword ptr [rbx + 0x6228]
0xa386:    44 8b 00                              	mov r8d, dword ptr [rax]
0xa389:    41 81 e0 00 1f 00 00                  	and r8d, 0x1f00
0xa390:    49 c1 e8 08                           	shr r8, 8
0xa394:    41 f6 c0 03                           	test r8b, 3
0xa398:    75 11                                 	jne 0xa3ab <i2c_read+0x1f8>
0xa39a:    41 0f b6 f0                           	movzx esi, r8b
0xa39e:    44 89 e8                              	mov eax, r13d
0xa3a1:    41 0f b6 ff                           	movzx edi, r15b
0xa3a5:    85 f6                                 	test esi, esi
0xa3a7:    75 0b                                 	jne 0xa3b4 <i2c_read+0x201>
0xa3a9:    eb 55                                 	jmp 0xa400 <i2c_read+0x24d>
0xa3ab:    41 83 c6 01                           	add r14d, 1
0xa3af:    e9 94 00 00 00                        	jmp 0xa448 <i2c_read+0x295>
0xa3b4:    48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0xa3bb:    48 03 93 38 62 00 00                  	add rdx, qword ptr [rbx + 0x6238]
0xa3c2:    8b 0a                                 	mov ecx, dword ptr [rdx]
0xa3c4:    89 c9                                 	mov ecx, ecx
0xa3c6:    89 c2                                 	mov edx, eax
0xa3c8:    41 88 0c 14                           	mov byte ptr [r12 + rdx], cl
0xa3cc:    49 89 c9                              	mov r9, rcx
0xa3cf:    49 c1 e9 08                           	shr r9, 8
0xa3d3:    45 88 4c 14 01                        	mov byte ptr [r12 + rdx + 1], r9b
0xa3d8:    49 89 c9                              	mov r9, rcx
0xa3db:    49 c1 e9 10                           	shr r9, 0x10
0xa3df:    45 88 4c 14 02                        	mov byte ptr [r12 + rdx + 2], r9b
0xa3e4:    48 c1 e9 18                           	shr rcx, 0x18
0xa3e8:    41 88 4c 14 03                        	mov byte ptr [r12 + rdx + 3], cl
0xa3ed:    83 c0 04                              	add eax, 4
0xa3f0:    39 f8                                 	cmp eax, edi
0xa3f2:    73 09                                 	jae 0xa3fd <i2c_read+0x24a>
0xa3f4:    89 c2                                 	mov edx, eax
0xa3f6:    44 29 ea                              	sub edx, r13d
0xa3f9:    39 f2                                 	cmp edx, esi
0xa3fb:    72 b7                                 	jb 0xa3b4 <i2c_read+0x201>
0xa3fd:    41 89 c5                              	mov r13d, eax
0xa400:    44 3b 6d cc                           	cmp r13d, dword ptr [rbp - 0x34]
0xa404:    73 10                                 	jae 0xa416 <i2c_read+0x263>
0xa406:    45 84 c0                              	test r8b, r8b
0xa409:    74 05                                 	je 0xa410 <i2c_read+0x25d>
0xa40b:    45 28 c7                              	sub r15b, r8b
0xa40e:    eb 38                                 	jmp 0xa448 <i2c_read+0x295>
0xa410:    41 83 c6 01                           	add r14d, 1
0xa414:    eb 32                                 	jmp 0xa448 <i2c_read+0x295>
0xa416:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0xa41d:    48 03 83 08 62 00 00                  	add rax, qword ptr [rbx + 0x6208]
0xa424:    8b 00                                 	mov eax, dword ptr [rax]
0xa426:    25 00 00 ff 00                        	and eax, 0xff0000
0xa42b:    48 c1 e8 10                           	shr rax, 0x10
0xa42f:    84 c0                                 	test al, al
0xa431:    79 11                                 	jns 0xa444 <i2c_read+0x291>
0xa433:    4c 8b 7d c0                           	mov r15, qword ptr [rbp - 0x40]
0xa437:    a8 28                                 	test al, 0x28
0xa439:    b8 01 00 00 00                        	mov eax, 1
0xa43e:    4c 0f 44 f8                           	cmove r15, rax
0xa442:    eb 1b                                 	jmp 0xa45f
0xa444:    41 83 c6 01                           	add r14d, 1
0xa448:    41 81 fe f3 01 00 00                  	cmp r14d, 0x1f3
0xa44f:    0f 86 ec fe ff ff                     	jbe 0xa341 <i2c_read+0x18e>
0xa455:    4c 8b 7d c0                           	mov r15, qword ptr [rbp - 0x40]
0xa459:    eb 04                                 	jmp 0xa45f
; data inside code section at 0xa45b -- 0xa45c
0xa45b:    4c                                                 |L               |
; function: i2c_access at 0xa45c -- 0xa48c
0xa45c:    8b 7d c0                              	mov edi, dword ptr [rbp - 0x40]
0xa45f:    48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0xa466:    48 03 83 28 62 00 00                  	add rax, qword ptr [rbx + 0x6228]
0xa46d:    8b 00                                 	mov eax, dword ptr [rax]
0xa46f:    f6 c4 1f                              	test ah, 0x1f
0xa472:    74 06                                 	je 0xa47a <i2c_access+0x1e>
0xa474:    41 bf 00 00 00 00                     	mov r15d, 0
0xa47a:    4c 89 f8                              	mov rax, r15
0xa47d:    48 83 c4 38                           	add rsp, 0x38
0xa481:    5b                                    	pop rbx
0xa482:    41 5c                                 	pop r12
0xa484:    41 5d                                 	pop r13
0xa486:    41 5e                                 	pop r14
0xa488:    41 5f                                 	pop r15
0xa48a:    c9                                    	leave 
0xa48b:    c3                                    	ret 
; function: i2c_access at 0xa48c -- 0xa581
0xa48c:    55                                    	push rbp
0xa48d:    48 89 e5                              	mov rbp, rsp
0xa490:    48 83 ec 30                           	sub rsp, 0x30
0xa494:    48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0xa498:    4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0xa49c:    4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0xa4a0:    4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0xa4a4:    e8 47 47 03 00                        	call 0x3ebf0 <mcount>
0xa4a9:    49 89 d2                              	mov r10, rdx
0xa4ac:    4c 8b 5d 10                           	mov r11, qword ptr [rbp + 0x10]
0xa4b0:    48 8b 5d 18                           	mov rbx, qword ptr [rbp + 0x18]
0xa4b4:    41 89 cc                              	mov r12d, ecx
0xa4b7:    44 0f b6 6d 20                        	movzx r13d, byte ptr [rbp + 0x20]
0xa4bc:    44 0f b6 75 28                        	movzx r14d, byte ptr [rbp + 0x28]
0xa4c1:    b8 00 00 00 00                        	mov eax, 0
0xa4c6:    80 ba d8 04 00 00 01                  	cmp byte ptr [rdx + 0x4d8], 1
0xa4cd:    0f 84 cd 00 00 00                     	je 0xa5a0
0xa4d3:    66 83 ff 01                           	cmp di, 1
0xa4d7:    75 63                                 	jne 0xa53c <i2c_access+0xb0>
0xa4d9:    40 80 fe 01                           	cmp sil, 1
0xa4dd:    75 30                                 	jne 0xa50f <i2c_access+0x83>
0xa4df:    41 0f b6 c9                           	movzx ecx, r9b
0xa4e3:    41 0f b6 d0                           	movzx edx, r8b
0xa4e7:    41 0f b6 f4                           	movzx esi, r12b
0xa4eb:    45 0f b6 f6                           	movzx r14d, r14b
0xa4ef:    44 89 74 24 08                        	mov dword ptr [rsp + 8], r14d
0xa4f4:    45 0f b6 ed                           	movzx r13d, r13b
0xa4f8:    44 89 2c 24                           	mov dword ptr [rsp], r13d
0xa4fc:    49 89 d9                              	mov r9, rbx
0xa4ff:    4d 89 d8                              	mov r8, r11
0xa502:    4c 89 d7                              	mov rdi, r10
0xa505:    e8 a9 fc ff ff                        	call 0xa1b3 <i2c_read>
0xa50a:    e9 91 00 00 00                        	jmp 0xa5a0
0xa50f:    41 0f b6 c9                           	movzx ecx, r9b
0xa513:    41 0f b6 d0                           	movzx edx, r8b
0xa517:    41 0f b6 f4                           	movzx esi, r12b
0xa51b:    45 0f b6 f6                           	movzx r14d, r14b
0xa51f:    44 89 74 24 08                        	mov dword ptr [rsp + 8], r14d
0xa524:    45 0f b6 ed                           	movzx r13d, r13b
0xa528:    44 89 2c 24                           	mov dword ptr [rsp], r13d
0xa52c:    49 89 d9                              	mov r9, rbx
0xa52f:    4d 89 d8                              	mov r8, r11
0xa532:    4c 89 d7                              	mov rdi, r10
0xa535:    e8 0c f8 ff ff                        	call 0x9d46 <i2c_write>
0xa53a:    eb 64                                 	jmp 0xa5a0
0xa53c:    66 83 ff 02                           	cmp di, 2
0xa540:    75 5e                                 	jne 0xa5a0
0xa542:    40 80 fe 01                           	cmp sil, 1
0xa546:    75 2d                                 	jne 0xa575 <i2c_access+0xe9>
0xa548:    41 0f b6 c9                           	movzx ecx, r9b
0xa54c:    41 0f b6 d0                           	movzx edx, r8b
0xa550:    41 0f b6 f4                           	movzx esi, r12b
0xa554:    45 0f b6 f6                           	movzx r14d, r14b
0xa558:    44 89 74 24 08                        	mov dword ptr [rsp + 8], r14d
0xa55d:    45 0f b6 ed                           	movzx r13d, r13b
0xa561:    44 89 2c 24                           	mov dword ptr [rsp], r13d
0xa565:    49 89 d9                              	mov r9, rbx
0xa568:    4d 89 d8                              	mov r8, r11
0xa56b:    4c 89 d7                              	mov rdi, r10
0xa56e:    e8 a1 f5 ff ff                        	call 0x9b14 <i2c_read_2>
0xa573:    eb 2b                                 	jmp 0xa5a0
0xa575:    41 0f b6 c9                           	movzx ecx, r9b
0xa579:    41 0f b6 d0                           	movzx edx, r8b
0xa57d:    41 0f b6 f4                           	movzx esi, r12b
; data inside code section at 0xa581 -- 0xa582
0xa581:    45                                                 |E               |
; function: cfg_access at 0xa582 -- 0xa5b2
0xa582:    0f b6 f6                              	movzx esi, dh
0xa585:    44 89 74 24 08                        	mov dword ptr [rsp + 8], r14d
0xa58a:    45 0f b6 ed                           	movzx r13d, r13b
0xa58e:    44 89 2c 24                           	mov dword ptr [rsp], r13d
0xa592:    49 89 d9                              	mov r9, rbx
0xa595:    4d 89 d8                              	mov r8, r11
0xa598:    4c 89 d7                              	mov rdi, r10
0xa59b:    e8 54 f1 ff ff                        	call 0x96f4 <i2c_write_2>
0xa5a0:    48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0xa5a4:    4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0xa5a8:    4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0xa5ac:    4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0xa5b0:    c9                                    	leave 
0xa5b1:    c3                                    	ret 
; function: cfg_access at 0xa5b2 -- 0xa650
0xa5b2:    55                                    	push rbp
0xa5b3:    48 89 e5                              	mov rbp, rsp
0xa5b6:    41 57                                 	push r15
0xa5b8:    41 56                                 	push r14
0xa5ba:    41 55                                 	push r13
0xa5bc:    41 54                                 	push r12
0xa5be:    53                                    	push rbx
0xa5bf:    48 83 ec 18                           	sub rsp, 0x18
0xa5c3:    e8 28 46 03 00                        	call 0x3ebf0 <mcount>
0xa5c8:    48 89 f3                              	mov rbx, rsi
0xa5cb:    48 89 4d c8                           	mov qword ptr [rbp - 0x38], rcx
0xa5cf:    4d 89 c7                              	mov r15, r8
0xa5d2:    41 89 fd                              	mov r13d, edi
0xa5d5:    41 89 d6                              	mov r14d, edx
0xa5d8:    4c 8d a6 18 59 00 00                  	lea r12, [rsi + 0x5918]
0xa5df:    4c 89 e7                              	mov rdi, r12
0xa5e2:    e8 f1 45 03 00                        	call 0x3ebd8 <down>
0xa5e7:    80 bb 10 59 00 00 00                  	cmp byte ptr [rbx + 0x5910], 0
0xa5ee:    75 17                                 	jne 0xa607 <cfg_access+0x55>
0xa5f0:    c6 83 10 59 00 00 01                  	mov byte ptr [rbx + 0x5910], 1
0xa5f7:    4c 89 e7                              	mov rdi, r12
0xa5fa:    e8 59 45 03 00                        	call 0x3eb58 <up>
0xa5ff:    41 80 fd 01                           	cmp r13b, 1
0xa603:    75 2e                                 	jne 0xa633 <cfg_access+0x81>
0xa605:    eb 14                                 	jmp 0xa61b <cfg_access+0x69>
0xa607:    4c 89 e7                              	mov rdi, r12
0xa60a:    e8 49 45 03 00                        	call 0x3eb58 <up>
0xa60f:    bf 01 00 00 00                        	mov edi, 1
0xa614:    e8 25 ae 00 00                        	call 0x1543e <DelayMilliseconds_i2c>
0xa619:    eb c4                                 	jmp 0xa5df <cfg_access+0x2d>
0xa61b:    41 0f b7 f6                           	movzx esi, r14w
0xa61f:    4c 89 f9                              	mov rcx, r15
0xa622:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0xa626:    48 89 df                              	mov rdi, rbx
0xa629:    e8 12 ef ff ff                        	call 0x9540 <cfg_read>
0xa62e:    49 89 c5                              	mov r13, rax
0xa631:    eb 16                                 	jmp 0xa649 <cfg_access+0x97>
0xa633:    41 0f b7 f6                           	movzx esi, r14w
0xa637:    4c 89 f9                              	mov rcx, r15
0xa63a:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0xa63e:    48 89 df                              	mov rdi, rbx
0xa641:    e8 74 ef ff ff                        	call 0x95ba <cfg_write>
0xa646:    49 89 c5                              	mov r13, rax
0xa649:    4c 8d a3 30 59 00 00                  	lea r12, [rbx + 0x5930]
; function: Convert_Function1_Driver at 0xa650 -- 0xa658
0xa650:    4c 89 e7                              	mov rdi, r12
0xa653:    e8 80 45 03 00                        	call 0x3ebd8 <down>
; data inside code section at 0xa658 -- 0xa65b
0xa658:    c6 83 10                                           |...             |
; function: Convert_Function2_Driver at 0xa65b -- 0xa662
0xa65b:    59                                    	pop rcx
0xa65c:    00 00                                 	add byte ptr [rax], al
0xa65e:    00 4c 89 e7                           	add byte ptr [rcx + rcx*4 - 0x19], cl
; data inside code section at 0xa662 -- 0xa666
0xa662:    e8 f1 44 03                                        |..D.            |
; function: Convert_Function3_Driver at 0xa666 -- 0xa671
0xa666:    00 4c 89 e8                           	add byte ptr [rcx + rcx*4 - 0x18], cl
0xa66a:    48 83 c4 18                           	add rsp, 0x18
0xa66e:    5b                                    	pop rbx
0xa66f:    41 5c                                 	pop r12
; function: Convert_Function4_Driver at 0xa671 -- 0xa679
0xa671:    41 5d                                 	pop r13
0xa673:    41 5e                                 	pop r14
0xa675:    41 5f                                 	pop r15
0xa677:    c9                                    	leave 
0xa678:    c3                                    	ret 
; data inside code section at 0xa679 -- 0xa67c
0xa679:    90 90 90                                           |...             |
; function: GenerateCertificateKey at 0xa67c -- 0xa680
0xa67c:    90                                    	nop 
0xa67d:    90                                    	nop 
0xa67e:    90                                    	nop 
0xa67f:    90                                    	nop 
; function: Convert_Function1_Driver at 0xa680 -- 0xa68b
0xa680:    55                                    	push rbp
0xa681:    48 89 e5                              	mov rbp, rsp
0xa684:    e8 67 45 03 00                        	call 0x3ebf0 <mcount>
0xa689:    c9                                    	leave 
0xa68a:    c3                                    	ret 
; function: Convert_Function2_Driver at 0xa68b -- 0xa68c
0xa68b:    55                                    	push rbp
; function: DTV_SetPidFilterBoundary at 0xa68c -- 0xa696
0xa68c:    48 89 e5                              	mov rbp, rsp
0xa68f:    e8 5c 45 03 00                        	call 0x3ebf0 <mcount>
0xa694:    c9                                    	leave 
0xa695:    c3                                    	ret 
; function: Convert_Function3_Driver at 0xa696 -- 0xa6a1
0xa696:    55                                    	push rbp
0xa697:    48 89 e5                              	mov rbp, rsp
0xa69a:    e8 51 45 03 00                        	call 0x3ebf0 <mcount>
0xa69f:    c9                                    	leave 
0xa6a0:    c3                                    	ret 
; function: Convert_Function4_Driver at 0xa6a1 -- 0xa6ac
0xa6a1:    55                                    	push rbp
0xa6a2:    48 89 e5                              	mov rbp, rsp
0xa6a5:    e8 46 45 03 00                        	call 0x3ebf0 <mcount>
0xa6aa:    c9                                    	leave 
0xa6ab:    c3                                    	ret 
; function: GenerateCertificateKey at 0xa6ac -- 0xa6bc
0xa6ac:    55                                    	push rbp
0xa6ad:    48 89 e5                              	mov rbp, rsp
0xa6b0:    e8 3b 45 03 00                        	call 0x3ebf0 <mcount>
0xa6b5:    b8 01 00 00 00                        	mov eax, 1
0xa6ba:    c9                                    	leave 
0xa6bb:    c3                                    	ret 
; function: DTV_SetPidFilterBoundary at 0xa6bc -- 0xa6c5
0xa6bc:    55                                    	push rbp
0xa6bd:    48 89 e5                              	mov rbp, rsp
0xa6c0:    e8 2b 45 03 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0xa6c5 -- 0xa6c8
0xa6c5:    b8 ff ff                                           |...             |
; function: StoreDeviceInformation at 0xa6c8 -- 0xa6c9
; data inside code section at 0xa6c9 -- 0xa6d8
0xa6c9:    ff 48 85 ff 74 27 0f b6  87 30 1d 00 00 48 8d      |.H..t'...0...H. |
; function: InitializeDeviceInformation at 0xa6d8 -- 0xa6e5
0xa6d8:    04 c0                                 	add al, 0xc0
0xa6da:    48 c1 e0 04                           	shl rax, 4
0xa6de:    48 03 87 38 1d 00 00                  	add rax, qword ptr [rdi + 0x1d38]
; data inside code section at 0xa6e5 -- 0xa6e8
0xa6e5:    48 05 e0                                           |H..             |
; function: StoreLNAStatus at 0xa6e8 -- 0xa6f8
0xa6e8:    5b                                    	pop rbx
0xa6e9:    00 00                                 	add byte ptr [rax], al
0xa6eb:    89 70 08                              	mov dword ptr [rax + 8], esi
0xa6ee:    89 50 04                              	mov dword ptr [rax + 4], edx
0xa6f1:    b8 01 00 00 00                        	mov eax, 1
0xa6f6:    c9                                    	leave 
0xa6f7:    c3                                    	ret 
; function: InitializeLNAStatus at 0xa6f8 -- 0xa708
0xa6f8:    55                                    	push rbp
0xa6f9:    48 89 e5                              	mov rbp, rsp
0xa6fc:    e8 ef 44 03 00                        	call 0x3ebf0 <mcount>
0xa701:    b8 01 00 00 00                        	mov eax, 1
0xa706:    c9                                    	leave 
0xa707:    c3                                    	ret 
; function: InitializeLNASetting at 0xa708 -- 0xa718
0xa708:    55                                    	push rbp
0xa709:    48 89 e5                              	mov rbp, rsp
0xa70c:    e8 df 44 03 00                        	call 0x3ebf0 <mcount>
0xa711:    b8 01 00 00 00                        	mov eax, 1
0xa716:    c9                                    	leave 
0xa717:    c3                                    	ret 
; function: DTV_GetUSB_MODE at 0xa718 -- 0xa728
0xa718:    55                                    	push rbp
0xa719:    48 89 e5                              	mov rbp, rsp
0xa71c:    e8 cf 44 03 00                        	call 0x3ebf0 <mcount>
0xa721:    b8 01 00 00 00                        	mov eax, 1
0xa726:    c9                                    	leave 
0xa727:    c3                                    	ret 
; function: InitializeLNAStatus at 0xa728 -- 0xa737
0xa728:    55                                    	push rbp
0xa729:    48 89 e5                              	mov rbp, rsp
0xa72c:    e8 bf 44 03 00                        	call 0x3ebf0 <mcount>
0xa731:    b8 01 00 00 00                        	mov eax, 1
0xa736:    c9                                    	leave 
; function: DTV_CheckSync at 0xa737 -- 0xa738
0xa737:    c3                                    	ret 
; function: InitializeLNASetting at 0xa738 -- 0xa748
0xa738:    55                                    	push rbp
0xa739:    48 89 e5                              	mov rbp, rsp
0xa73c:    e8 af 44 03 00                        	call 0x3ebf0 <mcount>
0xa741:    b8 01 00 00 00                        	mov eax, 1
0xa746:    c9                                    	leave 
0xa747:    c3                                    	ret 
; function: DTV_GetUSB_MODE at 0xa748 -- 0xa767
0xa748:    55                                    	push rbp
0xa749:    48 89 e5                              	mov rbp, rsp
0xa74c:    e8 9f 44 03 00                        	call 0x3ebf0 <mcount>
0xa751:    b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0xa756:    83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0xa75d:    74 06                                 	je 0xa765 <DTV_GetUSB_MODE+0x1d>
0xa75f:    8b 87 44 1d 00 00                     	mov eax, dword ptr [rdi + 0x1d44]
0xa765:    c9                                    	leave 
0xa766:    c3                                    	ret 
; function: DTV_CheckSync at 0xa767 -- 0xa779
0xa767:    55                                    	push rbp
0xa768:    48 89 e5                              	mov rbp, rsp
0xa76b:    e8 80 44 03 00                        	call 0x3ebf0 <mcount>
0xa770:    85 f6                                 	test esi, esi
0xa772:    7e 30                                 	jle 0xa7a4
0xa774:    ba bc 00 00 00                        	mov edx, 0xbc
; data inside code section at 0xa779 -- 0xa77b
0xa779:    b8 00                                              |..              |
; function: DTV_CleanEncFlag at 0xa77b -- 0xa7ab
0xa77b:    00 00                                 	add byte ptr [rax], al
0xa77d:    00 80 3f 47 74 11                     	add byte ptr [rax + 0x1174473f], al
0xa783:    eb 18                                 	jmp 0xa79d <DTV_CleanEncFlag+0x22>
0xa785:    48 63 ca                              	movsxd rcx, edx
0xa788:    81 c2 bc 00 00 00                     	add edx, 0xbc
0xa78e:    80 3c 0f 47                           	cmp byte ptr [rdi + rcx], 0x47
0xa792:    75 09                                 	jne 0xa79d <DTV_CleanEncFlag+0x22>
0xa794:    83 c0 01                              	add eax, 1
0xa797:    39 c6                                 	cmp esi, eax
0xa799:    7f ea                                 	jg 0xa785 <DTV_CleanEncFlag+0xa>
0xa79b:    eb 07                                 	jmp 0xa7a4 <DTV_CleanEncFlag+0x29>
0xa79d:    b8 00 00 00 00                        	mov eax, 0
0xa7a2:    eb 05                                 	jmp 0xa7a9 <DTV_CleanEncFlag+0x2e>
0xa7a4:    b8 01 00 00 00                        	mov eax, 1
0xa7a9:    c9                                    	leave 
0xa7aa:    c3                                    	ret 
; function: DTV_CleanEncFlag at 0xa7ab -- 0xa7ac
0xa7ab:    55                                    	push rbp
; data inside code section at 0xa7ac -- 0xa7ad
0xa7ac:    48                                                 |H               |
; function: ChangeEndian at 0xa7ad -- 0xa7dd
0xa7ad:    89 e5                                 	mov ebp, esp
0xa7af:    e8 3c 44 03 00                        	call 0x3ebf0 <mcount>
0xa7b4:    85 f6                                 	test esi, esi
0xa7b6:    7e 1e                                 	jle 0xa7d6 <ChangeEndian+0x29>
0xa7b8:    ba 00 00 00 00                        	mov edx, 0
0xa7bd:    b8 00 00 00 00                        	mov eax, 0
0xa7c2:    48 63 ca                              	movsxd rcx, edx
0xa7c5:    80 24 0f 7f                           	and byte ptr [rdi + rcx], 0x7f
0xa7c9:    83 c0 01                              	add eax, 1
0xa7cc:    81 c2 bc 00 00 00                     	add edx, 0xbc
0xa7d2:    39 f0                                 	cmp eax, esi
0xa7d4:    75 ec                                 	jne 0xa7c2 <ChangeEndian+0x15>
0xa7d6:    b8 01 00 00 00                        	mov eax, 1
0xa7db:    c9                                    	leave 
0xa7dc:    c3                                    	ret 
; function: ChangeEndian at 0xa7dd -- 0xa7ff
0xa7dd:    55                                    	push rbp
0xa7de:    48 89 e5                              	mov rbp, rsp
0xa7e1:    e8 0a 44 03 00                        	call 0x3ebf0 <mcount>
0xa7e6:    40 0f b6 d7                           	movzx edx, dil
0xa7ea:    89 d0                                 	mov eax, edx
0xa7ec:    c1 e0 07                              	shl eax, 7
0xa7ef:    40 c0 ef 07                           	shr dil, 7
0xa7f3:    09 f8                                 	or eax, edi
0xa7f5:    89 d1                                 	mov ecx, edx
0xa7f7:    83 e1 40                              	and ecx, 0x40
0xa7fa:    c1 f9 05                              	sar ecx, 5
0xa7fd:    09 c8                                 	or eax, ecx
; function: StoreDeviceLNBPower at 0xa7ff -- 0xa80e
0xa7ff:    89 d1                                 	mov ecx, edx
0xa801:    83 e1 20                              	and ecx, 0x20
0xa804:    c1 f9 03                              	sar ecx, 3
0xa807:    09 c8                                 	or eax, ecx
0xa809:    89 d1                                 	mov ecx, edx
0xa80b:    83 e1 10                              	and ecx, 0x10
; data inside code section at 0xa80e -- 0xa80f
0xa80e:    d1                                                 |.               |
; function: InitializeDeviceLNBPowerRegistry at 0xa80f -- 0xa81d
0xa80f:    f9                                    	stc 
0xa810:    09 c8                                 	or eax, ecx
0xa812:    89 d1                                 	mov ecx, edx
0xa814:    83 e1 08                              	and ecx, 8
0xa817:    01 c9                                 	add ecx, ecx
0xa819:    09 c8                                 	or eax, ecx
0xa81b:    89 d1                                 	mov ecx, edx
; data inside code section at 0xa81d -- 0xa81f
0xa81d:    83 e1                                              |..              |
; function: DTV_PollingWDThread at 0xa81f -- 0xa828
0xa81f:    04 c1                                 	add al, 0xc1
0xa821:    e1 03                                 	loope 0xa826 <DTV_PollingWDThread+0x7>
0xa823:    09 c8                                 	or eax, ecx
; data inside code section at 0xa825 -- 0xa826
0xa825:    83                                                 |.               |
0xa826:    e2 02                                 	loop 0xa82a <DTV_5606B2_KeyTransfer1>
; data inside code section at 0xa828 -- 0xa82a
0xa828:    c1 e2                                              |..              |
; function: DTV_5606B2_KeyTransfer1 at 0xa82a -- 0xa82f
0xa82a:    05 09 d0 c9 c3                        	add eax, 0xc3c9d009
; function: StoreDeviceLNBPower at 0xa82f -- 0xa83f
0xa82f:    55                                    	push rbp
0xa830:    48 89 e5                              	mov rbp, rsp
0xa833:    e8 b8 43 03 00                        	call 0x3ebf0 <mcount>
0xa838:    b8 00 00 00 00                        	mov eax, 0
0xa83d:    c9                                    	leave 
0xa83e:    c3                                    	ret 
; function: InitializeDeviceLNBPowerRegistry at 0xa83f -- 0xa84f
0xa83f:    55                                    	push rbp
0xa840:    48 89 e5                              	mov rbp, rsp
0xa843:    e8 a8 43 03 00                        	call 0x3ebf0 <mcount>
0xa848:    b8 01 00 00 00                        	mov eax, 1
0xa84d:    c9                                    	leave 
0xa84e:    c3                                    	ret 
; function: DTV_PollingWDThread at 0xa84f -- 0xa85a
0xa84f:    55                                    	push rbp
0xa850:    48 89 e5                              	mov rbp, rsp
0xa853:    e8 98 43 03 00                        	call 0x3ebf0 <mcount>
0xa858:    c9                                    	leave 
0xa859:    c3                                    	ret 
; function: DTV_5606B2_KeyTransfer1 at 0xa85a -- 0xab7d
0xa85a:    55                                    	push rbp
0xa85b:    48 89 e5                              	mov rbp, rsp
0xa85e:    53                                    	push rbx
0xa85f:    48 81 ec d8 00 00 00                  	sub rsp, 0xd8
0xa866:    e8 85 43 03 00                        	call 0x3ebf0 <mcount>
0xa86b:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xa874:    48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0xa878:    31 c0                                 	xor eax, eax
0xa87a:    49 89 f9                              	mov r9, rdi
0xa87d:    49 89 f8                              	mov r8, rdi
0xa880:    ba 00 00 00 00                        	mov edx, 0
0xa885:    41 ba 00 00 00 00                     	mov r10d, 0
0xa88b:    44 89 d1                              	mov ecx, r10d
0xa88e:    41 0f b6 b0 a4 0d 03 00               	movzx esi, byte ptr [r8 + 0x30da4]
0xa896:    8d 04 0a                              	lea eax, [rdx + rcx]
0xa899:    83 c1 01                              	add ecx, 1
0xa89c:    48 98                                 	cdqe 
0xa89e:    89 f3                                 	mov ebx, esi
0xa8a0:    d3 fb                                 	sar ebx, cl
0xa8a2:    83 e3 01                              	and ebx, 1
0xa8a5:    88 9c 05 20 ff ff ff                  	mov byte ptr [rbp + rax - 0xe0], bl
0xa8ac:    83 f9 07                              	cmp ecx, 7
0xa8af:    75 e5                                 	jne 0xa896 <DTV_5606B2_KeyTransfer1+0x3c>
0xa8b1:    49 83 c0 01                           	add r8, 1
0xa8b5:    83 c2 07                              	add edx, 7
0xa8b8:    83 fa 70                              	cmp edx, 0x70
0xa8bb:    75 ce                                 	jne 0xa88b <DTV_5606B2_KeyTransfer1+0x31>
0xa8bd:    4c 8d 45 d7                           	lea r8, [rbp - 0x29]
0xa8c1:    be 00 00 00 00                        	mov esi, 0
0xa8c6:    41 bb 00 00 00 00                     	mov r11d, 0
0xa8cc:    41 ba 00 00 00 00                     	mov r10d, 0
0xa8d2:    eb 29                                 	jmp 0xa8fd <DTV_5606B2_KeyTransfer1+0xa3>
0xa8d4:    8d 14 31                              	lea edx, [rcx + rsi]
0xa8d7:    48 63 d2                              	movsxd rdx, edx
0xa8da:    0f b6 94 15 20 ff ff ff               	movzx edx, byte ptr [rbp + rdx - 0xe0]
0xa8e2:    d3 e2                                 	shl edx, cl
0xa8e4:    09 d0                                 	or eax, edx
0xa8e6:    83 c1 01                              	add ecx, 1
0xa8e9:    83 f9 08                              	cmp ecx, 8
0xa8ec:    75 e6                                 	jne 0xa8d4 <DTV_5606B2_KeyTransfer1+0x7a>
0xa8ee:    41 88 00                              	mov byte ptr [r8], al
0xa8f1:    49 83 c0 01                           	add r8, 1
0xa8f5:    83 c6 08                              	add esi, 8
0xa8f8:    83 fe 38                              	cmp esi, 0x38
0xa8fb:    74 08                                 	je 0xa905 <DTV_5606B2_KeyTransfer1+0xab>
0xa8fd:    44 89 d8                              	mov eax, r11d
0xa900:    44 89 d1                              	mov ecx, r10d
0xa903:    eb cf                                 	jmp 0xa8d4 <DTV_5606B2_KeyTransfer1+0x7a>
0xa905:    4c 8d 45 d0                           	lea r8, [rbp - 0x30]
0xa909:    4d 89 c2                              	mov r10, r8
0xa90c:    be 38 00 00 00                        	mov esi, 0x38
0xa911:    bb 00 00 00 00                        	mov ebx, 0
0xa916:    41 bb 00 00 00 00                     	mov r11d, 0
0xa91c:    eb 29                                 	jmp 0xa947 <DTV_5606B2_KeyTransfer1+0xed>
0xa91e:    8d 14 0e                              	lea edx, [rsi + rcx]
0xa921:    48 63 d2                              	movsxd rdx, edx
0xa924:    0f b6 94 15 20 ff ff ff               	movzx edx, byte ptr [rbp + rdx - 0xe0]
0xa92c:    d3 e2                                 	shl edx, cl
0xa92e:    09 d0                                 	or eax, edx
0xa930:    83 c1 01                              	add ecx, 1
0xa933:    83 f9 08                              	cmp ecx, 8
0xa936:    75 e6                                 	jne 0xa91e <DTV_5606B2_KeyTransfer1+0xc4>
0xa938:    41 88 02                              	mov byte ptr [r10], al
0xa93b:    49 83 c2 01                           	add r10, 1
0xa93f:    83 c6 08                              	add esi, 8
0xa942:    83 fe 70                              	cmp esi, 0x70
0xa945:    74 07                                 	je 0xa94e <DTV_5606B2_KeyTransfer1+0xf4>
0xa947:    89 d8                                 	mov eax, ebx
0xa949:    44 89 d9                              	mov ecx, r11d
0xa94c:    eb d0                                 	jmp 0xa91e <DTV_5606B2_KeyTransfer1+0xc4>
0xa94e:    0f b6 87 ab 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30dab]
0xa955:    c1 e0 07                              	shl eax, 7
0xa958:    0f b6 97 a4 0d 03 00                  	movzx edx, byte ptr [rdi + 0x30da4]
0xa95f:    83 e2 01                              	and edx, 1
0xa962:    09 c2                                 	or edx, eax
0xa964:    0f b6 87 a5 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30da5]
0xa96b:    01 c0                                 	add eax, eax
0xa96d:    83 e0 02                              	and eax, 2
0xa970:    09 c2                                 	or edx, eax
0xa972:    0f b6 87 a6 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30da6]
0xa979:    c1 e0 02                              	shl eax, 2
0xa97c:    83 e0 04                              	and eax, 4
0xa97f:    09 c2                                 	or edx, eax
0xa981:    0f b6 87 a7 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30da7]
0xa988:    c1 e0 03                              	shl eax, 3
0xa98b:    83 e0 08                              	and eax, 8
0xa98e:    09 c2                                 	or edx, eax
0xa990:    0f b6 87 a8 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30da8]
0xa997:    c1 e0 04                              	shl eax, 4
0xa99a:    83 e0 10                              	and eax, 0x10
0xa99d:    09 c2                                 	or edx, eax
0xa99f:    0f b6 87 a9 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30da9]
0xa9a6:    c1 e0 05                              	shl eax, 5
0xa9a9:    83 e0 20                              	and eax, 0x20
0xa9ac:    09 c2                                 	or edx, eax
0xa9ae:    0f b6 87 aa 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30daa]
0xa9b5:    c1 e0 06                              	shl eax, 6
0xa9b8:    83 e0 40                              	and eax, 0x40
0xa9bb:    09 c2                                 	or edx, eax
0xa9bd:    0f b6 87 b3 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30db3]
0xa9c4:    c1 e0 07                              	shl eax, 7
0xa9c7:    0f b6 8f ac 0d 03 00                  	movzx ecx, byte ptr [rdi + 0x30dac]
0xa9ce:    83 e1 01                              	and ecx, 1
0xa9d1:    09 c1                                 	or ecx, eax
0xa9d3:    0f b6 87 ad 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30dad]
0xa9da:    01 c0                                 	add eax, eax
0xa9dc:    83 e0 02                              	and eax, 2
0xa9df:    09 c1                                 	or ecx, eax
0xa9e1:    0f b6 87 ae 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30dae]
0xa9e8:    c1 e0 02                              	shl eax, 2
0xa9eb:    83 e0 04                              	and eax, 4
0xa9ee:    09 c1                                 	or ecx, eax
0xa9f0:    0f b6 87 af 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30daf]
0xa9f7:    c1 e0 03                              	shl eax, 3
0xa9fa:    83 e0 08                              	and eax, 8
0xa9fd:    09 c1                                 	or ecx, eax
0xa9ff:    0f b6 87 b0 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30db0]
0xaa06:    c1 e0 04                              	shl eax, 4
0xaa09:    83 e0 10                              	and eax, 0x10
0xaa0c:    09 c1                                 	or ecx, eax
0xaa0e:    0f b6 87 b1 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30db1]
0xaa15:    c1 e0 05                              	shl eax, 5
0xaa18:    83 e0 20                              	and eax, 0x20
0xaa1b:    09 c1                                 	or ecx, eax
0xaa1d:    0f b6 87 b2 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30db2]
0xaa24:    c1 e0 06                              	shl eax, 6
0xaa27:    83 e0 40                              	and eax, 0x40
0xaa2a:    09 c8                                 	or eax, ecx
0xaa2c:    c6 45 a0 60                           	mov byte ptr [rbp - 0x60], 0x60
0xaa30:    c6 45 a1 57                           	mov byte ptr [rbp - 0x5f], 0x57
0xaa34:    c6 45 a2 79                           	mov byte ptr [rbp - 0x5e], 0x79
0xaa38:    c6 45 a3 88                           	mov byte ptr [rbp - 0x5d], 0x88
0xaa3c:    c6 45 a5 00                           	mov byte ptr [rbp - 0x5b], 0
0xaa40:    c6 45 a6 02                           	mov byte ptr [rbp - 0x5a], 2
0xaa44:    c6 45 a7 6f                           	mov byte ptr [rbp - 0x59], 0x6f
0xaa48:    c6 45 a8 67                           	mov byte ptr [rbp - 0x58], 0x67
0xaa4c:    c6 45 a9 40                           	mov byte ptr [rbp - 0x57], 0x40
0xaa50:    c6 45 ab 00                           	mov byte ptr [rbp - 0x55], 0
0xaa54:    c6 45 ac fa                           	mov byte ptr [rbp - 0x54], 0xfa
0xaa58:    c6 45 ad cd                           	mov byte ptr [rbp - 0x53], 0xcd
0xaa5c:    88 55 a4                              	mov byte ptr [rbp - 0x5c], dl
0xaa5f:    88 45 aa                              	mov byte ptr [rbp - 0x56], al
0xaa62:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0xaa66:    48 8d 45 c0                           	lea rax, [rbp - 0x40]
0xaa6a:    48 8d 5d de                           	lea rbx, [rbp - 0x22]
0xaa6e:    0f b6 0a                              	movzx ecx, byte ptr [rdx]
0xaa71:    41 32 08                              	xor cl, byte ptr [r8]
0xaa74:    88 08                                 	mov byte ptr [rax], cl
0xaa76:    49 83 c0 01                           	add r8, 1
0xaa7a:    48 83 c2 01                           	add rdx, 1
0xaa7e:    48 83 c0 01                           	add rax, 1
0xaa82:    49 39 d8                              	cmp r8, rbx
0xaa85:    75 e7                                 	jne 0xaa6e <DTV_5606B2_KeyTransfer1+0x214>
0xaa87:    0f b6 45 c7                           	movzx eax, byte ptr [rbp - 0x39]
0xaa8b:    0f b6 55 c6                           	movzx edx, byte ptr [rbp - 0x3a]
0xaa8f:    89 c3                                 	mov ebx, eax
0xaa91:    c1 e3 05                              	shl ebx, 5
0xaa94:    89 d1                                 	mov ecx, edx
0xaa96:    c0 e9 03                              	shr cl, 3
0xaa99:    09 d9                                 	or ecx, ebx
0xaa9b:    88 4d b0                              	mov byte ptr [rbp - 0x50], cl
0xaa9e:    0f b6 4d c8                           	movzx ecx, byte ptr [rbp - 0x38]
0xaaa2:    89 cb                                 	mov ebx, ecx
0xaaa4:    c1 e3 05                              	shl ebx, 5
0xaaa7:    c0 e8 03                              	shr al, 3
0xaaaa:    09 d8                                 	or eax, ebx
0xaaac:    88 45 b1                              	mov byte ptr [rbp - 0x4f], al
0xaaaf:    0f b6 45 c9                           	movzx eax, byte ptr [rbp - 0x37]
0xaab3:    89 c3                                 	mov ebx, eax
0xaab5:    c1 e3 05                              	shl ebx, 5
0xaab8:    c0 e9 03                              	shr cl, 3
0xaabb:    09 d9                                 	or ecx, ebx
0xaabd:    88 4d b2                              	mov byte ptr [rbp - 0x4e], cl
0xaac0:    0f b6 4d ca                           	movzx ecx, byte ptr [rbp - 0x36]
0xaac4:    89 cb                                 	mov ebx, ecx
0xaac6:    c1 e3 05                              	shl ebx, 5
0xaac9:    c0 e8 03                              	shr al, 3
0xaacc:    09 d8                                 	or eax, ebx
0xaace:    88 45 b3                              	mov byte ptr [rbp - 0x4d], al
0xaad1:    0f b6 45 cb                           	movzx eax, byte ptr [rbp - 0x35]
0xaad5:    89 c3                                 	mov ebx, eax
0xaad7:    c1 e3 05                              	shl ebx, 5
0xaada:    c0 e9 03                              	shr cl, 3
0xaadd:    09 d9                                 	or ecx, ebx
0xaadf:    88 4d b4                              	mov byte ptr [rbp - 0x4c], cl
0xaae2:    0f b6 4d cc                           	movzx ecx, byte ptr [rbp - 0x34]
0xaae6:    89 cb                                 	mov ebx, ecx
0xaae8:    c1 e3 05                              	shl ebx, 5
0xaaeb:    c0 e8 03                              	shr al, 3
0xaaee:    09 d8                                 	or eax, ebx
0xaaf0:    88 45 b5                              	mov byte ptr [rbp - 0x4b], al
0xaaf3:    0f b6 45 cd                           	movzx eax, byte ptr [rbp - 0x33]
0xaaf7:    89 c3                                 	mov ebx, eax
0xaaf9:    c1 e3 05                              	shl ebx, 5
0xaafc:    c0 e9 03                              	shr cl, 3
0xaaff:    09 d9                                 	or ecx, ebx
0xab01:    88 4d b6                              	mov byte ptr [rbp - 0x4a], cl
0xab04:    0f b6 4d c0                           	movzx ecx, byte ptr [rbp - 0x40]
0xab08:    89 cb                                 	mov ebx, ecx
0xab0a:    c1 e3 05                              	shl ebx, 5
0xab0d:    c0 e8 03                              	shr al, 3
0xab10:    09 d8                                 	or eax, ebx
0xab12:    88 45 b7                              	mov byte ptr [rbp - 0x49], al
0xab15:    0f b6 45 c1                           	movzx eax, byte ptr [rbp - 0x3f]
0xab19:    89 c3                                 	mov ebx, eax
0xab1b:    c1 e3 05                              	shl ebx, 5
0xab1e:    c0 e9 03                              	shr cl, 3
0xab21:    09 d9                                 	or ecx, ebx
0xab23:    88 4d b8                              	mov byte ptr [rbp - 0x48], cl
0xab26:    0f b6 4d c2                           	movzx ecx, byte ptr [rbp - 0x3e]
0xab2a:    89 cb                                 	mov ebx, ecx
0xab2c:    c1 e3 05                              	shl ebx, 5
0xab2f:    c0 e8 03                              	shr al, 3
0xab32:    09 d8                                 	or eax, ebx
0xab34:    88 45 b9                              	mov byte ptr [rbp - 0x47], al
0xab37:    0f b6 45 c3                           	movzx eax, byte ptr [rbp - 0x3d]
0xab3b:    89 c3                                 	mov ebx, eax
0xab3d:    c1 e3 05                              	shl ebx, 5
0xab40:    c0 e9 03                              	shr cl, 3
0xab43:    09 d9                                 	or ecx, ebx
0xab45:    88 4d ba                              	mov byte ptr [rbp - 0x46], cl
0xab48:    0f b6 4d c4                           	movzx ecx, byte ptr [rbp - 0x3c]
0xab4c:    89 cb                                 	mov ebx, ecx
0xab4e:    c1 e3 05                              	shl ebx, 5
0xab51:    c0 e8 03                              	shr al, 3
0xab54:    09 d8                                 	or eax, ebx
0xab56:    88 45 bb                              	mov byte ptr [rbp - 0x45], al
0xab59:    0f b6 45 c5                           	movzx eax, byte ptr [rbp - 0x3b]
0xab5d:    89 c3                                 	mov ebx, eax
0xab5f:    c1 e3 05                              	shl ebx, 5
0xab62:    c0 e9 03                              	shr cl, 3
0xab65:    09 d9                                 	or ecx, ebx
0xab67:    88 4d bc                              	mov byte ptr [rbp - 0x44], cl
0xab6a:    c1 e2 05                              	shl edx, 5
0xab6d:    c0 e8 03                              	shr al, 3
0xab70:    09 d0                                 	or eax, edx
0xab72:    88 45 bd                              	mov byte ptr [rbp - 0x43], al
0xab75:    48 8d 45 b0                           	lea rax, [rbp - 0x50]
0xab79:    48 8d 48 0e                           	lea rcx, [rax + 0xe]
; data inside code section at 0xab7d -- 0xab87
0xab7d:    0f b6 10 41 88 91 b4 0d  03 00                     |...A......      |
; function: DTV_Software_process_5606B2 at 0xab87 -- 0xabb7
0xab87:    48 83 c0 01                           	add rax, 1
0xab8b:    49 83 c1 01                           	add r9, 1
0xab8f:    48 39 c8                              	cmp rax, rcx
0xab92:    75 e9                                 	jne 0xab7d
0xab94:    b8 01 00 00 00                        	mov eax, 1
0xab99:    48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0xab9d:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xaba6:    74 05                                 	je 0xabad <DTV_Software_process_5606B2+0x26>
0xaba8:    e8 fb 3f 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xabad:    48 81 c4 d8 00 00 00                  	add rsp, 0xd8
0xabb4:    5b                                    	pop rbx
0xabb5:    c9                                    	leave 
0xabb6:    c3                                    	ret 
; function: DTV_Software_process_5606B2 at 0xabb7 -- 0xabeb
0xabb7:    55                                    	push rbp
0xabb8:    48 89 e5                              	mov rbp, rsp
0xabbb:    e8 30 40 03 00                        	call 0x3ebf0 <mcount>
0xabc0:    0f b6 06                              	movzx eax, byte ptr [rsi]
0xabc3:    88 02                                 	mov byte ptr [rdx], al
0xabc5:    0f b6 46 01                           	movzx eax, byte ptr [rsi + 1]
0xabc9:    88 42 01                              	mov byte ptr [rdx + 1], al
0xabcc:    0f b6 46 02                           	movzx eax, byte ptr [rsi + 2]
0xabd0:    88 42 02                              	mov byte ptr [rdx + 2], al
0xabd3:    0f b6 46 03                           	movzx eax, byte ptr [rsi + 3]
0xabd7:    88 42 03                              	mov byte ptr [rdx + 3], al
0xabda:    48 83 c6 04                           	add rsi, 4
0xabde:    49 89 fb                              	mov r11, rdi
0xabe1:    4c 8d 97 b8 00 00 00                  	lea r10, [rdi + 0xb8]
0xabe8:    48 89 f8                              	mov rax, rdi
; data inside code section at 0xabeb -- 0xac03
0xabeb:    44 0f b6 88 ad fc 08 00  44 32 0e 41 89 c0 45 29   |D.......D2.A..E)|
0xabfb:    d8 44 89 c1 c1 f9 1f c1                            |.D......        |
; function: function_ac03 at 0xac03 -- 0xac08
0xac03:    e9 1c 41 01 c8                        	jmp 0xffffffffc801ed24 <function_ffffffffc801ed24>
; data inside code section at 0xac08 -- 0xac0b
0xac08:    41 83 e0                                           |A..             |
; function: Gen_Identify_Key_01 at 0xac0b -- 0xac3b
0xac0b:    0f 41 29                              	cmovno ebp, dword ptr [rcx]
0xac0e:    c8 49 63 c8                           	enter 0x6349, -0x38
0xac12:    44 0f b6 84 0f d4 0d 03 00            	movzx r8d, byte ptr [rdi + rcx + 0x30dd4]
0xac1b:    41 83 c0 59                           	add r8d, 0x59
0xac1f:    44 89 c9                              	mov ecx, r9d
0xac22:    44 31 c1                              	xor ecx, r8d
0xac25:    88 4a 04                              	mov byte ptr [rdx + 4], cl
0xac28:    48 83 c6 01                           	add rsi, 1
0xac2c:    48 83 c0 01                           	add rax, 1
0xac30:    48 83 c2 01                           	add rdx, 1
0xac34:    4c 39 d0                              	cmp rax, r10
0xac37:    75 b2                                 	jne 0xabeb
0xac39:    c9                                    	leave 
0xac3a:    c3                                    	ret 
; function: Gen_Identify_Key_01 at 0xac3b -- 0xad2a
0xac3b:    55                                    	push rbp
0xac3c:    48 89 e5                              	mov rbp, rsp
0xac3f:    e8 ac 3f 03 00                        	call 0x3ebf0 <mcount>
0xac44:    0f b6 42 03                           	movzx eax, byte ptr [rdx + 3]
0xac48:    32 46 03                              	xor al, byte ptr [rsi + 3]
0xac4b:    0f b6 c0                              	movzx eax, al
0xac4e:    44 0f b6 12                           	movzx r10d, byte ptr [rdx]
0xac52:    44 32 16                              	xor r10b, byte ptr [rsi]
0xac55:    41 c1 e2 18                           	shl r10d, 0x18
0xac59:    41 31 c2                              	xor r10d, eax
0xac5c:    0f b6 4a 01                           	movzx ecx, byte ptr [rdx + 1]
0xac60:    32 4e 01                              	xor cl, byte ptr [rsi + 1]
0xac63:    0f b6 c9                              	movzx ecx, cl
0xac66:    c1 e1 10                              	shl ecx, 0x10
0xac69:    41 31 ca                              	xor r10d, ecx
0xac6c:    0f b6 4a 02                           	movzx ecx, byte ptr [rdx + 2]
0xac70:    32 4e 02                              	xor cl, byte ptr [rsi + 2]
0xac73:    0f b6 c9                              	movzx ecx, cl
0xac76:    c1 e1 08                              	shl ecx, 8
0xac79:    41 31 ca                              	xor r10d, ecx
0xac7c:    c1 e0 18                              	shl eax, 0x18
0xac7f:    44 0f b6 4a 04                        	movzx r9d, byte ptr [rdx + 4]
0xac84:    44 32 4e 04                           	xor r9b, byte ptr [rsi + 4]
0xac88:    45 0f b6 c9                           	movzx r9d, r9b
0xac8c:    41 c1 e1 10                           	shl r9d, 0x10
0xac90:    41 31 c1                              	xor r9d, eax
0xac93:    0f b6 4a 06                           	movzx ecx, byte ptr [rdx + 6]
0xac97:    32 4e 06                              	xor cl, byte ptr [rsi + 6]
0xac9a:    0f b6 c9                              	movzx ecx, cl
0xac9d:    41 31 c9                              	xor r9d, ecx
0xaca0:    0f b6 4a 05                           	movzx ecx, byte ptr [rdx + 5]
0xaca4:    32 4e 05                              	xor cl, byte ptr [rsi + 5]
0xaca7:    0f b6 c9                              	movzx ecx, cl
0xacaa:    c1 e1 08                              	shl ecx, 8
0xacad:    41 31 c9                              	xor r9d, ecx
0xacb0:    44 0f b6 42 07                        	movzx r8d, byte ptr [rdx + 7]
0xacb5:    44 32 46 07                           	xor r8b, byte ptr [rsi + 7]
0xacb9:    41 c1 e0 18                           	shl r8d, 0x18
0xacbd:    0f b6 42 08                           	movzx eax, byte ptr [rdx + 8]
0xacc1:    32 46 08                              	xor al, byte ptr [rsi + 8]
0xacc4:    0f b6 c0                              	movzx eax, al
0xacc7:    c1 e0 10                              	shl eax, 0x10
0xacca:    41 31 c0                              	xor r8d, eax
0xaccd:    0f b6 42 0a                           	movzx eax, byte ptr [rdx + 0xa]
0xacd1:    32 46 0a                              	xor al, byte ptr [rsi + 0xa]
0xacd4:    0f b6 c0                              	movzx eax, al
0xacd7:    41 31 c0                              	xor r8d, eax
0xacda:    0f b6 42 09                           	movzx eax, byte ptr [rdx + 9]
0xacde:    32 46 09                              	xor al, byte ptr [rsi + 9]
0xace1:    0f b6 c0                              	movzx eax, al
0xace4:    c1 e0 08                              	shl eax, 8
0xace7:    41 31 c0                              	xor r8d, eax
0xacea:    0f b6 4a 0b                           	movzx ecx, byte ptr [rdx + 0xb]
0xacee:    32 4e 0b                              	xor cl, byte ptr [rsi + 0xb]
0xacf1:    c1 e1 18                              	shl ecx, 0x18
0xacf4:    0f b6 42 0c                           	movzx eax, byte ptr [rdx + 0xc]
0xacf8:    32 46 0c                              	xor al, byte ptr [rsi + 0xc]
0xacfb:    0f b6 c0                              	movzx eax, al
0xacfe:    c1 e0 10                              	shl eax, 0x10
0xad01:    31 c8                                 	xor eax, ecx
0xad03:    0f b6 4a 0e                           	movzx ecx, byte ptr [rdx + 0xe]
0xad07:    32 4e 0e                              	xor cl, byte ptr [rsi + 0xe]
0xad0a:    0f b6 c9                              	movzx ecx, cl
0xad0d:    31 c8                                 	xor eax, ecx
0xad0f:    0f b6 52 0d                           	movzx edx, byte ptr [rdx + 0xd]
0xad13:    32 56 0d                              	xor dl, byte ptr [rsi + 0xd]
0xad16:    0f b6 d2                              	movzx edx, dl
0xad19:    c1 e2 08                              	shl edx, 8
0xad1c:    31 d0                                 	xor eax, edx
0xad1e:    b9 00 00 00 00                        	mov ecx, 0
0xad23:    48 c7 c2 00 00 00 00                  	mov rdx, 0
; data inside code section at 0xad2a -- 0xad6f
0xad2a:    44 33 14 0a 0f b6 f0 8b  34 b2 81 e6 00 ff 00 00   |D3......4.......|
0xad3a:    41 31 f2 89 c6 c1 ee 0d  40 0f b6 f6 8b 34 b2 81   |A1......@....4..|
0xad4a:    e6 00 00 00 ff 41 31 f2  89 c6 c1 ee 05 40 0f b6   |.....A1......@..|
0xad5a:    f6 8b 34 b2 81 e6 00 00  ff 00 41 31 f2 89 c6 c1   |..4.......A1....|
0xad6a:    ee 13 40 0f b6                                     |..@..           |
; function: Gen_Identify_Key at 0xad6f -- 0xad9f
0xad6f:    f6 0f b6                              	test byte ptr [rdi], 0xb6
0xad72:    34 b2                                 	xor al, 0xb2
0xad74:    41 31 f2                              	xor r10d, esi
0xad77:    45 31 d1                              	xor r9d, r10d
0xad7a:    45 31 c8                              	xor r8d, r9d
0xad7d:    44 31 c0                              	xor eax, r8d
0xad80:    48 83 c1 04                           	add rcx, 4
0xad84:    48 83 f9 28                           	cmp rcx, 0x28
0xad88:    75 a0                                 	jne 0xad2a
0xad8a:    44 89 17                              	mov dword ptr [rdi], r10d
0xad8d:    44 89 4f 04                           	mov dword ptr [rdi + 4], r9d
0xad91:    44 89 47 08                           	mov dword ptr [rdi + 8], r8d
0xad95:    89 47 0c                              	mov dword ptr [rdi + 0xc], eax
0xad98:    b8 01 00 00 00                        	mov eax, 1
0xad9d:    c9                                    	leave 
0xad9e:    c3                                    	ret 
; function: Gen_Identify_Key at 0xad9f -- 0xaf06
0xad9f:    55                                    	push rbp
0xada0:    48 89 e5                              	mov rbp, rsp
0xada3:    48 83 ec 40                           	sub rsp, 0x40
0xada7:    e8 44 3e 03 00                        	call 0x3ebf0 <mcount>
0xadac:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xadb5:    48 89 45 f8                           	mov qword ptr [rbp - 8], rax
0xadb9:    31 c0                                 	xor eax, eax
0xadbb:    48 8d 45 e0                           	lea rax, [rbp - 0x20]
0xadbf:    4c 8d 46 10                           	lea r8, [rsi + 0x10]
0xadc3:    0f b6 0a                              	movzx ecx, byte ptr [rdx]
0xadc6:    32 0e                                 	xor cl, byte ptr [rsi]
0xadc8:    88 08                                 	mov byte ptr [rax], cl
0xadca:    48 83 c6 01                           	add rsi, 1
0xadce:    48 83 c2 01                           	add rdx, 1
0xadd2:    48 83 c0 01                           	add rax, 1
0xadd6:    4c 39 c6                              	cmp rsi, r8
0xadd9:    75 e8                                 	jne 0xadc3 <Gen_Identify_Key+0x24>
0xaddb:    0f b6 55 e0                           	movzx edx, byte ptr [rbp - 0x20]
0xaddf:    c1 e2 18                              	shl edx, 0x18
0xade2:    0f b6 45 e1                           	movzx eax, byte ptr [rbp - 0x1f]
0xade6:    c1 e0 10                              	shl eax, 0x10
0xade9:    31 d0                                 	xor eax, edx
0xadeb:    0f b6 55 e3                           	movzx edx, byte ptr [rbp - 0x1d]
0xadef:    31 d0                                 	xor eax, edx
0xadf1:    0f b6 55 e2                           	movzx edx, byte ptr [rbp - 0x1e]
0xadf5:    c1 e2 08                              	shl edx, 8
0xadf8:    31 d0                                 	xor eax, edx
0xadfa:    89 45 c0                              	mov dword ptr [rbp - 0x40], eax
0xadfd:    0f b6 55 e4                           	movzx edx, byte ptr [rbp - 0x1c]
0xae01:    c1 e2 18                              	shl edx, 0x18
0xae04:    0f b6 45 e5                           	movzx eax, byte ptr [rbp - 0x1b]
0xae08:    c1 e0 10                              	shl eax, 0x10
0xae0b:    31 d0                                 	xor eax, edx
0xae0d:    0f b6 55 e7                           	movzx edx, byte ptr [rbp - 0x19]
0xae11:    31 d0                                 	xor eax, edx
0xae13:    0f b6 55 e6                           	movzx edx, byte ptr [rbp - 0x1a]
0xae17:    c1 e2 08                              	shl edx, 8
0xae1a:    31 d0                                 	xor eax, edx
0xae1c:    89 45 c4                              	mov dword ptr [rbp - 0x3c], eax
0xae1f:    0f b6 55 e8                           	movzx edx, byte ptr [rbp - 0x18]
0xae23:    c1 e2 18                              	shl edx, 0x18
0xae26:    0f b6 45 e9                           	movzx eax, byte ptr [rbp - 0x17]
0xae2a:    c1 e0 10                              	shl eax, 0x10
0xae2d:    31 d0                                 	xor eax, edx
0xae2f:    0f b6 55 eb                           	movzx edx, byte ptr [rbp - 0x15]
0xae33:    31 d0                                 	xor eax, edx
0xae35:    0f b6 55 ea                           	movzx edx, byte ptr [rbp - 0x16]
0xae39:    c1 e2 08                              	shl edx, 8
0xae3c:    31 d0                                 	xor eax, edx
0xae3e:    89 45 c8                              	mov dword ptr [rbp - 0x38], eax
0xae41:    0f b6 55 ec                           	movzx edx, byte ptr [rbp - 0x14]
0xae45:    c1 e2 18                              	shl edx, 0x18
0xae48:    0f b6 45 ed                           	movzx eax, byte ptr [rbp - 0x13]
0xae4c:    c1 e0 10                              	shl eax, 0x10
0xae4f:    31 d0                                 	xor eax, edx
0xae51:    0f b6 55 ef                           	movzx edx, byte ptr [rbp - 0x11]
0xae55:    31 d0                                 	xor eax, edx
0xae57:    0f b6 55 ee                           	movzx edx, byte ptr [rbp - 0x12]
0xae5b:    c1 e2 08                              	shl edx, 8
0xae5e:    31 d0                                 	xor eax, edx
0xae60:    89 45 cc                              	mov dword ptr [rbp - 0x34], eax
0xae63:    be 00 00 00 00                        	mov esi, 0
0xae68:    49 c7 c1 00 00 00 00                  	mov r9, 0
0xae6f:    48 c7 c1 00 00 00 00                  	mov rcx, 0
0xae76:    4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0xae7a:    4d 8d 50 10                           	lea r10, [r8 + 0x10]
0xae7e:    49 83 c0 20                           	add r8, 0x20
0xae82:    8b 45 cc                              	mov eax, dword ptr [rbp - 0x34]
0xae85:    45 8b 1c 31                           	mov r11d, dword ptr [r9 + rsi]
0xae89:    44 33 5d c0                           	xor r11d, dword ptr [rbp - 0x40]
0xae8d:    0f b6 d0                              	movzx edx, al
0xae90:    8b 14 91                              	mov edx, dword ptr [rcx + rdx*4]
0xae93:    81 e2 00 ff 00 00                     	and edx, 0xff00
0xae99:    41 31 d3                              	xor r11d, edx
0xae9c:    89 c2                                 	mov edx, eax
0xae9e:    c1 ea 18                              	shr edx, 0x18
0xaea1:    89 d2                                 	mov edx, edx
0xaea3:    0f b6 14 91                           	movzx edx, byte ptr [rcx + rdx*4]
0xaea7:    41 31 d3                              	xor r11d, edx
0xaeaa:    89 c2                                 	mov edx, eax
0xaeac:    c1 ea 10                              	shr edx, 0x10
0xaeaf:    0f b6 d2                              	movzx edx, dl
0xaeb2:    8b 14 91                              	mov edx, dword ptr [rcx + rdx*4]
0xaeb5:    81 e2 00 00 00 ff                     	and edx, 0xff000000
0xaebb:    41 31 d3                              	xor r11d, edx
0xaebe:    0f b6 c4                              	movzx eax, ah
0xaec1:    8b 14 81                              	mov edx, dword ptr [rcx + rax*4]
0xaec4:    81 e2 00 00 ff 00                     	and edx, 0xff0000
0xaeca:    44 89 d8                              	mov eax, r11d
0xaecd:    31 d0                                 	xor eax, edx
0xaecf:    89 45 d0                              	mov dword ptr [rbp - 0x30], eax
0xaed2:    33 45 c4                              	xor eax, dword ptr [rbp - 0x3c]
0xaed5:    89 45 d4                              	mov dword ptr [rbp - 0x2c], eax
0xaed8:    33 45 c8                              	xor eax, dword ptr [rbp - 0x38]
0xaedb:    89 45 d8                              	mov dword ptr [rbp - 0x28], eax
0xaede:    33 45 cc                              	xor eax, dword ptr [rbp - 0x34]
0xaee1:    89 45 dc                              	mov dword ptr [rbp - 0x24], eax
0xaee4:    48 83 fe 24                           	cmp rsi, 0x24
0xaee8:    75 1c                                 	jne 0xaf06 <Gen_Identify_Key+0x165>
0xaeea:    b8 00 00 00 00                        	mov eax, 0
0xaeef:    48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0xaef3:    8b 54 01 10                           	mov edx, dword ptr [rcx + rax + 0x10]
0xaef7:    89 14 07                              	mov dword ptr [rdi + rax], edx
0xaefa:    48 83 c0 04                           	add rax, 4
0xaefe:    48 83 f8 10                           	cmp rax, 0x10
0xaf02:    75 ef                                 	jne 0xaef3 <Gen_Identify_Key+0x154>
0xaf04:    eb 1a                                 	jmp 0xaf20
; data inside code section at 0xaf06 -- 0xaf07
0xaf06:    4c                                                 |L               |
; function: DTV_GetIRData at 0xaf07 -- 0xaf37
0xaf07:    89 d0                                 	mov eax, edx
0xaf09:    8b 10                                 	mov edx, dword ptr [rax]
0xaf0b:    89 50 f0                              	mov dword ptr [rax - 0x10], edx
0xaf0e:    48 83 c0 04                           	add rax, 4
0xaf12:    4c 39 c0                              	cmp rax, r8
0xaf15:    75 f2                                 	jne 0xaf09 <DTV_GetIRData+0x2>
0xaf17:    48 83 c6 04                           	add rsi, 4
0xaf1b:    e9 62 ff ff ff                        	jmp 0xae82
0xaf20:    48 8b 45 f8                           	mov rax, qword ptr [rbp - 8]
0xaf24:    65 48 33 04 25 28 00 00 00            	xor rax, qword ptr gs:[0x28]
0xaf2d:    74 06                                 	je 0xaf35 <DTV_GetIRData+0x2e>
0xaf2f:    90                                    	nop 
0xaf30:    e8 73 3c 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xaf35:    c9                                    	leave 
0xaf36:    c3                                    	ret 
; function: DTV_GetIRData at 0xaf37 -- 0xaf4f
0xaf37:    55                                    	push rbp
0xaf38:    48 89 e5                              	mov rbp, rsp
0xaf3b:    48 83 ec 40                           	sub rsp, 0x40
0xaf3f:    48 89 5d f0                           	mov qword ptr [rbp - 0x10], rbx
0xaf43:    4c 89 65 f8                           	mov qword ptr [rbp - 8], r12
0xaf47:    e8 a4 3c 03 00                        	call 0x3ebf0 <mcount>
0xaf4c:    49 89 f4                              	mov r12, rsi
; data inside code section at 0xaf4f -- 0xaf70
0xaf4f:    48 89 d3 65 48 8b 04 25  28 00 00 00 48 89 45 e8   |H..eH..%(...H.E.|
0xaf5f:    31 c0 48 8d 75 c0 48 8b  bf 38 1d 00 00 e8 cf 90   |1.H.u.H..8......|
0xaf6f:    ff                                                 |.               |
; function: function_af70 at 0xaf70 -- 0xaf76
0xaf70:    ff 48 89                              	dec dword ptr [rax - 0x77]
0xaf73:    c2 b8 00                              	ret 0xb8
; data inside code section at 0xaf76 -- 0xaf8a
0xaf76:    00 00 00 48 83 fa 01 75  1d 0f b6 55 e0 c1 e2 02   |...H...u...U....|
0xaf86:    88 13 0f b6                                        |....            |
; function: DTV_GetDecryptionInformation at 0xaf8a -- 0xafba
0xaf8a:    d2 48 8d                              	ror byte ptr [rax - 0x73], cl
0xaf8d:    75 c0                                 	jne 0xaf4f
0xaf8f:    4c 89 e7                              	mov rdi, r12
0xaf92:    e8 d1 3b 03 00                        	call 0x3eb68 <memcpy>
0xaf97:    b8 01 00 00 00                        	mov eax, 1
0xaf9c:    48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0xafa0:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xafa9:    74 05                                 	je 0xafb0 <DTV_GetDecryptionInformation+0x26>
0xafab:    e8 f8 3b 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xafb0:    48 8b 5d f0                           	mov rbx, qword ptr [rbp - 0x10]
0xafb4:    4c 8b 65 f8                           	mov r12, qword ptr [rbp - 8]
0xafb8:    c9                                    	leave 
0xafb9:    c3                                    	ret 
; function: DTV_GetDecryptionInformation at 0xafba -- 0xafbe
0xafba:    55                                    	push rbp
0xafbb:    48 89 e5                              	mov rbp, rsp
; data inside code section at 0xafbe -- 0xafc2
0xafbe:    e8 2d 3c 03                                        |.-<.            |
; function: BCAS_CMDSet at 0xafc2 -- 0xaff2
0xafc2:    00 b8 00 00 00 00                     	add byte ptr [rax], bh
0xafc8:    48 85 ff                              	test rdi, rdi
0xafcb:    74 23                                 	je 0xaff0 <BCAS_CMDSet+0x2e>
0xafcd:    48 8d 87 a4 0d 03 00                  	lea rax, [rdi + 0x30da4]
0xafd4:    48 8b 08                              	mov rcx, qword ptr [rax]
0xafd7:    48 89 0e                              	mov qword ptr [rsi], rcx
0xafda:    48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0xafde:    48 89 46 08                           	mov qword ptr [rsi + 8], rax
0xafe2:    0f b6 87 75 f4 08 00                  	movzx eax, byte ptr [rdi + 0x8f475]
0xafe9:    89 02                                 	mov dword ptr [rdx], eax
0xafeb:    b8 01 00 00 00                        	mov eax, 1
0xaff0:    c9                                    	leave 
0xaff1:    c3                                    	ret 
; function: BCAS_CMDSet at 0xaff2 -- 0xb033
0xaff2:    55                                    	push rbp
0xaff3:    48 89 e5                              	mov rbp, rsp
0xaff6:    48 83 ec 20                           	sub rsp, 0x20
0xaffa:    48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0xaffe:    4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0xb002:    4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0xb006:    e8 e5 3b 03 00                        	call 0x3ebf0 <mcount>
0xb00b:    4d 89 c4                              	mov r12, r8
0xb00e:    41 89 cd                              	mov r13d, ecx
0xb011:    48 89 fb                              	mov rbx, rdi
0xb014:    0f b6 87 38 13 00 00                  	movzx eax, byte ptr [rdi + 0x1338]
0xb01b:    3c 01                                 	cmp al, 1
0xb01d:    75 37                                 	jne 0xb056
0xb01f:    0f b6 c2                              	movzx eax, dl
0xb022:    89 87 90 01 00 00                     	mov dword ptr [rdi + 0x190], eax
0xb028:    48 8d 7f 50                           	lea rdi, [rdi + 0x50]
0xb02c:    89 d2                                 	mov edx, edx
0xb02e:    e8 35 3b 03 00                        	call 0x3eb68 <memcpy>
; data inside code section at 0xb033 -- 0xb037
0xb033:    44 88 ab 1c                                        |D...            |
; function: Get_Unique_ID at 0xb037 -- 0xb067
0xb037:    04 00                                 	add al, 0
0xb039:    00 4c 89 a3                           	add byte ptr [rcx + rcx*4 - 0x5d], cl
0xb03d:    20 04 00                              	and byte ptr [rax + rax], al
0xb040:    00 c6                                 	add dh, al
0xb042:    83 38 13                              	cmp dword ptr [rax], 0x13
0xb045:    00 00                                 	add byte ptr [rax], al
0xb047:    02 c6                                 	add al, dh
0xb049:    83 cc 15                              	or esp, 0x15
0xb04c:    00 00                                 	add byte ptr [rax], al
0xb04e:    00 b8 05 00 00 00                     	add byte ptr [rax + 5], bh
0xb054:    eb 03                                 	jmp 0xb059 <Get_Unique_ID+0x22>
0xb056:    0f b6 c0                              	movzx eax, al
0xb059:    48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0xb05d:    4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0xb061:    4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0xb065:    c9                                    	leave 
0xb066:    c3                                    	ret 
; function: Get_Unique_ID at 0xb067 -- 0xb103
0xb067:    55                                    	push rbp
0xb068:    48 89 e5                              	mov rbp, rsp
0xb06b:    48 83 ec 30                           	sub rsp, 0x30
0xb06f:    e8 7c 3b 03 00                        	call 0x3ebf0 <mcount>
0xb074:    48 89 f8                              	mov rax, rdi
0xb077:    48 89 f7                              	mov rdi, rsi
0xb07a:    65 48 8b 14 25 28 00 00 00            	mov rdx, qword ptr gs:[0x28]
0xb083:    48 89 55 f8                           	mov qword ptr [rbp - 8], rdx
0xb087:    31 d2                                 	xor edx, edx
0xb089:    48 8b 80 38 1d 00 00                  	mov rax, qword ptr [rax + 0x1d38]
0xb090:    c6 45 d0 fd                           	mov byte ptr [rbp - 0x30], 0xfd
0xb094:    c6 45 d1 1c                           	mov byte ptr [rbp - 0x2f], 0x1c
0xb098:    c6 45 d2 ef                           	mov byte ptr [rbp - 0x2e], 0xef
0xb09c:    c6 45 d3 78                           	mov byte ptr [rbp - 0x2d], 0x78
0xb0a0:    c6 45 d4 d3                           	mov byte ptr [rbp - 0x2c], 0xd3
0xb0a4:    c6 45 d5 69                           	mov byte ptr [rbp - 0x2b], 0x69
0xb0a8:    c6 45 d6 47                           	mov byte ptr [rbp - 0x2a], 0x47
0xb0ac:    c6 45 d7 54                           	mov byte ptr [rbp - 0x29], 0x54
0xb0b0:    c6 45 d8 ab                           	mov byte ptr [rbp - 0x28], 0xab
0xb0b4:    c6 45 d9 aa                           	mov byte ptr [rbp - 0x27], 0xaa
0xb0b8:    c6 45 da 58                           	mov byte ptr [rbp - 0x26], 0x58
0xb0bc:    c6 45 db bb                           	mov byte ptr [rbp - 0x25], 0xbb
0xb0c0:    c6 45 dc 62                           	mov byte ptr [rbp - 0x24], 0x62
0xb0c4:    c6 45 dd 49                           	mov byte ptr [rbp - 0x23], 0x49
0xb0c8:    c6 45 de 96                           	mov byte ptr [rbp - 0x22], 0x96
0xb0cc:    c6 45 df ff                           	mov byte ptr [rbp - 0x21], 0xff
0xb0d0:    0f b6 90 73 4f 00 00                  	movzx edx, byte ptr [rax + 0x4f73]
0xb0d7:    88 55 e0                              	mov byte ptr [rbp - 0x20], dl
0xb0da:    0f b6 90 74 4f 00 00                  	movzx edx, byte ptr [rax + 0x4f74]
0xb0e1:    88 55 e1                              	mov byte ptr [rbp - 0x1f], dl
0xb0e4:    0f b6 90 75 4f 00 00                  	movzx edx, byte ptr [rax + 0x4f75]
0xb0eb:    88 55 e2                              	mov byte ptr [rbp - 0x1e], dl
0xb0ee:    0f b6 90 76 4f 00 00                  	movzx edx, byte ptr [rax + 0x4f76]
0xb0f5:    88 55 e3                              	mov byte ptr [rbp - 0x1d], dl
0xb0f8:    48 8d 75 e0                           	lea rsi, [rbp - 0x20]
0xb0fc:    48 8b 80 a1 4f 00 00                  	mov rax, qword ptr [rax + 0x4fa1]
; data inside code section at 0xb103 -- 0xb106
0xb103:    48 89 46                                           |H.F             |
; function: DTV_GetEmergencyAlarmStatus at 0xb106 -- 0xb136
0xb106:    04 c6                                 	add al, 0xc6
0xb108:    45 ec                                 	in al, dx
0xb10a:    f7 c6 45 ed 33 c6                     	test esi, 0xc633ed45
0xb110:    45 ee                                 	out dx, al
0xb112:    92                                    	xchg eax, edx
0xb113:    c6 45 ef 14                           	mov byte ptr [rbp - 0x11], 0x14
0xb117:    48 8d 55 d0                           	lea rdx, [rbp - 0x30]
0xb11b:    e8 7f fc ff ff                        	call 0xad9f <Gen_Identify_Key>
0xb120:    48 8b 45 f8                           	mov rax, qword ptr [rbp - 8]
0xb124:    65 48 33 04 25 28 00 00 00            	xor rax, qword ptr gs:[0x28]
0xb12d:    74 05                                 	je 0xb134 <DTV_GetEmergencyAlarmStatus+0x2e>
0xb12f:    e8 74 3a 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xb134:    c9                                    	leave 
0xb135:    c3                                    	ret 
; function: DTV_GetEmergencyAlarmStatus at 0xb136 -- 0xb167
0xb136:    55                                    	push rbp
0xb137:    48 89 e5                              	mov rbp, rsp
0xb13a:    53                                    	push rbx
0xb13b:    48 83 ec 08                           	sub rsp, 8
0xb13f:    e8 ac 3a 03 00                        	call 0x3ebf0 <mcount>
0xb144:    48 89 d3                              	mov rbx, rdx
0xb147:    48 85 ff                              	test rdi, rdi
0xb14a:    75 0f                                 	jne 0xb15b <DTV_GetEmergencyAlarmStatus+0x25>
0xb14c:    b8 00 00 00 00                        	mov eax, 0
0xb151:    48 85 d2                              	test rdx, rdx
0xb154:    74 3a                                 	je 0xb190
0xb156:    c6 02 00                              	mov byte ptr [rdx], 0
0xb159:    eb 35                                 	jmp 0xb190
0xb15b:    48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0xb162:    b8 01 00 00 00                        	mov eax, 1
; function: DTV_GetAGCValue at 0xb167 -- 0xb197
0xb167:    48 85 d2                              	test rdx, rdx
0xb16a:    74 24                                 	je 0xb190 <DTV_GetAGCValue+0x29>
0xb16c:    40 0f b6 c6                           	movzx eax, sil
0xb170:    48 8d 04 80                           	lea rax, [rax + rax*4]
0xb174:    48 c1 e0 04                           	shl rax, 4
0xb178:    48 8d 94 07 60 59 00 00               	lea rdx, [rdi + rax + 0x5960]
0xb180:    40 0f b6 f6                           	movzx esi, sil
0xb184:    e8 08 b3 ff ff                        	call 0x6491 <TC_GetEmergencyAlarmStatus>
0xb189:    88 03                                 	mov byte ptr [rbx], al
0xb18b:    b8 01 00 00 00                        	mov eax, 1
0xb190:    48 83 c4 08                           	add rsp, 8
0xb194:    5b                                    	pop rbx
0xb195:    c9                                    	leave 
0xb196:    c3                                    	ret 
; function: DTV_GetAGCValue at 0xb197 -- 0xb1cc
0xb197:    55                                    	push rbp
0xb198:    48 89 e5                              	mov rbp, rsp
0xb19b:    53                                    	push rbx
0xb19c:    48 83 ec 08                           	sub rsp, 8
0xb1a0:    e8 4b 3a 03 00                        	call 0x3ebf0 <mcount>
0xb1a5:    48 89 d3                              	mov rbx, rdx
0xb1a8:    48 85 ff                              	test rdi, rdi
0xb1ab:    75 13                                 	jne 0xb1c0 <DTV_GetAGCValue+0x29>
0xb1ad:    b8 00 00 00 00                        	mov eax, 0
0xb1b2:    48 85 d2                              	test rdx, rdx
0xb1b5:    74 3f                                 	je 0xb1f6
0xb1b7:    48 c7 02 00 00 00 00                  	mov qword ptr [rdx], 0
0xb1be:    eb 36                                 	jmp 0xb1f6
0xb1c0:    48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0xb1c7:    b8 01 00 00 00                        	mov eax, 1
; data inside code section at 0xb1cc -- 0xb1cd
0xb1cc:    48                                                 |H               |
; function: DTV_GetBERValue at 0xb1cd -- 0xb1fd
0xb1cd:    85 d2                                 	test edx, edx
0xb1cf:    74 25                                 	je 0xb1f6 <DTV_GetBERValue+0x29>
0xb1d1:    40 0f b6 c6                           	movzx eax, sil
0xb1d5:    48 8d 04 80                           	lea rax, [rax + rax*4]
0xb1d9:    48 c1 e0 04                           	shl rax, 4
0xb1dd:    48 8d 94 07 60 59 00 00               	lea rdx, [rdi + rax + 0x5960]
0xb1e5:    40 0f b6 f6                           	movzx esi, sil
0xb1e9:    e8 93 b2 ff ff                        	call 0x6481 <TC_GetAGC>
0xb1ee:    48 89 03                              	mov qword ptr [rbx], rax
0xb1f1:    b8 01 00 00 00                        	mov eax, 1
0xb1f6:    48 83 c4 08                           	add rsp, 8
0xb1fa:    5b                                    	pop rbx
0xb1fb:    c9                                    	leave 
0xb1fc:    c3                                    	ret 
; function: DTV_GetBERValue at 0xb1fd -- 0xb236
0xb1fd:    55                                    	push rbp
0xb1fe:    48 89 e5                              	mov rbp, rsp
0xb201:    e8 ea 39 03 00                        	call 0x3ebf0 <mcount>
0xb206:    48 85 ff                              	test rdi, rdi
0xb209:    75 1f                                 	jne 0xb22a <DTV_GetBERValue+0x2d>
0xb20b:    48 85 d2                              	test rdx, rdx
0xb20e:    74 07                                 	je 0xb217 <DTV_GetBERValue+0x1a>
0xb210:    48 c7 02 00 00 00 00                  	mov qword ptr [rdx], 0
0xb217:    b8 00 00 00 00                        	mov eax, 0
0xb21c:    48 85 c9                              	test rcx, rcx
0xb21f:    74 43                                 	je 0xb264
0xb221:    48 c7 01 00 00 00 00                  	mov qword ptr [rcx], 0
0xb228:    eb 3a                                 	jmp 0xb264
0xb22a:    48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0xb231:    48 85 d2                              	test rdx, rdx
0xb234:    74 05                                 	je 0xb23b
; function: DTV_GetCNRegisterValue at 0xb236 -- 0xb266
0xb236:    48 85 c9                              	test rcx, rcx
0xb239:    75 07                                 	jne 0xb242 <DTV_GetCNRegisterValue+0xc>
0xb23b:    b8 01 00 00 00                        	mov eax, 1
0xb240:    eb 22                                 	jmp 0xb264 <DTV_GetCNRegisterValue+0x2e>
0xb242:    40 0f b6 c6                           	movzx eax, sil
0xb246:    48 8d 04 80                           	lea rax, [rax + rax*4]
0xb24a:    48 c1 e0 04                           	shl rax, 4
0xb24e:    40 0f b6 f6                           	movzx esi, sil
0xb252:    4c 8d 84 07 60 59 00 00               	lea r8, [rdi + rax + 0x5960]
0xb25a:    e8 12 b2 ff ff                        	call 0x6471 <TC_GetBER>
0xb25f:    b8 01 00 00 00                        	mov eax, 1
0xb264:    c9                                    	leave 
0xb265:    c3                                    	ret 
; function: DTV_GetCNRegisterValue at 0xb266 -- 0xb29b
0xb266:    55                                    	push rbp
0xb267:    48 89 e5                              	mov rbp, rsp
0xb26a:    53                                    	push rbx
0xb26b:    48 83 ec 08                           	sub rsp, 8
0xb26f:    e8 7c 39 03 00                        	call 0x3ebf0 <mcount>
0xb274:    48 89 d3                              	mov rbx, rdx
0xb277:    48 85 ff                              	test rdi, rdi
0xb27a:    75 13                                 	jne 0xb28f <DTV_GetCNRegisterValue+0x29>
0xb27c:    b8 00 00 00 00                        	mov eax, 0
0xb281:    48 85 d2                              	test rdx, rdx
0xb284:    74 3f                                 	je 0xb2c5
0xb286:    48 c7 02 00 00 00 00                  	mov qword ptr [rdx], 0
0xb28d:    eb 36                                 	jmp 0xb2c5
0xb28f:    48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0xb296:    b8 01 00 00 00                        	mov eax, 1
; data inside code section at 0xb29b -- 0xb29c
0xb29b:    48                                                 |H               |
; function: DTV_GetCNValue at 0xb29c -- 0xb2cc
0xb29c:    85 d2                                 	test edx, edx
0xb29e:    74 25                                 	je 0xb2c5 <DTV_GetCNValue+0x29>
0xb2a0:    40 0f b6 c6                           	movzx eax, sil
0xb2a4:    48 8d 04 80                           	lea rax, [rax + rax*4]
0xb2a8:    48 c1 e0 04                           	shl rax, 4
0xb2ac:    48 8d 94 07 60 59 00 00               	lea rdx, [rdi + rax + 0x5960]
0xb2b4:    40 0f b6 f6                           	movzx esi, sil
0xb2b8:    e8 ee d0 ff ff                        	call 0x83ab <TC_GetCNRegister>
0xb2bd:    48 89 03                              	mov qword ptr [rbx], rax
0xb2c0:    b8 01 00 00 00                        	mov eax, 1
0xb2c5:    48 83 c4 08                           	add rsp, 8
0xb2c9:    5b                                    	pop rbx
0xb2ca:    c9                                    	leave 
0xb2cb:    c3                                    	ret 
; function: DTV_GetCNValue at 0xb2cc -- 0xb301
0xb2cc:    55                                    	push rbp
0xb2cd:    48 89 e5                              	mov rbp, rsp
0xb2d0:    53                                    	push rbx
0xb2d1:    48 83 ec 08                           	sub rsp, 8
0xb2d5:    e8 16 39 03 00                        	call 0x3ebf0 <mcount>
0xb2da:    48 89 d3                              	mov rbx, rdx
0xb2dd:    48 85 ff                              	test rdi, rdi
0xb2e0:    75 13                                 	jne 0xb2f5 <DTV_GetCNValue+0x29>
0xb2e2:    b8 00 00 00 00                        	mov eax, 0
0xb2e7:    48 85 d2                              	test rdx, rdx
0xb2ea:    74 3f                                 	je 0xb32b
0xb2ec:    48 c7 02 00 00 00 00                  	mov qword ptr [rdx], 0
0xb2f3:    eb 36                                 	jmp 0xb32b
0xb2f5:    48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0xb2fc:    b8 01 00 00 00                        	mov eax, 1
; data inside code section at 0xb301 -- 0xb302
0xb301:    48                                                 |H               |
; function: TLIB_I2C_Write_Middle at 0xb302 -- 0xb323
0xb302:    85 d2                                 	test edx, edx
0xb304:    74 25                                 	je 0xb32b
0xb306:    40 0f b6 c6                           	movzx eax, sil
0xb30a:    48 8d 04 80                           	lea rax, [rax + rax*4]
0xb30e:    48 c1 e0 04                           	shl rax, 4
0xb312:    48 8d 94 07 60 59 00 00               	lea rdx, [rdi + rax + 0x5960]
0xb31a:    40 0f b6 f6                           	movzx esi, sil
0xb31e:    e8 03 d1 ff ff                        	call 0x8426 <TC_GetCN>
; data inside code section at 0xb323 -- 0xb325
0xb323:    48 89                                              |H.              |
; function: TLIB_I2C_Read_Middle at 0xb325 -- 0xb332
0xb325:    03 b8 01 00 00 00                     	add edi, dword ptr [rax + 1]
0xb32b:    48 83 c4 08                           	add rsp, 8
0xb32f:    5b                                    	pop rbx
0xb330:    c9                                    	leave 
0xb331:    c3                                    	ret 
; function: TLIB_I2C_Write_Middle at 0xb332 -- 0xb346
0xb332:    55                                    	push rbp
0xb333:    48 89 e5                              	mov rbp, rsp
0xb336:    e8 b5 38 03 00                        	call 0x3ebf0 <mcount>
0xb33b:    0f b6 d2                              	movzx edx, dl
0xb33e:    40 0f b6 f6                           	movzx esi, sil
0xb342:    48 8b 7f 38                           	mov rdi, qword ptr [rdi + 0x38]
; data inside code section at 0xb346 -- 0xb348
0xb346:    45 0f                                              |E.              |
; function: DTV_GetBCASCommand at 0xb348 -- 0xb355
0xb348:    b6 c9                                 	mov dh, 0xc9
0xb34a:    45 0f b6 c0                           	movzx r8d, r8b
0xb34e:    e8 ae 19 01 00                        	call 0x1cd01 <TLIB_I2C_Write>
0xb353:    c9                                    	leave 
0xb354:    c3                                    	ret 
; function: TLIB_I2C_Read_Middle at 0xb355 -- 0xb378
0xb355:    55                                    	push rbp
0xb356:    48 89 e5                              	mov rbp, rsp
0xb359:    e8 92 38 03 00                        	call 0x3ebf0 <mcount>
0xb35e:    0f b6 d2                              	movzx edx, dl
0xb361:    40 0f b6 f6                           	movzx esi, sil
0xb365:    48 8b 7f 38                           	mov rdi, qword ptr [rdi + 0x38]
0xb369:    45 0f b6 c9                           	movzx r9d, r9b
0xb36d:    45 0f b6 c0                           	movzx r8d, r8b
0xb371:    e8 ea 18 01 00                        	call 0x1cc60 <TLIB_I2C_Read>
0xb376:    c9                                    	leave 
0xb377:    c3                                    	ret 
; function: DTV_GetBCASCommand at 0xb378 -- 0xb4f8
0xb378:    55                                    	push rbp
0xb379:    48 89 e5                              	mov rbp, rsp
0xb37c:    48 83 ec 50                           	sub rsp, 0x50
0xb380:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xb384:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xb388:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xb38c:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xb390:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xb394:    e8 57 38 03 00                        	call 0x3ebf0 <mcount>
0xb399:    48 89 fb                              	mov rbx, rdi
0xb39c:    49 89 f5                              	mov r13, rsi
0xb39f:    49 89 d4                              	mov r12, rdx
0xb3a2:    48 85 ff                              	test rdi, rdi
0xb3a5:    0f 84 68 01 00 00                     	je 0xb513
0xb3ab:    4c 8b bf 38 1d 00 00                  	mov r15, qword ptr [rdi + 0x1d38]
0xb3b2:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb3b7:    48 81 ff c0 01 f7 ff                  	cmp rdi, -0x8fe40
0xb3be:    0f 84 54 01 00 00                     	je 0xb518
0xb3c4:    48 83 bf d0 26 09 00 00               	cmp qword ptr [rdi + 0x926d0], 0
0xb3cc:    0f 84 41 01 00 00                     	je 0xb513
0xb3d2:    49 81 c7 b8 01 00 00                  	add r15, 0x1b8
0xb3d9:    4c 89 ff                              	mov rdi, r15
0xb3dc:    e8 f7 37 03 00                        	call 0x3ebd8 <down>
0xb3e1:    80 bb d8 26 09 00 01                  	cmp byte ptr [rbx + 0x926d8], 1
0xb3e8:    75 12                                 	jne 0xb3fc <DTV_GetBCASCommand+0x84>
0xb3ea:    4c 89 ff                              	mov rdi, r15
0xb3ed:    e8 66 37 03 00                        	call 0x3eb58 <up>
0xb3f2:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb3f7:    e9 1c 01 00 00                        	jmp 0xb518
0xb3fc:    48 8b 83 d0 26 09 00                  	mov rax, qword ptr [rbx + 0x926d0]
0xb403:    49 39 c4                              	cmp r12, rax
0xb406:    4c 0f 47 e0                           	cmova r12, rax
0xb40a:    c6 83 d8 26 09 00 01                  	mov byte ptr [rbx + 0x926d8], 1
0xb411:    48 8b 83 c0 26 09 00                  	mov rax, qword ptr [rbx + 0x926c0]
0xb418:    49 8d 14 04                           	lea rdx, [r12 + rax]
0xb41c:    48 83 fa 10                           	cmp rdx, 0x10
0xb420:    0f 86 90 00 00 00                     	jbe 0xb4b6 <DTV_GetBCASCommand+0x13e>
0xb426:    41 be 10 00 00 00                     	mov r14d, 0x10
0xb42c:    49 29 c6                              	sub r14, rax
0xb42f:    4c 89 e2                              	mov rdx, r12
0xb432:    4c 29 f2                              	sub rdx, r14
0xb435:    48 89 55 c8                           	mov qword ptr [rbp - 0x38], rdx
0xb439:    4b 8d 14 f6                           	lea rdx, [r14 + r14*8]
0xb43d:    48 8d 14 d2                           	lea rdx, [rdx + rdx*8]
0xb441:    48 c1 e2 03                           	shl rdx, 3
0xb445:    48 89 55 b8                           	mov qword ptr [rbp - 0x48], rdx
0xb449:    48 8d 8b 40 fe 08 00                  	lea rcx, [rbx + 0x8fe40]
0xb450:    48 89 4d c0                           	mov qword ptr [rbp - 0x40], rcx
0xb454:    48 8d 04 c0                           	lea rax, [rax + rax*8]
0xb458:    48 8d 04 c0                           	lea rax, [rax + rax*8]
0xb45c:    48 8d 34 c1                           	lea rsi, [rcx + rax*8]
0xb460:    4c 89 ef                              	mov rdi, r13
0xb463:    e8 00 37 03 00                        	call 0x3eb68 <memcpy>
0xb468:    48 8b 83 c0 26 09 00                  	mov rax, qword ptr [rbx + 0x926c0]
0xb46f:    49 8d 44 06 f0                        	lea rax, [r14 + rax - 0x10]
0xb474:    48 89 83 c0 26 09 00                  	mov qword ptr [rbx + 0x926c0], rax
0xb47b:    48 8b 7d b8                           	mov rdi, qword ptr [rbp - 0x48]
0xb47f:    49 8d 7c 3d 00                        	lea rdi, [r13 + rdi]
0xb484:    48 8b 4d c8                           	mov rcx, qword ptr [rbp - 0x38]
0xb488:    48 8d 14 c9                           	lea rdx, [rcx + rcx*8]
0xb48c:    48 8d 14 d2                           	lea rdx, [rdx + rdx*8]
0xb490:    48 c1 e2 03                           	shl rdx, 3
0xb494:    48 8d 04 c0                           	lea rax, [rax + rax*8]
0xb498:    48 8d 04 c0                           	lea rax, [rax + rax*8]
0xb49c:    48 8b 4d c0                           	mov rcx, qword ptr [rbp - 0x40]
0xb4a0:    48 8d 34 c1                           	lea rsi, [rcx + rax*8]
0xb4a4:    e8 bf 36 03 00                        	call 0x3eb68 <memcpy>
0xb4a9:    48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0xb4ad:    48 01 83 c0 26 09 00                  	add qword ptr [rbx + 0x926c0], rax
0xb4b4:    eb 42                                 	jmp 0xb4f8 <DTV_GetBCASCommand+0x179>
0xb4b6:    4b 8d 14 e4                           	lea rdx, [r12 + r12*8]
0xb4ba:    48 8d 14 d2                           	lea rdx, [rdx + rdx*8]
0xb4be:    48 c1 e2 03                           	shl rdx, 3
0xb4c2:    48 8d 04 c0                           	lea rax, [rax + rax*8]
0xb4c6:    48 8d 04 c0                           	lea rax, [rax + rax*8]
0xb4ca:    48 8d b4 c3 40 fe 08 00               	lea rsi, [rbx + rax*8 + 0x8fe40]
0xb4d2:    4c 89 ef                              	mov rdi, r13
0xb4d5:    e8 8e 36 03 00                        	call 0x3eb68 <memcpy>
0xb4da:    4c 89 e0                              	mov rax, r12
0xb4dd:    48 03 83 c0 26 09 00                  	add rax, qword ptr [rbx + 0x926c0]
0xb4e4:    48 83 f8 10                           	cmp rax, 0x10
0xb4e8:    ba 00 00 00 00                        	mov edx, 0
0xb4ed:    48 0f 44 c2                           	cmove rax, rdx
0xb4f1:    48 89 83 c0 26 09 00                  	mov qword ptr [rbx + 0x926c0], rax
; data inside code section at 0xb4f8 -- 0xb4fe
0xb4f8:    4c 29 a3 d0 26 09                                  |L)..&.          |
; function: DTV_SaveBCASCommand at 0xb4fe -- 0xb52e
0xb4fe:    00 c6                                 	add dh, al
0xb500:    83 d8 26                              	sbb eax, 0x26
0xb503:    09 00                                 	or dword ptr [rax], eax
0xb505:    00 4c 89 ff                           	add byte ptr [rcx + rcx*4 - 1], cl
0xb509:    e8 4a 36 03 00                        	call 0x3eb58 <up>
0xb50e:    44 89 e0                              	mov eax, r12d
0xb511:    eb 05                                 	jmp 0xb518 <DTV_SaveBCASCommand+0x1a>
0xb513:    b8 00 00 00 00                        	mov eax, 0
0xb518:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0xb51c:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0xb520:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0xb524:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xb528:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xb52c:    c9                                    	leave 
0xb52d:    c3                                    	ret 
; function: DTV_SaveBCASCommand at 0xb52e -- 0xb70e
0xb52e:    55                                    	push rbp
0xb52f:    48 89 e5                              	mov rbp, rsp
0xb532:    48 83 ec 40                           	sub rsp, 0x40
0xb536:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xb53a:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xb53e:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xb542:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xb546:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xb54a:    e8 a1 36 03 00                        	call 0x3ebf0 <mcount>
0xb54f:    48 89 fb                              	mov rbx, rdi
0xb552:    49 89 f6                              	mov r14, rsi
0xb555:    b8 00 00 00 00                        	mov eax, 0
0xb55a:    48 85 ff                              	test rdi, rdi
0xb55d:    0f 84 29 01 00 00                     	je 0xb68c <DTV_SaveBCASCommand+0x15e>
0xb563:    4c 8b af 38 1d 00 00                  	mov r13, qword ptr [rdi + 0x1d38]
0xb56a:    49 81 c5 b8 01 00 00                  	add r13, 0x1b8
0xb571:    4c 89 ef                              	mov rdi, r13
0xb574:    e8 5f 36 03 00                        	call 0x3ebd8 <down>
0xb579:    80 bb d8 26 09 00 01                  	cmp byte ptr [rbx + 0x926d8], 1
0xb580:    75 12                                 	jne 0xb594 <DTV_SaveBCASCommand+0x66>
0xb582:    4c 89 ef                              	mov rdi, r13
0xb585:    e8 ce 35 03 00                        	call 0x3eb58 <up>
0xb58a:    b8 00 00 00 00                        	mov eax, 0
0xb58f:    e9 f8 00 00 00                        	jmp 0xb68c <DTV_SaveBCASCommand+0x15e>
0xb594:    c6 83 d8 26 09 00 01                  	mov byte ptr [rbx + 0x926d8], 1
0xb59b:    48 8b 83 c8 26 09 00                  	mov rax, qword ptr [rbx + 0x926c8]
0xb5a2:    48 8d 50 01                           	lea rdx, [rax + 1]
0xb5a6:    48 83 fa 10                           	cmp rdx, 0x10
0xb5aa:    0f 86 f2 00 00 00                     	jbe 0xb6a2 <DTV_SaveBCASCommand+0x174>
0xb5b0:    44 8d 78 f1                           	lea r15d, [rax - 0xf]
0xb5b4:    41 bc 01 00 00 00                     	mov r12d, 1
0xb5ba:    45 29 fc                              	sub r12d, r15d
0xb5bd:    4d 63 e4                              	movsxd r12, r12d
0xb5c0:    48 8d 93 40 fe 08 00                  	lea rdx, [rbx + 0x8fe40]
0xb5c7:    48 89 55 c8                           	mov qword ptr [rbp - 0x38], rdx
0xb5cb:    48 8d 04 c0                           	lea rax, [rax + rax*8]
0xb5cf:    48 8d 04 c0                           	lea rax, [rax + rax*8]
0xb5d3:    48 8d 3c c2                           	lea rdi, [rdx + rax*8]
0xb5d7:    4b 8d 04 e4                           	lea rax, [r12 + r12*8]
0xb5db:    48 8d 14 c0                           	lea rdx, [rax + rax*8]
0xb5df:    48 c1 e2 03                           	shl rdx, 3
0xb5e3:    4c 89 f6                              	mov rsi, r14
0xb5e6:    e8 7d 35 03 00                        	call 0x3eb68 <memcpy>
0xb5eb:    45 85 ff                              	test r15d, r15d
0xb5ee:    75 1d                                 	jne 0xb60d <DTV_SaveBCASCommand+0xdf>
0xb5f0:    4c 03 a3 c8 26 09 00                  	add r12, qword ptr [rbx + 0x926c8]
0xb5f7:    49 83 fc 10                           	cmp r12, 0x10
0xb5fb:    b8 00 00 00 00                        	mov eax, 0
0xb600:    4c 0f 44 e0                           	cmove r12, rax
0xb604:    4c 89 a3 c8 26 09 00                  	mov qword ptr [rbx + 0x926c8], r12
0xb60b:    eb 22                                 	jmp 0xb62f <DTV_SaveBCASCommand+0x101>
0xb60d:    4d 63 ff                              	movsxd r15, r15d
0xb610:    4b 8d 04 ff                           	lea rax, [r15 + r15*8]
0xb614:    48 8d 14 c0                           	lea rdx, [rax + rax*8]
0xb618:    48 c1 e2 03                           	shl rdx, 3
0xb61c:    4c 89 f6                              	mov rsi, r14
0xb61f:    48 8b 7d c8                           	mov rdi, qword ptr [rbp - 0x38]
0xb623:    e8 40 35 03 00                        	call 0x3eb68 <memcpy>
0xb628:    4c 89 bb c8 26 09 00                  	mov qword ptr [rbx + 0x926c8], r15
0xb62f:    48 8b 83 d0 26 09 00                  	mov rax, qword ptr [rbx + 0x926d0]
0xb636:    48 83 f8 10                           	cmp rax, 0x10
0xb63a:    75 10                                 	jne 0xb64c <DTV_SaveBCASCommand+0x11e>
0xb63c:    48 8b 83 c8 26 09 00                  	mov rax, qword ptr [rbx + 0x926c8]
0xb643:    48 89 83 c0 26 09 00                  	mov qword ptr [rbx + 0x926c0], rax
0xb64a:    eb 2c                                 	jmp 0xb678 <DTV_SaveBCASCommand+0x14a>
0xb64c:    48 83 c0 01                           	add rax, 1
0xb650:    48 83 f8 10                           	cmp rax, 0x10
0xb654:    76 1b                                 	jbe 0xb671 <DTV_SaveBCASCommand+0x143>
0xb656:    48 8b 83 c8 26 09 00                  	mov rax, qword ptr [rbx + 0x926c8]
0xb65d:    48 89 83 c0 26 09 00                  	mov qword ptr [rbx + 0x926c0], rax
0xb664:    48 c7 83 d0 26 09 00 10 00 00 00      	mov qword ptr [rbx + 0x926d0], 0x10
0xb66f:    eb 07                                 	jmp 0xb678 <DTV_SaveBCASCommand+0x14a>
0xb671:    48 89 83 d0 26 09 00                  	mov qword ptr [rbx + 0x926d0], rax
0xb678:    c6 83 d8 26 09 00 00                  	mov byte ptr [rbx + 0x926d8], 0
0xb67f:    4c 89 ef                              	mov rdi, r13
0xb682:    e8 d1 34 03 00                        	call 0x3eb58 <up>
0xb687:    b8 01 00 00 00                        	mov eax, 1
0xb68c:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0xb690:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0xb694:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0xb698:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xb69c:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xb6a0:    c9                                    	leave 
0xb6a1:    c3                                    	ret 
0xb6a2:    48 8d 04 c0                           	lea rax, [rax + rax*8]
0xb6a6:    48 8d 04 c0                           	lea rax, [rax + rax*8]
0xb6aa:    48 8d bc c3 40 fe 08 00               	lea rdi, [rbx + rax*8 + 0x8fe40]
0xb6b2:    4c 89 f6                              	mov rsi, r14
0xb6b5:    b8 88 02 00 00                        	mov eax, 0x288
0xb6ba:    40 f6 c7 01                           	test dil, 1
0xb6be:    74 11                                 	je 0xb6d1 <DTV_SaveBCASCommand+0x1a3>
0xb6c0:    41 0f b6 16                           	movzx edx, byte ptr [r14]
0xb6c4:    88 17                                 	mov byte ptr [rdi], dl
0xb6c6:    48 83 c7 01                           	add rdi, 1
0xb6ca:    48 83 c6 01                           	add rsi, 1
0xb6ce:    83 e8 01                              	sub eax, 1
0xb6d1:    40 f6 c7 02                           	test dil, 2
0xb6d5:    74 11                                 	je 0xb6e8 <DTV_SaveBCASCommand+0x1ba>
0xb6d7:    0f b7 16                              	movzx edx, word ptr [rsi]
0xb6da:    66 89 17                              	mov word ptr [rdi], dx
0xb6dd:    48 83 c7 02                           	add rdi, 2
0xb6e1:    48 83 c6 02                           	add rsi, 2
0xb6e5:    83 e8 02                              	sub eax, 2
0xb6e8:    40 f6 c7 04                           	test dil, 4
0xb6ec:    74 0f                                 	je 0xb6fd <DTV_SaveBCASCommand+0x1cf>
0xb6ee:    8b 16                                 	mov edx, dword ptr [rsi]
0xb6f0:    89 17                                 	mov dword ptr [rdi], edx
0xb6f2:    48 83 c7 04                           	add rdi, 4
0xb6f6:    48 83 c6 04                           	add rsi, 4
0xb6fa:    83 e8 04                              	sub eax, 4
0xb6fd:    89 c1                                 	mov ecx, eax
0xb6ff:    c1 e9 03                              	shr ecx, 3
0xb702:    89 c9                                 	mov ecx, ecx
0xb704:    f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0xb707:    ba 00 00 00 00                        	mov edx, 0
0xb70c:    a8 04                                 	test al, 4
; function: DTV_GetTSReSync at 0xb70e -- 0xb73e
0xb70e:    74 08                                 	je 0xb718 <DTV_GetTSReSync+0xa>
0xb710:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xb712:    89 0f                                 	mov dword ptr [rdi], ecx
0xb714:    48 83 c2 04                           	add rdx, 4
0xb718:    a8 02                                 	test al, 2
0xb71a:    74 0c                                 	je 0xb728 <DTV_GetTSReSync+0x1a>
0xb71c:    0f b7 0c 16                           	movzx ecx, word ptr [rsi + rdx]
0xb720:    66 89 0c 17                           	mov word ptr [rdi + rdx], cx
0xb724:    48 83 c2 02                           	add rdx, 2
0xb728:    a8 01                                 	test al, 1
0xb72a:    74 07                                 	je 0xb733 <DTV_GetTSReSync+0x25>
0xb72c:    0f b6 04 16                           	movzx eax, byte ptr [rsi + rdx]
0xb730:    88 04 17                              	mov byte ptr [rdi + rdx], al
0xb733:    41 bc 01 00 00 00                     	mov r12d, 1
0xb739:    e9 b2 fe ff ff                        	jmp 0xb5f0
; function: DTV_GetTSReSync at 0xb73e -- 0xb877
0xb73e:    55                                    	push rbp
0xb73f:    48 89 e5                              	mov rbp, rsp
0xb742:    48 83 ec 40                           	sub rsp, 0x40
0xb746:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xb74a:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xb74e:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xb752:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xb756:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xb75a:    e8 91 34 03 00                        	call 0x3ebf0 <mcount>
0xb75f:    48 89 fb                              	mov rbx, rdi
0xb762:    49 89 f5                              	mov r13, rsi
0xb765:    49 89 d4                              	mov r12, rdx
0xb768:    48 85 ff                              	test rdi, rdi
0xb76b:    0f 84 21 01 00 00                     	je 0xb892
0xb771:    4c 8b b7 38 1d 00 00                  	mov r14, qword ptr [rdi + 0x1d38]
0xb778:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb77d:    48 81 ff 20 02 f7 ff                  	cmp rdi, -0x8fde0
0xb784:    0f 84 0d 01 00 00                     	je 0xb897
0xb78a:    48 83 bf 30 fe 08 00 00               	cmp qword ptr [rdi + 0x8fe30], 0
0xb792:    0f 84 fa 00 00 00                     	je 0xb892
0xb798:    49 81 c6 a0 01 00 00                  	add r14, 0x1a0
0xb79f:    4c 89 f7                              	mov rdi, r14
0xb7a2:    e8 31 34 03 00                        	call 0x3ebd8 <down>
0xb7a7:    80 bb 38 fe 08 00 01                  	cmp byte ptr [rbx + 0x8fe38], 1
0xb7ae:    75 12                                 	jne 0xb7c2 <DTV_GetTSReSync+0x84>
0xb7b0:    4c 89 f7                              	mov rdi, r14
0xb7b3:    e8 a0 33 03 00                        	call 0x3eb58 <up>
0xb7b8:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb7bd:    e9 d5 00 00 00                        	jmp 0xb897
0xb7c2:    48 8b 83 30 fe 08 00                  	mov rax, qword ptr [rbx + 0x8fe30]
0xb7c9:    49 39 c4                              	cmp r12, rax
0xb7cc:    4c 0f 47 e0                           	cmova r12, rax
0xb7d0:    c6 83 38 fe 08 00 01                  	mov byte ptr [rbx + 0x8fe38], 1
0xb7d7:    48 8b b3 20 fe 08 00                  	mov rsi, qword ptr [rbx + 0x8fe20]
0xb7de:    49 8d 04 34                           	lea rax, [r12 + rsi]
0xb7e2:    48 83 f8 40                           	cmp rax, 0x40
0xb7e6:    76 5e                                 	jbe 0xb846 <DTV_GetTSReSync+0x108>
0xb7e8:    41 bf 40 00 00 00                     	mov r15d, 0x40
0xb7ee:    49 29 f7                              	sub r15, rsi
0xb7f1:    4c 89 e0                              	mov rax, r12
0xb7f4:    4c 29 f8                              	sub rax, r15
0xb7f7:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xb7fb:    48 8d 83 e0 fd 08 00                  	lea rax, [rbx + 0x8fde0]
0xb802:    48 89 45 c0                           	mov qword ptr [rbp - 0x40], rax
0xb806:    48 01 c6                              	add rsi, rax
0xb809:    4c 89 fa                              	mov rdx, r15
0xb80c:    4c 89 ef                              	mov rdi, r13
0xb80f:    e8 54 33 03 00                        	call 0x3eb68 <memcpy>
0xb814:    48 8b 83 20 fe 08 00                  	mov rax, qword ptr [rbx + 0x8fe20]
0xb81b:    49 8d 74 07 c0                        	lea rsi, [r15 + rax - 0x40]
0xb820:    48 89 b3 20 fe 08 00                  	mov qword ptr [rbx + 0x8fe20], rsi
0xb827:    4b 8d 7c 3d 00                        	lea rdi, [r13 + r15]
0xb82c:    48 03 75 c0                           	add rsi, qword ptr [rbp - 0x40]
0xb830:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0xb834:    e8 2f 33 03 00                        	call 0x3eb68 <memcpy>
0xb839:    48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0xb83d:    48 01 83 20 fe 08 00                  	add qword ptr [rbx + 0x8fe20], rax
0xb844:    eb 31                                 	jmp 0xb877 <DTV_GetTSReSync+0x132>
0xb846:    48 8d b4 33 e0 fd 08 00               	lea rsi, [rbx + rsi + 0x8fde0]
0xb84e:    4c 89 e2                              	mov rdx, r12
0xb851:    4c 89 ef                              	mov rdi, r13
0xb854:    e8 0f 33 03 00                        	call 0x3eb68 <memcpy>
0xb859:    4c 89 e0                              	mov rax, r12
0xb85c:    48 03 83 20 fe 08 00                  	add rax, qword ptr [rbx + 0x8fe20]
0xb863:    48 83 f8 40                           	cmp rax, 0x40
0xb867:    ba 00 00 00 00                        	mov edx, 0
0xb86c:    48 0f 44 c2                           	cmove rax, rdx
0xb870:    48 89 83 20 fe 08 00                  	mov qword ptr [rbx + 0x8fe20], rax
; data inside code section at 0xb877 -- 0xb87d
0xb877:    4c 29 a3 30 fe 08                                  |L).0..          |
; function: DTV_SaveTSReSync at 0xb87d -- 0xb8ad
0xb87d:    00 c6                                 	add dh, al
0xb87f:    83 38 fe                              	cmp dword ptr [rax], -2
0xb882:    08 00                                 	or byte ptr [rax], al
0xb884:    00 4c 89 f7                           	add byte ptr [rcx + rcx*4 - 9], cl
0xb888:    e8 cb 32 03 00                        	call 0x3eb58 <up>
0xb88d:    44 89 e0                              	mov eax, r12d
0xb890:    eb 05                                 	jmp 0xb897 <DTV_SaveTSReSync+0x1a>
0xb892:    b8 00 00 00 00                        	mov eax, 0
0xb897:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0xb89b:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0xb89f:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0xb8a3:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xb8a7:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xb8ab:    c9                                    	leave 
0xb8ac:    c3                                    	ret 
; function: DTV_SaveTSReSync at 0xb8ad -- 0xb9ec
0xb8ad:    55                                    	push rbp
0xb8ae:    48 89 e5                              	mov rbp, rsp
0xb8b1:    48 83 ec 40                           	sub rsp, 0x40
0xb8b5:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xb8b9:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xb8bd:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xb8c1:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xb8c5:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xb8c9:    e8 22 33 03 00                        	call 0x3ebf0 <mcount>
0xb8ce:    48 89 fb                              	mov rbx, rdi
0xb8d1:    49 89 f4                              	mov r12, rsi
0xb8d4:    b8 00 00 00 00                        	mov eax, 0
0xb8d9:    48 85 ff                              	test rdi, rdi
0xb8dc:    0f 84 0f 01 00 00                     	je 0xb9f1
0xb8e2:    4c 8b af 38 1d 00 00                  	mov r13, qword ptr [rdi + 0x1d38]
0xb8e9:    49 81 c5 a0 01 00 00                  	add r13, 0x1a0
0xb8f0:    4c 89 ef                              	mov rdi, r13
0xb8f3:    e8 e0 32 03 00                        	call 0x3ebd8 <down>
0xb8f8:    80 bb 38 fe 08 00 01                  	cmp byte ptr [rbx + 0x8fe38], 1
0xb8ff:    75 12                                 	jne 0xb913 <DTV_SaveTSReSync+0x66>
0xb901:    4c 89 ef                              	mov rdi, r13
0xb904:    e8 4f 32 03 00                        	call 0x3eb58 <up>
0xb909:    b8 00 00 00 00                        	mov eax, 0
0xb90e:    e9 de 00 00 00                        	jmp 0xb9f1
0xb913:    c6 83 38 fe 08 00 01                  	mov byte ptr [rbx + 0x8fe38], 1
0xb91a:    48 8b bb 28 fe 08 00                  	mov rdi, qword ptr [rbx + 0x8fe28]
0xb921:    48 8d 47 01                           	lea rax, [rdi + 1]
0xb925:    48 83 f8 40                           	cmp rax, 0x40
0xb929:    0f 86 d8 00 00 00                     	jbe 0xba07
0xb92f:    44 8d 7f c1                           	lea r15d, [rdi - 0x3f]
0xb933:    41 be 01 00 00 00                     	mov r14d, 1
0xb939:    45 29 fe                              	sub r14d, r15d
0xb93c:    4d 63 f6                              	movsxd r14, r14d
0xb93f:    48 8d 83 e0 fd 08 00                  	lea rax, [rbx + 0x8fde0]
0xb946:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xb94a:    48 01 c7                              	add rdi, rax
0xb94d:    4c 89 f2                              	mov rdx, r14
0xb950:    4c 89 e6                              	mov rsi, r12
0xb953:    e8 10 32 03 00                        	call 0x3eb68 <memcpy>
0xb958:    45 85 ff                              	test r15d, r15d
0xb95b:    75 1d                                 	jne 0xb97a <DTV_SaveTSReSync+0xcd>
0xb95d:    4c 03 b3 28 fe 08 00                  	add r14, qword ptr [rbx + 0x8fe28]
0xb964:    49 83 fe 40                           	cmp r14, 0x40
0xb968:    b8 00 00 00 00                        	mov eax, 0
0xb96d:    4c 0f 44 f0                           	cmove r14, rax
0xb971:    4c 89 b3 28 fe 08 00                  	mov qword ptr [rbx + 0x8fe28], r14
0xb978:    eb 1a                                 	jmp 0xb994 <DTV_SaveTSReSync+0xe7>
0xb97a:    4d 63 ff                              	movsxd r15, r15d
0xb97d:    4b 8d 34 34                           	lea rsi, [r12 + r14]
0xb981:    4c 89 fa                              	mov rdx, r15
0xb984:    48 8b 7d c8                           	mov rdi, qword ptr [rbp - 0x38]
0xb988:    e8 db 31 03 00                        	call 0x3eb68 <memcpy>
0xb98d:    4c 89 bb 28 fe 08 00                  	mov qword ptr [rbx + 0x8fe28], r15
0xb994:    48 8b 83 30 fe 08 00                  	mov rax, qword ptr [rbx + 0x8fe30]
0xb99b:    48 83 f8 40                           	cmp rax, 0x40
0xb99f:    75 10                                 	jne 0xb9b1 <DTV_SaveTSReSync+0x104>
0xb9a1:    48 8b 83 28 fe 08 00                  	mov rax, qword ptr [rbx + 0x8fe28]
0xb9a8:    48 89 83 20 fe 08 00                  	mov qword ptr [rbx + 0x8fe20], rax
0xb9af:    eb 2c                                 	jmp 0xb9dd <DTV_SaveTSReSync+0x130>
0xb9b1:    48 83 c0 01                           	add rax, 1
0xb9b5:    48 83 f8 40                           	cmp rax, 0x40
0xb9b9:    76 1b                                 	jbe 0xb9d6 <DTV_SaveTSReSync+0x129>
0xb9bb:    48 8b 83 28 fe 08 00                  	mov rax, qword ptr [rbx + 0x8fe28]
0xb9c2:    48 89 83 20 fe 08 00                  	mov qword ptr [rbx + 0x8fe20], rax
0xb9c9:    48 c7 83 30 fe 08 00 40 00 00 00      	mov qword ptr [rbx + 0x8fe30], 0x40
0xb9d4:    eb 07                                 	jmp 0xb9dd <DTV_SaveTSReSync+0x130>
0xb9d6:    48 89 83 30 fe 08 00                  	mov qword ptr [rbx + 0x8fe30], rax
0xb9dd:    c6 83 38 fe 08 00 00                  	mov byte ptr [rbx + 0x8fe38], 0
0xb9e4:    4c 89 ef                              	mov rdi, r13
0xb9e7:    e8 6c 31 03 00                        	call 0x3eb58 <up>
; data inside code section at 0xb9ec -- 0xb9ee
0xb9ec:    b8 01                                              |..              |
; function: DTV_GetBcasReturnCode at 0xb9ee -- 0xba1e
0xb9ee:    00 00                                 	add byte ptr [rax], al
0xb9f0:    00 48 8b                              	add byte ptr [rax - 0x75], cl
0xb9f3:    5d                                    	pop rbp
0xb9f4:    d8 4c 8b 65                           	fmul dword ptr [rbx + rcx*4 + 0x65]
0xb9f8:    e0 4c                                 	loopne 0xba46
0xb9fa:    8b 6d e8                              	mov ebp, dword ptr [rbp - 0x18]
0xb9fd:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xba01:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xba05:    c9                                    	leave 
0xba06:    c3                                    	ret 
0xba07:    41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0xba0c:    88 84 3b e0 fd 08 00                  	mov byte ptr [rbx + rdi + 0x8fde0], al
0xba13:    41 be 01 00 00 00                     	mov r14d, 1
0xba19:    e9 3f ff ff ff                        	jmp 0xb95d
; function: DTV_GetBcasReturnCode at 0xba1e -- 0xbb57
0xba1e:    55                                    	push rbp
0xba1f:    48 89 e5                              	mov rbp, rsp
0xba22:    48 83 ec 40                           	sub rsp, 0x40
0xba26:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xba2a:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xba2e:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xba32:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xba36:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xba3a:    e8 b1 31 03 00                        	call 0x3ebf0 <mcount>
0xba3f:    48 89 fb                              	mov rbx, rdi
0xba42:    49 89 f5                              	mov r13, rsi
; data inside code section at 0xba45 -- 0xba46
0xba45:    49                                                 |I               |
0xba46:    89 d4                                 	mov esp, edx
0xba48:    48 85 ff                              	test rdi, rdi
0xba4b:    0f 84 21 01 00 00                     	je 0xbb72
0xba51:    4c 8b b7 38 1d 00 00                  	mov r14, qword ptr [rdi + 0x1d38]
0xba58:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xba5d:    48 81 ff 80 02 f7 ff                  	cmp rdi, -0x8fd80
0xba64:    0f 84 0d 01 00 00                     	je 0xbb77
0xba6a:    48 83 bf d0 fd 08 00 00               	cmp qword ptr [rdi + 0x8fdd0], 0
0xba72:    0f 84 fa 00 00 00                     	je 0xbb72
0xba78:    49 81 c6 88 01 00 00                  	add r14, 0x188
0xba7f:    4c 89 f7                              	mov rdi, r14
0xba82:    e8 51 31 03 00                        	call 0x3ebd8 <down>
0xba87:    80 bb d8 fd 08 00 01                  	cmp byte ptr [rbx + 0x8fdd8], 1
0xba8e:    75 12                                 	jne 0xbaa2 <DTV_GetBcasReturnCode+0x84>
0xba90:    4c 89 f7                              	mov rdi, r14
0xba93:    e8 c0 30 03 00                        	call 0x3eb58 <up>
0xba98:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xba9d:    e9 d5 00 00 00                        	jmp 0xbb77
0xbaa2:    48 8b 83 d0 fd 08 00                  	mov rax, qword ptr [rbx + 0x8fdd0]
0xbaa9:    49 39 c4                              	cmp r12, rax
0xbaac:    4c 0f 47 e0                           	cmova r12, rax
0xbab0:    c6 83 d8 fd 08 00 01                  	mov byte ptr [rbx + 0x8fdd8], 1
0xbab7:    48 8b b3 c0 fd 08 00                  	mov rsi, qword ptr [rbx + 0x8fdc0]
0xbabe:    49 8d 04 34                           	lea rax, [r12 + rsi]
0xbac2:    48 83 f8 40                           	cmp rax, 0x40
0xbac6:    76 5e                                 	jbe 0xbb26 <DTV_GetBcasReturnCode+0x108>
0xbac8:    41 bf 40 00 00 00                     	mov r15d, 0x40
0xbace:    49 29 f7                              	sub r15, rsi
0xbad1:    4c 89 e0                              	mov rax, r12
0xbad4:    4c 29 f8                              	sub rax, r15
0xbad7:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xbadb:    48 8d 83 80 fd 08 00                  	lea rax, [rbx + 0x8fd80]
0xbae2:    48 89 45 c0                           	mov qword ptr [rbp - 0x40], rax
0xbae6:    48 01 c6                              	add rsi, rax
0xbae9:    4c 89 fa                              	mov rdx, r15
0xbaec:    4c 89 ef                              	mov rdi, r13
0xbaef:    e8 74 30 03 00                        	call 0x3eb68 <memcpy>
0xbaf4:    48 8b 83 c0 fd 08 00                  	mov rax, qword ptr [rbx + 0x8fdc0]
0xbafb:    49 8d 74 07 c0                        	lea rsi, [r15 + rax - 0x40]
0xbb00:    48 89 b3 c0 fd 08 00                  	mov qword ptr [rbx + 0x8fdc0], rsi
0xbb07:    4b 8d 7c 3d 00                        	lea rdi, [r13 + r15]
0xbb0c:    48 03 75 c0                           	add rsi, qword ptr [rbp - 0x40]
0xbb10:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0xbb14:    e8 4f 30 03 00                        	call 0x3eb68 <memcpy>
0xbb19:    48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0xbb1d:    48 01 83 c0 fd 08 00                  	add qword ptr [rbx + 0x8fdc0], rax
0xbb24:    eb 31                                 	jmp 0xbb57 <DTV_GetBcasReturnCode+0x132>
0xbb26:    48 8d b4 33 80 fd 08 00               	lea rsi, [rbx + rsi + 0x8fd80]
0xbb2e:    4c 89 e2                              	mov rdx, r12
0xbb31:    4c 89 ef                              	mov rdi, r13
0xbb34:    e8 2f 30 03 00                        	call 0x3eb68 <memcpy>
0xbb39:    4c 89 e0                              	mov rax, r12
0xbb3c:    48 03 83 c0 fd 08 00                  	add rax, qword ptr [rbx + 0x8fdc0]
0xbb43:    48 83 f8 40                           	cmp rax, 0x40
0xbb47:    ba 00 00 00 00                        	mov edx, 0
0xbb4c:    48 0f 44 c2                           	cmove rax, rdx
0xbb50:    48 89 83 c0 fd 08 00                  	mov qword ptr [rbx + 0x8fdc0], rax
; data inside code section at 0xbb57 -- 0xbb5d
0xbb57:    4c 29 a3 d0 fd 08                                  |L)....          |
; function: DTV_SaveBcasReturnCode at 0xbb5d -- 0xbb8d
0xbb5d:    00 c6                                 	add dh, al
0xbb5f:    83 d8 fd                              	sbb eax, -3
0xbb62:    08 00                                 	or byte ptr [rax], al
0xbb64:    00 4c 89 f7                           	add byte ptr [rcx + rcx*4 - 9], cl
0xbb68:    e8 eb 2f 03 00                        	call 0x3eb58 <up>
0xbb6d:    44 89 e0                              	mov eax, r12d
0xbb70:    eb 05                                 	jmp 0xbb77 <DTV_SaveBcasReturnCode+0x1a>
0xbb72:    b8 00 00 00 00                        	mov eax, 0
0xbb77:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0xbb7b:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0xbb7f:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0xbb83:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xbb87:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xbb8b:    c9                                    	leave 
0xbb8c:    c3                                    	ret 
; function: DTV_SaveBcasReturnCode at 0xbb8d -- 0xbccc
0xbb8d:    55                                    	push rbp
0xbb8e:    48 89 e5                              	mov rbp, rsp
0xbb91:    48 83 ec 40                           	sub rsp, 0x40
0xbb95:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xbb99:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xbb9d:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xbba1:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xbba5:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xbba9:    e8 42 30 03 00                        	call 0x3ebf0 <mcount>
0xbbae:    48 89 fb                              	mov rbx, rdi
0xbbb1:    49 89 f4                              	mov r12, rsi
0xbbb4:    b8 00 00 00 00                        	mov eax, 0
0xbbb9:    48 85 ff                              	test rdi, rdi
0xbbbc:    0f 84 0f 01 00 00                     	je 0xbcd1
0xbbc2:    4c 8b af 38 1d 00 00                  	mov r13, qword ptr [rdi + 0x1d38]
0xbbc9:    49 81 c5 88 01 00 00                  	add r13, 0x188
0xbbd0:    4c 89 ef                              	mov rdi, r13
0xbbd3:    e8 00 30 03 00                        	call 0x3ebd8 <down>
0xbbd8:    80 bb d8 fd 08 00 01                  	cmp byte ptr [rbx + 0x8fdd8], 1
0xbbdf:    75 12                                 	jne 0xbbf3 <DTV_SaveBcasReturnCode+0x66>
0xbbe1:    4c 89 ef                              	mov rdi, r13
0xbbe4:    e8 6f 2f 03 00                        	call 0x3eb58 <up>
0xbbe9:    b8 00 00 00 00                        	mov eax, 0
0xbbee:    e9 de 00 00 00                        	jmp 0xbcd1
0xbbf3:    c6 83 d8 fd 08 00 01                  	mov byte ptr [rbx + 0x8fdd8], 1
0xbbfa:    48 8b bb c8 fd 08 00                  	mov rdi, qword ptr [rbx + 0x8fdc8]
0xbc01:    48 8d 47 04                           	lea rax, [rdi + 4]
0xbc05:    48 83 f8 40                           	cmp rax, 0x40
0xbc09:    0f 86 d8 00 00 00                     	jbe 0xbce7
0xbc0f:    44 8d 7f c4                           	lea r15d, [rdi - 0x3c]
0xbc13:    41 be 04 00 00 00                     	mov r14d, 4
0xbc19:    45 29 fe                              	sub r14d, r15d
0xbc1c:    4d 63 f6                              	movsxd r14, r14d
0xbc1f:    48 8d 83 80 fd 08 00                  	lea rax, [rbx + 0x8fd80]
0xbc26:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xbc2a:    48 01 c7                              	add rdi, rax
0xbc2d:    4c 89 f2                              	mov rdx, r14
0xbc30:    4c 89 e6                              	mov rsi, r12
0xbc33:    e8 30 2f 03 00                        	call 0x3eb68 <memcpy>
0xbc38:    45 85 ff                              	test r15d, r15d
0xbc3b:    75 1d                                 	jne 0xbc5a <DTV_SaveBcasReturnCode+0xcd>
0xbc3d:    4c 03 b3 c8 fd 08 00                  	add r14, qword ptr [rbx + 0x8fdc8]
0xbc44:    49 83 fe 40                           	cmp r14, 0x40
0xbc48:    b8 00 00 00 00                        	mov eax, 0
0xbc4d:    4c 0f 44 f0                           	cmove r14, rax
0xbc51:    4c 89 b3 c8 fd 08 00                  	mov qword ptr [rbx + 0x8fdc8], r14
0xbc58:    eb 1a                                 	jmp 0xbc74 <DTV_SaveBcasReturnCode+0xe7>
0xbc5a:    4d 63 ff                              	movsxd r15, r15d
0xbc5d:    4b 8d 34 34                           	lea rsi, [r12 + r14]
0xbc61:    4c 89 fa                              	mov rdx, r15
0xbc64:    48 8b 7d c8                           	mov rdi, qword ptr [rbp - 0x38]
0xbc68:    e8 fb 2e 03 00                        	call 0x3eb68 <memcpy>
0xbc6d:    4c 89 bb c8 fd 08 00                  	mov qword ptr [rbx + 0x8fdc8], r15
0xbc74:    48 8b 83 d0 fd 08 00                  	mov rax, qword ptr [rbx + 0x8fdd0]
0xbc7b:    48 83 f8 40                           	cmp rax, 0x40
0xbc7f:    75 10                                 	jne 0xbc91 <DTV_SaveBcasReturnCode+0x104>
0xbc81:    48 8b 83 c8 fd 08 00                  	mov rax, qword ptr [rbx + 0x8fdc8]
0xbc88:    48 89 83 c0 fd 08 00                  	mov qword ptr [rbx + 0x8fdc0], rax
0xbc8f:    eb 2c                                 	jmp 0xbcbd <DTV_SaveBcasReturnCode+0x130>
0xbc91:    48 83 c0 04                           	add rax, 4
0xbc95:    48 83 f8 40                           	cmp rax, 0x40
0xbc99:    76 1b                                 	jbe 0xbcb6 <DTV_SaveBcasReturnCode+0x129>
0xbc9b:    48 8b 83 c8 fd 08 00                  	mov rax, qword ptr [rbx + 0x8fdc8]
0xbca2:    48 89 83 c0 fd 08 00                  	mov qword ptr [rbx + 0x8fdc0], rax
0xbca9:    48 c7 83 d0 fd 08 00 40 00 00 00      	mov qword ptr [rbx + 0x8fdd0], 0x40
0xbcb4:    eb 07                                 	jmp 0xbcbd <DTV_SaveBcasReturnCode+0x130>
0xbcb6:    48 89 83 d0 fd 08 00                  	mov qword ptr [rbx + 0x8fdd0], rax
0xbcbd:    c6 83 d8 fd 08 00 00                  	mov byte ptr [rbx + 0x8fdd8], 0
0xbcc4:    4c 89 ef                              	mov rdi, r13
0xbcc7:    e8 8c 2e 03 00                        	call 0x3eb58 <up>
; data inside code section at 0xbccc -- 0xbccd
0xbccc:    b8                                                 |.               |
; function: DTV_GetProgramNumber_ByPID at 0xbccd -- 0xbcfd
0xbccd:    01 00                                 	add dword ptr [rax], eax
0xbccf:    00 00                                 	add byte ptr [rax], al
0xbcd1:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0xbcd5:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0xbcd9:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0xbcdd:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xbce1:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xbce5:    c9                                    	leave 
0xbce6:    c3                                    	ret 
0xbce7:    41 8b 04 24                           	mov eax, dword ptr [r12]
0xbceb:    89 84 3b 80 fd 08 00                  	mov dword ptr [rbx + rdi + 0x8fd80], eax
0xbcf2:    41 be 04 00 00 00                     	mov r14d, 4
0xbcf8:    e9 40 ff ff ff                        	jmp 0xbc3d
; function: DTV_GetProgramNumber_ByPID at 0xbcfd -- 0xbd24
0xbcfd:    55                                    	push rbp
0xbcfe:    48 89 e5                              	mov rbp, rsp
0xbd01:    e8 ea 2e 03 00                        	call 0x3ebf0 <mcount>
0xbd06:    c7 02 00 00 00 00                     	mov dword ptr [rdx], 0
0xbd0c:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xbd11:    48 85 ff                              	test rdi, rdi
0xbd14:    74 3e                                 	je 0xbd54
0xbd16:    b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0xbd1b:    83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0xbd22:    74 30                                 	je 0xbd54
; data inside code section at 0xbd24 -- 0xbd26
0xbd24:    48 8b                                              |H.              |
; function: DTV_GetResetMulti2LibFlag at 0xbd26 -- 0xbd56
0xbd26:    87 b0 fa 08 00 48                     	xchg dword ptr [rax + 0x480008fa], esi
0xbd2c:    85 c0                                 	test eax, eax
0xbd2e:    74 1f                                 	je 0xbd4f <DTV_GetResetMulti2LibFlag+0x29>
0xbd30:    80 bf bc fa 08 00 00                  	cmp byte ptr [rdi + 0x8fabc], 0
0xbd37:    74 16                                 	je 0xbd4f <DTV_GetResetMulti2LibFlag+0x29>
0xbd39:    0f b7 f6                              	movzx esi, si
0xbd3c:    48 89 c7                              	mov rdi, rax
0xbd3f:    e8 30 a6 00 00                        	call 0x16374 <TS_GetProgramNumber_ByPID>
0xbd44:    89 c2                                 	mov edx, eax
0xbd46:    b8 fe ff ff ff                        	mov eax, 0xfffffffe
0xbd4b:    84 d2                                 	test dl, dl
0xbd4d:    74 05                                 	je 0xbd54 <DTV_GetResetMulti2LibFlag+0x2e>
0xbd4f:    b8 01 00 00 00                        	mov eax, 1
0xbd54:    c9                                    	leave 
0xbd55:    c3                                    	ret 
; function: DTV_GetResetMulti2LibFlag at 0xbd56 -- 0xbd64
0xbd56:    55                                    	push rbp
0xbd57:    48 89 e5                              	mov rbp, rsp
0xbd5a:    e8 91 2e 03 00                        	call 0x3ebf0 <mcount>
0xbd5f:    48 85 ff                              	test rdi, rdi
0xbd62:    74 2e                                 	je 0xbd92
; data inside code section at 0xbd64 -- 0xbd69
0xbd64:    48 8b 87 b0 fa                                     |H....           |
; function: DTV_GetContentAvailabilityDescriptor at 0xbd69 -- 0xbd99
0xbd69:    08 00                                 	or byte ptr [rax], al
0xbd6b:    48 85 c0                              	test rax, rax
0xbd6e:    74 22                                 	je 0xbd92 <DTV_GetContentAvailabilityDescriptor+0x29>
0xbd70:    80 bf bc fa 08 00 00                  	cmp byte ptr [rdi + 0x8fabc], 0
0xbd77:    74 0f                                 	je 0xbd88 <DTV_GetContentAvailabilityDescriptor+0x1f>
0xbd79:    48 89 c7                              	mov rdi, rax
0xbd7c:    e8 58 a5 00 00                        	call 0x162d9 <TS_GetResetMulti2LibFlag>
0xbd81:    b8 01 00 00 00                        	mov eax, 1
0xbd86:    eb 0f                                 	jmp 0xbd97 <DTV_GetContentAvailabilityDescriptor+0x2e>
0xbd88:    c6 06 00                              	mov byte ptr [rsi], 0
0xbd8b:    b8 01 00 00 00                        	mov eax, 1
0xbd90:    eb 05                                 	jmp 0xbd97 <DTV_GetContentAvailabilityDescriptor+0x2e>
0xbd92:    b8 00 00 00 00                        	mov eax, 0
0xbd97:    c9                                    	leave 
0xbd98:    c3                                    	ret 
; function: DTV_GetContentAvailabilityDescriptor at 0xbd99 -- 0xbdd4
0xbd99:    55                                    	push rbp
0xbd9a:    48 89 e5                              	mov rbp, rsp
0xbd9d:    53                                    	push rbx
0xbd9e:    48 83 ec 08                           	sub rsp, 8
0xbda2:    e8 49 2e 03 00                        	call 0x3ebf0 <mcount>
0xbda7:    48 89 cb                              	mov rbx, rcx
0xbdaa:    c7 01 00 00 00 00                     	mov dword ptr [rcx], 0
0xbdb0:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xbdb5:    48 85 ff                              	test rdi, rdi
0xbdb8:    74 44                                 	je 0xbdfe
0xbdba:    b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0xbdbf:    83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0xbdc6:    74 36                                 	je 0xbdfe
0xbdc8:    48 8b 87 b0 fa 08 00                  	mov rax, qword ptr [rdi + 0x8fab0]
0xbdcf:    48 85 c0                              	test rax, rax
0xbdd2:    74 25                                 	je 0xbdf9
; data inside code section at 0xbdd4 -- 0xbdd5
0xbdd4:    80                                                 |.               |
; function: DTV_GetDigitalCopyControlDescriptor at 0xbdd5 -- 0xbe05
0xbdd5:    bf bc fa 08 00                        	mov edi, 0x8fabc
0xbdda:    00 74 1c 0f                           	add byte ptr [rsp + rbx + 0xf], dh
0xbdde:    b7 f6                                 	mov bh, 0xf6
0xbde0:    48 89 c7                              	mov rdi, rax
0xbde3:    e8 4b a5 00 00                        	call 0x16333 <TS_GetContentAvailabilityDescriptor>
0xbde8:    84 c0                                 	test al, al
0xbdea:    75 0d                                 	jne 0xbdf9 <DTV_GetDigitalCopyControlDescriptor+0x24>
0xbdec:    c7 03 00 00 00 00                     	mov dword ptr [rbx], 0
0xbdf2:    b8 fe ff ff ff                        	mov eax, 0xfffffffe
0xbdf7:    eb 05                                 	jmp 0xbdfe <DTV_GetDigitalCopyControlDescriptor+0x29>
0xbdf9:    b8 01 00 00 00                        	mov eax, 1
0xbdfe:    48 83 c4 08                           	add rsp, 8
0xbe02:    5b                                    	pop rbx
0xbe03:    c9                                    	leave 
0xbe04:    c3                                    	ret 
; function: DTV_GetDigitalCopyControlDescriptor at 0xbe05 -- 0xbe40
0xbe05:    55                                    	push rbp
0xbe06:    48 89 e5                              	mov rbp, rsp
0xbe09:    53                                    	push rbx
0xbe0a:    48 83 ec 08                           	sub rsp, 8
0xbe0e:    e8 dd 2d 03 00                        	call 0x3ebf0 <mcount>
0xbe13:    48 89 cb                              	mov rbx, rcx
0xbe16:    c7 01 00 00 00 00                     	mov dword ptr [rcx], 0
0xbe1c:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xbe21:    48 85 ff                              	test rdi, rdi
0xbe24:    74 44                                 	je 0xbe6a
0xbe26:    b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0xbe2b:    83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0xbe32:    74 36                                 	je 0xbe6a
0xbe34:    48 8b 87 b0 fa 08 00                  	mov rax, qword ptr [rdi + 0x8fab0]
0xbe3b:    48 85 c0                              	test rax, rax
0xbe3e:    74 25                                 	je 0xbe65
; data inside code section at 0xbe40 -- 0xbe41
0xbe40:    80                                                 |.               |
; function: DTV_SetBCASCardExist at 0xbe41 -- 0xbe71
0xbe41:    bf bc fa 08 00                        	mov edi, 0x8fabc
0xbe46:    00 74 1c 0f                           	add byte ptr [rsp + rbx + 0xf], dh
0xbe4a:    b7 f6                                 	mov bh, 0xf6
0xbe4c:    48 89 c7                              	mov rdi, rax
0xbe4f:    e8 9e a4 00 00                        	call 0x162f2 <TS_GetDigitalCopyControlDescriptor>
0xbe54:    84 c0                                 	test al, al
0xbe56:    75 0d                                 	jne 0xbe65 <DTV_SetBCASCardExist+0x24>
0xbe58:    c7 03 00 00 00 00                     	mov dword ptr [rbx], 0
0xbe5e:    b8 fe ff ff ff                        	mov eax, 0xfffffffe
0xbe63:    eb 05                                 	jmp 0xbe6a <DTV_SetBCASCardExist+0x29>
0xbe65:    b8 01 00 00 00                        	mov eax, 1
0xbe6a:    48 83 c4 08                           	add rsp, 8
0xbe6e:    5b                                    	pop rbx
0xbe6f:    c9                                    	leave 
0xbe70:    c3                                    	ret 
; function: DTV_SetBCASCardExist at 0xbe71 -- 0xbe7f
0xbe71:    55                                    	push rbp
0xbe72:    48 89 e5                              	mov rbp, rsp
0xbe75:    e8 76 2d 03 00                        	call 0x3ebf0 <mcount>
0xbe7a:    48 85 ff                              	test rdi, rdi
0xbe7d:    74 2d                                 	je 0xbeac
; data inside code section at 0xbe7f -- 0xbe83
0xbe7f:    48 8b 97 b0                                        |H...            |
; function: DTV_GetIsStreamScramble at 0xbe83 -- 0xbeb3
0xbe83:    fa                                    	cli 
0xbe84:    08 00                                 	or byte ptr [rax], al
0xbe86:    48 85 d2                              	test rdx, rdx
0xbe89:    74 21                                 	je 0xbeac <DTV_GetIsStreamScramble+0x29>
0xbe8b:    b8 01 00 00 00                        	mov eax, 1
0xbe90:    80 bf bc fa 08 00 00                  	cmp byte ptr [rdi + 0x8fabc], 0
0xbe97:    74 18                                 	je 0xbeb1 <DTV_GetIsStreamScramble+0x2e>
0xbe99:    40 0f b6 f6                           	movzx esi, sil
0xbe9d:    48 89 d7                              	mov rdi, rdx
0xbea0:    e8 17 a4 00 00                        	call 0x162bc <TS_SetBCASCardExist>
0xbea5:    b8 01 00 00 00                        	mov eax, 1
0xbeaa:    eb 05                                 	jmp 0xbeb1 <DTV_GetIsStreamScramble+0x2e>
0xbeac:    b8 00 00 00 00                        	mov eax, 0
0xbeb1:    c9                                    	leave 
0xbeb2:    c3                                    	ret 
; function: DTV_GetIsStreamScramble at 0xbeb3 -- 0xbec1
0xbeb3:    55                                    	push rbp
0xbeb4:    48 89 e5                              	mov rbp, rsp
0xbeb7:    e8 34 2d 03 00                        	call 0x3ebf0 <mcount>
0xbebc:    48 85 ff                              	test rdi, rdi
0xbebf:    74 2e                                 	je 0xbeef
; data inside code section at 0xbec1 -- 0xbec6
0xbec1:    48 8b 87 b0 fa                                     |H....           |
; function: DTV_SetIsStreamScramble at 0xbec6 -- 0xbef6
0xbec6:    08 00                                 	or byte ptr [rax], al
0xbec8:    48 85 c0                              	test rax, rax
0xbecb:    74 22                                 	je 0xbeef <DTV_SetIsStreamScramble+0x29>
0xbecd:    80 bf bc fa 08 00 00                  	cmp byte ptr [rdi + 0x8fabc], 0
0xbed4:    74 0f                                 	je 0xbee5 <DTV_SetIsStreamScramble+0x1f>
0xbed6:    48 89 c7                              	mov rdi, rax
0xbed9:    e8 c5 a3 00 00                        	call 0x162a3 <TS_GetIsStreamScramble>
0xbede:    b8 01 00 00 00                        	mov eax, 1
0xbee3:    eb 0f                                 	jmp 0xbef4 <DTV_SetIsStreamScramble+0x2e>
0xbee5:    c6 06 01                              	mov byte ptr [rsi], 1
0xbee8:    b8 01 00 00 00                        	mov eax, 1
0xbeed:    eb 05                                 	jmp 0xbef4 <DTV_SetIsStreamScramble+0x2e>
0xbeef:    b8 00 00 00 00                        	mov eax, 0
0xbef4:    c9                                    	leave 
0xbef5:    c3                                    	ret 
; function: DTV_SetIsStreamScramble at 0xbef6 -- 0xbf04
0xbef6:    55                                    	push rbp
0xbef7:    48 89 e5                              	mov rbp, rsp
0xbefa:    e8 f1 2c 03 00                        	call 0x3ebf0 <mcount>
0xbeff:    48 85 ff                              	test rdi, rdi
0xbf02:    74 2d                                 	je 0xbf31
; data inside code section at 0xbf04 -- 0xbf08
0xbf04:    48 8b 97 b0                                        |H...            |
; function: TLIB_Delay_Middle at 0xbf08 -- 0xbf15
0xbf08:    fa                                    	cli 
0xbf09:    08 00                                 	or byte ptr [rax], al
0xbf0b:    48 85 d2                              	test rdx, rdx
0xbf0e:    74 21                                 	je 0xbf31
0xbf10:    b8 01 00 00 00                        	mov eax, 1
; data inside code section at 0xbf15 -- 0xbf18
0xbf15:    80 bf bc                                           |...             |
; function: DTV_SetTunerTSID at 0xbf18 -- 0xbf38
0xbf18:    fa                                    	cli 
0xbf19:    08 00                                 	or byte ptr [rax], al
0xbf1b:    00 74 18 40                           	add byte ptr [rax + rbx + 0x40], dh
0xbf1f:    0f b6 f6                              	movzx esi, dh
0xbf22:    48 89 d7                              	mov rdi, rdx
0xbf25:    e8 5f a3 00 00                        	call 0x16289 <TS_SetIsStreamScramble>
0xbf2a:    b8 01 00 00 00                        	mov eax, 1
0xbf2f:    eb 05                                 	jmp 0xbf36 <DTV_SetTunerTSID+0x1e>
0xbf31:    b8 00 00 00 00                        	mov eax, 0
0xbf36:    c9                                    	leave 
0xbf37:    c3                                    	ret 
; function: TLIB_Delay_Middle at 0xbf38 -- 0xbf48
0xbf38:    55                                    	push rbp
0xbf39:    48 89 e5                              	mov rbp, rsp
0xbf3c:    e8 af 2c 03 00                        	call 0x3ebf0 <mcount>
0xbf41:    e8 5b 0c 01 00                        	call 0x1cba1 <TLIB_Delay>
0xbf46:    c9                                    	leave 
0xbf47:    c3                                    	ret 
; function: DTV_SetTunerTSID at 0xbf48 -- 0xc0cf
0xbf48:    55                                    	push rbp
0xbf49:    48 89 e5                              	mov rbp, rsp
0xbf4c:    48 83 ec 40                           	sub rsp, 0x40
0xbf50:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xbf54:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xbf58:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xbf5c:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xbf60:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xbf64:    e8 87 2c 03 00                        	call 0x3ebf0 <mcount>
0xbf69:    48 89 fb                              	mov rbx, rdi
0xbf6c:    41 89 f7                              	mov r15d, esi
0xbf6f:    4c 8b a7 38 1d 00 00                  	mov r12, qword ptr [rdi + 0x1d38]
0xbf76:    44 0f b6 b7 30 1d 00 00               	movzx r14d, byte ptr [rdi + 0x1d30]
0xbf7e:    45 0f b6 ee                           	movzx r13d, r14b
0xbf82:    49 63 c5                              	movsxd rax, r13d
0xbf85:    49 8b 84 c4 88 04 00 00               	mov rax, qword ptr [r12 + rax*8 + 0x488]
0xbf8d:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xbf91:    84 d2                                 	test dl, dl
0xbf93:    74 29                                 	je 0xbfbe <DTV_SetTunerTSID+0x76>
0xbf95:    45 0f b6 f6                           	movzx r14d, r14b
0xbf99:    4b 8d 04 b6                           	lea rax, [r14 + r14*4]
0xbf9d:    48 c1 e0 04                           	shl rax, 4
0xbfa1:    0f b6 ca                              	movzx ecx, dl
0xbfa4:    4d 8d 84 04 60 59 00 00               	lea r8, [r12 + rax + 0x5960]
0xbfac:    89 f2                                 	mov edx, esi
0xbfae:    44 89 ee                              	mov esi, r13d
0xbfb1:    4c 89 e7                              	mov rdi, r12
0xbfb4:    e8 b6 d4 ff ff                        	call 0x946f <TC_TSIDWrite>
0xbfb9:    e9 2c 01 00 00                        	jmp 0xc0ea
0xbfbe:    83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0xbfc5:    0f 84 1a 01 00 00                     	je 0xc0e5
0xbfcb:    80 bf 60 0d 03 00 01                  	cmp byte ptr [rdi + 0x30d60], 1
0xbfd2:    75 14                                 	jne 0xbfe8 <DTV_SetTunerTSID+0xa0>
0xbfd4:    bf 90 01 00 00                        	mov edi, 0x190
0xbfd9:    e8 c3 0b 01 00                        	call 0x1cba1 <TLIB_Delay>
0xbfde:    b8 01 00 00 00                        	mov eax, 1
0xbfe3:    e9 02 01 00 00                        	jmp 0xc0ea
0xbfe8:    bf 32 00 00 00                        	mov edi, 0x32
0xbfed:    e8 73 94 00 00                        	call 0x15465 <vUSB_Wait>
0xbff2:    45 0f b6 f6                           	movzx r14d, r14b
0xbff6:    4b 8d 04 b6                           	lea rax, [r14 + r14*4]
0xbffa:    48 c1 e0 04                           	shl rax, 4
0xbffe:    4d 8d 84 04 60 59 00 00               	lea r8, [r12 + rax + 0x5960]
0xc006:    b9 00 00 00 00                        	mov ecx, 0
0xc00b:    44 89 fa                              	mov edx, r15d
0xc00e:    44 89 ee                              	mov esi, r13d
0xc011:    4c 89 e7                              	mov rdi, r12
0xc014:    e8 56 d4 ff ff                        	call 0x946f <TC_TSIDWrite>
0xc019:    3c 01                                 	cmp al, 1
0xc01b:    0f 85 c4 00 00 00                     	jne 0xc0e5
0xc021:    bf f4 01 00 00                        	mov edi, 0x1f4
0xc026:    e8 3a 94 00 00                        	call 0x15465 <vUSB_Wait>
0xc02b:    80 3b 00                              	cmp byte ptr [rbx], 0
0xc02e:    0f 95 c1                              	setne cl
0xc031:    0f b6 c9                              	movzx ecx, cl
0xc034:    ba 01 00 00 00                        	mov edx, 1
0xc039:    44 89 ee                              	mov esi, r13d
0xc03c:    4c 89 e7                              	mov rdi, r12
0xc03f:    e8 07 8e 00 00                        	call 0x14e4b <USB_FilterReset>
0xc044:    83 f8 01                              	cmp eax, 1
0xc047:    74 1c                                 	je 0xc065 <DTV_SetTunerTSID+0x11d>
0xc049:    ba ff 1f 00 00                        	mov edx, 0x1fff
0xc04e:    be ff 1f 00 00                        	mov esi, 0x1fff
0xc053:    48 89 df                              	mov rdi, rbx
0xc056:    e8 61 e6 ff ff                        	call 0xa6bc <DTV_SetPidFilterBoundary>
0xc05b:    b8 00 00 00 00                        	mov eax, 0
0xc060:    e9 85 00 00 00                        	jmp 0xc0ea
0xc065:    ba ff 1f 00 00                        	mov edx, 0x1fff
0xc06a:    be ff 1f 00 00                        	mov esi, 0x1fff
0xc06f:    48 89 df                              	mov rdi, rbx
0xc072:    e8 45 e6 ff ff                        	call 0xa6bc <DTV_SetPidFilterBoundary>
0xc077:    49 63 c5                              	movsxd rax, r13d
0xc07a:    41 80 bc 04 80 04 00 00 01            	cmp byte ptr [r12 + rax + 0x480], 1
0xc083:    75 2a                                 	jne 0xc0af <DTV_SetTunerTSID+0x167>
0xc085:    48 83 7d c8 00                        	cmp qword ptr [rbp - 0x38], 0
0xc08a:    74 23                                 	je 0xc0af <DTV_SetTunerTSID+0x167>
0xc08c:    44 89 ee                              	mov esi, r13d
0xc08f:    4c 89 e7                              	mov rdi, r12
0xc092:    e8 f5 98 ff ff                        	call 0x598c <FUSBDTV_StopBulkStream>
0xc097:    49 89 d8                              	mov r8, rbx
0xc09a:    b9 70 49 00 00                        	mov ecx, 0x4970
0xc09f:    ba 80 00 00 00                        	mov edx, 0x80
0xc0a4:    44 89 ee                              	mov esi, r13d
0xc0a7:    4c 89 e7                              	mov rdi, r12
0xc0aa:    e8 85 99 ff ff                        	call 0x5a34 <FUSBDTV_StartBulkStream>
0xc0af:    48 8b bb b0 fa 08 00                  	mov rdi, qword ptr [rbx + 0x8fab0]
0xc0b6:    be 00 00 00 00                        	mov esi, 0
0xc0bb:    e8 25 a1 00 00                        	call 0x161e5 <TS_EnableProcProgramID>
0xc0c0:    c6 83 bd fa 08 00 01                  	mov byte ptr [rbx + 0x8fabd], 1
0xc0c7:    be 00 00 00 00                        	mov esi, 0
0xc0cc:    48 89 df                              	mov rdi, rbx
; data inside code section at 0xc0cf -- 0xc0d0
0xc0cf:    e8                                                 |.               |
; function: DTV_GetTunerCurrentTSID at 0xc0d0 -- 0xc100
0xc0d0:    22 fe                                 	and bh, dh
; data inside code section at 0xc0d2 -- 0xc0d3
0xc0d2:    ff                                                 |.               |
0xc0d3:    ff c7                                 	inc edi
0xc0d5:    83 48 1d 00                           	or dword ptr [rax + 0x1d], 0
0xc0d9:    00 00                                 	add byte ptr [rax], al
0xc0db:    00 00                                 	add byte ptr [rax], al
0xc0dd:    00 b8 01 00 00 00                     	add byte ptr [rax + 1], bh
0xc0e3:    eb 05                                 	jmp 0xc0ea <DTV_GetTunerCurrentTSID+0x1a>
0xc0e5:    b8 00 00 00 00                        	mov eax, 0
0xc0ea:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0xc0ee:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0xc0f2:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0xc0f6:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xc0fa:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xc0fe:    c9                                    	leave 
0xc0ff:    c3                                    	ret 
; function: DTV_GetTunerCurrentTSID at 0xc100 -- 0xc12d
0xc100:    55                                    	push rbp
0xc101:    48 89 e5                              	mov rbp, rsp
0xc104:    e8 e7 2a 03 00                        	call 0x3ebf0 <mcount>
0xc109:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xc10e:    48 85 ff                              	test rdi, rdi
0xc111:    74 49                                 	je 0xc15c
0xc113:    4c 8b 87 38 1d 00 00                  	mov r8, qword ptr [rdi + 0x1d38]
0xc11a:    0f b6 97 30 1d 00 00                  	movzx edx, byte ptr [rdi + 0x1d30]
0xc121:    b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0xc126:    83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
; data inside code section at 0xc12d -- 0xc12e
0xc12d:    74                                                 |t               |
; function: DTV_GetProgramIDList at 0xc12e -- 0xc15e
0xc12e:    2d 0f b6 c2 48                        	sub eax, 0x48c2b60f
0xc133:    8d 04 80                              	lea eax, [rax + rax*4]
0xc136:    48 c1 e0 04                           	shl rax, 4
0xc13a:    49 8d 8c 00 60 59 00 00               	lea rcx, [r8 + rax + 0x5960]
0xc142:    0f b6 c2                              	movzx eax, dl
0xc145:    48 89 f2                              	mov rdx, rsi
0xc148:    89 c6                                 	mov esi, eax
0xc14a:    4c 89 c7                              	mov rdi, r8
0xc14d:    e8 56 a2 ff ff                        	call 0x63a8 <TC_CurrentTSIDRead>
0xc152:    3c 01                                 	cmp al, 1
0xc154:    19 c0                                 	sbb eax, eax
0xc156:    83 e0 fd                              	and eax, 0xfffffffd
0xc159:    83 c0 01                              	add eax, 1
0xc15c:    c9                                    	leave 
0xc15d:    c3                                    	ret 
; function: DTV_GetProgramIDList at 0xc15e -- 0xc1a8
0xc15e:    55                                    	push rbp
0xc15f:    48 89 e5                              	mov rbp, rsp
0xc162:    48 83 ec 20                           	sub rsp, 0x20
0xc166:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0xc16a:    4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0xc16f:    4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0xc174:    4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0xc179:    e8 72 2a 03 00                        	call 0x3ebf0 <mcount>
0xc17e:    49 89 fc                              	mov r12, rdi
0xc181:    41 89 d6                              	mov r14d, edx
0xc184:    48 85 ff                              	test rdi, rdi
0xc187:    74 44                                 	je 0xc1cd
0xc189:    48 83 bf b0 fa 08 00 00               	cmp qword ptr [rdi + 0x8fab0], 0
0xc191:    74 3a                                 	je 0xc1cd
0xc193:    80 bf bc fa 08 00 00                  	cmp byte ptr [rdi + 0x8fabc], 0
0xc19a:    74 31                                 	je 0xc1cd
0xc19c:    84 d2                                 	test dl, dl
0xc19e:    74 26                                 	je 0xc1c6
0xc1a0:    49 89 f5                              	mov r13, rsi
0xc1a3:    bb 00 00 00 00                        	mov ebx, 0
; data inside code section at 0xc1a8 -- 0xc1b7
0xc1a8:    49 8b bc 24 b0 fa 08 00  4c 89 ea 89 de e8 70      |I..$....L.....p |
; function: DTV_SetProgramID at 0xc1b7 -- 0xc1e7
0xc1b7:    a0 00 00 83 c3 01 49 83 c5            	movabs al, byte ptr [0xc5834901c3830000]
0xc1c0:    04 41                                 	add al, 0x41
0xc1c2:    38 de                                 	cmp dh, bl
0xc1c4:    77 e2                                 	ja 0xc1a8
0xc1c6:    b8 01 00 00 00                        	mov eax, 1
0xc1cb:    eb 05                                 	jmp 0xc1d2 <DTV_SetProgramID+0x1b>
0xc1cd:    b8 00 00 00 00                        	mov eax, 0
0xc1d2:    48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0xc1d6:    4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0xc1db:    4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0xc1e0:    4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0xc1e5:    c9                                    	leave 
0xc1e6:    c3                                    	ret 
; function: DTV_SetProgramID at 0xc1e7 -- 0xc220
0xc1e7:    55                                    	push rbp
0xc1e8:    48 89 e5                              	mov rbp, rsp
0xc1eb:    48 83 ec 10                           	sub rsp, 0x10
0xc1ef:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0xc1f3:    4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0xc1f8:    e8 f3 29 03 00                        	call 0x3ebf0 <mcount>
0xc1fd:    48 89 fb                              	mov rbx, rdi
0xc200:    41 89 f4                              	mov r12d, esi
0xc203:    48 85 ff                              	test rdi, rdi
0xc206:    74 3c                                 	je 0xc244
0xc208:    48 8b bf b0 fa 08 00                  	mov rdi, qword ptr [rdi + 0x8fab0]
0xc20f:    48 85 ff                              	test rdi, rdi
0xc212:    74 30                                 	je 0xc244
0xc214:    80 bb bc fa 08 00 00                  	cmp byte ptr [rbx + 0x8fabc], 0
0xc21b:    74 27                                 	je 0xc244
0xc21d:    0f b7 f6                              	movzx esi, si
; data inside code section at 0xc220 -- 0xc224
0xc220:    e8 ec 9f 00                                        |....            |
; function: DTV_GetTunerTSIDList at 0xc224 -- 0xc254
0xc224:    00 48 8b                              	add byte ptr [rax - 0x75], cl
0xc227:    bb b0 fa 08 00                        	mov ebx, 0x8fab0
0xc22c:    be 01 00 00 00                        	mov esi, 1
0xc231:    e8 af 9f 00 00                        	call 0x161e5 <TS_EnableProcProgramID>
0xc236:    44 89 a3 b0 29 09 00                  	mov dword ptr [rbx + 0x929b0], r12d
0xc23d:    b8 01 00 00 00                        	mov eax, 1
0xc242:    eb 05                                 	jmp 0xc249 <DTV_GetTunerTSIDList+0x25>
0xc244:    b8 00 00 00 00                        	mov eax, 0
0xc249:    48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0xc24d:    4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0xc252:    c9                                    	leave 
0xc253:    c3                                    	ret 
; function: DTV_GetTunerTSIDList at 0xc254 -- 0xc288
0xc254:    55                                    	push rbp
0xc255:    48 89 e5                              	mov rbp, rsp
0xc258:    e8 93 29 03 00                        	call 0x3ebf0 <mcount>
0xc25d:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xc262:    48 85 ff                              	test rdi, rdi
0xc265:    74 4f                                 	je 0xc2b6
0xc267:    44 0f b6 87 30 1d 00 00               	movzx r8d, byte ptr [rdi + 0x1d30]
0xc26f:    4c 8b 8f 38 1d 00 00                  	mov r9, qword ptr [rdi + 0x1d38]
0xc276:    b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0xc27b:    83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0xc282:    74 32                                 	je 0xc2b6
0xc284:    41 0f b6 c0                           	movzx eax, r8b
; function: DTV_GetProgramIDList_Ex at 0xc288 -- 0xc2b8
0xc288:    48 8d 3c 80                           	lea rdi, [rax + rax*4]
0xc28c:    48 c1 e7 04                           	shl rdi, 4
0xc290:    0f b6 ca                              	movzx ecx, dl
0xc293:    41 0f b6 c0                           	movzx eax, r8b
0xc297:    4d 8d 84 39 60 59 00 00               	lea r8, [r9 + rdi + 0x5960]
0xc29f:    48 89 f2                              	mov rdx, rsi
0xc2a2:    89 c6                                 	mov esi, eax
0xc2a4:    4c 89 cf                              	mov rdi, r9
0xc2a7:    e8 0e d2 ff ff                        	call 0x94ba <TC_TSIDRead>
0xc2ac:    3c 01                                 	cmp al, 1
0xc2ae:    19 c0                                 	sbb eax, eax
0xc2b0:    83 e0 fd                              	and eax, 0xfffffffd
0xc2b3:    83 c0 01                              	add eax, 1
0xc2b6:    c9                                    	leave 
0xc2b7:    c3                                    	ret 
; function: DTV_GetProgramIDList_Ex at 0xc2b8 -- 0xc2c9
0xc2b8:    55                                    	push rbp
0xc2b9:    48 89 e5                              	mov rbp, rsp
0xc2bc:    53                                    	push rbx
0xc2bd:    48 83 ec 08                           	sub rsp, 8
0xc2c1:    e8 2a 29 03 00                        	call 0x3ebf0 <mcount>
0xc2c6:    48 89 d3                              	mov rbx, rdx
; function: BCAS_CMDSet_Ext at 0xc2c9 -- 0xc2f9
0xc2c9:    48 85 ff                              	test rdi, rdi
0xc2cc:    74 21                                 	je 0xc2ef <BCAS_CMDSet_Ext+0x26>
0xc2ce:    48 8b 87 b0 fa 08 00                  	mov rax, qword ptr [rdi + 0x8fab0]
0xc2d5:    48 85 c0                              	test rax, rax
0xc2d8:    74 15                                 	je 0xc2ef <BCAS_CMDSet_Ext+0x26>
0xc2da:    80 bf bc fa 08 00 00                  	cmp byte ptr [rdi + 0x8fabc], 0
0xc2e1:    74 0c                                 	je 0xc2ef <BCAS_CMDSet_Ext+0x26>
0xc2e3:    48 89 c7                              	mov rdi, rax
0xc2e6:    e8 76 9f 00 00                        	call 0x16261 <TS_GetTsProgramID_Ex>
0xc2eb:    88 03                                 	mov byte ptr [rbx], al
0xc2ed:    eb 03                                 	jmp 0xc2f2 <BCAS_CMDSet_Ext+0x29>
0xc2ef:    c6 03 00                              	mov byte ptr [rbx], 0
0xc2f2:    48 83 c4 08                           	add rsp, 8
0xc2f6:    5b                                    	pop rbx
0xc2f7:    c9                                    	leave 
0xc2f8:    c3                                    	ret 
; function: BCAS_CMDSet_Ext at 0xc2f9 -- 0xc428
0xc2f9:    55                                    	push rbp
0xc2fa:    48 89 e5                              	mov rbp, rsp
0xc2fd:    48 81 ec 80 01 00 00                  	sub rsp, 0x180
0xc304:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xc308:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xc30c:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xc310:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xc314:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xc318:    e8 d3 28 03 00                        	call 0x3ebf0 <mcount>
0xc31d:    49 89 f5                              	mov r13, rsi
0xc320:    48 89 d6                              	mov rsi, rdx
0xc323:    41 89 cc                              	mov r12d, ecx
0xc326:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xc32f:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xc333:    31 c0                                 	xor eax, eax
0xc335:    48 89 fb                              	mov rbx, rdi
0xc338:    0f b6 97 38 13 00 00                  	movzx edx, byte ptr [rdi + 0x1338]
0xc33f:    80 fa 01                              	cmp dl, 1
0xc342:    0f 85 92 00 00 00                     	jne 0xc3da <BCAS_CMDSet_Ext+0xe1>
0xc348:    80 bf 85 14 00 00 01                  	cmp byte ptr [rdi + 0x1485], 1
0xc34f:    19 c0                                 	sbb eax, eax
0xc351:    24 3d                                 	and al, 0x3d
0xc353:    05 ff 00 00 00                        	add eax, 0xff
0xc358:    39 c8                                 	cmp eax, ecx
0xc35a:    72 79                                 	jb 0xc3d5 <BCAS_CMDSet_Ext+0xdc>
0xc35c:    84 d2                                 	test dl, dl
0xc35e:    74 75                                 	je 0xc3d5 <BCAS_CMDSet_Ext+0xdc>
0xc360:    4c 8d 85 80 fe ff ff                  	lea r8, [rbp - 0x180]
0xc367:    b9 28 00 00 00                        	mov ecx, 0x28
0xc36c:    b8 00 00 00 00                        	mov eax, 0
0xc371:    4c 89 c7                              	mov rdi, r8
0xc374:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xc377:    45 89 e6                              	mov r14d, r12d
0xc37a:    4c 89 f2                              	mov rdx, r14
0xc37d:    4c 89 c7                              	mov rdi, r8
0xc380:    e8 e3 27 03 00                        	call 0x3eb68 <memcpy>
0xc385:    45 89 e7                              	mov r15d, r12d
0xc388:    44 39 a3 d4 02 00 00                  	cmp dword ptr [rbx + 0x2d4], r12d
0xc38f:    75 5a                                 	jne 0xc3eb <BCAS_CMDSet_Ext+0xf2>
0xc391:    45 85 e4                              	test r12d, r12d
0xc394:    74 3f                                 	je 0xc3d5 <BCAS_CMDSet_Ext+0xdc>
0xc396:    0f b6 83 94 01 00 00                  	movzx eax, byte ptr [rbx + 0x194]
0xc39d:    3a 85 80 fe ff ff                     	cmp al, byte ptr [rbp - 0x180]
0xc3a3:    75 46                                 	jne 0xc3eb <BCAS_CMDSet_Ext+0xf2>
0xc3a5:    48 89 d9                              	mov rcx, rbx
0xc3a8:    48 8d 95 81 fe ff ff                  	lea rdx, [rbp - 0x17f]
0xc3af:    b8 00 00 00 00                        	mov eax, 0
0xc3b4:    eb 17                                 	jmp 0xc3cd <BCAS_CMDSet_Ext+0xd4>
0xc3b6:    0f b6 b9 95 01 00 00                  	movzx edi, byte ptr [rcx + 0x195]
0xc3bd:    0f b6 32                              	movzx esi, byte ptr [rdx]
0xc3c0:    48 83 c1 01                           	add rcx, 1
0xc3c4:    48 83 c2 01                           	add rdx, 1
0xc3c8:    40 38 f7                              	cmp dil, sil
0xc3cb:    75 1e                                 	jne 0xc3eb <BCAS_CMDSet_Ext+0xf2>
0xc3cd:    83 c0 01                              	add eax, 1
0xc3d0:    41 39 c4                              	cmp r12d, eax
0xc3d3:    77 e1                                 	ja 0xc3b6 <BCAS_CMDSet_Ext+0xbd>
0xc3d5:    b8 01 00 00 00                        	mov eax, 1
0xc3da:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0xc3de:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xc3e7:    74 60                                 	je 0xc449
0xc3e9:    eb 59                                 	jmp 0xc444
0xc3eb:    44 89 bb 90 01 00 00                  	mov dword ptr [rbx + 0x190], r15d
0xc3f2:    48 8d 7b 50                           	lea rdi, [rbx + 0x50]
0xc3f6:    4c 8d a5 80 fe ff ff                  	lea r12, [rbp - 0x180]
0xc3fd:    4c 89 f2                              	mov rdx, r14
0xc400:    4c 89 e6                              	mov rsi, r12
0xc403:    e8 60 27 03 00                        	call 0x3eb68 <memcpy>
0xc408:    44 89 bb d4 02 00 00                  	mov dword ptr [rbx + 0x2d4], r15d
0xc40f:    48 8d bb 94 01 00 00                  	lea rdi, [rbx + 0x194]
0xc416:    4c 89 f2                              	mov rdx, r14
0xc419:    4c 89 e6                              	mov rsi, r12
0xc41c:    e8 47 27 03 00                        	call 0x3eb68 <memcpy>
0xc421:    c6 83 cc 15 00 00 01                  	mov byte ptr [rbx + 0x15cc], 1
; data inside code section at 0xc428 -- 0xc42f
0xc428:    41 0f b6 85 30 1d 00                               |A...0..         |
; function: BCAS_CMDGet_Ext at 0xc42f -- 0xc45f
0xc42f:    00 88 83 cd 15 00                     	add byte ptr [rax + 0x15cd83], cl
0xc435:    00 c6                                 	add dh, al
0xc437:    83 38 13                              	cmp dword ptr [rax], 0x13
0xc43a:    00 00                                 	add byte ptr [rax], al
0xc43c:    02 b8 01 00 00 00                     	add bh, byte ptr [rax + 1]
0xc442:    eb 96                                 	jmp 0xc3da
0xc444:    e8 5f 27 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xc449:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0xc44d:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0xc451:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0xc455:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xc459:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xc45d:    c9                                    	leave 
0xc45e:    c3                                    	ret 
; function: BCAS_CMDGet_Ext at 0xc45f -- 0xc55f
0xc45f:    55                                    	push rbp
0xc460:    48 89 e5                              	mov rbp, rsp
0xc463:    48 81 ec 70 01 00 00                  	sub rsp, 0x170
0xc46a:    48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0xc46e:    4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0xc472:    4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0xc476:    e8 75 27 03 00                        	call 0x3ebf0 <mcount>
0xc47b:    49 89 cc                              	mov r12, rcx
0xc47e:    4d 89 c5                              	mov r13, r8
0xc481:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xc48a:    48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0xc48e:    31 c0                                 	xor eax, eax
0xc490:    48 89 fb                              	mov rbx, rdi
0xc493:    0f b6 87 38 13 00 00                  	movzx eax, byte ptr [rdi + 0x1338]
0xc49a:    88 02                                 	mov byte ptr [rdx], al
0xc49c:    80 bf 38 13 00 00 01                  	cmp byte ptr [rdi + 0x1338], 1
0xc4a3:    0f 85 bd 00 00 00                     	jne 0xc566
0xc4a9:    49 83 f9 42                           	cmp r9, 0x42
0xc4ad:    75 15                                 	jne 0xc4c4 <BCAS_CMDGet_Ext+0x65>
0xc4af:    83 bf 28 04 00 00 44                  	cmp dword ptr [rdi + 0x428], 0x44
0xc4b6:    7e 22                                 	jle 0xc4da <BCAS_CMDGet_Ext+0x7b>
0xc4b8:    c7 87 28 04 00 00 44 00 00 00         	mov dword ptr [rdi + 0x428], 0x44
0xc4c2:    eb 16                                 	jmp 0xc4da <BCAS_CMDGet_Ext+0x7b>
0xc4c4:    81 bf 28 04 00 00 03 01 00 00         	cmp dword ptr [rdi + 0x428], 0x103
0xc4ce:    7e 0a                                 	jle 0xc4da <BCAS_CMDGet_Ext+0x7b>
0xc4d0:    c7 87 28 04 00 00 03 01 00 00         	mov dword ptr [rdi + 0x428], 0x103
0xc4da:    48 8d 95 90 fe ff ff                  	lea rdx, [rbp - 0x170]
0xc4e1:    b9 28 00 00 00                        	mov ecx, 0x28
0xc4e6:    b8 00 00 00 00                        	mov eax, 0
0xc4eb:    48 89 d7                              	mov rdi, rdx
0xc4ee:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xc4f1:    80 be 30 1d 00 00 00                  	cmp byte ptr [rsi + 0x1d30], 0
0xc4f8:    75 2a                                 	jne 0xc524 <BCAS_CMDGet_Ext+0xc5>
0xc4fa:    48 89 d7                              	mov rdi, rdx
0xc4fd:    8b 93 ec 07 00 00                     	mov edx, dword ptr [rbx + 0x7ec]
0xc503:    83 ea 04                              	sub edx, 4
0xc506:    48 63 d2                              	movsxd rdx, edx
0xc509:    48 8d b3 f3 07 00 00                  	lea rsi, [rbx + 0x7f3]
0xc510:    e8 53 26 03 00                        	call 0x3eb68 <memcpy>
0xc515:    8b 83 ec 07 00 00                     	mov eax, dword ptr [rbx + 0x7ec]
0xc51b:    83 e8 04                              	sub eax, 4
0xc51e:    41 88 04 24                           	mov byte ptr [r12], al
0xc522:    eb 2c                                 	jmp 0xc550 <BCAS_CMDGet_Ext+0xf1>
0xc524:    48 8d bd 90 fe ff ff                  	lea rdi, [rbp - 0x170]
0xc52b:    8b 93 b0 0b 00 00                     	mov edx, dword ptr [rbx + 0xbb0]
0xc531:    83 ea 04                              	sub edx, 4
0xc534:    48 63 d2                              	movsxd rdx, edx
0xc537:    48 8d b3 b7 0b 00 00                  	lea rsi, [rbx + 0xbb7]
0xc53e:    e8 25 26 03 00                        	call 0x3eb68 <memcpy>
0xc543:    8b 83 b0 0b 00 00                     	mov eax, dword ptr [rbx + 0xbb0]
0xc549:    83 e8 04                              	sub eax, 4
0xc54c:    41 88 04 24                           	mov byte ptr [r12], al
0xc550:    41 0f b6 14 24                        	movzx edx, byte ptr [r12]
0xc555:    48 8d b5 90 fe ff ff                  	lea rsi, [rbp - 0x170]
0xc55c:    4c 89 ef                              	mov rdi, r13
; data inside code section at 0xc55f -- 0xc560
0xc55f:    e8                                                 |.               |
; function: DTV_HardwareDecrypt_ASV5606 at 0xc560 -- 0xc590
0xc560:    04 26                                 	add al, 0x26
0xc562:    03 00                                 	add eax, dword ptr [rax]
0xc564:    eb 03                                 	jmp 0xc569 <DTV_HardwareDecrypt_ASV5606+0x9>
0xc566:    c6 01 00                              	mov byte ptr [rcx], 0
0xc569:    b8 01 00 00 00                        	mov eax, 1
0xc56e:    48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0xc572:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xc57b:    74 05                                 	je 0xc582 <DTV_HardwareDecrypt_ASV5606+0x22>
0xc57d:    e8 26 26 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xc582:    48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0xc586:    4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0xc58a:    4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0xc58e:    c9                                    	leave 
0xc58f:    c3                                    	ret 
; function: DTV_HardwareDecrypt_ASV5606 at 0xc590 -- 0xc643
0xc590:    55                                    	push rbp
0xc591:    48 89 e5                              	mov rbp, rsp
0xc594:    e8 57 26 03 00                        	call 0x3ebf0 <mcount>
0xc599:    49 89 f8                              	mov r8, rdi
0xc59c:    4c 8b 97 38 1d 00 00                  	mov r10, qword ptr [rdi + 0x1d38]
0xc5a3:    48 89 d7                              	mov rdi, rdx
0xc5a6:    41 b9 bc 00 00 00                     	mov r9d, 0xbc
0xc5ac:    b8 00 00 00 00                        	mov eax, 0
0xc5b1:    f6 c2 01                              	test dl, 1
0xc5b4:    74 0a                                 	je 0xc5c0 <DTV_HardwareDecrypt_ASV5606+0x30>
0xc5b6:    88 02                                 	mov byte ptr [rdx], al
0xc5b8:    48 83 c7 01                           	add rdi, 1
0xc5bc:    41 83 e9 01                           	sub r9d, 1
0xc5c0:    40 f6 c7 02                           	test dil, 2
0xc5c4:    74 0b                                 	je 0xc5d1 <DTV_HardwareDecrypt_ASV5606+0x41>
0xc5c6:    66 89 07                              	mov word ptr [rdi], ax
0xc5c9:    48 83 c7 02                           	add rdi, 2
0xc5cd:    41 83 e9 02                           	sub r9d, 2
0xc5d1:    40 f6 c7 04                           	test dil, 4
0xc5d5:    74 0a                                 	je 0xc5e1 <DTV_HardwareDecrypt_ASV5606+0x51>
0xc5d7:    89 07                                 	mov dword ptr [rdi], eax
0xc5d9:    48 83 c7 04                           	add rdi, 4
0xc5dd:    41 83 e9 04                           	sub r9d, 4
0xc5e1:    44 89 c9                              	mov ecx, r9d
0xc5e4:    c1 e9 03                              	shr ecx, 3
0xc5e7:    89 c9                                 	mov ecx, ecx
0xc5e9:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xc5ec:    41 f6 c1 04                           	test r9b, 4
0xc5f0:    74 06                                 	je 0xc5f8 <DTV_HardwareDecrypt_ASV5606+0x68>
0xc5f2:    89 07                                 	mov dword ptr [rdi], eax
0xc5f4:    48 83 c7 04                           	add rdi, 4
0xc5f8:    41 f6 c1 02                           	test r9b, 2
0xc5fc:    74 07                                 	je 0xc605 <DTV_HardwareDecrypt_ASV5606+0x75>
0xc5fe:    66 89 07                              	mov word ptr [rdi], ax
0xc601:    48 83 c7 02                           	add rdi, 2
0xc605:    41 f6 c1 01                           	test r9b, 1
0xc609:    74 02                                 	je 0xc60d <DTV_HardwareDecrypt_ASV5606+0x7d>
0xc60b:    88 07                                 	mov byte ptr [rdi], al
0xc60d:    0f b6 06                              	movzx eax, byte ptr [rsi]
0xc610:    88 02                                 	mov byte ptr [rdx], al
0xc612:    0f b6 46 01                           	movzx eax, byte ptr [rsi + 1]
0xc616:    88 42 01                              	mov byte ptr [rdx + 1], al
0xc619:    0f b6 46 02                           	movzx eax, byte ptr [rsi + 2]
0xc61d:    88 42 02                              	mov byte ptr [rdx + 2], al
0xc620:    0f b6 46 03                           	movzx eax, byte ptr [rsi + 3]
0xc624:    88 42 03                              	mov byte ptr [rdx + 3], al
0xc627:    4c 8d 9e b8 00 00 00                  	lea r11, [rsi + 0xb8]
0xc62e:    48 89 f0                              	mov rax, rsi
0xc631:    45 0f b6 8a b8 02 00 00               	movzx r9d, byte ptr [r10 + 0x2b8]
0xc639:    44 32 48 04                           	xor r9b, byte ptr [rax + 4]
0xc63d:    89 c7                                 	mov edi, eax
0xc63f:    29 f7                                 	sub edi, esi
0xc641:    89 f9                                 	mov ecx, edi
; data inside code section at 0xc643 -- 0xc644
0xc643:    c1                                                 |.               |
; function: DTV_HardwareDecrypt_5211Ver01 at 0xc644 -- 0xc645
0xc644:    f9                                    	stc 
; data inside code section at 0xc645 -- 0xc646
0xc645:    1f                                                 |.               |
; function: function_c646 at 0xc646 -- 0xc674
0xc646:    c1 e9 1c                              	shr ecx, 0x1c
0xc649:    01 cf                                 	add edi, ecx
0xc64b:    83 e7 0f                              	and edi, 0xf
0xc64e:    29 cf                                 	sub edi, ecx
0xc650:    48 63 ff                              	movsxd rdi, edi
0xc653:    44 89 c9                              	mov ecx, r9d
0xc656:    41 32 8c 38 c4 0d 03 00               	xor cl, byte ptr [r8 + rdi + 0x30dc4]
0xc65e:    88 4a 04                              	mov byte ptr [rdx + 4], cl
0xc661:    48 83 c0 01                           	add rax, 1
0xc665:    49 83 c2 01                           	add r10, 1
0xc669:    48 83 c2 01                           	add rdx, 1
0xc66d:    4c 39 d8                              	cmp rax, r11
0xc670:    75 bf                                 	jne 0xc631
0xc672:    c9                                    	leave 
0xc673:    c3                                    	ret 
; function: DTV_HardwareDecrypt_5211Ver01 at 0xc674 -- 0xc6f8
0xc674:    55                                    	push rbp
0xc675:    48 89 e5                              	mov rbp, rsp
0xc678:    e8 73 25 03 00                        	call 0x3ebf0 <mcount>
0xc67d:    44 0f b6 87 d3 0d 03 00               	movzx r8d, byte ptr [rdi + 0x30dd3]
0xc685:    48 89 d7                              	mov rdi, rdx
0xc688:    41 b9 bc 00 00 00                     	mov r9d, 0xbc
0xc68e:    b8 00 00 00 00                        	mov eax, 0
0xc693:    f6 c2 01                              	test dl, 1
0xc696:    74 0a                                 	je 0xc6a2 <DTV_HardwareDecrypt_5211Ver01+0x2e>
0xc698:    88 02                                 	mov byte ptr [rdx], al
0xc69a:    48 83 c7 01                           	add rdi, 1
0xc69e:    41 83 e9 01                           	sub r9d, 1
0xc6a2:    40 f6 c7 02                           	test dil, 2
0xc6a6:    74 0b                                 	je 0xc6b3 <DTV_HardwareDecrypt_5211Ver01+0x3f>
0xc6a8:    66 89 07                              	mov word ptr [rdi], ax
0xc6ab:    48 83 c7 02                           	add rdi, 2
0xc6af:    41 83 e9 02                           	sub r9d, 2
0xc6b3:    40 f6 c7 04                           	test dil, 4
0xc6b7:    74 0a                                 	je 0xc6c3 <DTV_HardwareDecrypt_5211Ver01+0x4f>
0xc6b9:    89 07                                 	mov dword ptr [rdi], eax
0xc6bb:    48 83 c7 04                           	add rdi, 4
0xc6bf:    41 83 e9 04                           	sub r9d, 4
0xc6c3:    44 89 c9                              	mov ecx, r9d
0xc6c6:    c1 e9 03                              	shr ecx, 3
0xc6c9:    89 c9                                 	mov ecx, ecx
0xc6cb:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xc6ce:    41 f6 c1 04                           	test r9b, 4
0xc6d2:    74 06                                 	je 0xc6da <DTV_HardwareDecrypt_5211Ver01+0x66>
0xc6d4:    89 07                                 	mov dword ptr [rdi], eax
0xc6d6:    48 83 c7 04                           	add rdi, 4
0xc6da:    41 f6 c1 02                           	test r9b, 2
0xc6de:    74 07                                 	je 0xc6e7 <DTV_HardwareDecrypt_5211Ver01+0x73>
0xc6e0:    66 89 07                              	mov word ptr [rdi], ax
0xc6e3:    48 83 c7 02                           	add rdi, 2
0xc6e7:    41 f6 c1 01                           	test r9b, 1
0xc6eb:    74 02                                 	je 0xc6ef <DTV_HardwareDecrypt_5211Ver01+0x7b>
0xc6ed:    88 07                                 	mov byte ptr [rdi], al
0xc6ef:    0f b6 06                              	movzx eax, byte ptr [rsi]
0xc6f2:    88 02                                 	mov byte ptr [rdx], al
0xc6f4:    0f b6 46 01                           	movzx eax, byte ptr [rsi + 1]
; function: DTV_HardwareDecrypt_Ver01 at 0xc6f8 -- 0xc728
0xc6f8:    88 42 01                              	mov byte ptr [rdx + 1], al
0xc6fb:    0f b6 46 02                           	movzx eax, byte ptr [rsi + 2]
0xc6ff:    88 42 02                              	mov byte ptr [rdx + 2], al
0xc702:    0f b6 46 03                           	movzx eax, byte ptr [rsi + 3]
0xc706:    88 42 03                              	mov byte ptr [rdx + 3], al
0xc709:    48 8d 8e b8 00 00 00                  	lea rcx, [rsi + 0xb8]
0xc710:    44 89 c0                              	mov eax, r8d
0xc713:    32 46 04                              	xor al, byte ptr [rsi + 4]
0xc716:    88 42 04                              	mov byte ptr [rdx + 4], al
0xc719:    48 83 c6 01                           	add rsi, 1
0xc71d:    48 83 c2 01                           	add rdx, 1
0xc721:    48 39 ce                              	cmp rsi, rcx
0xc724:    75 ea                                 	jne 0xc710 <DTV_HardwareDecrypt_Ver01+0x18>
0xc726:    c9                                    	leave 
0xc727:    c3                                    	ret 
; function: DTV_HardwareDecrypt_Ver01 at 0xc728 -- 0xc7ce
0xc728:    55                                    	push rbp
0xc729:    48 89 e5                              	mov rbp, rsp
0xc72c:    e8 bf 24 03 00                        	call 0x3ebf0 <mcount>
0xc731:    44 0f b6 8f e3 0d 03 00               	movzx r9d, byte ptr [rdi + 0x30de3]
0xc739:    4c 8b 87 38 1d 00 00                  	mov r8, qword ptr [rdi + 0x1d38]
0xc740:    48 89 d7                              	mov rdi, rdx
0xc743:    41 ba bc 00 00 00                     	mov r10d, 0xbc
0xc749:    b8 00 00 00 00                        	mov eax, 0
0xc74e:    f6 c2 01                              	test dl, 1
0xc751:    74 0a                                 	je 0xc75d <DTV_HardwareDecrypt_Ver01+0x35>
0xc753:    88 02                                 	mov byte ptr [rdx], al
0xc755:    48 83 c7 01                           	add rdi, 1
0xc759:    41 83 ea 01                           	sub r10d, 1
0xc75d:    40 f6 c7 02                           	test dil, 2
0xc761:    74 0b                                 	je 0xc76e <DTV_HardwareDecrypt_Ver01+0x46>
0xc763:    66 89 07                              	mov word ptr [rdi], ax
0xc766:    48 83 c7 02                           	add rdi, 2
0xc76a:    41 83 ea 02                           	sub r10d, 2
0xc76e:    40 f6 c7 04                           	test dil, 4
0xc772:    74 0a                                 	je 0xc77e <DTV_HardwareDecrypt_Ver01+0x56>
0xc774:    89 07                                 	mov dword ptr [rdi], eax
0xc776:    48 83 c7 04                           	add rdi, 4
0xc77a:    41 83 ea 04                           	sub r10d, 4
0xc77e:    44 89 d1                              	mov ecx, r10d
0xc781:    c1 e9 03                              	shr ecx, 3
0xc784:    89 c9                                 	mov ecx, ecx
0xc786:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xc789:    41 f6 c2 04                           	test r10b, 4
0xc78d:    74 06                                 	je 0xc795 <DTV_HardwareDecrypt_Ver01+0x6d>
0xc78f:    89 07                                 	mov dword ptr [rdi], eax
0xc791:    48 83 c7 04                           	add rdi, 4
0xc795:    41 f6 c2 02                           	test r10b, 2
0xc799:    74 07                                 	je 0xc7a2 <DTV_HardwareDecrypt_Ver01+0x7a>
0xc79b:    66 89 07                              	mov word ptr [rdi], ax
0xc79e:    48 83 c7 02                           	add rdi, 2
0xc7a2:    41 f6 c2 01                           	test r10b, 1
0xc7a6:    74 02                                 	je 0xc7aa <DTV_HardwareDecrypt_Ver01+0x82>
0xc7a8:    88 07                                 	mov byte ptr [rdi], al
0xc7aa:    0f b6 06                              	movzx eax, byte ptr [rsi]
0xc7ad:    88 02                                 	mov byte ptr [rdx], al
0xc7af:    0f b6 46 01                           	movzx eax, byte ptr [rsi + 1]
0xc7b3:    88 42 01                              	mov byte ptr [rdx + 1], al
0xc7b6:    0f b6 46 02                           	movzx eax, byte ptr [rsi + 2]
0xc7ba:    88 42 02                              	mov byte ptr [rdx + 2], al
0xc7bd:    0f b6 46 03                           	movzx eax, byte ptr [rsi + 3]
0xc7c1:    88 42 03                              	mov byte ptr [rdx + 3], al
0xc7c4:    4c 8d 9e b8 00 00 00                  	lea r11, [rsi + 0xb8]
0xc7cb:    48 89 f0                              	mov rax, rsi
; data inside code section at 0xc7ce -- 0xc7d6
0xc7ce:    44 89 c9 32 48 04 41 89                            |D..2H.A.        |
; function: function_c7d6 at 0xc7d6 -- 0xc7d9
0xc7d6:    ca 89 c7                              	retf -0x3877
; data inside code section at 0xc7d9 -- 0xc7da
0xc7d9:    29                                                 |)               |
; function: DTV_HardwareDecrypt at 0xc7da -- 0xc80a
0xc7da:    f7 89 f9 c1 f9 1f c1 e9 1b 01         	test dword ptr [rcx + 0x1ff9c1f9], 0x11be9c1
0xc7e4:    cf                                    	iretd 
0xc7e5:    83 e7 1f                              	and edi, 0x1f
0xc7e8:    29 cf                                 	sub edi, ecx
0xc7ea:    48 63 ff                              	movsxd rdi, edi
0xc7ed:    44 89 d1                              	mov ecx, r10d
0xc7f0:    41 32 8c 38 98 02 00 00               	xor cl, byte ptr [r8 + rdi + 0x298]
0xc7f8:    88 4a 04                              	mov byte ptr [rdx + 4], cl
0xc7fb:    48 83 c0 01                           	add rax, 1
0xc7ff:    48 83 c2 01                           	add rdx, 1
0xc803:    4c 39 d8                              	cmp rax, r11
0xc806:    75 c6                                 	jne 0xc7ce
0xc808:    c9                                    	leave 
0xc809:    c3                                    	ret 
; function: DTV_HardwareDecrypt at 0xc80a -- 0xc8bd
0xc80a:    55                                    	push rbp
0xc80b:    48 89 e5                              	mov rbp, rsp
0xc80e:    e8 dd 23 03 00                        	call 0x3ebf0 <mcount>
0xc813:    49 89 f8                              	mov r8, rdi
0xc816:    4c 8b 97 38 1d 00 00                  	mov r10, qword ptr [rdi + 0x1d38]
0xc81d:    48 89 d7                              	mov rdi, rdx
0xc820:    41 b9 bc 00 00 00                     	mov r9d, 0xbc
0xc826:    b8 00 00 00 00                        	mov eax, 0
0xc82b:    f6 c2 01                              	test dl, 1
0xc82e:    74 0a                                 	je 0xc83a <DTV_HardwareDecrypt+0x30>
0xc830:    88 02                                 	mov byte ptr [rdx], al
0xc832:    48 83 c7 01                           	add rdi, 1
0xc836:    41 83 e9 01                           	sub r9d, 1
0xc83a:    40 f6 c7 02                           	test dil, 2
0xc83e:    74 0b                                 	je 0xc84b <DTV_HardwareDecrypt+0x41>
0xc840:    66 89 07                              	mov word ptr [rdi], ax
0xc843:    48 83 c7 02                           	add rdi, 2
0xc847:    41 83 e9 02                           	sub r9d, 2
0xc84b:    40 f6 c7 04                           	test dil, 4
0xc84f:    74 0a                                 	je 0xc85b <DTV_HardwareDecrypt+0x51>
0xc851:    89 07                                 	mov dword ptr [rdi], eax
0xc853:    48 83 c7 04                           	add rdi, 4
0xc857:    41 83 e9 04                           	sub r9d, 4
0xc85b:    44 89 c9                              	mov ecx, r9d
0xc85e:    c1 e9 03                              	shr ecx, 3
0xc861:    89 c9                                 	mov ecx, ecx
0xc863:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xc866:    41 f6 c1 04                           	test r9b, 4
0xc86a:    74 06                                 	je 0xc872 <DTV_HardwareDecrypt+0x68>
0xc86c:    89 07                                 	mov dword ptr [rdi], eax
0xc86e:    48 83 c7 04                           	add rdi, 4
0xc872:    41 f6 c1 02                           	test r9b, 2
0xc876:    74 07                                 	je 0xc87f <DTV_HardwareDecrypt+0x75>
0xc878:    66 89 07                              	mov word ptr [rdi], ax
0xc87b:    48 83 c7 02                           	add rdi, 2
0xc87f:    41 f6 c1 01                           	test r9b, 1
0xc883:    74 02                                 	je 0xc887 <DTV_HardwareDecrypt+0x7d>
0xc885:    88 07                                 	mov byte ptr [rdi], al
0xc887:    0f b6 06                              	movzx eax, byte ptr [rsi]
0xc88a:    88 02                                 	mov byte ptr [rdx], al
0xc88c:    0f b6 46 01                           	movzx eax, byte ptr [rsi + 1]
0xc890:    88 42 01                              	mov byte ptr [rdx + 1], al
0xc893:    0f b6 46 02                           	movzx eax, byte ptr [rsi + 2]
0xc897:    88 42 02                              	mov byte ptr [rdx + 2], al
0xc89a:    0f b6 46 03                           	movzx eax, byte ptr [rsi + 3]
0xc89e:    88 42 03                              	mov byte ptr [rdx + 3], al
0xc8a1:    4c 8d 9e b8 00 00 00                  	lea r11, [rsi + 0xb8]
0xc8a8:    48 89 f0                              	mov rax, rsi
0xc8ab:    45 0f b6 8a d8 01 00 00               	movzx r9d, byte ptr [r10 + 0x1d8]
0xc8b3:    44 32 48 04                           	xor r9b, byte ptr [rax + 4]
0xc8b7:    89 c7                                 	mov edi, eax
0xc8b9:    29 f7                                 	sub edi, esi
0xc8bb:    89 f9                                 	mov ecx, edi
; data inside code section at 0xc8bd -- 0xc8be
0xc8bd:    c1                                                 |.               |
; function: myAnsiToUnicodeString at 0xc8be -- 0xc8bf
0xc8be:    f9                                    	stc 
; data inside code section at 0xc8bf -- 0xc8c0
0xc8bf:    1f                                                 |.               |
; function: function_c8c0 at 0xc8c0 -- 0xc8ee
0xc8c0:    c1 e9 1c                              	shr ecx, 0x1c
0xc8c3:    01 cf                                 	add edi, ecx
0xc8c5:    83 e7 0f                              	and edi, 0xf
0xc8c8:    29 cf                                 	sub edi, ecx
0xc8ca:    48 63 ff                              	movsxd rdi, edi
0xc8cd:    44 89 c9                              	mov ecx, r9d
0xc8d0:    41 32 8c 38 c4 0d 03 00               	xor cl, byte ptr [r8 + rdi + 0x30dc4]
0xc8d8:    88 4a 04                              	mov byte ptr [rdx + 4], cl
0xc8db:    48 83 c0 01                           	add rax, 1
0xc8df:    49 83 c2 01                           	add r10, 1
0xc8e3:    48 83 c2 01                           	add rdx, 1
0xc8e7:    4c 39 d8                              	cmp rax, r11
0xc8ea:    75 bf                                 	jne 0xc8ab
0xc8ec:    c9                                    	leave 
0xc8ed:    c3                                    	ret 
; function: myAnsiToUnicodeString at 0xc8ee -- 0xc98e
0xc8ee:    55                                    	push rbp
0xc8ef:    48 89 e5                              	mov rbp, rsp
0xc8f2:    41 57                                 	push r15
0xc8f4:    41 56                                 	push r14
0xc8f6:    41 55                                 	push r13
0xc8f8:    41 54                                 	push r12
0xc8fa:    53                                    	push rbx
0xc8fb:    48 81 ec 18 01 00 00                  	sub rsp, 0x118
0xc902:    e8 e9 22 03 00                        	call 0x3ebf0 <mcount>
0xc907:    49 89 ff                              	mov r15, rdi
0xc90a:    89 f3                                 	mov ebx, esi
0xc90c:    49 89 d6                              	mov r14, rdx
0xc90f:    49 89 cd                              	mov r13, rcx
0xc912:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xc91b:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xc91f:    31 c0                                 	xor eax, eax
0xc921:    8b 01                                 	mov eax, dword ptr [rcx]
0xc923:    44 8d 64 1b 02                        	lea r12d, [rbx + rbx + 2]
0xc928:    44 39 e0                              	cmp eax, r12d
0xc92b:    72 05                                 	jb 0xc932 <myAnsiToUnicodeString+0x44>
0xc92d:    83 fe 7f                              	cmp esi, 0x7f
0xc930:    76 07                                 	jbe 0xc939 <myAnsiToUnicodeString+0x4b>
0xc932:    b8 00 00 00 00                        	mov eax, 0
0xc937:    eb 63                                 	jmp 0xc99c
0xc939:    89 c2                                 	mov edx, eax
0xc93b:    be 00 00 00 00                        	mov esi, 0
0xc940:    4c 89 f7                              	mov rdi, r14
0xc943:    e8 f8 22 03 00                        	call 0x3ec40 <memset>
0xc948:    48 8d 95 c0 fe ff ff                  	lea rdx, [rbp - 0x140]
0xc94f:    b9 20 00 00 00                        	mov ecx, 0x20
0xc954:    b8 00 00 00 00                        	mov eax, 0
0xc959:    48 89 d7                              	mov rdi, rdx
0xc95c:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xc95f:    85 db                                 	test ebx, ebx
0xc961:    74 1e                                 	je 0xc981 <myAnsiToUnicodeString+0x93>
0xc963:    48 89 d0                              	mov rax, rdx
0xc966:    83 eb 01                              	sub ebx, 1
0xc969:    49 8d 4c 1f 01                        	lea rcx, [r15 + rbx + 1]
0xc96e:    41 0f b6 17                           	movzx edx, byte ptr [r15]
0xc972:    88 10                                 	mov byte ptr [rax], dl
0xc974:    49 83 c7 01                           	add r15, 1
0xc978:    48 83 c0 02                           	add rax, 2
0xc97c:    49 39 cf                              	cmp r15, rcx
0xc97f:    75 ed                                 	jne 0xc96e <myAnsiToUnicodeString+0x80>
0xc981:    44 89 e2                              	mov edx, r12d
0xc984:    48 8d b5 c0 fe ff ff                  	lea rsi, [rbp - 0x140]
0xc98b:    4c 89 f7                              	mov rdi, r14
; data inside code section at 0xc98e -- 0xc992
0xc98e:    e8 d5 21 03                                        |..!.            |
; function: DriverInterfaceDec at 0xc992 -- 0xc9c2
0xc992:    00 45 89                              	add byte ptr [rbp - 0x77], al
0xc995:    65 00 b8 01 00 00 00                  	add byte ptr gs:[rax + 1], bh
0xc99c:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0xc9a0:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xc9a9:    74 05                                 	je 0xc9b0 <DriverInterfaceDec+0x1e>
0xc9ab:    e8 f8 21 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xc9b0:    48 81 c4 18 01 00 00                  	add rsp, 0x118
0xc9b7:    5b                                    	pop rbx
0xc9b8:    41 5c                                 	pop r12
0xc9ba:    41 5d                                 	pop r13
0xc9bc:    41 5e                                 	pop r14
0xc9be:    41 5f                                 	pop r15
0xc9c0:    c9                                    	leave 
0xc9c1:    c3                                    	ret 
; function: DriverInterfaceDec at 0xc9c2 -- 0xcb2d
0xc9c2:    55                                    	push rbp
0xc9c3:    48 89 e5                              	mov rbp, rsp
0xc9c6:    41 57                                 	push r15
0xc9c8:    41 56                                 	push r14
0xc9ca:    41 55                                 	push r13
0xc9cc:    41 54                                 	push r12
0xc9ce:    53                                    	push rbx
0xc9cf:    48 81 ec 08 01 00 00                  	sub rsp, 0x108
0xc9d6:    e8 15 22 03 00                        	call 0x3ebf0 <mcount>
0xc9db:    49 89 fe                              	mov r14, rdi
0xc9de:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xc9e7:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xc9eb:    31 c0                                 	xor eax, eax
0xc9ed:    4c 8b 87 38 1d 00 00                  	mov r8, qword ptr [rdi + 0x1d38]
0xc9f4:    48 89 d7                              	mov rdi, rdx
0xc9f7:    bb bc 00 00 00                        	mov ebx, 0xbc
0xc9fc:    f6 c2 01                              	test dl, 1
0xc9ff:    74 09                                 	je 0xca0a <DriverInterfaceDec+0x48>
0xca01:    88 02                                 	mov byte ptr [rdx], al
0xca03:    48 83 c7 01                           	add rdi, 1
0xca07:    83 eb 01                              	sub ebx, 1
0xca0a:    40 f6 c7 02                           	test dil, 2
0xca0e:    74 0a                                 	je 0xca1a <DriverInterfaceDec+0x58>
0xca10:    66 89 07                              	mov word ptr [rdi], ax
0xca13:    48 83 c7 02                           	add rdi, 2
0xca17:    83 eb 02                              	sub ebx, 2
0xca1a:    40 f6 c7 04                           	test dil, 4
0xca1e:    74 09                                 	je 0xca29 <DriverInterfaceDec+0x67>
0xca20:    89 07                                 	mov dword ptr [rdi], eax
0xca22:    48 83 c7 04                           	add rdi, 4
0xca26:    83 eb 04                              	sub ebx, 4
0xca29:    89 d9                                 	mov ecx, ebx
0xca2b:    c1 e9 03                              	shr ecx, 3
0xca2e:    89 c9                                 	mov ecx, ecx
0xca30:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xca33:    f6 c3 04                              	test bl, 4
0xca36:    74 06                                 	je 0xca3e <DriverInterfaceDec+0x7c>
0xca38:    89 07                                 	mov dword ptr [rdi], eax
0xca3a:    48 83 c7 04                           	add rdi, 4
0xca3e:    f6 c3 02                              	test bl, 2
0xca41:    74 07                                 	je 0xca4a <DriverInterfaceDec+0x88>
0xca43:    66 89 07                              	mov word ptr [rdi], ax
0xca46:    48 83 c7 02                           	add rdi, 2
0xca4a:    f6 c3 01                              	test bl, 1
0xca4d:    74 02                                 	je 0xca51 <DriverInterfaceDec+0x8f>
0xca4f:    88 07                                 	mov byte ptr [rdi], al
0xca51:    48 8d 9d 00 ff ff ff                  	lea rbx, [rbp - 0x100]
0xca58:    b9 17 00 00 00                        	mov ecx, 0x17
0xca5d:    b8 00 00 00 00                        	mov eax, 0
0xca62:    48 89 df                              	mov rdi, rbx
0xca65:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xca68:    c7 07 00 00 00 00                     	mov dword ptr [rdi], 0
0xca6e:    48 89 f1                              	mov rcx, rsi
0xca71:    49 89 d4                              	mov r12, rdx
0xca74:    4c 8d 8e bc 00 00 00                  	lea r9, [rsi + 0xbc]
0xca7b:    48 89 f0                              	mov rax, rsi
0xca7e:    0f b6 38                              	movzx edi, byte ptr [rax]
0xca81:    40 88 3b                              	mov byte ptr [rbx], dil
0xca84:    40 88 3a                              	mov byte ptr [rdx], dil
0xca87:    48 83 c0 01                           	add rax, 1
0xca8b:    48 83 c3 01                           	add rbx, 1
0xca8f:    48 83 c2 01                           	add rdx, 1
0xca93:    4c 39 c8                              	cmp rax, r9
0xca96:    75 e6                                 	jne 0xca7e <DriverInterfaceDec+0xbc>
0xca98:    49 81 c0 e8 0e 00 00                  	add r8, 0xee8
0xca9f:    4c 89 85 e0 fe ff ff                  	mov qword ptr [rbp - 0x120], r8
0xcaa6:    49 8d 86 58 f7 08 00                  	lea rax, [r14 + 0x8f758]
0xcaad:    48 89 85 e8 fe ff ff                  	mov qword ptr [rbp - 0x118], rax
0xcab4:    49 8d 86 38 fa 08 00                  	lea rax, [r14 + 0x8fa38]
0xcabb:    48 89 85 f0 fe ff ff                  	mov qword ptr [rbp - 0x110], rax
0xcac2:    4c 8d 6e 04                           	lea r13, [rsi + 4]
0xcac6:    48 8d 9d 04 ff ff ff                  	lea rbx, [rbp - 0xfc]
0xcacd:    48 81 c1 a4 00 00 00                  	add rcx, 0xa4
0xcad4:    48 89 8d f8 fe ff ff                  	mov qword ptr [rbp - 0x108], rcx
0xcadb:    49 89 df                              	mov r15, rbx
0xcade:    45 8b 8e a4 f7 08 00                  	mov r9d, dword ptr [r14 + 0x8f7a4]
0xcae5:    48 8b 85 e0 fe ff ff                  	mov rax, qword ptr [rbp - 0x120]
0xcaec:    48 89 04 24                           	mov qword ptr [rsp], rax
0xcaf0:    4d 89 f8                              	mov r8, r15
0xcaf3:    b9 10 00 00 00                        	mov ecx, 0x10
0xcaf8:    4c 89 ea                              	mov rdx, r13
0xcafb:    48 8b b5 e8 fe ff ff                  	mov rsi, qword ptr [rbp - 0x118]
0xcb02:    48 8b bd f0 fe ff ff                  	mov rdi, qword ptr [rbp - 0x110]
0xcb09:    e8 e9 aa 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xcb0e:    49 83 c5 20                           	add r13, 0x20
0xcb12:    49 83 c7 20                           	add r15, 0x20
0xcb16:    4c 3b ad f8 fe ff ff                  	cmp r13, qword ptr [rbp - 0x108]
0xcb1d:    75 bf                                 	jne 0xcade <DriverInterfaceDec+0x11c>
0xcb1f:    48 8d 7d bc                           	lea rdi, [rbp - 0x44]
0xcb23:    4c 89 e0                              	mov rax, r12
0xcb26:    48 c7 c6 00 00 00 00                  	mov rsi, 0
; data inside code section at 0xcb2d -- 0xcb2e
0xcb2d:    89                                                 |.               |
; function: function_cb2e at 0xcb2e -- 0xcb36
0xcb2e:    c1 44 29 e1 89                        	rol dword ptr [rcx + rbp - 0x1f], -0x77
0xcb33:    ca c1 fa                              	retf -0x53f
; data inside code section at 0xcb36 -- 0xcb49
0xcb36:    1f c1 ea 1b 01 d1 83 e1  1f 29 d1 48 63 d1 0f b6   |.........).Hc...|
0xcb46:    14 16 32                                           |..2             |
; function: function_cb49 at 0xcb49 -- 0xcb50
0xcb49:    13 88 50 04 48 83                     	adc ecx, dword ptr [rax - 0x7cb7fbb0]
0xcb4f:    c3                                    	ret 
; function: DriverInterfaceDec_Multi at 0xcb50 -- 0xcb80
0xcb50:    01 48 83                              	add dword ptr [rax - 0x7d], ecx
0xcb53:    c0 01 48                              	rol byte ptr [rcx], 0x48
0xcb56:    39 fb                                 	cmp ebx, edi
0xcb58:    75 d3                                 	jne 0xcb2d
0xcb5a:    48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0xcb5e:    65 48 33 04 25 28 00 00 00            	xor rax, qword ptr gs:[0x28]
0xcb67:    74 05                                 	je 0xcb6e <DriverInterfaceDec_Multi+0x1e>
0xcb69:    e8 3a 20 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xcb6e:    48 81 c4 08 01 00 00                  	add rsp, 0x108
0xcb75:    5b                                    	pop rbx
0xcb76:    41 5c                                 	pop r12
0xcb78:    41 5d                                 	pop r13
0xcb7a:    41 5e                                 	pop r14
0xcb7c:    41 5f                                 	pop r15
0xcb7e:    c9                                    	leave 
0xcb7f:    c3                                    	ret 
; function: DriverInterfaceDec_Multi at 0xcb80 -- 0xcbb2
0xcb80:    55                                    	push rbp
0xcb81:    48 89 e5                              	mov rbp, rsp
0xcb84:    41 57                                 	push r15
0xcb86:    41 56                                 	push r14
0xcb88:    41 55                                 	push r13
0xcb8a:    41 54                                 	push r12
0xcb8c:    53                                    	push rbx
0xcb8d:    48 83 ec 18                           	sub rsp, 0x18
0xcb91:    e8 5a 20 03 00                        	call 0x3ebf0 <mcount>
0xcb96:    48 89 7d c8                           	mov qword ptr [rbp - 0x38], rdi
0xcb9a:    49 89 f7                              	mov r15, rsi
0xcb9d:    41 89 d6                              	mov r14d, edx
0xcba0:    49 89 cd                              	mov r13, rcx
0xcba3:    85 d2                                 	test edx, edx
0xcba5:    7e 2f                                 	jle 0xcbd6
0xcba7:    bb 00 00 00 00                        	mov ebx, 0
0xcbac:    41 bc 00 00 00 00                     	mov r12d, 0
; data inside code section at 0xcbb2 -- 0xcbb5
0xcbb2:    48 63 f3                                           |Hc.             |
; function: DriverInterfaceEnc at 0xcbb5 -- 0xcbe5
0xcbb5:    49 8d 54 35 00                        	lea rdx, [r13 + rsi]
0xcbba:    49 8d 34 37                           	lea rsi, [r15 + rsi]
0xcbbe:    48 8b 7d c8                           	mov rdi, qword ptr [rbp - 0x38]
0xcbc2:    e8 fb fd ff ff                        	call 0xc9c2 <DriverInterfaceDec>
0xcbc7:    41 83 c4 01                           	add r12d, 1
0xcbcb:    81 c3 bc 00 00 00                     	add ebx, 0xbc
0xcbd1:    45 39 e6                              	cmp r14d, r12d
0xcbd4:    7f dc                                 	jg 0xcbb2
0xcbd6:    48 83 c4 18                           	add rsp, 0x18
0xcbda:    5b                                    	pop rbx
0xcbdb:    41 5c                                 	pop r12
0xcbdd:    41 5d                                 	pop r13
0xcbdf:    41 5e                                 	pop r14
0xcbe1:    41 5f                                 	pop r15
0xcbe3:    c9                                    	leave 
0xcbe4:    c3                                    	ret 
; function: DriverInterfaceEnc at 0xcbe5 -- 0xcd60
0xcbe5:    55                                    	push rbp
0xcbe6:    48 89 e5                              	mov rbp, rsp
0xcbe9:    41 57                                 	push r15
0xcbeb:    41 56                                 	push r14
0xcbed:    41 55                                 	push r13
0xcbef:    41 54                                 	push r12
0xcbf1:    53                                    	push rbx
0xcbf2:    48 81 ec f8 00 00 00                  	sub rsp, 0xf8
0xcbf9:    e8 f2 1f 03 00                        	call 0x3ebf0 <mcount>
0xcbfe:    49 89 fc                              	mov r12, rdi
0xcc01:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xcc0a:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xcc0e:    31 c0                                 	xor eax, eax
0xcc10:    4c 8b b7 38 1d 00 00                  	mov r14, qword ptr [rdi + 0x1d38]
0xcc17:    48 89 d7                              	mov rdi, rdx
0xcc1a:    bb bc 00 00 00                        	mov ebx, 0xbc
0xcc1f:    f6 c2 01                              	test dl, 1
0xcc22:    74 09                                 	je 0xcc2d <DriverInterfaceEnc+0x48>
0xcc24:    88 02                                 	mov byte ptr [rdx], al
0xcc26:    48 83 c7 01                           	add rdi, 1
0xcc2a:    83 eb 01                              	sub ebx, 1
0xcc2d:    40 f6 c7 02                           	test dil, 2
0xcc31:    74 0a                                 	je 0xcc3d <DriverInterfaceEnc+0x58>
0xcc33:    66 89 07                              	mov word ptr [rdi], ax
0xcc36:    48 83 c7 02                           	add rdi, 2
0xcc3a:    83 eb 02                              	sub ebx, 2
0xcc3d:    40 f6 c7 04                           	test dil, 4
0xcc41:    74 09                                 	je 0xcc4c <DriverInterfaceEnc+0x67>
0xcc43:    89 07                                 	mov dword ptr [rdi], eax
0xcc45:    48 83 c7 04                           	add rdi, 4
0xcc49:    83 eb 04                              	sub ebx, 4
0xcc4c:    89 d9                                 	mov ecx, ebx
0xcc4e:    c1 e9 03                              	shr ecx, 3
0xcc51:    89 c9                                 	mov ecx, ecx
0xcc53:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xcc56:    f6 c3 04                              	test bl, 4
0xcc59:    74 06                                 	je 0xcc61 <DriverInterfaceEnc+0x7c>
0xcc5b:    89 07                                 	mov dword ptr [rdi], eax
0xcc5d:    48 83 c7 04                           	add rdi, 4
0xcc61:    f6 c3 02                              	test bl, 2
0xcc64:    74 07                                 	je 0xcc6d <DriverInterfaceEnc+0x88>
0xcc66:    66 89 07                              	mov word ptr [rdi], ax
0xcc69:    48 83 c7 02                           	add rdi, 2
0xcc6d:    f6 c3 01                              	test bl, 1
0xcc70:    74 02                                 	je 0xcc74 <DriverInterfaceEnc+0x8f>
0xcc72:    88 07                                 	mov byte ptr [rdi], al
0xcc74:    4c 8d 85 00 ff ff ff                  	lea r8, [rbp - 0x100]
0xcc7b:    b9 17 00 00 00                        	mov ecx, 0x17
0xcc80:    b8 00 00 00 00                        	mov eax, 0
0xcc85:    4c 89 c7                              	mov rdi, r8
0xcc88:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xcc8b:    c7 07 00 00 00 00                     	mov dword ptr [rdi], 0
0xcc91:    0f b6 06                              	movzx eax, byte ptr [rsi]
0xcc94:    88 02                                 	mov byte ptr [rdx], al
0xcc96:    0f b6 46 01                           	movzx eax, byte ptr [rsi + 1]
0xcc9a:    88 42 01                              	mov byte ptr [rdx + 1], al
0xcc9d:    0f b6 46 02                           	movzx eax, byte ptr [rsi + 2]
0xcca1:    88 42 02                              	mov byte ptr [rdx + 2], al
0xcca4:    0f b6 46 03                           	movzx eax, byte ptr [rsi + 3]
0xcca8:    88 42 03                              	mov byte ptr [rdx + 3], al
0xccab:    48 83 c6 04                           	add rsi, 4
0xccaf:    49 8d 58 04                           	lea rbx, [r8 + 4]
0xccb3:    49 89 d3                              	mov r11, rdx
0xccb6:    4d 8d a8 bc 00 00 00                  	lea r13, [r8 + 0xbc]
0xccbd:    48 89 d1                              	mov rcx, rdx
0xccc0:    48 89 d8                              	mov rax, rbx
0xccc3:    49 c7 c2 00 00 00 00                  	mov r10, 0
0xccca:    41 89 c9                              	mov r9d, ecx
0xcccd:    45 29 d9                              	sub r9d, r11d
0xccd0:    44 89 cf                              	mov edi, r9d
0xccd3:    c1 ff 1f                              	sar edi, 0x1f
0xccd6:    c1 ef 1b                              	shr edi, 0x1b
0xccd9:    41 01 f9                              	add r9d, edi
0xccdc:    41 83 e1 1f                           	and r9d, 0x1f
0xcce0:    41 29 f9                              	sub r9d, edi
0xcce3:    49 63 f9                              	movsxd rdi, r9d
0xcce6:    41 0f b6 3c 3a                        	movzx edi, byte ptr [r10 + rdi]
0xcceb:    40 32 3e                              	xor dil, byte ptr [rsi]
0xccee:    40 88 38                              	mov byte ptr [rax], dil
0xccf1:    40 88 79 04                           	mov byte ptr [rcx + 4], dil
0xccf5:    48 83 c6 01                           	add rsi, 1
0xccf9:    48 83 c0 01                           	add rax, 1
0xccfd:    48 83 c1 01                           	add rcx, 1
0xcd01:    4c 39 e8                              	cmp rax, r13
0xcd04:    75 c4                                 	jne 0xccca <DriverInterfaceEnc+0xe5>
0xcd06:    49 81 c6 e8 0e 00 00                  	add r14, 0xee8
0xcd0d:    4d 8d bc 24 78 f4 08 00               	lea r15, [r12 + 0x8f478]
0xcd15:    49 8d 84 24 38 fa 08 00               	lea rax, [r12 + 0x8fa38]
0xcd1d:    48 89 85 f0 fe ff ff                  	mov qword ptr [rbp - 0x110], rax
0xcd24:    4c 8d 6a 04                           	lea r13, [rdx + 4]
0xcd28:    49 81 c0 a4 00 00 00                  	add r8, 0xa4
0xcd2f:    4c 89 85 f8 fe ff ff                  	mov qword ptr [rbp - 0x108], r8
0xcd36:    45 8b 8c 24 c4 f4 08 00               	mov r9d, dword ptr [r12 + 0x8f4c4]
0xcd3e:    4c 89 34 24                           	mov qword ptr [rsp], r14
0xcd42:    4d 89 e8                              	mov r8, r13
0xcd45:    b9 10 00 00 00                        	mov ecx, 0x10
0xcd4a:    48 89 da                              	mov rdx, rbx
0xcd4d:    4c 89 fe                              	mov rsi, r15
0xcd50:    48 8b bd f0 fe ff ff                  	mov rdi, qword ptr [rbp - 0x110]
0xcd57:    e8 9b a8 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xcd5c:    48 83 c3 20                           	add rbx, 0x20
; data inside code section at 0xcd60 -- 0xcd63
0xcd60:    49 83 c5                                           |I..             |
; function: DriverInterfaceEnc_Multi at 0xcd63 -- 0xcd68
0xcd63:    20 48 3b                              	and byte ptr [rax + 0x3b], cl
0xcd66:    9d                                    	popfq 
0xcd67:    f8                                    	clc 
; data inside code section at 0xcd68 -- 0xcd6a
0xcd68:    fe ff                                              |..              |
; function: function_cd6a at 0xcd6a -- 0xcd93
0xcd6a:    ff 75 c9                              	push qword ptr [rbp - 0x37]
0xcd6d:    48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0xcd71:    65 48 33 04 25 28 00 00 00            	xor rax, qword ptr gs:[0x28]
0xcd7a:    74 05                                 	je 0xcd81 <function_cd6a+0x17>
0xcd7c:    e8 27 1e 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xcd81:    48 81 c4 f8 00 00 00                  	add rsp, 0xf8
0xcd88:    5b                                    	pop rbx
0xcd89:    41 5c                                 	pop r12
0xcd8b:    41 5d                                 	pop r13
0xcd8d:    41 5e                                 	pop r14
0xcd8f:    41 5f                                 	pop r15
0xcd91:    c9                                    	leave 
0xcd92:    c3                                    	ret 
; function: DriverInterfaceEnc_Multi at 0xcd93 -- 0xcdc5
0xcd93:    55                                    	push rbp
0xcd94:    48 89 e5                              	mov rbp, rsp
0xcd97:    41 57                                 	push r15
0xcd99:    41 56                                 	push r14
0xcd9b:    41 55                                 	push r13
0xcd9d:    41 54                                 	push r12
0xcd9f:    53                                    	push rbx
0xcda0:    48 83 ec 18                           	sub rsp, 0x18
0xcda4:    e8 47 1e 03 00                        	call 0x3ebf0 <mcount>
0xcda9:    48 89 7d c8                           	mov qword ptr [rbp - 0x38], rdi
0xcdad:    49 89 f7                              	mov r15, rsi
0xcdb0:    41 89 d6                              	mov r14d, edx
0xcdb3:    49 89 cd                              	mov r13, rcx
0xcdb6:    85 d2                                 	test edx, edx
0xcdb8:    7e 2f                                 	jle 0xcde9
0xcdba:    bb 00 00 00 00                        	mov ebx, 0
0xcdbf:    41 bc 00 00 00 00                     	mov r12d, 0
; data inside code section at 0xcdc5 -- 0xcdc8
0xcdc5:    48 63 f3                                           |Hc.             |
; function: Get_CARD_INFO at 0xcdc8 -- 0xcdf8
0xcdc8:    49 8d 54 35 00                        	lea rdx, [r13 + rsi]
0xcdcd:    49 8d 34 37                           	lea rsi, [r15 + rsi]
0xcdd1:    48 8b 7d c8                           	mov rdi, qword ptr [rbp - 0x38]
0xcdd5:    e8 0b fe ff ff                        	call 0xcbe5 <DriverInterfaceEnc>
0xcdda:    41 83 c4 01                           	add r12d, 1
0xcdde:    81 c3 bc 00 00 00                     	add ebx, 0xbc
0xcde4:    45 39 e6                              	cmp r14d, r12d
0xcde7:    7f dc                                 	jg 0xcdc5
0xcde9:    48 83 c4 18                           	add rsp, 0x18
0xcded:    5b                                    	pop rbx
0xcdee:    41 5c                                 	pop r12
0xcdf0:    41 5d                                 	pop r13
0xcdf2:    41 5e                                 	pop r14
0xcdf4:    41 5f                                 	pop r15
0xcdf6:    c9                                    	leave 
0xcdf7:    c3                                    	ret 
; function: Get_CARD_INFO at 0xcdf8 -- 0xd010
0xcdf8:    55                                    	push rbp
0xcdf9:    48 89 e5                              	mov rbp, rsp
0xcdfc:    41 57                                 	push r15
0xcdfe:    41 56                                 	push r14
0xce00:    41 55                                 	push r13
0xce02:    41 54                                 	push r12
0xce04:    53                                    	push rbx
0xce05:    48 81 ec 98 01 00 00                  	sub rsp, 0x198
0xce0c:    e8 df 1d 03 00                        	call 0x3ebf0 <mcount>
0xce11:    48 89 8d 78 fe ff ff                  	mov qword ptr [rbp - 0x188], rcx
0xce18:    4c 89 85 68 fe ff ff                  	mov qword ptr [rbp - 0x198], r8
0xce1f:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xce28:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xce2c:    31 c0                                 	xor eax, eax
0xce2e:    49 89 fe                              	mov r14, rdi
0xce31:    48 89 b5 58 fe ff ff                  	mov qword ptr [rbp - 0x1a8], rsi
0xce38:    48 8b 8e 38 1d 00 00                  	mov rcx, qword ptr [rsi + 0x1d38]
0xce3f:    48 89 8d 70 fe ff ff                  	mov qword ptr [rbp - 0x190], rcx
0xce46:    0f b6 87 38 13 00 00                  	movzx eax, byte ptr [rdi + 0x1338]
0xce4d:    88 02                                 	mov byte ptr [rdx], al
0xce4f:    8b 87 c8 15 00 00                     	mov eax, dword ptr [rdi + 0x15c8]
0xce55:    85 c0                                 	test eax, eax
0xce57:    75 0f                                 	jne 0xce68 <Get_CARD_INFO+0x70>
0xce59:    48 8b 85 78 fe ff ff                  	mov rax, qword ptr [rbp - 0x188]
0xce60:    c6 00 00                              	mov byte ptr [rax], 0
0xce63:    e9 b1 01 00 00                        	jmp 0xd019
0xce68:    80 bf 38 13 00 00 00                  	cmp byte ptr [rdi + 0x1338], 0
0xce6f:    75 18                                 	jne 0xce89 <Get_CARD_INFO+0x91>
0xce71:    48 8b 8d 78 fe ff ff                  	mov rcx, qword ptr [rbp - 0x188]
0xce78:    c6 01 00                              	mov byte ptr [rcx], 0
0xce7b:    0f b6 87 38 13 00 00                  	movzx eax, byte ptr [rdi + 0x1338]
0xce82:    88 02                                 	mov byte ptr [rdx], al
0xce84:    e9 90 01 00 00                        	jmp 0xd019
0xce89:    3d ff 00 00 00                        	cmp eax, 0xff
0xce8e:    7e 0a                                 	jle 0xce9a <Get_CARD_INFO+0xa2>
0xce90:    c7 87 c8 15 00 00 ff 00 00 00         	mov dword ptr [rdi + 0x15c8], 0xff
0xce9a:    41 8b 86 c8 15 00 00                  	mov eax, dword ptr [r14 + 0x15c8]
0xcea1:    8d 44 40 01                           	lea eax, [rax + rax*2 + 1]
0xcea5:    48 63 f0                              	movsxd rsi, eax
0xcea8:    bf 00 00 00 00                        	mov edi, 0
0xcead:    e8 b6 92 ff ff                        	call 0x6168 <FUSB_ExAllocatePool>
0xceb2:    49 89 c5                              	mov r13, rax
0xceb5:    41 8b 86 c8 15 00 00                  	mov eax, dword ptr [r14 + 0x15c8]
0xcebc:    8d 44 40 01                           	lea eax, [rax + rax*2 + 1]
0xcec0:    48 63 d0                              	movsxd rdx, eax
0xcec3:    be 00 00 00 00                        	mov esi, 0
0xcec8:    4c 89 ef                              	mov rdi, r13
0xcecb:    e8 70 1d 03 00                        	call 0x3ec40 <memset>
0xced0:    41 83 be c8 15 00 00 00               	cmp dword ptr [r14 + 0x15c8], 0
0xced8:    7e 3b                                 	jle 0xcf15 <Get_CARD_INFO+0x11d>
0xceda:    4c 89 f3                              	mov rbx, r14
0xcedd:    41 bc 00 00 00 00                     	mov r12d, 0
0xcee3:    49 c7 c7 00 00 00 00                  	mov r15, 0
0xceea:    0f b6 8b 86 14 00 00                  	movzx ecx, byte ptr [rbx + 0x1486]
0xcef1:    4c 89 ea                              	mov rdx, r13
0xcef4:    4c 89 fe                              	mov rsi, r15
0xcef7:    4c 89 ef                              	mov rdi, r13
0xcefa:    b8 00 00 00 00                        	mov eax, 0
0xceff:    e8 64 1d 03 00                        	call 0x3ec68 <sprintf>
0xcf04:    41 83 c4 01                           	add r12d, 1
0xcf08:    48 83 c3 01                           	add rbx, 1
0xcf0c:    45 39 a6 c8 15 00 00                  	cmp dword ptr [r14 + 0x15c8], r12d
0xcf13:    7f d5                                 	jg 0xceea <Get_CARD_INFO+0xf2>
0xcf15:    4c 89 ef                              	mov rdi, r13
0xcf18:    e8 3b 92 ff ff                        	call 0x6158 <FUSB_ExFreePool>
0xcf1d:    48 8d 9d 80 fe ff ff                  	lea rbx, [rbp - 0x180]
0xcf24:    b9 28 00 00 00                        	mov ecx, 0x28
0xcf29:    b8 00 00 00 00                        	mov eax, 0
0xcf2e:    48 89 df                              	mov rdi, rbx
0xcf31:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xcf34:    49 63 96 c8 15 00 00                  	movsxd rdx, dword ptr [r14 + 0x15c8]
0xcf3b:    49 8d b6 86 14 00 00                  	lea rsi, [r14 + 0x1486]
0xcf42:    48 89 df                              	mov rdi, rbx
0xcf45:    e8 1e 1c 03 00                        	call 0x3eb68 <memcpy>
0xcf4a:    41 8b 86 c8 15 00 00                  	mov eax, dword ptr [r14 + 0x15c8]
0xcf51:    89 c2                                 	mov edx, eax
0xcf53:    48 8b 8d 78 fe ff ff                  	mov rcx, qword ptr [rbp - 0x188]
0xcf5a:    88 01                                 	mov byte ptr [rcx], al
0xcf5c:    c0 e8 04                              	shr al, 4
0xcf5f:    83 e2 0f                              	and edx, 0xf
0xcf62:    83 fa 01                              	cmp edx, 1
0xcf65:    1c ff                                 	sbb al, 0xff
0xcf67:    3c 10                                 	cmp al, 0x10
0xcf69:    41 bf 10 00 00 00                     	mov r15d, 0x10
0xcf6f:    44 0f 46 f8                           	cmovbe r15d, eax
0xcf73:    45 84 ff                              	test r15b, r15b
0xcf76:    0f 84 9d 00 00 00                     	je 0xd019
0xcf7c:    4c 8b b5 70 fe ff ff                  	mov r14, qword ptr [rbp - 0x190]
0xcf83:    49 81 c6 e8 0e 00 00                  	add r14, 0xee8
0xcf8a:    48 8b 85 58 fe ff ff                  	mov rax, qword ptr [rbp - 0x1a8]
0xcf91:    48 05 78 f4 08 00                     	add rax, 0x8f478
0xcf97:    48 89 85 70 fe ff ff                  	mov qword ptr [rbp - 0x190], rax
0xcf9e:    48 8b 95 58 fe ff ff                  	mov rdx, qword ptr [rbp - 0x1a8]
0xcfa5:    48 81 c2 38 fa 08 00                  	add rdx, 0x8fa38
0xcfac:    48 89 95 78 fe ff ff                  	mov qword ptr [rbp - 0x188], rdx
0xcfb3:    bb 00 00 00 00                        	mov ebx, 0
0xcfb8:    41 bc 00 00 00 00                     	mov r12d, 0
0xcfbe:    4c 8d ad 80 fe ff ff                  	lea r13, [rbp - 0x180]
0xcfc5:    44 88 bd 67 fe ff ff                  	mov byte ptr [rbp - 0x199], r15b
0xcfcc:    4d 89 f7                              	mov r15, r14
0xcfcf:    4c 8b b5 58 fe ff ff                  	mov r14, qword ptr [rbp - 0x1a8]
0xcfd6:    45 8b 8e c4 f4 08 00                  	mov r9d, dword ptr [r14 + 0x8f4c4]
0xcfdd:    4a 8d 14 2b                           	lea rdx, [rbx + r13]
0xcfe1:    4c 89 3c 24                           	mov qword ptr [rsp], r15
0xcfe5:    48 8b 8d 68 fe ff ff                  	mov rcx, qword ptr [rbp - 0x198]
0xcfec:    4c 8d 04 19                           	lea r8, [rcx + rbx]
0xcff0:    b9 10 00 00 00                        	mov ecx, 0x10
0xcff5:    48 8b b5 70 fe ff ff                  	mov rsi, qword ptr [rbp - 0x190]
0xcffc:    48 8b bd 78 fe ff ff                  	mov rdi, qword ptr [rbp - 0x188]
0xd003:    e8 ef a5 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xd008:    41 83 c4 01                           	add r12d, 1
0xd00c:    48 83 c3 10                           	add rbx, 0x10
; data inside code section at 0xd010 -- 0xd014
0xd010:    44 38 a5 67                                        |D8.g            |
; function: DTV_DecrypTS_5607 at 0xd014 -- 0xd044
; function: DTV_DecrypTS_5607 at 0xd044 -- 0xd877
0xd044:    55                                    	push rbp
0xd045:    48 89 e5                              	mov rbp, rsp
0xd048:    41 57                                 	push r15
0xd04a:    41 56                                 	push r14
0xd04c:    41 55                                 	push r13
0xd04e:    41 54                                 	push r12
0xd050:    53                                    	push rbx
0xd051:    48 81 ec 98 00 00 00                  	sub rsp, 0x98
0xd058:    e8 93 1b 03 00                        	call 0x3ebf0 <mcount>
0xd05d:    49 89 fd                              	mov r13, rdi
0xd060:    49 89 f4                              	mov r12, rsi
0xd063:    48 89 55 a0                           	mov qword ptr [rbp - 0x60], rdx
0xd067:    89 4d 98                              	mov dword ptr [rbp - 0x68], ecx
0xd06a:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xd073:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xd077:    31 c0                                 	xor eax, eax
0xd079:    48 8b 9f 38 1d 00 00                  	mov rbx, qword ptr [rdi + 0x1d38]
0xd080:    80 bf e4 0d 03 00 00                  	cmp byte ptr [rdi + 0x30de4], 0
0xd087:    0f 84 7a 07 00 00                     	je 0xd807 <DTV_DecrypTS_5607+0x7c3>
0xd08d:    4c 63 f1                              	movsxd r14, ecx
0xd090:    4c 89 f6                              	mov rsi, r14
0xd093:    bf 00 00 00 00                        	mov edi, 0
0xd098:    e8 cb 90 ff ff                        	call 0x6168 <FUSB_ExAllocatePool>
0xd09d:    48 89 85 60 ff ff ff                  	mov qword ptr [rbp - 0xa0], rax
0xd0a4:    4c 89 f6                              	mov rsi, r14
0xd0a7:    bf 00 00 00 00                        	mov edi, 0
0xd0ac:    e8 b7 90 ff ff                        	call 0x6168 <FUSB_ExAllocatePool>
0xd0b1:    48 89 85 68 ff ff ff                  	mov qword ptr [rbp - 0x98], rax
0xd0b8:    41 80 bd a1 0d 03 00 00               	cmp byte ptr [r13 + 0x30da1], 0
0xd0c0:    74 0f                                 	je 0xd0d1 <DTV_DecrypTS_5607+0x8d>
0xd0c2:    83 7d 98 00                           	cmp dword ptr [rbp - 0x68], 0
0xd0c6:    0f 8f a0 03 00 00                     	jg 0xd46c <DTV_DecrypTS_5607+0x428>
0xd0cc:    e9 86 07 00 00                        	jmp 0xd857 <DTV_DecrypTS_5607+0x813>
0xd0d1:    83 7d 98 00                           	cmp dword ptr [rbp - 0x68], 0
0xd0d5:    0f 8e 42 07 00 00                     	jle 0xd81d <DTV_DecrypTS_5607+0x7d9>
0xd0db:    48 81 c3 e8 0e 00 00                  	add rbx, 0xee8
0xd0e2:    48 89 5d 80                           	mov qword ptr [rbp - 0x80], rbx
0xd0e6:    49 8d 95 84 f1 08 00                  	lea rdx, [r13 + 0x8f184]
0xd0ed:    48 89 55 88                           	mov qword ptr [rbp - 0x78], rdx
0xd0f1:    49 8d 8d 64 f4 08 00                  	lea rcx, [r13 + 0x8f464]
0xd0f8:    48 89 8d 78 ff ff ff                  	mov qword ptr [rbp - 0x88], rcx
0xd0ff:    c7 45 9c 00 00 00 00                  	mov dword ptr [rbp - 0x64], 0
0xd106:    4c 8d 7d b0                           	lea r15, [rbp - 0x50]
0xd10a:    49 83 c7 10                           	add r15, 0x10
0xd10e:    48 8d 45 b0                           	lea rax, [rbp - 0x50]
0xd112:    48 83 c0 08                           	add rax, 8
0xd116:    48 89 85 70 ff ff ff                  	mov qword ptr [rbp - 0x90], rax
0xd11d:    48 63 55 9c                           	movsxd rdx, dword ptr [rbp - 0x64]
0xd121:    48 89 55 a8                           	mov qword ptr [rbp - 0x58], rdx
0xd125:    49 8d 1c 14                           	lea rbx, [r12 + rdx]
0xd129:    48 89 da                              	mov rdx, rbx
0xd12c:    48 89 de                              	mov rsi, rbx
0xd12f:    4c 89 ef                              	mov rdi, r13
0xd132:    e8 59 f4 ff ff                        	call 0xc590 <DTV_HardwareDecrypt_ASV5606>
0xd137:    0f b6 03                              	movzx eax, byte ptr [rbx]
0xd13a:    48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0xd13e:    48 8b 4d a8                           	mov rcx, qword ptr [rbp - 0x58]
0xd142:    88 04 0a                              	mov byte ptr [rdx + rcx], al
0xd145:    48 89 c8                              	mov rax, rcx
0xd148:    48 83 c0 01                           	add rax, 1
0xd14c:    41 0f b6 14 04                        	movzx edx, byte ptr [r12 + rax]
0xd151:    48 8b 4d a0                           	mov rcx, qword ptr [rbp - 0x60]
0xd155:    88 14 01                              	mov byte ptr [rcx + rax], dl
0xd158:    48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0xd15c:    48 83 c0 02                           	add rax, 2
0xd160:    41 0f b6 14 04                        	movzx edx, byte ptr [r12 + rax]
0xd165:    88 14 01                              	mov byte ptr [rcx + rax], dl
0xd168:    48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0xd16c:    48 83 c0 03                           	add rax, 3
0xd170:    41 0f b6 14 04                        	movzx edx, byte ptr [r12 + rax]
0xd175:    88 14 01                              	mov byte ptr [rcx + rax], dl
0xd178:    48 8b 75 a8                           	mov rsi, qword ptr [rbp - 0x58]
0xd17c:    48 81 c6 ac 00 00 00                  	add rsi, 0xac
0xd183:    49 8d 04 34                           	lea rax, [r12 + rsi]
0xd187:    48 8b 10                              	mov rdx, qword ptr [rax]
0xd18a:    48 89 55 b0                           	mov qword ptr [rbp - 0x50], rdx
0xd18e:    48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0xd192:    48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0xd196:    48 8d 5d b0                           	lea rbx, [rbp - 0x50]
0xd19a:    4d 89 ee                              	mov r14, r13
0xd19d:    4c 89 ea                              	mov rdx, r13
0xd1a0:    48 89 d8                              	mov rax, rbx
0xd1a3:    0f b6 8a 97 fc 08 00                  	movzx ecx, byte ptr [rdx + 0x8fc97]
0xd1aa:    30 08                                 	xor byte ptr [rax], cl
0xd1ac:    48 83 c0 01                           	add rax, 1
0xd1b0:    48 83 ea 01                           	sub rdx, 1
0xd1b4:    4c 39 f8                              	cmp rax, r15
0xd1b7:    75 ea                                 	jne 0xd1a3 <DTV_DecrypTS_5607+0x15f>
0xd1b9:    48 03 75 a0                           	add rsi, qword ptr [rbp - 0x60]
0xd1bd:    48 89 75 90                           	mov qword ptr [rbp - 0x70], rsi
0xd1c1:    45 8b 8d d0 f1 08 00                  	mov r9d, dword ptr [r13 + 0x8f1d0]
0xd1c8:    48 8b 45 80                           	mov rax, qword ptr [rbp - 0x80]
0xd1cc:    48 89 04 24                           	mov qword ptr [rsp], rax
0xd1d0:    49 89 f0                              	mov r8, rsi
0xd1d3:    b9 10 00 00 00                        	mov ecx, 0x10
0xd1d8:    48 8d 55 b0                           	lea rdx, [rbp - 0x50]
0xd1dc:    48 8b 75 88                           	mov rsi, qword ptr [rbp - 0x78]
0xd1e0:    48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0xd1e7:    e8 0b a4 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xd1ec:    48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0xd1f0:    48 05 a4 00 00 00                     	add rax, 0xa4
0xd1f6:    49 8b 14 04                           	mov rdx, qword ptr [r12 + rax]
0xd1fa:    48 89 55 b0                           	mov qword ptr [rbp - 0x50], rdx
0xd1fe:    48 8b 4d 90                           	mov rcx, qword ptr [rbp - 0x70]
0xd202:    48 8b 11                              	mov rdx, qword ptr [rcx]
0xd205:    48 8b 8d 70 ff ff ff                  	mov rcx, qword ptr [rbp - 0x90]
0xd20c:    48 89 11                              	mov qword ptr [rcx], rdx
0xd20f:    41 0f b6 96 97 fc 08 00               	movzx edx, byte ptr [r14 + 0x8fc97]
0xd217:    30 13                                 	xor byte ptr [rbx], dl
0xd219:    48 83 c3 01                           	add rbx, 1
0xd21d:    49 83 ee 01                           	sub r14, 1
0xd221:    4c 39 fb                              	cmp rbx, r15
0xd224:    75 e9                                 	jne 0xd20f <DTV_DecrypTS_5607+0x1cb>
0xd226:    45 8b 8d d0 f1 08 00                  	mov r9d, dword ptr [r13 + 0x8f1d0]
0xd22d:    48 8b 55 80                           	mov rdx, qword ptr [rbp - 0x80]
0xd231:    48 89 14 24                           	mov qword ptr [rsp], rdx
0xd235:    48 8b 4d a0                           	mov rcx, qword ptr [rbp - 0x60]
0xd239:    4c 8d 04 01                           	lea r8, [rcx + rax]
0xd23d:    b9 10 00 00 00                        	mov ecx, 0x10
0xd242:    48 8d 55 b0                           	lea rdx, [rbp - 0x50]
0xd246:    48 8b 75 88                           	mov rsi, qword ptr [rbp - 0x78]
0xd24a:    48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0xd251:    e8 a1 a3 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xd256:    8b 75 9c                              	mov esi, dword ptr [rbp - 0x64]
0xd259:    83 c6 04                              	add esi, 4
0xd25c:    8b 7d 9c                              	mov edi, dword ptr [rbp - 0x64]
0xd25f:    81 c7 a4 00 00 00                     	add edi, 0xa4
0xd265:    eb 24                                 	jmp 0xd28b <DTV_DecrypTS_5607+0x247>
0xd267:    48 63 ca                              	movsxd rcx, edx
0xd26a:    41 0f b6 9c 05 97 fc 08 00            	movzx ebx, byte ptr [r13 + rax + 0x8fc97]
0xd273:    41 30 1c 0c                           	xor byte ptr [r12 + rcx], bl
0xd277:    83 c2 01                              	add edx, 1
0xd27a:    48 83 e8 01                           	sub rax, 1
0xd27e:    48 83 f8 f0                           	cmp rax, -0x10
0xd282:    75 e3                                 	jne 0xd267 <DTV_DecrypTS_5607+0x223>
0xd284:    83 c6 10                              	add esi, 0x10
0xd287:    39 fe                                 	cmp esi, edi
0xd289:    74 09                                 	je 0xd294 <DTV_DecrypTS_5607+0x250>
0xd28b:    89 f2                                 	mov edx, esi
0xd28d:    b8 00 00 00 00                        	mov eax, 0
0xd292:    eb d3                                 	jmp 0xd267 <DTV_DecrypTS_5607+0x223>
0xd294:    81 45 9c bc 00 00 00                  	add dword ptr [rbp - 0x64], 0xbc
0xd29b:    8b 45 9c                              	mov eax, dword ptr [rbp - 0x64]
0xd29e:    39 45 98                              	cmp dword ptr [rbp - 0x68], eax
0xd2a1:    0f 8f 76 fe ff ff                     	jg 0xd11d <DTV_DecrypTS_5607+0xd9>
0xd2a7:    bb 00 00 00 00                        	mov ebx, 0
0xd2ac:    b8 00 00 00 00                        	mov eax, 0
0xd2b1:    41 b8 a0 00 00 00                     	mov r8d, 0xa0
0xd2b7:    45 8d 70 ff                           	lea r14d, [r8 - 1]
0xd2bb:    41 b9 00 00 00 00                     	mov r9d, 0
0xd2c1:    4d 8d 51 04                           	lea r10, [r9 + 4]
0xd2c5:    4c 8b 9d 60 ff ff ff                  	mov r11, qword ptr [rbp - 0xa0]
0xd2cc:    48 63 c8                              	movsxd rcx, eax
0xd2cf:    48 63 d3                              	movsxd rdx, ebx
0xd2d2:    49 8d 3c 0b                           	lea rdi, [r11 + rcx]
0xd2d6:    49 8d 74 14 04                        	lea rsi, [r12 + rdx + 4]
0xd2db:    44 89 c2                              	mov edx, r8d
0xd2de:    40 f6 c7 01                           	test dil, 1
0xd2e2:    74 10                                 	je 0xd2f4 <DTV_DecrypTS_5607+0x2b0>
0xd2e4:    0f b6 16                              	movzx edx, byte ptr [rsi]
0xd2e7:    88 17                                 	mov byte ptr [rdi], dl
0xd2e9:    48 83 c7 01                           	add rdi, 1
0xd2ed:    48 83 c6 01                           	add rsi, 1
0xd2f1:    44 89 f2                              	mov edx, r14d
0xd2f4:    40 f6 c7 02                           	test dil, 2
0xd2f8:    74 11                                 	je 0xd30b <DTV_DecrypTS_5607+0x2c7>
0xd2fa:    0f b7 0e                              	movzx ecx, word ptr [rsi]
0xd2fd:    66 89 0f                              	mov word ptr [rdi], cx
0xd300:    48 83 c7 02                           	add rdi, 2
0xd304:    48 83 c6 02                           	add rsi, 2
0xd308:    83 ea 02                              	sub edx, 2
0xd30b:    40 f6 c7 04                           	test dil, 4
0xd30f:    74 0f                                 	je 0xd320 <DTV_DecrypTS_5607+0x2dc>
0xd311:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xd313:    89 0f                                 	mov dword ptr [rdi], ecx
0xd315:    48 83 c7 04                           	add rdi, 4
0xd319:    48 83 c6 04                           	add rsi, 4
0xd31d:    83 ea 04                              	sub edx, 4
0xd320:    89 d1                                 	mov ecx, edx
0xd322:    c1 e9 03                              	shr ecx, 3
0xd325:    89 c9                                 	mov ecx, ecx
0xd327:    f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0xd32a:    4c 89 c9                              	mov rcx, r9
0xd32d:    f6 c2 04                              	test dl, 4
0xd330:    74 07                                 	je 0xd339 <DTV_DecrypTS_5607+0x2f5>
0xd332:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xd334:    89 0f                                 	mov dword ptr [rdi], ecx
0xd336:    4c 89 d1                              	mov rcx, r10
0xd339:    f6 c2 02                              	test dl, 2
0xd33c:    74 0e                                 	je 0xd34c <DTV_DecrypTS_5607+0x308>
0xd33e:    44 0f b7 3c 0e                        	movzx r15d, word ptr [rsi + rcx]
0xd343:    66 44 89 3c 0f                        	mov word ptr [rdi + rcx], r15w
0xd348:    48 83 c1 02                           	add rcx, 2
0xd34c:    f6 c2 01                              	test dl, 1
0xd34f:    74 07                                 	je 0xd358 <DTV_DecrypTS_5607+0x314>
0xd351:    0f b6 14 0e                           	movzx edx, byte ptr [rsi + rcx]
0xd355:    88 14 0f                              	mov byte ptr [rdi + rcx], dl
0xd358:    81 c3 bc 00 00 00                     	add ebx, 0xbc
0xd35e:    05 a0 00 00 00                        	add eax, 0xa0
0xd363:    39 5d 98                              	cmp dword ptr [rbp - 0x68], ebx
0xd366:    0f 8f 60 ff ff ff                     	jg 0xd2cc <DTV_DecrypTS_5607+0x288>
0xd36c:    45 8b 8d d0 f1 08 00                  	mov r9d, dword ptr [r13 + 0x8f1d0]
0xd373:    48 8b 55 80                           	mov rdx, qword ptr [rbp - 0x80]
0xd377:    48 89 14 24                           	mov qword ptr [rsp], rdx
0xd37b:    4c 8b 85 68 ff ff ff                  	mov r8, qword ptr [rbp - 0x98]
0xd382:    89 c1                                 	mov ecx, eax
0xd384:    48 8b 95 60 ff ff ff                  	mov rdx, qword ptr [rbp - 0xa0]
0xd38b:    48 8b 75 88                           	mov rsi, qword ptr [rbp - 0x78]
0xd38f:    48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0xd396:    e8 5c a2 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xd39b:    ba 00 00 00 00                        	mov edx, 0
0xd3a0:    bb 00 00 00 00                        	mov ebx, 0
0xd3a5:    41 b9 a0 00 00 00                     	mov r9d, 0xa0
0xd3ab:    45 8d 61 ff                           	lea r12d, [r9 - 1]
0xd3af:    41 b8 00 00 00 00                     	mov r8d, 0
0xd3b5:    4d 8d 50 04                           	lea r10, [r8 + 4]
0xd3b9:    4c 8b ad 68 ff ff ff                  	mov r13, qword ptr [rbp - 0x98]
0xd3c0:    4c 8b 5d a0                           	mov r11, qword ptr [rbp - 0x60]
0xd3c4:    44 8b 75 98                           	mov r14d, dword ptr [rbp - 0x68]
0xd3c8:    48 63 ca                              	movsxd rcx, edx
0xd3cb:    48 63 c3                              	movsxd rax, ebx
0xd3ce:    49 8d 7c 0b 04                        	lea rdi, [r11 + rcx + 4]
0xd3d3:    49 8d 74 05 00                        	lea rsi, [r13 + rax]
0xd3d8:    44 89 c8                              	mov eax, r9d
0xd3db:    40 f6 c7 01                           	test dil, 1
0xd3df:    74 10                                 	je 0xd3f1 <DTV_DecrypTS_5607+0x3ad>
0xd3e1:    0f b6 06                              	movzx eax, byte ptr [rsi]
0xd3e4:    88 07                                 	mov byte ptr [rdi], al
0xd3e6:    48 83 c7 01                           	add rdi, 1
0xd3ea:    48 83 c6 01                           	add rsi, 1
0xd3ee:    44 89 e0                              	mov eax, r12d
0xd3f1:    40 f6 c7 02                           	test dil, 2
0xd3f5:    74 11                                 	je 0xd408 <DTV_DecrypTS_5607+0x3c4>
0xd3f7:    0f b7 0e                              	movzx ecx, word ptr [rsi]
0xd3fa:    66 89 0f                              	mov word ptr [rdi], cx
0xd3fd:    48 83 c7 02                           	add rdi, 2
0xd401:    48 83 c6 02                           	add rsi, 2
0xd405:    83 e8 02                              	sub eax, 2
0xd408:    40 f6 c7 04                           	test dil, 4
0xd40c:    74 0f                                 	je 0xd41d <DTV_DecrypTS_5607+0x3d9>
0xd40e:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xd410:    89 0f                                 	mov dword ptr [rdi], ecx
0xd412:    48 83 c7 04                           	add rdi, 4
0xd416:    48 83 c6 04                           	add rsi, 4
0xd41a:    83 e8 04                              	sub eax, 4
0xd41d:    89 c1                                 	mov ecx, eax
0xd41f:    c1 e9 03                              	shr ecx, 3
0xd422:    89 c9                                 	mov ecx, ecx
0xd424:    f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0xd427:    4c 89 c1                              	mov rcx, r8
0xd42a:    a8 04                                 	test al, 4
0xd42c:    74 07                                 	je 0xd435 <DTV_DecrypTS_5607+0x3f1>
0xd42e:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xd430:    89 0f                                 	mov dword ptr [rdi], ecx
0xd432:    4c 89 d1                              	mov rcx, r10
0xd435:    a8 02                                 	test al, 2
0xd437:    74 0e                                 	je 0xd447 <DTV_DecrypTS_5607+0x403>
0xd439:    44 0f b7 3c 0e                        	movzx r15d, word ptr [rsi + rcx]
0xd43e:    66 44 89 3c 0f                        	mov word ptr [rdi + rcx], r15w
0xd443:    48 83 c1 02                           	add rcx, 2
0xd447:    a8 01                                 	test al, 1
0xd449:    74 07                                 	je 0xd452 <DTV_DecrypTS_5607+0x40e>
0xd44b:    0f b6 04 0e                           	movzx eax, byte ptr [rsi + rcx]
0xd44f:    88 04 0f                              	mov byte ptr [rdi + rcx], al
0xd452:    81 c2 bc 00 00 00                     	add edx, 0xbc
0xd458:    81 c3 a0 00 00 00                     	add ebx, 0xa0
0xd45e:    41 39 d6                              	cmp r14d, edx
0xd461:    0f 8f 61 ff ff ff                     	jg 0xd3c8 <DTV_DecrypTS_5607+0x384>
0xd467:    e9 83 03 00 00                        	jmp 0xd7ef <DTV_DecrypTS_5607+0x7ab>
0xd46c:    48 81 c3 e8 0e 00 00                  	add rbx, 0xee8
0xd473:    48 89 9d 78 ff ff ff                  	mov qword ptr [rbp - 0x88], rbx
0xd47a:    49 8d 8d 84 f1 08 00                  	lea rcx, [r13 + 0x8f184]
0xd481:    48 89 4d 80                           	mov qword ptr [rbp - 0x80], rcx
0xd485:    49 8d 85 64 f4 08 00                  	lea rax, [r13 + 0x8f464]
0xd48c:    48 89 45 88                           	mov qword ptr [rbp - 0x78], rax
0xd490:    c7 45 9c 00 00 00 00                  	mov dword ptr [rbp - 0x64], 0
0xd497:    4c 89 ad 70 ff ff ff                  	mov qword ptr [rbp - 0x90], r13
0xd49e:    4c 8d 7d b0                           	lea r15, [rbp - 0x50]
0xd4a2:    49 83 c7 10                           	add r15, 0x10
0xd4a6:    48 8d 55 b0                           	lea rdx, [rbp - 0x50]
0xd4aa:    48 83 c2 08                           	add rdx, 8
0xd4ae:    48 89 95 58 ff ff ff                  	mov qword ptr [rbp - 0xa8], rdx
0xd4b5:    48 63 4d 9c                           	movsxd rcx, dword ptr [rbp - 0x64]
0xd4b9:    48 89 4d a8                           	mov qword ptr [rbp - 0x58], rcx
0xd4bd:    41 0f b6 04 0c                        	movzx eax, byte ptr [r12 + rcx]
0xd4c2:    48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0xd4c6:    88 04 0a                              	mov byte ptr [rdx + rcx], al
0xd4c9:    48 89 c8                              	mov rax, rcx
0xd4cc:    48 83 c0 01                           	add rax, 1
0xd4d0:    41 0f b6 14 04                        	movzx edx, byte ptr [r12 + rax]
0xd4d5:    48 8b 4d a0                           	mov rcx, qword ptr [rbp - 0x60]
0xd4d9:    88 14 01                              	mov byte ptr [rcx + rax], dl
0xd4dc:    48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0xd4e0:    48 83 c0 02                           	add rax, 2
0xd4e4:    41 0f b6 14 04                        	movzx edx, byte ptr [r12 + rax]
0xd4e9:    88 14 01                              	mov byte ptr [rcx + rax], dl
0xd4ec:    48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0xd4f0:    48 83 c0 03                           	add rax, 3
0xd4f4:    41 0f b6 14 04                        	movzx edx, byte ptr [r12 + rax]
0xd4f9:    88 14 01                              	mov byte ptr [rcx + rax], dl
0xd4fc:    48 8b 75 a8                           	mov rsi, qword ptr [rbp - 0x58]
0xd500:    48 81 c6 ac 00 00 00                  	add rsi, 0xac
0xd507:    49 8d 04 34                           	lea rax, [r12 + rsi]
0xd50b:    48 8b 10                              	mov rdx, qword ptr [rax]
0xd50e:    48 89 55 b0                           	mov qword ptr [rbp - 0x50], rdx
0xd512:    48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0xd516:    48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0xd51a:    48 8d 5d b0                           	lea rbx, [rbp - 0x50]
0xd51e:    4c 8b b5 70 ff ff ff                  	mov r14, qword ptr [rbp - 0x90]
0xd525:    4c 89 f2                              	mov rdx, r14
0xd528:    48 89 d8                              	mov rax, rbx
0xd52b:    0f b6 8a 97 fc 08 00                  	movzx ecx, byte ptr [rdx + 0x8fc97]
0xd532:    30 08                                 	xor byte ptr [rax], cl
0xd534:    48 83 c0 01                           	add rax, 1
0xd538:    48 83 ea 01                           	sub rdx, 1
0xd53c:    4c 39 f8                              	cmp rax, r15
0xd53f:    75 ea                                 	jne 0xd52b <DTV_DecrypTS_5607+0x4e7>
0xd541:    48 03 75 a0                           	add rsi, qword ptr [rbp - 0x60]
0xd545:    48 89 75 90                           	mov qword ptr [rbp - 0x70], rsi
0xd549:    45 8b 8d d0 f1 08 00                  	mov r9d, dword ptr [r13 + 0x8f1d0]
0xd550:    48 8b 85 78 ff ff ff                  	mov rax, qword ptr [rbp - 0x88]
0xd557:    48 89 04 24                           	mov qword ptr [rsp], rax
0xd55b:    49 89 f0                              	mov r8, rsi
0xd55e:    b9 10 00 00 00                        	mov ecx, 0x10
0xd563:    48 8d 55 b0                           	lea rdx, [rbp - 0x50]
0xd567:    48 8b 75 80                           	mov rsi, qword ptr [rbp - 0x80]
0xd56b:    48 8b 7d 88                           	mov rdi, qword ptr [rbp - 0x78]
0xd56f:    e8 83 a0 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xd574:    48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0xd578:    48 05 a4 00 00 00                     	add rax, 0xa4
0xd57e:    49 8b 14 04                           	mov rdx, qword ptr [r12 + rax]
0xd582:    48 89 55 b0                           	mov qword ptr [rbp - 0x50], rdx
0xd586:    48 8b 4d 90                           	mov rcx, qword ptr [rbp - 0x70]
0xd58a:    48 8b 11                              	mov rdx, qword ptr [rcx]
0xd58d:    48 8b 8d 58 ff ff ff                  	mov rcx, qword ptr [rbp - 0xa8]
0xd594:    48 89 11                              	mov qword ptr [rcx], rdx
0xd597:    41 0f b6 96 97 fc 08 00               	movzx edx, byte ptr [r14 + 0x8fc97]
0xd59f:    30 13                                 	xor byte ptr [rbx], dl
0xd5a1:    48 83 c3 01                           	add rbx, 1
0xd5a5:    49 83 ee 01                           	sub r14, 1
0xd5a9:    4c 39 fb                              	cmp rbx, r15
0xd5ac:    75 e9                                 	jne 0xd597 <DTV_DecrypTS_5607+0x553>
0xd5ae:    45 8b 8d d0 f1 08 00                  	mov r9d, dword ptr [r13 + 0x8f1d0]
0xd5b5:    48 8b 95 78 ff ff ff                  	mov rdx, qword ptr [rbp - 0x88]
0xd5bc:    48 89 14 24                           	mov qword ptr [rsp], rdx
0xd5c0:    48 8b 4d a0                           	mov rcx, qword ptr [rbp - 0x60]
0xd5c4:    4c 8d 04 01                           	lea r8, [rcx + rax]
0xd5c8:    b9 10 00 00 00                        	mov ecx, 0x10
0xd5cd:    48 8d 55 b0                           	lea rdx, [rbp - 0x50]
0xd5d1:    48 8b 75 80                           	mov rsi, qword ptr [rbp - 0x80]
0xd5d5:    48 8b 7d 88                           	mov rdi, qword ptr [rbp - 0x78]
0xd5d9:    e8 19 a0 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xd5de:    8b 75 9c                              	mov esi, dword ptr [rbp - 0x64]
0xd5e1:    83 c6 04                              	add esi, 4
0xd5e4:    8b 7d 9c                              	mov edi, dword ptr [rbp - 0x64]
0xd5e7:    81 c7 a4 00 00 00                     	add edi, 0xa4
0xd5ed:    eb 24                                 	jmp 0xd613 <DTV_DecrypTS_5607+0x5cf>
0xd5ef:    48 63 ca                              	movsxd rcx, edx
0xd5f2:    41 0f b6 9c 05 97 fc 08 00            	movzx ebx, byte ptr [r13 + rax + 0x8fc97]
0xd5fb:    41 30 1c 0c                           	xor byte ptr [r12 + rcx], bl
0xd5ff:    83 c2 01                              	add edx, 1
0xd602:    48 83 e8 01                           	sub rax, 1
0xd606:    48 83 f8 f0                           	cmp rax, -0x10
0xd60a:    75 e3                                 	jne 0xd5ef <DTV_DecrypTS_5607+0x5ab>
0xd60c:    83 c6 10                              	add esi, 0x10
0xd60f:    39 f7                                 	cmp edi, esi
0xd611:    74 09                                 	je 0xd61c <DTV_DecrypTS_5607+0x5d8>
0xd613:    89 f2                                 	mov edx, esi
0xd615:    b8 00 00 00 00                        	mov eax, 0
0xd61a:    eb d3                                 	jmp 0xd5ef <DTV_DecrypTS_5607+0x5ab>
0xd61c:    81 45 9c bc 00 00 00                  	add dword ptr [rbp - 0x64], 0xbc
0xd623:    8b 45 9c                              	mov eax, dword ptr [rbp - 0x64]
0xd626:    39 45 98                              	cmp dword ptr [rbp - 0x68], eax
0xd629:    0f 8f 86 fe ff ff                     	jg 0xd4b5 <DTV_DecrypTS_5607+0x471>
0xd62f:    bb 00 00 00 00                        	mov ebx, 0
0xd634:    b8 00 00 00 00                        	mov eax, 0
0xd639:    41 b8 a0 00 00 00                     	mov r8d, 0xa0
0xd63f:    45 8d 70 ff                           	lea r14d, [r8 - 1]
0xd643:    41 b9 00 00 00 00                     	mov r9d, 0
0xd649:    4d 8d 51 04                           	lea r10, [r9 + 4]
0xd64d:    4c 8b 9d 60 ff ff ff                  	mov r11, qword ptr [rbp - 0xa0]
0xd654:    48 63 c8                              	movsxd rcx, eax
0xd657:    48 63 d3                              	movsxd rdx, ebx
0xd65a:    49 8d 3c 0b                           	lea rdi, [r11 + rcx]
0xd65e:    49 8d 74 14 04                        	lea rsi, [r12 + rdx + 4]
0xd663:    44 89 c2                              	mov edx, r8d
0xd666:    40 f6 c7 01                           	test dil, 1
0xd66a:    74 10                                 	je 0xd67c <DTV_DecrypTS_5607+0x638>
0xd66c:    0f b6 16                              	movzx edx, byte ptr [rsi]
0xd66f:    88 17                                 	mov byte ptr [rdi], dl
0xd671:    48 83 c7 01                           	add rdi, 1
0xd675:    48 83 c6 01                           	add rsi, 1
0xd679:    44 89 f2                              	mov edx, r14d
0xd67c:    40 f6 c7 02                           	test dil, 2
0xd680:    74 11                                 	je 0xd693 <DTV_DecrypTS_5607+0x64f>
0xd682:    0f b7 0e                              	movzx ecx, word ptr [rsi]
0xd685:    66 89 0f                              	mov word ptr [rdi], cx
0xd688:    48 83 c7 02                           	add rdi, 2
0xd68c:    48 83 c6 02                           	add rsi, 2
0xd690:    83 ea 02                              	sub edx, 2
0xd693:    40 f6 c7 04                           	test dil, 4
0xd697:    74 0f                                 	je 0xd6a8 <DTV_DecrypTS_5607+0x664>
0xd699:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xd69b:    89 0f                                 	mov dword ptr [rdi], ecx
0xd69d:    48 83 c7 04                           	add rdi, 4
0xd6a1:    48 83 c6 04                           	add rsi, 4
0xd6a5:    83 ea 04                              	sub edx, 4
0xd6a8:    89 d1                                 	mov ecx, edx
0xd6aa:    c1 e9 03                              	shr ecx, 3
0xd6ad:    89 c9                                 	mov ecx, ecx
0xd6af:    f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0xd6b2:    4c 89 c9                              	mov rcx, r9
0xd6b5:    f6 c2 04                              	test dl, 4
0xd6b8:    74 07                                 	je 0xd6c1 <DTV_DecrypTS_5607+0x67d>
0xd6ba:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xd6bc:    89 0f                                 	mov dword ptr [rdi], ecx
0xd6be:    4c 89 d1                              	mov rcx, r10
0xd6c1:    f6 c2 02                              	test dl, 2
0xd6c4:    74 0e                                 	je 0xd6d4 <DTV_DecrypTS_5607+0x690>
0xd6c6:    44 0f b7 3c 0e                        	movzx r15d, word ptr [rsi + rcx]
0xd6cb:    66 44 89 3c 0f                        	mov word ptr [rdi + rcx], r15w
0xd6d0:    48 83 c1 02                           	add rcx, 2
0xd6d4:    f6 c2 01                              	test dl, 1
0xd6d7:    74 07                                 	je 0xd6e0 <DTV_DecrypTS_5607+0x69c>
0xd6d9:    0f b6 14 0e                           	movzx edx, byte ptr [rsi + rcx]
0xd6dd:    88 14 0f                              	mov byte ptr [rdi + rcx], dl
0xd6e0:    81 c3 bc 00 00 00                     	add ebx, 0xbc
0xd6e6:    05 a0 00 00 00                        	add eax, 0xa0
0xd6eb:    39 5d 98                              	cmp dword ptr [rbp - 0x68], ebx
0xd6ee:    0f 8f 60 ff ff ff                     	jg 0xd654 <DTV_DecrypTS_5607+0x610>
0xd6f4:    45 8b 8d d0 f1 08 00                  	mov r9d, dword ptr [r13 + 0x8f1d0]
0xd6fb:    48 8b 95 78 ff ff ff                  	mov rdx, qword ptr [rbp - 0x88]
0xd702:    48 89 14 24                           	mov qword ptr [rsp], rdx
0xd706:    4c 8b 85 68 ff ff ff                  	mov r8, qword ptr [rbp - 0x98]
0xd70d:    89 c1                                 	mov ecx, eax
0xd70f:    48 8b 95 60 ff ff ff                  	mov rdx, qword ptr [rbp - 0xa0]
0xd716:    48 8b 75 80                           	mov rsi, qword ptr [rbp - 0x80]
0xd71a:    48 8b 7d 88                           	mov rdi, qword ptr [rbp - 0x78]
0xd71e:    e8 d4 9e 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xd723:    ba 00 00 00 00                        	mov edx, 0
0xd728:    bb 00 00 00 00                        	mov ebx, 0
0xd72d:    41 b9 a0 00 00 00                     	mov r9d, 0xa0
0xd733:    45 8d 61 ff                           	lea r12d, [r9 - 1]
0xd737:    41 b8 00 00 00 00                     	mov r8d, 0
0xd73d:    4d 8d 50 04                           	lea r10, [r8 + 4]
0xd741:    4c 8b ad 68 ff ff ff                  	mov r13, qword ptr [rbp - 0x98]
0xd748:    4c 8b 5d a0                           	mov r11, qword ptr [rbp - 0x60]
0xd74c:    44 8b 75 98                           	mov r14d, dword ptr [rbp - 0x68]
0xd750:    48 63 ca                              	movsxd rcx, edx
0xd753:    48 63 c3                              	movsxd rax, ebx
0xd756:    49 8d 7c 0b 04                        	lea rdi, [r11 + rcx + 4]
0xd75b:    49 8d 74 05 00                        	lea rsi, [r13 + rax]
0xd760:    44 89 c8                              	mov eax, r9d
0xd763:    40 f6 c7 01                           	test dil, 1
0xd767:    74 10                                 	je 0xd779 <DTV_DecrypTS_5607+0x735>
0xd769:    0f b6 06                              	movzx eax, byte ptr [rsi]
0xd76c:    88 07                                 	mov byte ptr [rdi], al
0xd76e:    48 83 c7 01                           	add rdi, 1
0xd772:    48 83 c6 01                           	add rsi, 1
0xd776:    44 89 e0                              	mov eax, r12d
0xd779:    40 f6 c7 02                           	test dil, 2
0xd77d:    74 11                                 	je 0xd790 <DTV_DecrypTS_5607+0x74c>
0xd77f:    0f b7 0e                              	movzx ecx, word ptr [rsi]
0xd782:    66 89 0f                              	mov word ptr [rdi], cx
0xd785:    48 83 c7 02                           	add rdi, 2
0xd789:    48 83 c6 02                           	add rsi, 2
0xd78d:    83 e8 02                              	sub eax, 2
0xd790:    40 f6 c7 04                           	test dil, 4
0xd794:    74 0f                                 	je 0xd7a5 <DTV_DecrypTS_5607+0x761>
0xd796:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xd798:    89 0f                                 	mov dword ptr [rdi], ecx
0xd79a:    48 83 c7 04                           	add rdi, 4
0xd79e:    48 83 c6 04                           	add rsi, 4
0xd7a2:    83 e8 04                              	sub eax, 4
0xd7a5:    89 c1                                 	mov ecx, eax
0xd7a7:    c1 e9 03                              	shr ecx, 3
0xd7aa:    89 c9                                 	mov ecx, ecx
0xd7ac:    f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0xd7af:    4c 89 c1                              	mov rcx, r8
0xd7b2:    a8 04                                 	test al, 4
0xd7b4:    74 07                                 	je 0xd7bd <DTV_DecrypTS_5607+0x779>
0xd7b6:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xd7b8:    89 0f                                 	mov dword ptr [rdi], ecx
0xd7ba:    4c 89 d1                              	mov rcx, r10
0xd7bd:    a8 02                                 	test al, 2
0xd7bf:    74 0e                                 	je 0xd7cf <DTV_DecrypTS_5607+0x78b>
0xd7c1:    44 0f b7 3c 0e                        	movzx r15d, word ptr [rsi + rcx]
0xd7c6:    66 44 89 3c 0f                        	mov word ptr [rdi + rcx], r15w
0xd7cb:    48 83 c1 02                           	add rcx, 2
0xd7cf:    a8 01                                 	test al, 1
0xd7d1:    74 07                                 	je 0xd7da <DTV_DecrypTS_5607+0x796>
0xd7d3:    0f b6 04 0e                           	movzx eax, byte ptr [rsi + rcx]
0xd7d7:    88 04 0f                              	mov byte ptr [rdi + rcx], al
0xd7da:    81 c2 bc 00 00 00                     	add edx, 0xbc
0xd7e0:    81 c3 a0 00 00 00                     	add ebx, 0xa0
0xd7e6:    41 39 d6                              	cmp r14d, edx
0xd7e9:    0f 8f 61 ff ff ff                     	jg 0xd750 <DTV_DecrypTS_5607+0x70c>
0xd7ef:    48 8b bd 60 ff ff ff                  	mov rdi, qword ptr [rbp - 0xa0]
0xd7f6:    e8 5d 89 ff ff                        	call 0x6158 <FUSB_ExFreePool>
0xd7fb:    48 8b bd 68 ff ff ff                  	mov rdi, qword ptr [rbp - 0x98]
0xd802:    e8 51 89 ff ff                        	call 0x6158 <FUSB_ExFreePool>
0xd807:    b8 01 00 00 00                        	mov eax, 1
0xd80c:    48 8b 4d c8                           	mov rcx, qword ptr [rbp - 0x38]
0xd810:    65 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr gs:[0x28]
0xd819:    74 7e                                 	je 0xd899
0xd81b:    eb 77                                 	jmp 0xd894
0xd81d:    45 8b 8d d0 f1 08 00                  	mov r9d, dword ptr [r13 + 0x8f1d0]
0xd824:    49 8d b5 84 f1 08 00                  	lea rsi, [r13 + 0x8f184]
0xd82b:    49 8d bd 64 f4 08 00                  	lea rdi, [r13 + 0x8f464]
0xd832:    48 81 c3 e8 0e 00 00                  	add rbx, 0xee8
0xd839:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0xd83d:    4c 8b 85 68 ff ff ff                  	mov r8, qword ptr [rbp - 0x98]
0xd844:    b9 00 00 00 00                        	mov ecx, 0
0xd849:    48 8b 95 60 ff ff ff                  	mov rdx, qword ptr [rbp - 0xa0]
0xd850:    e8 a2 9d 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xd855:    eb 98                                 	jmp 0xd7ef <DTV_DecrypTS_5607+0x7ab>
0xd857:    45 8b 8d d0 f1 08 00                  	mov r9d, dword ptr [r13 + 0x8f1d0]
0xd85e:    49 8d b5 84 f1 08 00                  	lea rsi, [r13 + 0x8f184]
0xd865:    49 8d bd 64 f4 08 00                  	lea rdi, [r13 + 0x8f464]
0xd86c:    48 81 c3 e8 0e 00 00                  	add rbx, 0xee8
0xd873:    48 89 1c 24                           	mov qword ptr [rsp], rbx
; data inside code section at 0xd877 -- 0xd87b
0xd877:    4c 8b 85 68                                        |L..h            |
; function: DTV_Muli2LibEnable at 0xd87b -- 0xd8ab
; function: DTV_Muli2LibEnable at 0xd8ab -- 0xda45
0xd8ab:    55                                    	push rbp
0xd8ac:    48 89 e5                              	mov rbp, rsp
0xd8af:    41 57                                 	push r15
0xd8b1:    41 56                                 	push r14
0xd8b3:    41 55                                 	push r13
0xd8b5:    41 54                                 	push r12
0xd8b7:    53                                    	push rbx
0xd8b8:    48 83 ec 68                           	sub rsp, 0x68
0xd8bc:    e8 2f 13 03 00                        	call 0x3ebf0 <mcount>
0xd8c1:    49 89 fe                              	mov r14, rdi
0xd8c4:    49 89 f4                              	mov r12, rsi
0xd8c7:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xd8d0:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xd8d4:    31 c0                                 	xor eax, eax
0xd8d6:    48 8b 87 38 1d 00 00                  	mov rax, qword ptr [rdi + 0x1d38]
0xd8dd:    48 89 85 70 ff ff ff                  	mov qword ptr [rbp - 0x90], rax
0xd8e4:    80 fa 10                              	cmp dl, 0x10
0xd8e7:    0f 85 60 01 00 00                     	jne 0xda4d
0xd8ed:    80 bf bc fa 08 00 01                  	cmp byte ptr [rdi + 0x8fabc], 1
0xd8f4:    0f 84 53 01 00 00                     	je 0xda4d
0xd8fa:    48 8d 97 ed 15 00 00                  	lea rdx, [rdi + 0x15ed]
0xd901:    48 89 55 88                           	mov qword ptr [rbp - 0x78], rdx
0xd905:    41 bd 00 00 00 00                     	mov r13d, 0
0xd90b:    4c 8d 7d b0                           	lea r15, [rbp - 0x50]
0xd90f:    48 8d 46 01                           	lea rax, [rsi + 1]
0xd913:    48 89 45 80                           	mov qword ptr [rbp - 0x80], rax
0xd917:    49 8d 57 01                           	lea rdx, [r15 + 1]
0xd91b:    48 89 95 78 ff ff ff                  	mov qword ptr [rbp - 0x88], rdx
0xd922:    49 8d 5f 10                           	lea rbx, [r15 + 0x10]
0xd926:    41 0f b6 f5                           	movzx esi, r13b
0xd92a:    48 c1 e6 04                           	shl rsi, 4
0xd92e:    48 81 c6 00 00 00 00                  	add rsi, 0
0xd935:    48 8b 55 88                           	mov rdx, qword ptr [rbp - 0x78]
0xd939:    4c 89 ff                              	mov rdi, r15
0xd93c:    e8 5e d4 ff ff                        	call 0xad9f <Gen_Identify_Key>
0xd941:    41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0xd946:    3a 45 b0                              	cmp al, byte ptr [rbp - 0x50]
0xd949:    75 21                                 	jne 0xd96c <DTV_Muli2LibEnable+0xc1>
0xd94b:    48 8b 55 80                           	mov rdx, qword ptr [rbp - 0x80]
0xd94f:    48 8b 85 78 ff ff ff                  	mov rax, qword ptr [rbp - 0x88]
0xd956:    0f b6 0a                              	movzx ecx, byte ptr [rdx]
0xd959:    3a 08                                 	cmp cl, byte ptr [rax]
0xd95b:    75 0f                                 	jne 0xd96c <DTV_Muli2LibEnable+0xc1>
0xd95d:    48 83 c2 01                           	add rdx, 1
0xd961:    48 83 c0 01                           	add rax, 1
0xd965:    48 39 d8                              	cmp rax, rbx
0xd968:    75 ec                                 	jne 0xd956 <DTV_Muli2LibEnable+0xab>
0xd96a:    eb 0f                                 	jmp 0xd97b <DTV_Muli2LibEnable+0xd0>
0xd96c:    41 83 c5 01                           	add r13d, 1
0xd970:    41 80 fd 80                           	cmp r13b, 0x80
0xd974:    75 b0                                 	jne 0xd926 <DTV_Muli2LibEnable+0x7b>
0xd976:    e9 d2 00 00 00                        	jmp 0xda4d
0xd97b:    41 80 be bc fa 08 00 00               	cmp byte ptr [r14 + 0x8fabc], 0
0xd983:    0f 85 c4 00 00 00                     	jne 0xda4d
0xd989:    41 c6 86 bc fa 08 00 01               	mov byte ptr [r14 + 0x8fabc], 1
0xd991:    41 0f b6 86 30 1d 00 00               	movzx eax, byte ptr [r14 + 0x1d30]
0xd999:    84 c0                                 	test al, al
0xd99b:    75 51                                 	jne 0xd9ee <DTV_Muli2LibEnable+0x143>
0xd99d:    49 8d 7e 08                           	lea rdi, [r14 + 8]
0xd9a1:    ba 00 00 00 00                        	mov edx, 0
0xd9a6:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0xd9ad:    e8 91 8b 00 00                        	call 0x16543 <TS_Init>
0xd9b2:    49 89 86 b0 fa 08 00                  	mov qword ptr [r14 + 0x8fab0], rax
0xd9b9:    48 8d 5d 90                           	lea rbx, [rbp - 0x70]
0xd9bd:    49 63 96 d0 15 00 00                  	movsxd rdx, dword ptr [r14 + 0x15d0]
0xd9c4:    49 8d b6 95 14 00 00                  	lea rsi, [r14 + 0x1495]
0xd9cb:    48 89 df                              	mov rdi, rbx
0xd9ce:    e8 95 11 03 00                        	call 0x3eb68 <memcpy>
0xd9d3:    41 8b 96 d0 15 00 00                  	mov edx, dword ptr [r14 + 0x15d0]
0xd9da:    83 ea 07                              	sub edx, 7
0xd9dd:    49 8b be b0 fa 08 00                  	mov rdi, qword ptr [r14 + 0x8fab0]
0xd9e4:    48 89 de                              	mov rsi, rbx
0xd9e7:    e8 e3 87 00 00                        	call 0x161cf <TS_SetBcasCardID>
0xd9ec:    eb 5f                                 	jmp 0xda4d
0xd9ee:    48 8b 95 70 ff ff ff                  	mov rdx, qword ptr [rbp - 0x90]
0xd9f5:    48 8b 9a e0 04 00 00                  	mov rbx, qword ptr [rdx + 0x4e0]
0xd9fc:    48 85 db                              	test rbx, rbx
0xd9ff:    74 4c                                 	je 0xda4d
0xda01:    0f b6 d0                              	movzx edx, al
0xda04:    48 8d 7b 08                           	lea rdi, [rbx + 8]
0xda08:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0xda0f:    e8 2f 8b 00 00                        	call 0x16543 <TS_Init>
0xda14:    49 89 86 b0 fa 08 00                  	mov qword ptr [r14 + 0x8fab0], rax
0xda1b:    4c 8d 65 90                           	lea r12, [rbp - 0x70]
0xda1f:    48 63 93 d0 15 00 00                  	movsxd rdx, dword ptr [rbx + 0x15d0]
0xda26:    48 8d b3 95 14 00 00                  	lea rsi, [rbx + 0x1495]
0xda2d:    4c 89 e7                              	mov rdi, r12
0xda30:    e8 33 11 03 00                        	call 0x3eb68 <memcpy>
0xda35:    8b 93 d0 15 00 00                     	mov edx, dword ptr [rbx + 0x15d0]
0xda3b:    83 ea 07                              	sub edx, 7
0xda3e:    49 8b be b0 fa 08 00                  	mov rdi, qword ptr [r14 + 0x8fab0]
; function: DTV_EncAES_TS at 0xda45 -- 0xda75
0xda45:    4c 89 e6                              	mov rsi, r12
0xda48:    e8 82 87 00 00                        	call 0x161cf <TS_SetBcasCardID>
0xda4d:    b8 01 00 00 00                        	mov eax, 1
0xda52:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0xda56:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xda5f:    74 05                                 	je 0xda66 <DTV_EncAES_TS+0x21>
0xda61:    e8 42 11 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xda66:    48 83 c4 68                           	add rsp, 0x68
0xda6a:    5b                                    	pop rbx
0xda6b:    41 5c                                 	pop r12
0xda6d:    41 5d                                 	pop r13
0xda6f:    41 5e                                 	pop r14
0xda71:    41 5f                                 	pop r15
0xda73:    c9                                    	leave 
0xda74:    c3                                    	ret 
; function: DTV_EncAES_TS at 0xda75 -- 0xde5c
0xda75:    55                                    	push rbp
0xda76:    48 89 e5                              	mov rbp, rsp
0xda79:    41 57                                 	push r15
0xda7b:    41 56                                 	push r14
0xda7d:    41 55                                 	push r13
0xda7f:    41 54                                 	push r12
0xda81:    53                                    	push rbx
0xda82:    48 81 ec 48 01 00 00                  	sub rsp, 0x148
0xda89:    e8 62 11 03 00                        	call 0x3ebf0 <mcount>
0xda8e:    49 89 fe                              	mov r14, rdi
0xda91:    48 89 b5 c0 fe ff ff                  	mov qword ptr [rbp - 0x140], rsi
0xda98:    48 89 95 d0 fe ff ff                  	mov qword ptr [rbp - 0x130], rdx
0xda9f:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xdaa8:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xdaac:    31 c0                                 	xor eax, eax
0xdaae:    48 8b 9f 38 1d 00 00                  	mov rbx, qword ptr [rdi + 0x1d38]
0xdab5:    48 89 d7                              	mov rdi, rdx
0xdab8:    ba bc 00 00 00                        	mov edx, 0xbc
0xdabd:    40 f6 c7 01                           	test dil, 1
0xdac1:    74 09                                 	je 0xdacc <DTV_EncAES_TS+0x57>
0xdac3:    88 07                                 	mov byte ptr [rdi], al
0xdac5:    48 83 c7 01                           	add rdi, 1
0xdac9:    83 ea 01                              	sub edx, 1
0xdacc:    40 f6 c7 02                           	test dil, 2
0xdad0:    74 0a                                 	je 0xdadc <DTV_EncAES_TS+0x67>
0xdad2:    66 89 07                              	mov word ptr [rdi], ax
0xdad5:    48 83 c7 02                           	add rdi, 2
0xdad9:    83 ea 02                              	sub edx, 2
0xdadc:    40 f6 c7 04                           	test dil, 4
0xdae0:    74 09                                 	je 0xdaeb <DTV_EncAES_TS+0x76>
0xdae2:    89 07                                 	mov dword ptr [rdi], eax
0xdae4:    48 83 c7 04                           	add rdi, 4
0xdae8:    83 ea 04                              	sub edx, 4
0xdaeb:    89 d1                                 	mov ecx, edx
0xdaed:    c1 e9 03                              	shr ecx, 3
0xdaf0:    89 c9                                 	mov ecx, ecx
0xdaf2:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xdaf5:    f6 c2 04                              	test dl, 4
0xdaf8:    74 06                                 	je 0xdb00 <DTV_EncAES_TS+0x8b>
0xdafa:    89 07                                 	mov dword ptr [rdi], eax
0xdafc:    48 83 c7 04                           	add rdi, 4
0xdb00:    f6 c2 02                              	test dl, 2
0xdb03:    74 07                                 	je 0xdb0c <DTV_EncAES_TS+0x97>
0xdb05:    66 89 07                              	mov word ptr [rdi], ax
0xdb08:    48 83 c7 02                           	add rdi, 2
0xdb0c:    f6 c2 01                              	test dl, 1
0xdb0f:    74 02                                 	je 0xdb13 <DTV_EncAES_TS+0x9e>
0xdb11:    88 07                                 	mov byte ptr [rdi], al
0xdb13:    41 80 be d8 15 00 00 00               	cmp byte ptr [r14 + 0x15d8], 0
0xdb1b:    0f 85 8c 01 00 00                     	jne 0xdcad <DTV_EncAES_TS+0x238>
0xdb21:    48 8b 85 c0 fe ff ff                  	mov rax, qword ptr [rbp - 0x140]
0xdb28:    48 8b 95 d0 fe ff ff                  	mov rdx, qword ptr [rbp - 0x130]
0xdb2f:    48 89 c6                              	mov rsi, rax
0xdb32:    48 83 c6 07                           	add rsi, 7
0xdb36:    0f b6 08                              	movzx ecx, byte ptr [rax]
0xdb39:    88 0a                                 	mov byte ptr [rdx], cl
0xdb3b:    48 83 c0 01                           	add rax, 1
0xdb3f:    48 83 c2 01                           	add rdx, 1
0xdb43:    48 39 f0                              	cmp rax, rsi
0xdb46:    75 ee                                 	jne 0xdb36 <DTV_EncAES_TS+0xc1>
0xdb48:    48 81 c3 e8 0e 00 00                  	add rbx, 0xee8
0xdb4f:    48 89 9d b0 fe ff ff                  	mov qword ptr [rbp - 0x150], rbx
0xdb56:    49 8d 96 a4 ee 08 00                  	lea rdx, [r14 + 0x8eea4]
0xdb5d:    48 89 95 b8 fe ff ff                  	mov qword ptr [rbp - 0x148], rdx
0xdb64:    49 8d 8e 64 f4 08 00                  	lea rcx, [r14 + 0x8f464]
0xdb6b:    48 89 8d c8 fe ff ff                  	mov qword ptr [rbp - 0x138], rcx
0xdb72:    41 bf 00 00 00 00                     	mov r15d, 0
0xdb78:    41 bc 01 00 00 00                     	mov r12d, 1
0xdb7e:    48 8d 45 a0                           	lea rax, [rbp - 0x60]
0xdb82:    48 83 c0 01                           	add rax, 1
0xdb86:    48 89 85 d8 fe ff ff                  	mov qword ptr [rbp - 0x128], rax
0xdb8d:    48 8d 5d b0                           	lea rbx, [rbp - 0x50]
0xdb91:    48 8b 95 c0 fe ff ff                  	mov rdx, qword ptr [rbp - 0x140]
0xdb98:    48 83 c2 07                           	add rdx, 7
0xdb9c:    48 89 95 a8 fe ff ff                  	mov qword ptr [rbp - 0x158], rdx
0xdba3:    eb 08                                 	jmp 0xdbad <DTV_EncAES_TS+0x138>
0xdba5:    41 83 c4 01                           	add r12d, 1
0xdba9:    41 83 c7 0f                           	add r15d, 0xf
0xdbad:    41 83 fc 01                           	cmp r12d, 1
0xdbb1:    75 66                                 	jne 0xdc19 <DTV_EncAES_TS+0x1a4>
0xdbb3:    48 8b 8d a8 fe ff ff                  	mov rcx, qword ptr [rbp - 0x158]
0xdbba:    48 8b 01                              	mov rax, qword ptr [rcx]
0xdbbd:    48 89 45 a0                           	mov qword ptr [rbp - 0x60], rax
0xdbc1:    48 8b 41 08                           	mov rax, qword ptr [rcx + 8]
0xdbc5:    48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0xdbc9:    45 8b 8e f0 ee 08 00                  	mov r9d, dword ptr [r14 + 0x8eef0]
0xdbd0:    48 8b 85 b0 fe ff ff                  	mov rax, qword ptr [rbp - 0x150]
0xdbd7:    48 89 04 24                           	mov qword ptr [rsp], rax
0xdbdb:    49 89 d8                              	mov r8, rbx
0xdbde:    b9 10 00 00 00                        	mov ecx, 0x10
0xdbe3:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0xdbe7:    48 8b b5 b8 fe ff ff                  	mov rsi, qword ptr [rbp - 0x148]
0xdbee:    48 8b bd c8 fe ff ff                  	mov rdi, qword ptr [rbp - 0x138]
0xdbf5:    e8 fd 99 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xdbfa:    49 63 c7                              	movsxd rax, r15d
0xdbfd:    48 8b 95 d0 fe ff ff                  	mov rdx, qword ptr [rbp - 0x130]
0xdc04:    48 8d 44 02 07                        	lea rax, [rdx + rax + 7]
0xdc09:    48 8b 13                              	mov rdx, qword ptr [rbx]
0xdc0c:    48 89 10                              	mov qword ptr [rax], rdx
0xdc0f:    48 8b 53 08                           	mov rdx, qword ptr [rbx + 8]
0xdc13:    48 89 50 08                           	mov qword ptr [rax + 8], rdx
0xdc17:    eb 8c                                 	jmp 0xdba5 <DTV_EncAES_TS+0x130>
0xdc19:    49 63 c7                              	movsxd rax, r15d
0xdc1c:    48 8b 8d d0 fe ff ff                  	mov rcx, qword ptr [rbp - 0x130]
0xdc23:    4c 8d 6c 01 07                        	lea r13, [rcx + rax + 7]
0xdc28:    41 0f b6 55 00                        	movzx edx, byte ptr [r13]
0xdc2d:    88 55 a0                              	mov byte ptr [rbp - 0x60], dl
0xdc30:    48 8b 95 c0 fe ff ff                  	mov rdx, qword ptr [rbp - 0x140]
0xdc37:    48 8d 44 02 08                        	lea rax, [rdx + rax + 8]
0xdc3c:    48 8b 10                              	mov rdx, qword ptr [rax]
0xdc3f:    48 8b 8d d8 fe ff ff                  	mov rcx, qword ptr [rbp - 0x128]
0xdc46:    48 89 11                              	mov qword ptr [rcx], rdx
0xdc49:    8b 50 08                              	mov edx, dword ptr [rax + 8]
0xdc4c:    89 51 08                              	mov dword ptr [rcx + 8], edx
0xdc4f:    0f b7 50 0c                           	movzx edx, word ptr [rax + 0xc]
0xdc53:    66 89 51 0c                           	mov word ptr [rcx + 0xc], dx
0xdc57:    0f b6 40 0e                           	movzx eax, byte ptr [rax + 0xe]
0xdc5b:    88 41 0e                              	mov byte ptr [rcx + 0xe], al
0xdc5e:    45 8b 8e f0 ee 08 00                  	mov r9d, dword ptr [r14 + 0x8eef0]
0xdc65:    48 8b 85 b0 fe ff ff                  	mov rax, qword ptr [rbp - 0x150]
0xdc6c:    48 89 04 24                           	mov qword ptr [rsp], rax
0xdc70:    49 89 d8                              	mov r8, rbx
0xdc73:    b9 10 00 00 00                        	mov ecx, 0x10
0xdc78:    48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0xdc7c:    48 8b b5 b8 fe ff ff                  	mov rsi, qword ptr [rbp - 0x148]
0xdc83:    48 8b bd c8 fe ff ff                  	mov rdi, qword ptr [rbp - 0x138]
0xdc8a:    e8 68 99 00 00                        	call 0x175f7 <cipherUpdateRounds>
0xdc8f:    48 8b 03                              	mov rax, qword ptr [rbx]
0xdc92:    49 89 45 00                           	mov qword ptr [r13], rax
0xdc96:    48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0xdc9a:    49 89 45 08                           	mov qword ptr [r13 + 8], rax
0xdc9e:    41 83 fc 0b                           	cmp r12d, 0xb
0xdca2:    0f 8e fd fe ff ff                     	jle 0xdba5 <DTV_EncAES_TS+0x130>
0xdca8:    e9 b5 01 00 00                        	jmp 0xde62
0xdcad:    41 0f b6 86 75 f4 08 00               	movzx eax, byte ptr [r14 + 0x8f475]
0xdcb5:    3c 07                                 	cmp al, 7
0xdcb7:    75 1b                                 	jne 0xdcd4 <DTV_EncAES_TS+0x25f>
0xdcb9:    48 8b 95 d0 fe ff ff                  	mov rdx, qword ptr [rbp - 0x130]
0xdcc0:    48 8b b5 c0 fe ff ff                  	mov rsi, qword ptr [rbp - 0x140]
0xdcc7:    4c 89 f7                              	mov rdi, r14
0xdcca:    e8 e8 ce ff ff                        	call 0xabb7 <DTV_Software_process_5606B2>
0xdccf:    e9 8e 01 00 00                        	jmp 0xde62
0xdcd4:    3c 08                                 	cmp al, 8
0xdcd6:    0f 85 94 00 00 00                     	jne 0xdd70 <DTV_EncAES_TS+0x2fb>
0xdcdc:    48 8b bd d0 fe ff ff                  	mov rdi, qword ptr [rbp - 0x130]
0xdce3:    48 8b b5 c0 fe ff ff                  	mov rsi, qword ptr [rbp - 0x140]
0xdcea:    b8 bc 00 00 00                        	mov eax, 0xbc
0xdcef:    40 f6 c7 01                           	test dil, 1
0xdcf3:    74 10                                 	je 0xdd05 <DTV_EncAES_TS+0x290>
0xdcf5:    0f b6 16                              	movzx edx, byte ptr [rsi]
0xdcf8:    88 17                                 	mov byte ptr [rdi], dl
0xdcfa:    48 83 c7 01                           	add rdi, 1
0xdcfe:    48 83 c6 01                           	add rsi, 1
0xdd02:    83 e8 01                              	sub eax, 1
0xdd05:    40 f6 c7 02                           	test dil, 2
0xdd09:    74 11                                 	je 0xdd1c <DTV_EncAES_TS+0x2a7>
0xdd0b:    0f b7 16                              	movzx edx, word ptr [rsi]
0xdd0e:    66 89 17                              	mov word ptr [rdi], dx
0xdd11:    48 83 c7 02                           	add rdi, 2
0xdd15:    48 83 c6 02                           	add rsi, 2
0xdd19:    83 e8 02                              	sub eax, 2
0xdd1c:    40 f6 c7 04                           	test dil, 4
0xdd20:    74 0f                                 	je 0xdd31 <DTV_EncAES_TS+0x2bc>
0xdd22:    8b 16                                 	mov edx, dword ptr [rsi]
0xdd24:    89 17                                 	mov dword ptr [rdi], edx
0xdd26:    48 83 c7 04                           	add rdi, 4
0xdd2a:    48 83 c6 04                           	add rsi, 4
0xdd2e:    83 e8 04                              	sub eax, 4
0xdd31:    89 c1                                 	mov ecx, eax
0xdd33:    c1 e9 03                              	shr ecx, 3
0xdd36:    89 c9                                 	mov ecx, ecx
0xdd38:    f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0xdd3b:    ba 00 00 00 00                        	mov edx, 0
0xdd40:    a8 04                                 	test al, 4
0xdd42:    74 08                                 	je 0xdd4c <DTV_EncAES_TS+0x2d7>
0xdd44:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xdd46:    89 0f                                 	mov dword ptr [rdi], ecx
0xdd48:    48 83 c2 04                           	add rdx, 4
0xdd4c:    a8 02                                 	test al, 2
0xdd4e:    74 0c                                 	je 0xdd5c <DTV_EncAES_TS+0x2e7>
0xdd50:    0f b7 0c 16                           	movzx ecx, word ptr [rsi + rdx]
0xdd54:    66 89 0c 17                           	mov word ptr [rdi + rdx], cx
0xdd58:    48 83 c2 02                           	add rdx, 2
0xdd5c:    a8 01                                 	test al, 1
0xdd5e:    0f 84 fe 00 00 00                     	je 0xde62
0xdd64:    0f b6 04 16                           	movzx eax, byte ptr [rsi + rdx]
0xdd68:    88 04 17                              	mov byte ptr [rdi + rdx], al
0xdd6b:    e9 f2 00 00 00                        	jmp 0xde62
0xdd70:    48 8b 95 c0 fe ff ff                  	mov rdx, qword ptr [rbp - 0x140]
0xdd77:    0f b6 02                              	movzx eax, byte ptr [rdx]
0xdd7a:    48 8b 8d d0 fe ff ff                  	mov rcx, qword ptr [rbp - 0x130]
0xdd81:    88 01                                 	mov byte ptr [rcx], al
0xdd83:    0f b6 42 01                           	movzx eax, byte ptr [rdx + 1]
0xdd87:    88 41 01                              	mov byte ptr [rcx + 1], al
0xdd8a:    0f b6 42 02                           	movzx eax, byte ptr [rdx + 2]
0xdd8e:    88 41 02                              	mov byte ptr [rcx + 2], al
0xdd91:    0f b6 42 03                           	movzx eax, byte ptr [rdx + 3]
0xdd95:    88 41 03                              	mov byte ptr [rcx + 3], al
0xdd98:    48 81 c3 e8 0e 00 00                  	add rbx, 0xee8
0xdd9f:    48 89 9d d8 fe ff ff                  	mov qword ptr [rbp - 0x128], rbx
0xdda6:    49 8d 86 f4 ee 08 00                  	lea rax, [r14 + 0x8eef4]
0xddad:    48 89 85 c8 fe ff ff                  	mov qword ptr [rbp - 0x138], rax
0xddb4:    48 89 d3                              	mov rbx, rdx
0xddb7:    48 83 c3 04                           	add rbx, 4
0xddbb:    49 89 cc                              	mov r12, rcx
0xddbe:    49 83 c4 04                           	add r12, 4
0xddc2:    49 89 d7                              	mov r15, rdx
0xddc5:    49 81 c7 bc 00 00 00                  	add r15, 0xbc
0xddcc:    4c 8d ad e0 fe ff ff                  	lea r13, [rbp - 0x120]
0xddd3:    48 8b 03                              	mov rax, qword ptr [rbx]
0xddd6:    49 89 45 00                           	mov qword ptr [r13], rax
0xddda:    48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0xddde:    49 89 45 08                           	mov qword ptr [r13 + 8], rax
0xdde2:    41 8b b6 f0 ee 08 00                  	mov esi, dword ptr [r14 + 0x8eef0]
0xdde9:    4c 8b 85 d8 fe ff ff                  	mov r8, qword ptr [rbp - 0x128]
0xddf0:    89 f1                                 	mov ecx, esi
0xddf2:    4c 89 ea                              	mov rdx, r13
0xddf5:    48 8b bd c8 fe ff ff                  	mov rdi, qword ptr [rbp - 0x138]
0xddfc:    e8 e4 8d 00 00                        	call 0x16be5 <rijndaelEncryptRound>
0xde01:    49 8b 45 00                           	mov rax, qword ptr [r13]
0xde05:    49 89 04 24                           	mov qword ptr [r12], rax
0xde09:    49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0xde0d:    49 89 44 24 08                        	mov qword ptr [r12 + 8], rax
0xde12:    0f b6 43 10                           	movzx eax, byte ptr [rbx + 0x10]
0xde16:    41 88 44 24 10                        	mov byte ptr [r12 + 0x10], al
0xde1b:    0f b6 43 11                           	movzx eax, byte ptr [rbx + 0x11]
0xde1f:    41 88 44 24 11                        	mov byte ptr [r12 + 0x11], al
0xde24:    0f b6 43 12                           	movzx eax, byte ptr [rbx + 0x12]
0xde28:    41 88 44 24 12                        	mov byte ptr [r12 + 0x12], al
0xde2d:    0f b6 43 13                           	movzx eax, byte ptr [rbx + 0x13]
0xde31:    41 88 44 24 13                        	mov byte ptr [r12 + 0x13], al
0xde36:    0f b6 43 14                           	movzx eax, byte ptr [rbx + 0x14]
0xde3a:    41 88 44 24 14                        	mov byte ptr [r12 + 0x14], al
0xde3f:    0f b6 43 15                           	movzx eax, byte ptr [rbx + 0x15]
0xde43:    41 88 44 24 15                        	mov byte ptr [r12 + 0x15], al
0xde48:    0f b6 43 16                           	movzx eax, byte ptr [rbx + 0x16]
0xde4c:    41 88 44 24 16                        	mov byte ptr [r12 + 0x16], al
0xde51:    48 83 c3 17                           	add rbx, 0x17
0xde55:    49 83 c4 17                           	add r12, 0x17
0xde59:    4c 39 fb                              	cmp rbx, r15
; data inside code section at 0xde5c -- 0xde5d
0xde5c:    0f                                                 |.               |
; function: DTV_EncAES_MultiTS at 0xde5d -- 0xde8d
0xde5d:    85 71 ff                              	test dword ptr [rcx - 1], esi
; data inside code section at 0xde60 -- 0xde62
0xde60:    ff ff                                              |..              |
0xde62:    b8 01 00 00 00                        	mov eax, 1
0xde67:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0xde6b:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xde74:    74 05                                 	je 0xde7b <DTV_EncAES_MultiTS+0x1e>
0xde76:    e8 2d 0d 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xde7b:    48 81 c4 48 01 00 00                  	add rsp, 0x148
0xde82:    5b                                    	pop rbx
0xde83:    41 5c                                 	pop r12
0xde85:    41 5d                                 	pop r13
0xde87:    41 5e                                 	pop r14
0xde89:    41 5f                                 	pop r15
0xde8b:    c9                                    	leave 
0xde8c:    c3                                    	ret 
; function: DTV_EncAES_MultiTS at 0xde8d -- 0xdebf
0xde8d:    55                                    	push rbp
0xde8e:    48 89 e5                              	mov rbp, rsp
0xde91:    41 57                                 	push r15
0xde93:    41 56                                 	push r14
0xde95:    41 55                                 	push r13
0xde97:    41 54                                 	push r12
0xde99:    53                                    	push rbx
0xde9a:    48 83 ec 18                           	sub rsp, 0x18
0xde9e:    e8 4d 0d 03 00                        	call 0x3ebf0 <mcount>
0xdea3:    48 89 7d c8                           	mov qword ptr [rbp - 0x38], rdi
0xdea7:    49 89 f7                              	mov r15, rsi
0xdeaa:    41 89 d6                              	mov r14d, edx
0xdead:    49 89 cd                              	mov r13, rcx
0xdeb0:    85 d2                                 	test edx, edx
0xdeb2:    7e 2f                                 	jle 0xdee3
0xdeb4:    bb 00 00 00 00                        	mov ebx, 0
0xdeb9:    41 bc 00 00 00 00                     	mov r12d, 0
; data inside code section at 0xdebf -- 0xdec7
0xdebf:    48 63 f3 49 8d 54 35 00                            |Hc.I.T5.        |
; function: DTV_DecrypTS at 0xdec7 -- 0xdef7
0xdec7:    49 8d 34 37                           	lea rsi, [r15 + rsi]
0xdecb:    48 8b 7d c8                           	mov rdi, qword ptr [rbp - 0x38]
0xdecf:    e8 a1 fb ff ff                        	call 0xda75 <DTV_EncAES_TS>
0xded4:    41 83 c4 01                           	add r12d, 1
0xded8:    81 c3 bc 00 00 00                     	add ebx, 0xbc
0xdede:    45 39 e6                              	cmp r14d, r12d
0xdee1:    7f dc                                 	jg 0xdebf
0xdee3:    b8 01 00 00 00                        	mov eax, 1
0xdee8:    48 83 c4 18                           	add rsp, 0x18
0xdeec:    5b                                    	pop rbx
0xdeed:    41 5c                                 	pop r12
0xdeef:    41 5d                                 	pop r13
0xdef1:    41 5e                                 	pop r14
0xdef3:    41 5f                                 	pop r15
0xdef5:    c9                                    	leave 
0xdef6:    c3                                    	ret 
; function: DTV_DecrypTS at 0xdef7 -- 0xe479
0xdef7:    55                                    	push rbp
0xdef8:    48 89 e5                              	mov rbp, rsp
0xdefb:    48 81 ec f0 00 00 00                  	sub rsp, 0xf0
0xdf02:    48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0xdf06:    4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0xdf0a:    4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0xdf0e:    4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0xdf12:    e8 d9 0c 03 00                        	call 0x3ebf0 <mcount>
0xdf17:    48 89 fb                              	mov rbx, rdi
0xdf1a:    49 89 f4                              	mov r12, rsi
0xdf1d:    49 89 d5                              	mov r13, rdx
0xdf20:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xdf29:    48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0xdf2d:    31 c0                                 	xor eax, eax
0xdf2f:    4c 8b b7 38 1d 00 00                  	mov r14, qword ptr [rdi + 0x1d38]
0xdf36:    0f b6 87 e4 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30de4]
0xdf3d:    84 c0                                 	test al, al
0xdf3f:    0f 84 2b 05 00 00                     	je 0xe470 <DTV_DecrypTS+0x579>
0xdf45:    0f b6 97 a1 0d 03 00                  	movzx edx, byte ptr [rdi + 0x30da1]
0xdf4c:    84 d2                                 	test dl, dl
0xdf4e:    0f 85 7e 02 00 00                     	jne 0xe1d2 <DTV_DecrypTS+0x2db>
0xdf54:    0f b6 87 75 f4 08 00                  	movzx eax, byte ptr [rdi + 0x8f475]
0xdf5b:    3c 07                                 	cmp al, 7
0xdf5d:    75 0e                                 	jne 0xdf6d <DTV_DecrypTS+0x76>
0xdf5f:    48 8d 95 10 ff ff ff                  	lea rdx, [rbp - 0xf0]
0xdf66:    e8 4c cc ff ff                        	call 0xabb7 <DTV_Software_process_5606B2>
0xdf6b:    eb 1a                                 	jmp 0xdf87 <DTV_DecrypTS+0x90>
0xdf6d:    3c 08                                 	cmp al, 8
0xdf6f:    75 16                                 	jne 0xdf87 <DTV_DecrypTS+0x90>
0xdf71:    48 8d 85 10 ff ff ff                  	lea rax, [rbp - 0xf0]
0xdf78:    b9 17 00 00 00                        	mov ecx, 0x17
0xdf7d:    48 89 c7                              	mov rdi, rax
0xdf80:    f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0xdf83:    8b 06                                 	mov eax, dword ptr [rsi]
0xdf85:    89 07                                 	mov dword ptr [rdi], eax
0xdf87:    80 bb e4 0d 03 00 01                  	cmp byte ptr [rbx + 0x30de4], 1
0xdf8e:    0f 85 dc 04 00 00                     	jne 0xe470 <DTV_DecrypTS+0x579>
0xdf94:    0f b6 83 75 f4 08 00                  	movzx eax, byte ptr [rbx + 0x8f475]
0xdf9b:    84 c0                                 	test al, al
0xdf9d:    75 17                                 	jne 0xdfb6 <DTV_DecrypTS+0xbf>
0xdf9f:    48 8d b5 10 ff ff ff                  	lea rsi, [rbp - 0xf0]
0xdfa6:    4c 89 ea                              	mov rdx, r13
0xdfa9:    48 89 df                              	mov rdi, rbx
0xdfac:    e8 77 e7 ff ff                        	call 0xc728 <DTV_HardwareDecrypt_Ver01>
0xdfb1:    e9 ba 04 00 00                        	jmp 0xe470 <DTV_DecrypTS+0x579>
0xdfb6:    3c 01                                 	cmp al, 1
0xdfb8:    74 08                                 	je 0xdfc2 <DTV_DecrypTS+0xcb>
0xdfba:    3c 04                                 	cmp al, 4
0xdfbc:    0f 1f 40 00                           	nop dword ptr [rax]
0xdfc0:    75 17                                 	jne 0xdfd9 <DTV_DecrypTS+0xe2>
0xdfc2:    48 8d b5 10 ff ff ff                  	lea rsi, [rbp - 0xf0]
0xdfc9:    4c 89 ea                              	mov rdx, r13
0xdfcc:    48 89 df                              	mov rdi, rbx
0xdfcf:    e8 36 e8 ff ff                        	call 0xc80a <DTV_HardwareDecrypt>
0xdfd4:    e9 97 04 00 00                        	jmp 0xe470 <DTV_DecrypTS+0x579>
0xdfd9:    3c 03                                 	cmp al, 3
0xdfdb:    75 17                                 	jne 0xdff4 <DTV_DecrypTS+0xfd>
0xdfdd:    48 8d b5 10 ff ff ff                  	lea rsi, [rbp - 0xf0]
0xdfe4:    4c 89 ea                              	mov rdx, r13
0xdfe7:    48 89 df                              	mov rdi, rbx
0xdfea:    e8 85 e6 ff ff                        	call 0xc674 <DTV_HardwareDecrypt_5211Ver01>
0xdfef:    e9 7c 04 00 00                        	jmp 0xe470 <DTV_DecrypTS+0x579>
0xdff4:    3c 07                                 	cmp al, 7
0xdff6:    0f 85 cf 00 00 00                     	jne 0xe0cb <DTV_DecrypTS+0x1d4>
0xdffc:    0f b6 85 10 ff ff ff                  	movzx eax, byte ptr [rbp - 0xf0]
0xe003:    41 88 45 00                           	mov byte ptr [r13], al
0xe007:    0f b6 85 11 ff ff ff                  	movzx eax, byte ptr [rbp - 0xef]
0xe00e:    41 88 45 01                           	mov byte ptr [r13 + 1], al
0xe012:    0f b6 85 12 ff ff ff                  	movzx eax, byte ptr [rbp - 0xee]
0xe019:    41 88 45 02                           	mov byte ptr [r13 + 2], al
0xe01d:    0f b6 85 13 ff ff ff                  	movzx eax, byte ptr [rbp - 0xed]
0xe024:    41 88 45 03                           	mov byte ptr [r13 + 3], al
0xe028:    48 8d b5 10 ff ff ff                  	lea rsi, [rbp - 0xf0]
0xe02f:    48 8d 46 0b                           	lea rax, [rsi + 0xb]
0xe033:    48 81 c6 c3 00 00 00                  	add rsi, 0xc3
0xe03a:    0f b6 93 aa fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fcaa]
0xe041:    30 10                                 	xor byte ptr [rax], dl
0xe043:    0f b6 8b a9 fc 08 00                  	movzx ecx, byte ptr [rbx + 0x8fca9]
0xe04a:    30 48 ff                              	xor byte ptr [rax - 1], cl
0xe04d:    30 50 fe                              	xor byte ptr [rax - 2], dl
0xe050:    0f b6 93 a8 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca8]
0xe057:    30 50 fd                              	xor byte ptr [rax - 3], dl
0xe05a:    30 48 fc                              	xor byte ptr [rax - 4], cl
0xe05d:    0f b6 8b ab fc 08 00                  	movzx ecx, byte ptr [rbx + 0x8fcab]
0xe064:    30 48 fb                              	xor byte ptr [rax - 5], cl
0xe067:    30 50 fa                              	xor byte ptr [rax - 6], dl
0xe06a:    30 50 f9                              	xor byte ptr [rax - 7], dl
0xe06d:    48 83 c0 08                           	add rax, 8
0xe071:    48 39 f0                              	cmp rax, rsi
0xe074:    75 c4                                 	jne 0xe03a <DTV_DecrypTS+0x143>
0xe076:    49 81 c6 70 3e 00 00                  	add r14, 0x3e70
0xe07d:    49 8d 55 04                           	lea rdx, [r13 + 4]
0xe081:    4c 8d a5 10 ff ff ff                  	lea r12, [rbp - 0xf0]
0xe088:    49 8d 74 24 04                        	lea rsi, [r12 + 4]
0xe08d:    48 8b bb 98 fc 08 00                  	mov rdi, qword ptr [rbx + 0x8fc98]
0xe094:    41 b8 10 00 00 00                     	mov r8d, 0x10
0xe09a:    4c 89 f1                              	mov rcx, r14
0xe09d:    e8 39 e4 00 00                        	call 0x1c4db <des_crypt_ecb_Multi>
0xe0a2:    49 8d 95 84 00 00 00                  	lea rdx, [r13 + 0x84]
0xe0a9:    49 8d b4 24 84 00 00 00               	lea rsi, [r12 + 0x84]
0xe0b1:    48 8b bb a0 fc 08 00                  	mov rdi, qword ptr [rbx + 0x8fca0]
0xe0b8:    41 b8 07 00 00 00                     	mov r8d, 7
0xe0be:    4c 89 f1                              	mov rcx, r14
0xe0c1:    e8 15 e4 00 00                        	call 0x1c4db <des_crypt_ecb_Multi>
0xe0c6:    e9 a5 03 00 00                        	jmp 0xe470 <DTV_DecrypTS+0x579>
0xe0cb:    3c 08                                 	cmp al, 8
0xe0cd:    0f 85 9d 03 00 00                     	jne 0xe470 <DTV_DecrypTS+0x579>
0xe0d3:    48 8d 85 10 ff ff ff                  	lea rax, [rbp - 0xf0]
0xe0da:    4c 89 ea                              	mov rdx, r13
0xe0dd:    48 89 c6                              	mov rsi, rax
0xe0e0:    48 8d 78 04                           	lea rdi, [rax + 4]
0xe0e4:    0f b6 08                              	movzx ecx, byte ptr [rax]
0xe0e7:    88 0a                                 	mov byte ptr [rdx], cl
0xe0e9:    48 83 c0 01                           	add rax, 1
0xe0ed:    48 83 c2 01                           	add rdx, 1
0xe0f1:    48 39 f8                              	cmp rax, rdi
0xe0f4:    75 ee                                 	jne 0xe0e4 <DTV_DecrypTS+0x1ed>
0xe0f6:    48 8d 85 1b ff ff ff                  	lea rax, [rbp - 0xe5]
0xe0fd:    48 81 c6 c3 00 00 00                  	add rsi, 0xc3
0xe104:    0f b6 93 aa fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fcaa]
0xe10b:    30 10                                 	xor byte ptr [rax], dl
0xe10d:    0f b6 8b a9 fc 08 00                  	movzx ecx, byte ptr [rbx + 0x8fca9]
0xe114:    30 48 ff                              	xor byte ptr [rax - 1], cl
0xe117:    30 50 fe                              	xor byte ptr [rax - 2], dl
0xe11a:    0f b6 93 a8 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca8]
0xe121:    30 50 fd                              	xor byte ptr [rax - 3], dl
0xe124:    30 48 fc                              	xor byte ptr [rax - 4], cl
0xe127:    0f b6 8b ab fc 08 00                  	movzx ecx, byte ptr [rbx + 0x8fcab]
0xe12e:    30 48 fb                              	xor byte ptr [rax - 5], cl
0xe131:    30 50 fa                              	xor byte ptr [rax - 6], dl
0xe134:    30 50 f9                              	xor byte ptr [rax - 7], dl
0xe137:    48 83 c0 08                           	add rax, 8
0xe13b:    48 39 f0                              	cmp rax, rsi
0xe13e:    75 c4                                 	jne 0xe104 <DTV_DecrypTS+0x20d>
0xe140:    4c 89 ef                              	mov rdi, r13
0xe143:    48 8d b5 10 ff ff ff                  	lea rsi, [rbp - 0xf0]
0xe14a:    b8 bc 00 00 00                        	mov eax, 0xbc
0xe14f:    41 f6 c5 01                           	test r13b, 1
0xe153:    74 12                                 	je 0xe167 <DTV_DecrypTS+0x270>
0xe155:    0f b6 16                              	movzx edx, byte ptr [rsi]
0xe158:    41 88 55 00                           	mov byte ptr [r13], dl
0xe15c:    48 83 c7 01                           	add rdi, 1
0xe160:    48 83 c6 01                           	add rsi, 1
0xe164:    83 e8 01                              	sub eax, 1
0xe167:    40 f6 c7 02                           	test dil, 2
0xe16b:    74 11                                 	je 0xe17e <DTV_DecrypTS+0x287>
0xe16d:    0f b7 16                              	movzx edx, word ptr [rsi]
0xe170:    66 89 17                              	mov word ptr [rdi], dx
0xe173:    48 83 c7 02                           	add rdi, 2
0xe177:    48 83 c6 02                           	add rsi, 2
0xe17b:    83 e8 02                              	sub eax, 2
0xe17e:    40 f6 c7 04                           	test dil, 4
0xe182:    74 0f                                 	je 0xe193 <DTV_DecrypTS+0x29c>
0xe184:    8b 16                                 	mov edx, dword ptr [rsi]
0xe186:    89 17                                 	mov dword ptr [rdi], edx
0xe188:    48 83 c7 04                           	add rdi, 4
0xe18c:    48 83 c6 04                           	add rsi, 4
0xe190:    83 e8 04                              	sub eax, 4
0xe193:    89 c1                                 	mov ecx, eax
0xe195:    c1 e9 03                              	shr ecx, 3
0xe198:    89 c9                                 	mov ecx, ecx
0xe19a:    f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0xe19d:    ba 00 00 00 00                        	mov edx, 0
0xe1a2:    a8 04                                 	test al, 4
0xe1a4:    74 08                                 	je 0xe1ae <DTV_DecrypTS+0x2b7>
0xe1a6:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xe1a8:    89 0f                                 	mov dword ptr [rdi], ecx
0xe1aa:    48 83 c2 04                           	add rdx, 4
0xe1ae:    a8 02                                 	test al, 2
0xe1b0:    74 0c                                 	je 0xe1be <DTV_DecrypTS+0x2c7>
0xe1b2:    0f b7 0c 16                           	movzx ecx, word ptr [rsi + rdx]
0xe1b6:    66 89 0c 17                           	mov word ptr [rdi + rdx], cx
0xe1ba:    48 83 c2 02                           	add rdx, 2
0xe1be:    a8 01                                 	test al, 1
0xe1c0:    0f 84 aa 02 00 00                     	je 0xe470 <DTV_DecrypTS+0x579>
0xe1c6:    0f b6 04 16                           	movzx eax, byte ptr [rsi + rdx]
0xe1ca:    88 04 17                              	mov byte ptr [rdi + rdx], al
0xe1cd:    e9 9e 02 00 00                        	jmp 0xe470 <DTV_DecrypTS+0x579>
0xe1d2:    80 fa 01                              	cmp dl, 1
0xe1d5:    0f 85 95 02 00 00                     	jne 0xe470 <DTV_DecrypTS+0x579>
0xe1db:    3c 01                                 	cmp al, 1
0xe1dd:    0f 85 8d 02 00 00                     	jne 0xe470 <DTV_DecrypTS+0x579>
0xe1e3:    0f b6 87 75 f4 08 00                  	movzx eax, byte ptr [rdi + 0x8f475]
0xe1ea:    3c 07                                 	cmp al, 7
0xe1ec:    0f 84 94 02 00 00                     	je 0xe486
0xe1f2:    3c 08                                 	cmp al, 8
0xe1f4:    75 23                                 	jne 0xe219 <DTV_DecrypTS+0x322>
0xe1f6:    48 8d 85 10 ff ff ff                  	lea rax, [rbp - 0xf0]
0xe1fd:    b9 17 00 00 00                        	mov ecx, 0x17
0xe202:    48 89 c7                              	mov rdi, rax
0xe205:    f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0xe208:    8b 06                                 	mov eax, dword ptr [rsi]
0xe20a:    89 07                                 	mov dword ptr [rdi], eax
0xe20c:    80 bb e4 0d 03 00 01                  	cmp byte ptr [rbx + 0x30de4], 1
0xe213:    0f 85 57 02 00 00                     	jne 0xe470 <DTV_DecrypTS+0x579>
0xe219:    0f b6 83 75 f4 08 00                  	movzx eax, byte ptr [rbx + 0x8f475]
0xe220:    84 c0                                 	test al, al
0xe222:    75 17                                 	jne 0xe23b <DTV_DecrypTS+0x344>
0xe224:    48 8d b5 10 ff ff ff                  	lea rsi, [rbp - 0xf0]
0xe22b:    4c 89 ea                              	mov rdx, r13
0xe22e:    48 89 df                              	mov rdi, rbx
0xe231:    e8 f2 e4 ff ff                        	call 0xc728 <DTV_HardwareDecrypt_Ver01>
0xe236:    e9 35 02 00 00                        	jmp 0xe470 <DTV_DecrypTS+0x579>
0xe23b:    3c 01                                 	cmp al, 1
0xe23d:    74 04                                 	je 0xe243 <DTV_DecrypTS+0x34c>
0xe23f:    3c 04                                 	cmp al, 4
0xe241:    75 17                                 	jne 0xe25a <DTV_DecrypTS+0x363>
0xe243:    48 8d b5 10 ff ff ff                  	lea rsi, [rbp - 0xf0]
0xe24a:    4c 89 ea                              	mov rdx, r13
0xe24d:    48 89 df                              	mov rdi, rbx
0xe250:    e8 b5 e5 ff ff                        	call 0xc80a <DTV_HardwareDecrypt>
0xe255:    e9 16 02 00 00                        	jmp 0xe470 <DTV_DecrypTS+0x579>
0xe25a:    3c 03                                 	cmp al, 3
0xe25c:    75 17                                 	jne 0xe275 <DTV_DecrypTS+0x37e>
0xe25e:    48 8d b5 10 ff ff ff                  	lea rsi, [rbp - 0xf0]
0xe265:    4c 89 ea                              	mov rdx, r13
0xe268:    48 89 df                              	mov rdi, rbx
0xe26b:    e8 04 e4 ff ff                        	call 0xc674 <DTV_HardwareDecrypt_5211Ver01>
0xe270:    e9 fb 01 00 00                        	jmp 0xe470 <DTV_DecrypTS+0x579>
0xe275:    3c 07                                 	cmp al, 7
0xe277:    0f 85 d9 00 00 00                     	jne 0xe356 <DTV_DecrypTS+0x45f>
0xe27d:    41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0xe282:    41 88 45 00                           	mov byte ptr [r13], al
0xe286:    41 0f b6 44 24 01                     	movzx eax, byte ptr [r12 + 1]
0xe28c:    41 88 45 01                           	mov byte ptr [r13 + 1], al
0xe290:    41 0f b6 44 24 02                     	movzx eax, byte ptr [r12 + 2]
0xe296:    41 88 45 02                           	mov byte ptr [r13 + 2], al
0xe29a:    41 0f b6 44 24 03                     	movzx eax, byte ptr [r12 + 3]
0xe2a0:    41 88 45 03                           	mov byte ptr [r13 + 3], al
0xe2a4:    4c 89 e0                              	mov rax, r12
0xe2a7:    49 8d 8c 24 b8 00 00 00               	lea rcx, [r12 + 0xb8]
0xe2af:    0f b6 93 aa fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fcaa]
0xe2b6:    30 50 0b                              	xor byte ptr [rax + 0xb], dl
0xe2b9:    0f b6 93 a9 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca9]
0xe2c0:    30 50 0a                              	xor byte ptr [rax + 0xa], dl
0xe2c3:    0f b6 93 aa fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fcaa]
0xe2ca:    30 50 09                              	xor byte ptr [rax + 9], dl
0xe2cd:    0f b6 93 a8 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca8]
0xe2d4:    30 50 08                              	xor byte ptr [rax + 8], dl
0xe2d7:    0f b6 93 a9 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca9]
0xe2de:    30 50 07                              	xor byte ptr [rax + 7], dl
0xe2e1:    0f b6 93 ab fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fcab]
0xe2e8:    30 50 06                              	xor byte ptr [rax + 6], dl
0xe2eb:    0f b6 93 a8 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca8]
0xe2f2:    30 50 05                              	xor byte ptr [rax + 5], dl
0xe2f5:    0f b6 93 a8 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca8]
0xe2fc:    30 50 04                              	xor byte ptr [rax + 4], dl
0xe2ff:    48 83 c0 08                           	add rax, 8
0xe303:    48 39 c8                              	cmp rax, rcx
0xe306:    75 a7                                 	jne 0xe2af <DTV_DecrypTS+0x3b8>
0xe308:    49 81 c6 70 3e 00 00                  	add r14, 0x3e70
0xe30f:    49 8d 55 04                           	lea rdx, [r13 + 4]
0xe313:    49 8d 74 24 04                        	lea rsi, [r12 + 4]
0xe318:    48 8b bb 98 fc 08 00                  	mov rdi, qword ptr [rbx + 0x8fc98]
0xe31f:    41 b8 10 00 00 00                     	mov r8d, 0x10
0xe325:    4c 89 f1                              	mov rcx, r14
0xe328:    e8 ae e1 00 00                        	call 0x1c4db <des_crypt_ecb_Multi>
0xe32d:    49 8d 95 84 00 00 00                  	lea rdx, [r13 + 0x84]
0xe334:    49 8d b4 24 84 00 00 00               	lea rsi, [r12 + 0x84]
0xe33c:    48 8b bb a0 fc 08 00                  	mov rdi, qword ptr [rbx + 0x8fca0]
0xe343:    41 b8 07 00 00 00                     	mov r8d, 7
0xe349:    4c 89 f1                              	mov rcx, r14
0xe34c:    e8 8a e1 00 00                        	call 0x1c4db <des_crypt_ecb_Multi>
0xe351:    e9 1a 01 00 00                        	jmp 0xe470 <DTV_DecrypTS+0x579>
0xe356:    3c 08                                 	cmp al, 8
0xe358:    0f 85 12 01 00 00                     	jne 0xe470 <DTV_DecrypTS+0x579>
0xe35e:    41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0xe363:    41 88 45 00                           	mov byte ptr [r13], al
0xe367:    41 0f b6 44 24 01                     	movzx eax, byte ptr [r12 + 1]
0xe36d:    41 88 45 01                           	mov byte ptr [r13 + 1], al
0xe371:    41 0f b6 44 24 02                     	movzx eax, byte ptr [r12 + 2]
0xe377:    41 88 45 02                           	mov byte ptr [r13 + 2], al
0xe37b:    41 0f b6 44 24 03                     	movzx eax, byte ptr [r12 + 3]
0xe381:    41 88 45 03                           	mov byte ptr [r13 + 3], al
0xe385:    4c 89 e0                              	mov rax, r12
0xe388:    49 8d 8c 24 b8 00 00 00               	lea rcx, [r12 + 0xb8]
0xe390:    0f b6 93 aa fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fcaa]
0xe397:    30 50 0b                              	xor byte ptr [rax + 0xb], dl
0xe39a:    0f b6 93 a9 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca9]
0xe3a1:    30 50 0a                              	xor byte ptr [rax + 0xa], dl
0xe3a4:    0f b6 93 aa fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fcaa]
0xe3ab:    30 50 09                              	xor byte ptr [rax + 9], dl
0xe3ae:    0f b6 93 a8 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca8]
0xe3b5:    30 50 08                              	xor byte ptr [rax + 8], dl
0xe3b8:    0f b6 93 a9 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca9]
0xe3bf:    30 50 07                              	xor byte ptr [rax + 7], dl
0xe3c2:    0f b6 93 ab fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fcab]
0xe3c9:    30 50 06                              	xor byte ptr [rax + 6], dl
0xe3cc:    0f b6 93 a8 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca8]
0xe3d3:    30 50 05                              	xor byte ptr [rax + 5], dl
0xe3d6:    0f b6 93 a8 fc 08 00                  	movzx edx, byte ptr [rbx + 0x8fca8]
0xe3dd:    30 50 04                              	xor byte ptr [rax + 4], dl
0xe3e0:    48 83 c0 08                           	add rax, 8
0xe3e4:    48 39 c8                              	cmp rax, rcx
0xe3e7:    75 a7                                 	jne 0xe390 <DTV_DecrypTS+0x499>
0xe3e9:    4c 89 ef                              	mov rdi, r13
0xe3ec:    4c 89 e6                              	mov rsi, r12
0xe3ef:    b8 bc 00 00 00                        	mov eax, 0xbc
0xe3f4:    41 f6 c5 01                           	test r13b, 1
0xe3f8:    74 14                                 	je 0xe40e <DTV_DecrypTS+0x517>
0xe3fa:    41 0f b6 14 24                        	movzx edx, byte ptr [r12]
0xe3ff:    41 88 55 00                           	mov byte ptr [r13], dl
0xe403:    48 83 c7 01                           	add rdi, 1
0xe407:    48 83 c6 01                           	add rsi, 1
0xe40b:    83 e8 01                              	sub eax, 1
0xe40e:    40 f6 c7 02                           	test dil, 2
0xe412:    74 11                                 	je 0xe425 <DTV_DecrypTS+0x52e>
0xe414:    0f b7 16                              	movzx edx, word ptr [rsi]
0xe417:    66 89 17                              	mov word ptr [rdi], dx
0xe41a:    48 83 c7 02                           	add rdi, 2
0xe41e:    48 83 c6 02                           	add rsi, 2
0xe422:    83 e8 02                              	sub eax, 2
0xe425:    40 f6 c7 04                           	test dil, 4
0xe429:    74 0f                                 	je 0xe43a <DTV_DecrypTS+0x543>
0xe42b:    8b 16                                 	mov edx, dword ptr [rsi]
0xe42d:    89 17                                 	mov dword ptr [rdi], edx
0xe42f:    48 83 c7 04                           	add rdi, 4
0xe433:    48 83 c6 04                           	add rsi, 4
0xe437:    83 e8 04                              	sub eax, 4
0xe43a:    89 c1                                 	mov ecx, eax
0xe43c:    c1 e9 03                              	shr ecx, 3
0xe43f:    89 c9                                 	mov ecx, ecx
0xe441:    f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0xe444:    ba 00 00 00 00                        	mov edx, 0
0xe449:    a8 04                                 	test al, 4
0xe44b:    74 08                                 	je 0xe455 <DTV_DecrypTS+0x55e>
0xe44d:    8b 0e                                 	mov ecx, dword ptr [rsi]
0xe44f:    89 0f                                 	mov dword ptr [rdi], ecx
0xe451:    48 83 c2 04                           	add rdx, 4
0xe455:    a8 02                                 	test al, 2
0xe457:    74 0c                                 	je 0xe465 <DTV_DecrypTS+0x56e>
0xe459:    0f b7 0c 16                           	movzx ecx, word ptr [rsi + rdx]
0xe45d:    66 89 0c 17                           	mov word ptr [rdi + rdx], cx
0xe461:    48 83 c2 02                           	add rdx, 2
0xe465:    a8 01                                 	test al, 1
0xe467:    74 07                                 	je 0xe470 <DTV_DecrypTS+0x579>
0xe469:    0f b6 04 16                           	movzx eax, byte ptr [rsi + rdx]
0xe46d:    88 04 17                              	mov byte ptr [rdi + rdx], al
0xe470:    b8 01 00 00 00                        	mov eax, 1
0xe475:    48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
; function: DTV_Calculate_Final_Key at 0xe479 -- 0xe4a9
0xe479:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xe482:    74 13                                 	je 0xe497 <DTV_Calculate_Final_Key+0x1e>
0xe484:    eb 0c                                 	jmp 0xe492 <DTV_Calculate_Final_Key+0x19>
0xe486:    0f b6 87 75 f4 08 00                  	movzx eax, byte ptr [rdi + 0x8f475]
0xe48d:    e9 a9 fd ff ff                        	jmp 0xe23b
0xe492:    e8 11 07 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xe497:    48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0xe49b:    4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0xe49f:    4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0xe4a3:    4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0xe4a7:    c9                                    	leave 
0xe4a8:    c3                                    	ret 
; function: DTV_Calculate_Final_Key at 0xe4a9 -- 0xe8df
0xe4a9:    55                                    	push rbp
0xe4aa:    48 89 e5                              	mov rbp, rsp
0xe4ad:    41 57                                 	push r15
0xe4af:    41 56                                 	push r14
0xe4b1:    41 55                                 	push r13
0xe4b3:    41 54                                 	push r12
0xe4b5:    53                                    	push rbx
0xe4b6:    48 81 ec a8 03 00 00                  	sub rsp, 0x3a8
0xe4bd:    e8 2e 07 03 00                        	call 0x3ebf0 <mcount>
0xe4c2:    49 89 fe                              	mov r14, rdi
0xe4c5:    48 89 b5 48 fc ff ff                  	mov qword ptr [rbp - 0x3b8], rsi
0xe4cc:    48 89 95 40 fc ff ff                  	mov qword ptr [rbp - 0x3c0], rdx
0xe4d3:    48 89 8d 38 fc ff ff                  	mov qword ptr [rbp - 0x3c8], rcx
0xe4da:    4c 89 8d 30 fc ff ff                  	mov qword ptr [rbp - 0x3d0], r9
0xe4e1:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xe4ea:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xe4ee:    31 c0                                 	xor eax, eax
0xe4f0:    c6 45 b0 1e                           	mov byte ptr [rbp - 0x50], 0x1e
0xe4f4:    c6 45 b1 b7                           	mov byte ptr [rbp - 0x4f], 0xb7
0xe4f8:    c6 45 b2 aa                           	mov byte ptr [rbp - 0x4e], 0xaa
0xe4fc:    c6 45 b3 d9                           	mov byte ptr [rbp - 0x4d], 0xd9
0xe500:    c6 45 b4 99                           	mov byte ptr [rbp - 0x4c], 0x99
0xe504:    c6 45 b5 e0                           	mov byte ptr [rbp - 0x4b], 0xe0
0xe508:    c6 45 b6 4b                           	mov byte ptr [rbp - 0x4a], 0x4b
0xe50c:    c6 45 b7 de                           	mov byte ptr [rbp - 0x49], 0xde
0xe510:    c6 45 b8 a5                           	mov byte ptr [rbp - 0x48], 0xa5
0xe514:    c6 45 b9 e6                           	mov byte ptr [rbp - 0x47], 0xe6
0xe518:    c6 45 ba 46                           	mov byte ptr [rbp - 0x46], 0x46
0xe51c:    c6 45 bb 1e                           	mov byte ptr [rbp - 0x45], 0x1e
0xe520:    c6 45 bc ef                           	mov byte ptr [rbp - 0x44], 0xef
0xe524:    c6 45 bd 00                           	mov byte ptr [rbp - 0x43], 0
0xe528:    c6 45 be ee                           	mov byte ptr [rbp - 0x42], 0xee
0xe52c:    c6 45 bf fb                           	mov byte ptr [rbp - 0x41], 0xfb
0xe530:    48 8b 97 38 1d 00 00                  	mov rdx, qword ptr [rdi + 0x1d38]
0xe537:    48 89 95 58 fc ff ff                  	mov qword ptr [rbp - 0x3a8], rdx
0xe53e:    48 8d 95 40 ff ff ff                  	lea rdx, [rbp - 0xc0]
0xe545:    b9 08 00 00 00                        	mov ecx, 8
0xe54a:    48 89 d7                              	mov rdi, rdx
0xe54d:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xe550:    4d 89 c4                              	mov r12, r8
0xe553:    48 89 95 50 fc ff ff                  	mov qword ptr [rbp - 0x3b0], rdx
0xe55a:    49 89 d5                              	mov r13, rdx
0xe55d:    49 83 c5 20                           	add r13, 0x20
0xe561:    48 89 d3                              	mov rbx, rdx
0xe564:    49 c7 c7 00 00 00 00                  	mov r15, 0
0xe56b:    41 0f b6 14 24                        	movzx edx, byte ptr [r12]
0xe570:    4c 89 fe                              	mov rsi, r15
0xe573:    48 89 df                              	mov rdi, rbx
0xe576:    b8 00 00 00 00                        	mov eax, 0
0xe57b:    e8 e8 06 03 00                        	call 0x3ec68 <sprintf>
0xe580:    49 83 c4 01                           	add r12, 1
0xe584:    48 83 c3 02                           	add rbx, 2
0xe588:    4c 39 eb                              	cmp rbx, r13
0xe58b:    75 de                                 	jne 0xe56b <DTV_Calculate_Final_Key+0xc2>
0xe58d:    48 8b 85 58 fc ff ff                  	mov rax, qword ptr [rbp - 0x3a8]
0xe594:    48 05 e8 0e 00 00                     	add rax, 0xee8
0xe59a:    48 89 85 58 fc ff ff                  	mov qword ptr [rbp - 0x3a8], rax
0xe5a1:    48 8d bd 60 fc ff ff                  	lea rdi, [rbp - 0x3a0]
0xe5a8:    49 89 c0                              	mov r8, rax
0xe5ab:    48 8d 8d 40 ff ff ff                  	lea rcx, [rbp - 0xc0]
0xe5b2:    ba 80 00 00 00                        	mov edx, 0x80
0xe5b7:    be 00 00 00 00                        	mov esi, 0
0xe5bc:    e8 e5 92 00 00                        	call 0x178a6 <makeKey>
0xe5c1:    b8 00 00 00 00                        	mov eax, 0
0xe5c6:    48 8d b5 60 fc ff ff                  	lea rsi, [rbp - 0x3a0]
0xe5cd:    48 8d 4d a0                           	lea rcx, [rbp - 0x60]
0xe5d1:    8b 94 06 f0 00 00 00                  	mov edx, dword ptr [rsi + rax + 0xf0]
0xe5d8:    89 d3                                 	mov ebx, edx
0xe5da:    c1 eb 18                              	shr ebx, 0x18
0xe5dd:    88 1c 01                              	mov byte ptr [rcx + rax], bl
0xe5e0:    89 d3                                 	mov ebx, edx
0xe5e2:    c1 eb 10                              	shr ebx, 0x10
0xe5e5:    88 5c 01 01                           	mov byte ptr [rcx + rax + 1], bl
0xe5e9:    89 d3                                 	mov ebx, edx
0xe5eb:    c1 eb 08                              	shr ebx, 8
0xe5ee:    88 5c 01 02                           	mov byte ptr [rcx + rax + 2], bl
0xe5f2:    88 54 01 03                           	mov byte ptr [rcx + rax + 3], dl
0xe5f6:    48 83 c0 04                           	add rax, 4
0xe5fa:    48 83 f8 10                           	cmp rax, 0x10
0xe5fe:    75 d1                                 	jne 0xe5d1 <DTV_Calculate_Final_Key+0x128>
0xe600:    48 8d 95 40 ff ff ff                  	lea rdx, [rbp - 0xc0]
0xe607:    b9 08 00 00 00                        	mov ecx, 8
0xe60c:    b0 00                                 	mov al, 0
0xe60e:    48 89 d7                              	mov rdi, rdx
0xe611:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xe614:    4c 8b a5 30 fc ff ff                  	mov r12, qword ptr [rbp - 0x3d0]
0xe61b:    48 8b 9d 50 fc ff ff                  	mov rbx, qword ptr [rbp - 0x3b0]
0xe622:    49 c7 c7 00 00 00 00                  	mov r15, 0
0xe629:    41 0f b6 14 24                        	movzx edx, byte ptr [r12]
0xe62e:    4c 89 fe                              	mov rsi, r15
0xe631:    48 89 df                              	mov rdi, rbx
0xe634:    b8 00 00 00 00                        	mov eax, 0
0xe639:    e8 2a 06 03 00                        	call 0x3ec68 <sprintf>
0xe63e:    49 83 c4 01                           	add r12, 1
0xe642:    48 83 c3 02                           	add rbx, 2
0xe646:    49 39 dd                              	cmp r13, rbx
0xe649:    75 de                                 	jne 0xe629 <DTV_Calculate_Final_Key+0x180>
0xe64b:    48 8d bd 60 fc ff ff                  	lea rdi, [rbp - 0x3a0]
0xe652:    4c 8b 85 58 fc ff ff                  	mov r8, qword ptr [rbp - 0x3a8]
0xe659:    48 8d 8d 40 ff ff ff                  	lea rcx, [rbp - 0xc0]
0xe660:    ba 80 00 00 00                        	mov edx, 0x80
0xe665:    be 00 00 00 00                        	mov esi, 0
0xe66a:    e8 37 92 00 00                        	call 0x178a6 <makeKey>
0xe66f:    b8 00 00 00 00                        	mov eax, 0
0xe674:    48 8d b5 60 fc ff ff                  	lea rsi, [rbp - 0x3a0]
0xe67b:    48 8d 4d 90                           	lea rcx, [rbp - 0x70]
0xe67f:    8b 94 06 f0 00 00 00                  	mov edx, dword ptr [rsi + rax + 0xf0]
0xe686:    89 d3                                 	mov ebx, edx
0xe688:    c1 eb 18                              	shr ebx, 0x18
0xe68b:    88 1c 01                              	mov byte ptr [rcx + rax], bl
0xe68e:    89 d3                                 	mov ebx, edx
0xe690:    c1 eb 10                              	shr ebx, 0x10
0xe693:    88 5c 01 01                           	mov byte ptr [rcx + rax + 1], bl
0xe697:    89 d3                                 	mov ebx, edx
0xe699:    c1 eb 08                              	shr ebx, 8
0xe69c:    88 5c 01 02                           	mov byte ptr [rcx + rax + 2], bl
0xe6a0:    88 54 01 03                           	mov byte ptr [rcx + rax + 3], dl
0xe6a4:    48 83 c0 04                           	add rax, 4
0xe6a8:    48 83 f8 10                           	cmp rax, 0x10
0xe6ac:    75 d1                                 	jne 0xe67f <DTV_Calculate_Final_Key+0x1d6>
0xe6ae:    48 8d 5d b0                           	lea rbx, [rbp - 0x50]
0xe6b2:    48 8b 95 38 fc ff ff                  	mov rdx, qword ptr [rbp - 0x3c8]
0xe6b9:    48 8b 02                              	mov rax, qword ptr [rdx]
0xe6bc:    48 89 03                              	mov qword ptr [rbx], rax
0xe6bf:    48 8b 95 48 fc ff ff                  	mov rdx, qword ptr [rbp - 0x3b8]
0xe6c6:    0f b7 02                              	movzx eax, word ptr [rdx]
0xe6c9:    66 89 43 08                           	mov word ptr [rbx + 8], ax
0xe6cd:    48 8b 95 40 fc ff ff                  	mov rdx, qword ptr [rbp - 0x3c0]
0xe6d4:    0f b7 02                              	movzx eax, word ptr [rdx]
0xe6d7:    66 89 43 0a                           	mov word ptr [rbx + 0xa], ax
0xe6db:    48 8d 95 40 ff ff ff                  	lea rdx, [rbp - 0xc0]
0xe6e2:    b9 08 00 00 00                        	mov ecx, 8
0xe6e7:    b8 00 00 00 00                        	mov eax, 0
0xe6ec:    48 89 d7                              	mov rdi, rdx
0xe6ef:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xe6f2:    4c 8d 7b 10                           	lea r15, [rbx + 0x10]
0xe6f6:    4c 8b a5 50 fc ff ff                  	mov r12, qword ptr [rbp - 0x3b0]
0xe6fd:    0f b6 13                              	movzx edx, byte ptr [rbx]
0xe700:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0xe707:    4c 89 e7                              	mov rdi, r12
0xe70a:    b8 00 00 00 00                        	mov eax, 0
0xe70f:    e8 54 05 03 00                        	call 0x3ec68 <sprintf>
0xe714:    48 83 c3 01                           	add rbx, 1
0xe718:    49 83 c4 02                           	add r12, 2
0xe71c:    4c 39 fb                              	cmp rbx, r15
0xe71f:    75 dc                                 	jne 0xe6fd <DTV_Calculate_Final_Key+0x254>
0xe721:    48 8d bd 60 fc ff ff                  	lea rdi, [rbp - 0x3a0]
0xe728:    4c 8b 85 58 fc ff ff                  	mov r8, qword ptr [rbp - 0x3a8]
0xe72f:    48 8d 8d 40 ff ff ff                  	lea rcx, [rbp - 0xc0]
0xe736:    ba 80 00 00 00                        	mov edx, 0x80
0xe73b:    be 00 00 00 00                        	mov esi, 0
0xe740:    e8 61 91 00 00                        	call 0x178a6 <makeKey>
0xe745:    b8 00 00 00 00                        	mov eax, 0
0xe74a:    48 8d b5 60 fc ff ff                  	lea rsi, [rbp - 0x3a0]
0xe751:    48 8d 4d 80                           	lea rcx, [rbp - 0x80]
0xe755:    8b 94 06 f0 00 00 00                  	mov edx, dword ptr [rsi + rax + 0xf0]
0xe75c:    89 d3                                 	mov ebx, edx
0xe75e:    c1 eb 18                              	shr ebx, 0x18
0xe761:    88 1c 01                              	mov byte ptr [rcx + rax], bl
0xe764:    89 d3                                 	mov ebx, edx
0xe766:    c1 eb 10                              	shr ebx, 0x10
0xe769:    88 5c 01 01                           	mov byte ptr [rcx + rax + 1], bl
0xe76d:    89 d3                                 	mov ebx, edx
0xe76f:    c1 eb 08                              	shr ebx, 8
0xe772:    88 5c 01 02                           	mov byte ptr [rcx + rax + 2], bl
0xe776:    88 54 01 03                           	mov byte ptr [rcx + rax + 3], dl
0xe77a:    48 83 c0 04                           	add rax, 4
0xe77e:    48 83 f8 10                           	cmp rax, 0x10
0xe782:    75 d1                                 	jne 0xe755 <DTV_Calculate_Final_Key+0x2ac>
0xe784:    48 8d 45 a0                           	lea rax, [rbp - 0x60]
0xe788:    48 8d 75 90                           	lea rsi, [rbp - 0x70]
0xe78c:    48 8d 4d 80                           	lea rcx, [rbp - 0x80]
0xe790:    4c 89 f3                              	mov rbx, r14
0xe793:    4c 8d 40 10                           	lea r8, [rax + 0x10]
0xe797:    4c 89 f2                              	mov rdx, r14
0xe79a:    0f b6 3e                              	movzx edi, byte ptr [rsi]
0xe79d:    40 02 38                              	add dil, byte ptr [rax]
0xe7a0:    40 02 39                              	add dil, byte ptr [rcx]
0xe7a3:    40 88 ba a4 0d 03 00                  	mov byte ptr [rdx + 0x30da4], dil
0xe7aa:    48 83 c0 01                           	add rax, 1
0xe7ae:    48 83 c6 01                           	add rsi, 1
0xe7b2:    48 83 c1 01                           	add rcx, 1
0xe7b6:    48 83 c2 01                           	add rdx, 1
0xe7ba:    4c 39 c0                              	cmp rax, r8
0xe7bd:    75 db                                 	jne 0xe79a <DTV_Calculate_Final_Key+0x2f1>
0xe7bf:    48 8d 95 40 ff ff ff                  	lea rdx, [rbp - 0xc0]
0xe7c6:    b9 08 00 00 00                        	mov ecx, 8
0xe7cb:    b8 00 00 00 00                        	mov eax, 0
0xe7d0:    48 89 d7                              	mov rdi, rdx
0xe7d3:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xe7d6:    41 0f b6 86 8d 14 00 00               	movzx eax, byte ptr [r14 + 0x148d]
0xe7de:    3c 0b                                 	cmp al, 0xb
0xe7e0:    74 26                                 	je 0xe808 <DTV_Calculate_Final_Key+0x35f>
0xe7e2:    3c 03                                 	cmp al, 3
0xe7e4:    74 1a                                 	je 0xe800 <DTV_Calculate_Final_Key+0x357>
0xe7e6:    3c 0f                                 	cmp al, 0xf
0xe7e8:    74 16                                 	je 0xe800 <DTV_Calculate_Final_Key+0x357>
0xe7ea:    3c 04                                 	cmp al, 4
0xe7ec:    0f 1f 40 00                           	nop dword ptr [rax]
0xe7f0:    74 0e                                 	je 0xe800 <DTV_Calculate_Final_Key+0x357>
0xe7f2:    49 89 dc                              	mov r12, rbx
0xe7f5:    49 c7 c7 00 00 00 00                  	mov r15, 0
0xe7fc:    3c 11                                 	cmp al, 0x11
0xe7fe:    75 13                                 	jne 0xe813 <DTV_Calculate_Final_Key+0x36a>
0xe800:    4c 89 f7                              	mov rdi, r14
0xe803:    e8 52 c0 ff ff                        	call 0xa85a <DTV_5606B2_KeyTransfer1>
0xe808:    41 bc 00 00 00 00                     	mov r12d, 0
0xe80e:    e9 9e 00 00 00                        	jmp 0xe8b1 <DTV_Calculate_Final_Key+0x408>
0xe813:    48 89 9d 48 fc ff ff                  	mov qword ptr [rbp - 0x3b8], rbx
0xe81a:    48 8b 9d 50 fc ff ff                  	mov rbx, qword ptr [rbp - 0x3b0]
0xe821:    41 0f b6 94 24 a4 0d 03 00            	movzx edx, byte ptr [r12 + 0x30da4]
0xe82a:    4c 89 fe                              	mov rsi, r15
0xe82d:    48 89 df                              	mov rdi, rbx
0xe830:    b8 00 00 00 00                        	mov eax, 0
0xe835:    e8 2e 04 03 00                        	call 0x3ec68 <sprintf>
0xe83a:    49 83 c4 01                           	add r12, 1
0xe83e:    48 83 c3 02                           	add rbx, 2
0xe842:    49 39 dd                              	cmp r13, rbx
0xe845:    75 da                                 	jne 0xe821 <DTV_Calculate_Final_Key+0x378>
0xe847:    48 8b 9d 48 fc ff ff                  	mov rbx, qword ptr [rbp - 0x3b8]
0xe84e:    49 8d be a4 ee 08 00                  	lea rdi, [r14 + 0x8eea4]
0xe855:    4c 8b 85 58 fc ff ff                  	mov r8, qword ptr [rbp - 0x3a8]
0xe85c:    48 8d 8d 40 ff ff ff                  	lea rcx, [rbp - 0xc0]
0xe863:    ba 80 00 00 00                        	mov edx, 0x80
0xe868:    be 00 00 00 00                        	mov esi, 0
0xe86d:    e8 34 90 00 00                        	call 0x178a6 <makeKey>
0xe872:    49 8d be 84 f1 08 00                  	lea rdi, [r14 + 0x8f184]
0xe879:    4c 8b 85 58 fc ff ff                  	mov r8, qword ptr [rbp - 0x3a8]
0xe880:    48 8d 8d 40 ff ff ff                  	lea rcx, [rbp - 0xc0]
0xe887:    ba 80 00 00 00                        	mov edx, 0x80
0xe88c:    be 01 00 00 00                        	mov esi, 1
0xe891:    e8 10 90 00 00                        	call 0x178a6 <makeKey>
0xe896:    49 8d be 64 f4 08 00                  	lea rdi, [r14 + 0x8f464]
0xe89d:    ba 00 00 00 00                        	mov edx, 0
0xe8a2:    be 01 00 00 00                        	mov esi, 1
0xe8a7:    e8 24 8f 00 00                        	call 0x177d0 <cipherInit>
0xe8ac:    e9 57 ff ff ff                        	jmp 0xe808 <DTV_Calculate_Final_Key+0x35f>
0xe8b1:    44 0f b6 ab a4 0d 03 00               	movzx r13d, byte ptr [rbx + 0x30da4]
0xe8b9:    44 89 ef                              	mov edi, r13d
0xe8bc:    e8 1c bf ff ff                        	call 0xa7dd <ChangeEndian>
0xe8c1:    88 83 c4 0d 03 00                     	mov byte ptr [rbx + 0x30dc4], al
0xe8c7:    44 89 ef                              	mov edi, r13d
0xe8ca:    e8 0e bf ff ff                        	call 0xa7dd <ChangeEndian>
0xe8cf:    43 88 84 26 e3 0d 03 00               	mov byte ptr [r14 + r12 + 0x30de3], al
0xe8d7:    48 83 c3 01                           	add rbx, 1
0xe8db:    49 83 ec 01                           	sub r12, 1
; data inside code section at 0xe8df -- 0xe8e0
0xe8df:    49                                                 |I               |
; function: DTV_5606B2_KeyTransfer2 at 0xe8e0 -- 0xe910
0xe8e0:    83 fc f0                              	cmp esp, -0x10
0xe8e3:    75 cc                                 	jne 0xe8b1
0xe8e5:    b8 01 00 00 00                        	mov eax, 1
0xe8ea:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0xe8ee:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xe8f7:    74 05                                 	je 0xe8fe <DTV_5606B2_KeyTransfer2+0x1e>
0xe8f9:    e8 aa 02 03 00                        	call 0x3eba8 <__stack_chk_fail>
0xe8fe:    48 81 c4 a8 03 00 00                  	add rsp, 0x3a8
0xe905:    5b                                    	pop rbx
0xe906:    41 5c                                 	pop r12
0xe908:    41 5d                                 	pop r13
0xe90a:    41 5e                                 	pop r14
0xe90c:    41 5f                                 	pop r15
0xe90e:    c9                                    	leave 
0xe90f:    c3                                    	ret 
; function: DTV_5606B2_KeyTransfer2 at 0xe910 -- 0xec4e
0xe910:    55                                    	push rbp
0xe911:    48 89 e5                              	mov rbp, rsp
0xe914:    41 54                                 	push r12
0xe916:    53                                    	push rbx
0xe917:    48 81 ec f0 00 00 00                  	sub rsp, 0xf0
0xe91e:    e8 cd 02 03 00                        	call 0x3ebf0 <mcount>
0xe923:    48 89 fb                              	mov rbx, rdi
0xe926:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xe92f:    48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0xe933:    31 c0                                 	xor eax, eax
0xe935:    c6 45 90 0b                           	mov byte ptr [rbp - 0x70], 0xb
0xe939:    c6 45 91 02                           	mov byte ptr [rbp - 0x6f], 2
0xe93d:    c6 45 92 01                           	mov byte ptr [rbp - 0x6e], 1
0xe941:    c6 45 93 0d                           	mov byte ptr [rbp - 0x6d], 0xd ; "NU"
0xe945:    c6 45 94 04                           	mov byte ptr [rbp - 0x6c], 4
0xe949:    c6 45 95 07                           	mov byte ptr [rbp - 0x6b], 7
0xe94d:    c6 45 96 06                           	mov byte ptr [rbp - 0x6a], 6
0xe951:    c6 45 97 05                           	mov byte ptr [rbp - 0x69], 5
0xe955:    c6 45 98 00                           	mov byte ptr [rbp - 0x68], 0
0xe959:    c6 45 99 0a                           	mov byte ptr [rbp - 0x67], 0xa
0xe95d:    c6 45 9a 03                           	mov byte ptr [rbp - 0x66], 3
0xe961:    c6 45 9b 0c                           	mov byte ptr [rbp - 0x65], 0xc ; "GNU"
0xe965:    c6 45 9c 09                           	mov byte ptr [rbp - 0x64], 9
0xe969:    c6 45 9d 08                           	mov byte ptr [rbp - 0x63], 8
0xe96d:    4c 8b a7 38 1d 00 00                  	mov r12, qword ptr [rdi + 0x1d38]
0xe974:    0f b6 87 ab 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30dab]
0xe97b:    c1 e0 07                              	shl eax, 7
0xe97e:    44 0f b6 8f a4 0d 03 00               	movzx r9d, byte ptr [rdi + 0x30da4]
0xe986:    41 83 e1 01                           	and r9d, 1
0xe98a:    41 09 c1                              	or r9d, eax
0xe98d:    0f b6 87 a5 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30da5]
0xe994:    01 c0                                 	add eax, eax
0xe996:    83 e0 02                              	and eax, 2
0xe999:    41 09 c1                              	or r9d, eax
0xe99c:    0f b6 87 a6 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30da6]
0xe9a3:    c1 e0 02                              	shl eax, 2
0xe9a6:    83 e0 04                              	and eax, 4
0xe9a9:    41 09 c1                              	or r9d, eax
0xe9ac:    0f b6 87 a7 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30da7]
0xe9b3:    c1 e0 03                              	shl eax, 3
0xe9b6:    83 e0 08                              	and eax, 8
0xe9b9:    41 09 c1                              	or r9d, eax
0xe9bc:    0f b6 87 a8 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30da8]
0xe9c3:    c1 e0 04                              	shl eax, 4
0xe9c6:    83 e0 10                              	and eax, 0x10
0xe9c9:    41 09 c1                              	or r9d, eax
0xe9cc:    0f b6 87 a9 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30da9]
0xe9d3:    c1 e0 05                              	shl eax, 5
0xe9d6:    83 e0 20                              	and eax, 0x20
0xe9d9:    41 09 c1                              	or r9d, eax
0xe9dc:    0f b6 87 aa 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30daa]
0xe9e3:    c1 e0 06                              	shl eax, 6
0xe9e6:    83 e0 40                              	and eax, 0x40
0xe9e9:    41 09 c1                              	or r9d, eax
0xe9ec:    0f b6 87 b3 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30db3]
0xe9f3:    c1 e0 07                              	shl eax, 7
0xe9f6:    44 0f b6 87 ac 0d 03 00               	movzx r8d, byte ptr [rdi + 0x30dac]
0xe9fe:    41 83 e0 01                           	and r8d, 1
0xea02:    41 09 c0                              	or r8d, eax
0xea05:    0f b6 87 ad 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30dad]
0xea0c:    01 c0                                 	add eax, eax
0xea0e:    83 e0 02                              	and eax, 2
0xea11:    41 09 c0                              	or r8d, eax
0xea14:    0f b6 87 ae 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30dae]
0xea1b:    c1 e0 02                              	shl eax, 2
0xea1e:    83 e0 04                              	and eax, 4
0xea21:    41 09 c0                              	or r8d, eax
0xea24:    0f b6 87 af 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30daf]
0xea2b:    c1 e0 03                              	shl eax, 3
0xea2e:    83 e0 08                              	and eax, 8
0xea31:    41 09 c0                              	or r8d, eax
0xea34:    0f b6 87 b0 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30db0]
0xea3b:    c1 e0 04                              	shl eax, 4
0xea3e:    83 e0 10                              	and eax, 0x10
0xea41:    41 09 c0                              	or r8d, eax
0xea44:    0f b6 87 b1 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30db1]
0xea4b:    c1 e0 05                              	shl eax, 5
0xea4e:    83 e0 20                              	and eax, 0x20
0xea51:    41 09 c0                              	or r8d, eax
0xea54:    0f b6 87 b2 0d 03 00                  	movzx eax, byte ptr [rdi + 0x30db2]
0xea5b:    c1 e0 06                              	shl eax, 6
0xea5e:    83 e0 40                              	and eax, 0x40
0xea61:    41 09 c0                              	or r8d, eax
0xea64:    48 89 f8                              	mov rax, rdi
0xea67:    48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0xea6b:    48 8d 77 0e                           	lea rsi, [rdi + 0xe]
0xea6f:    0f b6 88 b4 0d 03 00                  	movzx ecx, byte ptr [rax + 0x30db4]
0xea76:    88 0a                                 	mov byte ptr [rdx], cl
0xea78:    48 83 c0 01                           	add rax, 1
0xea7c:    48 83 c2 01                           	add rdx, 1
0xea80:    48 39 f0                              	cmp rax, rsi
0xea83:    75 ea                                 	jne 0xea6f <DTV_5606B2_KeyTransfer2+0x15f>
0xea85:    48 8d 55 90                           	lea rdx, [rbp - 0x70]
0xea89:    48 8d 45 b0                           	lea rax, [rbp - 0x50]
0xea8d:    48 8d 7a 0e                           	lea rdi, [rdx + 0xe]
0xea91:    48 89 c1                              	mov rcx, rax
0xea94:    0f b6 32                              	movzx esi, byte ptr [rdx]
0xea97:    0f b6 74 35 c0                        	movzx esi, byte ptr [rbp + rsi - 0x40]
0xea9c:    40 88 31                              	mov byte ptr [rcx], sil
0xea9f:    48 83 c2 01                           	add rdx, 1
0xeaa3:    48 83 c1 01                           	add rcx, 1
0xeaa7:    48 39 fa                              	cmp rdx, rdi
0xeaaa:    75 e8                                 	jne 0xea94 <DTV_5606B2_KeyTransfer2+0x184>
0xeaac:    c6 45 84 cf                           	mov byte ptr [rbp - 0x7c], 0xcf
0xeab0:    c6 45 86 02                           	mov byte ptr [rbp - 0x7a], 2
0xeab4:    44 88 45 80                           	mov byte ptr [rbp - 0x80], r8b
0xeab8:    44 88 4d 81                           	mov byte ptr [rbp - 0x7f], r9b
0xeabc:    44 88 4d 82                           	mov byte ptr [rbp - 0x7e], r9b
0xeac0:    44 88 45 83                           	mov byte ptr [rbp - 0x7d], r8b
0xeac4:    44 88 45 85                           	mov byte ptr [rbp - 0x7b], r8b
0xeac8:    44 88 4d 87                           	mov byte ptr [rbp - 0x79], r9b
0xeacc:    44 88 45 88                           	mov byte ptr [rbp - 0x78], r8b
0xead0:    44 88 45 89                           	mov byte ptr [rbp - 0x77], r8b
0xead4:    44 88 4d 8a                           	mov byte ptr [rbp - 0x76], r9b
0xead8:    44 88 45 8b                           	mov byte ptr [rbp - 0x75], r8b
0xeadc:    44 88 4d 8c                           	mov byte ptr [rbp - 0x74], r9b
0xeae0:    44 88 45 8d                           	mov byte ptr [rbp - 0x73], r8b
0xeae4:    48 8d 4d 80                           	lea rcx, [rbp - 0x80]
0xeae8:    48 8d 7d a0                           	lea rdi, [rbp - 0x60]
0xeaec:    4c 8d 45 be                           	lea r8, [rbp - 0x42]
0xeaf0:    48 89 fa                              	mov rdx, rdi
0xeaf3:    0f b6 31                              	movzx esi, byte ptr [rcx]
0xeaf6:    40 32 30                              	xor sil, byte ptr [rax]
0xeaf9:    40 88 32                              	mov byte ptr [rdx], sil
0xeafc:    48 83 c0 01                           	add rax, 1
0xeb00:    48 83 c1 01                           	add rcx, 1
0xeb04:    48 83 c2 01                           	add rdx, 1
0xeb08:    4c 39 c0                              	cmp rax, r8
0xeb0b:    75 e6                                 	jne 0xeaf3 <DTV_5606B2_KeyTransfer2+0x1e3>
0xeb0d:    0f b6 45 a9                           	movzx eax, byte ptr [rbp - 0x57]
0xeb11:    0f b6 55 a8                           	movzx edx, byte ptr [rbp - 0x58]
0xeb15:    c1 e2 04                              	shl edx, 4
0xeb18:    89 c1                                 	mov ecx, eax
0xeb1a:    c0 e9 04                              	shr cl, 4
0xeb1d:    09 ca                                 	or edx, ecx
0xeb1f:    88 93 a8 fc 08 00                     	mov byte ptr [rbx + 0x8fca8], dl
0xeb25:    c1 e0 04                              	shl eax, 4
0xeb28:    0f b6 55 ac                           	movzx edx, byte ptr [rbp - 0x54]
0xeb2c:    c0 ea 04                              	shr dl, 4
0xeb2f:    09 d0                                 	or eax, edx
0xeb31:    88 83 a9 fc 08 00                     	mov byte ptr [rbx + 0x8fca9], al
0xeb37:    0f b6 55 a1                           	movzx edx, byte ptr [rbp - 0x5f]
0xeb3b:    83 e2 f0                              	and edx, 0xfffffff0
0xeb3e:    0f b6 45 a3                           	movzx eax, byte ptr [rbp - 0x5d]
0xeb42:    c0 e8 04                              	shr al, 4
0xeb45:    09 d0                                 	or eax, edx
0xeb47:    88 83 aa fc 08 00                     	mov byte ptr [rbx + 0x8fcaa], al
0xeb4d:    0f b6 55 a6                           	movzx edx, byte ptr [rbp - 0x5a]
0xeb51:    83 e2 f0                              	and edx, 0xfffffff0
0xeb54:    0f b6 45 a0                           	movzx eax, byte ptr [rbp - 0x60]
0xeb58:    83 e0 0f                              	and eax, 0xf
0xeb5b:    09 d0                                 	or eax, edx
0xeb5d:    88 83 ab fc 08 00                     	mov byte ptr [rbx + 0x8fcab], al
0xeb63:    ba 00 00 00 00                        	mov edx, 0
0xeb68:    41 b8 00 00 00 00                     	mov r8d, 0
0xeb6e:    44 89 c1                              	mov ecx, r8d
0xeb71:    0f b6 37                              	movzx esi, byte ptr [rdi]
0xeb74:    8d 04 0a                              	lea eax, [rdx + rcx]
0xeb77:    48 98                                 	cdqe 
0xeb79:    41 89 f1                              	mov r9d, esi
0xeb7c:    41 d3 f9                              	sar r9d, cl
0xeb7f:    41 83 e1 01                           	and r9d, 1
0xeb83:    44 88 8c 05 00 ff ff ff               	mov byte ptr [rbp + rax - 0x100], r9b
0xeb8b:    83 c1 01                              	add ecx, 1
0xeb8e:    83 f9 08                              	cmp ecx, 8
0xeb91:    75 e1                                 	jne 0xeb74 <DTV_5606B2_KeyTransfer2+0x264>
0xeb93:    48 83 c7 01                           	add rdi, 1
0xeb97:    83 c2 08                              	add edx, 8
0xeb9a:    83 fa 70                              	cmp edx, 0x70
0xeb9d:    75 cf                                 	jne 0xeb6e <DTV_5606B2_KeyTransfer2+0x25e>
0xeb9f:    48 8d 7d e7                           	lea rdi, [rbp - 0x19]
0xeba3:    be 00 00 00 00                        	mov esi, 0
0xeba8:    41 b9 00 00 00 00                     	mov r9d, 0
0xebae:    41 b8 00 00 00 00                     	mov r8d, 0
0xebb4:    eb 28                                 	jmp 0xebde <DTV_5606B2_KeyTransfer2+0x2ce>
0xebb6:    8d 14 0e                              	lea edx, [rsi + rcx]
0xebb9:    48 63 d2                              	movsxd rdx, edx
0xebbc:    0f b6 94 15 00 ff ff ff               	movzx edx, byte ptr [rbp + rdx - 0x100]
0xebc4:    83 c1 01                              	add ecx, 1
0xebc7:    d3 e2                                 	shl edx, cl
0xebc9:    09 d0                                 	or eax, edx
0xebcb:    83 f9 07                              	cmp ecx, 7
0xebce:    75 e6                                 	jne 0xebb6 <DTV_5606B2_KeyTransfer2+0x2a6>
0xebd0:    88 07                                 	mov byte ptr [rdi], al
0xebd2:    48 83 ef 01                           	sub rdi, 1
0xebd6:    83 c6 07                              	add esi, 7
0xebd9:    83 fe 38                              	cmp esi, 0x38
0xebdc:    74 08                                 	je 0xebe6 <DTV_5606B2_KeyTransfer2+0x2d6>
0xebde:    44 89 c8                              	mov eax, r9d
0xebe1:    44 89 c1                              	mov ecx, r8d
0xebe4:    eb d0                                 	jmp 0xebb6 <DTV_5606B2_KeyTransfer2+0x2a6>
0xebe6:    4c 8d 45 d7                           	lea r8, [rbp - 0x29]
0xebea:    bf 38 00 00 00                        	mov edi, 0x38
0xebef:    41 ba 00 00 00 00                     	mov r10d, 0
0xebf5:    41 b9 00 00 00 00                     	mov r9d, 0
0xebfb:    eb 29                                 	jmp 0xec26 <DTV_5606B2_KeyTransfer2+0x316>
0xebfd:    83 c1 01                              	add ecx, 1
0xec00:    48 63 f0                              	movsxd rsi, eax
0xec03:    0f b6 b4 35 00 ff ff ff               	movzx esi, byte ptr [rbp + rsi - 0x100]
0xec0b:    d3 e6                                 	shl esi, cl
0xec0d:    09 f2                                 	or edx, esi
0xec0f:    83 c0 01                              	add eax, 1
0xec12:    83 f9 07                              	cmp ecx, 7
0xec15:    75 e6                                 	jne 0xebfd <DTV_5606B2_KeyTransfer2+0x2ed>
0xec17:    41 88 10                              	mov byte ptr [r8], dl
0xec1a:    49 83 e8 01                           	sub r8, 1
0xec1e:    83 c7 07                              	add edi, 7
0xec21:    83 ff 70                              	cmp edi, 0x70
0xec24:    74 0a                                 	je 0xec30 <DTV_5606B2_KeyTransfer2+0x320>
0xec26:    89 f8                                 	mov eax, edi
0xec28:    44 89 d2                              	mov edx, r10d
0xec2b:    44 89 c9                              	mov ecx, r9d
0xec2e:    eb cd                                 	jmp 0xebfd <DTV_5606B2_KeyTransfer2+0x2ed>
0xec30:    49 81 c4 70 3e 00 00                  	add r12, 0x3e70
0xec37:    48 8d 75 e0                           	lea rsi, [rbp - 0x20]
0xec3b:    48 8b bb 98 fc 08 00                  	mov rdi, qword ptr [rbx + 0x8fc98]
0xec42:    4c 89 e2                              	mov rdx, r12
0xec45:    e8 da d4 00 00                        	call 0x1c124 <des_setkey_dec>
0xec4a:    48 8d 75 d0                           	lea rsi, [rbp - 0x30]
; data inside code section at 0xec4e -- 0xec52
0xec4e:    48 8b bb a0                                        |H...            |
; function: DTV_DecrypMultiTS_no_decrypt_multi2 at 0xec52 -- 0xec82
0xec52:    fc                                    	cld 
0xec53:    08 00                                 	or byte ptr [rax], al
0xec55:    4c 89 e2                              	mov rdx, r12
0xec58:    e8 c7 d4 00 00                        	call 0x1c124 <des_setkey_dec>
0xec5d:    b8 01 00 00 00                        	mov eax, 1
0xec62:    48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0xec66:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xec6f:    74 05                                 	je 0xec76 <DTV_DecrypMultiTS_no_decrypt_multi2+0x24>
0xec71:    e8 32 ff 02 00                        	call 0x3eba8 <__stack_chk_fail>
0xec76:    48 81 c4 f0 00 00 00                  	add rsp, 0xf0
0xec7d:    5b                                    	pop rbx
0xec7e:    41 5c                                 	pop r12
0xec80:    c9                                    	leave 
0xec81:    c3                                    	ret 
; function: DTV_DecrypMultiTS_no_decrypt_multi2 at 0xec82 -- 0xed68
0xec82:    55                                    	push rbp
0xec83:    48 89 e5                              	mov rbp, rsp
0xec86:    41 57                                 	push r15
0xec88:    41 56                                 	push r14
0xec8a:    41 55                                 	push r13
0xec8c:    41 54                                 	push r12
0xec8e:    53                                    	push rbx
0xec8f:    48 83 ec 18                           	sub rsp, 0x18
0xec93:    e8 58 ff 02 00                        	call 0x3ebf0 <mcount>
0xec98:    49 89 fd                              	mov r13, rdi
0xec9b:    48 89 75 c8                           	mov qword ptr [rbp - 0x38], rsi
0xec9f:    41 89 d7                              	mov r15d, edx
0xeca2:    49 89 ce                              	mov r14, rcx
0xeca5:    0f b6 87 75 f4 08 00                  	movzx eax, byte ptr [rdi + 0x8f475]
0xecac:    83 e8 07                              	sub eax, 7
0xecaf:    3c 01                                 	cmp al, 1
0xecb1:    77 05                                 	ja 0xecb8 <DTV_DecrypMultiTS_no_decrypt_multi2+0x36>
0xecb3:    e8 58 fc ff ff                        	call 0xe910 <DTV_5606B2_KeyTransfer2>
0xecb8:    45 85 ff                              	test r15d, r15d
0xecbb:    7e 2d                                 	jle 0xecea <DTV_DecrypMultiTS_no_decrypt_multi2+0x68>
0xecbd:    bb 00 00 00 00                        	mov ebx, 0
0xecc2:    41 bc 00 00 00 00                     	mov r12d, 0
0xecc8:    48 63 f3                              	movsxd rsi, ebx
0xeccb:    49 8d 14 36                           	lea rdx, [r14 + rsi]
0xeccf:    48 03 75 c8                           	add rsi, qword ptr [rbp - 0x38]
0xecd3:    4c 89 ef                              	mov rdi, r13
0xecd6:    e8 1c f2 ff ff                        	call 0xdef7 <DTV_DecrypTS>
0xecdb:    41 83 c4 01                           	add r12d, 1
0xecdf:    81 c3 bc 00 00 00                     	add ebx, 0xbc
0xece5:    45 39 e7                              	cmp r15d, r12d
0xece8:    7f de                                 	jg 0xecc8 <DTV_DecrypMultiTS_no_decrypt_multi2+0x46>
0xecea:    41 0f b6 85 75 f4 08 00               	movzx eax, byte ptr [r13 + 0x8f475]
0xecf2:    8d 50 f9                              	lea edx, [rax - 7]
0xecf5:    80 fa 01                              	cmp dl, 1
0xecf8:    77 28                                 	ja 0xed22 <DTV_DecrypMultiTS_no_decrypt_multi2+0xa0>
0xecfa:    49 8b 95 98 fc 08 00                  	mov rdx, qword ptr [r13 + 0x8fc98]
0xed01:    b8 00 00 00 00                        	mov eax, 0
0xed06:    b9 21 00 00 00                        	mov ecx, 0x21
0xed0b:    48 89 d7                              	mov rdi, rdx
0xed0e:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xed11:    49 8b 95 a0 fc 08 00                  	mov rdx, qword ptr [r13 + 0x8fca0]
0xed18:    b1 21                                 	mov cl, 0x21
0xed1a:    48 89 d7                              	mov rdi, rdx
0xed1d:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xed20:    eb 62                                 	jmp 0xed84
0xed22:    3c 06                                 	cmp al, 6
0xed24:    75 5e                                 	jne 0xed84
0xed26:    b8 00 00 00 00                        	mov eax, 0
0xed2b:    41 c7 85 a4 ee 08 00 00 00 00 00      	mov dword ptr [r13 + 0x8eea4], 0
0xed36:    49 8d bd a8 ee 08 00                  	lea rdi, [r13 + 0x8eea8]
0xed3d:    b9 5b 00 00 00                        	mov ecx, 0x5b
0xed42:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xed45:    c7 07 00 00 00 00                     	mov dword ptr [rdi], 0
0xed4b:    41 c7 85 84 f1 08 00 00 00 00 00      	mov dword ptr [r13 + 0x8f184], 0
0xed56:    49 8d bd 88 f1 08 00                  	lea rdi, [r13 + 0x8f188]
0xed5d:    b1 5b                                 	mov cl, 0x5b
0xed5f:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xed62:    c7 07 00 00 00 00                     	mov dword ptr [rdi], 0
; function: DTV_DecrypMultiTS at 0xed68 -- 0xed98
0xed68:    49 81 c5 64 f4 08 00                  	add r13, 0x8f464
0xed6f:    49 c7 45 00 00 00 00 00               	mov qword ptr [r13], 0
0xed77:    49 c7 45 08 00 00 00 00               	mov qword ptr [r13 + 8], 0
0xed7f:    41 c6 45 10 00                        	mov byte ptr [r13 + 0x10], 0
0xed84:    b8 01 00 00 00                        	mov eax, 1
0xed89:    48 83 c4 18                           	add rsp, 0x18
0xed8d:    5b                                    	pop rbx
0xed8e:    41 5c                                 	pop r12
0xed90:    41 5d                                 	pop r13
0xed92:    41 5e                                 	pop r14
0xed94:    41 5f                                 	pop r15
0xed96:    c9                                    	leave 
0xed97:    c3                                    	ret 
; function: DTV_DecrypMultiTS at 0xed98 -- 0xef17
0xed98:    55                                    	push rbp
0xed99:    48 89 e5                              	mov rbp, rsp
0xed9c:    41 57                                 	push r15
0xed9e:    41 56                                 	push r14
0xeda0:    41 55                                 	push r13
0xeda2:    41 54                                 	push r12
0xeda4:    53                                    	push rbx
0xeda5:    48 83 ec 28                           	sub rsp, 0x28
0xeda9:    e8 42 fe 02 00                        	call 0x3ebf0 <mcount>
0xedae:    49 89 fd                              	mov r13, rdi
0xedb1:    48 89 75 b8                           	mov qword ptr [rbp - 0x48], rsi
0xedb5:    41 89 d7                              	mov r15d, edx
0xedb8:    49 89 ce                              	mov r14, rcx
0xedbb:    48 8b 87 38 1d 00 00                  	mov rax, qword ptr [rdi + 0x1d38]
0xedc2:    48 89 45 b0                           	mov qword ptr [rbp - 0x50], rax
0xedc6:    c6 45 cf 00                           	mov byte ptr [rbp - 0x31], 0
0xedca:    0f b6 87 75 f4 08 00                  	movzx eax, byte ptr [rdi + 0x8f475]
0xedd1:    83 e8 07                              	sub eax, 7
0xedd4:    3c 01                                 	cmp al, 1
0xedd6:    77 05                                 	ja 0xeddd <DTV_DecrypMultiTS+0x45>
0xedd8:    e8 33 fb ff ff                        	call 0xe910 <DTV_5606B2_KeyTransfer2>
0xeddd:    45 85 ff                              	test r15d, r15d
0xede0:    7e 2d                                 	jle 0xee0f <DTV_DecrypMultiTS+0x77>
0xede2:    bb 00 00 00 00                        	mov ebx, 0
0xede7:    41 bc 00 00 00 00                     	mov r12d, 0
0xeded:    48 63 f3                              	movsxd rsi, ebx
0xedf0:    49 8d 14 36                           	lea rdx, [r14 + rsi]
0xedf4:    48 03 75 b8                           	add rsi, qword ptr [rbp - 0x48]
0xedf8:    4c 89 ef                              	mov rdi, r13
0xedfb:    e8 f7 f0 ff ff                        	call 0xdef7 <DTV_DecrypTS>
0xee00:    41 83 c4 01                           	add r12d, 1
0xee04:    81 c3 bc 00 00 00                     	add ebx, 0xbc
0xee0a:    45 39 e7                              	cmp r15d, r12d
0xee0d:    7f de                                 	jg 0xeded <DTV_DecrypMultiTS+0x55>
0xee0f:    41 0f b6 85 75 f4 08 00               	movzx eax, byte ptr [r13 + 0x8f475]
0xee17:    8d 50 f9                              	lea edx, [rax - 7]
0xee1a:    80 fa 01                              	cmp dl, 1
0xee1d:    77 28                                 	ja 0xee47 <DTV_DecrypMultiTS+0xaf>
0xee1f:    49 8b 95 98 fc 08 00                  	mov rdx, qword ptr [r13 + 0x8fc98]
0xee26:    b8 00 00 00 00                        	mov eax, 0
0xee2b:    b9 21 00 00 00                        	mov ecx, 0x21
0xee30:    48 89 d7                              	mov rdi, rdx
0xee33:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xee36:    49 8b 95 a0 fc 08 00                  	mov rdx, qword ptr [r13 + 0x8fca0]
0xee3d:    b1 21                                 	mov cl, 0x21
0xee3f:    48 89 d7                              	mov rdi, rdx
0xee42:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xee45:    eb 60                                 	jmp 0xeea7 <DTV_DecrypMultiTS+0x10f>
0xee47:    3c 06                                 	cmp al, 6
0xee49:    75 5c                                 	jne 0xeea7 <DTV_DecrypMultiTS+0x10f>
0xee4b:    b8 00 00 00 00                        	mov eax, 0
0xee50:    41 c7 85 a4 ee 08 00 00 00 00 00      	mov dword ptr [r13 + 0x8eea4], 0
0xee5b:    49 8d bd a8 ee 08 00                  	lea rdi, [r13 + 0x8eea8]
0xee62:    b9 5b 00 00 00                        	mov ecx, 0x5b
0xee67:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xee6a:    c7 07 00 00 00 00                     	mov dword ptr [rdi], 0
0xee70:    41 c7 85 84 f1 08 00 00 00 00 00      	mov dword ptr [r13 + 0x8f184], 0
0xee7b:    49 8d bd 88 f1 08 00                  	lea rdi, [r13 + 0x8f188]
0xee82:    b1 5b                                 	mov cl, 0x5b
0xee84:    f3 48 ab                              	rep stosq qword ptr [rdi], rax
0xee87:    c7 07 00 00 00 00                     	mov dword ptr [rdi], 0
0xee8d:    49 8d 85 64 f4 08 00                  	lea rax, [r13 + 0x8f464]
0xee94:    48 c7 00 00 00 00 00                  	mov qword ptr [rax], 0
0xee9b:    48 c7 40 08 00 00 00 00               	mov qword ptr [rax + 8], 0
0xeea3:    c6 40 10 00                           	mov byte ptr [rax + 0x10], 0
0xeea7:    41 80 bd d8 15 00 00 00               	cmp byte ptr [r13 + 0x15d8], 0
0xeeaf:    0f 84 80 00 00 00                     	je 0xef35
0xeeb5:    48 8d 75 cf                           	lea rsi, [rbp - 0x31]
0xeeb9:    4c 89 ef                              	mov rdi, r13
0xeebc:    e8 95 ce ff ff                        	call 0xbd56 <DTV_GetResetMulti2LibFlag>
0xeec1:    41 80 bd bd fa 08 00 01               	cmp byte ptr [r13 + 0x8fabd], 1
0xeec9:    74 06                                 	je 0xeed1 <DTV_DecrypMultiTS+0x139>
0xeecb:    80 7d cf 01                           	cmp byte ptr [rbp - 0x31], 1
0xeecf:    75 14                                 	jne 0xeee5 <DTV_DecrypMultiTS+0x14d>
0xeed1:    49 8b bd b0 fa 08 00                  	mov rdi, qword ptr [r13 + 0x8fab0]
0xeed8:    e8 73 72 00 00                        	call 0x16150 <TS_Reset>
0xeedd:    41 c6 85 bd fa 08 00 00               	mov byte ptr [r13 + 0x8fabd], 0
0xeee5:    41 80 bd bc fa 08 00 01               	cmp byte ptr [r13 + 0x8fabc], 1
0xeeed:    75 46                                 	jne 0xef35
0xeeef:    48 8b 55 b0                           	mov rdx, qword ptr [rbp - 0x50]
0xeef3:    48 8b 82 e0 04 00 00                  	mov rax, qword ptr [rdx + 0x4e0]
0xeefa:    80 b8 40 13 00 00 00                  	cmp byte ptr [rax + 0x1340], 0
0xef01:    75 0f                                 	jne 0xef12 <DTV_DecrypMultiTS+0x17a>
0xef03:    be 00 00 00 00                        	mov esi, 0
0xef08:    4c 89 ef                              	mov rdi, r13
0xef0b:    e8 61 cf ff ff                        	call 0xbe71 <DTV_SetBCASCardExist>
0xef10:    eb 0d                                 	jmp 0xef1f
0xef12:    be 01 00 00 00                        	mov esi, 1
; data inside code section at 0xef17 -- 0xef19
0xef17:    4c 89                                              |L.              |
; function: DTV_Set_EncSeedRegEx at 0xef19 -- 0xef49
0xef19:    ef                                    	out dx, eax
0xef1a:    e8 52 cf ff ff                        	call 0xbe71 <DTV_SetBCASCardExist>
0xef1f:    41 69 d7 bc 00 00 00                  	imul edx, r15d, 0xbc
0xef26:    49 8b bd b0 fa 08 00                  	mov rdi, qword ptr [r13 + 0x8fab0]
0xef2d:    4c 89 f6                              	mov rsi, r14
0xef30:    e8 94 75 00 00                        	call 0x164c9 <TS_Process>
0xef35:    b8 01 00 00 00                        	mov eax, 1
0xef3a:    48 83 c4 28                           	add rsp, 0x28
0xef3e:    5b                                    	pop rbx
0xef3f:    41 5c                                 	pop r12
0xef41:    41 5d                                 	pop r13
0xef43:    41 5e                                 	pop r14
0xef45:    41 5f                                 	pop r15
0xef47:    c9                                    	leave 
0xef48:    c3                                    	ret 
; function: DTV_Set_EncSeedRegEx at 0xef49 -- 0xefb8
0xef49:    55                                    	push rbp
0xef4a:    48 89 e5                              	mov rbp, rsp
0xef4d:    48 83 ec 40                           	sub rsp, 0x40
0xef51:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xef55:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xef59:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xef5d:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xef61:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xef65:    e8 86 fc 02 00                        	call 0x3ebf0 <mcount>
0xef6a:    49 89 f6                              	mov r14, rsi
0xef6d:    4c 8b bf 38 1d 00 00                  	mov r15, qword ptr [rdi + 0x1d38]
0xef74:    80 bf eb 15 00 00 16                  	cmp byte ptr [rdi + 0x15eb], 0x16
0xef7b:    75 53                                 	jne 0xefd0
0xef7d:    0f b6 87 30 1d 00 00                  	movzx eax, byte ptr [rdi + 0x1d30]
0xef84:    84 d2                                 	test dl, dl
0xef86:    74 48                                 	je 0xefd0
0xef88:    41 89 d5                              	mov r13d, edx
0xef8b:    bb 00 00 00 00                        	mov ebx, 0
0xef90:    0f b6 c0                              	movzx eax, al
0xef93:    89 45 cc                              	mov dword ptr [rbp - 0x34], eax
0xef96:    41 80 fd 03                           	cmp r13b, 3
0xef9a:    41 bc 03 00 00 00                     	mov r12d, 3
0xefa0:    45 0f 46 e5                           	cmovbe r12d, r13d
0xefa4:    0f b6 c3                              	movzx eax, bl
0xefa7:    41 0f b6 cc                           	movzx ecx, r12b
0xefab:    0f b6 d3                              	movzx edx, bl
0xefae:    4d 8d 04 06                           	lea r8, [r14 + rax]
0xefb2:    8b 75 cc                              	mov esi, dword ptr [rbp - 0x34]
0xefb5:    4c 89 ff                              	mov rdi, r15
; data inside code section at 0xefb8 -- 0xefbb
0xefb8:    e8 83 51                                           |..Q             |
; function: DTV_Reset_EncChipEx at 0xefbb -- 0xefeb
; function: DTV_Reset_EncChipEx at 0xefeb -- 0xf014
0xefeb:    55                                    	push rbp
0xefec:    48 89 e5                              	mov rbp, rsp
0xefef:    48 83 ec 10                           	sub rsp, 0x10
0xeff3:    e8 f8 fb 02 00                        	call 0x3ebf0 <mcount>
0xeff8:    48 8b 87 38 1d 00 00                  	mov rax, qword ptr [rdi + 0x1d38]
0xefff:    80 bf eb 15 00 00 16                  	cmp byte ptr [rdi + 0x15eb], 0x16
0xf006:    75 35                                 	jne 0xf03d
0xf008:    80 bf 30 1d 00 00 01                  	cmp byte ptr [rdi + 0x1d30], 1
0xf00f:    19 d2                                 	sbb edx, edx
0xf011:    83 e2 f0                              	and edx, 0xfffffff0
; function: DTV_Set_EncSeedReg at 0xf014 -- 0xf044
0xf014:    83 ea 60                              	sub edx, 0x60
0xf017:    88 55 ff                              	mov byte ptr [rbp - 1], dl
0xf01a:    48 8d 4d ff                           	lea rcx, [rbp - 1]
0xf01e:    ba 01 00 00 00                        	mov edx, 1
0xf023:    be 0a 00 00 00                        	mov esi, 0xa
0xf028:    48 89 c7                              	mov rdi, rax
0xf02b:    e8 d0 50 ff ff                        	call 0x4100 <FUSBDTV_Cmd_EncRead>
0xf030:    48 89 c2                              	mov rdx, rax
0xf033:    b8 fe ff ff ff                        	mov eax, 0xfffffffe
0xf038:    80 fa 01                              	cmp dl, 1
0xf03b:    75 05                                 	jne 0xf042 <DTV_Set_EncSeedReg+0x2e>
0xf03d:    b8 01 00 00 00                        	mov eax, 1
0xf042:    c9                                    	leave 
0xf043:    c3                                    	ret 
; function: DTV_Set_EncSeedReg at 0xf044 -- 0xf07c
0xf044:    55                                    	push rbp
0xf045:    48 89 e5                              	mov rbp, rsp
0xf048:    41 56                                 	push r14
0xf04a:    41 55                                 	push r13
0xf04c:    41 54                                 	push r12
0xf04e:    53                                    	push rbx
0xf04f:    e8 9c fb 02 00                        	call 0x3ebf0 <mcount>
0xf054:    41 89 d5                              	mov r13d, edx
0xf057:    4c 8b b7 38 1d 00 00                  	mov r14, qword ptr [rdi + 0x1d38]
0xf05e:    80 bf eb 15 00 00 11                  	cmp byte ptr [rdi + 0x15eb], 0x11
0xf065:    75 4c                                 	jne 0xf0b3
0xf067:    80 bf d8 15 00 00 01                  	cmp byte ptr [rdi + 0x15d8], 1
0xf06e:    74 43                                 	je 0xf0b3
0xf070:    84 d2                                 	test dl, dl
0xf072:    74 3f                                 	je 0xf0b3
0xf074:    49 89 f4                              	mov r12, rsi
0xf077:    bb 00 00 00 00                        	mov ebx, 0
; data inside code section at 0xf07c -- 0xf091
0xf07c:    8d 3c dd 00 00 00 00 40  0f b6 ff e8 51 b7 ff ff   |.<.....@....Q...|
0xf08c:    41 0f b6 14 24                                     |A...$           |
; function: DTV_StartStop_Enc at 0xf091 -- 0xf0c1
0xf091:    0f b6 f0                              	movzx esi, al
0xf094:    4c 89 f7                              	mov rdi, r14
0xf097:    e8 d4 50 ff ff                        	call 0x4170 <FUSBDTV_InitializeStreamUrb_ISR>
0xf09c:    3c 01                                 	cmp al, 1
0xf09e:    74 07                                 	je 0xf0a7 <DTV_StartStop_Enc+0x16>
0xf0a0:    b8 fe ff ff ff                        	mov eax, 0xfffffffe
0xf0a5:    eb 11                                 	jmp 0xf0b8 <DTV_StartStop_Enc+0x27>
0xf0a7:    83 c3 01                              	add ebx, 1
0xf0aa:    49 83 c4 01                           	add r12, 1
0xf0ae:    41 38 dd                              	cmp r13b, bl
0xf0b1:    77 c9                                 	ja 0xf07c
0xf0b3:    b8 01 00 00 00                        	mov eax, 1
0xf0b8:    5b                                    	pop rbx
0xf0b9:    41 5c                                 	pop r12
0xf0bb:    41 5d                                 	pop r13
0xf0bd:    41 5e                                 	pop r14
0xf0bf:    c9                                    	leave 
0xf0c0:    c3                                    	ret 
; function: DTV_StartStop_Enc at 0xf0c1 -- 0xf0f0
0xf0c1:    55                                    	push rbp
0xf0c2:    48 89 e5                              	mov rbp, rsp
0xf0c5:    e8 26 fb 02 00                        	call 0x3ebf0 <mcount>
0xf0ca:    48 8b 87 38 1d 00 00                  	mov rax, qword ptr [rdi + 0x1d38]
0xf0d1:    80 bf eb 15 00 00 11                  	cmp byte ptr [rdi + 0x15eb], 0x11
0xf0d8:    75 3f                                 	jne 0xf119
0xf0da:    80 bf d8 15 00 00 01                  	cmp byte ptr [rdi + 0x15d8], 1
0xf0e1:    74 36                                 	je 0xf119
0xf0e3:    48 89 c7                              	mov rdi, rax
0xf0e6:    40 84 f6                              	test sil, sil
0xf0e9:    74 13                                 	je 0xf0fe
0xf0eb:    ba 80 00 00 00                        	mov edx, 0x80
; function: DTV_Reset_EncChip at 0xf0f0 -- 0xf120
0xf0f0:    be 01 00 00 00                        	mov esi, 1
0xf0f5:    e8 76 50 ff ff                        	call 0x4170 <FUSBDTV_InitializeStreamUrb_ISR>
0xf0fa:    89 c2                                 	mov edx, eax
0xf0fc:    eb 11                                 	jmp 0xf10f <DTV_Reset_EncChip+0x1f>
0xf0fe:    ba 00 00 00 00                        	mov edx, 0
0xf103:    be 01 00 00 00                        	mov esi, 1
0xf108:    e8 63 50 ff ff                        	call 0x4170 <FUSBDTV_InitializeStreamUrb_ISR>
0xf10d:    89 c2                                 	mov edx, eax
0xf10f:    b8 fe ff ff ff                        	mov eax, 0xfffffffe
0xf114:    80 fa 01                              	cmp dl, 1
0xf117:    75 05                                 	jne 0xf11e <DTV_Reset_EncChip+0x2e>
0xf119:    b8 01 00 00 00                        	mov eax, 1
0xf11e:    c9                                    	leave 
0xf11f:    c3                                    	ret 
; function: DTV_Reset_EncChip at 0xf120 -- 0xf129
0xf120:    55                                    	push rbp
0xf121:    48 89 e5                              	mov rbp, rsp
0xf124:    e8 c7 fa 02 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0xf129 -- 0xf12e
0xf129:    48 8b 87 38 1d                                     |H..8.           |
; function: ASV5220_bReadBCAS_Data at 0xf12e -- 0xf15e
0xf12e:    00 00                                 	add byte ptr [rax], al
0xf130:    80 bf eb 15 00 00 11                  	cmp byte ptr [rdi + 0x15eb], 0x11
0xf137:    75 1e                                 	jne 0xf157 <ASV5220_bReadBCAS_Data+0x29>
0xf139:    80 bf d8 15 00 00 01                  	cmp byte ptr [rdi + 0x15d8], 1
0xf140:    74 15                                 	je 0xf157 <ASV5220_bReadBCAS_Data+0x29>
0xf142:    48 89 c7                              	mov rdi, rax
0xf145:    e8 16 50 ff ff                        	call 0x4160 <FUSBDTV_ProcessTransfer>
0xf14a:    48 89 c2                              	mov rdx, rax
0xf14d:    b8 fe ff ff ff                        	mov eax, 0xfffffffe
0xf152:    80 fa 01                              	cmp dl, 1
0xf155:    75 05                                 	jne 0xf15c <ASV5220_bReadBCAS_Data+0x2e>
0xf157:    b8 01 00 00 00                        	mov eax, 1
0xf15c:    c9                                    	leave 
0xf15d:    c3                                    	ret 
; function: ASV5220_bReadBCAS_Data at 0xf15e -- 0xf2c9
0xf15e:    55                                    	push rbp
0xf15f:    48 89 e5                              	mov rbp, rsp
0xf162:    48 81 ec 60 02 00 00                  	sub rsp, 0x260
0xf169:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xf16d:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xf171:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xf175:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xf179:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xf17d:    e8 6e fa 02 00                        	call 0x3ebf0 <mcount>
0xf182:    48 89 b5 b0 fd ff ff                  	mov qword ptr [rbp - 0x250], rsi
0xf189:    48 89 95 a8 fd ff ff                  	mov qword ptr [rbp - 0x258], rdx
0xf190:    45 89 cf                              	mov r15d, r9d
0xf193:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xf19c:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xf1a0:    31 c0                                 	xor eax, eax
0xf1a2:    4c 8b b7 38 1d 00 00                  	mov r14, qword ptr [rdi + 0x1d38]
0xf1a9:    80 f9 01                              	cmp cl, 1
0xf1ac:    75 5f                                 	jne 0xf20d <ASV5220_bReadBCAS_Data+0xaf>
0xf1ae:    41 bc 00 00 00 00                     	mov r12d, 0
0xf1b4:    41 83 f9 0c                           	cmp r9d, 0xc ; "GNU"
0xf1b8:    0f 8e 14 01 00 00                     	jle 0xf2d2
0xf1be:    4c 89 f1                              	mov rcx, r14
0xf1c1:    ba e8 03 00 00                        	mov edx, 0x3e8 ; "%("
0xf1c6:    be 0d 00 00 00                        	mov esi, 0xd ; "NU"
0xf1cb:    48 8b bd b0 fd ff ff                  	mov rdi, qword ptr [rbp - 0x250]
0xf1d2:    e8 cf 54 ff ff                        	call 0x46a6 <ASV5220_ReadResponse>
0xf1d7:    48 83 f8 01                           	cmp rax, 1
0xf1db:    75 18                                 	jne 0xf1f5 <ASV5220_bReadBCAS_Data+0x97>
0xf1dd:    48 8b 95 a8 fd ff ff                  	mov rdx, qword ptr [rbp - 0x258]
0xf1e4:    c7 02 0d 00 00 00                     	mov dword ptr [rdx], 0xd ; "NU"
0xf1ea:    41 bc 01 00 00 00                     	mov r12d, 1
0xf1f0:    e9 dd 00 00 00                        	jmp 0xf2d2
0xf1f5:    48 8b 85 a8 fd ff ff                  	mov rax, qword ptr [rbp - 0x258]
0xf1fc:    c7 00 00 00 00 00                     	mov dword ptr [rax], 0
0xf202:    41 bc 00 00 00 00                     	mov r12d, 0
0xf208:    e9 c5 00 00 00                        	jmp 0xf2d2
0xf20d:    41 80 f8 01                           	cmp r8b, 1
0xf211:    48 19 d2                              	sbb rdx, rdx
0xf214:    81 e2 90 01 00 00                     	and edx, 0x190
0xf21a:    48 81 c2 58 02 00 00                  	add rdx, 0x258
0xf221:    48 8d bd c0 fd ff ff                  	lea rdi, [rbp - 0x240]
0xf228:    4c 89 f1                              	mov rcx, r14
0xf22b:    be 03 00 00 00                        	mov esi, 3
0xf230:    e8 71 54 ff ff                        	call 0x46a6 <ASV5220_ReadResponse>
0xf235:    bb 00 00 00 00                        	mov ebx, 0
0xf23a:    41 bc 00 00 00 00                     	mov r12d, 0
0xf240:    48 83 f8 01                           	cmp rax, 1
0xf244:    75 66                                 	jne 0xf2ac <ASV5220_bReadBCAS_Data+0x14e>
0xf246:    0f b6 85 c2 fd ff ff                  	movzx eax, byte ptr [rbp - 0x23e]
0xf24d:    83 c0 01                              	add eax, 1
0xf250:    89 85 bc fd ff ff                     	mov dword ptr [rbp - 0x244], eax
0xf256:    b3 03                                 	mov bl, 3
0xf258:    41 bc 01 00 00 00                     	mov r12d, 1
0xf25e:    85 c0                                 	test eax, eax
0xf260:    7e 4a                                 	jle 0xf2ac <ASV5220_bReadBCAS_Data+0x14e>
0xf262:    4c 8d a5 c3 fd ff ff                  	lea r12, [rbp - 0x23d]
0xf269:    41 bd 00 00 00 00                     	mov r13d, 0
0xf26f:    4c 89 f1                              	mov rcx, r14
0xf272:    ba 05 00 00 00                        	mov edx, 5
0xf277:    be 01 00 00 00                        	mov esi, 1
0xf27c:    4c 89 e7                              	mov rdi, r12
0xf27f:    e8 22 54 ff ff                        	call 0x46a6 <ASV5220_ReadResponse>
0xf284:    48 83 f8 01                           	cmp rax, 1
0xf288:    74 08                                 	je 0xf292 <ASV5220_bReadBCAS_Data+0x134>
0xf28a:    41 bc 00 00 00 00                     	mov r12d, 0
0xf290:    eb 1a                                 	jmp 0xf2ac <ASV5220_bReadBCAS_Data+0x14e>
0xf292:    83 c3 01                              	add ebx, 1
0xf295:    41 83 c5 01                           	add r13d, 1
0xf299:    49 83 c4 01                           	add r12, 1
0xf29d:    44 3b ad bc fd ff ff                  	cmp r13d, dword ptr [rbp - 0x244]
0xf2a4:    7c c9                                 	jl 0xf26f <ASV5220_bReadBCAS_Data+0x111>
0xf2a6:    41 bc 01 00 00 00                     	mov r12d, 1
0xf2ac:    44 39 fb                              	cmp ebx, r15d
0xf2af:    41 0f 4f df                           	cmovg ebx, r15d
0xf2b3:    48 63 d3                              	movsxd rdx, ebx
0xf2b6:    48 8d b5 c0 fd ff ff                  	lea rsi, [rbp - 0x240]
0xf2bd:    48 8b bd b0 fd ff ff                  	mov rdi, qword ptr [rbp - 0x250]
0xf2c4:    e8 9f f8 02 00                        	call 0x3eb68 <memcpy>
; data inside code section at 0xf2c9 -- 0xf2cf
0xf2c9:    48 8b 95 a8 fd ff                                  |H.....          |
; function: ASV5220_bWtBCAS_Data at 0xf2cf -- 0xf2f5
0xf2cf:    ff 89 1a 44 89 e0                     	dec dword ptr [rcx - 0x1f76bbe6]
0xf2d5:    48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0xf2d9:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xf2e2:    74 05                                 	je 0xf2e9 <ASV5220_bWtBCAS_Data+0x1a>
0xf2e4:    e8 bf f8 02 00                        	call 0x3eba8 <__stack_chk_fail>
0xf2e9:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0xf2ed:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0xf2f1:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
; function: ASV5220_Get_BCAS_INFO at 0xf2f5 -- 0xf2ff
0xf2f5:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xf2f9:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xf2fd:    c9                                    	leave 
0xf2fe:    c3                                    	ret 
; function: ASV5220_bWtBCAS_Data at 0xf2ff -- 0xf325
0xf2ff:    55                                    	push rbp
0xf300:    48 89 e5                              	mov rbp, rsp
0xf303:    e8 e8 f8 02 00                        	call 0x3ebf0 <mcount>
0xf308:    48 89 f8                              	mov rax, rdi
0xf30b:    48 89 f7                              	mov rdi, rsi
0xf30e:    89 d6                                 	mov esi, edx
0xf310:    48 8b 90 38 1d 00 00                  	mov rdx, qword ptr [rax + 0x1d38]
0xf317:    e8 8e 4f ff ff                        	call 0x42aa <ASV5220_WriteCommand>
0xf31c:    48 83 f8 01                           	cmp rax, 1
0xf320:    0f 94 c0                              	sete al
0xf323:    c9                                    	leave 
0xf324:    c3                                    	ret 
; function: ASV5220_Get_BCAS_INFO at 0xf325 -- 0xf46f
0xf325:    55                                    	push rbp
0xf326:    48 89 e5                              	mov rbp, rsp
0xf329:    53                                    	push rbx
0xf32a:    48 81 ec a8 01 00 00                  	sub rsp, 0x1a8
0xf331:    e8 ba f8 02 00                        	call 0x3ebf0 <mcount>
0xf336:    48 89 fb                              	mov rbx, rdi
0xf339:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xf342:    48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0xf346:    31 c0                                 	xor eax, eax
0xf348:    c6 85 50 fe ff ff 90                  	mov byte ptr [rbp - 0x1b0], 0x90
0xf34f:    c6 85 51 fe ff ff 32                  	mov byte ptr [rbp - 0x1af], 0x32
0xf356:    c6 85 52 fe ff ff 00                  	mov byte ptr [rbp - 0x1ae], 0
0xf35d:    c6 85 53 fe ff ff 00                  	mov byte ptr [rbp - 0x1ad], 0
0xf364:    c6 85 54 fe ff ff 00                  	mov byte ptr [rbp - 0x1ac], 0
0xf36b:    c6 45 a0 00                           	mov byte ptr [rbp - 0x60], 0
0xf36f:    80 bf 82 14 00 00 01                  	cmp byte ptr [rdi + 0x1482], 1
0xf376:    19 c0                                 	sbb eax, eax
0xf378:    f7 d0                                 	not eax
0xf37a:    83 e0 40                              	and eax, 0x40
0xf37d:    88 45 a1                              	mov byte ptr [rbp - 0x5f], al
0xf380:    c6 45 a2 05                           	mov byte ptr [rbp - 0x5e], 5
0xf384:    48 8d 4d a0                           	lea rcx, [rbp - 0x60]
0xf388:    48 8d 41 03                           	lea rax, [rcx + 3]
0xf38c:    48 8d 95 50 fe ff ff                  	lea rdx, [rbp - 0x1b0]
0xf393:    8b 32                                 	mov esi, dword ptr [rdx]
0xf395:    89 30                                 	mov dword ptr [rax], esi
0xf397:    0f b6 52 04                           	movzx edx, byte ptr [rdx + 4]
0xf39b:    88 50 04                              	mov byte ptr [rax + 4], dl
0xf39e:    b8 00 00 00 00                        	mov eax, 0
0xf3a3:    88 45 a8                              	mov byte ptr [rbp - 0x58], al
0xf3a6:    48 8d 41 01                           	lea rax, [rcx + 1]
0xf3aa:    48 83 c1 08                           	add rcx, 8
0xf3ae:    0f b6 10                              	movzx edx, byte ptr [rax]
0xf3b1:    30 55 a8                              	xor byte ptr [rbp - 0x58], dl
0xf3b4:    48 83 c0 01                           	add rax, 1
0xf3b8:    48 39 c8                              	cmp rax, rcx
0xf3bb:    75 f1                                 	jne 0xf3ae <ASV5220_Get_BCAS_INFO+0x89>
0xf3bd:    48 8d 75 a0                           	lea rsi, [rbp - 0x60]
0xf3c1:    48 8b 7b 48                           	mov rdi, qword ptr [rbx + 0x48]
0xf3c5:    ba 09 00 00 00                        	mov edx, 9
0xf3ca:    e8 30 ff ff ff                        	call 0xf2ff <ASV5220_bWtBCAS_Data>
0xf3cf:    84 c0                                 	test al, al
0xf3d1:    0f 84 a5 00 00 00                     	je 0xf47c
0xf3d7:    48 8d 95 5c fe ff ff                  	lea rdx, [rbp - 0x1a4]
0xf3de:    48 8d b5 60 fe ff ff                  	lea rsi, [rbp - 0x1a0]
0xf3e5:    48 8b 7b 48                           	mov rdi, qword ptr [rbx + 0x48]
0xf3e9:    41 b9 40 01 00 00                     	mov r9d, 0x140
0xf3ef:    41 b8 00 00 00 00                     	mov r8d, 0
0xf3f5:    b9 00 00 00 00                        	mov ecx, 0
0xf3fa:    e8 5f fd ff ff                        	call 0xf15e <ASV5220_bReadBCAS_Data>
0xf3ff:    84 c0                                 	test al, al
0xf401:    74 79                                 	je 0xf47c
0xf403:    8b 85 5c fe ff ff                     	mov eax, dword ptr [rbp - 0x1a4]
0xf409:    83 f8 04                              	cmp eax, 4
0xf40c:    7e 0b                                 	jle 0xf419 <ASV5220_Get_BCAS_INFO+0xf4>
0xf40e:    83 e8 04                              	sub eax, 4
0xf411:    89 83 c8 15 00 00                     	mov dword ptr [rbx + 0x15c8], eax
0xf417:    eb 0a                                 	jmp 0xf423 <ASV5220_Get_BCAS_INFO+0xfe>
0xf419:    c7 83 c8 15 00 00 00 00 00 00         	mov dword ptr [rbx + 0x15c8], 0
0xf423:    8b 85 5c fe ff ff                     	mov eax, dword ptr [rbp - 0x1a4]
0xf429:    83 e8 01                              	sub eax, 1
0xf42c:    83 f8 03                              	cmp eax, 3
0xf42f:    7e 31                                 	jle 0xf462 <ASV5220_Get_BCAS_INFO+0x13d>
0xf431:    48 8d 8d 63 fe ff ff                  	lea rcx, [rbp - 0x19d]
0xf438:    48 89 da                              	mov rdx, rbx
0xf43b:    b8 03 00 00 00                        	mov eax, 3
0xf440:    0f b6 31                              	movzx esi, byte ptr [rcx]
0xf443:    40 88 b2 86 14 00 00                  	mov byte ptr [rdx + 0x1486], sil
0xf44a:    83 c0 01                              	add eax, 1
0xf44d:    48 83 c1 01                           	add rcx, 1
0xf451:    48 83 c2 01                           	add rdx, 1
0xf455:    8b b5 5c fe ff ff                     	mov esi, dword ptr [rbp - 0x1a4]
0xf45b:    83 ee 01                              	sub esi, 1
0xf45e:    39 c6                                 	cmp esi, eax
0xf460:    7f de                                 	jg 0xf440 <ASV5220_Get_BCAS_INFO+0x11b>
0xf462:    0f b6 83 82 14 00 00                  	movzx eax, byte ptr [rbx + 0x1482]
0xf469:    83 c0 01                              	add eax, 1
0xf46c:    83 e0 01                              	and eax, 1
; function: DTV_PollingDeviceThreadClose at 0xf46f -- 0xf49f
0xf46f:    88 83 82 14 00 00                     	mov byte ptr [rbx + 0x1482], al
0xf475:    b8 01 00 00 00                        	mov eax, 1
0xf47a:    eb 05                                 	jmp 0xf481 <DTV_PollingDeviceThreadClose+0x12>
0xf47c:    b8 00 00 00 00                        	mov eax, 0
0xf481:    48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0xf485:    65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0xf48e:    74 05                                 	je 0xf495 <DTV_PollingDeviceThreadClose+0x26>
0xf490:    e8 13 f7 02 00                        	call 0x3eba8 <__stack_chk_fail>
0xf495:    48 81 c4 a8 01 00 00                  	add rsp, 0x1a8
0xf49c:    5b                                    	pop rbx
0xf49d:    c9                                    	leave 
0xf49e:    c3                                    	ret 
; function: DTV_PollingDeviceThreadClose at 0xf49f -- 0xf4b9
0xf49f:    55                                    	push rbp
0xf4a0:    48 89 e5                              	mov rbp, rsp
0xf4a3:    53                                    	push rbx
0xf4a4:    48 83 ec 08                           	sub rsp, 8
0xf4a8:    e8 43 f7 02 00                        	call 0x3ebf0 <mcount>
0xf4ad:    48 89 fb                              	mov rbx, rdi
0xf4b0:    80 bf 91 54 00 00 00                  	cmp byte ptr [rdi + 0x5491], 0
0xf4b7:    74 2f                                 	je 0xf4e8
; data inside code section at 0xf4b9 -- 0xf4bf
0xf4b9:    c6 87 91 54 00 00                                  |...T..          |
; function: ASV5220_BcasThreadClose at 0xf4bf -- 0xf4ef
0xf4bf:    01 c6                                 	add esi, eax
0xf4c1:    87 90 54 00 00 01                     	xchg dword ptr [rax + 0x1000054], edx
0xf4c7:    48 8d bf 70 54 00 00                  	lea rdi, [rdi + 0x5470]
0xf4ce:    e8 7d f7 02 00                        	call 0x3ec50 <wait_for_completion>
0xf4d3:    48 83 bb 98 54 00 00 00               	cmp qword ptr [rbx + 0x5498], 0
0xf4db:    74 0b                                 	je 0xf4e8 <ASV5220_BcasThreadClose+0x29>
0xf4dd:    48 c7 83 98 54 00 00 00 00 00 00      	mov qword ptr [rbx + 0x5498], 0
0xf4e8:    48 83 c4 08                           	add rsp, 8
0xf4ec:    5b                                    	pop rbx
0xf4ed:    c9                                    	leave 
0xf4ee:    c3                                    	ret 
; function: ASV5220_BcasThreadClose at 0xf4ef -- 0xf560
0xf4ef:    55                                    	push rbp
0xf4f0:    48 89 e5                              	mov rbp, rsp
0xf4f3:    53                                    	push rbx
0xf4f4:    48 83 ec 08                           	sub rsp, 8
0xf4f8:    e8 f3 f6 02 00                        	call 0x3ebf0 <mcount>
0xf4fd:    48 8b 9f 38 1d 00 00                  	mov rbx, qword ptr [rdi + 0x1d38]
0xf504:    0f b6 8f 30 1d 00 00                  	movzx ecx, byte ptr [rdi + 0x1d30]
0xf50b:    48 89 da                              	mov rdx, rbx
0xf50e:    b8 00 00 00 00                        	mov eax, 0
0xf513:    80 bb f9 54 00 00 00                  	cmp byte ptr [rbx + 0x54f9], 0
0xf51a:    75 0d                                 	jne 0xf529 <ASV5220_BcasThreadClose+0x3a>
0xf51c:    0f b6 c9                              	movzx ecx, cl
0xf51f:    c6 84 0b fa 54 00 00 00               	mov byte ptr [rbx + rcx + 0x54fa], 0
0xf527:    eb 63                                 	jmp 0xf58c
0xf529:    38 c8                                 	cmp al, cl
0xf52b:    74 09                                 	je 0xf536 <ASV5220_BcasThreadClose+0x47>
0xf52d:    80 ba fa 54 00 00 01                  	cmp byte ptr [rdx + 0x54fa], 1
0xf534:    74 0d                                 	je 0xf543 <ASV5220_BcasThreadClose+0x54>
0xf536:    83 c0 01                              	add eax, 1
0xf539:    48 83 c2 01                           	add rdx, 1
0xf53d:    3c 08                                 	cmp al, 8
0xf53f:    75 e8                                 	jne 0xf529 <ASV5220_BcasThreadClose+0x3a>
0xf541:    eb 1a                                 	jmp 0xf55d <ASV5220_BcasThreadClose+0x6e>
0xf543:    0f b6 c9                              	movzx ecx, cl
0xf546:    c6 84 0b fa 54 00 00 00               	mov byte ptr [rbx + rcx + 0x54fa], 0
0xf54e:    eb 3c                                 	jmp 0xf58c
0xf550:    48 c7 83 08 55 00 00 00 00 00 00      	mov qword ptr [rbx + 0x5508], 0
0xf55b:    eb 2f                                 	jmp 0xf58c
0xf55d:    0f b6 c9                              	movzx ecx, cl
; data inside code section at 0xf560 -- 0xf563
0xf560:    c6 84 0b                                           |...             |
; function: DTV_PollingWDThreadClose at 0xf563 -- 0xf593
0xf563:    fa                                    	cli 
0xf564:    54                                    	push rsp
0xf565:    00 00                                 	add byte ptr [rax], al
0xf567:    00 c6                                 	add dh, al
0xf569:    83 f9 54                              	cmp ecx, 0x54
0xf56c:    00 00                                 	add byte ptr [rax], al
0xf56e:    00 c6                                 	add dh, al
0xf570:    83 f8 54                              	cmp eax, 0x54
0xf573:    00 00                                 	add byte ptr [rax], al
0xf575:    01 48 8d                              	add dword ptr [rax - 0x73], ecx
0xf578:    bb d8 54 00 00                        	mov ebx, 0x54d8
0xf57d:    e8 ce f6 02 00                        	call 0x3ec50 <wait_for_completion>
0xf582:    48 83 bb 08 55 00 00 00               	cmp qword ptr [rbx + 0x5508], 0
0xf58a:    75 c4                                 	jne 0xf550
0xf58c:    48 83 c4 08                           	add rsp, 8
0xf590:    5b                                    	pop rbx
0xf591:    c9                                    	leave 
0xf592:    c3                                    	ret 
; function: DTV_PollingWDThreadClose at 0xf593 -- 0xf604
0xf593:    55                                    	push rbp
0xf594:    48 89 e5                              	mov rbp, rsp
0xf597:    53                                    	push rbx
0xf598:    48 83 ec 08                           	sub rsp, 8
0xf59c:    e8 4f f6 02 00                        	call 0x3ebf0 <mcount>
0xf5a1:    48 8b 9f 38 1d 00 00                  	mov rbx, qword ptr [rdi + 0x1d38]
0xf5a8:    0f b6 8f 30 1d 00 00                  	movzx ecx, byte ptr [rdi + 0x1d30]
0xf5af:    48 89 da                              	mov rdx, rbx
0xf5b2:    b8 00 00 00 00                        	mov eax, 0
0xf5b7:    80 bb 59 54 00 00 00                  	cmp byte ptr [rbx + 0x5459], 0
0xf5be:    75 0d                                 	jne 0xf5cd <DTV_PollingWDThreadClose+0x3a>
0xf5c0:    0f b6 c9                              	movzx ecx, cl
0xf5c3:    c6 84 0b 5a 54 00 00 00               	mov byte ptr [rbx + rcx + 0x545a], 0
0xf5cb:    eb 63                                 	jmp 0xf630
0xf5cd:    38 c8                                 	cmp al, cl
0xf5cf:    74 09                                 	je 0xf5da <DTV_PollingWDThreadClose+0x47>
0xf5d1:    80 ba 5a 54 00 00 01                  	cmp byte ptr [rdx + 0x545a], 1
0xf5d8:    74 0d                                 	je 0xf5e7 <DTV_PollingWDThreadClose+0x54>
0xf5da:    83 c0 01                              	add eax, 1
0xf5dd:    48 83 c2 01                           	add rdx, 1
0xf5e1:    3c 08                                 	cmp al, 8
0xf5e3:    75 e8                                 	jne 0xf5cd <DTV_PollingWDThreadClose+0x3a>
0xf5e5:    eb 1a                                 	jmp 0xf601 <DTV_PollingWDThreadClose+0x6e>
0xf5e7:    0f b6 c9                              	movzx ecx, cl
0xf5ea:    c6 84 0b 5a 54 00 00 00               	mov byte ptr [rbx + rcx + 0x545a], 0
0xf5f2:    eb 3c                                 	jmp 0xf630
0xf5f4:    48 c7 83 68 54 00 00 00 00 00 00      	mov qword ptr [rbx + 0x5468], 0
0xf5ff:    eb 2f                                 	jmp 0xf630
0xf601:    0f b6 c9                              	movzx ecx, cl
; data inside code section at 0xf604 -- 0xf607
0xf604:    c6 84 0b                                           |...             |
; function: DTV_PollingThreadClose at 0xf607 -- 0xf637
0xf607:    5a                                    	pop rdx
0xf608:    54                                    	push rsp
0xf609:    00 00                                 	add byte ptr [rax], al
0xf60b:    00 c6                                 	add dh, al
0xf60d:    83 59 54 00                           	sbb dword ptr [rcx + 0x54], 0
0xf611:    00 00                                 	add byte ptr [rax], al
0xf613:    c6 83 58 54 00 00 01                  	mov byte ptr [rbx + 0x5458], 1
0xf61a:    48 8d bb 38 54 00 00                  	lea rdi, [rbx + 0x5438]
0xf621:    e8 2a f6 02 00                        	call 0x3ec50 <wait_for_completion>
0xf626:    48 83 bb 68 54 00 00 00               	cmp qword ptr [rbx + 0x5468], 0
0xf62e:    75 c4                                 	jne 0xf5f4
0xf630:    48 83 c4 08                           	add rsp, 8
0xf634:    5b                                    	pop rbx
0xf635:    c9                                    	leave 
0xf636:    c3                                    	ret 
; function: DTV_PollingThreadClose at 0xf637 -- 0xf6b7
0xf637:    55                                    	push rbp
0xf638:    48 89 e5                              	mov rbp, rsp
0xf63b:    53                                    	push rbx
0xf63c:    48 83 ec 08                           	sub rsp, 8
0xf640:    e8 ab f5 02 00                        	call 0x3ebf0 <mcount>
0xf645:    48 8b 9f 38 1d 00 00                  	mov rbx, qword ptr [rdi + 0x1d38]
0xf64c:    0f b6 8f 30 1d 00 00                  	movzx ecx, byte ptr [rdi + 0x1d30]
0xf653:    48 89 da                              	mov rdx, rbx
0xf656:    b8 00 00 00 00                        	mov eax, 0
0xf65b:    80 bb d9 53 00 00 00                  	cmp byte ptr [rbx + 0x53d9], 0
0xf662:    75 0d                                 	jne 0xf671 <DTV_PollingThreadClose+0x3a>
0xf664:    0f b6 c9                              	movzx ecx, cl
0xf667:    c6 84 0b da 53 00 00 00               	mov byte ptr [rbx + rcx + 0x53da], 0
0xf66f:    eb 71                                 	jmp 0xf6e2
0xf671:    38 c8                                 	cmp al, cl
0xf673:    74 09                                 	je 0xf67e <DTV_PollingThreadClose+0x47>
0xf675:    80 ba da 53 00 00 01                  	cmp byte ptr [rdx + 0x53da], 1
0xf67c:    74 0d                                 	je 0xf68b <DTV_PollingThreadClose+0x54>
0xf67e:    83 c0 01                              	add eax, 1
0xf681:    48 83 c2 01                           	add rdx, 1
0xf685:    3c 08                                 	cmp al, 8
0xf687:    75 e8                                 	jne 0xf671 <DTV_PollingThreadClose+0x3a>
0xf689:    eb 1a                                 	jmp 0xf6a5 <DTV_PollingThreadClose+0x6e>
0xf68b:    0f b6 c9                              	movzx ecx, cl
0xf68e:    c6 84 0b da 53 00 00 00               	mov byte ptr [rbx + rcx + 0x53da], 0
0xf696:    eb 4a                                 	jmp 0xf6e2
0xf698:    48 c7 83 e8 53 00 00 00 00 00 00      	mov qword ptr [rbx + 0x53e8], 0
0xf6a3:    eb 3d                                 	jmp 0xf6e2
0xf6a5:    0f b6 c9                              	movzx ecx, cl
0xf6a8:    c6 84 0b da 53 00 00 00               	mov byte ptr [rbx + rcx + 0x53da], 0
0xf6b0:    c6 83 d9 53 00 00 00                  	mov byte ptr [rbx + 0x53d9], 0
; data inside code section at 0xf6b7 -- 0xf6b9
0xf6b7:    c6 83                                              |..              |
; function: DTV_PollingDeviceThreadInit at 0xf6b9 -- 0xf6e9
0xf6b9:    d8 53 00                              	fcom dword ptr [rbx]
0xf6bc:    00 01                                 	add byte ptr [rcx], al
0xf6be:    c6 83 30 54 00 00 00                  	mov byte ptr [rbx + 0x5430], 0
0xf6c5:    c6 83 31 54 00 00 01                  	mov byte ptr [rbx + 0x5431], 1
0xf6cc:    48 8d bb b8 53 00 00                  	lea rdi, [rbx + 0x53b8]
0xf6d3:    e8 78 f5 02 00                        	call 0x3ec50 <wait_for_completion>
0xf6d8:    48 83 bb e8 53 00 00 00               	cmp qword ptr [rbx + 0x53e8], 0
0xf6e0:    75 b6                                 	jne 0xf698
0xf6e2:    48 83 c4 08                           	add rsp, 8
0xf6e6:    5b                                    	pop rbx
0xf6e7:    c9                                    	leave 
0xf6e8:    c3                                    	ret 
; function: DTV_PollingDeviceThreadInit at 0xf6e9 -- 0xf719
0xf6e9:    55                                    	push rbp
0xf6ea:    48 89 e5                              	mov rbp, rsp
0xf6ed:    53                                    	push rbx
0xf6ee:    48 83 ec 08                           	sub rsp, 8
0xf6f2:    e8 f9 f4 02 00                        	call 0x3ebf0 <mcount>
0xf6f7:    48 89 fb                              	mov rbx, rdi
0xf6fa:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xf6ff:    48 85 ff                              	test rdi, rdi
0xf702:    74 3e                                 	je 0xf742
0xf704:    b8 01 00 00 00                        	mov eax, 1
0xf709:    80 bf 91 54 00 00 00                  	cmp byte ptr [rdi + 0x5491], 0
0xf710:    75 30                                 	jne 0xf742
0xf712:    c6 87 90 54 00 00 00                  	mov byte ptr [rdi + 0x5490], 0
; function: ASV5220_BcasThreadInit at 0xf719 -- 0xf749
0xf719:    c7 87 70 54 00 00 00 00 00 00         	mov dword ptr [rdi + 0x5470], 0
0xf723:    48 8d bf 78 54 00 00                  	lea rdi, [rdi + 0x5478]
0xf72a:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0xf731:    e8 22 f5 02 00                        	call 0x3ec58 <__init_waitqueue_head>
0xf736:    c6 83 91 54 00 00 01                  	mov byte ptr [rbx + 0x5491], 1
0xf73d:    b8 01 00 00 00                        	mov eax, 1
0xf742:    48 83 c4 08                           	add rsp, 8
0xf746:    5b                                    	pop rbx
0xf747:    c9                                    	leave 
0xf748:    c3                                    	ret 
; function: ASV5220_BcasThreadInit at 0xf749 -- 0xf7df
0xf749:    55                                    	push rbp
0xf74a:    48 89 e5                              	mov rbp, rsp
0xf74d:    48 83 ec 10                           	sub rsp, 0x10
0xf751:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0xf755:    4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0xf75a:    e8 91 f4 02 00                        	call 0x3ebf0 <mcount>
0xf75f:    48 8b 9f 38 1d 00 00                  	mov rbx, qword ptr [rdi + 0x1d38]
0xf766:    44 0f b6 a7 30 1d 00 00               	movzx r12d, byte ptr [rdi + 0x1d30]
0xf76e:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xf773:    48 85 db                              	test rbx, rbx
0xf776:    0f 84 8c 00 00 00                     	je 0xf808
0xf77c:    80 bb f9 54 00 00 00                  	cmp byte ptr [rbx + 0x54f9], 0
0xf783:    74 14                                 	je 0xf799 <ASV5220_BcasThreadInit+0x50>
0xf785:    45 0f b6 e4                           	movzx r12d, r12b
0xf789:    42 c6 84 23 fa 54 00 00 01            	mov byte ptr [rbx + r12 + 0x54fa], 1
0xf792:    b8 01 00 00 00                        	mov eax, 1
0xf797:    eb 6f                                 	jmp 0xf808
0xf799:    c6 83 f8 54 00 00 00                  	mov byte ptr [rbx + 0x54f8], 0
0xf7a0:    c7 83 d8 54 00 00 00 00 00 00         	mov dword ptr [rbx + 0x54d8], 0
0xf7aa:    48 8d bb e0 54 00 00                  	lea rdi, [rbx + 0x54e0]
0xf7b1:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0xf7b8:    e8 9b f4 02 00                        	call 0x3ec58 <__init_waitqueue_head>
0xf7bd:    48 c7 c2 00 00 00 00                  	mov rdx, 0
0xf7c4:    48 89 de                              	mov rsi, rbx
0xf7c7:    48 c7 c7 00 00 00 00                  	mov rdi, 0
0xf7ce:    b8 00 00 00 00                        	mov eax, 0
0xf7d3:    e8 98 f3 02 00                        	call 0x3eb70 <kthread_create>
0xf7d8:    48 89 83 18 63 00 00                  	mov qword ptr [rbx + 0x6318], rax
; data inside code section at 0xf7df -- 0xf7e3
0xf7df:    48 3d 00 f0                                        |H=..            |
; function: DTV_PollingThreadInit at 0xf7e3 -- 0xf813
; function: DTV_PollingThreadInit at 0xf813 -- 0xf8b0
0xf813:    55                                    	push rbp
0xf814:    48 89 e5                              	mov rbp, rsp
0xf817:    48 83 ec 10                           	sub rsp, 0x10
0xf81b:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0xf81f:    4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0xf824:    e8 c7 f3 02 00                        	call 0x3ebf0 <mcount>
0xf829:    48 8b 9f 38 1d 00 00                  	mov rbx, qword ptr [rdi + 0x1d38]
0xf830:    44 0f b6 a7 30 1d 00 00               	movzx r12d, byte ptr [rdi + 0x1d30]
0xf838:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xf83d:    48 85 db                              	test rbx, rbx
0xf840:    0f 84 93 00 00 00                     	je 0xf8d9
0xf846:    80 bb d9 53 00 00 00                  	cmp byte ptr [rbx + 0x53d9], 0
0xf84d:    74 14                                 	je 0xf863 <DTV_PollingThreadInit+0x50>
0xf84f:    45 0f b6 e4                           	movzx r12d, r12b
0xf853:    42 c6 84 23 da 53 00 00 01            	mov byte ptr [rbx + r12 + 0x53da], 1
0xf85c:    b8 01 00 00 00                        	mov eax, 1
0xf861:    eb 76                                 	jmp 0xf8d9
0xf863:    c6 83 31 54 00 00 00                  	mov byte ptr [rbx + 0x5431], 0
0xf86a:    c6 83 d8 53 00 00 00                  	mov byte ptr [rbx + 0x53d8], 0
0xf871:    c7 83 b8 53 00 00 00 00 00 00         	mov dword ptr [rbx + 0x53b8], 0
0xf87b:    48 8d bb c0 53 00 00                  	lea rdi, [rbx + 0x53c0]
0xf882:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0xf889:    e8 ca f3 02 00                        	call 0x3ec58 <__init_waitqueue_head>
0xf88e:    48 c7 c2 00 00 00 00                  	mov rdx, 0
0xf895:    48 89 de                              	mov rsi, rbx
0xf898:    48 c7 c7 00 00 00 00                  	mov rdi, 0
0xf89f:    b8 00 00 00 00                        	mov eax, 0
0xf8a4:    e8 c7 f2 02 00                        	call 0x3eb70 <kthread_create>
0xf8a9:    48 89 83 10 63 00 00                  	mov qword ptr [rbx + 0x6310], rax
; data inside code section at 0xf8b0 -- 0xf8b4
0xf8b0:    48 3d 00 f0                                        |H=..            |
; function: DTV_PollingWDThreadInit at 0xf8b4 -- 0xf8e4
; function: DTV_PollingWDThreadInit at 0xf8e4 -- 0xf954
0xf8e4:    55                                    	push rbp
0xf8e5:    48 89 e5                              	mov rbp, rsp
0xf8e8:    48 83 ec 10                           	sub rsp, 0x10
0xf8ec:    48 89 1c 24                           	mov qword ptr [rsp], rbx
0xf8f0:    4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0xf8f5:    e8 f6 f2 02 00                        	call 0x3ebf0 <mcount>
0xf8fa:    48 8b 9f 38 1d 00 00                  	mov rbx, qword ptr [rdi + 0x1d38]
0xf901:    44 0f b6 a7 30 1d 00 00               	movzx r12d, byte ptr [rdi + 0x1d30]
0xf909:    48 85 db                              	test rbx, rbx
0xf90c:    74 6a                                 	je 0xf978
0xf90e:    80 bb 59 54 00 00 00                  	cmp byte ptr [rbx + 0x5459], 0
0xf915:    74 14                                 	je 0xf92b <DTV_PollingWDThreadInit+0x47>
0xf917:    45 0f b6 e4                           	movzx r12d, r12b
0xf91b:    42 c6 84 23 5a 54 00 00 01            	mov byte ptr [rbx + r12 + 0x545a], 1
0xf924:    b8 01 00 00 00                        	mov eax, 1
0xf929:    eb 52                                 	jmp 0xf97d
0xf92b:    c6 83 58 54 00 00 00                  	mov byte ptr [rbx + 0x5458], 0
0xf932:    c7 83 38 54 00 00 00 00 00 00         	mov dword ptr [rbx + 0x5438], 0
0xf93c:    48 8d bb 40 54 00 00                  	lea rdi, [rbx + 0x5440]
0xf943:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0xf94a:    e8 09 f3 02 00                        	call 0x3ec58 <__init_waitqueue_head>
0xf94f:    bf 00 00 00 00                        	mov edi, 0
; data inside code section at 0xf954 -- 0xf958
0xf954:    e8 27 1c ff                                        |.'..            |
; function: DTV_PollingDeviceThread at 0xf958 -- 0xf988
0xf958:    ff 84 c0 74 1b c6 83                  	inc dword ptr [rax + rax*8 - 0x7c39e48c]
0xf95f:    59                                    	pop rcx
0xf960:    54                                    	push rsp
0xf961:    00 00                                 	add byte ptr [rax], al
0xf963:    01 45 0f                              	add dword ptr [rbp + 0xf], eax
0xf966:    b6 e4                                 	mov dh, 0xe4
0xf968:    42 c6 84 23 5a 54 00 00 01            	mov byte ptr [rbx + r12 + 0x545a], 1
0xf971:    b8 01 00 00 00                        	mov eax, 1
0xf976:    eb 05                                 	jmp 0xf97d <DTV_PollingDeviceThread+0x25>
0xf978:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0xf97d:    48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0xf981:    4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0xf986:    c9                                    	leave 
0xf987:    c3                                    	ret 
; function: DTV_PollingDeviceThread at 0xf988 -- 0xfa24
0xf988:    55                                    	push rbp
0xf989:    48 89 e5                              	mov rbp, rsp
0xf98c:    48 83 ec 40                           	sub rsp, 0x40
0xf990:    48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0xf994:    4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0xf998:    4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0xf99c:    4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0xf9a0:    4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0xf9a4:    e8 47 f2 02 00                        	call 0x3ebf0 <mcount>
0xf9a9:    48 89 fb                              	mov rbx, rdi
0xf9ac:    4c 8d b7 60 59 00 00                  	lea r14, [rdi + 0x5960]
0xf9b3:    41 bc 00 00 00 00                     	mov r12d, 0
0xf9b9:    41 bd 00 00 00 00                     	mov r13d, 0
0xf9bf:    4c 8d 7d cf                           	lea r15, [rbp - 0x31]
0xf9c3:    80 bb 08 63 00 00 01                  	cmp byte ptr [rbx + 0x6308], 1
0xf9ca:    75 47                                 	jne 0xfa13 <DTV_PollingDeviceThread+0x8b>
0xf9cc:    41 83 fc 14                           	cmp r12d, 0x14
0xf9d0:    45 0f 4d e5                           	cmovge r12d, r13d
0xf9d4:    48 83 7d c0 01                        	cmp qword ptr [rbp - 0x40], 1
0xf9d9:    75 38                                 	jne 0xfa13 <DTV_PollingDeviceThread+0x8b>
0xf9db:    c6 45 cf 00                           	mov byte ptr [rbp - 0x31], 0
0xf9df:    4c 89 f1                              	mov rcx, r14
0xf9e2:    4c 89 fa                              	mov rdx, r15
0xf9e5:    44 89 ee                              	mov esi, r13d
0xf9e8:    48 89 df                              	mov rdi, rbx
0xf9eb:    e8 b5 6c ff ff                        	call 0x66a5 <TC_GetLNBShortDetect>
0xf9f0:    3c 01                                 	cmp al, 1
0xf9f2:    75 1f                                 	jne 0xfa13 <DTV_PollingDeviceThread+0x8b>
0xf9f4:    80 7d cf 01                           	cmp byte ptr [rbp - 0x31], 1
0xf9f8:    75 19                                 	jne 0xfa13 <DTV_PollingDeviceThread+0x8b>
0xf9fa:    4c 89 f1                              	mov rcx, r14
0xf9fd:    44 89 ea                              	mov edx, r13d
0xfa00:    44 89 ee                              	mov esi, r13d
0xfa03:    48 89 df                              	mov rdi, rbx
0xfa06:    e8 2a 77 ff ff                        	call 0x7135 <TC_SetLNB>
0xfa0b:    48 c7 45 c0 00 00 00 00               	mov qword ptr [rbp - 0x40], 0
0xfa13:    bf 64 00 00 00                        	mov edi, 0x64
0xfa18:    e8 48 5a 00 00                        	call 0x15465 <vUSB_Wait>
0xfa1d:    80 bb 90 54 00 00 00                  	cmp byte ptr [rbx + 0x5490], 0
; data inside code section at 0xfa24 -- 0xfa25
0xfa24:    75                                                 |u               |
; function: ASV5220_BcasThread at 0xfa25 -- 0xfa26
; function: function_fa26 at 0xfa26 -- 0xfa2c
0xfa26:    41 83 c4 01                           	add r12d, 1
0xfa2a:    eb 97                                 	jmp 0xf9c3
; function: function_fa2c at 0xfa2c -- 0xfa55
0xfa2c:    c6 83 91 54 00 00 00                  	mov byte ptr [rbx + 0x5491], 0
0xfa33:    48 8d bb 70 54 00 00                  	lea rdi, [rbx + 0x5470]
0xfa3a:    e8 01 f1 02 00                        	call 0x3eb40 <complete>
0xfa3f:    48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0xfa43:    4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0xfa47:    4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0xfa4b:    4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0xfa4f:    4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0xfa53:    c9                                    	leave 
0xfa54:    c3                                    	ret 
; function: ASV5220_BcasThread at 0xfa55 -- 0x10282
0xfa55:    55                                    	push rbp
0xfa56:    48 89 e5                              	mov rbp, rsp
0xfa59:    41 57                                 	push r15
0xfa5b:    41 56                                 	push r14
0xfa5d:    41 55                                 	push r13
0xfa5f:    41 54                                 	push r12
0xfa61:    53                                    	push rbx
0xfa62:    48 81 ec 98 00 00 00                  	sub rsp, 0x98
0xfa69:    e8 82 f1 02 00                        	call 0x3ebf0 <mcount>
0xfa6e:    65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0xfa77:    48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xfa7b:    31 c0                                 	xor eax, eax
0xfa7d:    49 89 fc                              	mov r12, rdi
0xfa80:    c6 85 7f ff ff ff 00                  	mov byte ptr [rbp - 0x81], 0
0xfa87:    e8 91 4f ff ff                        	call 0x4a1d <ASV5220_ResetUart>
0xfa8c:    c7 85 4c ff ff ff 00 00 00 00         	mov dword ptr [rbp - 0xb4], 0
0xfa96:    c6 85 6f ff ff ff 00                  	mov byte ptr [rbp - 0x91], 0
0xfa9d:    49 8b 9c 24 e0 04 00 00               	mov rbx, qword ptr [r12 + 0x4e0]
0xfaa5:    48 85 db                              	test rbx, rbx
0xfaa8:    0f 84 2c 07 00 00                     	je 0x101da <ASV5220_BcasThread+0x785>
0xfaae:    48 8d 53 08                           	lea rdx, [rbx + 8]
0xfab2:    48 89 95 60 ff ff ff                  	mov qword ptr [rbp - 0xa0], rdx
0xfab9:    41 80 bc 24 10 55 00 00 00            	cmp byte ptr [r12 + 0x5510], 0
0xfac2:    0f 84 cb 07 00 00                     	je 0x10293
0xfac8:    0f b6 83 40 13 00 00                  	movzx eax, byte ptr [rbx + 0x1340]
0xfacf:    84 c0                                 	test al, al
0xfad1:    0f 85 23 02 00 00                     	jne 0xfcfa <ASV5220_BcasThread+0x2a5>
0xfad7:    48 c7 83 d0 fd 08 00 00 00 00 00      	mov qword ptr [rbx + 0x8fdd0], 0
0xfae2:    48 c7 83 c0 fd 08 00 00 00 00 00      	mov qword ptr [rbx + 0x8fdc0], 0
0xfaed:    48 c7 83 c8 fd 08 00 00 00 00 00      	mov qword ptr [rbx + 0x8fdc8], 0
0xfaf8:    c6 83 d8 fd 08 00 00                  	mov byte ptr [rbx + 0x8fdd8], 0
0xfaff:    bf c8 00 00 00                        	mov edi, 0xc8
0xfb04:    e8 5c 59 00 00                        	call 0x15465 <vUSB_Wait>
0xfb09:    4c 89 e6                              	mov rsi, r12
0xfb0c:    48 8d bd 7f ff ff ff                  	lea rdi, [rbp - 0x81]
0xfb13:    e8 50 47 ff ff                        	call 0x4268 <ASV5220_GetCardInDetect>
0xfb18:    80 bd 7f ff ff ff 01                  	cmp byte ptr [rbp - 0x81], 1
0xfb1f:    74 17                                 	je 0xfb38 <ASV5220_BcasThread+0xe3>
0xfb21:    c6 83 d6 15 00 00 00                  	mov byte ptr [rbx + 0x15d6], 0
0xfb28:    41 80 bc 24 f8 54 00 00 01            	cmp byte ptr [r12 + 0x54f8], 1
0xfb31:    75 cc                                 	jne 0xfaff <ASV5220_BcasThread+0xaa>
0xfb33:    e9 2b 07 00 00                        	jmp 0x10263 <ASV5220_BcasThread+0x80e>
0xfb38:    41 80 bc 24 f8 54 00 00 01            	cmp byte ptr [r12 + 0x54f8], 1
0xfb41:    0f 84 1c 07 00 00                     	je 0x10263 <ASV5220_BcasThread+0x80e>
0xfb47:    41 80 bc 24 98 57 00 00 01            	cmp byte ptr [r12 + 0x5798], 1
0xfb50:    75 22                                 	jne 0xfb74 <ASV5220_BcasThread+0x11f>
0xfb52:    c6 83 8a 14 00 00 00                  	mov byte ptr [rbx + 0x148a], 0
0xfb59:    c6 83 d6 15 00 00 00                  	mov byte ptr [rbx + 0x15d6], 0
0xfb60:    4c 89 e7                              	mov rdi, r12
0xfb63:    e8 b5 4e ff ff                        	call 0x4a1d <ASV5220_ResetUart>
0xfb68:    c6 83 40 13 00 00 00                  	mov byte ptr [rbx + 0x1340], 0
0xfb6f:    e9 29 ff ff ff                        	jmp 0xfa9d <ASV5220_BcasThread+0x48>
0xfb74:    4c 89 e7                              	mov rdi, r12
0xfb77:    e8 61 4d ff ff                        	call 0x48dd <ASV5220_InitUart>
0xfb7c:    48 8d 93 44 13 00 00                  	lea rdx, [rbx + 0x1344]
0xfb83:    48 8d b3 48 13 00 00                  	lea rsi, [rbx + 0x1348]
0xfb8a:    41 b9 40 01 00 00                     	mov r9d, 0x140
0xfb90:    41 b8 00 00 00 00                     	mov r8d, 0
0xfb96:    b9 01 00 00 00                        	mov ecx, 1
0xfb9b:    48 89 df                              	mov rdi, rbx
0xfb9e:    e8 bb f5 ff ff                        	call 0xf15e <ASV5220_bReadBCAS_Data>
0xfba3:    84 c0                                 	test al, al
0xfba5:    75 22                                 	jne 0xfbc9 <ASV5220_BcasThread+0x174>
0xfba7:    c6 83 8a 14 00 00 00                  	mov byte ptr [rbx + 0x148a], 0
0xfbae:    c6 83 d6 15 00 00 00                  	mov byte ptr [rbx + 0x15d6], 0
0xfbb5:    4c 89 e7                              	mov rdi, r12
0xfbb8:    e8 60 4e ff ff                        	call 0x4a1d <ASV5220_ResetUart>
0xfbbd:    c6 83 40 13 00 00 00                  	mov byte ptr [rbx + 0x1340], 0
0xfbc4:    e9 d4 fe ff ff                        	jmp 0xfa9d <ASV5220_BcasThread+0x48>
0xfbc9:    4c 89 e7                              	mov rdi, r12
0xfbcc:    e8 f8 48 ff ff                        	call 0x44c9 <ASV5220_SetBaudrate>
0xfbd1:    c6 45 80 00                           	mov byte ptr [rbp - 0x80], 0
0xfbd5:    c6 45 81 c1                           	mov byte ptr [rbp - 0x7f], 0xc1
0xfbd9:    c6 45 82 01                           	mov byte ptr [rbp - 0x7e], 1
0xfbdd:    c6 45 83 fe                           	mov byte ptr [rbp - 0x7d], 0xfe
0xfbe1:    c6 45 84 3e                           	mov byte ptr [rbp - 0x7c], 0x3e
0xfbe5:    bf 32 00 00 00                        	mov edi, 0x32
0xfbea:    e8 76 58 00 00                        	call 0x15465 <vUSB_Wait>
0xfbef:    ba 05 00 00 00                        	mov edx, 5
0xfbf4:    48 8d 75 80                           	lea rsi, [rbp - 0x80]
0xfbf8:    48 89 df                              	mov rdi, rbx
0xfbfb:    e8 ff f6 ff ff                        	call 0xf2ff <ASV5220_bWtBCAS_Data>
0xfc00:    4c 89 e1                              	mov rcx, r12
0xfc03:    ba c8 00 00 00                        	mov edx, 0xc8
0xfc08:    be 05 00 00 00                        	mov esi, 5
0xfc0d:    48 8d 7d 80                           	lea rdi, [rbp - 0x80]
0xfc11:    e8 90 4a ff ff                        	call 0x46a6 <ASV5220_ReadResponse>
0xfc16:    80 bb d6 15 00 00 01                  	cmp byte ptr [rbx + 0x15d6], 1
0xfc1d:    75 13                                 	jne 0xfc32 <ASV5220_BcasThread+0x1dd>
0xfc1f:    c6 83 40 13 00 00 02                  	mov byte ptr [rbx + 0x1340], 2
0xfc26:    c6 83 d6 15 00 00 00                  	mov byte ptr [rbx + 0x15d6], 0
0xfc2d:    e9 6b fe ff ff                        	jmp 0xfa9d <ASV5220_BcasThread+0x48>
0xfc32:    bf 32 00 00 00                        	mov edi, 0x32
0xfc37:    e8 29 58 00 00                        	call 0x15465 <vUSB_Wait>
0xfc3c:    48 8b bd 60 ff ff ff                  	mov rdi, qword ptr [rbp - 0xa0]
0xfc43:    e8 dd f6 ff ff                        	call 0xf325 <ASV5220_Get_BCAS_INFO>
0xfc48:    84 c0                                 	test al, al
0xfc4a:    0f 84 88 00 00 00                     	je 0xfcd8 <ASV5220_BcasThread+0x283>
0xfc50:    83 bb d0 15 00 00 00                  	cmp dword ptr [rbx + 0x15d0], 0
0xfc57:    75 73                                 	jne 0xfccc <ASV5220_BcasThread+0x277>
0xfc59:    bf 32 00 00 00                        	mov edi, 0x32
0xfc5e:    e8 02 58 00 00                        	call 0x15465 <vUSB_Wait>
0xfc63:    48 8b bd 60 ff ff ff                  	mov rdi, qword ptr [rbp - 0xa0]
0xfc6a:    e8 b6 f6 ff ff                        	call 0xf325 <ASV5220_Get_BCAS_INFO>
0xfc6f:    84 c0                                 	test al, al
0xfc71:    74 37                                 	je 0xfcaa <ASV5220_BcasThread+0x255>
0xfc73:    83 bb d0 15 00 00 00                  	cmp dword ptr [rbx + 0x15d0], 0
0xfc7a:    75 22                                 	jne 0xfc9e <ASV5220_BcasThread+0x249>
0xfc7c:    c6 83 8a 14 00 00 00                  	mov byte ptr [rbx + 0x148a], 0
0xfc83:    c6 83 d6 15 00 00 00                  	mov byte ptr [rbx + 0x15d6], 0
0xfc8a:    4c 89 e7                              	mov rdi, r12
0xfc8d:    e8 8b 4d ff ff                        	call 0x4a1d <ASV5220_ResetUart>
0xfc92:    c6 83 40 13 00 00 00                  	mov byte ptr [rbx + 0x1340], 0
0xfc99:    e9 3c 05 00 00                        	jmp 0x101da <ASV5220_BcasThread+0x785>
0xfc9e:    c6 83 40 13 00 00 01                  	mov byte ptr [rbx + 0x1340], 1
0xfca5:    e9 30 05 00 00                        	jmp 0x101da <ASV5220_BcasThread+0x785>
0xfcaa:    c6 83 8a 14 00 00 00                  	mov byte ptr [rbx + 0x148a], 0
0xfcb1:    c6 83 d6 15 00 00 00                  	mov byte ptr [rbx + 0x15d6], 0
0xfcb8:    4c 89 e7                              	mov rdi, r12
0xfcbb:    e8 5d 4d ff ff                        	call 0x4a1d <ASV5220_ResetUart>
0xfcc0:    c6 83 40 13 00 00 00                  	mov byte ptr [rbx + 0x1340], 0
0xfcc7:    e9 0e 05 00 00                        	jmp 0x101da <ASV5220_BcasThread+0x785>
0xfccc:    c6 83 40 13 00 00 01                  	mov byte ptr [rbx + 0x1340], 1
0xfcd3:    e9 02 05 00 00                        	jmp 0x101da <ASV5220_BcasThread+0x785>
0xfcd8:    c6 83 8a 14 00 00 00                  	mov byte ptr [rbx + 0x148a], 0
0xfcdf:    c6 83 d6 15 00 00 00                  	mov byte ptr [rbx + 0x15d6], 0
0xfce6:    4c 89 e7                              	mov rdi, r12
0xfce9:    e8 2f 4d ff ff                        	call 0x4a1d <ASV5220_ResetUart>
0xfcee:    c6 83 40 13 00 00 00                  	mov byte ptr [rbx + 0x1340], 0
0xfcf5:    e9 e0 04 00 00                        	jmp 0x101da <ASV5220_BcasThread+0x785>
0xfcfa:    3c 02                                 	cmp al, 2
0xfcfc:    0f 85 d8 04 00 00                     	jne 0x101da <ASV5220_BcasThread+0x785>
0xfd02:    44 8b bb 98 01 00 00                  	mov r15d, dword ptr [rbx + 0x198]
0xfd09:    48 8d 43 58                           	lea rax, [rbx + 0x58]
0xfd0d:    48 89 85 50 ff ff ff                  	mov qword ptr [rbp - 0xb0], rax
0xfd14:    48 8d 93 e0 02 00 00                  	lea rdx, [rbx + 0x2e0]
0xfd1b:    48 89 95 58 ff ff ff                  	mov qword ptr [rbp - 0xa8], rdx
0xfd22:    43 8d 74 7f 01                        	lea esi, [r15 + r15*2 + 1]
0xfd27:    48 63 f6                              	movsxd rsi, esi
0xfd2a:    bf 00 00 00 00                        	mov edi, 0
0xfd2f:    e8 34 64 ff ff                        	call 0x6168 <FUSB_ExAllocatePool>
0xfd34:    49 89 c6                              	mov r14, rax
0xfd37:    8b 83 98 01 00 00                     	mov eax, dword ptr [rbx + 0x198]
0xfd3d:    8d 44 40 01                           	lea eax, [rax + rax*2 + 1]
0xfd41:    48 63 d0                              	movsxd rdx, eax
0xfd44:    be 00 00 00 00                        	mov esi, 0
0xfd49:    4c 89 f7                              	mov rdi, r14
0xfd4c:    e8 ef ee 02 00                        	call 0x3ec40 <memset>
0xfd51:    83 bb 98 01 00 00 00                  	cmp dword ptr [rbx + 0x198], 0
0xfd58:    7e 32                                 	jle 0xfd8c <ASV5220_BcasThread+0x337>
0xfd5a:    41 bd 00 00 00 00                     	mov r13d, 0
0xfd60:    49 63 c5                              	movsxd rax, r13d
0xfd63:    0f b6 4c 03 58                        	movzx ecx, byte ptr [rbx + rax + 0x58]
0xfd68:    4c 89 f2                              	mov rdx, r14
0xfd6b:    48 c7 c6 00 00 00 00                  	mov rsi, 0
0xfd72:    4c 89 f7                              	mov rdi, r14
0xfd75:    b8 00 00 00 00                        	mov eax, 0
0xfd7a:    e8 e9 ee 02 00                        	call 0x3ec68 <sprintf>
0xfd7f:    41 83 c5 01                           	add r13d, 1
0xfd83:    44 39 ab 98 01 00 00                  	cmp dword ptr [rbx + 0x198], r13d
0xfd8a:    7f d4                                 	jg 0xfd60 <ASV5220_BcasThread+0x30b>
0xfd8c:    4c 89 f7                              	mov rdi, r14
0xfd8f:    e8 c4 63 ff ff                        	call 0x6158 <FUSB_ExFreePool>
0xfd94:    48 8d bb e0 26 09 00                  	lea rdi, [rbx + 0x926e0]
0xfd9b:    48 63 93 98 01 00 00                  	movsxd rdx, dword ptr [rbx + 0x198]
0xfda2:    48 8b b5 50 ff ff ff                  	mov rsi, qword ptr [rbp - 0xb0]
0xfda9:    e8 ba ed 02 00                        	call 0x3eb68 <memcpy>
0xfdae:    8b 83 98 01 00 00                     	mov eax, dword ptr [rbx + 0x198]
0xfdb4:    89 83 20 28 09 00                     	mov dword ptr [rbx + 0x92820], eax
0xfdba:    c6 83 e0 02 00 00 00                  	mov byte ptr [rbx + 0x2e0], 0
0xfdc1:    80 bb 8a 14 00 00 01                  	cmp byte ptr [rbx + 0x148a], 1
0xfdc8:    19 c0                                 	sbb eax, eax
0xfdca:    f7 d0                                 	not eax
0xfdcc:    83 e0 40                              	and eax, 0x40
0xfdcf:    48 8b 95 58 ff ff ff                  	mov rdx, qword ptr [rbp - 0xa8]
0xfdd6:    88 42 01                              	mov byte ptr [rdx + 1], al
0xfdd9:    44 88 7a 02                           	mov byte ptr [rdx + 2], r15b
0xfddd:    4d 63 ef                              	movsxd r13, r15d
0xfde0:    48 89 d7                              	mov rdi, rdx
0xfde3:    48 83 c7 03                           	add rdi, 3
0xfde7:    4c 89 ea                              	mov rdx, r13
0xfdea:    48 8b b5 50 ff ff ff                  	mov rsi, qword ptr [rbp - 0xb0]
0xfdf1:    e8 72 ed 02 00                        	call 0x3eb68 <memcpy>
0xfdf6:    49 83 c5 03                           	add r13, 3
0xfdfa:    42 c6 84 2b e0 02 00 00 00            	mov byte ptr [rbx + r13 + 0x2e0], 0
0xfe03:    c6 43 58 90                           	mov byte ptr [rbx + 0x58], 0x90
0xfe07:    48 8b 85 50 ff ff ff                  	mov rax, qword ptr [rbp - 0xb0]
0xfe0e:    44 0f b6 70 01                        	movzx r14d, byte ptr [rax + 1]
0xfe13:    0f b6 83 e0 02 00 00                  	movzx eax, byte ptr [rbx + 0x2e0]
0xfe1a:    42 88 84 2b e0 02 00 00               	mov byte ptr [rbx + r13 + 0x2e0], al
0xfe22:    41 8d 47 03                           	lea eax, [r15 + 3]
0xfe26:    83 f8 01                              	cmp eax, 1
0xfe29:    7e 24                                 	jle 0xfe4f <ASV5220_BcasThread+0x3fa>
0xfe2b:    48 89 d8                              	mov rax, rbx
0xfe2e:    41 8d 57 01                           	lea edx, [r15 + 1]
0xfe32:    48 8d 4c 13 01                        	lea rcx, [rbx + rdx + 1]
0xfe37:    0f b6 90 e1 02 00 00                  	movzx edx, byte ptr [rax + 0x2e1]
0xfe3e:    42 30 94 2b e0 02 00 00               	xor byte ptr [rbx + r13 + 0x2e0], dl
0xfe46:    48 83 c0 01                           	add rax, 1
0xfe4a:    48 39 c8                              	cmp rax, rcx
0xfe4d:    75 e8                                 	jne 0xfe37 <ASV5220_BcasThread+0x3e2>
0xfe4f:    41 8d 57 04                           	lea edx, [r15 + 4]
0xfe53:    89 93 20 04 00 00                     	mov dword ptr [rbx + 0x420], edx
0xfe59:    48 8b 7b 50                           	mov rdi, qword ptr [rbx + 0x50]
0xfe5d:    48 8b b5 58 ff ff ff                  	mov rsi, qword ptr [rbp - 0xa8]
0xfe64:    e8 96 f4 ff ff                        	call 0xf2ff <ASV5220_bWtBCAS_Data>
0xfe69:    41 80 fe 34                           	cmp r14b, 0x34
0xfe6d:    41 0f 94 c0                           	sete r8b
0xfe71:    48 8d 93 30 04 00 00                  	lea rdx, [rbx + 0x430]
0xfe78:    48 8d b3 34 04 00 00                  	lea rsi, [rbx + 0x434]
0xfe7f:    48 8b 7b 50                           	mov rdi, qword ptr [rbx + 0x50]
0xfe83:    41 b9 40 01 00 00                     	mov r9d, 0x140
0xfe89:    41 83 e0 01                           	and r8d, 1
0xfe8d:    b9 00 00 00 00                        	mov ecx, 0
0xfe92:    e8 c7 f2 ff ff                        	call 0xf15e <ASV5220_bReadBCAS_Data>
0xfe97:    41 89 c5                              	mov r13d, eax
0xfe9a:    84 c0                                 	test al, al
0xfe9c:    74 4b                                 	je 0xfee9 <ASV5220_BcasThread+0x494>
0xfe9e:    8b b3 30 04 00 00                     	mov esi, dword ptr [rbx + 0x430]
0xfea4:    85 f6                                 	test esi, esi
0xfea6:    7e 37                                 	jle 0xfedf <ASV5220_BcasThread+0x48a>
0xfea8:    48 89 da                              	mov rdx, rbx
0xfeab:    b8 00 00 00 00                        	mov eax, 0
0xfeb0:    80 bb 34 04 00 00 00                  	cmp byte ptr [rbx + 0x434], 0
0xfeb7:    74 11                                 	je 0xfeca <ASV5220_BcasThread+0x475>
0xfeb9:    eb 18                                 	jmp 0xfed3 <ASV5220_BcasThread+0x47e>
0xfebb:    0f b6 8a 35 04 00 00                  	movzx ecx, byte ptr [rdx + 0x435]
0xfec2:    48 83 c2 01                           	add rdx, 1
0xfec6:    84 c9                                 	test cl, cl
0xfec8:    75 09                                 	jne 0xfed3 <ASV5220_BcasThread+0x47e>
0xfeca:    83 c0 01                              	add eax, 1
0xfecd:    39 f0                                 	cmp eax, esi
0xfecf:    7c ea                                 	jl 0xfebb <ASV5220_BcasThread+0x466>
0xfed1:    eb 0c                                 	jmp 0xfedf <ASV5220_BcasThread+0x48a>
0xfed3:    c7 85 4c ff ff ff 00 00 00 00         	mov dword ptr [rbp - 0xb4], 0
0xfedd:    eb 0a                                 	jmp 0xfee9 <ASV5220_BcasThread+0x494>
0xfedf:    c7 85 4c ff ff ff 01 00 00 00         	mov dword ptr [rbp - 0xb4], 1
0xfee9:    80 bb d4 15 00 00 01                  	cmp byte ptr [rbx + 0x15d4], 1
0xfef0:    75 4f                                 	jne 0xff41 <ASV5220_BcasThread+0x4ec>
0xfef2:    80 bb d5 15 00 00 00                  	cmp byte ptr [rbx + 0x15d5], 0
0xfef9:    75 24                                 	jne 0xff1f <ASV5220_BcasThread+0x4ca>
0xfefb:    8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0xff01:    89 83 f4 07 00 00                     	mov dword ptr [rbx + 0x7f4], eax
0xff07:    48 8d bb f8 07 00 00                  	lea rdi, [rbx + 0x7f8]
0xff0e:    48 63 d0                              	movsxd rdx, eax
0xff11:    48 8d b3 34 04 00 00                  	lea rsi, [rbx + 0x434]
0xff18:    e8 4b ec 02 00                        	call 0x3eb68 <memcpy>
0xff1d:    eb 22                                 	jmp 0xff41 <ASV5220_BcasThread+0x4ec>
0xff1f:    8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0xff25:    89 83 b8 0b 00 00                     	mov dword ptr [rbx + 0xbb8], eax
0xff2b:    48 8d bb bc 0b 00 00                  	lea rdi, [rbx + 0xbbc]
0xff32:    48 63 d0                              	movsxd rdx, eax
0xff35:    48 8d b3 34 04 00 00                  	lea rsi, [rbx + 0x434]
0xff3c:    e8 27 ec 02 00                        	call 0x3eb68 <memcpy>
0xff41:    45 84 ed                              	test r13b, r13b
0xff44:    0f 95 c2                              	setne dl
0xff47:    83 bd 4c ff ff ff 00                  	cmp dword ptr [rbp - 0xb4], 0
0xff4e:    0f 94 c0                              	sete al
0xff51:    20 c2                                 	and dl, al
0xff53:    41 89 d1                              	mov r9d, edx
0xff56:    0f 84 61 02 00 00                     	je 0x101bd <ASV5220_BcasThread+0x768>
0xff5c:    8b bb 30 04 00 00                     	mov edi, dword ptr [rbx + 0x430]
0xff62:    48 63 c7                              	movsxd rax, edi
0xff65:    0f b6 93 34 04 00 00                  	movzx edx, byte ptr [rbx + 0x434]
0xff6c:    88 94 03 34 04 00 00                  	mov byte ptr [rbx + rax + 0x434], dl
0xff73:    44 8d 47 ff                           	lea r8d, [rdi - 1]
0xff77:    41 83 f8 01                           	cmp r8d, 1
0xff7b:    7e 2c                                 	jle 0xffa9 <ASV5220_BcasThread+0x554>
0xff7d:    48 89 d8                              	mov rax, rbx
0xff80:    8d 57 fd                              	lea edx, [rdi - 3]
0xff83:    48 8d 74 13 01                        	lea rsi, [rbx + rdx + 1]
0xff88:    48 63 d7                              	movsxd rdx, edi
0xff8b:    0f b6 8c 13 34 04 00 00               	movzx ecx, byte ptr [rbx + rdx + 0x434]
0xff93:    32 88 35 04 00 00                     	xor cl, byte ptr [rax + 0x435]
0xff99:    88 8c 13 34 04 00 00                  	mov byte ptr [rbx + rdx + 0x434], cl
0xffa0:    48 83 c0 01                           	add rax, 1
0xffa4:    48 39 f0                              	cmp rax, rsi
0xffa7:    75 e2                                 	jne 0xff8b <ASV5220_BcasThread+0x536>
0xffa9:    48 63 ff                              	movsxd rdi, edi
0xffac:    4d 63 c0                              	movsxd r8, r8d
0xffaf:    0f b6 84 3b 34 04 00 00               	movzx eax, byte ptr [rbx + rdi + 0x434]
0xffb7:    42 3a 84 03 34 04 00 00               	cmp al, byte ptr [rbx + r8 + 0x434]
0xffbf:    0f 85 f8 01 00 00                     	jne 0x101bd <ASV5220_BcasThread+0x768>
0xffc5:    45 84 c9                              	test r9b, r9b
0xffc8:    0f 84 ef 01 00 00                     	je 0x101bd <ASV5220_BcasThread+0x768>
0xffce:    80 bb 8a 14 00 00 00                  	cmp byte ptr [rbx + 0x148a], 0
0xffd5:    0f 94 83 8a 14 00 00                  	sete byte ptr [rbx + 0x148a]
0xffdc:    0f b6 93 35 04 00 00                  	movzx edx, byte ptr [rbx + 0x435]
0xffe3:    88 95 58 ff ff ff                     	mov byte ptr [rbp - 0xa8], dl
0xffe9:    4c 89 e6                              	mov rsi, r12
0xffec:    48 8d bd 7f ff ff ff                  	lea rdi, [rbp - 0x81]
0xfff3:    e8 70 42 ff ff                        	call 0x4268 <ASV5220_GetCardInDetect>
0xfff8:    80 bd 7f ff ff ff 01                  	cmp byte ptr [rbp - 0x81], 1
0xffff:    75 23                                 	jne 0x10024 <ASV5220_BcasThread+0x5cf>
0x10001:   48 8b 8b 28 04 00 00                  	mov rcx, qword ptr [rbx + 0x428]
0x10008:   0f b6 93 24 04 00 00                  	movzx edx, byte ptr [rbx + 0x424]
0x1000f:   8b b3 30 04 00 00                     	mov esi, dword ptr [rbx + 0x430]
0x10015:   83 ee 04                              	sub esi, 4
0x10018:   48 8d bb 37 04 00 00                  	lea rdi, [rbx + 0x437]
0x1001f:   e8 7c 63 00 00                        	call 0x163a0 <TS_SetBCASResponse>
0x10024:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x1002a:   83 f8 07                              	cmp eax, 7
0x1002d:   0f 8e d1 00 00 00                     	jle 0x10104 <ASV5220_BcasThread+0x6af>
0x10033:   83 e8 03                              	sub eax, 3
0x10036:   48 98                                 	cdqe 
0x10038:   0f b6 84 03 34 04 00 00               	movzx eax, byte ptr [rbx + rax + 0x434]
0x10040:   88 85 72 ff ff ff                     	mov byte ptr [rbp - 0x8e], al
0x10046:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x1004c:   83 e8 02                              	sub eax, 2
0x1004f:   48 98                                 	cdqe 
0x10051:   0f b6 84 03 34 04 00 00               	movzx eax, byte ptr [rbx + rax + 0x434]
0x10059:   88 85 73 ff ff ff                     	mov byte ptr [rbp - 0x8d], al
0x1005f:   80 bb 38 04 00 00 01                  	cmp byte ptr [rbx + 0x438], 1
0x10066:   76 1c                                 	jbe 0x10084 <ASV5220_BcasThread+0x62f>
0x10068:   0f b6 83 3b 04 00 00                  	movzx eax, byte ptr [rbx + 0x43b]
0x1006f:   88 85 70 ff ff ff                     	mov byte ptr [rbp - 0x90], al
0x10075:   0f b6 83 3c 04 00 00                  	movzx eax, byte ptr [rbx + 0x43c]
0x1007c:   88 85 71 ff ff ff                     	mov byte ptr [rbp - 0x8f], al
0x10082:   eb 0e                                 	jmp 0x10092 <ASV5220_BcasThread+0x63d>
0x10084:   c6 85 70 ff ff ff 00                  	mov byte ptr [rbp - 0x90], 0
0x1008b:   c6 85 71 ff ff ff 00                  	mov byte ptr [rbp - 0x8f], 0
0x10092:   48 8d bb 24 28 09 00                  	lea rdi, [rbx + 0x92824]
0x10099:   48 63 93 30 04 00 00                  	movsxd rdx, dword ptr [rbx + 0x430]
0x100a0:   48 8d b3 34 04 00 00                  	lea rsi, [rbx + 0x434]
0x100a7:   e8 bc ea 02 00                        	call 0x3eb68 <memcpy>
0x100ac:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x100b2:   89 83 64 29 09 00                     	mov dword ptr [rbx + 0x92964], eax
0x100b8:   0f b6 83 24 04 00 00                  	movzx eax, byte ptr [rbx + 0x424]
0x100bf:   48 d1 e8                              	shr rax, 1
0x100c2:   83 e0 07                              	and eax, 7
0x100c5:   49 8b bc c4 e0 04 00 00               	mov rdi, qword ptr [r12 + rax*8 + 0x4e0]
0x100cd:   48 85 ff                              	test rdi, rdi
0x100d0:   74 32                                 	je 0x10104 <ASV5220_BcasThread+0x6af>
0x100d2:   48 8d b3 e0 26 09 00                  	lea rsi, [rbx + 0x926e0]
0x100d9:   e8 50 b4 ff ff                        	call 0xb52e <DTV_SaveBCASCommand>
0x100de:   0f b6 83 24 04 00 00                  	movzx eax, byte ptr [rbx + 0x424]
0x100e5:   48 d1 e8                              	shr rax, 1
0x100e8:   83 e0 07                              	and eax, 7
0x100eb:   49 8b bc c4 e0 04 00 00               	mov rdi, qword ptr [r12 + rax*8 + 0x4e0]
0x100f3:   48 85 ff                              	test rdi, rdi
0x100f6:   74 0c                                 	je 0x10104 <ASV5220_BcasThread+0x6af>
0x100f8:   48 8d b5 70 ff ff ff                  	lea rsi, [rbp - 0x90]
0x100ff:   e8 89 ba ff ff                        	call 0xbb8d <DTV_SaveBcasReturnCode>
0x10104:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x1010a:   8d 44 40 01                           	lea eax, [rax + rax*2 + 1]
0x1010e:   48 63 f0                              	movsxd rsi, eax
0x10111:   bf 00 00 00 00                        	mov edi, 0
0x10116:   e8 4d 60 ff ff                        	call 0x6168 <FUSB_ExAllocatePool>
0x1011b:   49 89 c7                              	mov r15, rax
0x1011e:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x10124:   8d 44 40 01                           	lea eax, [rax + rax*2 + 1]
0x10128:   48 63 d0                              	movsxd rdx, eax
0x1012b:   be 00 00 00 00                        	mov esi, 0
0x10130:   4c 89 ff                              	mov rdi, r15
0x10133:   e8 08 eb 02 00                        	call 0x3ec40 <memset>
0x10138:   83 bb 30 04 00 00 00                  	cmp dword ptr [rbx + 0x430], 0
0x1013f:   7e 39                                 	jle 0x1017a <ASV5220_BcasThread+0x725>
0x10141:   49 89 dd                              	mov r13, rbx
0x10144:   41 be 00 00 00 00                     	mov r14d, 0
0x1014a:   41 0f b6 8d 34 04 00 00               	movzx ecx, byte ptr [r13 + 0x434]
0x10152:   4c 89 fa                              	mov rdx, r15
0x10155:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x1015c:   4c 89 ff                              	mov rdi, r15
0x1015f:   b8 00 00 00 00                        	mov eax, 0
0x10164:   e8 ff ea 02 00                        	call 0x3ec68 <sprintf>
0x10169:   41 83 c6 01                           	add r14d, 1
0x1016d:   49 83 c5 01                           	add r13, 1
0x10171:   44 39 b3 30 04 00 00                  	cmp dword ptr [rbx + 0x430], r14d
0x10178:   7f d0                                 	jg 0x1014a <ASV5220_BcasThread+0x6f5>
0x1017a:   4c 89 ff                              	mov rdi, r15
0x1017d:   e8 d6 5f ff ff                        	call 0x6158 <FUSB_ExFreePool>
0x10182:   0f b6 85 58 ff ff ff                  	movzx eax, byte ptr [rbp - 0xa8]
0x10189:   25 82 00 00 00                        	and eax, 0x82
0x1018e:   3d 82 00 00 00                        	cmp eax, 0x82
0x10193:   75 1f                                 	jne 0x101b4 <ASV5220_BcasThread+0x75f>
0x10195:   c6 83 8a 14 00 00 00                  	mov byte ptr [rbx + 0x148a], 0
0x1019c:   c6 83 d6 15 00 00 01                  	mov byte ptr [rbx + 0x15d6], 1
0x101a3:   4c 89 e7                              	mov rdi, r12
0x101a6:   e8 72 48 ff ff                        	call 0x4a1d <ASV5220_ResetUart>
0x101ab:   c6 83 40 13 00 00 00                  	mov byte ptr [rbx + 0x1340], 0
0x101b2:   eb 26                                 	jmp 0x101da <ASV5220_BcasThread+0x785>
0x101b4:   c6 83 40 13 00 00 01                  	mov byte ptr [rbx + 0x1340], 1
0x101bb:   eb 1d                                 	jmp 0x101da <ASV5220_BcasThread+0x785>
0x101bd:   c6 83 8a 14 00 00 00                  	mov byte ptr [rbx + 0x148a], 0
0x101c4:   c6 83 d6 15 00 00 01                  	mov byte ptr [rbx + 0x15d6], 1
0x101cb:   4c 89 e7                              	mov rdi, r12
0x101ce:   e8 4a 48 ff ff                        	call 0x4a1d <ASV5220_ResetUart>
0x101d3:   c6 83 40 13 00 00 00                  	mov byte ptr [rbx + 0x1340], 0
0x101da:   80 85 6f ff ff ff 01                  	add byte ptr [rbp - 0x91], 1
0x101e1:   41 80 bc 24 10 55 00 00 01            	cmp byte ptr [r12 + 0x5510], 1
0x101ea:   75 5e                                 	jne 0x1024a <ASV5220_BcasThread+0x7f5>
0x101ec:   b8 25 00 00 00                        	mov eax, 0x25
0x101f1:   f6 a5 6f ff ff ff                     	mul byte ptr [rbp - 0x91]
0x101f7:   66 c1 e8 08                           	shr ax, 8
0x101fb:   0f b6 95 6f ff ff ff                  	movzx edx, byte ptr [rbp - 0x91]
0x10202:   28 c2                                 	sub dl, al
0x10204:   d0 ea                                 	shr dl, 1
0x10206:   8d 04 02                              	lea eax, [rdx + rax]
0x10209:   c0 e8 02                              	shr al, 2
0x1020c:   8d 14 c5 00 00 00 00                  	lea edx, [rax*8]
0x10213:   28 c2                                 	sub dl, al
0x10215:   38 95 6f ff ff ff                     	cmp byte ptr [rbp - 0x91], dl
0x1021b:   75 2d                                 	jne 0x1024a <ASV5220_BcasThread+0x7f5>
0x1021d:   4c 89 e6                              	mov rsi, r12
0x10220:   48 8d bd 7f ff ff ff                  	lea rdi, [rbp - 0x81]
0x10227:   e8 3c 40 ff ff                        	call 0x4268 <ASV5220_GetCardInDetect>
0x1022c:   80 bd 7f ff ff ff 00                  	cmp byte ptr [rbp - 0x81], 0
0x10233:   75 15                                 	jne 0x1024a <ASV5220_BcasThread+0x7f5>
0x10235:   48 8b 85 60 ff ff ff                  	mov rax, qword ptr [rbp - 0xa0]
0x1023c:   c6 80 ce 15 00 00 00                  	mov byte ptr [rax + 0x15ce], 0
0x10243:   c6 80 38 13 00 00 00                  	mov byte ptr [rax + 0x1338], 0
0x1024a:   bf 32 00 00 00                        	mov edi, 0x32
0x1024f:   e8 11 52 00 00                        	call 0x15465 <vUSB_Wait>
0x10254:   41 80 bc 24 f8 54 00 00 00            	cmp byte ptr [r12 + 0x54f8], 0
0x1025d:   0f 84 3a f8 ff ff                     	je 0xfa9d <ASV5220_BcasThread+0x48>
0x10263:   41 c6 84 24 f9 54 00 00 00            	mov byte ptr [r12 + 0x54f9], 0
0x1026c:   41 c6 84 24 f8 54 00 00 01            	mov byte ptr [r12 + 0x54f8], 1
0x10275:   49 8d bc 24 d8 54 00 00               	lea rdi, [r12 + 0x54d8]
0x1027d:   e8 be e8 02 00                        	call 0x3eb40 <complete>
; data inside code section at 0x10282 -- 0x10283
0x10282:   48                                                 |H               |
; function: DTV_StreamDataRead at 0x10283 -- 0x102b3
0x10283:   8b 55 c8                              	mov edx, dword ptr [rbp - 0x38]
0x10286:   65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x1028f:   74 10                                 	je 0x102a1 <DTV_StreamDataRead+0x1e>
0x10291:   eb 09                                 	jmp 0x1029c <DTV_StreamDataRead+0x19>
0x10293:   80 85 6f ff ff ff 01                  	add byte ptr [rbp - 0x91], 1
0x1029a:   eb ae                                 	jmp 0x1024a
0x1029c:   e8 07 e9 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x102a1:   48 81 c4 98 00 00 00                  	add rsp, 0x98
0x102a8:   5b                                    	pop rbx
0x102a9:   41 5c                                 	pop r12
0x102ab:   41 5d                                 	pop r13
0x102ad:   41 5e                                 	pop r14
0x102af:   41 5f                                 	pop r15
0x102b1:   c9                                    	leave 
0x102b2:   c3                                    	ret 
; function: DTV_StreamDataRead at 0x102b3 -- 0x10996
0x102b3:   55                                    	push rbp
0x102b4:   48 89 e5                              	mov rbp, rsp
0x102b7:   48 83 ec 60                           	sub rsp, 0x60
0x102bb:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x102bf:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x102c3:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x102c7:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x102cb:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x102cf:   e8 1c e9 02 00                        	call 0x3ebf0 <mcount>
0x102d4:   48 89 fb                              	mov rbx, rdi
0x102d7:   49 89 f6                              	mov r14, rsi
0x102da:   41 89 d5                              	mov r13d, edx
0x102dd:   48 8b 87 38 1d 00 00                  	mov rax, qword ptr [rdi + 0x1d38]
0x102e4:   44 0f b6 bf 30 1d 00 00               	movzx r15d, byte ptr [rdi + 0x1d30]
0x102ec:   41 bc f6 ff ff ff                     	mov r12d, 0xfffffff6
0x102f2:   83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0x102f9:   0f 84 b2 06 00 00                     	je 0x109b1
0x102ff:   41 bc ff ff ff ff                     	mov r12d, 0xffffffff
0x10305:   48 85 f6                              	test rsi, rsi
0x10308:   0f 84 a3 06 00 00                     	je 0x109b1
0x1030e:   81 fa ff ef 02 00                     	cmp edx, 0x2efff ; "k : 0x%x"
0x10314:   ba 00 f0 02 00                        	mov edx, 0x2f000 ; " : 0x%x"
0x10319:   41 0f 46 d5                           	cmovbe edx, r13d
0x1031d:   48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x10321:   89 d2                                 	mov edx, edx
0x10323:   48 89 55 b0                           	mov qword ptr [rbp - 0x50], rdx
0x10327:   48 89 d6                              	mov rsi, rdx
0x1032a:   bf 00 00 00 00                        	mov edi, 0
0x1032f:   e8 34 5e ff ff                        	call 0x6168 <FUSB_ExAllocatePool>
0x10334:   49 89 c4                              	mov r12, rax
0x10337:   48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0x1033b:   8b 83 48 1d 00 00                     	mov eax, dword ptr [rbx + 0x1d48]
0x10341:   85 c0                                 	test eax, eax
0x10343:   0f 85 6b 01 00 00                     	jne 0x104b4 <DTV_StreamDataRead+0x201>
0x10349:   48 8d 93 4c 1d 00 00                  	lea rdx, [rbx + 0x1d4c]
0x10350:   41 0f b6 f7                           	movzx esi, r15b
0x10354:   48 8b 4d b0                           	mov rcx, qword ptr [rbp - 0x50]
0x10358:   48 8b 7d a8                           	mov rdi, qword ptr [rbp - 0x58]
0x1035c:   e8 26 4c 00 00                        	call 0x14f87 <USB_BulkStreamRead>
0x10361:   41 89 c7                              	mov r15d, eax
0x10364:   41 89 c4                              	mov r12d, eax
0x10367:   85 c0                                 	test eax, eax
0x10369:   0f 8e 39 06 00 00                     	jle 0x109a8
0x1036f:   45 8d a7 20 fa ff ff                  	lea r12d, [r15 - 0x5e0]
0x10376:   45 85 e4                              	test r12d, r12d
0x10379:   0f 8e 1e 06 00 00                     	jle 0x1099d
0x1037f:   41 bd 00 00 00 00                     	mov r13d, 0
0x10385:   49 63 c5                              	movsxd rax, r13d
0x10388:   48 8d bc 03 4c 1d 00 00               	lea rdi, [rbx + rax + 0x1d4c]
0x10390:   be 08 00 00 00                        	mov esi, 8
0x10395:   e8 cd a3 ff ff                        	call 0xa767 <DTV_CheckSync>
0x1039a:   85 c0                                 	test eax, eax
0x1039c:   75 0e                                 	jne 0x103ac <DTV_StreamDataRead+0xf9>
0x1039e:   41 83 c5 01                           	add r13d, 1
0x103a2:   45 39 ec                              	cmp r12d, r13d
0x103a5:   7f de                                 	jg 0x10385 <DTV_StreamDataRead+0xd2>
0x103a7:   e9 f1 05 00 00                        	jmp 0x1099d
0x103ac:   45 39 ec                              	cmp r12d, r13d
0x103af:   0f 8e e8 05 00 00                     	jle 0x1099d
0x103b5:   45 89 fc                              	mov r12d, r15d
0x103b8:   45 29 ec                              	sub r12d, r13d
0x103bb:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x103c0:   44 89 e0                              	mov eax, r12d
0x103c3:   f7 ea                                 	imul edx
0x103c5:   42 8d 04 22                           	lea eax, [rdx + r12]
0x103c9:   c1 f8 07                              	sar eax, 7
0x103cc:   44 89 e1                              	mov ecx, r12d
0x103cf:   c1 f9 1f                              	sar ecx, 0x1f
0x103d2:   29 c8                                 	sub eax, ecx
0x103d4:   69 c0 bc 00 00 00                     	imul eax, eax, 0xbc
0x103da:   44 89 e2                              	mov edx, r12d
0x103dd:   29 c2                                 	sub edx, eax
0x103df:   89 93 4c 0d 03 00                     	mov dword ptr [rbx + 0x30d4c], edx
0x103e5:   41 29 d4                              	sub r12d, edx
0x103e8:   41 29 d7                              	sub r15d, edx
0x103eb:   44 89 bb 50 0d 03 00                  	mov dword ptr [rbx + 0x30d50], r15d
0x103f2:   0f b6 83 75 f4 08 00                  	movzx eax, byte ptr [rbx + 0x8f475]
0x103f9:   84 c0                                 	test al, al
0x103fb:   74 04                                 	je 0x10401 <DTV_StreamDataRead+0x14e>
0x103fd:   3c 03                                 	cmp al, 3
0x103ff:   75 2a                                 	jne 0x1042b <DTV_StreamDataRead+0x178>
0x10401:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x10406:   44 89 e0                              	mov eax, r12d
0x10409:   f7 ea                                 	imul edx
0x1040b:   44 01 e2                              	add edx, r12d
0x1040e:   89 d6                                 	mov esi, edx
0x10410:   c1 fe 07                              	sar esi, 7
0x10413:   44 89 e0                              	mov eax, r12d
0x10416:   c1 f8 1f                              	sar eax, 0x1f
0x10419:   29 c6                                 	sub esi, eax
0x1041b:   49 63 c5                              	movsxd rax, r13d
0x1041e:   48 8d bc 03 4c 1d 00 00               	lea rdi, [rbx + rax + 0x1d4c]
0x10426:   e8 80 a3 ff ff                        	call 0xa7ab <DTV_CleanEncFlag>
0x1042b:   80 bb e4 0d 03 00 01                  	cmp byte ptr [rbx + 0x30de4], 1
0x10432:   75 33                                 	jne 0x10467 <DTV_StreamDataRead+0x1b4>
0x10434:   80 bb a1 0d 03 00 00                  	cmp byte ptr [rbx + 0x30da1], 0
0x1043b:   75 2a                                 	jne 0x10467 <DTV_StreamDataRead+0x1b4>
0x1043d:   b9 bc 00 00 00                        	mov ecx, 0xbc
0x10442:   44 89 e2                              	mov edx, r12d
0x10445:   44 89 e0                              	mov eax, r12d
0x10448:   c1 fa 1f                              	sar edx, 0x1f
0x1044b:   f7 f9                                 	idiv ecx
0x1044d:   4d 63 ed                              	movsxd r13, r13d
0x10450:   4a 8d b4 2b 4c 1d 00 00               	lea rsi, [rbx + r13 + 0x1d4c]
0x10458:   4c 89 f1                              	mov rcx, r14
0x1045b:   89 c2                                 	mov edx, eax
0x1045d:   48 89 df                              	mov rdi, rbx
0x10460:   e8 28 da ff ff                        	call 0xde8d <DTV_EncAES_MultiTS>
0x10465:   eb 3e                                 	jmp 0x104a5 <DTV_StreamDataRead+0x1f2>
0x10467:   49 63 d4                              	movsxd rdx, r12d
0x1046a:   4d 63 ed                              	movsxd r13, r13d
0x1046d:   4a 8d b4 2b 4c 1d 00 00               	lea rsi, [rbx + r13 + 0x1d4c]
0x10475:   48 8b 7d b8                           	mov rdi, qword ptr [rbp - 0x48]
0x10479:   e8 ea e6 02 00                        	call 0x3eb68 <memcpy>
0x1047e:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x10483:   44 89 e0                              	mov eax, r12d
0x10486:   f7 ea                                 	imul edx
0x10488:   44 01 e2                              	add edx, r12d
0x1048b:   c1 fa 07                              	sar edx, 7
0x1048e:   44 89 e0                              	mov eax, r12d
0x10491:   c1 f8 1f                              	sar eax, 0x1f
0x10494:   29 c2                                 	sub edx, eax
0x10496:   4c 89 f1                              	mov rcx, r14
0x10499:   48 8b 75 b8                           	mov rsi, qword ptr [rbp - 0x48]
0x1049d:   48 89 df                              	mov rdi, rbx
0x104a0:   e8 f3 e8 ff ff                        	call 0xed98 <DTV_DecrypMultiTS>
0x104a5:   c7 83 48 1d 00 00 01 00 00 00         	mov dword ptr [rbx + 0x1d48], 1
0x104af:   e9 f4 04 00 00                        	jmp 0x109a8
0x104b4:   83 f8 01                              	cmp eax, 1
0x104b7:   0f 85 a5 01 00 00                     	jne 0x10662 <DTV_StreamDataRead+0x3af>
0x104bd:   80 bb e4 0d 03 00 01                  	cmp byte ptr [rbx + 0x30de4], 1
0x104c4:   0f 85 ad 00 00 00                     	jne 0x10577 <DTV_StreamDataRead+0x2c4>
0x104ca:   80 bb a1 0d 03 00 00                  	cmp byte ptr [rbx + 0x30da1], 0
0x104d1:   0f 85 a0 00 00 00                     	jne 0x10577 <DTV_StreamDataRead+0x2c4>
0x104d7:   48 63 93 4c 0d 03 00                  	movsxd rdx, dword ptr [rbx + 0x30d4c]
0x104de:   48 63 83 50 0d 03 00                  	movsxd rax, dword ptr [rbx + 0x30d50]
0x104e5:   48 8d b4 03 4c 1d 00 00               	lea rsi, [rbx + rax + 0x1d4c]
0x104ed:   48 8b 7d b8                           	mov rdi, qword ptr [rbp - 0x48]
0x104f1:   e8 72 e6 02 00                        	call 0x3eb68 <memcpy>
0x104f6:   8b 83 4c 0d 03 00                     	mov eax, dword ptr [rbx + 0x30d4c]
0x104fc:   44 89 e9                              	mov ecx, r13d
0x104ff:   29 c1                                 	sub ecx, eax
0x10501:   48 98                                 	cdqe 
0x10503:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x10507:   48 01 c2                              	add rdx, rax
0x1050a:   41 0f b6 f7                           	movzx esi, r15b
0x1050e:   48 8b 7d a8                           	mov rdi, qword ptr [rbp - 0x58]
0x10512:   e8 70 4a 00 00                        	call 0x14f87 <USB_BulkStreamRead>
0x10517:   41 89 c4                              	mov r12d, eax
0x1051a:   44 03 a3 4c 0d 03 00                  	add r12d, dword ptr [rbx + 0x30d4c]
0x10521:   0f b6 83 75 f4 08 00                  	movzx eax, byte ptr [rbx + 0x8f475]
0x10528:   84 c0                                 	test al, al
0x1052a:   74 04                                 	je 0x10530 <DTV_StreamDataRead+0x27d>
0x1052c:   3c 03                                 	cmp al, 3
0x1052e:   75 1b                                 	jne 0x1054b <DTV_StreamDataRead+0x298>
0x10530:   b9 bc 00 00 00                        	mov ecx, 0xbc
0x10535:   44 89 e2                              	mov edx, r12d
0x10538:   44 89 e0                              	mov eax, r12d
0x1053b:   c1 fa 1f                              	sar edx, 0x1f
0x1053e:   f7 f9                                 	idiv ecx
0x10540:   89 c6                                 	mov esi, eax
0x10542:   48 8b 7d b8                           	mov rdi, qword ptr [rbp - 0x48]
0x10546:   e8 60 a2 ff ff                        	call 0xa7ab <DTV_CleanEncFlag>
0x1054b:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x10550:   44 89 e0                              	mov eax, r12d
0x10553:   f7 ea                                 	imul edx
0x10555:   44 01 e2                              	add edx, r12d
0x10558:   c1 fa 07                              	sar edx, 7
0x1055b:   44 89 e0                              	mov eax, r12d
0x1055e:   c1 f8 1f                              	sar eax, 0x1f
0x10561:   29 c2                                 	sub edx, eax
0x10563:   4c 89 f1                              	mov rcx, r14
0x10566:   48 8b 75 b8                           	mov rsi, qword ptr [rbp - 0x48]
0x1056a:   48 89 df                              	mov rdi, rbx
0x1056d:   e8 1b d9 ff ff                        	call 0xde8d <DTV_EncAES_MultiTS>
0x10572:   e9 a3 00 00 00                        	jmp 0x1061a <DTV_StreamDataRead+0x367>
0x10577:   48 63 93 4c 0d 03 00                  	movsxd rdx, dword ptr [rbx + 0x30d4c]
0x1057e:   48 63 83 50 0d 03 00                  	movsxd rax, dword ptr [rbx + 0x30d50]
0x10585:   48 8d b4 03 4c 1d 00 00               	lea rsi, [rbx + rax + 0x1d4c]
0x1058d:   48 8b 7d b8                           	mov rdi, qword ptr [rbp - 0x48]
0x10591:   e8 d2 e5 02 00                        	call 0x3eb68 <memcpy>
0x10596:   8b 83 4c 0d 03 00                     	mov eax, dword ptr [rbx + 0x30d4c]
0x1059c:   44 89 e9                              	mov ecx, r13d
0x1059f:   29 c1                                 	sub ecx, eax
0x105a1:   48 98                                 	cdqe 
0x105a3:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x105a7:   48 01 c2                              	add rdx, rax
0x105aa:   41 0f b6 f7                           	movzx esi, r15b
0x105ae:   48 8b 7d a8                           	mov rdi, qword ptr [rbp - 0x58]
0x105b2:   e8 d0 49 00 00                        	call 0x14f87 <USB_BulkStreamRead>
0x105b7:   41 89 c4                              	mov r12d, eax
0x105ba:   44 03 a3 4c 0d 03 00                  	add r12d, dword ptr [rbx + 0x30d4c]
0x105c1:   0f b6 83 75 f4 08 00                  	movzx eax, byte ptr [rbx + 0x8f475]
0x105c8:   84 c0                                 	test al, al
0x105ca:   74 04                                 	je 0x105d0 <DTV_StreamDataRead+0x31d>
0x105cc:   3c 03                                 	cmp al, 3
0x105ce:   75 23                                 	jne 0x105f3 <DTV_StreamDataRead+0x340>
0x105d0:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x105d5:   44 89 e0                              	mov eax, r12d
0x105d8:   f7 ea                                 	imul edx
0x105da:   44 01 e2                              	add edx, r12d
0x105dd:   89 d6                                 	mov esi, edx
0x105df:   c1 fe 07                              	sar esi, 7
0x105e2:   44 89 e0                              	mov eax, r12d
0x105e5:   c1 f8 1f                              	sar eax, 0x1f
0x105e8:   29 c6                                 	sub esi, eax
0x105ea:   48 8b 7d b8                           	mov rdi, qword ptr [rbp - 0x48]
0x105ee:   e8 b8 a1 ff ff                        	call 0xa7ab <DTV_CleanEncFlag>
0x105f3:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x105f8:   44 89 e0                              	mov eax, r12d
0x105fb:   f7 ea                                 	imul edx
0x105fd:   44 01 e2                              	add edx, r12d
0x10600:   c1 fa 07                              	sar edx, 7
0x10603:   44 89 e0                              	mov eax, r12d
0x10606:   c1 f8 1f                              	sar eax, 0x1f
0x10609:   29 c2                                 	sub edx, eax
0x1060b:   4c 89 f1                              	mov rcx, r14
0x1060e:   48 8b 75 b8                           	mov rsi, qword ptr [rbp - 0x48]
0x10612:   48 89 df                              	mov rdi, rbx
0x10615:   e8 7e e7 ff ff                        	call 0xed98 <DTV_DecrypMultiTS>
0x1061a:   41 80 3e 47                           	cmp byte ptr [r14], 0x47
0x1061e:   75 24                                 	jne 0x10644 <DTV_StreamDataRead+0x391>
0x10620:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x10625:   44 89 e0                              	mov eax, r12d
0x10628:   f7 ea                                 	imul edx
0x1062a:   42 8d 04 22                           	lea eax, [rdx + r12]
0x1062e:   c1 f8 07                              	sar eax, 7
0x10631:   44 89 e1                              	mov ecx, r12d
0x10634:   c1 f9 1f                              	sar ecx, 0x1f
0x10637:   29 c8                                 	sub eax, ecx
0x10639:   69 c0 bc 00 00 00                     	imul eax, eax, 0xbc
0x1063f:   41 39 c4                              	cmp r12d, eax
0x10642:   74 0f                                 	je 0x10653 <DTV_StreamDataRead+0x3a0>
0x10644:   c7 83 48 1d 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1d48], 0
0x1064e:   e9 55 03 00 00                        	jmp 0x109a8
0x10653:   c7 83 48 1d 00 00 02 00 00 00         	mov dword ptr [rbx + 0x1d48], 2
0x1065d:   e9 46 03 00 00                        	jmp 0x109a8
0x10662:   80 bb e4 0d 03 00 01                  	cmp byte ptr [rbx + 0x30de4], 1
0x10669:   0f 85 02 01 00 00                     	jne 0x10771 <DTV_StreamDataRead+0x4be>
0x1066f:   80 bb a1 0d 03 00 00                  	cmp byte ptr [rbx + 0x30da1], 0
0x10676:   0f 85 f5 00 00 00                     	jne 0x10771 <DTV_StreamDataRead+0x4be>
0x1067c:   c7 83 b8 fa 08 00 00 00 00 00         	mov dword ptr [rbx + 0x8fab8], 0
0x10686:   44 89 e9                              	mov ecx, r13d
0x10689:   41 0f b6 f7                           	movzx esi, r15b
0x1068d:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x10691:   48 8b 7d a8                           	mov rdi, qword ptr [rbp - 0x58]
0x10695:   e8 ed 48 00 00                        	call 0x14f87 <USB_BulkStreamRead>
0x1069a:   41 89 c7                              	mov r15d, eax
0x1069d:   49 89 dd                              	mov r13, rbx
0x106a0:   49 8d 8c 24 b8 00 00 00               	lea rcx, [r12 + 0xb8]
0x106a8:   48 89 d8                              	mov rax, rbx
0x106ab:   41 0f b6 54 24 04                     	movzx edx, byte ptr [r12 + 4]
0x106b1:   88 90 78 1c 00 00                     	mov byte ptr [rax + 0x1c78], dl
0x106b7:   49 83 c4 01                           	add r12, 1
0x106bb:   48 83 c0 01                           	add rax, 1
0x106bf:   49 39 cc                              	cmp r12, rcx
0x106c2:   75 e7                                 	jne 0x106ab <DTV_StreamDataRead+0x3f8>
0x106c4:   0f b6 83 75 f4 08 00                  	movzx eax, byte ptr [rbx + 0x8f475]
0x106cb:   84 c0                                 	test al, al
0x106cd:   74 04                                 	je 0x106d3 <DTV_StreamDataRead+0x420>
0x106cf:   3c 03                                 	cmp al, 3
0x106d1:   75 1b                                 	jne 0x106ee <DTV_StreamDataRead+0x43b>
0x106d3:   b9 bc 00 00 00                        	mov ecx, 0xbc
0x106d8:   44 89 fa                              	mov edx, r15d
0x106db:   44 89 f8                              	mov eax, r15d
0x106de:   c1 fa 1f                              	sar edx, 0x1f
0x106e1:   f7 f9                                 	idiv ecx
0x106e3:   89 c6                                 	mov esi, eax
0x106e5:   48 8b 7d b8                           	mov rdi, qword ptr [rbp - 0x48]
0x106e9:   e8 bd a0 ff ff                        	call 0xa7ab <DTV_CleanEncFlag>
0x106ee:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x106f2:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x106f5:   88 45 cf                              	mov byte ptr [rbp - 0x31], al
0x106f8:   3c 47                                 	cmp al, 0x47
0x106fa:   75 66                                 	jne 0x10762 <DTV_StreamDataRead+0x4af>
0x106fc:   b9 bc 00 00 00                        	mov ecx, 0xbc
0x10701:   44 89 fa                              	mov edx, r15d
0x10704:   44 89 f8                              	mov eax, r15d
0x10707:   c1 fa 1f                              	sar edx, 0x1f
0x1070a:   f7 f9                                 	idiv ecx
0x1070c:   85 d2                                 	test edx, edx
0x1070e:   75 52                                 	jne 0x10762 <DTV_StreamDataRead+0x4af>
0x10710:   44 89 fa                              	mov edx, r15d
0x10713:   44 89 f8                              	mov eax, r15d
0x10716:   c1 fa 1f                              	sar edx, 0x1f
0x10719:   f7 f9                                 	idiv ecx
0x1071b:   4c 89 f1                              	mov rcx, r14
0x1071e:   89 c2                                 	mov edx, eax
0x10720:   48 8b 75 b8                           	mov rsi, qword ptr [rbp - 0x48]
0x10724:   48 89 df                              	mov rdi, rbx
0x10727:   e8 61 d7 ff ff                        	call 0xde8d <DTV_EncAES_MultiTS>
0x1072c:   4c 89 f0                              	mov rax, r14
0x1072f:   49 8d 8e b8 00 00 00                  	lea rcx, [r14 + 0xb8]
0x10736:   0f b6 50 04                           	movzx edx, byte ptr [rax + 4]
0x1073a:   41 88 95 ea ed 08 00                  	mov byte ptr [r13 + 0x8edea], dl
0x10741:   48 83 c0 01                           	add rax, 1
0x10745:   49 83 c5 01                           	add r13, 1
0x10749:   48 39 c8                              	cmp rax, rcx
0x1074c:   75 e8                                 	jne 0x10736 <DTV_StreamDataRead+0x483>
0x1074e:   c7 83 b8 fa 08 00 01 00 00 00         	mov dword ptr [rbx + 0x8fab8], 1
0x10758:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x1075c:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x1075f:   88 45 cf                              	mov byte ptr [rbp - 0x31], al
0x10762:   c7 83 b8 fa 08 00 01 00 00 00         	mov dword ptr [rbx + 0x8fab8], 1
0x1076c:   e9 a5 00 00 00                        	jmp 0x10816 <DTV_StreamDataRead+0x563>
0x10771:   44 89 e9                              	mov ecx, r13d
0x10774:   41 0f b6 f7                           	movzx esi, r15b
0x10778:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x1077c:   48 8b 7d a8                           	mov rdi, qword ptr [rbp - 0x58]
0x10780:   e8 02 48 00 00                        	call 0x14f87 <USB_BulkStreamRead>
0x10785:   41 89 c7                              	mov r15d, eax
0x10788:   0f b6 83 75 f4 08 00                  	movzx eax, byte ptr [rbx + 0x8f475]
0x1078f:   84 c0                                 	test al, al
0x10791:   74 04                                 	je 0x10797 <DTV_StreamDataRead+0x4e4>
0x10793:   3c 03                                 	cmp al, 3
0x10795:   75 22                                 	jne 0x107b9 <DTV_StreamDataRead+0x506>
0x10797:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x1079c:   44 89 f8                              	mov eax, r15d
0x1079f:   f7 ea                                 	imul edx
0x107a1:   42 8d 34 3a                           	lea esi, [rdx + r15]
0x107a5:   c1 fe 07                              	sar esi, 7
0x107a8:   44 89 f8                              	mov eax, r15d
0x107ab:   c1 f8 1f                              	sar eax, 0x1f
0x107ae:   29 c6                                 	sub esi, eax
0x107b0:   48 8b 7d b8                           	mov rdi, qword ptr [rbp - 0x48]
0x107b4:   e8 f2 9f ff ff                        	call 0xa7ab <DTV_CleanEncFlag>
0x107b9:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x107bd:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x107c0:   88 45 cf                              	mov byte ptr [rbp - 0x31], al
0x107c3:   3c 47                                 	cmp al, 0x47
0x107c5:   75 7d                                 	jne 0x10844 <DTV_StreamDataRead+0x591>
0x107c7:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x107cc:   44 89 f8                              	mov eax, r15d
0x107cf:   f7 ea                                 	imul edx
0x107d1:   42 8d 04 3a                           	lea eax, [rdx + r15]
0x107d5:   c1 f8 07                              	sar eax, 7
0x107d8:   44 89 f9                              	mov ecx, r15d
0x107db:   c1 f9 1f                              	sar ecx, 0x1f
0x107de:   29 c8                                 	sub eax, ecx
0x107e0:   69 c0 bc 00 00 00                     	imul eax, eax, 0xbc
0x107e6:   41 39 c7                              	cmp r15d, eax
0x107e9:   75 59                                 	jne 0x10844 <DTV_StreamDataRead+0x591>
0x107eb:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x107f0:   44 89 f8                              	mov eax, r15d
0x107f3:   f7 ea                                 	imul edx
0x107f5:   44 01 fa                              	add edx, r15d
0x107f8:   c1 fa 07                              	sar edx, 7
0x107fb:   29 ca                                 	sub edx, ecx
0x107fd:   4c 89 f1                              	mov rcx, r14
0x10800:   48 8b 75 b8                           	mov rsi, qword ptr [rbp - 0x48]
0x10804:   48 89 df                              	mov rdi, rbx
0x10807:   e8 8c e5 ff ff                        	call 0xed98 <DTV_DecrypMultiTS>
0x1080c:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x10810:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x10813:   88 45 cf                              	mov byte ptr [rbp - 0x31], al
0x10816:   80 7d cf 47                           	cmp byte ptr [rbp - 0x31], 0x47
0x1081a:   75 28                                 	jne 0x10844 <DTV_StreamDataRead+0x591>
0x1081c:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x10821:   44 89 f8                              	mov eax, r15d
0x10824:   f7 ea                                 	imul edx
0x10826:   42 8d 04 3a                           	lea eax, [rdx + r15]
0x1082a:   c1 f8 07                              	sar eax, 7
0x1082d:   44 89 f9                              	mov ecx, r15d
0x10830:   c1 f9 1f                              	sar ecx, 0x1f
0x10833:   29 c8                                 	sub eax, ecx
0x10835:   69 c0 bc 00 00 00                     	imul eax, eax, 0xbc
0x1083b:   41 39 c7                              	cmp r15d, eax
0x1083e:   0f 84 61 01 00 00                     	je 0x109a5
0x10844:   48 8d 93 4c 1d 00 00                  	lea rdx, [rbx + 0x1d4c]
0x1084b:   48 89 55 b0                           	mov qword ptr [rbp - 0x50], rdx
0x1084f:   49 63 d7                              	movsxd rdx, r15d
0x10852:   48 8b 75 b8                           	mov rsi, qword ptr [rbp - 0x48]
0x10856:   48 8b 7d b0                           	mov rdi, qword ptr [rbp - 0x50]
0x1085a:   e8 09 e3 02 00                        	call 0x3eb68 <memcpy>
0x1085f:   45 85 ff                              	test r15d, r15d
0x10862:   0f 8e 3d 01 00 00                     	jle 0x109a5
0x10868:   45 8d a7 20 fa ff ff                  	lea r12d, [r15 - 0x5e0]
0x1086f:   45 85 e4                              	test r12d, r12d
0x10872:   7e 2f                                 	jle 0x108a3 <DTV_StreamDataRead+0x5f0>
0x10874:   41 bd 00 00 00 00                     	mov r13d, 0
0x1087a:   49 63 c5                              	movsxd rax, r13d
0x1087d:   48 8d bc 03 4c 1d 00 00               	lea rdi, [rbx + rax + 0x1d4c]
0x10885:   be 08 00 00 00                        	mov esi, 8
0x1088a:   e8 d8 9e ff ff                        	call 0xa767 <DTV_CheckSync>
0x1088f:   85 c0                                 	test eax, eax
0x10891:   75 0b                                 	jne 0x1089e <DTV_StreamDataRead+0x5eb>
0x10893:   41 83 c5 01                           	add r13d, 1
0x10897:   45 39 ec                              	cmp r12d, r13d
0x1089a:   7f de                                 	jg 0x1087a <DTV_StreamDataRead+0x5c7>
0x1089c:   eb 05                                 	jmp 0x108a3 <DTV_StreamDataRead+0x5f0>
0x1089e:   45 39 e5                              	cmp r13d, r12d
0x108a1:   7c 25                                 	jl 0x108c8 <DTV_StreamDataRead+0x615>
0x108a3:   c6 45 cf 02                           	mov byte ptr [rbp - 0x31], 2
0x108a7:   48 8d 75 cf                           	lea rsi, [rbp - 0x31]
0x108ab:   48 89 df                              	mov rdi, rbx
0x108ae:   e8 fa af ff ff                        	call 0xb8ad <DTV_SaveTSReSync>
0x108b3:   c7 83 48 1d 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1d48], 0
0x108bd:   41 bc 00 00 00 00                     	mov r12d, 0
0x108c3:   e9 e0 00 00 00                        	jmp 0x109a8
0x108c8:   45 89 fc                              	mov r12d, r15d
0x108cb:   45 29 ec                              	sub r12d, r13d
0x108ce:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x108d3:   44 89 e0                              	mov eax, r12d
0x108d6:   f7 ea                                 	imul edx
0x108d8:   42 8d 04 22                           	lea eax, [rdx + r12]
0x108dc:   c1 f8 07                              	sar eax, 7
0x108df:   44 89 e1                              	mov ecx, r12d
0x108e2:   c1 f9 1f                              	sar ecx, 0x1f
0x108e5:   29 c8                                 	sub eax, ecx
0x108e7:   69 c0 bc 00 00 00                     	imul eax, eax, 0xbc
0x108ed:   44 89 e2                              	mov edx, r12d
0x108f0:   29 c2                                 	sub edx, eax
0x108f2:   89 93 4c 0d 03 00                     	mov dword ptr [rbx + 0x30d4c], edx
0x108f8:   41 29 d4                              	sub r12d, edx
0x108fb:   41 29 d7                              	sub r15d, edx
0x108fe:   44 89 bb 50 0d 03 00                  	mov dword ptr [rbx + 0x30d50], r15d
0x10905:   80 bb e4 0d 03 00 01                  	cmp byte ptr [rbx + 0x30de4], 1
0x1090c:   75 39                                 	jne 0x10947 <DTV_StreamDataRead+0x694>
0x1090e:   80 bb a1 0d 03 00 00                  	cmp byte ptr [rbx + 0x30da1], 0
0x10915:   75 30                                 	jne 0x10947 <DTV_StreamDataRead+0x694>
0x10917:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x1091c:   44 89 e0                              	mov eax, r12d
0x1091f:   f7 ea                                 	imul edx
0x10921:   44 01 e2                              	add edx, r12d
0x10924:   c1 fa 07                              	sar edx, 7
0x10927:   44 89 e0                              	mov eax, r12d
0x1092a:   c1 f8 1f                              	sar eax, 0x1f
0x1092d:   29 c2                                 	sub edx, eax
0x1092f:   4d 63 ed                              	movsxd r13, r13d
0x10932:   4a 8d b4 2b 4c 1d 00 00               	lea rsi, [rbx + r13 + 0x1d4c]
0x1093a:   4c 89 f1                              	mov rcx, r14
0x1093d:   48 89 df                              	mov rdi, rbx
0x10940:   e8 48 d5 ff ff                        	call 0xde8d <DTV_EncAES_MultiTS>
0x10945:   eb 3a                                 	jmp 0x10981 <DTV_StreamDataRead+0x6ce>
0x10947:   49 63 d4                              	movsxd rdx, r12d
0x1094a:   49 63 f5                              	movsxd rsi, r13d
0x1094d:   48 03 75 b0                           	add rsi, qword ptr [rbp - 0x50]
0x10951:   48 8b 7d b8                           	mov rdi, qword ptr [rbp - 0x48]
0x10955:   e8 0e e2 02 00                        	call 0x3eb68 <memcpy>
0x1095a:   ba 5d 41 4c ae                        	mov edx, 0xae4c415d
0x1095f:   44 89 e0                              	mov eax, r12d
0x10962:   f7 ea                                 	imul edx
0x10964:   44 01 e2                              	add edx, r12d
0x10967:   c1 fa 07                              	sar edx, 7
0x1096a:   44 89 e0                              	mov eax, r12d
0x1096d:   c1 f8 1f                              	sar eax, 0x1f
0x10970:   29 c2                                 	sub edx, eax
0x10972:   4c 89 f1                              	mov rcx, r14
0x10975:   48 8b 75 b8                           	mov rsi, qword ptr [rbp - 0x48]
0x10979:   48 89 df                              	mov rdi, rbx
0x1097c:   e8 17 e4 ff ff                        	call 0xed98 <DTV_DecrypMultiTS>
0x10981:   c7 83 48 1d 00 00 01 00 00 00         	mov dword ptr [rbx + 0x1d48], 1
0x1098b:   c6 45 cf 01                           	mov byte ptr [rbp - 0x31], 1
0x1098f:   48 8d 75 cf                           	lea rsi, [rbp - 0x31]
0x10993:   48 89 df                              	mov rdi, rbx
; data inside code section at 0x10996 -- 0x1099a
0x10996:   e8 12 af ff                                        |....            |
; function: DTV_StreamThreadRun at 0x1099a -- 0x109ca
; function: DTV_StreamThreadRun at 0x109ca -- 0x10aa0
0x109ca:   55                                    	push rbp
0x109cb:   48 89 e5                              	mov rbp, rsp
0x109ce:   48 83 ec 20                           	sub rsp, 0x20
0x109d2:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x109d6:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x109db:   4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x109e0:   4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x109e5:   e8 06 e2 02 00                        	call 0x3ebf0 <mcount>
0x109ea:   48 89 fb                              	mov rbx, rdi
0x109ed:   4c 8b a7 38 1d 00 00                  	mov r12, qword ptr [rdi + 0x1d38]
0x109f4:   44 0f b6 af 30 1d 00 00               	movzx r13d, byte ptr [rdi + 0x1d30]
0x109fc:   49 63 c5                              	movsxd rax, r13d
0x109ff:   41 c6 84 04 58 59 00 00 00            	mov byte ptr [r12 + rax + 0x5958], 0
0x10a08:   83 bf 44 1d 00 00 01                  	cmp dword ptr [rdi + 0x1d44], 1
0x10a0f:   75 36                                 	jne 0x10a47 <DTV_StreamThreadRun+0x7d>
0x10a11:   48 c7 87 58 0d 03 00 80 00 00 00      	mov qword ptr [rdi + 0x30d58], 0x80
0x10a1c:   80 bf 60 0d 03 00 01                  	cmp byte ptr [rdi + 0x30d60], 1
0x10a23:   0f 84 a5 00 00 00                     	je 0x10ace
0x10a29:   41 b8 70 49 00 00                     	mov r8d, 0x4970
0x10a2f:   b9 80 00 00 00                        	mov ecx, 0x80
0x10a34:   48 89 fa                              	mov rdx, rdi
0x10a37:   44 89 ee                              	mov esi, r13d
0x10a3a:   4c 89 e7                              	mov rdi, r12
0x10a3d:   e8 9c 45 00 00                        	call 0x14fde <USB_BulkStreamStart>
0x10a42:   41 89 c6                              	mov r14d, eax
0x10a45:   eb 30                                 	jmp 0x10a77 <DTV_StreamThreadRun+0xad>
0x10a47:   48 c7 87 58 0d 03 00 08 00 00 00      	mov qword ptr [rdi + 0x30d58], 8
0x10a52:   80 bf 60 0d 03 00 01                  	cmp byte ptr [rdi + 0x30d60], 1
0x10a59:   74 73                                 	je 0x10ace
0x10a5b:   41 b8 70 49 00 00                     	mov r8d, 0x4970
0x10a61:   b9 08 00 00 00                        	mov ecx, 8
0x10a66:   48 89 fa                              	mov rdx, rdi
0x10a69:   44 89 ee                              	mov esi, r13d
0x10a6c:   4c 89 e7                              	mov rdi, r12
0x10a6f:   e8 6a 45 00 00                        	call 0x14fde <USB_BulkStreamStart>
0x10a74:   41 89 c6                              	mov r14d, eax
0x10a77:   41 83 fe 01                           	cmp r14d, 1
0x10a7b:   75 23                                 	jne 0x10aa0 <DTV_StreamThreadRun+0xcc>
0x10a7d:   80 bb 60 0d 03 00 01                  	cmp byte ptr [rbx + 0x30d60], 1
0x10a84:   74 10                                 	je 0x10a96 <DTV_StreamThreadRun+0xcc>
0x10a86:   ba 01 00 00 00                        	mov edx, 1
0x10a8b:   44 89 ee                              	mov esi, r13d
0x10a8e:   4c 89 e7                              	mov rdi, r12
0x10a91:   e8 39 44 00 00                        	call 0x14ecf <USB_FilterStart_Stop>
0x10a96:   c7 83 48 1d 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1d48], 0
; data inside code section at 0x10aa0 -- 0x10aa6
0x10aa0:   80 bb e4 0d 03 00                                  |......          |
; function: DTV_GetTunerSignalLevel at 0x10aa6 -- 0x10ad6
0x10aa6:   00 74 0d be                           	add byte ptr [rbp + rcx - 0x42], dh
0x10aaa:   01 00                                 	add dword ptr [rax], eax
0x10aac:   00 00                                 	add byte ptr [rax], al
0x10aae:   48 89 df                              	mov rdi, rbx
0x10ab1:   e8 0b e6 ff ff                        	call 0xf0c1 <DTV_StartStop_Enc>
0x10ab6:   44 89 f0                              	mov eax, r14d
0x10ab9:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x10abd:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x10ac2:   4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x10ac7:   4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x10acc:   c9                                    	leave 
0x10acd:   c3                                    	ret 
0x10ace:   41 be 00 00 00 00                     	mov r14d, 0
0x10ad4:   eb ca                                 	jmp 0x10aa0
; function: DTV_GetTunerSignalLevel at 0x10ad6 -- 0x10b30
0x10ad6:   55                                    	push rbp
0x10ad7:   48 89 e5                              	mov rbp, rsp
0x10ada:   48 83 ec 20                           	sub rsp, 0x20
0x10ade:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x10ae2:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x10ae6:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x10aea:   e8 01 e1 02 00                        	call 0x3ebf0 <mcount>
0x10aef:   48 89 fb                              	mov rbx, rdi
0x10af2:   49 89 f4                              	mov r12, rsi
0x10af5:   49 89 d5                              	mov r13, rdx
0x10af8:   b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0x10afd:   83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0x10b04:   74 50                                 	je 0x10b56
0x10b06:   80 bf 60 0d 03 00 00                  	cmp byte ptr [rdi + 0x30d60], 0
0x10b0d:   74 1c                                 	je 0x10b2b <DTV_GetTunerSignalLevel+0x55>
0x10b0f:   48 85 f6                              	test rsi, rsi
0x10b12:   74 03                                 	je 0x10b17 <DTV_GetTunerSignalLevel+0x41>
0x10b14:   c6 06 00                              	mov byte ptr [rsi], 0
0x10b17:   4d 85 ed                              	test r13, r13
0x10b1a:   74 35                                 	je 0x10b51
0x10b1c:   49 c7 45 00 00 00 00 00               	mov qword ptr [r13], 0
0x10b24:   b8 01 00 00 00                        	mov eax, 1
0x10b29:   eb 2b                                 	jmp 0x10b56
0x10b2b:   48 85 f6                              	test rsi, rsi
0x10b2e:   74 09                                 	je 0x10b39
; data inside code section at 0x10b30 -- 0x10b34
0x10b30:   e8 2b be 00                                        |.+..            |
; function: DTV_TunerLockCheck at 0x10b34 -- 0x10b63
0x10b34:   00 41 88                              	add byte ptr [rcx - 0x78], al
0x10b37:   04 24                                 	add al, 0x24
0x10b39:   4d 85 ed                              	test r13, r13
0x10b3c:   74 13                                 	je 0x10b51 <DTV_TunerLockCheck+0x1d>
0x10b3e:   48 89 df                              	mov rdi, rbx
0x10b41:   e8 bc bf 00 00                        	call 0x1cb02 <Tnim_SignalLevel>
0x10b46:   49 89 45 00                           	mov qword ptr [r13], rax
0x10b4a:   b8 01 00 00 00                        	mov eax, 1
0x10b4f:   eb 05                                 	jmp 0x10b56 <DTV_TunerLockCheck+0x22>
0x10b51:   b8 01 00 00 00                        	mov eax, 1
0x10b56:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x10b5a:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x10b5e:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x10b62:   c9                                    	leave 
; function: DTV_SetPidTable at 0x10b63 -- 0x10b64
0x10b63:   c3                                    	ret 
; function: DTV_TunerLockCheck at 0x10b64 -- 0x10b93
0x10b64:   55                                    	push rbp
0x10b65:   48 89 e5                              	mov rbp, rsp
0x10b68:   e8 83 e0 02 00                        	call 0x3ebf0 <mcount>
0x10b6d:   b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0x10b72:   83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0x10b79:   74 16                                 	je 0x10b91 <DTV_TunerLockCheck+0x2d>
0x10b7b:   b8 00 00 00 00                        	mov eax, 0
0x10b80:   80 bf 60 0d 03 00 00                  	cmp byte ptr [rdi + 0x30d60], 0
0x10b87:   75 08                                 	jne 0x10b91 <DTV_TunerLockCheck+0x2d>
0x10b89:   e8 99 bd 00 00                        	call 0x1c927 <Tnim_IsLocked>
0x10b8e:   0f b6 c0                              	movzx eax, al
0x10b91:   c9                                    	leave 
0x10b92:   c3                                    	ret 
; function: DTV_SetPidTable at 0x10b93 -- 0x10bf4
0x10b93:   55                                    	push rbp
0x10b94:   48 89 e5                              	mov rbp, rsp
0x10b97:   48 83 c4 80                           	add rsp, -0x80
0x10b9b:   e8 50 e0 02 00                        	call 0x3ebf0 <mcount>
0x10ba0:   4c 8b 87 38 1d 00 00                  	mov r8, qword ptr [rdi + 0x1d38]
0x10ba7:   44 0f b6 8f 30 1d 00 00               	movzx r9d, byte ptr [rdi + 0x1d30]
0x10baf:   0f b6 ca                              	movzx ecx, dl
0x10bb2:   b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0x10bb7:   83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0x10bbe:   74 62                                 	je 0x10c22
0x10bc0:   80 fa 20                              	cmp dl, 0x20
0x10bc3:   77 05                                 	ja 0x10bca <DTV_SetPidTable+0x37>
0x10bc5:   48 85 f6                              	test rsi, rsi
0x10bc8:   75 07                                 	jne 0x10bd1 <DTV_SetPidTable+0x3e>
0x10bca:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x10bcf:   eb 51                                 	jmp 0x10c22
0x10bd1:   ba 00 00 00 00                        	mov edx, 0
0x10bd6:   b8 00 00 00 00                        	mov eax, 0
0x10bdb:   48 8d 7d 80                           	lea rdi, [rbp - 0x80]
0x10bdf:   39 c8                                 	cmp eax, ecx
0x10be1:   7d 0a                                 	jge 0x10bed <DTV_SetPidTable+0x5a>
0x10be3:   44 8b 14 16                           	mov r10d, dword ptr [rsi + rdx]
0x10be7:   44 89 14 17                           	mov dword ptr [rdi + rdx], r10d
0x10beb:   eb 07                                 	jmp 0x10bf4 <GetDeviceUniqueString>
0x10bed:   c7 04 17 00 00 00 00                  	mov dword ptr [rdi + rdx], 0
; function: GetDeviceUniqueString at 0x10bf4 -- 0x10c24
0x10bf4:   83 c0 01                              	add eax, 1
0x10bf7:   48 83 c2 04                           	add rdx, 4
0x10bfb:   83 f8 20                              	cmp eax, 0x20
0x10bfe:   75 df                                 	jne 0x10bdf
0x10c00:   48 8d 55 80                           	lea rdx, [rbp - 0x80]
0x10c04:   41 0f b6 f1                           	movzx esi, r9b
0x10c08:   b9 20 00 00 00                        	mov ecx, 0x20
0x10c0d:   4c 89 c7                              	mov rdi, r8
0x10c10:   e8 70 41 00 00                        	call 0x14d85 <USB_SetPidTable>
0x10c15:   83 f8 01                              	cmp eax, 1
0x10c18:   0f 94 c0                              	sete al
0x10c1b:   0f b6 c0                              	movzx eax, al
0x10c1e:   8d 44 80 fc                           	lea eax, [rax + rax*4 - 4]
0x10c22:   c9                                    	leave 
0x10c23:   c3                                    	ret 
; function: GetDeviceUniqueString at 0x10c24 -- 0x10d54
0x10c24:   55                                    	push rbp
0x10c25:   48 89 e5                              	mov rbp, rsp
0x10c28:   41 56                                 	push r14
0x10c2a:   41 55                                 	push r13
0x10c2c:   41 54                                 	push r12
0x10c2e:   53                                    	push rbx
0x10c2f:   48 83 ec 70                           	sub rsp, 0x70
0x10c33:   e8 b8 df 02 00                        	call 0x3ebf0 <mcount>
0x10c38:   48 89 fb                              	mov rbx, rdi
0x10c3b:   49 89 f5                              	mov r13, rsi
0x10c3e:   49 89 d6                              	mov r14, rdx
0x10c41:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x10c4a:   48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x10c4e:   31 c0                                 	xor eax, eax
0x10c50:   4c 8d 65 c0                           	lea r12, [rbp - 0x40]
0x10c54:   49 c7 04 24 00 00 00 00               	mov qword ptr [r12], 0
0x10c5c:   41 c7 44 24 08 00 00 00 00            	mov dword ptr [r12 + 8], 0
0x10c65:   0f b6 87 73 4f 00 00                  	movzx eax, byte ptr [rdi + 0x4f73]
0x10c6c:   88 45 c1                              	mov byte ptr [rbp - 0x3f], al
0x10c6f:   0f b6 87 74 4f 00 00                  	movzx eax, byte ptr [rdi + 0x4f74]
0x10c76:   88 45 c2                              	mov byte ptr [rbp - 0x3e], al
0x10c79:   0f b6 87 75 4f 00 00                  	movzx eax, byte ptr [rdi + 0x4f75]
0x10c80:   88 45 c3                              	mov byte ptr [rbp - 0x3d], al
0x10c83:   0f b6 87 76 4f 00 00                  	movzx eax, byte ptr [rdi + 0x4f76]
0x10c8a:   88 45 c4                              	mov byte ptr [rbp - 0x3c], al
0x10c8d:   c6 45 b0 00                           	mov byte ptr [rbp - 0x50], 0
0x10c91:   c6 45 b1 b0                           	mov byte ptr [rbp - 0x4f], 0xb0
0x10c95:   48 8d 4d b0                           	lea rcx, [rbp - 0x50]
0x10c99:   41 b9 02 00 00 00                     	mov r9d, 2
0x10c9f:   41 b8 02 00 00 00                     	mov r8d, 2
0x10ca5:   ba 00 00 00 00                        	mov edx, 0
0x10caa:   be a0 00 00 00                        	mov esi, 0xa0
0x10caf:   e8 4d c0 00 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x10cb4:   49 8d 4c 24 05                        	lea rcx, [r12 + 5]
0x10cb9:   41 b9 02 00 00 00                     	mov r9d, 2
0x10cbf:   41 b8 07 00 00 00                     	mov r8d, 7
0x10cc5:   ba 00 00 00 00                        	mov edx, 0
0x10cca:   be a0 00 00 00                        	mov esi, 0xa0
0x10ccf:   48 89 df                              	mov rdi, rbx
0x10cd2:   e8 89 bf 00 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x10cd7:   41 8b 16                              	mov edx, dword ptr [r14]
0x10cda:   be 00 00 00 00                        	mov esi, 0
0x10cdf:   4c 89 ef                              	mov rdi, r13
0x10ce2:   e8 59 df 02 00                        	call 0x3ec40 <memset>
0x10ce7:   44 0f b6 4d c3                        	movzx r9d, byte ptr [rbp - 0x3d]
0x10cec:   44 0f b6 45 c2                        	movzx r8d, byte ptr [rbp - 0x3e]
0x10cf1:   0f b6 4d c1                           	movzx ecx, byte ptr [rbp - 0x3f]
0x10cf5:   0f b6 55 c0                           	movzx edx, byte ptr [rbp - 0x40]
0x10cf9:   0f b6 45 cb                           	movzx eax, byte ptr [rbp - 0x35]
0x10cfd:   89 44 24 38                           	mov dword ptr [rsp + 0x38], eax
0x10d01:   0f b6 45 ca                           	movzx eax, byte ptr [rbp - 0x36]
0x10d05:   89 44 24 30                           	mov dword ptr [rsp + 0x30], eax
0x10d09:   0f b6 45 c9                           	movzx eax, byte ptr [rbp - 0x37]
0x10d0d:   89 44 24 28                           	mov dword ptr [rsp + 0x28], eax
0x10d11:   0f b6 45 c8                           	movzx eax, byte ptr [rbp - 0x38]
0x10d15:   89 44 24 20                           	mov dword ptr [rsp + 0x20], eax
0x10d19:   0f b6 45 c7                           	movzx eax, byte ptr [rbp - 0x39]
0x10d1d:   89 44 24 18                           	mov dword ptr [rsp + 0x18], eax
0x10d21:   0f b6 45 c6                           	movzx eax, byte ptr [rbp - 0x3a]
0x10d25:   89 44 24 10                           	mov dword ptr [rsp + 0x10], eax
0x10d29:   0f b6 45 c5                           	movzx eax, byte ptr [rbp - 0x3b]
0x10d2d:   89 44 24 08                           	mov dword ptr [rsp + 8], eax
0x10d31:   0f b6 45 c4                           	movzx eax, byte ptr [rbp - 0x3c]
0x10d35:   89 04 24                              	mov dword ptr [rsp], eax
0x10d38:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x10d3f:   4c 89 ef                              	mov rdi, r13
0x10d42:   b8 00 00 00 00                        	mov eax, 0
0x10d47:   e8 1c df 02 00                        	call 0x3ec68 <sprintf>
0x10d4c:   4c 89 ef                              	mov rdi, r13
0x10d4f:   b8 00 00 00 00                        	mov eax, 0
; data inside code section at 0x10d54 -- 0x10d58
0x10d54:   48 c7 c1 ff                                        |H...            |
; function: DTV_TunerPower at 0x10d58 -- 0x10d59
; data inside code section at 0x10d59 -- 0x10d5a
0x10d59:   ff                                                 |.               |
; function: function_10d5a at 0x10d5a -- 0x10d88
0x10d5a:   ff f2                                 	push rdx
0x10d5c:   ae                                    	scasb al, byte ptr [rdi]
0x10d5d:   48 f7 d1                              	not rcx
0x10d60:   48 83 e9 01                           	sub rcx, 1
0x10d64:   41 89 0e                              	mov dword ptr [r14], ecx
0x10d67:   48 8b 45 d8                           	mov rax, qword ptr [rbp - 0x28]
0x10d6b:   65 48 33 04 25 28 00 00 00            	xor rax, qword ptr gs:[0x28]
0x10d74:   74 05                                 	je 0x10d7b <function_10d5a+0x21>
0x10d76:   e8 2d de 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x10d7b:   48 83 c4 70                           	add rsp, 0x70
0x10d7f:   5b                                    	pop rbx
0x10d80:   41 5c                                 	pop r12
0x10d82:   41 5d                                 	pop r13
0x10d84:   41 5e                                 	pop r14
0x10d86:   c9                                    	leave 
0x10d87:   c3                                    	ret 
; function: DTV_TunerPower at 0x10d88 -- 0x10d94
0x10d88:   55                                    	push rbp
0x10d89:   48 89 e5                              	mov rbp, rsp
0x10d8c:   e8 5f de 02 00                        	call 0x3ebf0 <mcount>
0x10d91:   48 89 f8                              	mov rax, rdi
; data inside code section at 0x10d94 -- 0x10d98
0x10d94:   48 8b bf 38                                        |H..8            |
; function: DTV_TunerHardReset at 0x10d98 -- 0x10dc8
0x10d98:   1d 00 00 0f b6                        	sbb eax, 0xb60f0000
0x10d9d:   80 30 1d                              	xor byte ptr [rax], 0x1d
0x10da0:   00 00                                 	add byte ptr [rax], al
0x10da2:   0f b6 c8                              	movzx ecx, al
0x10da5:   48 8d 14 89                           	lea rdx, [rcx + rcx*4]
0x10da9:   48 c1 e2 04                           	shl rdx, 4
0x10dad:   48 8d 8c 17 60 59 00 00               	lea rcx, [rdi + rdx + 0x5960]
0x10db5:   40 0f b6 d6                           	movzx edx, sil
0x10db9:   0f b6 f0                              	movzx esi, al
0x10dbc:   e8 07 56 ff ff                        	call 0x63c8 <TC_PowerTunerDemod>
0x10dc1:   b8 01 00 00 00                        	mov eax, 1
0x10dc6:   c9                                    	leave 
0x10dc7:   c3                                    	ret 
; function: DTV_TunerHardReset at 0x10dc8 -- 0x10dc9
0x10dc8:   55                                    	push rbp
; function: TunerReset at 0x10dc9 -- 0x10df9
0x10dc9:   48 89 e5                              	mov rbp, rsp
0x10dcc:   e8 1f de 02 00                        	call 0x3ebf0 <mcount>
0x10dd1:   40 0f b6 c6                           	movzx eax, sil
0x10dd5:   48 8d 04 80                           	lea rax, [rax + rax*4]
0x10dd9:   48 c1 e0 04                           	shl rax, 4
0x10ddd:   48 8d 94 07 60 59 00 00               	lea rdx, [rdi + rax + 0x5960]
0x10de5:   40 0f b6 f6                           	movzx esi, sil
0x10de9:   e8 e5 55 ff ff                        	call 0x63d3 <ReadWrite_Customization_Data>
0x10dee:   3c 01                                 	cmp al, 1
0x10df0:   19 c0                                 	sbb eax, eax
0x10df2:   f7 d0                                 	not eax
0x10df4:   83 c0 02                              	add eax, 2
0x10df7:   c9                                    	leave 
0x10df8:   c3                                    	ret 
; function: TunerReset at 0x10df9 -- 0x10e4b
0x10df9:   55                                    	push rbp
0x10dfa:   48 89 e5                              	mov rbp, rsp
0x10dfd:   48 83 ec 20                           	sub rsp, 0x20
0x10e01:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x10e05:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x10e09:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x10e0d:   e8 de dd 02 00                        	call 0x3ebf0 <mcount>
0x10e12:   48 89 fb                              	mov rbx, rdi
0x10e15:   41 89 f4                              	mov r12d, esi
0x10e18:   41 89 d5                              	mov r13d, edx
0x10e1b:   48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0x10e22:   0f b6 b3 30 1d 00 00                  	movzx esi, byte ptr [rbx + 0x1d30]
0x10e29:   c6 83 ae fa 08 00 00                  	mov byte ptr [rbx + 0x8faae], 0
0x10e30:   40 0f b6 f6                           	movzx esi, sil
0x10e34:   e8 8f ff ff ff                        	call 0x10dc8 <DTV_TunerHardReset>
0x10e39:   89 c2                                 	mov edx, eax
0x10e3b:   8d 4a ff                              	lea ecx, [rdx - 1]
0x10e3e:   b8 00 00 00 00                        	mov eax, 0
0x10e43:   83 f9 01                              	cmp ecx, 1
0x10e46:   77 26                                 	ja 0x10e6e
0x10e48:   45 84 e4                              	test r12b, r12b
; data inside code section at 0x10e4b -- 0x10e4c
0x10e4b:   74                                                 |t               |
; function: DTV_StreamThreadStop at 0x10e4c -- 0x10e7c
0x10e4c:   0a 45 84                              	or al, byte ptr [rbp - 0x7c]
0x10e4f:   ed                                    	in eax, dx
0x10e50:   74 0c                                 	je 0x10e5e <DTV_StreamThreadStop+0x12>
0x10e52:   83 fa 01                              	cmp edx, 1
0x10e55:   74 07                                 	je 0x10e5e <DTV_StreamThreadStop+0x12>
0x10e57:   b8 01 00 00 00                        	mov eax, 1
0x10e5c:   eb 10                                 	jmp 0x10e6e <DTV_StreamThreadStop+0x22>
0x10e5e:   48 89 df                              	mov rdi, rbx
0x10e61:   e8 ee bb 00 00                        	call 0x1ca54 <Tnim_Initialise>
0x10e66:   84 c0                                 	test al, al
0x10e68:   0f 95 c0                              	setne al
0x10e6b:   0f b6 c0                              	movzx eax, al
0x10e6e:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x10e72:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x10e76:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x10e7a:   c9                                    	leave 
0x10e7b:   c3                                    	ret 
; function: DTV_StreamThreadStop at 0x10e7c -- 0x10f4d
0x10e7c:   55                                    	push rbp
0x10e7d:   48 89 e5                              	mov rbp, rsp
0x10e80:   48 83 ec 40                           	sub rsp, 0x40
0x10e84:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x10e88:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x10e8c:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x10e90:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x10e94:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x10e98:   e8 53 dd 02 00                        	call 0x3ebf0 <mcount>
0x10e9d:   49 89 fd                              	mov r13, rdi
0x10ea0:   40 88 75 cf                           	mov byte ptr [rbp - 0x31], sil
0x10ea4:   4c 8b a7 38 1d 00 00                  	mov r12, qword ptr [rdi + 0x1d38]
0x10eab:   44 0f b6 b7 30 1d 00 00               	movzx r14d, byte ptr [rdi + 0x1d30]
0x10eb3:   49 63 c6                              	movsxd rax, r14d
0x10eb6:   41 80 bc 04 58 59 00 00 01            	cmp byte ptr [r12 + rax + 0x5958], 1
0x10ebf:   75 18                                 	jne 0x10ed9 <DTV_StreamThreadStop+0x5d>
0x10ec1:   48 89 c3                              	mov rbx, rax
0x10ec4:   bf 01 00 00 00                        	mov edi, 1
0x10ec9:   e8 97 45 00 00                        	call 0x15465 <vUSB_Wait>
0x10ece:   41 80 bc 1c 58 59 00 00 01            	cmp byte ptr [r12 + rbx + 0x5958], 1
0x10ed7:   74 eb                                 	je 0x10ec4 <DTV_StreamThreadStop+0x48>
0x10ed9:   44 89 f6                              	mov esi, r14d
0x10edc:   4c 89 e7                              	mov rdi, r12
0x10edf:   e8 b7 40 00 00                        	call 0x14f9b <USB_BulkStreamStop>
0x10ee4:   4d 8d bc 24 f8 00 00 00               	lea r15, [r12 + 0xf8]
0x10eec:   4c 89 ff                              	mov rdi, r15
0x10eef:   e8 e4 dc 02 00                        	call 0x3ebd8 <down>
0x10ef4:   49 63 de                              	movsxd rbx, r14d
0x10ef7:   48 69 db 38 01 00 00                  	imul rbx, rbx, 0x138
0x10efe:   49 8d 1c 1c                           	lea rbx, [r12 + rbx]
0x10f02:   48 c7 83 30 05 00 00 00 00 00 00      	mov qword ptr [rbx + 0x530], 0
0x10f0d:   4c 89 ff                              	mov rdi, r15
0x10f10:   e8 43 dc 02 00                        	call 0x3eb58 <up>
0x10f15:   c6 83 28 05 00 00 00                  	mov byte ptr [rbx + 0x528], 0
0x10f1c:   41 80 bd e4 0d 03 00 00               	cmp byte ptr [r13 + 0x30de4], 0
0x10f24:   74 0d                                 	je 0x10f33 <DTV_StreamThreadStop+0xb7>
0x10f26:   be 00 00 00 00                        	mov esi, 0
0x10f2b:   4c 89 ef                              	mov rdi, r13
0x10f2e:   e8 8e e1 ff ff                        	call 0xf0c1 <DTV_StartStop_Enc>
0x10f33:   80 7d cf 00                           	cmp byte ptr [rbp - 0x31], 0
0x10f37:   74 1e                                 	je 0x10f57
0x10f39:   ba 00 00 00 00                        	mov edx, 0
0x10f3e:   be 00 00 00 00                        	mov esi, 0
0x10f43:   4c 89 ef                              	mov rdi, r13
0x10f46:   e8 ae fe ff ff                        	call 0x10df9 <TunerReset>
0x10f4b:   89 c2                                 	mov edx, eax
; function: bWriteMPUI2CData at 0x10f4d -- 0x10f7d
0x10f4d:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x10f52:   83 fa 01                              	cmp edx, 1
0x10f55:   75 10                                 	jne 0x10f67 <bWriteMPUI2CData+0x1a>
0x10f57:   41 c7 85 48 1d 00 00 00 00 00 00      	mov dword ptr [r13 + 0x1d48], 0
0x10f62:   b8 01 00 00 00                        	mov eax, 1
0x10f67:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x10f6b:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x10f6f:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x10f73:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x10f77:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x10f7b:   c9                                    	leave 
0x10f7c:   c3                                    	ret 
; function: bWriteMPUI2CData at 0x10f7d -- 0x10f8f
0x10f7d:   55                                    	push rbp
0x10f7e:   48 89 e5                              	mov rbp, rsp
0x10f81:   48 83 ec 10                           	sub rsp, 0x10
0x10f85:   e8 66 dc 02 00                        	call 0x3ebf0 <mcount>
0x10f8a:   b8 00 00 00 00                        	mov eax, 0
; data inside code section at 0x10f8f -- 0x10f90
0x10f8f:   80                                                 |.               |
; function: DTV_DecEncChip_I2C_Write at 0x10f90 -- 0x10fc0
0x10f90:   f9                                    	stc 
0x10f91:   20 77 2a                              	and byte ptr [rdi + 0x2a], dh
0x10f94:   0f b6 c2                              	movzx eax, dl
0x10f97:   40 0f b6 d6                           	movzx edx, sil
0x10f9b:   40 0f b6 f7                           	movzx esi, dil
0x10f9f:   45 0f b6 c9                           	movzx r9d, r9b
0x10fa3:   44 89 0c 24                           	mov dword ptr [rsp], r9d
0x10fa7:   4d 89 c1                              	mov r9, r8
0x10faa:   44 0f b6 c1                           	movzx r8d, cl
0x10fae:   89 c1                                 	mov ecx, eax
0x10fb0:   48 8b 7d 10                           	mov rdi, qword ptr [rbp + 0x10]
0x10fb4:   e8 29 45 ff ff                        	call 0x54e2 <FUSBDTV_Cmd_MPU_I2CWrite>
0x10fb9:   3c 01                                 	cmp al, 1
0x10fbb:   0f 94 c0                              	sete al
0x10fbe:   c9                                    	leave 
0x10fbf:   c3                                    	ret 
; function: DTV_DecEncChip_I2C_Write at 0x10fc0 -- 0x10ff3
0x10fc0:   55                                    	push rbp
0x10fc1:   48 89 e5                              	mov rbp, rsp
0x10fc4:   48 83 ec 10                           	sub rsp, 0x10
0x10fc8:   e8 23 dc 02 00                        	call 0x3ebf0 <mcount>
0x10fcd:   80 bf 68 29 09 00 01                  	cmp byte ptr [rdi + 0x92968], 1
0x10fd4:   75 30                                 	jne 0x11006
0x10fd6:   45 0f b6 d0                           	movzx r10d, r8b
0x10fda:   0f b6 d2                              	movzx edx, dl
0x10fdd:   40 0f b6 f6                           	movzx esi, sil
0x10fe1:   0f b6 87 69 29 09 00                  	movzx eax, byte ptr [rdi + 0x92969]
0x10fe8:   48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0x10fef:   48 89 3c 24                           	mov qword ptr [rsp], rdi
; data inside code section at 0x10ff3 -- 0x10ff5
0x10ff3:   45 0f                                              |E.              |
; function: DTV_EnableEncryptionChipTSOutput at 0x10ff5 -- 0x11025
0x10ff5:   b6 c9                                 	mov dh, 0xc9
0x10ff7:   49 89 c8                              	mov r8, rcx
0x10ffa:   44 89 d1                              	mov ecx, r10d
0x10ffd:   89 c7                                 	mov edi, eax
0x10fff:   e8 79 ff ff ff                        	call 0x10f7d <bWriteMPUI2CData>
0x11004:   eb 1d                                 	jmp 0x11023 <DTV_EnableEncryptionChipTSOutput+0x2e>
0x11006:   0f b6 d2                              	movzx edx, dl
0x11009:   40 0f b6 f6                           	movzx esi, sil
0x1100d:   48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0x11014:   41 b9 00 00 00 00                     	mov r9d, 0
0x1101a:   45 0f b6 c0                           	movzx r8d, r8b
0x1101e:   e8 de bc 00 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x11023:   c9                                    	leave 
0x11024:   c3                                    	ret 
; function: DTV_EnableEncryptionChipTSOutput at 0x11025 -- 0x11126
0x11025:   55                                    	push rbp
0x11026:   48 89 e5                              	mov rbp, rsp
0x11029:   41 54                                 	push r12
0x1102b:   53                                    	push rbx
0x1102c:   48 83 ec 10                           	sub rsp, 0x10
0x11030:   e8 bb db 02 00                        	call 0x3ebf0 <mcount>
0x11035:   48 89 fb                              	mov rbx, rdi
0x11038:   4c 8b a7 38 1d 00 00                  	mov r12, qword ptr [rdi + 0x1d38]
0x1103f:   80 bf d8 15 00 00 01                  	cmp byte ptr [rdi + 0x15d8], 1
0x11046:   0f 85 fe 00 00 00                     	jne 0x1114a
0x1104c:   0f b6 87 8d 14 00 00                  	movzx eax, byte ptr [rdi + 0x148d]
0x11053:   3c 03                                 	cmp al, 3
0x11055:   74 0c                                 	je 0x11063 <DTV_EnableEncryptionChipTSOutput+0x3e>
0x11057:   3c 0f                                 	cmp al, 0xf
0x11059:   74 08                                 	je 0x11063 <DTV_EnableEncryptionChipTSOutput+0x3e>
0x1105b:   3c 04                                 	cmp al, 4
0x1105d:   74 04                                 	je 0x11063 <DTV_EnableEncryptionChipTSOutput+0x3e>
0x1105f:   3c 11                                 	cmp al, 0x11
0x11061:   75 2b                                 	jne 0x1108e <DTV_EnableEncryptionChipTSOutput+0x69>
0x11063:   80 bb e9 15 00 00 01                  	cmp byte ptr [rbx + 0x15e9], 1
0x1106a:   19 c0                                 	sbb eax, eax
0x1106c:   f7 d0                                 	not eax
0x1106e:   83 e0 10                              	and eax, 0x10
0x11071:   88 45 ef                              	mov byte ptr [rbp - 0x11], al
0x11074:   83 bb 70 1c 00 00 01                  	cmp dword ptr [rbx + 0x1c70], 1
0x1107b:   75 04                                 	jne 0x11081 <DTV_EnableEncryptionChipTSOutput+0x5c>
0x1107d:   80 4d ef 80                           	or byte ptr [rbp - 0x11], 0x80
0x11081:   80 bb ea 15 00 00 01                  	cmp byte ptr [rbx + 0x15ea], 1
0x11088:   75 04                                 	jne 0x1108e <DTV_EnableEncryptionChipTSOutput+0x69>
0x1108a:   80 4d ef 20                           	or byte ptr [rbp - 0x11], 0x20
0x1108e:   0f b6 83 8d 14 00 00                  	movzx eax, byte ptr [rbx + 0x148d]
0x11095:   3c 0f                                 	cmp al, 0xf
0x11097:   74 0c                                 	je 0x110a5 <DTV_EnableEncryptionChipTSOutput+0x80>
0x11099:   3c 04                                 	cmp al, 4
0x1109b:   74 08                                 	je 0x110a5 <DTV_EnableEncryptionChipTSOutput+0x80>
0x1109d:   3c 11                                 	cmp al, 0x11
0x1109f:   0f 85 81 00 00 00                     	jne 0x11126 <DTV_EnableEncryptionChipTSOutput+0xff>
0x110a5:   80 bb 30 1d 00 00 00                  	cmp byte ptr [rbx + 0x1d30], 0
0x110ac:   75 2d                                 	jne 0x110db <DTV_EnableEncryptionChipTSOutput+0xb6>
0x110ae:   48 8d 4d ef                           	lea rcx, [rbp - 0x11]
0x110b2:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x110b9:   41 b9 00 00 00 00                     	mov r9d, 0
0x110bf:   41 b8 01 00 00 00                     	mov r8d, 1
0x110c5:   ba 05 00 00 00                        	mov edx, 5
0x110ca:   48 89 df                              	mov rdi, rbx
0x110cd:   e8 ee fe ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x110d2:   80 bb 30 1d 00 00 00                  	cmp byte ptr [rbx + 0x1d30], 0
0x110d9:   74 6f                                 	je 0x1114a
0x110db:   b8 00 00 00 00                        	mov eax, 0
0x110e0:   49 8b 94 04 e0 04 00 00               	mov rdx, qword ptr [r12 + rax + 0x4e0]
0x110e8:   48 85 d2                              	test rdx, rdx
0x110eb:   74 09                                 	je 0x110f6 <DTV_EnableEncryptionChipTSOutput+0xd1>
0x110ed:   80 ba 60 0d 03 00 00                  	cmp byte ptr [rdx + 0x30d60], 0
0x110f4:   74 54                                 	je 0x1114a
0x110f6:   48 83 c0 08                           	add rax, 8
0x110fa:   48 83 f8 40                           	cmp rax, 0x40
0x110fe:   75 e0                                 	jne 0x110e0 <DTV_EnableEncryptionChipTSOutput+0xbb>
0x11100:   48 8d 4d ef                           	lea rcx, [rbp - 0x11]
0x11104:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x1110b:   41 b9 00 00 00 00                     	mov r9d, 0
0x11111:   41 b8 01 00 00 00                     	mov r8d, 1
0x11117:   ba 05 00 00 00                        	mov edx, 5
0x1111c:   48 89 df                              	mov rdi, rbx
0x1111f:   e8 9c fe ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x11124:   eb 24                                 	jmp 0x1114a
; data inside code section at 0x11126 -- 0x11128
0x11126:   48 8d                                              |H.              |
; function: SWResetSlowdownIC at 0x11128 -- 0x11158
0x11128:   4d ef                                 	out dx, eax
0x1112a:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x11131:   41 b9 00 00 00 00                     	mov r9d, 0
0x11137:   41 b8 01 00 00 00                     	mov r8d, 1
0x1113d:   ba 05 00 00 00                        	mov edx, 5
0x11142:   48 89 df                              	mov rdi, rbx
0x11145:   e8 76 fe ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x1114a:   b8 01 00 00 00                        	mov eax, 1
0x1114f:   48 83 c4 10                           	add rsp, 0x10
0x11153:   5b                                    	pop rbx
0x11154:   41 5c                                 	pop r12
0x11156:   c9                                    	leave 
0x11157:   c3                                    	ret 
; function: SWResetSlowdownIC at 0x11158 -- 0x111b3
0x11158:   55                                    	push rbp
0x11159:   48 89 e5                              	mov rbp, rsp
0x1115c:   48 83 ec 10                           	sub rsp, 0x10
0x11160:   e8 8b da 02 00                        	call 0x3ebf0 <mcount>
0x11165:   b8 00 00 00 00                        	mov eax, 0
0x1116a:   48 85 ff                              	test rdi, rdi
0x1116d:   74 75                                 	je 0x111e4
0x1116f:   48 ba ff 00 00 00 01 00 00 00         	movabs rdx, 0x1000000ff
0x11179:   48 23 97 68 29 09 00                  	and rdx, qword ptr [rdi + 0x92968]
0x11180:   48 b8 01 00 00 00 01 00 00 00         	movabs rax, 0x100000001
0x1118a:   48 39 c2                              	cmp rdx, rax
0x1118d:   75 2b                                 	jne 0x111ba
0x1118f:   c6 45 f0 d2                           	mov byte ptr [rbp - 0x10], 0xd2
0x11193:   40 88 75 f1                           	mov byte ptr [rbp - 0xf], sil
0x11197:   48 8d 4d f0                           	lea rcx, [rbp - 0x10]
0x1119b:   0f b6 b7 69 29 09 00                  	movzx esi, byte ptr [rdi + 0x92969]
0x111a2:   41 b9 00 00 00 00                     	mov r9d, 0
0x111a8:   41 b8 02 00 00 00                     	mov r8d, 2
0x111ae:   ba 0b 00 00 00                        	mov edx, 0xb
; data inside code section at 0x111b3 -- 0x111b6
0x111b3:   e8 08 fe                                           |...             |
; function: SetSlowdownIC at 0x111b6 -- 0x111e6
; function: SetSlowdownIC at 0x111e6 -- 0x112bf
0x111e6:   55                                    	push rbp
0x111e7:   48 89 e5                              	mov rbp, rsp
0x111ea:   48 83 ec 30                           	sub rsp, 0x30
0x111ee:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x111f2:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x111f6:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x111fa:   e8 f1 d9 02 00                        	call 0x3ebf0 <mcount>
0x111ff:   44 89 cb                              	mov ebx, r9d
0x11202:   b8 00 00 00 00                        	mov eax, 0
0x11207:   48 85 ff                              	test rdi, rdi
0x1120a:   0f 84 d4 00 00 00                     	je 0x112e4
0x11210:   4c 8b af 38 1d 00 00                  	mov r13, qword ptr [rdi + 0x1d38]
0x11217:   49 b9 ff 00 00 00 01 00 00 00         	movabs r9, 0x1000000ff
0x11221:   4c 23 8f 68 29 09 00                  	and r9, qword ptr [rdi + 0x92968]
0x11228:   48 b8 01 00 00 00 01 00 00 00         	movabs rax, 0x100000001
0x11232:   49 39 c1                              	cmp r9, rax
0x11235:   75 43                                 	jne 0x1127a <SetSlowdownIC+0x94>
0x11237:   c6 45 d0 d2                           	mov byte ptr [rbp - 0x30], 0xd2
0x1123b:   88 55 d1                              	mov byte ptr [rbp - 0x2f], dl
0x1123e:   40 88 75 d2                           	mov byte ptr [rbp - 0x2e], sil
0x11242:   80 f9 01                              	cmp cl, 1
0x11245:   19 c0                                 	sbb eax, eax
0x11247:   83 e0 03                              	and eax, 3
0x1124a:   88 45 d3                              	mov byte ptr [rbp - 0x2d], al
0x1124d:   45 84 c0                              	test r8b, r8b
0x11250:   0f 94 45 d4                           	sete byte ptr [rbp - 0x2c]
0x11254:   88 5d d5                              	mov byte ptr [rbp - 0x2b], bl
0x11257:   48 8d 4d d0                           	lea rcx, [rbp - 0x30]
0x1125b:   0f b6 b7 69 29 09 00                  	movzx esi, byte ptr [rdi + 0x92969]
0x11262:   41 b9 00 00 00 00                     	mov r9d, 0
0x11268:   41 b8 06 00 00 00                     	mov r8d, 6
0x1126e:   ba 0a 00 00 00                        	mov edx, 0xa
0x11273:   e8 48 fd ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x11278:   eb 6a                                 	jmp 0x112e4
0x1127a:   c1 e6 04                              	shl esi, 4
0x1127d:   40 88 75 df                           	mov byte ptr [rbp - 0x21], sil
0x11281:   84 c9                                 	test cl, cl
0x11283:   75 07                                 	jne 0x1128c <SetSlowdownIC+0xa6>
0x11285:   83 ce 03                              	or esi, 3
0x11288:   40 88 75 df                           	mov byte ptr [rbp - 0x21], sil
0x1128c:   45 84 c0                              	test r8b, r8b
0x1128f:   75 04                                 	jne 0x11295 <SetSlowdownIC+0xaf>
0x11291:   80 4d df 04                           	or byte ptr [rbp - 0x21], 4
0x11295:   41 89 d4                              	mov r12d, edx
0x11298:   48 8d 4d df                           	lea rcx, [rbp - 0x21]
0x1129c:   0f b6 d2                              	movzx edx, dl
0x1129f:   41 b9 00 00 00 00                     	mov r9d, 0
0x112a5:   41 b8 01 00 00 00                     	mov r8d, 1
0x112ab:   be d2 00 00 00                        	mov esi, 0xd2
0x112b0:   4c 89 ef                              	mov rdi, r13
0x112b3:   e8 49 ba 00 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x112b8:   84 c0                                 	test al, al
0x112ba:   74 28                                 	je 0x112e4
0x112bc:   88 5d df                              	mov byte ptr [rbp - 0x21], bl
; data inside code section at 0x112bf -- 0x112c2
0x112bf:   48 8d 4d                                           |H.M             |
; function: DTV_SetTunerFreq at 0x112c2 -- 0x112f2
0x112c2:   df 41 83                              	fild word ptr [rcx - 0x7d]
0x112c5:   c4 03 41 0f b6 d4 41 b9 00 00         	vpalignr xmm14, xmm7, xmmword ptr [r14 + 0xb941d4], 0
0x112cf:   00 00                                 	add byte ptr [rax], al
0x112d1:   41 b8 01 00 00 00                     	mov r8d, 1
0x112d7:   be d2 00 00 00                        	mov esi, 0xd2
0x112dc:   4c 89 ef                              	mov rdi, r13
0x112df:   e8 1d ba 00 00                        	call 0x1cd01 <TLIB_I2C_Write>
0x112e4:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x112e8:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x112ec:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x112f0:   c9                                    	leave 
0x112f1:   c3                                    	ret 
; function: DTV_SetTunerFreq at 0x112f2 -- 0x11695
0x112f2:   55                                    	push rbp
0x112f3:   48 89 e5                              	mov rbp, rsp
0x112f6:   48 83 ec 40                           	sub rsp, 0x40
0x112fa:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x112fe:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x11302:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x11306:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1130a:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1130e:   e8 dd d8 02 00                        	call 0x3ebf0 <mcount>
0x11313:   48 89 fb                              	mov rbx, rdi
0x11316:   49 89 f6                              	mov r14, rsi
0x11319:   41 89 d7                              	mov r15d, edx
0x1131c:   4c 8b a7 38 1d 00 00                  	mov r12, qword ptr [rdi + 0x1d38]
0x11323:   44 0f b6 af 30 1d 00 00               	movzx r13d, byte ptr [rdi + 0x1d30]
0x1132b:   49 63 c5                              	movsxd rax, r13d
0x1132e:   49 8b 84 c4 88 04 00 00               	mov rax, qword ptr [r12 + rax*8 + 0x488]
0x11336:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x1133a:   b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0x1133f:   83 bf 40 1d 00 00 00                  	cmp dword ptr [rdi + 0x1d40], 0
0x11346:   0f 84 66 03 00 00                     	je 0x116b2
0x1134c:   80 bf 60 0d 03 00 01                  	cmp byte ptr [rdi + 0x30d60], 1
0x11353:   75 14                                 	jne 0x11369 <DTV_SetTunerFreq+0x77>
0x11355:   bf 90 01 00 00                        	mov edi, 0x190
0x1135a:   e8 42 b8 00 00                        	call 0x1cba1 <TLIB_Delay>
0x1135f:   b8 01 00 00 00                        	mov eax, 1
0x11364:   e9 49 03 00 00                        	jmp 0x116b2
0x11369:   41 8d 47 fa                           	lea eax, [r15 - 6]
0x1136d:   3c 02                                 	cmp al, 2
0x1136f:   0f 87 31 03 00 00                     	ja 0x116a6
0x11375:   48 81 fe a7 37 07 00                  	cmp rsi, 0x737a7
0x1137c:   76 09                                 	jbe 0x11387 <DTV_SetTunerFreq+0x95>
0x1137e:   80 fa 06                              	cmp dl, 6
0x11381:   0f 85 1f 03 00 00                     	jne 0x116a6
0x11387:   ba 01 00 00 00                        	mov edx, 1
0x1138c:   be 01 00 00 00                        	mov esi, 1
0x11391:   48 89 df                              	mov rdi, rbx
0x11394:   e8 60 fa ff ff                        	call 0x10df9 <TunerReset>
0x11399:   89 c2                                 	mov edx, eax
0x1139b:   b8 fd ff ff ff                        	mov eax, 0xfffffffd
0x113a0:   83 fa 01                              	cmp edx, 1
0x113a3:   0f 85 09 03 00 00                     	jne 0x116b2
0x113a9:   80 bb e4 0d 03 00 00                  	cmp byte ptr [rbx + 0x30de4], 0
0x113b0:   74 22                                 	je 0x113d4 <DTV_SetTunerFreq+0xe2>
0x113b2:   49 63 c5                              	movsxd rax, r13d
0x113b5:   41 80 bc 04 80 04 00 00 01            	cmp byte ptr [r12 + rax + 0x480], 1
0x113be:   75 14                                 	jne 0x113d4 <DTV_SetTunerFreq+0xe2>
0x113c0:   48 83 7d c8 00                        	cmp qword ptr [rbp - 0x38], 0
0x113c5:   74 0d                                 	je 0x113d4 <DTV_SetTunerFreq+0xe2>
0x113c7:   be 00 00 00 00                        	mov esi, 0
0x113cc:   48 89 df                              	mov rdi, rbx
0x113cf:   e8 ed dc ff ff                        	call 0xf0c1 <DTV_StartStop_Enc>
0x113d4:   bf 32 00 00 00                        	mov edi, 0x32
0x113d9:   e8 87 40 00 00                        	call 0x15465 <vUSB_Wait>
0x113de:   49 63 c5                              	movsxd rax, r13d
0x113e1:   41 c6 84 04 20 05 00 00 01            	mov byte ptr [r12 + rax + 0x520], 1
0x113ea:   0f b6 83 30 1d 00 00                  	movzx eax, byte ptr [rbx + 0x1d30]
0x113f1:   48 6b c0 50                           	imul rax, rax, 0x50
0x113f5:   49 c7 84 04 68 59 00 00 01 00 00 00   	mov qword ptr [r12 + rax + 0x5968], 1
0x11401:   0f b6 83 30 1d 00 00                  	movzx eax, byte ptr [rbx + 0x1d30]
0x11408:   48 6b c0 50                           	imul rax, rax, 0x50
0x1140c:   49 c7 84 04 70 59 00 00 00 00 00 00   	mov qword ptr [r12 + rax + 0x5970], 0
0x11418:   0f b6 83 30 1d 00 00                  	movzx eax, byte ptr [rbx + 0x1d30]
0x1141f:   48 6b c0 50                           	imul rax, rax, 0x50
0x11423:   49 c7 84 04 78 59 00 00 17 00 00 00   	mov qword ptr [r12 + rax + 0x5978], 0x17
0x1142f:   41 0f b6 d7                           	movzx edx, r15b
0x11433:   4c 89 f6                              	mov rsi, r14
0x11436:   48 89 df                              	mov rdi, rbx
0x11439:   e8 94 b5 00 00                        	call 0x1c9d2 <Tnim_AcquireFrequency>
0x1143e:   3c 01                                 	cmp al, 1
0x11440:   75 47                                 	jne 0x11489 <DTV_SetTunerFreq+0x197>
0x11442:   4c 89 b3 a8 29 09 00                  	mov qword ptr [rbx + 0x929a8], r14
0x11449:   c7 83 b0 29 09 00 00 00 00 00         	mov dword ptr [rbx + 0x929b0], 0
0x11453:   80 bb bc fa 08 00 00                  	cmp byte ptr [rbx + 0x8fabc], 0
0x1145a:   74 2d                                 	je 0x11489 <DTV_SetTunerFreq+0x197>
0x1145c:   49 81 fe b7 8b bb 00                  	cmp r14, 0xbb8bb7
0x11463:   76 13                                 	jbe 0x11478 <DTV_SetTunerFreq+0x186>
0x11465:   48 8b bb b0 fa 08 00                  	mov rdi, qword ptr [rbx + 0x8fab0]
0x1146c:   be 01 00 00 00                        	mov esi, 1
0x11471:   e8 6f 4d 00 00                        	call 0x161e5 <TS_EnableProcProgramID>
0x11476:   eb 11                                 	jmp 0x11489 <DTV_SetTunerFreq+0x197>
0x11478:   48 8b bb b0 fa 08 00                  	mov rdi, qword ptr [rbx + 0x8fab0]
0x1147f:   be 00 00 00 00                        	mov esi, 0
0x11484:   e8 5c 4d 00 00                        	call 0x161e5 <TS_EnableProcProgramID>
0x11489:   49 63 c5                              	movsxd rax, r13d
0x1148c:   41 c6 84 04 20 05 00 00 00            	mov byte ptr [r12 + rax + 0x520], 0
0x11495:   83 bb 70 1c 00 00 00                  	cmp dword ptr [rbx + 0x1c70], 0
0x1149c:   75 36                                 	jne 0x114d4 <DTV_SetTunerFreq+0x1e2>
0x1149e:   41 0f b6 94 24 b0 4f 00 00            	movzx edx, byte ptr [r12 + 0x4fb0]
0x114a7:   c1 e2 08                              	shl edx, 8
0x114aa:   41 0f b6 84 24 af 4f 00 00            	movzx eax, byte ptr [r12 + 0x4faf]
0x114b3:   09 c2                                 	or edx, eax
0x114b5:   41 0f b6 8c 24 12 55 00 00            	movzx ecx, byte ptr [r12 + 0x5512]
0x114be:   c1 e1 08                              	shl ecx, 8
0x114c1:   41 0f b6 84 24 11 55 00 00            	movzx eax, byte ptr [r12 + 0x5511]
0x114ca:   09 c8                                 	or eax, ecx
0x114cc:   31 d0                                 	xor eax, edx
0x114ce:   89 83 c0 fa 08 00                     	mov dword ptr [rbx + 0x8fac0], eax
0x114d4:   48 89 df                              	mov rdi, rbx
0x114d7:   e8 bd b4 00 00                        	call 0x1c999 <Tnim_AcqInit>
0x114dc:   80 bb 78 29 09 00 01                  	cmp byte ptr [rbx + 0x92978], 1
0x114e3:   0f 85 fa 00 00 00                     	jne 0x115e3 <DTV_SetTunerFreq+0x2f1>
0x114e9:   80 bb 7e fd 08 00 01                  	cmp byte ptr [rbx + 0x8fd7e], 1
0x114f0:   0f 85 ed 00 00 00                     	jne 0x115e3 <DTV_SetTunerFreq+0x2f1>
0x114f6:   80 bb 30 1d 00 00 01                  	cmp byte ptr [rbx + 0x1d30], 1
0x114fd:   19 c0                                 	sbb eax, eax
0x114ff:   83 c0 01                              	add eax, 1
0x11502:   89 45 c4                              	mov dword ptr [rbp - 0x3c], eax
0x11505:   80 bb 30 1d 00 00 01                  	cmp byte ptr [rbx + 0x1d30], 1
0x1150c:   45 19 ff                              	sbb r15d, r15d
0x1150f:   41 83 c7 02                           	add r15d, 2
0x11513:   bf 0a 00 00 00                        	mov edi, 0xa
0x11518:   e8 48 3f 00 00                        	call 0x15465 <vUSB_Wait>
0x1151d:   41 80 bc 24 99 57 00 00 00            	cmp byte ptr [r12 + 0x5799], 0
0x11526:   75 59                                 	jne 0x11581 <DTV_SetTunerFreq+0x28f>
0x11528:   41 b9 47 00 00 00                     	mov r9d, 0x47
0x1152e:   41 b8 01 00 00 00                     	mov r8d, 1
0x11534:   b9 01 00 00 00                        	mov ecx, 1
0x11539:   44 89 fa                              	mov edx, r15d
0x1153c:   8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x1153f:   48 89 df                              	mov rdi, rbx
0x11542:   e8 9f fc ff ff                        	call 0x111e6 <SetSlowdownIC>
0x11547:   84 c0                                 	test al, al
0x11549:   0f 84 5e 01 00 00                     	je 0x116ad
0x1154f:   bf 0a 00 00 00                        	mov edi, 0xa
0x11554:   e8 0c 3f 00 00                        	call 0x15465 <vUSB_Wait>
0x11559:   41 b9 47 00 00 00                     	mov r9d, 0x47
0x1155f:   41 b8 01 00 00 00                     	mov r8d, 1
0x11565:   b9 00 00 00 00                        	mov ecx, 0
0x1156a:   44 89 fa                              	mov edx, r15d
0x1156d:   8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x11570:   48 89 df                              	mov rdi, rbx
0x11573:   e8 6e fc ff ff                        	call 0x111e6 <SetSlowdownIC>
0x11578:   84 c0                                 	test al, al
0x1157a:   75 5d                                 	jne 0x115d9 <DTV_SetTunerFreq+0x2e7>
0x1157c:   e9 2c 01 00 00                        	jmp 0x116ad
0x11581:   41 b9 47 00 00 00                     	mov r9d, 0x47
0x11587:   41 b8 01 00 00 00                     	mov r8d, 1
0x1158d:   b9 00 00 00 00                        	mov ecx, 0
0x11592:   44 89 fa                              	mov edx, r15d
0x11595:   8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x11598:   48 89 df                              	mov rdi, rbx
0x1159b:   e8 46 fc ff ff                        	call 0x111e6 <SetSlowdownIC>
0x115a0:   84 c0                                 	test al, al
0x115a2:   0f 84 05 01 00 00                     	je 0x116ad
0x115a8:   bf 0a 00 00 00                        	mov edi, 0xa
0x115ad:   e8 b3 3e 00 00                        	call 0x15465 <vUSB_Wait>
0x115b2:   41 b9 47 00 00 00                     	mov r9d, 0x47
0x115b8:   41 b8 01 00 00 00                     	mov r8d, 1
0x115be:   b9 01 00 00 00                        	mov ecx, 1
0x115c3:   44 89 fa                              	mov edx, r15d
0x115c6:   8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x115c9:   48 89 df                              	mov rdi, rbx
0x115cc:   e8 15 fc ff ff                        	call 0x111e6 <SetSlowdownIC>
0x115d1:   84 c0                                 	test al, al
0x115d3:   0f 84 d4 00 00 00                     	je 0x116ad
0x115d9:   bf 0a 00 00 00                        	mov edi, 0xa
0x115de:   e8 82 3e 00 00                        	call 0x15465 <vUSB_Wait>
0x115e3:   0f b6 83 8d 14 00 00                  	movzx eax, byte ptr [rbx + 0x148d]
0x115ea:   3c 03                                 	cmp al, 3
0x115ec:   74 0c                                 	je 0x115fa <DTV_SetTunerFreq+0x308>
0x115ee:   3c 0f                                 	cmp al, 0xf
0x115f0:   74 08                                 	je 0x115fa <DTV_SetTunerFreq+0x308>
0x115f2:   3c 04                                 	cmp al, 4
0x115f4:   74 04                                 	je 0x115fa <DTV_SetTunerFreq+0x308>
0x115f6:   3c 11                                 	cmp al, 0x11
0x115f8:   75 13                                 	jne 0x1160d <DTV_SetTunerFreq+0x31b>
0x115fa:   49 81 fe 77 f2 b2 00                  	cmp r14, 0xb2f277
0x11601:   76 0a                                 	jbe 0x1160d <DTV_SetTunerFreq+0x31b>
0x11603:   bf f4 01 00 00                        	mov edi, 0x1f4
0x11608:   e8 58 3e 00 00                        	call 0x15465 <vUSB_Wait>
0x1160d:   80 3b 00                              	cmp byte ptr [rbx], 0
0x11610:   0f 95 c1                              	setne cl
0x11613:   0f b6 c9                              	movzx ecx, cl
0x11616:   ba 01 00 00 00                        	mov edx, 1
0x1161b:   44 89 ee                              	mov esi, r13d
0x1161e:   4c 89 e7                              	mov rdi, r12
0x11621:   e8 25 38 00 00                        	call 0x14e4b <USB_FilterReset>
0x11626:   83 f8 01                              	cmp eax, 1
0x11629:   74 19                                 	je 0x11644 <DTV_SetTunerFreq+0x352>
0x1162b:   ba ff 1f 00 00                        	mov edx, 0x1fff
0x11630:   be ff 1f 00 00                        	mov esi, 0x1fff
0x11635:   48 89 df                              	mov rdi, rbx
0x11638:   e8 7f 90 ff ff                        	call 0xa6bc <DTV_SetPidFilterBoundary>
0x1163d:   b8 fa ff ff ff                        	mov eax, 0xfffffffa
0x11642:   eb 6e                                 	jmp 0x116b2
0x11644:   ba ff 1f 00 00                        	mov edx, 0x1fff
0x11649:   be ff 1f 00 00                        	mov esi, 0x1fff
0x1164e:   48 89 df                              	mov rdi, rbx
0x11651:   e8 66 90 ff ff                        	call 0xa6bc <DTV_SetPidFilterBoundary>
0x11656:   49 63 c5                              	movsxd rax, r13d
0x11659:   41 80 bc 04 80 04 00 00 01            	cmp byte ptr [r12 + rax + 0x480], 1
0x11662:   75 1d                                 	jne 0x11681 <DTV_SetTunerFreq+0x38f>
0x11664:   48 83 7d c8 00                        	cmp qword ptr [rbp - 0x38], 0
0x11669:   74 16                                 	je 0x11681 <DTV_SetTunerFreq+0x38f>
0x1166b:   44 89 ee                              	mov esi, r13d
0x1166e:   4c 89 e7                              	mov rdi, r12
0x11671:   e8 72 25 ff ff                        	call 0x3be8 <Hardware_StopTSStream>
0x11676:   44 89 ee                              	mov esi, r13d
0x11679:   4c 89 e7                              	mov rdi, r12
0x1167c:   e8 14 27 ff ff                        	call 0x3d95 <Hardware_StartTSStream>
0x11681:   c6 83 bd fa 08 00 01                  	mov byte ptr [rbx + 0x8fabd], 1
0x11688:   be 00 00 00 00                        	mov esi, 0
0x1168d:   48 89 df                              	mov rdi, rbx
0x11690:   e8 61 a8 ff ff                        	call 0xbef6 <DTV_SetIsStreamScramble>
; data inside code section at 0x11695 -- 0x11698
0x11695:   c7 83 48                                           |..H             |
; function: InitSlowDownIC at 0x11698 -- 0x116c8
0x11698:   1d 00 00 00 00                        	sbb eax, 0
0x1169d:   00 00                                 	add byte ptr [rax], al
0x1169f:   b8 01 00 00 00                        	mov eax, 1
0x116a4:   eb 0c                                 	jmp 0x116b2 <InitSlowDownIC+0x1a>
0x116a6:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x116ab:   eb 05                                 	jmp 0x116b2 <InitSlowDownIC+0x1a>
0x116ad:   b8 00 00 00 00                        	mov eax, 0
0x116b2:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x116b6:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x116ba:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x116be:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x116c2:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x116c6:   c9                                    	leave 
0x116c7:   c3                                    	ret 
; function: InitSlowDownIC at 0x116c8 -- 0x116f5
0x116c8:   55                                    	push rbp
0x116c9:   48 89 e5                              	mov rbp, rsp
0x116cc:   e8 1f d5 02 00                        	call 0x3ebf0 <mcount>
0x116d1:   48 8b 8f 38 1d 00 00                  	mov rcx, qword ptr [rdi + 0x1d38]
0x116d8:   0f b6 97 30 1d 00 00                  	movzx edx, byte ptr [rdi + 0x1d30]
0x116df:   b8 01 00 00 00                        	mov eax, 1
0x116e4:   80 bf 7e fd 08 00 00                  	cmp byte ptr [rdi + 0x8fd7e], 0
0x116eb:   74 37                                 	je 0x11724
0x116ed:   b8 00 00 00 00                        	mov eax, 0
0x116f2:   48 85 c9                              	test rcx, rcx
; data inside code section at 0x116f5 -- 0x116f6
0x116f5:   74                                                 |t               |
; function: bBCardUninit at 0x116f6 -- 0x11726
0x116f6:   2d 80 fa 01 19                        	sub eax, 0x1901fa80
0x116fb:   f6 83 c6 01 80 fa 01                  	test byte ptr [rbx - 0x57ffe3a], 1
0x11702:   19 d2                                 	sbb edx, edx
0x11704:   83 c2 02                              	add edx, 2
0x11707:   0f b6 89 99 57 00 00                  	movzx ecx, byte ptr [rcx + 0x5799]
0x1170e:   41 b9 47 00 00 00                     	mov r9d, 0x47
0x11714:   41 b8 01 00 00 00                     	mov r8d, 1
0x1171a:   e8 c7 fa ff ff                        	call 0x111e6 <SetSlowdownIC>
0x1171f:   84 c0                                 	test al, al
0x11721:   0f 95 c0                              	setne al
0x11724:   c9                                    	leave 
0x11725:   c3                                    	ret 
; function: bBCardUninit at 0x11726 -- 0x1183e
0x11726:   55                                    	push rbp
0x11727:   48 89 e5                              	mov rbp, rsp
0x1172a:   41 54                                 	push r12
0x1172c:   53                                    	push rbx
0x1172d:   48 83 ec 10                           	sub rsp, 0x10
0x11731:   e8 ba d4 02 00                        	call 0x3ebf0 <mcount>
0x11736:   48 8b 77 40                           	mov rsi, qword ptr [rdi + 0x40]
0x1173a:   0f b6 8f 81 14 00 00                  	movzx ecx, byte ptr [rdi + 0x1481]
0x11741:   48 8b 5f 48                           	mov rbx, qword ptr [rdi + 0x48]
0x11745:   48 89 f2                              	mov rdx, rsi
0x11748:   b8 00 00 00 00                        	mov eax, 0
0x1174d:   80 be c1 54 00 00 00                  	cmp byte ptr [rsi + 0x54c1], 0
0x11754:   75 16                                 	jne 0x1176c <bBCardUninit+0x46>
0x11756:   0f b6 c9                              	movzx ecx, cl
0x11759:   c6 84 0e c2 54 00 00 00               	mov byte ptr [rsi + rcx + 0x54c2], 0
0x11761:   41 bc 01 00 00 00                     	mov r12d, 1
0x11767:   e9 ca 00 00 00                        	jmp 0x11836 <bBCardUninit+0x110>
0x1176c:   38 c8                                 	cmp al, cl
0x1176e:   74 09                                 	je 0x11779 <bBCardUninit+0x53>
0x11770:   80 ba c2 54 00 00 01                  	cmp byte ptr [rdx + 0x54c2], 1
0x11777:   74 10                                 	je 0x11789 <bBCardUninit+0x63>
0x11779:   83 c0 01                              	add eax, 1
0x1177c:   48 83 c2 01                           	add rdx, 1
0x11780:   3c 08                                 	cmp al, 8
0x11782:   75 e8                                 	jne 0x1176c <bBCardUninit+0x46>
0x11784:   e9 b9 00 00 00                        	jmp 0x11842
0x11789:   0f b6 c9                              	movzx ecx, cl
0x1178c:   c6 84 0e c2 54 00 00 00               	mov byte ptr [rsi + rcx + 0x54c2], 0
0x11794:   41 bc 01 00 00 00                     	mov r12d, 1
0x1179a:   e9 97 00 00 00                        	jmp 0x11836 <bBCardUninit+0x110>
0x1179f:   48 c7 86 d0 54 00 00 00 00 00 00      	mov qword ptr [rsi + 0x54d0], 0
0x117aa:   48 c7 87 20 04 00 00 00 00 00 00      	mov qword ptr [rdi + 0x420], 0
0x117b5:   0f b6 83 8d 14 00 00                  	movzx eax, byte ptr [rbx + 0x148d]
0x117bc:   3c 0f                                 	cmp al, 0xf
0x117be:   74 08                                 	je 0x117c8 <bBCardUninit+0xa2>
0x117c0:   3c 04                                 	cmp al, 4
0x117c2:   74 04                                 	je 0x117c8 <bBCardUninit+0xa2>
0x117c4:   3c 11                                 	cmp al, 0x11
0x117c6:   75 0f                                 	jne 0x117d7 <bBCardUninit+0xb1>
0x117c8:   41 bc 01 00 00 00                     	mov r12d, 1
0x117ce:   80 bb 30 1d 00 00 00                  	cmp byte ptr [rbx + 0x1d30], 0
0x117d5:   75 5f                                 	jne 0x11836 <bBCardUninit+0x110>
0x117d7:   c6 45 e0 00                           	mov byte ptr [rbp - 0x20], 0
0x117db:   4c 8d 65 e0                           	lea r12, [rbp - 0x20]
0x117df:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x117e6:   41 b9 00 00 00 00                     	mov r9d, 0
0x117ec:   41 b8 01 00 00 00                     	mov r8d, 1
0x117f2:   4c 89 e1                              	mov rcx, r12
0x117f5:   ba 04 00 00 00                        	mov edx, 4
0x117fa:   48 89 df                              	mov rdi, rbx
0x117fd:   e8 be f7 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x11802:   c6 45 e0 00                           	mov byte ptr [rbp - 0x20], 0
0x11806:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x1180d:   41 b9 00 00 00 00                     	mov r9d, 0
0x11813:   41 b8 01 00 00 00                     	mov r8d, 1
0x11819:   4c 89 e1                              	mov rcx, r12
0x1181c:   ba 00 00 00 00                        	mov edx, 0
0x11821:   48 89 df                              	mov rdi, rbx
0x11824:   e8 97 f7 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x11829:   41 89 c4                              	mov r12d, eax
0x1182c:   bf 32 00 00 00                        	mov edi, 0x32
0x11831:   e8 6b b3 00 00                        	call 0x1cba1 <TLIB_Delay>
0x11836:   44 89 e0                              	mov eax, r12d
0x11839:   48 83 c4 10                           	add rsp, 0x10
0x1183d:   5b                                    	pop rbx
; function: DTV_UnInit at 0x1183e -- 0x1186e
0x1183e:   41 5c                                 	pop r12
0x11840:   c9                                    	leave 
0x11841:   c3                                    	ret 
0x11842:   0f b6 c9                              	movzx ecx, cl
0x11845:   c6 84 0e c2 54 00 00 00               	mov byte ptr [rsi + rcx + 0x54c2], 0
0x1184d:   c6 86 c1 54 00 00 00                  	mov byte ptr [rsi + 0x54c1], 0
0x11854:   c6 86 c0 54 00 00 01                  	mov byte ptr [rsi + 0x54c0], 1
0x1185b:   48 83 be d0 54 00 00 00               	cmp qword ptr [rsi + 0x54d0], 0
0x11863:   0f 85 36 ff ff ff                     	jne 0x1179f
0x11869:   e9 3c ff ff ff                        	jmp 0x117aa
; function: DTV_UnInit at 0x1186e -- 0x1196e
0x1186e:   55                                    	push rbp
0x1186f:   48 89 e5                              	mov rbp, rsp
0x11872:   48 83 ec 30                           	sub rsp, 0x30
0x11876:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x1187a:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x1187e:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x11882:   e8 69 d3 02 00                        	call 0x3ebf0 <mcount>
0x11887:   48 89 fb                              	mov rbx, rdi
0x1188a:   4c 8b af 38 1d 00 00                  	mov r13, qword ptr [rdi + 0x1d38]
0x11891:   44 0f b6 a7 30 1d 00 00               	movzx r12d, byte ptr [rdi + 0x1d30]
0x11899:   8b 97 40 1d 00 00                     	mov edx, dword ptr [rdi + 0x1d40]
0x1189f:   b8 f6 ff ff ff                        	mov eax, 0xfffffff6
0x118a4:   85 d2                                 	test edx, edx
0x118a6:   0f 84 e5 00 00 00                     	je 0x11991
0x118ac:   b8 01 00 00 00                        	mov eax, 1
0x118b1:   83 fa 01                              	cmp edx, 1
0x118b4:   0f 85 d7 00 00 00                     	jne 0x11991
0x118ba:   c7 87 40 1d 00 00 00 00 00 00         	mov dword ptr [rdi + 0x1d40], 0
0x118c4:   80 bf d8 15 00 00 01                  	cmp byte ptr [rdi + 0x15d8], 1
0x118cb:   75 7f                                 	jne 0x1194c <DTV_UnInit+0xde>
0x118cd:   c6 45 df 00                           	mov byte ptr [rbp - 0x21], 0
0x118d1:   48 8d 4d df                           	lea rcx, [rbp - 0x21]
0x118d5:   0f b6 b7 ac fc 08 00                  	movzx esi, byte ptr [rdi + 0x8fcac]
0x118dc:   41 b9 00 00 00 00                     	mov r9d, 0
0x118e2:   41 b8 01 00 00 00                     	mov r8d, 1
0x118e8:   b2 80                                 	mov dl, 0x80
0x118ea:   e8 d1 f6 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x118ef:   80 bb d8 15 00 00 01                  	cmp byte ptr [rbx + 0x15d8], 1
0x118f6:   74 24                                 	je 0x1191c <DTV_UnInit+0xae>
0x118f8:   48 8d 4d df                           	lea rcx, [rbp - 0x21]
0x118fc:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x11903:   41 b9 00 00 00 00                     	mov r9d, 0
0x11909:   41 b8 01 00 00 00                     	mov r8d, 1
0x1190f:   ba 80 00 00 00                        	mov edx, 0x80
0x11914:   48 89 df                              	mov rdi, rbx
0x11917:   e8 a4 f6 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x1191c:   48 8d 7b 08                           	lea rdi, [rbx + 8]
0x11920:   e8 01 fe ff ff                        	call 0x11726 <bBCardUninit>
0x11925:   80 bb bc fa 08 00 01                  	cmp byte ptr [rbx + 0x8fabc], 1
0x1192c:   75 1e                                 	jne 0x1194c <DTV_UnInit+0xde>
0x1192e:   c6 83 bc fa 08 00 00                  	mov byte ptr [rbx + 0x8fabc], 0
0x11935:   48 8b bb b0 fa 08 00                  	mov rdi, qword ptr [rbx + 0x8fab0]
0x1193c:   e8 3d 48 00 00                        	call 0x1617e <TS_Destroy>
0x11941:   48 c7 83 b0 fa 08 00 00 00 00 00      	mov qword ptr [rbx + 0x8fab0], 0
0x1194c:   48 8b bb 98 fc 08 00                  	mov rdi, qword ptr [rbx + 0x8fc98]
0x11953:   48 85 ff                              	test rdi, rdi
0x11956:   74 05                                 	je 0x1195d <DTV_UnInit+0xef>
0x11958:   e8 fb 47 ff ff                        	call 0x6158 <FUSB_ExFreePool>
0x1195d:   48 8b bb a0 fc 08 00                  	mov rdi, qword ptr [rbx + 0x8fca0]
0x11964:   48 85 ff                              	test rdi, rdi
0x11967:   74 05                                 	je 0x1196e <DTV_UnInit+0xfb>
0x11969:   e8 ea 47 ff ff                        	call 0x6158 <FUSB_ExFreePool>
; data inside code section at 0x1196e -- 0x1196f
0x1196e:   41                                                 |A               |
; function: bReadMPUI2CData at 0x1196f -- 0x1199f
0x1196f:   0f b6 f4                              	movzx esi, ah
0x11972:   ba 00 00 00 00                        	mov edx, 0
0x11977:   4c 89 ef                              	mov rdi, r13
0x1197a:   e8 b1 26 ff ff                        	call 0x4030 <FUSBDTV_Cmd_StartDSC>
0x1197f:   be 00 00 00 00                        	mov esi, 0
0x11984:   48 89 df                              	mov rdi, rbx
0x11987:   e8 fc f3 ff ff                        	call 0x10d88 <DTV_TunerPower>
0x1198c:   b8 01 00 00 00                        	mov eax, 1
0x11991:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x11995:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x11999:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x1199d:   c9                                    	leave 
0x1199e:   c3                                    	ret 
; function: bReadMPUI2CData at 0x1199f -- 0x119de
0x1199f:   55                                    	push rbp
0x119a0:   48 89 e5                              	mov rbp, rsp
0x119a3:   48 83 ec 10                           	sub rsp, 0x10
0x119a7:   e8 44 d2 02 00                        	call 0x3ebf0 <mcount>
0x119ac:   4c 8b 55 10                           	mov r10, qword ptr [rbp + 0x10]
0x119b0:   b8 00 00 00 00                        	mov eax, 0
0x119b5:   80 f9 20                              	cmp cl, 0x20
0x119b8:   77 54                                 	ja 0x11a0e
0x119ba:   41 80 f9 01                           	cmp r9b, 1
0x119be:   75 25                                 	jne 0x119e5
0x119c0:   0f b6 c2                              	movzx eax, dl
0x119c3:   40 0f b6 d6                           	movzx edx, sil
0x119c7:   40 0f b6 f7                           	movzx esi, dil
0x119cb:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x119d2:   4d 89 c1                              	mov r9, r8
0x119d5:   44 0f b6 c1                           	movzx r8d, cl
0x119d9:   89 c1                                 	mov ecx, eax
0x119db:   4c 89 d7                              	mov rdi, r10
; data inside code section at 0x119de -- 0x119e0
0x119de:   e8 7d                                              |.}              |
; function: DTV_DecEncChip_I2C_Read at 0x119e0 -- 0x11a10
0x119e0:   3c ff                                 	cmp al, 0xff
; data inside code section at 0x119e2 -- 0x119e5
0x119e2:   ff eb 24                                           |..$             |
0x119e5:   0f b6 c2                              	movzx eax, dl
0x119e8:   40 0f b6 d6                           	movzx edx, sil
0x119ec:   40 0f b6 f7                           	movzx esi, dil
0x119f0:   45 0f b6 c9                           	movzx r9d, r9b
0x119f4:   44 89 0c 24                           	mov dword ptr [rsp], r9d
0x119f8:   4d 89 c1                              	mov r9, r8
0x119fb:   44 0f b6 c1                           	movzx r8d, cl
0x119ff:   89 c1                                 	mov ecx, eax
0x11a01:   4c 89 d7                              	mov rdi, r10
0x11a04:   e8 57 3c ff ff                        	call 0x5660 <FUSBDTV_Cmd_MPU_I2CRead>
0x11a09:   3c 01                                 	cmp al, 1
0x11a0b:   0f 94 c0                              	sete al
0x11a0e:   c9                                    	leave 
0x11a0f:   c3                                    	ret 
; function: DTV_DecEncChip_I2C_Read at 0x11a10 -- 0x11a43
0x11a10:   55                                    	push rbp
0x11a11:   48 89 e5                              	mov rbp, rsp
0x11a14:   48 83 ec 10                           	sub rsp, 0x10
0x11a18:   e8 d3 d1 02 00                        	call 0x3ebf0 <mcount>
0x11a1d:   80 bf 68 29 09 00 01                  	cmp byte ptr [rdi + 0x92968], 1
0x11a24:   75 30                                 	jne 0x11a56
0x11a26:   45 0f b6 d0                           	movzx r10d, r8b
0x11a2a:   0f b6 d2                              	movzx edx, dl
0x11a2d:   40 0f b6 f6                           	movzx esi, sil
0x11a31:   0f b6 87 69 29 09 00                  	movzx eax, byte ptr [rdi + 0x92969]
0x11a38:   48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0x11a3f:   48 89 3c 24                           	mov qword ptr [rsp], rdi
; data inside code section at 0x11a43 -- 0x11a45
0x11a43:   45 0f                                              |E.              |
; function: ReadSlowdownICVersion at 0x11a45 -- 0x11a75
0x11a45:   b6 c9                                 	mov dh, 0xc9
0x11a47:   49 89 c8                              	mov r8, rcx
0x11a4a:   44 89 d1                              	mov ecx, r10d
0x11a4d:   89 c7                                 	mov edi, eax
0x11a4f:   e8 4b ff ff ff                        	call 0x1199f <bReadMPUI2CData>
0x11a54:   eb 1d                                 	jmp 0x11a73 <ReadSlowdownICVersion+0x2e>
0x11a56:   0f b6 d2                              	movzx edx, dl
0x11a59:   40 0f b6 f6                           	movzx esi, sil
0x11a5d:   48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0x11a64:   41 b9 00 00 00 00                     	mov r9d, 0
0x11a6a:   45 0f b6 c0                           	movzx r8d, r8b
0x11a6e:   e8 ed b1 00 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x11a73:   c9                                    	leave 
0x11a74:   c3                                    	ret 
; function: ReadSlowdownICVersion at 0x11a75 -- 0x11abc
0x11a75:   55                                    	push rbp
0x11a76:   48 89 e5                              	mov rbp, rsp
0x11a79:   e8 72 d1 02 00                        	call 0x3ebf0 <mcount>
0x11a7e:   b8 00 00 00 00                        	mov eax, 0
0x11a83:   48 85 ff                              	test rdi, rdi
0x11a86:   74 65                                 	je 0x11aed
0x11a88:   48 ba ff 00 00 00 01 00 00 00         	movabs rdx, 0x1000000ff
0x11a92:   48 23 97 68 29 09 00                  	and rdx, qword ptr [rdi + 0x92968]
0x11a99:   48 b8 01 00 00 00 01 00 00 00         	movabs rax, 0x100000001
0x11aa3:   48 39 c2                              	cmp rdx, rax
0x11aa6:   75 20                                 	jne 0x11ac8
0x11aa8:   41 b9 00 00 00 00                     	mov r9d, 0
0x11aae:   41 b8 01 00 00 00                     	mov r8d, 1
0x11ab4:   48 89 f1                              	mov rcx, rsi
0x11ab7:   ba 00 00 00 00                        	mov edx, 0
; data inside code section at 0x11abc -- 0x11abf
0x11abc:   be d2 00                                           |...             |
; function: DTV_IsSlowDownICExisted at 0x11abf -- 0x11ac8
0x11abf:   00 00                                 	add byte ptr [rax], al
0x11ac1:   e8 4a ff ff ff                        	call 0x11a10 <DTV_DecEncChip_I2C_Read>
0x11ac6:   eb 25                                 	jmp 0x11aed
; data inside code section at 0x11ac8 -- 0x11ad6
0x11ac8:   48 8b bf 38 1d 00 00 41  b9 00 00 00 00 41         |H..8...A.....A  |
; function: bBCardInit at 0x11ad6 -- 0x11aef
0x11ad6:   b8 01 00 00 00                        	mov eax, 1
0x11adb:   48 89 f1                              	mov rcx, rsi
0x11ade:   ba 00 00 00 00                        	mov edx, 0
0x11ae3:   be d2 00 00 00                        	mov esi, 0xd2
0x11ae8:   e8 73 b1 00 00                        	call 0x1cc60 <TLIB_I2C_Read>
0x11aed:   c9                                    	leave 
0x11aee:   c3                                    	ret 
; function: DTV_IsSlowDownICExisted at 0x11aef -- 0x11b06
0x11aef:   55                                    	push rbp
0x11af0:   48 89 e5                              	mov rbp, rsp
0x11af3:   e8 f8 d0 02 00                        	call 0x3ebf0 <mcount>
0x11af8:   48 8d b7 78 29 09 00                  	lea rsi, [rdi + 0x92978]
0x11aff:   e8 71 ff ff ff                        	call 0x11a75 <ReadSlowdownICVersion>
0x11b04:   c9                                    	leave 
0x11b05:   c3                                    	ret 
; function: bBCardInit at 0x11b06 -- 0x11d8b
0x11b06:   55                                    	push rbp
0x11b07:   48 89 e5                              	mov rbp, rsp
0x11b0a:   48 83 ec 50                           	sub rsp, 0x50
0x11b0e:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x11b12:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x11b16:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x11b1a:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x11b1e:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x11b22:   e8 c9 d0 02 00                        	call 0x3ebf0 <mcount>
0x11b27:   48 89 fb                              	mov rbx, rdi
0x11b2a:   4c 8b 77 40                           	mov r14, qword ptr [rdi + 0x40]
0x11b2e:   44 0f b6 bf 81 14 00 00               	movzx r15d, byte ptr [rdi + 0x1481]
0x11b36:   4c 8b 67 48                           	mov r12, qword ptr [rdi + 0x48]
0x11b3a:   45 84 ff                              	test r15b, r15b
0x11b3d:   0f 84 9e 00 00 00                     	je 0x11be1 <bBCardInit+0xdb>
0x11b43:   48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x11b47:   41 b9 00 00 00 00                     	mov r9d, 0
0x11b4d:   41 b8 01 00 00 00                     	mov r8d, 1
0x11b53:   ba 09 00 00 00                        	mov edx, 9
0x11b58:   be 4a 00 00 00                        	mov esi, 0x4a
0x11b5d:   4c 89 e7                              	mov rdi, r12
0x11b60:   e8 ab fe ff ff                        	call 0x11a10 <DTV_DecEncChip_I2C_Read>
0x11b65:   3c 01                                 	cmp al, 1
0x11b67:   75 18                                 	jne 0x11b81 <bBCardInit+0x7b>
0x11b69:   0f b6 45 c0                           	movzx eax, byte ptr [rbp - 0x40]
0x11b6d:   83 e0 3e                              	and eax, 0x3e
0x11b70:   d1 f8                                 	sar eax, 1
0x11b72:   83 f8 0f                              	cmp eax, 0xf
0x11b75:   74 6a                                 	je 0x11be1 <bBCardInit+0xdb>
0x11b77:   83 f8 04                              	cmp eax, 4
0x11b7a:   74 65                                 	je 0x11be1 <bBCardInit+0xdb>
0x11b7c:   83 f8 11                              	cmp eax, 0x11
0x11b7f:   74 60                                 	je 0x11be1 <bBCardInit+0xdb>
0x11b81:   ba 80 00 00 00                        	mov edx, 0x80
0x11b86:   be ff 00 00 00                        	mov esi, 0xff
0x11b8b:   4c 89 f7                              	mov rdi, r14
0x11b8e:   e8 f7 af 00 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x11b93:   bf 19 00 00 00                        	mov edi, 0x19
0x11b98:   e8 04 b0 00 00                        	call 0x1cba1 <TLIB_Delay>
0x11b9d:   ba 80 00 00 00                        	mov edx, 0x80
0x11ba2:   be 00 00 00 00                        	mov esi, 0
0x11ba7:   4c 89 f7                              	mov rdi, r14
0x11baa:   e8 db af 00 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x11baf:   bf 19 00 00 00                        	mov edi, 0x19
0x11bb4:   e8 e8 af 00 00                        	call 0x1cba1 <TLIB_Delay>
0x11bb9:   ba 80 00 00 00                        	mov edx, 0x80
0x11bbe:   be ff 00 00 00                        	mov esi, 0xff
0x11bc3:   4c 89 f7                              	mov rdi, r14
0x11bc6:   e8 bf af 00 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x11bcb:   bf 32 00 00 00                        	mov edi, 0x32
0x11bd0:   e8 cc af 00 00                        	call 0x1cba1 <TLIB_Delay>
0x11bd5:   c6 45 bf 4c                           	mov byte ptr [rbp - 0x41], 0x4c
0x11bd9:   41 bd 5c 00 00 00                     	mov r13d, 0x5c
0x11bdf:   eb 0a                                 	jmp 0x11beb <bBCardInit+0xe5>
0x11be1:   c6 45 bf 4a                           	mov byte ptr [rbp - 0x41], 0x4a
0x11be5:   41 bd 5a 00 00 00                     	mov r13d, 0x5a
0x11beb:   48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x11bef:   41 0f b6 f5                           	movzx esi, r13b
0x11bf3:   41 b9 00 00 00 00                     	mov r9d, 0
0x11bf9:   41 b8 01 00 00 00                     	mov r8d, 1
0x11bff:   ba 09 00 00 00                        	mov edx, 9
0x11c04:   4c 89 e7                              	mov rdi, r12
0x11c07:   e8 04 fe ff ff                        	call 0x11a10 <DTV_DecEncChip_I2C_Read>
0x11c0c:   84 c0                                 	test al, al
0x11c0e:   75 44                                 	jne 0x11c54 <bBCardInit+0x14e>
0x11c10:   bf 0a 00 00 00                        	mov edi, 0xa
0x11c15:   e8 87 af 00 00                        	call 0x1cba1 <TLIB_Delay>
0x11c1a:   48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x11c1e:   0f b6 75 bf                           	movzx esi, byte ptr [rbp - 0x41]
0x11c22:   41 b9 00 00 00 00                     	mov r9d, 0
0x11c28:   41 b8 01 00 00 00                     	mov r8d, 1
0x11c2e:   ba 09 00 00 00                        	mov edx, 9
0x11c33:   4c 89 e7                              	mov rdi, r12
0x11c36:   e8 d5 fd ff ff                        	call 0x11a10 <DTV_DecEncChip_I2C_Read>
0x11c3b:   41 89 c5                              	mov r13d, eax
0x11c3e:   84 c0                                 	test al, al
0x11c40:   0f 84 61 01 00 00                     	je 0x11da7
0x11c46:   0f b6 45 bf                           	movzx eax, byte ptr [rbp - 0x41]
0x11c4a:   41 88 84 24 ac fc 08 00               	mov byte ptr [r12 + 0x8fcac], al
0x11c52:   eb 08                                 	jmp 0x11c5c <bBCardInit+0x156>
0x11c54:   45 88 ac 24 ac fc 08 00               	mov byte ptr [r12 + 0x8fcac], r13b
0x11c5c:   48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x11c60:   41 0f b6 b4 24 ac fc 08 00            	movzx esi, byte ptr [r12 + 0x8fcac]
0x11c69:   41 b9 00 00 00 00                     	mov r9d, 0
0x11c6f:   41 b8 01 00 00 00                     	mov r8d, 1
0x11c75:   ba 09 00 00 00                        	mov edx, 9
0x11c7a:   4c 89 e7                              	mov rdi, r12
0x11c7d:   e8 8e fd ff ff                        	call 0x11a10 <DTV_DecEncChip_I2C_Read>
0x11c82:   41 89 c5                              	mov r13d, eax
0x11c85:   0f b6 45 c0                           	movzx eax, byte ptr [rbp - 0x40]
0x11c89:   83 e0 3e                              	and eax, 0x3e
0x11c8c:   d1 f8                                 	sar eax, 1
0x11c8e:   88 83 85 14 00 00                     	mov byte ptr [rbx + 0x1485], al
0x11c94:   3c 11                                 	cmp al, 0x11
0x11c96:   76 0b                                 	jbe 0x11ca3 <bBCardInit+0x19d>
0x11c98:   41 bd 00 00 00 00                     	mov r13d, 0
0x11c9e:   e9 04 01 00 00                        	jmp 0x11da7
0x11ca3:   41 80 bc 24 68 29 09 00 01            	cmp byte ptr [r12 + 0x92968], 1
0x11cac:   74 3e                                 	je 0x11cec <bBCardInit+0x1e6>
0x11cae:   41 0f b6 84 24 8d 14 00 00            	movzx eax, byte ptr [r12 + 0x148d]
0x11cb7:   3c 0f                                 	cmp al, 0xf
0x11cb9:   74 08                                 	je 0x11cc3 <bBCardInit+0x1bd>
0x11cbb:   3c 04                                 	cmp al, 4
0x11cbd:   74 04                                 	je 0x11cc3 <bBCardInit+0x1bd>
0x11cbf:   3c 11                                 	cmp al, 0x11
0x11cc1:   75 18                                 	jne 0x11cdb <bBCardInit+0x1d5>
0x11cc3:   45 84 ff                              	test r15b, r15b
0x11cc6:   75 24                                 	jne 0x11cec <bBCardInit+0x1e6>
0x11cc8:   41 0f b6 b4 24 ac fc 08 00            	movzx esi, byte ptr [r12 + 0x8fcac]
0x11cd1:   4c 89 f7                              	mov rdi, r14
0x11cd4:   e8 37 23 ff ff                        	call 0x4010 <FUSBDTV_Cmd_ReadIR>
0x11cd9:   eb 11                                 	jmp 0x11cec <bBCardInit+0x1e6>
0x11cdb:   41 0f b6 b4 24 ac fc 08 00            	movzx esi, byte ptr [r12 + 0x8fcac]
0x11ce4:   4c 89 f7                              	mov rdi, r14
0x11ce7:   e8 24 23 ff ff                        	call 0x4010 <FUSBDTV_Cmd_ReadIR>
0x11cec:   41 80 be c1 54 00 00 00               	cmp byte ptr [r14 + 0x54c1], 0
0x11cf4:   74 18                                 	je 0x11d0e <bBCardInit+0x208>
0x11cf6:   45 0f b6 ff                           	movzx r15d, r15b
0x11cfa:   43 c6 84 3e c2 54 00 00 01            	mov byte ptr [r14 + r15 + 0x54c2], 1
0x11d03:   41 bd 01 00 00 00                     	mov r13d, 1
0x11d09:   e9 99 00 00 00                        	jmp 0x11da7
0x11d0e:   c6 83 80 14 00 00 01                  	mov byte ptr [rbx + 0x1480], 1
0x11d15:   c7 83 3c 13 00 00 00 00 00 00         	mov dword ptr [rbx + 0x133c], 0
0x11d1f:   c6 83 82 14 00 00 00                  	mov byte ptr [rbx + 0x1482], 0
0x11d26:   c7 83 28 04 00 00 40 00 00 00         	mov dword ptr [rbx + 0x428], 0x40
0x11d30:   c7 83 ec 07 00 00 40 00 00 00         	mov dword ptr [rbx + 0x7ec], 0x40
0x11d3a:   c7 83 b0 0b 00 00 40 00 00 00         	mov dword ptr [rbx + 0xbb0], 0x40
0x11d44:   c6 83 38 13 00 00 00                  	mov byte ptr [rbx + 0x1338], 0
0x11d4b:   c7 83 90 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x190], 0
0x11d55:   c7 83 d4 02 00 00 00 00 00 00         	mov dword ptr [rbx + 0x2d4], 0
0x11d5f:   c7 83 c8 15 00 00 00 00 00 00         	mov dword ptr [rbx + 0x15c8], 0
0x11d69:   48 c7 83 20 04 00 00 00 00 00 00      	mov qword ptr [rbx + 0x420], 0
0x11d74:   c6 83 cc 15 00 00 00                  	mov byte ptr [rbx + 0x15cc], 0
0x11d7b:   41 c6 86 c0 54 00 00 00               	mov byte ptr [r14 + 0x54c0], 0
0x11d83:   41 c6 86 10 55 00 00 01               	mov byte ptr [r14 + 0x5510], 1
; data inside code section at 0x11d8b -- 0x11d90
0x11d8b:   c6 83 ce 15 00                                     |.....           |
; function: DTV_Init at 0x11d90 -- 0x11dc0
0x11d90:   00 00                                 	add byte ptr [rax], al
0x11d92:   41 c6 86 c1 54 00 00 01               	mov byte ptr [r14 + 0x54c1], 1
0x11d9a:   45 0f b6 ff                           	movzx r15d, r15b
0x11d9e:   43 c6 84 3e c2 54 00 00 01            	mov byte ptr [r14 + r15 + 0x54c2], 1
0x11da7:   44 89 e8                              	mov eax, r13d
0x11daa:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x11dae:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x11db2:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x11db6:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x11dba:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x11dbe:   c9                                    	leave 
0x11dbf:   c3                                    	ret 
; function: DTV_Init at 0x11dc0 -- 0x12768
0x11dc0:   55                                    	push rbp
0x11dc1:   48 89 e5                              	mov rbp, rsp
0x11dc4:   41 57                                 	push r15
0x11dc6:   41 56                                 	push r14
0x11dc8:   41 55                                 	push r13
0x11dca:   41 54                                 	push r12
0x11dcc:   53                                    	push rbx
0x11dcd:   48 81 ec d8 00 00 00                  	sub rsp, 0xd8
0x11dd4:   e8 17 ce 02 00                        	call 0x3ebf0 <mcount>
0x11dd9:   48 89 fb                              	mov rbx, rdi
0x11ddc:   89 b5 08 ff ff ff                     	mov dword ptr [rbp - 0xf8], esi
0x11de2:   41 89 d5                              	mov r13d, edx
0x11de5:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x11dee:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x11df2:   31 c0                                 	xor eax, eax
0x11df4:   4c 8b a7 38 1d 00 00                  	mov r12, qword ptr [rdi + 0x1d38]
0x11dfb:   0f b6 97 30 1d 00 00                  	movzx edx, byte ptr [rdi + 0x1d30]
0x11e02:   88 95 0f ff ff ff                     	mov byte ptr [rbp - 0xf1], dl
0x11e08:   c6 45 b0 ad                           	mov byte ptr [rbp - 0x50], 0xad
0x11e0c:   c6 45 b1 1e                           	mov byte ptr [rbp - 0x4f], 0x1e
0x11e10:   c6 45 b2 56                           	mov byte ptr [rbp - 0x4e], 0x56
0x11e14:   c6 45 b3 a4                           	mov byte ptr [rbp - 0x4d], 0xa4
0x11e18:   c6 45 b4 e8                           	mov byte ptr [rbp - 0x4c], 0xe8
0x11e1c:   c6 45 b5 c1                           	mov byte ptr [rbp - 0x4b], 0xc1
0x11e20:   c6 45 b6 4c                           	mov byte ptr [rbp - 0x4a], 0x4c
0x11e24:   c6 45 b7 ce                           	mov byte ptr [rbp - 0x49], 0xce
0x11e28:   c6 45 b8 90                           	mov byte ptr [rbp - 0x48], 0x90
0x11e2c:   c6 45 b9 f7                           	mov byte ptr [rbp - 0x47], 0xf7
0x11e30:   c6 45 ba 33                           	mov byte ptr [rbp - 0x46], 0x33
0x11e34:   c6 45 bb 92                           	mov byte ptr [rbp - 0x45], 0x92
0x11e38:   c6 45 bc 77                           	mov byte ptr [rbp - 0x44], 0x77
0x11e3c:   c6 45 bd 14                           	mov byte ptr [rbp - 0x43], 0x14
0x11e40:   c6 45 be f8                           	mov byte ptr [rbp - 0x42], 0xf8
0x11e44:   c6 45 bf b9                           	mov byte ptr [rbp - 0x41], 0xb9
0x11e48:   c6 45 a0 fd                           	mov byte ptr [rbp - 0x60], 0xfd
0x11e4c:   c6 45 a1 1c                           	mov byte ptr [rbp - 0x5f], 0x1c
0x11e50:   c6 45 a2 ef                           	mov byte ptr [rbp - 0x5e], 0xef
0x11e54:   c6 45 a3 71                           	mov byte ptr [rbp - 0x5d], 0x71
0x11e58:   c6 45 a4 d3                           	mov byte ptr [rbp - 0x5c], 0xd3
0x11e5c:   c6 45 a5 69                           	mov byte ptr [rbp - 0x5b], 0x69
0x11e60:   c6 45 a6 47                           	mov byte ptr [rbp - 0x5a], 0x47
0x11e64:   c6 45 a7 54                           	mov byte ptr [rbp - 0x59], 0x54
0x11e68:   c6 45 a8 ab                           	mov byte ptr [rbp - 0x58], 0xab
0x11e6c:   c6 45 a9 aa                           	mov byte ptr [rbp - 0x57], 0xaa
0x11e70:   c6 45 aa 58                           	mov byte ptr [rbp - 0x56], 0x58
0x11e74:   c6 45 ab bb                           	mov byte ptr [rbp - 0x55], 0xbb
0x11e78:   c6 45 ac 62                           	mov byte ptr [rbp - 0x54], 0x62
0x11e7c:   c6 45 ad 49                           	mov byte ptr [rbp - 0x53], 0x49
0x11e80:   c6 45 ae 96                           	mov byte ptr [rbp - 0x52], 0x96
0x11e84:   c6 45 af 62                           	mov byte ptr [rbp - 0x51], 0x62
0x11e88:   41 0f b6 b4 24 75 4f 00 00            	movzx esi, byte ptr [r12 + 0x4f75]
0x11e91:   41 0f b6 8c 24 76 4f 00 00            	movzx ecx, byte ptr [r12 + 0x4f76]
0x11e9a:   41 0f b6 84 24 73 4f 00 00            	movzx eax, byte ptr [r12 + 0x4f73]
0x11ea3:   c1 e0 08                              	shl eax, 8
0x11ea6:   41 0f b6 94 24 74 4f 00 00            	movzx edx, byte ptr [r12 + 0x4f74]
0x11eaf:   01 d0                                 	add eax, edx
0x11eb1:   3d 06 0b 00 00                        	cmp eax, 0xb06
0x11eb6:   0f 85 b3 08 00 00                     	jne 0x1276f
0x11ebc:   40 0f b6 f6                           	movzx esi, sil
0x11ec0:   c1 e6 08                              	shl esi, 8
0x11ec3:   0f b6 c9                              	movzx ecx, cl
0x11ec6:   8d 0c 0e                              	lea ecx, [rsi + rcx]
0x11ec9:   83 f9 02                              	cmp ecx, 2
0x11ecc:   0f 85 9d 08 00 00                     	jne 0x1276f
0x11ed2:   41 c6 84 24 a1 55 00 00 01            	mov byte ptr [r12 + 0x55a1], 1
0x11edb:   48 c7 87 30 fe 08 00 00 00 00 00      	mov qword ptr [rdi + 0x8fe30], 0
0x11ee6:   48 c7 87 20 fe 08 00 00 00 00 00      	mov qword ptr [rdi + 0x8fe20], 0
0x11ef1:   48 c7 87 28 fe 08 00 00 00 00 00      	mov qword ptr [rdi + 0x8fe28], 0
0x11efc:   c6 87 38 fe 08 00 00                  	mov byte ptr [rdi + 0x8fe38], 0
0x11f03:   c6 87 6d fd 08 00 00                  	mov byte ptr [rdi + 0x8fd6d], 0
0x11f0a:   48 c7 87 a8 29 09 00 00 00 00 00      	mov qword ptr [rdi + 0x929a8], 0
0x11f15:   c7 87 b0 29 09 00 00 00 00 00         	mov dword ptr [rdi + 0x929b0], 0
0x11f1f:   48 8d 8d 30 ff ff ff                  	lea rcx, [rbp - 0xd0]
0x11f26:   ba 02 00 00 00                        	mov edx, 2
0x11f2b:   be 02 00 00 00                        	mov esi, 2
0x11f30:   4c 89 e7                              	mov rdi, r12
0x11f33:   e8 61 3d ff ff                        	call 0x5c99 <FUSBDTV_Cmd_SysCtrlRead>
0x11f38:   3c 01                                 	cmp al, 1
0x11f3a:   75 22                                 	jne 0x11f5e <DTV_Init+0x19e>
0x11f3c:   80 bd 30 ff ff ff 16                  	cmp byte ptr [rbp - 0xd0], 0x16
0x11f43:   75 19                                 	jne 0x11f5e <DTV_Init+0x19e>
0x11f45:   80 bd 31 ff ff ff 52                  	cmp byte ptr [rbp - 0xcf], 0x52
0x11f4c:   75 10                                 	jne 0x11f5e <DTV_Init+0x19e>
0x11f4e:   c6 83 75 f4 08 00 01                  	mov byte ptr [rbx + 0x8f475], 1
0x11f55:   c6 83 eb 15 00 00 16                  	mov byte ptr [rbx + 0x15eb], 0x16
0x11f5c:   eb 1c                                 	jmp 0x11f7a <DTV_Init+0x1ba>
0x11f5e:   c6 83 e4 0d 03 00 01                  	mov byte ptr [rbx + 0x30de4], 1
0x11f65:   c6 83 75 f4 08 00 03                  	mov byte ptr [rbx + 0x8f475], 3
0x11f6c:   c6 83 e9 15 00 00 00                  	mov byte ptr [rbx + 0x15e9], 0
0x11f73:   c6 83 eb 15 00 00 11                  	mov byte ptr [rbx + 0x15eb], 0x11
0x11f7a:   45 84 ed                              	test r13b, r13b
0x11f7d:   0f 84 23 01 00 00                     	je 0x120a6 <DTV_Init+0x2e6>
0x11f83:   c6 45 80 3c                           	mov byte ptr [rbp - 0x80], 0x3c
0x11f87:   c6 45 81 51                           	mov byte ptr [rbp - 0x7f], 0x51
0x11f8b:   c6 45 82 93                           	mov byte ptr [rbp - 0x7e], 0x93
0x11f8f:   c6 45 83 13                           	mov byte ptr [rbp - 0x7d], 0x13
0x11f93:   c6 45 84 9b                           	mov byte ptr [rbp - 0x7c], 0x9b
0x11f97:   c6 45 85 a2                           	mov byte ptr [rbp - 0x7b], 0xa2
0x11f9b:   c6 45 86 41                           	mov byte ptr [rbp - 0x7a], 0x41
0x11f9f:   c6 45 87 c9                           	mov byte ptr [rbp - 0x79], 0xc9
0x11fa3:   c6 45 88 b3                           	mov byte ptr [rbp - 0x78], 0xb3
0x11fa7:   c6 45 89 fe                           	mov byte ptr [rbp - 0x77], 0xfe
0x11fab:   c6 45 8a b5                           	mov byte ptr [rbp - 0x76], 0xb5
0x11faf:   c6 45 8b da                           	mov byte ptr [rbp - 0x75], 0xda
0x11fb3:   c6 45 8c fe                           	mov byte ptr [rbp - 0x74], 0xfe
0x11fb7:   c6 45 8d a0                           	mov byte ptr [rbp - 0x73], 0xa0
0x11fbb:   c6 45 8e 05                           	mov byte ptr [rbp - 0x72], 5
0x11fbf:   c6 45 8f e2                           	mov byte ptr [rbp - 0x71], 0xe2
0x11fc3:   c6 83 ec 15 00 00 01                  	mov byte ptr [rbx + 0x15ec], 1
0x11fca:   48 8d 83 ed 15 00 00                  	lea rax, [rbx + 0x15ed]
0x11fd1:   48 8d 95 10 ff ff ff                  	lea rdx, [rbp - 0xf0]
0x11fd8:   48 8b 0a                              	mov rcx, qword ptr [rdx]
0x11fdb:   48 89 08                              	mov qword ptr [rax], rcx
0x11fde:   48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0x11fe2:   48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x11fe6:   4c 8d 6d 80                           	lea r13, [rbp - 0x80]
0x11fea:   48 89 da                              	mov rdx, rbx
0x11fed:   4d 8d 7d 10                           	lea r15, [r13 + 0x10]
0x11ff1:   4c 89 e8                              	mov rax, r13
0x11ff4:   0f b6 8a ed 15 00 00                  	movzx ecx, byte ptr [rdx + 0x15ed]
0x11ffb:   30 08                                 	xor byte ptr [rax], cl
0x11ffd:   48 83 c0 01                           	add rax, 1
0x12001:   48 83 c2 01                           	add rdx, 1
0x12005:   4c 39 f8                              	cmp rax, r15
0x12008:   75 ea                                 	jne 0x11ff4 <DTV_Init+0x234>
0x1200a:   4c 8d b5 40 ff ff ff                  	lea r14, [rbp - 0xc0]
0x12011:   b9 08 00 00 00                        	mov ecx, 8
0x12016:   b8 00 00 00 00                        	mov eax, 0
0x1201b:   4c 89 f7                              	mov rdi, r14
0x1201e:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x12021:   41 0f b6 55 00                        	movzx edx, byte ptr [r13]
0x12026:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x1202d:   4c 89 f7                              	mov rdi, r14
0x12030:   b8 00 00 00 00                        	mov eax, 0
0x12035:   e8 2e cc 02 00                        	call 0x3ec68 <sprintf>
0x1203a:   49 83 c5 01                           	add r13, 1
0x1203e:   49 83 c6 02                           	add r14, 2
0x12042:   4d 39 ef                              	cmp r15, r13
0x12045:   75 da                                 	jne 0x12021 <DTV_Init+0x261>
0x12047:   4c 8d b5 40 ff ff ff                  	lea r14, [rbp - 0xc0]
0x1204e:   4d 8d ac 24 e8 0e 00 00               	lea r13, [r12 + 0xee8]
0x12056:   48 8d bb 78 f4 08 00                  	lea rdi, [rbx + 0x8f478]
0x1205d:   4d 89 e8                              	mov r8, r13
0x12060:   4c 89 f1                              	mov rcx, r14
0x12063:   ba 80 00 00 00                        	mov edx, 0x80
0x12068:   be 00 00 00 00                        	mov esi, 0
0x1206d:   e8 34 58 00 00                        	call 0x178a6 <makeKey>
0x12072:   48 8d bb 58 f7 08 00                  	lea rdi, [rbx + 0x8f758]
0x12079:   4d 89 e8                              	mov r8, r13
0x1207c:   4c 89 f1                              	mov rcx, r14
0x1207f:   ba 80 00 00 00                        	mov edx, 0x80
0x12084:   be 01 00 00 00                        	mov esi, 1
0x12089:   e8 18 58 00 00                        	call 0x178a6 <makeKey>
0x1208e:   48 8d bb 38 fa 08 00                  	lea rdi, [rbx + 0x8fa38]
0x12095:   ba 00 00 00 00                        	mov edx, 0
0x1209a:   be 01 00 00 00                        	mov esi, 1
0x1209f:   e8 2c 57 00 00                        	call 0x177d0 <cipherInit>
0x120a4:   eb 07                                 	jmp 0x120ad <DTV_Init+0x2ed>
0x120a6:   c6 83 ec 15 00 00 00                  	mov byte ptr [rbx + 0x15ec], 0
0x120ad:   be 01 00 00 00                        	mov esi, 1
0x120b2:   48 89 df                              	mov rdi, rbx
0x120b5:   e8 ce ec ff ff                        	call 0x10d88 <DTV_TunerPower>
0x120ba:   c6 83 d8 15 00 00 00                  	mov byte ptr [rbx + 0x15d8], 0
0x120c1:   ba 00 00 00 00                        	mov edx, 0
0x120c6:   be 01 00 00 00                        	mov esi, 1
0x120cb:   48 89 df                              	mov rdi, rbx
0x120ce:   e8 26 ed ff ff                        	call 0x10df9 <TunerReset>
0x120d3:   83 f8 01                              	cmp eax, 1
0x120d6:   74 7b                                 	je 0x12153 <DTV_Init+0x393>
0x120d8:   be 00 00 00 00                        	mov esi, 0
0x120dd:   48 89 df                              	mov rdi, rbx
0x120e0:   e8 a3 ec ff ff                        	call 0x10d88 <DTV_TunerPower>
0x120e5:   80 bd 0f ff ff ff 00                  	cmp byte ptr [rbp - 0xf1], 0
0x120ec:   75 16                                 	jne 0x12104 <DTV_Init+0x344>
0x120ee:   48 8b bb 38 1d 00 00                  	mov rdi, qword ptr [rbx + 0x1d38]
0x120f5:   ba 08 00 00 00                        	mov edx, 8
0x120fa:   be 08 00 00 00                        	mov esi, 8
0x120ff:   e8 86 aa 00 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x12104:   bf 58 02 00 00                        	mov edi, 0x258
0x12109:   e8 93 aa 00 00                        	call 0x1cba1 <TLIB_Delay>
0x1210e:   be 01 00 00 00                        	mov esi, 1
0x12113:   48 89 df                              	mov rdi, rbx
0x12116:   e8 6d ec ff ff                        	call 0x10d88 <DTV_TunerPower>
0x1211b:   bf 64 00 00 00                        	mov edi, 0x64
0x12120:   e8 7c aa 00 00                        	call 0x1cba1 <TLIB_Delay>
0x12125:   ba 00 00 00 00                        	mov edx, 0
0x1212a:   be 01 00 00 00                        	mov esi, 1
0x1212f:   48 89 df                              	mov rdi, rbx
0x12132:   e8 c2 ec ff ff                        	call 0x10df9 <TunerReset>
0x12137:   83 f8 01                              	cmp eax, 1
0x1213a:   74 17                                 	je 0x12153 <DTV_Init+0x393>
0x1213c:   be 00 00 00 00                        	mov esi, 0
0x12141:   48 89 df                              	mov rdi, rbx
0x12144:   e8 3f ec ff ff                        	call 0x10d88 <DTV_TunerPower>
0x12149:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x1214e:   e9 21 06 00 00                        	jmp 0x12774
0x12153:   c7 83 70 1c 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1c70], 0
0x1215d:   c7 83 b8 fa 08 00 00 00 00 00         	mov dword ptr [rbx + 0x8fab8], 0
0x12167:   4c 89 e7                              	mov rdi, r12
0x1216a:   e8 31 1e ff ff                        	call 0x3fa0 <FUSBDTV_Cmd_Get_DevRandomKey>
0x1216f:   c6 83 68 29 09 00 00                  	mov byte ptr [rbx + 0x92968], 0
0x12176:   c6 83 69 29 09 00 00                  	mov byte ptr [rbx + 0x92969], 0
0x1217d:   48 c7 83 e0 15 00 00 20 e0 00 00      	mov qword ptr [rbx + 0x15e0], 0xe020
0x12188:   c6 83 e8 15 00 00 00                  	mov byte ptr [rbx + 0x15e8], 0
0x1218f:   c6 83 49 fa 08 00 00                  	mov byte ptr [rbx + 0x8fa49], 0
0x12196:   c6 83 bc fa 08 00 00                  	mov byte ptr [rbx + 0x8fabc], 0
0x1219d:   48 c7 83 b0 fa 08 00 00 00 00 00      	mov qword ptr [rbx + 0x8fab0], 0
0x121a8:   c6 83 bd fa 08 00 00                  	mov byte ptr [rbx + 0x8fabd], 0
0x121af:   c7 83 c0 fa 08 00 00 00 00 00         	mov dword ptr [rbx + 0x8fac0], 0
0x121b9:   41 80 bc 24 68 3e 00 00 00            	cmp byte ptr [r12 + 0x3e68], 0
0x121c2:   75 36                                 	jne 0x121fa <DTV_Init+0x43a>
0x121c4:   41 0f b6 94 24 b0 4f 00 00            	movzx edx, byte ptr [r12 + 0x4fb0]
0x121cd:   c1 e2 08                              	shl edx, 8
0x121d0:   41 0f b6 84 24 af 4f 00 00            	movzx eax, byte ptr [r12 + 0x4faf]
0x121d9:   09 c2                                 	or edx, eax
0x121db:   41 0f b6 84 24 12 55 00 00            	movzx eax, byte ptr [r12 + 0x5512]
0x121e4:   c1 e0 08                              	shl eax, 8
0x121e7:   41 0f b6 8c 24 11 55 00 00            	movzx ecx, byte ptr [r12 + 0x5511]
0x121f0:   09 c8                                 	or eax, ecx
0x121f2:   31 d0                                 	xor eax, edx
0x121f4:   89 83 c0 fa 08 00                     	mov dword ptr [rbx + 0x8fac0], eax
0x121fa:   0f b6 83 30 1d 00 00                  	movzx eax, byte ptr [rbx + 0x1d30]
0x12201:   49 89 9c c4 e0 04 00 00               	mov qword ptr [r12 + rax*8 + 0x4e0], rbx
0x12209:   80 bd 0f ff ff ff 07                  	cmp byte ptr [rbp - 0xf1], 7
0x12210:   77 61                                 	ja 0x12273 <DTV_Init+0x4b3>
0x12212:   4c 89 63 48                           	mov qword ptr [rbx + 0x48], r12
0x12216:   0f b6 85 0f ff ff ff                  	movzx eax, byte ptr [rbp - 0xf1]
0x1221d:   88 83 89 14 00 00                     	mov byte ptr [rbx + 0x1489], al
0x12223:   48 89 5b 50                           	mov qword ptr [rbx + 0x50], rbx
0x12227:   48 8d 7b 08                           	lea rdi, [rbx + 8]
0x1222b:   e8 d6 f8 ff ff                        	call 0x11b06 <bBCardInit>
0x12230:   84 c0                                 	test al, al
0x12232:   75 11                                 	jne 0x12245 <DTV_Init+0x485>
0x12234:   c6 83 d8 15 00 00 00                  	mov byte ptr [rbx + 0x15d8], 0
0x1223b:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x12240:   e9 2f 05 00 00                        	jmp 0x12774
0x12245:   0f b6 83 8d 14 00 00                  	movzx eax, byte ptr [rbx + 0x148d]
0x1224c:   3c 03                                 	cmp al, 3
0x1224e:   74 08                                 	je 0x12258 <DTV_Init+0x498>
0x12250:   3c 0f                                 	cmp al, 0xf
0x12252:   74 04                                 	je 0x12258 <DTV_Init+0x498>
0x12254:   3c 04                                 	cmp al, 4
0x12256:   75 09                                 	jne 0x12261 <DTV_Init+0x4a1>
0x12258:   c6 83 75 f4 08 00 07                  	mov byte ptr [rbx + 0x8f475], 7
0x1225f:   eb 0b                                 	jmp 0x1226c <DTV_Init+0x4ac>
0x12261:   3c 11                                 	cmp al, 0x11
0x12263:   75 07                                 	jne 0x1226c <DTV_Init+0x4ac>
0x12265:   c6 83 75 f4 08 00 08                  	mov byte ptr [rbx + 0x8f475], 8
0x1226c:   c6 83 d8 15 00 00 01                  	mov byte ptr [rbx + 0x15d8], 1
0x12273:   0f b6 95 0f ff ff ff                  	movzx edx, byte ptr [rbp - 0xf1]
0x1227a:   89 95 04 ff ff ff                     	mov dword ptr [rbp - 0xfc], edx
0x12280:   ba 01 00 00 00                        	mov edx, 1
0x12285:   8b b5 04 ff ff ff                     	mov esi, dword ptr [rbp - 0xfc]
0x1228b:   4c 89 e7                              	mov rdi, r12
0x1228e:   e8 9d 1d ff ff                        	call 0x4030 <FUSBDTV_Cmd_StartDSC>
0x12293:   48 89 c2                              	mov rdx, rax
0x12296:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x1229b:   48 83 fa 01                           	cmp rdx, 1
0x1229f:   0f 85 cf 04 00 00                     	jne 0x12774
0x122a5:   83 bd 08 ff ff ff 00                  	cmp dword ptr [rbp - 0xf8], 0
0x122ac:   75 62                                 	jne 0x12310 <DTV_Init+0x550>
0x122ae:   4c 89 e7                              	mov rdi, r12
0x122b1:   e8 da 29 00 00                        	call 0x14c90 <USB_IsHighSpeed>
0x122b6:   85 c0                                 	test eax, eax
0x122b8:   74 2b                                 	je 0x122e5 <DTV_Init+0x525>
0x122ba:   ba 00 00 00 00                        	mov edx, 0
0x122bf:   8b b5 04 ff ff ff                     	mov esi, dword ptr [rbp - 0xfc]
0x122c5:   4c 89 e7                              	mov rdi, r12
0x122c8:   e8 3f 2c 00 00                        	call 0x14f0c <USB_FilterONOFF>
0x122cd:   c7 83 44 1d 00 00 01 00 00 00         	mov dword ptr [rbx + 0x1d44], 1
0x122d7:   41 c6 84 24 a1 55 00 00 01            	mov byte ptr [r12 + 0x55a1], 1
0x122e0:   e9 b5 00 00 00                        	jmp 0x1239a <DTV_Init+0x5da>
0x122e5:   ba 01 00 00 00                        	mov edx, 1
0x122ea:   8b b5 04 ff ff ff                     	mov esi, dword ptr [rbp - 0xfc]
0x122f0:   4c 89 e7                              	mov rdi, r12
0x122f3:   e8 14 2c 00 00                        	call 0x14f0c <USB_FilterONOFF>
0x122f8:   c7 83 44 1d 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1d44], 0
0x12302:   41 c6 84 24 a1 55 00 00 00            	mov byte ptr [r12 + 0x55a1], 0
0x1230b:   e9 8a 00 00 00                        	jmp 0x1239a <DTV_Init+0x5da>
0x12310:   83 bd 08 ff ff ff 01                  	cmp dword ptr [rbp - 0xf8], 1
0x12317:   75 28                                 	jne 0x12341 <DTV_Init+0x581>
0x12319:   ba 01 00 00 00                        	mov edx, 1
0x1231e:   8b b5 04 ff ff ff                     	mov esi, dword ptr [rbp - 0xfc]
0x12324:   4c 89 e7                              	mov rdi, r12
0x12327:   e8 e0 2b 00 00                        	call 0x14f0c <USB_FilterONOFF>
0x1232c:   c7 83 44 1d 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1d44], 0
0x12336:   41 c6 84 24 a1 55 00 00 00            	mov byte ptr [r12 + 0x55a1], 0
0x1233f:   eb 59                                 	jmp 0x1239a <DTV_Init+0x5da>
0x12341:   ba 01 00 00 00                        	mov edx, 1
0x12346:   8b b5 04 ff ff ff                     	mov esi, dword ptr [rbp - 0xfc]
0x1234c:   4c 89 e7                              	mov rdi, r12
0x1234f:   e8 b8 2b 00 00                        	call 0x14f0c <USB_FilterONOFF>
0x12354:   ba ff 1f 00 00                        	mov edx, 0x1fff
0x12359:   be ff 1f 00 00                        	mov esi, 0x1fff
0x1235e:   48 89 df                              	mov rdi, rbx
0x12361:   e8 56 83 ff ff                        	call 0xa6bc <DTV_SetPidFilterBoundary>
0x12366:   4c 89 e7                              	mov rdi, r12
0x12369:   e8 22 29 00 00                        	call 0x14c90 <USB_IsHighSpeed>
0x1236e:   85 c0                                 	test eax, eax
0x12370:   74 15                                 	je 0x12387 <DTV_Init+0x5c7>
0x12372:   41 c6 84 24 a1 55 00 00 01            	mov byte ptr [r12 + 0x55a1], 1
0x1237b:   c7 83 44 1d 00 00 01 00 00 00         	mov dword ptr [rbx + 0x1d44], 1
0x12385:   eb 13                                 	jmp 0x1239a <DTV_Init+0x5da>
0x12387:   41 c6 84 24 a1 55 00 00 00            	mov byte ptr [r12 + 0x55a1], 0
0x12390:   c7 83 44 1d 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1d44], 0
0x1239a:   83 83 40 1d 00 00 01                  	add dword ptr [rbx + 0x1d40], 1
0x123a1:   c7 83 48 1d 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1d48], 0
0x123ab:   c6 83 e5 ed 08 00 00                  	mov byte ptr [rbx + 0x8ede5], 0
0x123b2:   c6 83 54 0d 03 00 01                  	mov byte ptr [rbx + 0x30d54], 1
0x123b9:   be 08 01 00 00                        	mov esi, 0x108
0x123be:   bf 00 00 00 00                        	mov edi, 0
0x123c3:   e8 a0 3d ff ff                        	call 0x6168 <FUSB_ExAllocatePool>
0x123c8:   48 89 83 98 fc 08 00                  	mov qword ptr [rbx + 0x8fc98], rax
0x123cf:   be 08 01 00 00                        	mov esi, 0x108
0x123d4:   bf 00 00 00 00                        	mov edi, 0
0x123d9:   e8 8a 3d ff ff                        	call 0x6168 <FUSB_ExAllocatePool>
0x123de:   48 89 83 a0 fc 08 00                  	mov qword ptr [rbx + 0x8fca0], rax
0x123e5:   48 8b 93 98 fc 08 00                  	mov rdx, qword ptr [rbx + 0x8fc98]
0x123ec:   b8 00 00 00 00                        	mov eax, 0
0x123f1:   b9 21 00 00 00                        	mov ecx, 0x21
0x123f6:   48 89 d7                              	mov rdi, rdx
0x123f9:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x123fc:   48 8b 93 a0 fc 08 00                  	mov rdx, qword ptr [rbx + 0x8fca0]
0x12403:   b1 21                                 	mov cl, 0x21
0x12405:   48 89 d7                              	mov rdi, rdx
0x12408:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x1240b:   48 8d 4d 90                           	lea rcx, [rbp - 0x70]
0x1240f:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x12416:   41 b9 00 00 00 00                     	mov r9d, 0
0x1241c:   41 b8 01 00 00 00                     	mov r8d, 1
0x12422:   ba 09 00 00 00                        	mov edx, 9
0x12427:   48 89 df                              	mov rdi, rbx
0x1242a:   e8 e1 f5 ff ff                        	call 0x11a10 <DTV_DecEncChip_I2C_Read>
0x1242f:   84 c0                                 	test al, al
0x12431:   74 07                                 	je 0x1243a <DTV_Init+0x67a>
0x12433:   c6 83 6d fd 08 00 01                  	mov byte ptr [rbx + 0x8fd6d], 1
0x1243a:   48 89 df                              	mov rdi, rbx
0x1243d:   e8 a9 cb ff ff                        	call 0xefeb <DTV_Reset_EncChipEx>
0x12442:   80 bb e4 0d 03 00 01                  	cmp byte ptr [rbx + 0x30de4], 1
0x12449:   0f 85 66 01 00 00                     	jne 0x125b5 <DTV_Init+0x7f5>
0x1244f:   c6 83 e4 0d 03 00 01                  	mov byte ptr [rbx + 0x30de4], 1
0x12456:   c6 83 a1 0d 03 00 00                  	mov byte ptr [rbx + 0x30da1], 0
0x1245d:   48 8d 83 a4 0d 03 00                  	lea rax, [rbx + 0x30da4]
0x12464:   48 8d 55 b0                           	lea rdx, [rbp - 0x50]
0x12468:   48 8b 0a                              	mov rcx, qword ptr [rdx]
0x1246b:   48 89 08                              	mov qword ptr [rax], rcx
0x1246e:   48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0x12472:   48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x12476:   48 8d 83 c4 0d 03 00                  	lea rax, [rbx + 0x30dc4]
0x1247d:   48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x12481:   48 8b 0a                              	mov rcx, qword ptr [rdx]
0x12484:   48 89 08                              	mov qword ptr [rax], rcx
0x12487:   48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0x1248b:   48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x1248f:   48 8d 83 d4 0d 03 00                  	lea rax, [rbx + 0x30dd4]
0x12496:   48 89 08                              	mov qword ptr [rax], rcx
0x12499:   48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x1249d:   4c 8d ad 40 ff ff ff                  	lea r13, [rbp - 0xc0]
0x124a4:   b9 08 00 00 00                        	mov ecx, 8
0x124a9:   b8 00 00 00 00                        	mov eax, 0
0x124ae:   4c 89 ef                              	mov rdi, r13
0x124b1:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x124b4:   49 89 de                              	mov r14, rbx
0x124b7:   4d 8d 7d 20                           	lea r15, [r13 + 0x20]
0x124bb:   41 0f b6 96 a4 0d 03 00               	movzx edx, byte ptr [r14 + 0x30da4]
0x124c3:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x124ca:   4c 89 ef                              	mov rdi, r13
0x124cd:   b8 00 00 00 00                        	mov eax, 0
0x124d2:   e8 91 c7 02 00                        	call 0x3ec68 <sprintf>
0x124d7:   49 83 c6 01                           	add r14, 1
0x124db:   49 83 c5 02                           	add r13, 2
0x124df:   4d 39 fd                              	cmp r13, r15
0x124e2:   75 d7                                 	jne 0x124bb <DTV_Init+0x6fb>
0x124e4:   4c 8d b5 40 ff ff ff                  	lea r14, [rbp - 0xc0]
0x124eb:   4d 8d ac 24 e8 0e 00 00               	lea r13, [r12 + 0xee8]
0x124f3:   48 8d bb a4 ee 08 00                  	lea rdi, [rbx + 0x8eea4]
0x124fa:   4d 89 e8                              	mov r8, r13
0x124fd:   4c 89 f1                              	mov rcx, r14
0x12500:   ba 80 00 00 00                        	mov edx, 0x80
0x12505:   be 00 00 00 00                        	mov esi, 0
0x1250a:   e8 97 53 00 00                        	call 0x178a6 <makeKey>
0x1250f:   48 8d bb 84 f1 08 00                  	lea rdi, [rbx + 0x8f184]
0x12516:   4d 89 e8                              	mov r8, r13
0x12519:   4c 89 f1                              	mov rcx, r14
0x1251c:   ba 80 00 00 00                        	mov edx, 0x80
0x12521:   be 00 00 00 00                        	mov esi, 0
0x12526:   e8 7b 53 00 00                        	call 0x178a6 <makeKey>
0x1252b:   48 8d bb 64 f4 08 00                  	lea rdi, [rbx + 0x8f464]
0x12532:   ba 00 00 00 00                        	mov edx, 0
0x12537:   be 01 00 00 00                        	mov esi, 1
0x1253c:   e8 8f 52 00 00                        	call 0x177d0 <cipherInit>
0x12541:   48 89 df                              	mov rdi, rbx
0x12544:   e8 d7 cb ff ff                        	call 0xf120 <DTV_Reset_EncChip>
0x12549:   80 bb eb 15 00 00 16                  	cmp byte ptr [rbx + 0x15eb], 0x16
0x12550:   75 56                                 	jne 0x125a8 <DTV_Init+0x7e8>
0x12552:   4c 8d ad 3f ff ff ff                  	lea r13, [rbp - 0xc1]
0x12559:   4d 89 e8                              	mov r8, r13
0x1255c:   b9 01 00 00 00                        	mov ecx, 1
0x12561:   ba 40 00 00 00                        	mov edx, 0x40
0x12566:   8b b5 04 ff ff ff                     	mov esi, dword ptr [rbp - 0xfc]
0x1256c:   4c 89 e7                              	mov rdi, r12
0x1256f:   e8 bc 1b ff ff                        	call 0x4130 <FUSBDTV_Cmd_Rst_Enc>
0x12574:   0f b6 85 3f ff ff ff                  	movzx eax, byte ptr [rbp - 0xc1]
0x1257b:   83 e0 7c                              	and eax, 0x7c
0x1257e:   0a 83 75 f4 08 00                     	or al, byte ptr [rbx + 0x8f475]
0x12584:   83 c8 80                              	or eax, 0xffffff80
0x12587:   88 85 3f ff ff ff                     	mov byte ptr [rbp - 0xc1], al
0x1258d:   4d 89 e8                              	mov r8, r13
0x12590:   b9 01 00 00 00                        	mov ecx, 1
0x12595:   ba 40 00 00 00                        	mov edx, 0x40
0x1259a:   8b b5 04 ff ff ff                     	mov esi, dword ptr [rbp - 0xfc]
0x125a0:   4c 89 e7                              	mov rdi, r12
0x125a3:   e8 98 1b ff ff                        	call 0x4140 <FUSBDTV_Cmd_WriteEncReg>
0x125a8:   48 89 df                              	mov rdi, rbx
0x125ab:   e8 75 ea ff ff                        	call 0x11025 <DTV_EnableEncryptionChipTSOutput>
0x125b0:   e9 e4 00 00 00                        	jmp 0x12699 <DTV_Init+0x8d9>
0x125b5:   c6 83 e4 0d 03 00 01                  	mov byte ptr [rbx + 0x30de4], 1
0x125bc:   c6 83 a1 0d 03 00 00                  	mov byte ptr [rbx + 0x30da1], 0
0x125c3:   48 8d 83 a4 0d 03 00                  	lea rax, [rbx + 0x30da4]
0x125ca:   48 8d 55 b0                           	lea rdx, [rbp - 0x50]
0x125ce:   48 8b 0a                              	mov rcx, qword ptr [rdx]
0x125d1:   48 89 08                              	mov qword ptr [rax], rcx
0x125d4:   48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0x125d8:   48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x125dc:   48 8d 83 c4 0d 03 00                  	lea rax, [rbx + 0x30dc4]
0x125e3:   48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x125e7:   48 8b 0a                              	mov rcx, qword ptr [rdx]
0x125ea:   48 89 08                              	mov qword ptr [rax], rcx
0x125ed:   48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0x125f1:   48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x125f5:   4c 8d ad 40 ff ff ff                  	lea r13, [rbp - 0xc0]
0x125fc:   b9 08 00 00 00                        	mov ecx, 8
0x12601:   b8 00 00 00 00                        	mov eax, 0
0x12606:   4c 89 ef                              	mov rdi, r13
0x12609:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x1260c:   49 89 de                              	mov r14, rbx
0x1260f:   4d 8d 7d 20                           	lea r15, [r13 + 0x20]
0x12613:   41 0f b6 96 a4 0d 03 00               	movzx edx, byte ptr [r14 + 0x30da4]
0x1261b:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x12622:   4c 89 ef                              	mov rdi, r13
0x12625:   b8 00 00 00 00                        	mov eax, 0
0x1262a:   e8 39 c6 02 00                        	call 0x3ec68 <sprintf>
0x1262f:   49 83 c6 01                           	add r14, 1
0x12633:   49 83 c5 02                           	add r13, 2
0x12637:   4d 39 fd                              	cmp r13, r15
0x1263a:   75 d7                                 	jne 0x12613 <DTV_Init+0x853>
0x1263c:   4c 8d b5 40 ff ff ff                  	lea r14, [rbp - 0xc0]
0x12643:   4d 8d ac 24 e8 0e 00 00               	lea r13, [r12 + 0xee8]
0x1264b:   48 8d bb a4 ee 08 00                  	lea rdi, [rbx + 0x8eea4]
0x12652:   4d 89 e8                              	mov r8, r13
0x12655:   4c 89 f1                              	mov rcx, r14
0x12658:   ba 80 00 00 00                        	mov edx, 0x80
0x1265d:   be 00 00 00 00                        	mov esi, 0
0x12662:   e8 3f 52 00 00                        	call 0x178a6 <makeKey>
0x12667:   48 8d bb 84 f1 08 00                  	lea rdi, [rbx + 0x8f184]
0x1266e:   4d 89 e8                              	mov r8, r13
0x12671:   4c 89 f1                              	mov rcx, r14
0x12674:   ba 80 00 00 00                        	mov edx, 0x80
0x12679:   be 00 00 00 00                        	mov esi, 0
0x1267e:   e8 23 52 00 00                        	call 0x178a6 <makeKey>
0x12683:   48 8d bb 64 f4 08 00                  	lea rdi, [rbx + 0x8f464]
0x1268a:   ba 00 00 00 00                        	mov edx, 0
0x1268f:   be 01 00 00 00                        	mov esi, 1
0x12694:   e8 37 51 00 00                        	call 0x177d0 <cipherInit>
0x12699:   80 bb eb 15 00 00 16                  	cmp byte ptr [rbx + 0x15eb], 0x16
0x126a0:   75 6f                                 	jne 0x12711 <DTV_Init+0x951>
0x126a2:   48 8d 8d 3f ff ff ff                  	lea rcx, [rbp - 0xc1]
0x126a9:   ba 01 00 00 00                        	mov edx, 1
0x126ae:   be 06 00 00 00                        	mov esi, 6
0x126b3:   4c 89 e7                              	mov rdi, r12
0x126b6:   e8 de 35 ff ff                        	call 0x5c99 <FUSBDTV_Cmd_SysCtrlRead>
0x126bb:   80 bd 0f ff ff ff 00                  	cmp byte ptr [rbp - 0xf1], 0
0x126c2:   75 1b                                 	jne 0x126df <DTV_Init+0x91f>
0x126c4:   80 bb e9 15 00 00 00                  	cmp byte ptr [rbx + 0x15e9], 0
0x126cb:   75 09                                 	jne 0x126d6 <DTV_Init+0x916>
0x126cd:   80 a5 3f ff ff ff fb                  	and byte ptr [rbp - 0xc1], 0xfb
0x126d4:   eb 22                                 	jmp 0x126f8 <DTV_Init+0x938>
0x126d6:   80 8d 3f ff ff ff 04                  	or byte ptr [rbp - 0xc1], 4
0x126dd:   eb 19                                 	jmp 0x126f8 <DTV_Init+0x938>
0x126df:   80 bb e9 15 00 00 00                  	cmp byte ptr [rbx + 0x15e9], 0
0x126e6:   75 09                                 	jne 0x126f1 <DTV_Init+0x931>
0x126e8:   80 a5 3f ff ff ff f7                  	and byte ptr [rbp - 0xc1], 0xf7
0x126ef:   eb 07                                 	jmp 0x126f8 <DTV_Init+0x938>
0x126f1:   80 8d 3f ff ff ff 08                  	or byte ptr [rbp - 0xc1], 8
0x126f8:   48 8d 8d 3f ff ff ff                  	lea rcx, [rbp - 0xc1]
0x126ff:   ba 01 00 00 00                        	mov edx, 1
0x12704:   be 06 00 00 00                        	mov esi, 6
0x12709:   4c 89 e7                              	mov rdi, r12
0x1270c:   e8 ef 19 ff ff                        	call 0x4100 <FUSBDTV_Cmd_EncRead>
0x12711:   80 bd 0f ff ff ff 00                  	cmp byte ptr [rbp - 0xf1], 0
0x12718:   75 07                                 	jne 0x12721 <DTV_Init+0x961>
0x1271a:   c6 83 40 13 00 00 00                  	mov byte ptr [rbx + 0x1340], 0
0x12721:   c6 83 60 0d 03 00 01                  	mov byte ptr [rbx + 0x30d60], 1
0x12728:   ba 01 00 00 00                        	mov edx, 1
0x1272d:   8b b5 04 ff ff ff                     	mov esi, dword ptr [rbp - 0xfc]
0x12733:   4c 89 e7                              	mov rdi, r12
0x12736:   e8 f5 18 ff ff                        	call 0x4030 <FUSBDTV_Cmd_StartDSC>
0x1273b:   48 89 d8                              	mov rax, rbx
0x1273e:   48 8d 53 20                           	lea rdx, [rbx + 0x20]
0x12742:   c6 80 61 0d 03 00 01                  	mov byte ptr [rax + 0x30d61], 1
0x12749:   c6 80 81 0d 03 00 01                  	mov byte ptr [rax + 0x30d81], 1
0x12750:   48 83 c0 01                           	add rax, 1
0x12754:   48 39 d0                              	cmp rax, rdx
0x12757:   75 e9                                 	jne 0x12742 <DTV_Init+0x982>
0x12759:   c6 83 7e fd 08 00 00                  	mov byte ptr [rbx + 0x8fd7e], 0
0x12760:   48 89 df                              	mov rdi, rbx
0x12763:   e8 60 ef ff ff                        	call 0x116c8 <InitSlowDownIC>
; data inside code section at 0x12768 -- 0x1276a
0x12768:   b8 01                                              |..              |
; function: bReadI2CEncData at 0x1276a -- 0x1279a
0x1276a:   00 00                                 	add byte ptr [rax], al
0x1276c:   00 eb                                 	add bl, ch
0x1276e:   05 b8 fe ff ff                        	add eax, 0xfffffeb8
0x12773:   ff 48 8b                              	dec dword ptr [rax - 0x75]
0x12776:   55                                    	push rbp
0x12777:   c8 65 48 33                           	enter 0x4865, 0x33
0x1277b:   14 25                                 	adc al, 0x25
0x1277d:   28 00                                 	sub byte ptr [rax], al
0x1277f:   00 00                                 	add byte ptr [rax], al
0x12781:   74 05                                 	je 0x12788 <bReadI2CEncData+0x1e>
0x12783:   e8 20 c4 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x12788:   48 81 c4 d8 00 00 00                  	add rsp, 0xd8
0x1278f:   5b                                    	pop rbx
0x12790:   41 5c                                 	pop r12
0x12792:   41 5d                                 	pop r13
0x12794:   41 5e                                 	pop r14
0x12796:   41 5f                                 	pop r15
0x12798:   c9                                    	leave 
0x12799:   c3                                    	ret 
; function: bReadI2CEncData at 0x1279a -- 0x1279e
0x1279a:   55                                    	push rbp
0x1279b:   48 89 e5                              	mov rbp, rsp
; data inside code section at 0x1279e -- 0x127a0
0x1279e:   e8 4d                                              |.M              |
; function: DTV_ReadI2CEncData at 0x127a0 -- 0x127a1
; function: function_127a1 at 0x127a1 -- 0x127d0
0x127a1:   02 00                                 	add al, byte ptr [rax]
0x127a3:   89 f8                                 	mov eax, edi
0x127a5:   49 89 ca                              	mov r10, rcx
0x127a8:   4c 89 cf                              	mov rdi, r9
0x127ab:   0f b7 ca                              	movzx ecx, dx
0x127ae:   40 0f b6 d6                           	movzx edx, sil
0x127b2:   0f b6 f0                              	movzx esi, al
0x127b5:   45 0f b6 c8                           	movzx r9d, r8b
0x127b9:   4d 89 d0                              	mov r8, r10
0x127bc:   e8 13 25 ff ff                        	call 0x4cd4 <FUSBDTV_Cmd_I2CReadEnc>
0x127c1:   0f b6 f8                              	movzx edi, al
0x127c4:   e8 b7 ed fe ff                        	call 0x1580 <NT_SUCCESS>
0x127c9:   84 c0                                 	test al, al
0x127cb:   0f 95 c0                              	setne al
0x127ce:   c9                                    	leave 
0x127cf:   c3                                    	ret 
; function: DTV_ReadI2CEncData at 0x127d0 -- 0x12811
0x127d0:   55                                    	push rbp
0x127d1:   48 89 e5                              	mov rbp, rsp
0x127d4:   48 83 ec 10                           	sub rsp, 0x10
0x127d8:   e8 13 c4 02 00                        	call 0x3ebf0 <mcount>
0x127dd:   4d 89 c3                              	mov r11, r8
0x127e0:   89 f0                                 	mov eax, esi
0x127e2:   89 d6                                 	mov esi, edx
0x127e4:   45 89 c8                              	mov r8d, r9d
0x127e7:   44 0f b6 4d 10                        	movzx r9d, byte ptr [rbp + 0x10]
0x127ec:   80 bf 68 29 09 00 01                  	cmp byte ptr [rdi + 0x92968], 1
0x127f3:   75 2d                                 	jne 0x12822
0x127f5:   0f b6 c9                              	movzx ecx, cl
0x127f8:   0f b6 d2                              	movzx edx, dl
0x127fb:   0f b6 f0                              	movzx esi, al
0x127fe:   44 0f b6 97 69 29 09 00               	movzx r10d, byte ptr [rdi + 0x92969]
0x12806:   48 8b 87 38 1d 00 00                  	mov rax, qword ptr [rdi + 0x1d38]
0x1280d:   48 89 04 24                           	mov qword ptr [rsp], rax
; data inside code section at 0x12811 -- 0x12813
0x12811:   45 0f                                              |E.              |
; function: bWriteI2CEncData at 0x12813 -- 0x12843
0x12813:   b6 c9                                 	mov dh, 0xc9
0x12815:   4d 89 d8                              	mov r8, r11
0x12818:   44 89 d7                              	mov edi, r10d
0x1281b:   e8 7f f1 ff ff                        	call 0x1199f <bReadMPUI2CData>
0x12820:   eb 1f                                 	jmp 0x12841 <bWriteI2CEncData+0x2e>
0x12822:   0f b6 d1                              	movzx edx, cl
0x12825:   40 0f b6 f6                           	movzx esi, sil
0x12829:   0f b6 c0                              	movzx eax, al
0x1282c:   4c 8b 8f 38 1d 00 00                  	mov r9, qword ptr [rdi + 0x1d38]
0x12833:   45 0f b6 c0                           	movzx r8d, r8b
0x12837:   4c 89 d9                              	mov rcx, r11
0x1283a:   89 c7                                 	mov edi, eax
0x1283c:   e8 59 ff ff ff                        	call 0x1279a <bReadI2CEncData>
0x12841:   c9                                    	leave 
0x12842:   c3                                    	ret 
; function: bWriteI2CEncData at 0x12843 -- 0x12844
0x12843:   55                                    	push rbp
; data inside code section at 0x12844 -- 0x12845
0x12844:   48                                                 |H               |
; function: DTV_WriteI2CEncData at 0x12845 -- 0x12875
0x12845:   89 e5                                 	mov ebp, esp
0x12847:   e8 a4 c3 02 00                        	call 0x3ebf0 <mcount>
0x1284c:   89 f8                                 	mov eax, edi
0x1284e:   49 89 c9                              	mov r9, rcx
0x12851:   4c 89 c7                              	mov rdi, r8
0x12854:   0f b7 ca                              	movzx ecx, dx
0x12857:   40 0f b6 d6                           	movzx edx, sil
0x1285b:   0f b6 f0                              	movzx esi, al
0x1285e:   4d 89 c8                              	mov r8, r9
0x12861:   e8 33 22 ff ff                        	call 0x4a99 <FUSBDTV_Cmd_I2CWriteEnc>
0x12866:   0f b6 f8                              	movzx edi, al
0x12869:   e8 12 ed fe ff                        	call 0x1580 <NT_SUCCESS>
0x1286e:   84 c0                                 	test al, al
0x12870:   0f 95 c0                              	setne al
0x12873:   c9                                    	leave 
0x12874:   c3                                    	ret 
; function: DTV_WriteI2CEncData at 0x12875 -- 0x128a2
0x12875:   55                                    	push rbp
0x12876:   48 89 e5                              	mov rbp, rsp
0x12879:   48 83 ec 10                           	sub rsp, 0x10
0x1287d:   e8 6e c3 02 00                        	call 0x3ebf0 <mcount>
0x12882:   4d 89 c2                              	mov r10, r8
0x12885:   89 f0                                 	mov eax, esi
0x12887:   89 d6                                 	mov esi, edx
0x12889:   80 bf 68 29 09 00 01                  	cmp byte ptr [rdi + 0x92968], 1
0x12890:   75 28                                 	jne 0x128ba
0x12892:   0f b6 c9                              	movzx ecx, cl
0x12895:   0f b6 d2                              	movzx edx, dl
0x12898:   0f b6 f0                              	movzx esi, al
0x1289b:   0f b6 87 69 29 09 00                  	movzx eax, byte ptr [rdi + 0x92969]
; data inside code section at 0x128a2 -- 0x128a7
0x128a2:   48 8b bf 38 1d                                     |H..8.           |
; function: bReadBCAS_Data at 0x128a7 -- 0x128d7
0x128a7:   00 00                                 	add byte ptr [rax], al
0x128a9:   48 89 3c 24                           	mov qword ptr [rsp], rdi
0x128ad:   45 0f b6 c9                           	movzx r9d, r9b
0x128b1:   89 c7                                 	mov edi, eax
0x128b3:   e8 c5 e6 ff ff                        	call 0x10f7d <bWriteMPUI2CData>
0x128b8:   eb 1b                                 	jmp 0x128d5 <bReadBCAS_Data+0x2e>
0x128ba:   0f b6 d1                              	movzx edx, cl
0x128bd:   40 0f b6 f6                           	movzx esi, sil
0x128c1:   0f b6 c0                              	movzx eax, al
0x128c4:   4c 8b 87 38 1d 00 00                  	mov r8, qword ptr [rdi + 0x1d38]
0x128cb:   4c 89 d1                              	mov rcx, r10
0x128ce:   89 c7                                 	mov edi, eax
0x128d0:   e8 6e ff ff ff                        	call 0x12843 <bWriteI2CEncData>
0x128d5:   c9                                    	leave 
0x128d6:   c3                                    	ret 
; function: bReadBCAS_Data at 0x128d7 -- 0x12c4a
0x128d7:   55                                    	push rbp
0x128d8:   48 89 e5                              	mov rbp, rsp
0x128db:   41 57                                 	push r15
0x128dd:   41 56                                 	push r14
0x128df:   41 55                                 	push r13
0x128e1:   41 54                                 	push r12
0x128e3:   53                                    	push rbx
0x128e4:   48 83 ec 78                           	sub rsp, 0x78
0x128e8:   e8 03 c3 02 00                        	call 0x3ebf0 <mcount>
0x128ed:   48 89 75 90                           	mov qword ptr [rbp - 0x70], rsi
0x128f1:   48 89 55 80                           	mov qword ptr [rbp - 0x80], rdx
0x128f5:   44 89 45 a8                           	mov dword ptr [rbp - 0x58], r8d
0x128f9:   88 4d 9c                              	mov byte ptr [rbp - 0x64], cl
0x128fc:   44 88 4d 8f                           	mov byte ptr [rbp - 0x71], r9b
0x12900:   4c 8b af e0 04 00 00                  	mov r13, qword ptr [rdi + 0x4e0]
0x12907:   80 f9 01                              	cmp cl, 1
0x1290a:   b8 03 00 00 00                        	mov eax, 3
0x1290f:   ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x12914:   0f 44 c2                              	cmove eax, edx
0x12917:   89 45 ac                              	mov dword ptr [rbp - 0x54], eax
0x1291a:   41 bc 00 00 00 00                     	mov r12d, 0
0x12920:   48 8d 45 b0                           	lea rax, [rbp - 0x50]
0x12924:   48 83 c0 02                           	add rax, 2
0x12928:   48 89 45 a0                           	mov qword ptr [rbp - 0x60], rax
0x1292c:   41 0f b6 9d ac fc 08 00               	movzx ebx, byte ptr [r13 + 0x8fcac]
0x12934:   4c 8d 75 b0                           	lea r14, [rbp - 0x50]
0x12938:   49 83 c6 01                           	add r14, 1
0x1293c:   bf 32 00 00 00                        	mov edi, 0x32
0x12941:   e8 5b a2 00 00                        	call 0x1cba1 <TLIB_Delay>
0x12946:   83 7d a8 40                           	cmp dword ptr [rbp - 0x58], 0x40
0x1294a:   7e 27                                 	jle 0x12973 <bReadBCAS_Data+0x9c>
0x1294c:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x12953:   41 b9 00 00 00 00                     	mov r9d, 0
0x12959:   4c 8b 45 a0                           	mov r8, qword ptr [rbp - 0x60]
0x1295d:   b9 01 00 00 00                        	mov ecx, 1
0x12962:   ba 39 00 00 00                        	mov edx, 0x39
0x12967:   89 de                                 	mov esi, ebx
0x12969:   4c 89 ef                              	mov rdi, r13
0x1296c:   e8 5f fe ff ff                        	call 0x127d0 <DTV_ReadI2CEncData>
0x12971:   eb 04                                 	jmp 0x12977 <bReadBCAS_Data+0xa0>
0x12973:   c6 45 b2 00                           	mov byte ptr [rbp - 0x4e], 0
0x12977:   41 89 df                              	mov r15d, ebx
0x1297a:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x12981:   41 b9 00 00 00 00                     	mov r9d, 0
0x12987:   4c 8d 45 b0                           	lea r8, [rbp - 0x50]
0x1298b:   b9 01 00 00 00                        	mov ecx, 1
0x12990:   ba 03 00 00 00                        	mov edx, 3
0x12995:   89 de                                 	mov esi, ebx
0x12997:   4c 89 ef                              	mov rdi, r13
0x1299a:   e8 31 fe ff ff                        	call 0x127d0 <DTV_ReadI2CEncData>
0x1299f:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x129a6:   41 b9 00 00 00 00                     	mov r9d, 0
0x129ac:   4d 89 f0                              	mov r8, r14
0x129af:   b9 01 00 00 00                        	mov ecx, 1
0x129b4:   ba 04 00 00 00                        	mov edx, 4
0x129b9:   89 de                                 	mov esi, ebx
0x129bb:   4c 89 ef                              	mov rdi, r13
0x129be:   e8 0d fe ff ff                        	call 0x127d0 <DTV_ReadI2CEncData>
0x129c3:   0f b6 55 b0                           	movzx edx, byte ptr [rbp - 0x50]
0x129c7:   0f b6 4d b2                           	movzx ecx, byte ptr [rbp - 0x4e]
0x129cb:   84 c0                                 	test al, al
0x129cd:   0f 84 9d 02 00 00                     	je 0x12c70
0x129d3:   f6 45 b1 01                           	test byte ptr [rbp - 0x4f], 1
0x129d7:   0f 84 8e 02 00 00                     	je 0x12c6b
0x129dd:   83 e1 01                              	and ecx, 1
0x129e0:   c1 e1 08                              	shl ecx, 8
0x129e3:   0f b6 d2                              	movzx edx, dl
0x129e6:   09 ca                                 	or edx, ecx
0x129e8:   39 55 ac                              	cmp dword ptr [rbp - 0x54], edx
0x129eb:   7f 21                                 	jg 0x12a0e <bReadBCAS_Data+0x137>
0x129ed:   41 89 d6                              	mov r14d, edx
0x129f0:   89 55 ac                              	mov dword ptr [rbp - 0x54], edx
0x129f3:   39 55 a8                              	cmp dword ptr [rbp - 0x58], edx
0x129f6:   0f 8c 6f 02 00 00                     	jl 0x12c6b
0x129fc:   4c 8b 65 90                           	mov r12, qword ptr [rbp - 0x70]
0x12a00:   bb 00 00 00 00                        	mov ebx, 0
0x12a05:   85 d2                                 	test edx, edx
0x12a07:   7f 18                                 	jg 0x12a21 <bReadBCAS_Data+0x14a>
0x12a09:   e9 90 00 00 00                        	jmp 0x12a9e <bReadBCAS_Data+0x1c7>
0x12a0e:   41 83 fc 29                           	cmp r12d, 0x29
0x12a12:   0f 84 53 02 00 00                     	je 0x12c6b
0x12a18:   41 83 c4 01                           	add r12d, 1
0x12a1c:   e9 1b ff ff ff                        	jmp 0x1293c <bReadBCAS_Data+0x65>
0x12a21:   89 55 a0                              	mov dword ptr [rbp - 0x60], edx
0x12a24:   44 0f b6 75 8f                        	movzx r14d, byte ptr [rbp - 0x71]
0x12a29:   45 84 f6                              	test r14b, r14b
0x12a2c:   74 2c                                 	je 0x12a5a <bReadBCAS_Data+0x183>
0x12a2e:   f6 c3 3f                              	test bl, 0x3f
0x12a31:   75 27                                 	jne 0x12a5a <bReadBCAS_Data+0x183>
0x12a33:   89 d8                                 	mov eax, ebx
0x12a35:   c1 f8 06                              	sar eax, 6
0x12a38:   88 45 c0                              	mov byte ptr [rbp - 0x40], al
0x12a3b:   41 b9 00 00 00 00                     	mov r9d, 0
0x12a41:   4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0x12a45:   b9 01 00 00 00                        	mov ecx, 1
0x12a4a:   ba 3a 00 00 00                        	mov edx, 0x3a
0x12a4f:   44 89 fe                              	mov esi, r15d
0x12a52:   4c 89 ef                              	mov rdi, r13
0x12a55:   e8 1b fe ff ff                        	call 0x12875 <DTV_WriteI2CEncData>
0x12a5a:   89 da                                 	mov edx, ebx
0x12a5c:   83 e2 3f                              	and edx, 0x3f
0x12a5f:   83 c2 40                              	add edx, 0x40
0x12a62:   0f b6 d2                              	movzx edx, dl
0x12a65:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x12a6c:   41 b9 00 00 00 00                     	mov r9d, 0
0x12a72:   4c 8d 45 b0                           	lea r8, [rbp - 0x50]
0x12a76:   b9 01 00 00 00                        	mov ecx, 1
0x12a7b:   44 89 fe                              	mov esi, r15d
0x12a7e:   4c 89 ef                              	mov rdi, r13
0x12a81:   e8 4a fd ff ff                        	call 0x127d0 <DTV_ReadI2CEncData>
0x12a86:   0f b6 45 b0                           	movzx eax, byte ptr [rbp - 0x50]
0x12a8a:   41 88 04 24                           	mov byte ptr [r12], al
0x12a8e:   83 c3 01                              	add ebx, 1
0x12a91:   49 83 c4 01                           	add r12, 1
0x12a95:   3b 5d ac                              	cmp ebx, dword ptr [rbp - 0x54]
0x12a98:   7c 8f                                 	jl 0x12a29 <bReadBCAS_Data+0x152>
0x12a9a:   44 8b 75 a0                           	mov r14d, dword ptr [rbp - 0x60]
0x12a9e:   bb 00 00 00 00                        	mov ebx, 0
0x12aa3:   80 7d 9c 00                           	cmp byte ptr [rbp - 0x64], 0
0x12aa7:   0f 85 90 01 00 00                     	jne 0x12c3d <bReadBCAS_Data+0x366>
0x12aad:   48 8b 4d 90                           	mov rcx, qword ptr [rbp - 0x70]
0x12ab1:   0f b6 79 02                           	movzx edi, byte ptr [rcx + 2]
0x12ab5:   e8 23 7d ff ff                        	call 0xa7dd <ChangeEndian>
0x12aba:   0f b6 c0                              	movzx eax, al
0x12abd:   83 c0 04                              	add eax, 4
0x12ac0:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x12ac3:   4c 8d 65 b0                           	lea r12, [rbp - 0x50]
0x12ac7:   49 8d 44 24 02                        	lea rax, [r12 + 2]
0x12acc:   48 89 85 78 ff ff ff                  	mov qword ptr [rbp - 0x88], rax
0x12ad3:   49 8d 4c 24 01                        	lea rcx, [r12 + 1]
0x12ad8:   48 89 4d a0                           	mov qword ptr [rbp - 0x60], rcx
0x12adc:   bf 32 00 00 00                        	mov edi, 0x32
0x12ae1:   e8 bb a0 00 00                        	call 0x1cba1 <TLIB_Delay>
0x12ae6:   83 7d a8 40                           	cmp dword ptr [rbp - 0x58], 0x40
0x12aea:   7e 2b                                 	jle 0x12b17 <bReadBCAS_Data+0x240>
0x12aec:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x12af3:   41 b9 00 00 00 00                     	mov r9d, 0
0x12af9:   4c 8b 85 78 ff ff ff                  	mov r8, qword ptr [rbp - 0x88]
0x12b00:   b9 01 00 00 00                        	mov ecx, 1
0x12b05:   ba 39 00 00 00                        	mov edx, 0x39
0x12b0a:   44 89 fe                              	mov esi, r15d
0x12b0d:   4c 89 ef                              	mov rdi, r13
0x12b10:   e8 bb fc ff ff                        	call 0x127d0 <DTV_ReadI2CEncData>
0x12b15:   eb 04                                 	jmp 0x12b1b <bReadBCAS_Data+0x244>
0x12b17:   c6 45 b2 00                           	mov byte ptr [rbp - 0x4e], 0
0x12b1b:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x12b22:   41 b9 00 00 00 00                     	mov r9d, 0
0x12b28:   4d 89 e0                              	mov r8, r12
0x12b2b:   b9 01 00 00 00                        	mov ecx, 1
0x12b30:   ba 03 00 00 00                        	mov edx, 3
0x12b35:   44 89 fe                              	mov esi, r15d
0x12b38:   4c 89 ef                              	mov rdi, r13
0x12b3b:   e8 90 fc ff ff                        	call 0x127d0 <DTV_ReadI2CEncData>
0x12b40:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x12b47:   41 b9 00 00 00 00                     	mov r9d, 0
0x12b4d:   4c 8b 45 a0                           	mov r8, qword ptr [rbp - 0x60]
0x12b51:   b9 01 00 00 00                        	mov ecx, 1
0x12b56:   ba 04 00 00 00                        	mov edx, 4
0x12b5b:   44 89 fe                              	mov esi, r15d
0x12b5e:   4c 89 ef                              	mov rdi, r13
0x12b61:   e8 6a fc ff ff                        	call 0x127d0 <DTV_ReadI2CEncData>
0x12b66:   0f b6 55 b0                           	movzx edx, byte ptr [rbp - 0x50]
0x12b6a:   0f b6 4d b2                           	movzx ecx, byte ptr [rbp - 0x4e]
0x12b6e:   84 c0                                 	test al, al
0x12b70:   0f 84 fa 00 00 00                     	je 0x12c70
0x12b76:   f6 45 b1 01                           	test byte ptr [rbp - 0x4f], 1
0x12b7a:   0f 84 eb 00 00 00                     	je 0x12c6b
0x12b80:   83 e1 01                              	and ecx, 1
0x12b83:   c1 e1 08                              	shl ecx, 8
0x12b86:   0f b6 d2                              	movzx edx, dl
0x12b89:   09 ca                                 	or edx, ecx
0x12b8b:   39 55 9c                              	cmp dword ptr [rbp - 0x64], edx
0x12b8e:   7f 22                                 	jg 0x12bb2 <bReadBCAS_Data+0x2db>
0x12b90:   89 d3                                 	mov ebx, edx
0x12b92:   2b 5d ac                              	sub ebx, dword ptr [rbp - 0x54]
0x12b95:   44 8b 65 ac                           	mov r12d, dword ptr [rbp - 0x54]
0x12b99:   46 8d 24 23                           	lea r12d, [rbx + r12]
0x12b9d:   44 39 65 a8                           	cmp dword ptr [rbp - 0x58], r12d
0x12ba1:   0f 8c c4 00 00 00                     	jl 0x12c6b
0x12ba7:   44 3b 65 ac                           	cmp r12d, dword ptr [rbp - 0x54]
0x12bab:   7f 18                                 	jg 0x12bc5 <bReadBCAS_Data+0x2ee>
0x12bad:   e9 8b 00 00 00                        	jmp 0x12c3d <bReadBCAS_Data+0x366>
0x12bb2:   83 fb 07                              	cmp ebx, 7
0x12bb5:   0f 84 b0 00 00 00                     	je 0x12c6b
0x12bbb:   83 c3 01                              	add ebx, 1
0x12bbe:   66 90                                 	nop 
0x12bc0:   e9 17 ff ff ff                        	jmp 0x12adc <bReadBCAS_Data+0x205>
0x12bc5:   80 7d 8f 00                           	cmp byte ptr [rbp - 0x71], 0
0x12bc9:   74 2e                                 	je 0x12bf9 <bReadBCAS_Data+0x322>
0x12bcb:   41 f6 c6 3f                           	test r14b, 0x3f
0x12bcf:   75 28                                 	jne 0x12bf9 <bReadBCAS_Data+0x322>
0x12bd1:   44 89 f0                              	mov eax, r14d
0x12bd4:   c1 f8 06                              	sar eax, 6
0x12bd7:   88 45 c0                              	mov byte ptr [rbp - 0x40], al
0x12bda:   41 b9 00 00 00 00                     	mov r9d, 0
0x12be0:   4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0x12be4:   b9 01 00 00 00                        	mov ecx, 1
0x12be9:   ba 3a 00 00 00                        	mov edx, 0x3a
0x12bee:   44 89 fe                              	mov esi, r15d
0x12bf1:   4c 89 ef                              	mov rdi, r13
0x12bf4:   e8 7c fc ff ff                        	call 0x12875 <DTV_WriteI2CEncData>
0x12bf9:   44 89 f2                              	mov edx, r14d
0x12bfc:   83 e2 3f                              	and edx, 0x3f
0x12bff:   83 c2 40                              	add edx, 0x40
0x12c02:   0f b6 d2                              	movzx edx, dl
0x12c05:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x12c0c:   41 b9 00 00 00 00                     	mov r9d, 0
0x12c12:   4c 8d 45 b0                           	lea r8, [rbp - 0x50]
0x12c16:   b9 01 00 00 00                        	mov ecx, 1
0x12c1b:   44 89 fe                              	mov esi, r15d
0x12c1e:   4c 89 ef                              	mov rdi, r13
0x12c21:   e8 aa fb ff ff                        	call 0x127d0 <DTV_ReadI2CEncData>
0x12c26:   49 63 c6                              	movsxd rax, r14d
0x12c29:   0f b6 55 b0                           	movzx edx, byte ptr [rbp - 0x50]
0x12c2d:   48 8b 4d 90                           	mov rcx, qword ptr [rbp - 0x70]
0x12c31:   88 14 01                              	mov byte ptr [rcx + rax], dl
0x12c34:   41 83 c6 01                           	add r14d, 1
0x12c38:   45 39 f4                              	cmp r12d, r14d
0x12c3b:   7f 88                                 	jg 0x12bc5 <bReadBCAS_Data+0x2ee>
0x12c3d:   03 5d ac                              	add ebx, dword ptr [rbp - 0x54]
0x12c40:   48 8b 45 80                           	mov rax, qword ptr [rbp - 0x80]
0x12c44:   89 18                                 	mov dword ptr [rax], ebx
0x12c46:   c6 45 c0 0c                           	mov byte ptr [rbp - 0x40], 0xc ; "GNU"
; data inside code section at 0x12c4a -- 0x12c4f
0x12c4a:   41 b9 00 00 00                                     |A....           |
; function: bWtBCAS_Data at 0x12c4f -- 0x12c7f
0x12c4f:   00 4c 8d 45                           	add byte ptr [rbp + rcx*4 + 0x45], cl
0x12c53:   c0 b9 01 00 00 00 ba                  	sar byte ptr [rcx + 1], 0xba
0x12c5a:   00 00                                 	add byte ptr [rax], al
0x12c5c:   00 00                                 	add byte ptr [rax], al
0x12c5e:   44 89 fe                              	mov esi, r15d
0x12c61:   4c 89 ef                              	mov rdi, r13
0x12c64:   e8 0c fc ff ff                        	call 0x12875 <DTV_WriteI2CEncData>
0x12c69:   eb 05                                 	jmp 0x12c70 <bWtBCAS_Data+0x21>
0x12c6b:   b8 00 00 00 00                        	mov eax, 0
0x12c70:   48 83 c4 78                           	add rsp, 0x78
0x12c74:   5b                                    	pop rbx
0x12c75:   41 5c                                 	pop r12
0x12c77:   41 5d                                 	pop r13
0x12c79:   41 5e                                 	pop r14
0x12c7b:   41 5f                                 	pop r15
0x12c7d:   c9                                    	leave 
0x12c7e:   c3                                    	ret 
; function: bWtBCAS_Data at 0x12c7f -- 0x12d8e
0x12c7f:   55                                    	push rbp
0x12c80:   48 89 e5                              	mov rbp, rsp
0x12c83:   41 57                                 	push r15
0x12c85:   41 56                                 	push r14
0x12c87:   41 55                                 	push r13
0x12c89:   41 54                                 	push r12
0x12c8b:   53                                    	push rbx
0x12c8c:   48 83 ec 28                           	sub rsp, 0x28
0x12c90:   e8 5b bf 02 00                        	call 0x3ebf0 <mcount>
0x12c95:   48 89 f3                              	mov rbx, rsi
0x12c98:   89 55 bc                              	mov dword ptr [rbp - 0x44], edx
0x12c9b:   41 89 ce                              	mov r14d, ecx
0x12c9e:   4c 8b af e0 04 00 00                  	mov r13, qword ptr [rdi + 0x4e0]
0x12ca5:   45 0f b6 bd ac fc 08 00               	movzx r15d, byte ptr [r13 + 0x8fcac]
0x12cad:   0f b6 45 bc                           	movzx eax, byte ptr [rbp - 0x44]
0x12cb1:   88 45 c0                              	mov byte ptr [rbp - 0x40], al
0x12cb4:   45 0f b6 ff                           	movzx r15d, r15b
0x12cb8:   41 b9 00 00 00 00                     	mov r9d, 0
0x12cbe:   4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0x12cc2:   b9 01 00 00 00                        	mov ecx, 1
0x12cc7:   ba 02 00 00 00                        	mov edx, 2
0x12ccc:   44 89 fe                              	mov esi, r15d
0x12ccf:   4c 89 ef                              	mov rdi, r13
0x12cd2:   e8 9e fb ff ff                        	call 0x12875 <DTV_WriteI2CEncData>
0x12cd7:   45 84 f6                              	test r14b, r14b
0x12cda:   74 2b                                 	je 0x12d07 <bWtBCAS_Data+0x88>
0x12cdc:   8b 45 bc                              	mov eax, dword ptr [rbp - 0x44]
0x12cdf:   c1 f8 08                              	sar eax, 8
0x12ce2:   83 e0 01                              	and eax, 1
0x12ce5:   88 45 c0                              	mov byte ptr [rbp - 0x40], al
0x12ce8:   41 b9 00 00 00 00                     	mov r9d, 0
0x12cee:   4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0x12cf2:   b9 01 00 00 00                        	mov ecx, 1
0x12cf7:   ba 38 00 00 00                        	mov edx, 0x38
0x12cfc:   44 89 fe                              	mov esi, r15d
0x12cff:   4c 89 ef                              	mov rdi, r13
0x12d02:   e8 6e fb ff ff                        	call 0x12875 <DTV_WriteI2CEncData>
0x12d07:   83 7d bc 00                           	cmp dword ptr [rbp - 0x44], 0
0x12d0b:   7e 73                                 	jle 0x12d80 <bWtBCAS_Data+0x101>
0x12d0d:   41 bc 00 00 00 00                     	mov r12d, 0
0x12d13:   45 84 f6                              	test r14b, r14b
0x12d16:   74 2e                                 	je 0x12d46 <bWtBCAS_Data+0xc7>
0x12d18:   41 f6 c4 3f                           	test r12b, 0x3f
0x12d1c:   75 28                                 	jne 0x12d46 <bWtBCAS_Data+0xc7>
0x12d1e:   44 89 e0                              	mov eax, r12d
0x12d21:   c1 f8 06                              	sar eax, 6
0x12d24:   88 45 c0                              	mov byte ptr [rbp - 0x40], al
0x12d27:   41 b9 00 00 00 00                     	mov r9d, 0
0x12d2d:   4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0x12d31:   b9 01 00 00 00                        	mov ecx, 1
0x12d36:   ba 3a 00 00 00                        	mov edx, 0x3a
0x12d3b:   44 89 fe                              	mov esi, r15d
0x12d3e:   4c 89 ef                              	mov rdi, r13
0x12d41:   e8 2f fb ff ff                        	call 0x12875 <DTV_WriteI2CEncData>
0x12d46:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x12d49:   88 45 c0                              	mov byte ptr [rbp - 0x40], al
0x12d4c:   44 89 e2                              	mov edx, r12d
0x12d4f:   83 e2 3f                              	and edx, 0x3f
0x12d52:   83 c2 40                              	add edx, 0x40
0x12d55:   0f b6 d2                              	movzx edx, dl
0x12d58:   41 b9 00 00 00 00                     	mov r9d, 0
0x12d5e:   4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0x12d62:   b9 01 00 00 00                        	mov ecx, 1
0x12d67:   44 89 fe                              	mov esi, r15d
0x12d6a:   4c 89 ef                              	mov rdi, r13
0x12d6d:   e8 03 fb ff ff                        	call 0x12875 <DTV_WriteI2CEncData>
0x12d72:   41 83 c4 01                           	add r12d, 1
0x12d76:   48 83 c3 01                           	add rbx, 1
0x12d7a:   44 39 65 bc                           	cmp dword ptr [rbp - 0x44], r12d
0x12d7e:   7f 93                                 	jg 0x12d13 <bWtBCAS_Data+0x94>
0x12d80:   c6 45 c0 0a                           	mov byte ptr [rbp - 0x40], 0xa
0x12d84:   41 b9 00 00 00 00                     	mov r9d, 0
0x12d8a:   4c 8d 45 c0                           	lea r8, [rbp - 0x40]
; data inside code section at 0x12d8e -- 0x12d90
0x12d8e:   b9 01                                              |..              |
; function: Get_BCAS_INFO at 0x12d90 -- 0x12dc0
0x12d90:   00 00                                 	add byte ptr [rax], al
0x12d92:   00 ba 00 00 00 00                     	add byte ptr [rdx], bh
0x12d98:   44 89 fe                              	mov esi, r15d
0x12d9b:   4c 89 ef                              	mov rdi, r13
0x12d9e:   e8 d2 fa ff ff                        	call 0x12875 <DTV_WriteI2CEncData>
0x12da3:   89 c3                                 	mov ebx, eax
0x12da5:   bf 64 00 00 00                        	mov edi, 0x64
0x12daa:   e8 f2 9d 00 00                        	call 0x1cba1 <TLIB_Delay>
0x12daf:   89 d8                                 	mov eax, ebx
0x12db1:   48 83 c4 28                           	add rsp, 0x28
0x12db5:   5b                                    	pop rbx
0x12db6:   41 5c                                 	pop r12
0x12db8:   41 5d                                 	pop r13
0x12dba:   41 5e                                 	pop r14
0x12dbc:   41 5f                                 	pop r15
0x12dbe:   c9                                    	leave 
0x12dbf:   c3                                    	ret 
; function: Get_BCAS_INFO at 0x12dc0 -- 0x12f62
0x12dc0:   55                                    	push rbp
0x12dc1:   48 89 e5                              	mov rbp, rsp
0x12dc4:   41 56                                 	push r14
0x12dc6:   41 55                                 	push r13
0x12dc8:   41 54                                 	push r12
0x12dca:   53                                    	push rbx
0x12dcb:   48 81 ec a0 01 00 00                  	sub rsp, 0x1a0
0x12dd2:   e8 19 be 02 00                        	call 0x3ebf0 <mcount>
0x12dd7:   49 89 fe                              	mov r14, rdi
0x12dda:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x12de3:   48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x12de7:   31 c0                                 	xor eax, eax
0x12de9:   c6 85 40 fe ff ff 90                  	mov byte ptr [rbp - 0x1c0], 0x90
0x12df0:   c6 85 41 fe ff ff 32                  	mov byte ptr [rbp - 0x1bf], 0x32
0x12df7:   c6 85 42 fe ff ff 00                  	mov byte ptr [rbp - 0x1be], 0
0x12dfe:   c6 85 43 fe ff ff 00                  	mov byte ptr [rbp - 0x1bd], 0
0x12e05:   c6 85 44 fe ff ff 00                  	mov byte ptr [rbp - 0x1bc], 0
0x12e0c:   c6 45 90 00                           	mov byte ptr [rbp - 0x70], 0
0x12e10:   80 bf 82 14 00 00 01                  	cmp byte ptr [rdi + 0x1482], 1
0x12e17:   19 c0                                 	sbb eax, eax
0x12e19:   f7 d0                                 	not eax
0x12e1b:   83 e0 40                              	and eax, 0x40
0x12e1e:   88 45 91                              	mov byte ptr [rbp - 0x6f], al
0x12e21:   c6 45 92 05                           	mov byte ptr [rbp - 0x6e], 5
0x12e25:   48 8d 45 93                           	lea rax, [rbp - 0x6d]
0x12e29:   48 8d 95 40 fe ff ff                  	lea rdx, [rbp - 0x1c0]
0x12e30:   8b 0a                                 	mov ecx, dword ptr [rdx]
0x12e32:   89 08                                 	mov dword ptr [rax], ecx
0x12e34:   0f b6 52 04                           	movzx edx, byte ptr [rdx + 4]
0x12e38:   88 50 04                              	mov byte ptr [rax + 4], dl
0x12e3b:   c6 45 98 00                           	mov byte ptr [rbp - 0x68], 0
0x12e3f:   80 bf 80 14 00 00 00                  	cmp byte ptr [rdi + 0x1480], 0
0x12e46:   74 1b                                 	je 0x12e63 <Get_BCAS_INFO+0xa3>
0x12e48:   48 8d 5d 90                           	lea rbx, [rbp - 0x70]
0x12e4c:   4c 8d 63 09                           	lea r12, [rbx + 9]
0x12e50:   0f b6 3b                              	movzx edi, byte ptr [rbx]
0x12e53:   e8 85 79 ff ff                        	call 0xa7dd <ChangeEndian>
0x12e58:   88 03                                 	mov byte ptr [rbx], al
0x12e5a:   48 83 c3 01                           	add rbx, 1
0x12e5e:   4c 39 e3                              	cmp rbx, r12
0x12e61:   75 ed                                 	jne 0x12e50 <Get_BCAS_INFO+0x90>
0x12e63:   0f b6 45 90                           	movzx eax, byte ptr [rbp - 0x70]
0x12e67:   88 45 98                              	mov byte ptr [rbp - 0x68], al
0x12e6a:   48 8d 4d 90                           	lea rcx, [rbp - 0x70]
0x12e6e:   48 8d 41 01                           	lea rax, [rcx + 1]
0x12e72:   48 83 c1 08                           	add rcx, 8
0x12e76:   0f b6 10                              	movzx edx, byte ptr [rax]
0x12e79:   30 55 98                              	xor byte ptr [rbp - 0x68], dl
0x12e7c:   48 83 c0 01                           	add rax, 1
0x12e80:   48 39 c8                              	cmp rax, rcx
0x12e83:   75 f1                                 	jne 0x12e76 <Get_BCAS_INFO+0xb6>
0x12e85:   41 0f b6 8e 85 14 00 00               	movzx ecx, byte ptr [r14 + 0x1485]
0x12e8d:   48 8d 75 90                           	lea rsi, [rbp - 0x70]
0x12e91:   49 8b 7e 40                           	mov rdi, qword ptr [r14 + 0x40]
0x12e95:   ba 09 00 00 00                        	mov edx, 9
0x12e9a:   e8 e0 fd ff ff                        	call 0x12c7f <bWtBCAS_Data>
0x12e9f:   84 c0                                 	test al, al
0x12ea1:   0f 84 c2 00 00 00                     	je 0x12f69
0x12ea7:   48 8d 95 4c fe ff ff                  	lea rdx, [rbp - 0x1b4]
0x12eae:   48 8d b5 50 fe ff ff                  	lea rsi, [rbp - 0x1b0]
0x12eb5:   49 8b 7e 40                           	mov rdi, qword ptr [r14 + 0x40]
0x12eb9:   45 0f b6 8e 85 14 00 00               	movzx r9d, byte ptr [r14 + 0x1485]
0x12ec1:   41 b8 40 01 00 00                     	mov r8d, 0x140
0x12ec7:   b9 00 00 00 00                        	mov ecx, 0
0x12ecc:   e8 06 fa ff ff                        	call 0x128d7 <bReadBCAS_Data>
0x12ed1:   84 c0                                 	test al, al
0x12ed3:   0f 84 90 00 00 00                     	je 0x12f69
0x12ed9:   8b 85 4c fe ff ff                     	mov eax, dword ptr [rbp - 0x1b4]
0x12edf:   83 f8 04                              	cmp eax, 4
0x12ee2:   7e 5e                                 	jle 0x12f42 <Get_BCAS_INFO+0x182>
0x12ee4:   83 e8 04                              	sub eax, 4
0x12ee7:   41 89 86 c8 15 00 00                  	mov dword ptr [r14 + 0x15c8], eax
0x12eee:   41 80 be 80 14 00 00 00               	cmp byte ptr [r14 + 0x1480], 0
0x12ef6:   74 55                                 	je 0x12f4d <Get_BCAS_INFO+0x18d>
0x12ef8:   8b 85 4c fe ff ff                     	mov eax, dword ptr [rbp - 0x1b4]
0x12efe:   83 e8 01                              	sub eax, 1
0x12f01:   83 f8 03                              	cmp eax, 3
0x12f04:   7e 47                                 	jle 0x12f4d <Get_BCAS_INFO+0x18d>
0x12f06:   48 8d 9d 53 fe ff ff                  	lea rbx, [rbp - 0x1ad]
0x12f0d:   4d 89 f4                              	mov r12, r14
0x12f10:   41 bd 03 00 00 00                     	mov r13d, 3
0x12f16:   0f b6 3b                              	movzx edi, byte ptr [rbx]
0x12f19:   e8 bf 78 ff ff                        	call 0xa7dd <ChangeEndian>
0x12f1e:   41 88 84 24 86 14 00 00               	mov byte ptr [r12 + 0x1486], al
0x12f26:   41 83 c5 01                           	add r13d, 1
0x12f2a:   48 83 c3 01                           	add rbx, 1
0x12f2e:   49 83 c4 01                           	add r12, 1
0x12f32:   8b 85 4c fe ff ff                     	mov eax, dword ptr [rbp - 0x1b4]
0x12f38:   83 e8 01                              	sub eax, 1
0x12f3b:   44 39 e8                              	cmp eax, r13d
0x12f3e:   7f d6                                 	jg 0x12f16 <Get_BCAS_INFO+0x156>
0x12f40:   eb 0b                                 	jmp 0x12f4d <Get_BCAS_INFO+0x18d>
0x12f42:   41 c7 86 c8 15 00 00 00 00 00 00      	mov dword ptr [r14 + 0x15c8], 0
0x12f4d:   41 0f b6 86 82 14 00 00               	movzx eax, byte ptr [r14 + 0x1482]
0x12f55:   83 c0 01                              	add eax, 1
0x12f58:   83 e0 01                              	and eax, 1
0x12f5b:   41 88 86 82 14 00 00                  	mov byte ptr [r14 + 0x1482], al
; function: DTV_Set_EncSeedRegASV5606 at 0x12f62 -- 0x12f92
0x12f62:   b8 01 00 00 00                        	mov eax, 1
0x12f67:   eb 05                                 	jmp 0x12f6e <DTV_Set_EncSeedRegASV5606+0xc>
0x12f69:   b8 00 00 00 00                        	mov eax, 0
0x12f6e:   48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x12f72:   65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x12f7b:   74 05                                 	je 0x12f82 <DTV_Set_EncSeedRegASV5606+0x20>
0x12f7d:   e8 26 bc 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x12f82:   48 81 c4 a0 01 00 00                  	add rsp, 0x1a0
0x12f89:   5b                                    	pop rbx
0x12f8a:   41 5c                                 	pop r12
0x12f8c:   41 5d                                 	pop r13
0x12f8e:   41 5e                                 	pop r14
0x12f90:   c9                                    	leave 
0x12f91:   c3                                    	ret 
; function: DTV_Set_EncSeedRegASV5606 at 0x12f92 -- 0x13092
0x12f92:   55                                    	push rbp
0x12f93:   48 89 e5                              	mov rbp, rsp
0x12f96:   48 83 ec 30                           	sub rsp, 0x30
0x12f9a:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x12f9e:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x12fa2:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x12fa6:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x12faa:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x12fae:   e8 3d bc 02 00                        	call 0x3ebf0 <mcount>
0x12fb3:   48 89 fb                              	mov rbx, rdi
0x12fb6:   49 89 f7                              	mov r15, rsi
0x12fb9:   41 89 d5                              	mov r13d, edx
0x12fbc:   48 8b 8f 38 1d 00 00                  	mov rcx, qword ptr [rdi + 0x1d38]
0x12fc3:   80 bf d8 15 00 00 01                  	cmp byte ptr [rdi + 0x15d8], 1
0x12fca:   0f 85 d7 00 00 00                     	jne 0x130a7
0x12fd0:   0f b6 97 30 1d 00 00                  	movzx edx, byte ptr [rdi + 0x1d30]
0x12fd7:   0f b6 87 8d 14 00 00                  	movzx eax, byte ptr [rdi + 0x148d]
0x12fde:   3c 0f                                 	cmp al, 0xf
0x12fe0:   74 08                                 	je 0x12fea <DTV_Set_EncSeedRegASV5606+0x58>
0x12fe2:   3c 04                                 	cmp al, 4
0x12fe4:   74 04                                 	je 0x12fea <DTV_Set_EncSeedRegASV5606+0x58>
0x12fe6:   3c 11                                 	cmp al, 0x11
0x12fe8:   75 31                                 	jne 0x1301b <DTV_Set_EncSeedRegASV5606+0x89>
0x12fea:   84 d2                                 	test dl, dl
0x12fec:   0f 1f 40 00                           	nop dword ptr [rax]
0x12ff0:   74 29                                 	je 0x1301b <DTV_Set_EncSeedRegASV5606+0x89>
0x12ff2:   b8 00 00 00 00                        	mov eax, 0
0x12ff7:   48 8b 94 01 e0 04 00 00               	mov rdx, qword ptr [rcx + rax + 0x4e0]
0x12fff:   48 85 d2                              	test rdx, rdx
0x13002:   74 0d                                 	je 0x13011 <DTV_Set_EncSeedRegASV5606+0x7f>
0x13004:   80 ba 60 0d 03 00 00                  	cmp byte ptr [rdx + 0x30d60], 0
0x1300b:   0f 84 96 00 00 00                     	je 0x130a7
0x13011:   48 83 c0 08                           	add rax, 8
0x13015:   48 83 f8 40                           	cmp rax, 0x40
0x13019:   75 dc                                 	jne 0x12ff7 <DTV_Set_EncSeedRegASV5606+0x65>
0x1301b:   80 bb 49 fa 08 00 00                  	cmp byte ptr [rbx + 0x8fa49], 0
0x13022:   74 13                                 	je 0x13037 <DTV_Set_EncSeedRegASV5606+0xa5>
0x13024:   bf 01 00 00 00                        	mov edi, 1
0x13029:   e8 73 9b 00 00                        	call 0x1cba1 <TLIB_Delay>
0x1302e:   80 bb 49 fa 08 00 00                  	cmp byte ptr [rbx + 0x8fa49], 0
0x13035:   75 ed                                 	jne 0x13024 <DTV_Set_EncSeedRegASV5606+0x92>
0x13037:   c6 83 49 fa 08 00 01                  	mov byte ptr [rbx + 0x8fa49], 1
0x1303e:   45 84 ed                              	test r13b, r13b
0x13041:   74 56                                 	je 0x13099
0x13043:   41 bc 00 00 00 00                     	mov r12d, 0
0x13049:   45 84 ed                              	test r13b, r13b
0x1304c:   41 be 01 00 00 00                     	mov r14d, 1
0x13052:   45 0f 44 f5                           	cmove r14d, r13d
0x13056:   41 0f b6 c4                           	movzx eax, r12b
0x1305a:   41 0f b6 ce                           	movzx ecx, r14b
0x1305e:   41 8d 54 24 10                        	lea edx, [r12 + 0x10]
0x13063:   0f b6 d2                              	movzx edx, dl
0x13066:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x1306d:   41 b9 00 00 00 00                     	mov r9d, 0
0x13073:   4d 8d 04 07                           	lea r8, [r15 + rax]
0x13077:   48 89 df                              	mov rdi, rbx
0x1307a:   e8 f6 f7 ff ff                        	call 0x12875 <DTV_WriteI2CEncData>
0x1307f:   45 01 f4                              	add r12d, r14d
0x13082:   84 c0                                 	test al, al
0x13084:   75 0e                                 	jne 0x13094
0x13086:   c6 83 49 fa 08 00 00                  	mov byte ptr [rbx + 0x8fa49], 0
0x1308d:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
; function: DTV_GenEncSeed at 0x13092 -- 0x130c2
0x13092:   eb 18                                 	jmp 0x130ac <DTV_GenEncSeed+0x1a>
0x13094:   45 28 f5                              	sub r13b, r14b
0x13097:   75 b0                                 	jne 0x13049
0x13099:   c6 83 49 fa 08 00 00                  	mov byte ptr [rbx + 0x8fa49], 0
0x130a0:   b8 01 00 00 00                        	mov eax, 1
0x130a5:   eb 05                                 	jmp 0x130ac <DTV_GenEncSeed+0x1a>
0x130a7:   b8 01 00 00 00                        	mov eax, 1
0x130ac:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x130b0:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x130b4:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x130b8:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x130bc:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x130c0:   c9                                    	leave 
0x130c1:   c3                                    	ret 
; function: DTV_GenEncSeed at 0x130c2 -- 0x13711
0x130c2:   55                                    	push rbp
0x130c3:   48 89 e5                              	mov rbp, rsp
0x130c6:   41 57                                 	push r15
0x130c8:   41 56                                 	push r14
0x130ca:   41 55                                 	push r13
0x130cc:   41 54                                 	push r12
0x130ce:   53                                    	push rbx
0x130cf:   48 81 ec 18 01 00 00                  	sub rsp, 0x118
0x130d6:   e8 15 bb 02 00                        	call 0x3ebf0 <mcount>
0x130db:   48 89 fb                              	mov rbx, rdi
0x130de:   49 89 f7                              	mov r15, rsi
0x130e1:   48 89 8d 10 ff ff ff                  	mov qword ptr [rbp - 0xf0], rcx
0x130e8:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x130f1:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x130f5:   31 c0                                 	xor eax, eax
0x130f7:   48 8b 87 38 1d 00 00                  	mov rax, qword ptr [rdi + 0x1d38]
0x130fe:   48 89 85 18 ff ff ff                  	mov qword ptr [rbp - 0xe8], rax
0x13105:   c6 45 90 1f                           	mov byte ptr [rbp - 0x70], 0x1f
0x13109:   c6 45 91 c5                           	mov byte ptr [rbp - 0x6f], 0xc5
0x1310d:   c6 45 92 62                           	mov byte ptr [rbp - 0x6e], 0x62
0x13111:   c6 45 93 b9                           	mov byte ptr [rbp - 0x6d], 0xb9
0x13115:   c6 45 94 b3                           	mov byte ptr [rbp - 0x6c], 0xb3
0x13119:   c6 45 95 36                           	mov byte ptr [rbp - 0x6b], 0x36
0x1311d:   c6 45 96 4c                           	mov byte ptr [rbp - 0x6a], 0x4c
0x13121:   c6 45 97 38                           	mov byte ptr [rbp - 0x69], 0x38
0x13125:   c6 45 98 86                           	mov byte ptr [rbp - 0x68], 0x86
0x13129:   c6 45 99 e5                           	mov byte ptr [rbp - 0x67], 0xe5
0x1312d:   c6 45 9a 21                           	mov byte ptr [rbp - 0x66], 0x21
0x13131:   c6 45 9b 1e                           	mov byte ptr [rbp - 0x65], 0x1e
0x13135:   c6 45 9c 94                           	mov byte ptr [rbp - 0x64], 0x94
0x13139:   c6 45 9d 4e                           	mov byte ptr [rbp - 0x63], 0x4e
0x1313d:   c6 45 9e ce                           	mov byte ptr [rbp - 0x62], 0xce
0x13141:   c6 45 9f 3a                           	mov byte ptr [rbp - 0x61], 0x3a
0x13145:   80 fa 10                              	cmp dl, 0x10
0x13148:   75 06                                 	jne 0x13150 <DTV_GenEncSeed+0x8e>
0x1314a:   41 80 f8 10                           	cmp r8b, 0x10
0x1314e:   74 0a                                 	je 0x1315a <DTV_GenEncSeed+0x98>
0x13150:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x13155:   e9 81 05 00 00                        	jmp 0x136db <DTV_GenEncSeed+0x619>
0x1315a:   bf 0a 00 00 00                        	mov edi, 0xa
0x1315f:   e8 3d 9a 00 00                        	call 0x1cba1 <TLIB_Delay>
0x13164:   c6 45 80 ad                           	mov byte ptr [rbp - 0x80], 0xad
0x13168:   c6 45 81 1e                           	mov byte ptr [rbp - 0x7f], 0x1e
0x1316c:   c6 45 82 56                           	mov byte ptr [rbp - 0x7e], 0x56
0x13170:   c6 45 83 a4                           	mov byte ptr [rbp - 0x7d], 0xa4
0x13174:   c6 45 84 e8                           	mov byte ptr [rbp - 0x7c], 0xe8
0x13178:   c6 45 85 c1                           	mov byte ptr [rbp - 0x7b], 0xc1
0x1317c:   c6 45 86 4c                           	mov byte ptr [rbp - 0x7a], 0x4c
0x13180:   c6 45 87 ce                           	mov byte ptr [rbp - 0x79], 0xce
0x13184:   c6 45 88 90                           	mov byte ptr [rbp - 0x78], 0x90
0x13188:   c6 45 89 f7                           	mov byte ptr [rbp - 0x77], 0xf7
0x1318c:   c6 45 8a 33                           	mov byte ptr [rbp - 0x76], 0x33
0x13190:   c6 45 8b 92                           	mov byte ptr [rbp - 0x75], 0x92
0x13194:   c6 45 8c 77                           	mov byte ptr [rbp - 0x74], 0x77
0x13198:   c6 45 8d 14                           	mov byte ptr [rbp - 0x73], 0x14
0x1319c:   c6 45 8e f8                           	mov byte ptr [rbp - 0x72], 0xf8
0x131a0:   c6 45 8f b9                           	mov byte ptr [rbp - 0x71], 0xb9
0x131a4:   c6 85 70 ff ff ff fd                  	mov byte ptr [rbp - 0x90], 0xfd
0x131ab:   c6 85 71 ff ff ff 1c                  	mov byte ptr [rbp - 0x8f], 0x1c
0x131b2:   c6 85 72 ff ff ff ef                  	mov byte ptr [rbp - 0x8e], 0xef
0x131b9:   c6 85 73 ff ff ff 71                  	mov byte ptr [rbp - 0x8d], 0x71
0x131c0:   c6 85 74 ff ff ff d3                  	mov byte ptr [rbp - 0x8c], 0xd3
0x131c7:   c6 85 75 ff ff ff 69                  	mov byte ptr [rbp - 0x8b], 0x69
0x131ce:   c6 85 76 ff ff ff 47                  	mov byte ptr [rbp - 0x8a], 0x47
0x131d5:   c6 85 77 ff ff ff 54                  	mov byte ptr [rbp - 0x89], 0x54
0x131dc:   c6 85 78 ff ff ff ab                  	mov byte ptr [rbp - 0x88], 0xab
0x131e3:   c6 85 79 ff ff ff aa                  	mov byte ptr [rbp - 0x87], 0xaa
0x131ea:   c6 85 7a ff ff ff 58                  	mov byte ptr [rbp - 0x86], 0x58
0x131f1:   c6 85 7b ff ff ff bb                  	mov byte ptr [rbp - 0x85], 0xbb
0x131f8:   c6 85 7c ff ff ff 62                  	mov byte ptr [rbp - 0x84], 0x62
0x131ff:   c6 85 7d ff ff ff 49                  	mov byte ptr [rbp - 0x83], 0x49
0x13206:   c6 85 7e ff ff ff 96                  	mov byte ptr [rbp - 0x82], 0x96
0x1320d:   c6 85 7f ff ff ff 62                  	mov byte ptr [rbp - 0x81], 0x62
0x13214:   80 bb d8 15 00 00 01                  	cmp byte ptr [rbx + 0x15d8], 1
0x1321b:   0f 84 9c 00 00 00                     	je 0x132bd <DTV_GenEncSeed+0x1fb>
0x13221:   0f b6 55 90                           	movzx edx, byte ptr [rbp - 0x70]
0x13225:   88 95 ff fe ff ff                     	mov byte ptr [rbp - 0x101], dl
0x1322b:   48 8d 83 ed 15 00 00                  	lea rax, [rbx + 0x15ed]
0x13232:   48 89 85 d0 fe ff ff                  	mov qword ptr [rbp - 0x130], rax
0x13239:   48 c7 85 28 ff ff ff 00 00 00 00      	mov qword ptr [rbp - 0xd8], 0
0x13244:   49 89 de                              	mov r14, rbx
0x13247:   41 bc 00 00 00 00                     	mov r12d, 0
0x1324d:   48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x13251:   48 89 95 08 ff ff ff                  	mov qword ptr [rbp - 0xf8], rdx
0x13258:   48 83 c2 10                           	add rdx, 0x10
0x1325c:   48 89 95 f0 fe ff ff                  	mov qword ptr [rbp - 0x110], rdx
0x13263:   49 8d 47 01                           	lea rax, [r15 + 1]
0x13267:   48 89 85 e8 fe ff ff                  	mov qword ptr [rbp - 0x118], rax
0x1326e:   48 8d 55 b0                           	lea rdx, [rbp - 0x50]
0x13272:   48 83 c2 01                           	add rdx, 1
0x13276:   48 89 95 e0 fe ff ff                  	mov qword ptr [rbp - 0x120], rdx
0x1327d:   48 8d 45 b0                           	lea rax, [rbp - 0x50]
0x13281:   48 83 c0 10                           	add rax, 0x10
0x13285:   48 89 85 d8 fe ff ff                  	mov qword ptr [rbp - 0x128], rax
0x1328c:   48 8d 55 90                           	lea rdx, [rbp - 0x70]
0x13290:   48 83 c2 01                           	add rdx, 1
0x13294:   48 89 95 00 ff ff ff                  	mov qword ptr [rbp - 0x100], rdx
0x1329b:   48 8d 45 90                           	lea rax, [rbp - 0x70]
0x1329f:   48 83 c0 10                           	add rax, 0x10
0x132a3:   48 89 9d c0 fe ff ff                  	mov qword ptr [rbp - 0x140], rbx
0x132aa:   48 89 9d 20 ff ff ff                  	mov qword ptr [rbp - 0xe0], rbx
0x132b1:   48 c7 c3 00 00 00 00                  	mov rbx, 0
0x132b8:   49 89 c5                              	mov r13, rax
0x132bb:   eb 6b                                 	jmp 0x13328 <DTV_GenEncSeed+0x266>
0x132bd:   48 8d b3 a4 0d 03 00                  	lea rsi, [rbx + 0x30da4]
0x132c4:   48 8d 7d 80                           	lea rdi, [rbp - 0x80]
0x132c8:   b9 10 00 00 00                        	mov ecx, 0x10
0x132cd:   f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x132cf:   0f 97 c2                              	seta dl
0x132d2:   0f 92 c0                              	setb al
0x132d5:   38 c2                                 	cmp dl, al
0x132d7:   0f 85 f9 03 00 00                     	jne 0x136d6 <DTV_GenEncSeed+0x614>
0x132dd:   48 8d b3 c4 0d 03 00                  	lea rsi, [rbx + 0x30dc4]
0x132e4:   48 8d bd 70 ff ff ff                  	lea rdi, [rbp - 0x90]
0x132eb:   b9 10 00 00 00                        	mov ecx, 0x10
0x132f0:   f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x132f2:   0f 97 c2                              	seta dl
0x132f5:   0f 92 c0                              	setb al
0x132f8:   38 c2                                 	cmp dl, al
0x132fa:   0f 85 d6 03 00 00                     	jne 0x136d6 <DTV_GenEncSeed+0x614>
0x13300:   48 8d b3 d4 0d 03 00                  	lea rsi, [rbx + 0x30dd4]
0x13307:   48 8d bd 70 ff ff ff                  	lea rdi, [rbp - 0x90]
0x1330e:   b9 10 00 00 00                        	mov ecx, 0x10
0x13313:   f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x13315:   0f 97 c2                              	seta dl
0x13318:   0f 92 c0                              	setb al
0x1331b:   38 c2                                 	cmp dl, al
0x1331d:   0f 85 b3 03 00 00                     	jne 0x136d6 <DTV_GenEncSeed+0x614>
0x13323:   e9 f9 fe ff ff                        	jmp 0x13221 <DTV_GenEncSeed+0x15f>
0x13328:   44 88 a5 28 ff ff ff                  	mov byte ptr [rbp - 0xd8], r12b
0x1332f:   41 80 be 61 0d 03 00 01               	cmp byte ptr [r14 + 0x30d61], 1
0x13337:   0f 85 03 01 00 00                     	jne 0x13440 <DTV_GenEncSeed+0x37e>
0x1333d:   48 8b 95 20 ff ff ff                  	mov rdx, qword ptr [rbp - 0xe0]
0x13344:   80 ba ec 15 00 00 00                  	cmp byte ptr [rdx + 0x15ec], 0
0x1334b:   75 57                                 	jne 0x133a4 <DTV_GenEncSeed+0x2e2>
0x1334d:   0f b6 95 ff fe ff ff                  	movzx edx, byte ptr [rbp - 0x101]
0x13354:   32 13                                 	xor dl, byte ptr [rbx]
0x13356:   41 38 17                              	cmp byte ptr [r15], dl
0x13359:   0f 85 e1 00 00 00                     	jne 0x13440 <DTV_GenEncSeed+0x37e>
0x1335f:   49 63 cc                              	movsxd rcx, r12d
0x13362:   48 c1 e1 04                           	shl rcx, 4
0x13366:   48 81 c1 00 00 00 00                  	add rcx, 0
0x1336d:   48 8b 85 00 ff ff ff                  	mov rax, qword ptr [rbp - 0x100]
0x13374:   4c 89 fa                              	mov rdx, r15
0x13377:   0f b6 30                              	movzx esi, byte ptr [rax]
0x1337a:   40 32 31                              	xor sil, byte ptr [rcx]
0x1337d:   40 38 72 01                           	cmp byte ptr [rdx + 1], sil
0x13381:   0f 85 b9 00 00 00                     	jne 0x13440 <DTV_GenEncSeed+0x37e>
0x13387:   48 83 c1 01                           	add rcx, 1
0x1338b:   48 83 c0 01                           	add rax, 1
0x1338f:   48 83 c2 01                           	add rdx, 1
0x13393:   4c 39 e8                              	cmp rax, r13
0x13396:   75 df                                 	jne 0x13377 <DTV_GenEncSeed+0x2b5>
0x13398:   48 8b 9d 20 ff ff ff                  	mov rbx, qword ptr [rbp - 0xe0]
0x1339f:   e9 83 00 00 00                        	jmp 0x13427 <DTV_GenEncSeed+0x365>
0x133a4:   48 8b 03                              	mov rax, qword ptr [rbx]
0x133a7:   48 89 45 a0                           	mov qword ptr [rbp - 0x60], rax
0x133ab:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x133af:   48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x133b3:   48 8b 85 08 ff ff ff                  	mov rax, qword ptr [rbp - 0xf8]
0x133ba:   48 8d 55 90                           	lea rdx, [rbp - 0x70]
0x133be:   48 8b b5 f0 fe ff ff                  	mov rsi, qword ptr [rbp - 0x110]
0x133c5:   0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x133c8:   30 08                                 	xor byte ptr [rax], cl
0x133ca:   48 83 c0 01                           	add rax, 1
0x133ce:   48 83 c2 01                           	add rdx, 1
0x133d2:   48 39 f0                              	cmp rax, rsi
0x133d5:   75 ee                                 	jne 0x133c5 <DTV_GenEncSeed+0x303>
0x133d7:   48 8b 95 d0 fe ff ff                  	mov rdx, qword ptr [rbp - 0x130]
0x133de:   48 8b b5 08 ff ff ff                  	mov rsi, qword ptr [rbp - 0xf8]
0x133e5:   48 8d 7d b0                           	lea rdi, [rbp - 0x50]
0x133e9:   e8 b1 79 ff ff                        	call 0xad9f <Gen_Identify_Key>
0x133ee:   41 0f b6 07                           	movzx eax, byte ptr [r15]
0x133f2:   3a 45 b0                              	cmp al, byte ptr [rbp - 0x50]
0x133f5:   75 49                                 	jne 0x13440 <DTV_GenEncSeed+0x37e>
0x133f7:   48 8b 95 e8 fe ff ff                  	mov rdx, qword ptr [rbp - 0x118]
0x133fe:   48 8b 85 e0 fe ff ff                  	mov rax, qword ptr [rbp - 0x120]
0x13405:   48 8b b5 d8 fe ff ff                  	mov rsi, qword ptr [rbp - 0x128]
0x1340c:   0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x1340f:   3a 08                                 	cmp cl, byte ptr [rax]
0x13411:   75 2d                                 	jne 0x13440 <DTV_GenEncSeed+0x37e>
0x13413:   48 83 c2 01                           	add rdx, 1
0x13417:   48 83 c0 01                           	add rax, 1
0x1341b:   48 39 f0                              	cmp rax, rsi
0x1341e:   75 ec                                 	jne 0x1340c <DTV_GenEncSeed+0x34a>
0x13420:   48 8b 9d 20 ff ff ff                  	mov rbx, qword ptr [rbp - 0xe0]
0x13427:   c6 83 a1 0d 03 00 00                  	mov byte ptr [rbx + 0x30da1], 0
0x1342e:   0f b6 85 28 ff ff ff                  	movzx eax, byte ptr [rbp - 0xd8]
0x13435:   88 83 a2 0d 03 00                     	mov byte ptr [rbx + 0x30da2], al
0x1343b:   e9 ac 02 00 00                        	jmp 0x136ec <DTV_GenEncSeed+0x62a>
0x13440:   41 83 c4 01                           	add r12d, 1
0x13444:   49 83 c6 01                           	add r14, 1
0x13448:   48 83 c3 10                           	add rbx, 0x10
0x1344c:   41 83 fc 40                           	cmp r12d, 0x40
0x13450:   0f 85 d2 fe ff ff                     	jne 0x13328 <DTV_GenEncSeed+0x266>
0x13456:   4c 8b ad c0 fe ff ff                  	mov r13, qword ptr [rbp - 0x140]
0x1345d:   48 8b 9d 20 ff ff ff                  	mov rbx, qword ptr [rbp - 0xe0]
0x13464:   49 c7 c6 00 00 00 00                  	mov r14, 0
0x1346b:   41 b4 00                              	mov r12b, 0
0x1346e:   48 8d 55 a0                           	lea rdx, [rbp - 0x60]
0x13472:   48 89 95 00 ff ff ff                  	mov qword ptr [rbp - 0x100], rdx
0x13479:   48 83 c2 10                           	add rdx, 0x10
0x1347d:   48 89 95 28 ff ff ff                  	mov qword ptr [rbp - 0xd8], rdx
0x13484:   49 8d 47 01                           	lea rax, [r15 + 1]
0x13488:   48 89 85 e8 fe ff ff                  	mov qword ptr [rbp - 0x118], rax
0x1348f:   48 8d 55 b0                           	lea rdx, [rbp - 0x50]
0x13493:   48 83 c2 01                           	add rdx, 1
0x13497:   48 89 95 e0 fe ff ff                  	mov qword ptr [rbp - 0x120], rdx
0x1349e:   48 8d 45 b0                           	lea rax, [rbp - 0x50]
0x134a2:   48 83 c0 10                           	add rax, 0x10
0x134a6:   48 89 85 d8 fe ff ff                  	mov qword ptr [rbp - 0x128], rax
0x134ad:   48 8d 55 90                           	lea rdx, [rbp - 0x70]
0x134b1:   48 83 c2 01                           	add rdx, 1
0x134b5:   48 89 95 f0 fe ff ff                  	mov qword ptr [rbp - 0x110], rdx
0x134bc:   48 8d 45 90                           	lea rax, [rbp - 0x70]
0x134c0:   48 83 c0 10                           	add rax, 0x10
0x134c4:   48 89 9d 08 ff ff ff                  	mov qword ptr [rbp - 0xf8], rbx
0x134cb:   4c 89 bd 20 ff ff ff                  	mov qword ptr [rbp - 0xe0], r15
0x134d2:   4c 8b bd 28 ff ff ff                  	mov r15, qword ptr [rbp - 0xd8]
0x134d9:   48 89 c3                              	mov rbx, rax
0x134dc:   44 88 a5 28 ff ff ff                  	mov byte ptr [rbp - 0xd8], r12b
0x134e3:   41 80 bd 61 0d 03 00 01               	cmp byte ptr [r13 + 0x30d61], 1
0x134eb:   0f 85 23 01 00 00                     	jne 0x13614 <DTV_GenEncSeed+0x552>
0x134f1:   48 8b 95 08 ff ff ff                  	mov rdx, qword ptr [rbp - 0xf8]
0x134f8:   80 ba ec 15 00 00 00                  	cmp byte ptr [rdx + 0x15ec], 0
0x134ff:   75 62                                 	jne 0x13563 <DTV_GenEncSeed+0x4a1>
0x13501:   0f b6 85 ff fe ff ff                  	movzx eax, byte ptr [rbp - 0x101]
0x13508:   41 32 06                              	xor al, byte ptr [r14]
0x1350b:   48 8b 95 20 ff ff ff                  	mov rdx, qword ptr [rbp - 0xe0]
0x13512:   38 02                                 	cmp byte ptr [rdx], al
0x13514:   0f 85 fa 00 00 00                     	jne 0x13614 <DTV_GenEncSeed+0x552>
0x1351a:   49 63 cc                              	movsxd rcx, r12d
0x1351d:   48 c1 e1 04                           	shl rcx, 4
0x13521:   48 81 c1 00 00 00 00                  	add rcx, 0
0x13528:   48 8b 85 f0 fe ff ff                  	mov rax, qword ptr [rbp - 0x110]
0x1352f:   0f b6 30                              	movzx esi, byte ptr [rax]
0x13532:   40 32 31                              	xor sil, byte ptr [rcx]
0x13535:   40 38 72 01                           	cmp byte ptr [rdx + 1], sil
0x13539:   0f 85 d5 00 00 00                     	jne 0x13614 <DTV_GenEncSeed+0x552>
0x1353f:   48 83 c1 01                           	add rcx, 1
0x13543:   48 83 c0 01                           	add rax, 1
0x13547:   48 83 c2 01                           	add rdx, 1
0x1354b:   48 39 d8                              	cmp rax, rbx
0x1354e:   75 df                                 	jne 0x1352f <DTV_GenEncSeed+0x46d>
0x13550:   48 8b 9d 08 ff ff ff                  	mov rbx, qword ptr [rbp - 0xf8]
0x13557:   4c 8b bd 20 ff ff ff                  	mov r15, qword ptr [rbp - 0xe0]
0x1355e:   e9 89 00 00 00                        	jmp 0x135ec <DTV_GenEncSeed+0x52a>
0x13563:   49 8b 06                              	mov rax, qword ptr [r14]
0x13566:   48 89 45 a0                           	mov qword ptr [rbp - 0x60], rax
0x1356a:   49 8b 46 08                           	mov rax, qword ptr [r14 + 8]
0x1356e:   48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x13572:   48 8b 85 00 ff ff ff                  	mov rax, qword ptr [rbp - 0x100]
0x13579:   48 8d 55 90                           	lea rdx, [rbp - 0x70]
0x1357d:   0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x13580:   30 08                                 	xor byte ptr [rax], cl
0x13582:   48 83 c0 01                           	add rax, 1
0x13586:   48 83 c2 01                           	add rdx, 1
0x1358a:   4c 39 f8                              	cmp rax, r15
0x1358d:   75 ee                                 	jne 0x1357d <DTV_GenEncSeed+0x4bb>
0x1358f:   48 8b 95 d0 fe ff ff                  	mov rdx, qword ptr [rbp - 0x130]
0x13596:   48 8b b5 00 ff ff ff                  	mov rsi, qword ptr [rbp - 0x100]
0x1359d:   48 8d 7d b0                           	lea rdi, [rbp - 0x50]
0x135a1:   e8 f9 77 ff ff                        	call 0xad9f <Gen_Identify_Key>
0x135a6:   48 8b 95 20 ff ff ff                  	mov rdx, qword ptr [rbp - 0xe0]
0x135ad:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x135b0:   3a 45 b0                              	cmp al, byte ptr [rbp - 0x50]
0x135b3:   75 5f                                 	jne 0x13614 <DTV_GenEncSeed+0x552>
0x135b5:   48 8b 95 e8 fe ff ff                  	mov rdx, qword ptr [rbp - 0x118]
0x135bc:   48 8b 85 e0 fe ff ff                  	mov rax, qword ptr [rbp - 0x120]
0x135c3:   48 8b b5 d8 fe ff ff                  	mov rsi, qword ptr [rbp - 0x128]
0x135ca:   0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x135cd:   3a 08                                 	cmp cl, byte ptr [rax]
0x135cf:   75 43                                 	jne 0x13614 <DTV_GenEncSeed+0x552>
0x135d1:   48 83 c2 01                           	add rdx, 1
0x135d5:   48 83 c0 01                           	add rax, 1
0x135d9:   48 39 f0                              	cmp rax, rsi
0x135dc:   75 ec                                 	jne 0x135ca <DTV_GenEncSeed+0x508>
0x135de:   48 8b 9d 08 ff ff ff                  	mov rbx, qword ptr [rbp - 0xf8]
0x135e5:   4c 8b bd 20 ff ff ff                  	mov r15, qword ptr [rbp - 0xe0]
0x135ec:   c6 83 a1 0d 03 00 01                  	mov byte ptr [rbx + 0x30da1], 1
0x135f3:   80 bd 28 ff ff ff 3e                  	cmp byte ptr [rbp - 0xd8], 0x3e
0x135fa:   b8 01 00 00 00                        	mov eax, 1
0x135ff:   0f b6 95 28 ff ff ff                  	movzx edx, byte ptr [rbp - 0xd8]
0x13606:   0f 45 c2                              	cmovne eax, edx
0x13609:   88 83 a3 0d 03 00                     	mov byte ptr [rbx + 0x30da3], al
0x1360f:   e9 d8 00 00 00                        	jmp 0x136ec <DTV_GenEncSeed+0x62a>
0x13614:   41 83 c4 01                           	add r12d, 1
0x13618:   49 83 c5 01                           	add r13, 1
0x1361c:   49 83 c6 10                           	add r14, 0x10
0x13620:   41 83 fc 40                           	cmp r12d, 0x40
0x13624:   0f 85 b2 fe ff ff                     	jne 0x134dc <DTV_GenEncSeed+0x41a>
0x1362a:   b8 fd ff ff ff                        	mov eax, 0xfffffffd
0x1362f:   e9 a7 00 00 00                        	jmp 0x136db <DTV_GenEncSeed+0x619>
0x13634:   48 8d 8e a1 4f 00 00                  	lea rcx, [rsi + 0x4fa1]
0x1363b:   48 8d 96 75 4f 00 00                  	lea rdx, [rsi + 0x4f75]
0x13642:   48 81 c6 73 4f 00 00                  	add rsi, 0x4f73
0x13649:   4c 8b 8d 10 ff ff ff                  	mov r9, qword ptr [rbp - 0xf0]
0x13650:   4d 89 f8                              	mov r8, r15
0x13653:   48 89 df                              	mov rdi, rbx
0x13656:   e8 4e ae ff ff                        	call 0xe4a9 <DTV_Calculate_Final_Key>
0x1365b:   eb 28                                 	jmp 0x13685 <DTV_GenEncSeed+0x5c3>
0x1365d:   48 8d 8e a1 4f 00 00                  	lea rcx, [rsi + 0x4fa1]
0x13664:   48 8d 96 75 4f 00 00                  	lea rdx, [rsi + 0x4f75]
0x1366b:   48 81 c6 73 4f 00 00                  	add rsi, 0x4f73
0x13672:   4c 8b 8d 10 ff ff ff                  	mov r9, qword ptr [rbp - 0xf0]
0x13679:   4c 8d 45 a0                           	lea r8, [rbp - 0x60]
0x1367d:   48 89 df                              	mov rdi, rbx
0x13680:   e8 24 ae ff ff                        	call 0xe4a9 <DTV_Calculate_Final_Key>
0x13685:   48 8d b3 c4 0d 03 00                  	lea rsi, [rbx + 0x30dc4]
0x1368c:   ba 10 00 00 00                        	mov edx, 0x10
0x13691:   48 89 df                              	mov rdi, rbx
0x13694:   e8 ab b9 ff ff                        	call 0xf044 <DTV_Set_EncSeedReg>
0x13699:   4c 8d a3 a4 0d 03 00                  	lea r12, [rbx + 0x30da4]
0x136a0:   ba 10 00 00 00                        	mov edx, 0x10
0x136a5:   4c 89 e6                              	mov rsi, r12
0x136a8:   48 89 df                              	mov rdi, rbx
0x136ab:   e8 99 b8 ff ff                        	call 0xef49 <DTV_Set_EncSeedRegEx>
0x136b0:   ba 10 00 00 00                        	mov edx, 0x10
0x136b5:   4c 89 e6                              	mov rsi, r12
0x136b8:   48 89 df                              	mov rdi, rbx
0x136bb:   e8 d2 f8 ff ff                        	call 0x12f92 <DTV_Set_EncSeedRegASV5606>
0x136c0:   48 89 df                              	mov rdi, rbx
0x136c3:   e8 5d d9 ff ff                        	call 0x11025 <DTV_EnableEncryptionChipTSOutput>
0x136c8:   c6 83 60 0d 03 00 00                  	mov byte ptr [rbx + 0x30d60], 0
0x136cf:   b8 01 00 00 00                        	mov eax, 1
0x136d4:   eb 05                                 	jmp 0x136db <DTV_GenEncSeed+0x619>
0x136d6:   b8 01 00 00 00                        	mov eax, 1
0x136db:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x136df:   65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x136e8:   74 46                                 	je 0x13730
0x136ea:   eb 3f                                 	jmp 0x1372b
0x136ec:   48 8b b5 18 ff ff ff                  	mov rsi, qword ptr [rbp - 0xe8]
0x136f3:   c7 83 70 1c 00 00 01 00 00 00         	mov dword ptr [rbx + 0x1c70], 1
0x136fd:   48 8d 95 30 ff ff ff                  	lea rdx, [rbp - 0xd0]
0x13704:   b9 07 00 00 00                        	mov ecx, 7
0x13709:   b8 00 00 00 00                        	mov eax, 0
0x1370e:   48 89 d7                              	mov rdi, rdx
; data inside code section at 0x13711 -- 0x13712
0x13711:   f3                                                 |.               |
; function: DTV_PollingThread at 0x13712 -- 0x13742
0x13712:   48 ab                                 	stosq qword ptr [rdi], rax
0x13714:   66 c7 07 00 00                        	mov word ptr [rdi], 0
0x13719:   80 bb ec 15 00 00 00                  	cmp byte ptr [rbx + 0x15ec], 0
0x13720:   0f 84 0e ff ff ff                     	je 0x13634
0x13726:   e9 32 ff ff ff                        	jmp 0x1365d
0x1372b:   e8 78 b4 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x13730:   48 81 c4 18 01 00 00                  	add rsp, 0x118
0x13737:   5b                                    	pop rbx
0x13738:   41 5c                                 	pop r12
0x1373a:   41 5d                                 	pop r13
0x1373c:   41 5e                                 	pop r14
0x1373e:   41 5f                                 	pop r15
0x13740:   c9                                    	leave 
0x13741:   c3                                    	ret 
; function: DTV_PollingThread at 0x13742 -- 0x14a69
0x13742:   55                                    	push rbp
0x13743:   48 89 e5                              	mov rbp, rsp
0x13746:   41 57                                 	push r15
0x13748:   41 56                                 	push r14
0x1374a:   41 55                                 	push r13
0x1374c:   41 54                                 	push r12
0x1374e:   53                                    	push rbx
0x1374f:   48 81 ec 18 02 00 00                  	sub rsp, 0x218
0x13756:   e8 95 b4 02 00                        	call 0x3ebf0 <mcount>
0x1375b:   48 89 bd 20 fe ff ff                  	mov qword ptr [rbp - 0x1e0], rdi
0x13762:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x1376b:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x1376f:   31 c0                                 	xor eax, eax
0x13771:   49 89 fc                              	mov r12, rdi
0x13774:   e8 63 91 00 00                        	call 0x1c8dc <Tnim_PollingThreadDelayTime>
0x13779:   48 83 f8 31                           	cmp rax, 0x31
0x1377d:   ba 32 00 00 00                        	mov edx, 0x32
0x13782:   48 0f 46 c2                           	cmovbe rax, rdx
0x13786:   48 d1 e8                              	shr rax, 1
0x13789:   48 b9 0b d7 a3 70 3d 0a d7 a3         	movabs rcx, 0xa3d70a3d70a3d70b
0x13793:   48 f7 e1                              	mul rcx
0x13796:   48 c1 ea 04                           	shr rdx, 4
0x1379a:   48 89 95 38 fe ff ff                  	mov qword ptr [rbp - 0x1c8], rdx
0x137a1:   49 8d 94 24 60 59 00 00               	lea rdx, [r12 + 0x5960]
0x137a9:   48 89 95 10 fe ff ff                  	mov qword ptr [rbp - 0x1f0], rdx
0x137b0:   49 8d 84 24 da 53 00 00               	lea rax, [r12 + 0x53da]
0x137b8:   48 89 85 f8 fd ff ff                  	mov qword ptr [rbp - 0x208], rax
0x137bf:   c6 85 f7 fd ff ff 00                  	mov byte ptr [rbp - 0x209], 0
0x137c6:   41 be 00 00 00 00                     	mov r14d, 0
0x137cc:   41 bf 00 00 00 00                     	mov r15d, 0
0x137d2:   48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x137d6:   48 83 c2 01                           	add rdx, 1
0x137da:   48 89 95 e8 fd ff ff                  	mov qword ptr [rbp - 0x218], rdx
0x137e1:   b8 c0 03 00 00                        	mov eax, 0x3c0
0x137e6:   83 e8 01                              	sub eax, 1
0x137e9:   89 85 e4 fd ff ff                     	mov dword ptr [rbp - 0x21c], eax
0x137ef:   4c 3b b5 38 fe ff ff                  	cmp r14, qword ptr [rbp - 0x1c8]
0x137f6:   0f 85 50 04 00 00                     	jne 0x13c4c <DTV_PollingThread+0x50a>
0x137fc:   41 80 bc 24 98 57 00 00 00            	cmp byte ptr [r12 + 0x5798], 0
0x13805:   0f 85 2d 12 00 00                     	jne 0x14a38 <DTV_PollingThread+0x12f6>
0x1380b:   48 8b 8d 10 fe ff ff                  	mov rcx, qword ptr [rbp - 0x1f0]
0x13812:   ba 00 00 00 00                        	mov edx, 0
0x13817:   be 00 00 00 00                        	mov esi, 0
0x1381c:   4c 89 e7                              	mov rdi, r12
0x1381f:   e8 11 39 ff ff                        	call 0x7135 <TC_SetLNB>
0x13824:   b8 00 00 00 00                        	mov eax, 0
0x13829:   49 c7 84 04 68 59 00 00 01 00 00 00   	mov qword ptr [r12 + rax + 0x5968], 1
0x13835:   49 c7 84 04 70 59 00 00 00 00 00 00   	mov qword ptr [r12 + rax + 0x5970], 0
0x13841:   49 c7 84 04 78 59 00 00 17 00 00 00   	mov qword ptr [r12 + rax + 0x5978], 0x17
0x1384d:   48 83 c0 50                           	add rax, 0x50
0x13851:   48 3d 80 02 00 00                     	cmp rax, 0x280
0x13857:   75 d0                                 	jne 0x13829 <DTV_PollingThread+0xe7>
0x13859:   48 b8 ff ff ff 00 00 00 00 ff         	movabs rax, 0xff00000000ffffff
0x13863:   49 85 84 24 20 05 00 00               	test qword ptr [r12 + 0x520], rax
0x1386b:   75 1b                                 	jne 0x13888 <DTV_PollingThread+0x146>
0x1386d:   48 8b 8d 10 fe ff ff                  	mov rcx, qword ptr [rbp - 0x1f0]
0x13874:   ba 08 00 00 00                        	mov edx, 8
0x13879:   48 8b b5 f8 fd ff ff                  	mov rsi, qword ptr [rbp - 0x208]
0x13880:   4c 89 e7                              	mov rdi, r12
0x13883:   e8 64 90 00 00                        	call 0x1c8ec <Tnim_PollingThreadOnlyCallOnce>
0x13888:   41 80 bc 24 dc 53 00 00 00            	cmp byte ptr [r12 + 0x53dc], 0
0x13891:   75 0c                                 	jne 0x1389f <DTV_PollingThread+0x15d>
0x13893:   49 c7 84 24 18 5a 00 00 ff 00 00 00   	mov qword ptr [r12 + 0x5a18], 0xff
0x1389f:   41 80 bc 24 dd 53 00 00 00            	cmp byte ptr [r12 + 0x53dd], 0
0x138a8:   75 0c                                 	jne 0x138b6 <DTV_PollingThread+0x174>
0x138aa:   49 c7 84 24 68 5a 00 00 ff 00 00 00   	mov qword ptr [r12 + 0x5a68], 0xff
0x138b6:   4c 89 a5 30 fe ff ff                  	mov qword ptr [rbp - 0x1d0], r12
0x138bd:   4c 8b b5 10 fe ff ff                  	mov r14, qword ptr [rbp - 0x1f0]
0x138c4:   49 8d 54 24 08                        	lea rdx, [r12 + 8]
0x138c9:   48 89 95 28 fe ff ff                  	mov qword ptr [rbp - 0x1d8], rdx
0x138d0:   4d 89 e5                              	mov r13, r12
0x138d3:   4c 89 e3                              	mov rbx, r12
0x138d6:   4c 89 bd 08 fe ff ff                  	mov qword ptr [rbp - 0x1f8], r15
0x138dd:   4d 89 e7                              	mov r15, r12
0x138e0:   41 89 dc                              	mov r12d, ebx
0x138e3:   44 2b a5 30 fe ff ff                  	sub r12d, dword ptr [rbp - 0x1d0]
0x138ea:   80 bb da 53 00 00 01                  	cmp byte ptr [rbx + 0x53da], 1
0x138f1:   0f 85 2d 03 00 00                     	jne 0x13c24 <DTV_PollingThread+0x4e2>
0x138f7:   49 83 bd f0 53 00 00 01               	cmp qword ptr [r13 + 0x53f0], 1
0x138ff:   75 16                                 	jne 0x13917 <DTV_PollingThread+0x1d5>
0x13901:   44 89 e6                              	mov esi, r12d
0x13904:   4c 89 ff                              	mov rdi, r15
0x13907:   e8 bf 08 ff ff                        	call 0x41cb <FUSB_RstBulkPipe>
0x1390c:   49 c7 85 f0 53 00 00 00 00 00 00      	mov qword ptr [r13 + 0x53f0], 0
0x13917:   4c 89 b5 18 fe ff ff                  	mov qword ptr [rbp - 0x1e8], r14
0x1391e:   4c 89 f2                              	mov rdx, r14
0x13921:   44 89 e6                              	mov esi, r12d
0x13924:   4c 89 ff                              	mov rdi, r15
0x13927:   e8 e2 5a ff ff                        	call 0x940e <TC_ReadSNR>
0x1392c:   4c 89 f2                              	mov rdx, r14
0x1392f:   44 89 e6                              	mov esi, r12d
0x13932:   4c 89 ff                              	mov rdi, r15
0x13935:   e8 73 5a ff ff                        	call 0x93ad <TC_GetSignaLevel>
0x1393a:   49 8b 85 e0 04 00 00                  	mov rax, qword ptr [r13 + 0x4e0]
0x13941:   48 8b 80 a8 29 09 00                  	mov rax, qword ptr [rax + 0x929a8]
0x13948:   48 83 e8 01                           	sub rax, 1
0x1394c:   48 3d 3e 42 0f 00                     	cmp rax, 0xf423e
0x13952:   0f 87 ea 00 00 00                     	ja 0x13a42 <DTV_PollingThread+0x300>
0x13958:   80 bb 78 03 00 00 01                  	cmp byte ptr [rbx + 0x378], 1
0x1395f:   0f 85 dd 00 00 00                     	jne 0x13a42 <DTV_PollingThread+0x300>
0x13965:   4c 8b 85 18 fe ff ff                  	mov r8, qword ptr [rbp - 0x1e8]
0x1396c:   48 8d 8d 48 fe ff ff                  	lea rcx, [rbp - 0x1b8]
0x13973:   48 8d 95 40 fe ff ff                  	lea rdx, [rbp - 0x1c0]
0x1397a:   44 89 e6                              	mov esi, r12d
0x1397d:   4c 89 ff                              	mov rdi, r15
0x13980:   e8 ec 2a ff ff                        	call 0x6471 <TC_GetBER>
0x13985:   48 8b 95 18 fe ff ff                  	mov rdx, qword ptr [rbp - 0x1e8]
0x1398c:   44 89 e6                              	mov esi, r12d
0x1398f:   4c 89 ff                              	mov rdi, r15
0x13992:   e8 8f 4a ff ff                        	call 0x8426 <TC_GetCN>
0x13997:   49 89 c0                              	mov r8, rax
0x1399a:   4c 8b 95 48 fe ff ff                  	mov r10, qword ptr [rbp - 0x1b8]
0x139a1:   4c 8b 9d 40 fe ff ff                  	mov r11, qword ptr [rbp - 0x1c0]
0x139a8:   48 b8 fd ce 61 84 11 77 cc ab         	movabs rax, 0xabcc77118461cefd
0x139b2:   49 f7 e3                              	mul r11
0x139b5:   49 89 d1                              	mov r9, rdx
0x139b8:   49 c1 e9 1a                           	shr r9, 0x1a
0x139bc:   4c 89 c2                              	mov rdx, r8
0x139bf:   48 c1 ea 02                           	shr rdx, 2
0x139c3:   48 b8 c3 f5 28 5c 8f c2 f5 28         	movabs rax, 0x28f5c28f5c28f5c3
0x139cd:   48 f7 e2                              	mul rdx
0x139d0:   48 89 d1                              	mov rcx, rdx
0x139d3:   48 c1 e9 02                           	shr rcx, 2
0x139d7:   48 8d 04 89                           	lea rax, [rcx + rcx*4]
0x139db:   48 8d 3c 80                           	lea rdi, [rax + rax*4]
0x139df:   48 c1 e7 02                           	shl rdi, 2
0x139e3:   49 8b 85 e0 04 00 00                  	mov rax, qword ptr [r13 + 0x4e0]
0x139ea:   48 8b b0 a8 29 09 00                  	mov rsi, qword ptr [rax + 0x929a8]
0x139f1:   48 b8 fd ce 61 84 11 77 cc ab         	movabs rax, 0xabcc77118461cefd
0x139fb:   49 f7 e2                              	mul r10
0x139fe:   48 c1 ea 1a                           	shr rdx, 0x1a
0x13a02:   48 69 c2 00 e1 f5 05                  	imul rax, rdx, 0x5f5e100
0x13a09:   49 29 c2                              	sub r10, rax
0x13a0c:   4c 89 54 24 10                        	mov qword ptr [rsp + 0x10], r10
0x13a11:   48 89 54 24 08                        	mov qword ptr [rsp + 8], rdx
0x13a16:   49 69 c1 00 e1 f5 05                  	imul rax, r9, 0x5f5e100
0x13a1d:   49 29 c3                              	sub r11, rax
0x13a20:   4c 89 1c 24                           	mov qword ptr [rsp], r11
0x13a24:   49 29 f8                              	sub r8, rdi
0x13a27:   48 89 f2                              	mov rdx, rsi
0x13a2a:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x13a31:   48 8d bd 80 fe ff ff                  	lea rdi, [rbp - 0x180]
0x13a38:   b8 00 00 00 00                        	mov eax, 0
0x13a3d:   e8 26 b2 02 00                        	call 0x3ec68 <sprintf>
0x13a42:   49 8b 85 e0 04 00 00                  	mov rax, qword ptr [r13 + 0x4e0]
0x13a49:   48 81 b8 a8 29 09 00 40 42 0f 00      	cmp qword ptr [rax + 0x929a8], 0xf4240
0x13a54:   0f 86 ca 01 00 00                     	jbe 0x13c24 <DTV_PollingThread+0x4e2>
0x13a5a:   80 bb 78 03 00 00 01                  	cmp byte ptr [rbx + 0x378], 1
0x13a61:   0f 85 bd 01 00 00                     	jne 0x13c24 <DTV_PollingThread+0x4e2>
0x13a67:   4c 8b 85 18 fe ff ff                  	mov r8, qword ptr [rbp - 0x1e8]
0x13a6e:   48 8d 8d 48 fe ff ff                  	lea rcx, [rbp - 0x1b8]
0x13a75:   48 8d 95 40 fe ff ff                  	lea rdx, [rbp - 0x1c0]
0x13a7c:   44 89 e6                              	mov esi, r12d
0x13a7f:   4c 89 ff                              	mov rdi, r15
0x13a82:   e8 ea 29 ff ff                        	call 0x6471 <TC_GetBER>
0x13a87:   48 8b 95 18 fe ff ff                  	mov rdx, qword ptr [rbp - 0x1e8]
0x13a8e:   44 89 e6                              	mov esi, r12d
0x13a91:   4c 89 ff                              	mov rdi, r15
0x13a94:   e8 8d 49 ff ff                        	call 0x8426 <TC_GetCN>
0x13a99:   48 89 c1                              	mov rcx, rax
0x13a9c:   48 89 c2                              	mov rdx, rax
0x13a9f:   48 c1 ea 02                           	shr rdx, 2
0x13aa3:   48 b8 c3 f5 28 5c 8f c2 f5 28         	movabs rax, 0x28f5c28f5c28f5c3
0x13aad:   48 f7 e2                              	mul rdx
0x13ab0:   49 89 d4                              	mov r12, rdx
0x13ab3:   49 c1 ec 02                           	shr r12, 2
0x13ab7:   4c 89 e0                              	mov rax, r12
0x13aba:   4b 8d 14 a4                           	lea rdx, [r12 + r12*4]
0x13abe:   4c 8d 24 92                           	lea r12, [rdx + rdx*4]
0x13ac2:   49 c1 e4 02                           	shl r12, 2
0x13ac6:   4c 29 e1                              	sub rcx, r12
0x13ac9:   49 89 cc                              	mov r12, rcx
0x13acc:   48 89 85 18 fe ff ff                  	mov qword ptr [rbp - 0x1e8], rax
0x13ad3:   49 8b 85 e0 04 00 00                  	mov rax, qword ptr [r13 + 0x4e0]
0x13ada:   48 8b 90 a8 29 09 00                  	mov rdx, qword ptr [rax + 0x929a8]
0x13ae1:   49 89 c8                              	mov r8, rcx
0x13ae4:   48 8b 8d 18 fe ff ff                  	mov rcx, qword ptr [rbp - 0x1e8]
0x13aeb:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x13af2:   48 8d bd 80 fe ff ff                  	lea rdi, [rbp - 0x180]
0x13af9:   b8 00 00 00 00                        	mov eax, 0
0x13afe:   e8 65 b1 02 00                        	call 0x3ec68 <sprintf>
0x13b03:   49 8b 85 e0 04 00 00                  	mov rax, qword ptr [r13 + 0x4e0]
0x13b0a:   8b 88 b0 29 09 00                     	mov ecx, dword ptr [rax + 0x929b0]
0x13b10:   48 8b b0 a8 29 09 00                  	mov rsi, qword ptr [rax + 0x929a8]
0x13b17:   48 81 fe 60 0b b7 00                  	cmp rsi, 0xb70b60
0x13b1e:   0f 86 81 00 00 00                     	jbe 0x13ba5 <DTV_PollingThread+0x463>
0x13b24:   48 8b bd 40 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1c0]
0x13b2b:   4c 8b 85 48 fe ff ff                  	mov r8, qword ptr [rbp - 0x1b8]
0x13b32:   48 b8 fd ce 61 84 11 77 cc ab         	movabs rax, 0xabcc77118461cefd
0x13b3c:   49 f7 e0                              	mul r8
0x13b3f:   49 89 d1                              	mov r9, rdx
0x13b42:   49 c1 e9 1a                           	shr r9, 0x1a
0x13b46:   48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0x13b4b:   48 b8 fd ce 61 84 11 77 cc ab         	movabs rax, 0xabcc77118461cefd
0x13b55:   48 f7 e7                              	mul rdi
0x13b58:   48 c1 ea 1a                           	shr rdx, 0x1a
0x13b5c:   48 69 c2 00 e1 f5 05                  	imul rax, rdx, 0x5f5e100
0x13b63:   48 29 c7                              	sub rdi, rax
0x13b66:   48 89 7c 24 10                        	mov qword ptr [rsp + 0x10], rdi
0x13b6b:   48 89 54 24 08                        	mov qword ptr [rsp + 8], rdx
0x13b70:   49 69 c1 00 e1 f5 05                  	imul rax, r9, 0x5f5e100
0x13b77:   49 29 c0                              	sub r8, rax
0x13b7a:   4c 89 04 24                           	mov qword ptr [rsp], r8
0x13b7e:   4d 89 e0                              	mov r8, r12
0x13b81:   48 8b 8d 18 fe ff ff                  	mov rcx, qword ptr [rbp - 0x1e8]
0x13b88:   48 89 f2                              	mov rdx, rsi
0x13b8b:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x13b92:   48 8d bd 80 fe ff ff                  	lea rdi, [rbp - 0x180]
0x13b99:   b8 00 00 00 00                        	mov eax, 0
0x13b9e:   e8 c5 b0 02 00                        	call 0x3ec68 <sprintf>
0x13ba3:   eb 7f                                 	jmp 0x13c24 <DTV_PollingThread+0x4e2>
0x13ba5:   48 8b bd 40 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1c0]
0x13bac:   4c 8b 85 48 fe ff ff                  	mov r8, qword ptr [rbp - 0x1b8]
0x13bb3:   48 b8 fd ce 61 84 11 77 cc ab         	movabs rax, 0xabcc77118461cefd
0x13bbd:   49 f7 e0                              	mul r8
0x13bc0:   49 89 d1                              	mov r9, rdx
0x13bc3:   49 c1 e9 1a                           	shr r9, 0x1a
0x13bc7:   48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0x13bcc:   48 b8 fd ce 61 84 11 77 cc ab         	movabs rax, 0xabcc77118461cefd
0x13bd6:   48 f7 e7                              	mul rdi
0x13bd9:   48 c1 ea 1a                           	shr rdx, 0x1a
0x13bdd:   48 69 c2 00 e1 f5 05                  	imul rax, rdx, 0x5f5e100
0x13be4:   48 29 c7                              	sub rdi, rax
0x13be7:   48 89 7c 24 10                        	mov qword ptr [rsp + 0x10], rdi
0x13bec:   48 89 54 24 08                        	mov qword ptr [rsp + 8], rdx
0x13bf1:   49 69 c1 00 e1 f5 05                  	imul rax, r9, 0x5f5e100
0x13bf8:   49 29 c0                              	sub r8, rax
0x13bfb:   4c 89 04 24                           	mov qword ptr [rsp], r8
0x13bff:   4d 89 e0                              	mov r8, r12
0x13c02:   48 8b 8d 18 fe ff ff                  	mov rcx, qword ptr [rbp - 0x1e8]
0x13c09:   48 89 f2                              	mov rdx, rsi
0x13c0c:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x13c13:   48 8d bd 80 fe ff ff                  	lea rdi, [rbp - 0x180]
0x13c1a:   b8 00 00 00 00                        	mov eax, 0
0x13c1f:   e8 44 b0 02 00                        	call 0x3ec68 <sprintf>
0x13c24:   48 83 c3 01                           	add rbx, 1
0x13c28:   49 83 c5 08                           	add r13, 8
0x13c2c:   49 83 c6 50                           	add r14, 0x50
0x13c30:   48 3b 9d 28 fe ff ff                  	cmp rbx, qword ptr [rbp - 0x1d8]
0x13c37:   0f 85 a3 fc ff ff                     	jne 0x138e0 <DTV_PollingThread+0x19e>
0x13c3d:   4d 89 fc                              	mov r12, r15
0x13c40:   4c 8b bd 08 fe ff ff                  	mov r15, qword ptr [rbp - 0x1f8]
0x13c47:   e9 ec 0d 00 00                        	jmp 0x14a38 <DTV_PollingThread+0x12f6>
0x13c4c:   49 8b 9c 24 e0 04 00 00               	mov rbx, qword ptr [r12 + 0x4e0]
0x13c54:   48 85 db                              	test rbx, rbx
0x13c57:   0f 84 77 0d 00 00                     	je 0x149d4 <DTV_PollingThread+0x1292>
0x13c5d:   80 bb d8 15 00 00 01                  	cmp byte ptr [rbx + 0x15d8], 1
0x13c64:   0f 85 6a 0d 00 00                     	jne 0x149d4 <DTV_PollingThread+0x1292>
0x13c6a:   44 0f b6 8b 8d 14 00 00               	movzx r9d, byte ptr [rbx + 0x148d]
0x13c72:   41 80 f9 01                           	cmp r9b, 1
0x13c76:   45 19 ed                              	sbb r13d, r13d
0x13c79:   41 80 e5 00                           	and r13b, 0
0x13c7d:   41 81 c5 40 01 00 00                  	add r13d, 0x140
0x13c84:   41 80 bc 24 10 55 00 00 01            	cmp byte ptr [r12 + 0x5510], 1
0x13c8d:   0f 84 41 0d 00 00                     	je 0x149d4 <DTV_PollingThread+0x1292>
0x13c93:   0f b6 83 40 13 00 00                  	movzx eax, byte ptr [rbx + 0x1340]
0x13c9a:   84 c0                                 	test al, al
0x13c9c:   0f 85 7f 03 00 00                     	jne 0x14021 <DTV_PollingThread+0x8df>
0x13ca2:   c7 83 d0 15 00 00 00 00 00 00         	mov dword ptr [rbx + 0x15d0], 0
0x13cac:   48 c7 83 d0 fd 08 00 00 00 00 00      	mov qword ptr [rbx + 0x8fdd0], 0
0x13cb7:   48 c7 83 c0 fd 08 00 00 00 00 00      	mov qword ptr [rbx + 0x8fdc0], 0
0x13cc2:   48 c7 83 c8 fd 08 00 00 00 00 00      	mov qword ptr [rbx + 0x8fdc8], 0
0x13ccd:   c6 83 d8 fd 08 00 00                  	mov byte ptr [rbx + 0x8fdd8], 0
0x13cd4:   c6 85 70 fe ff ff 80                  	mov byte ptr [rbp - 0x190], 0x80
0x13cdb:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x13ce2:   41 b9 00 00 00 00                     	mov r9d, 0
0x13ce8:   41 b8 01 00 00 00                     	mov r8d, 1
0x13cee:   48 8d 8d 70 fe ff ff                  	lea rcx, [rbp - 0x190]
0x13cf5:   ba 00 00 00 00                        	mov edx, 0
0x13cfa:   48 89 df                              	mov rdi, rbx
0x13cfd:   e8 be d2 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x13d02:   bf 0a 00 00 00                        	mov edi, 0xa
0x13d07:   e8 95 8e 00 00                        	call 0x1cba1 <TLIB_Delay>
0x13d0c:   c6 85 70 fe ff ff 00                  	mov byte ptr [rbp - 0x190], 0
0x13d13:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x13d1a:   41 b9 00 00 00 00                     	mov r9d, 0
0x13d20:   41 b8 01 00 00 00                     	mov r8d, 1
0x13d26:   48 8d 8d 70 fe ff ff                  	lea rcx, [rbp - 0x190]
0x13d2d:   ba 00 00 00 00                        	mov edx, 0
0x13d32:   48 89 df                              	mov rdi, rbx
0x13d35:   e8 86 d2 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x13d3a:   c6 85 70 fe ff ff 00                  	mov byte ptr [rbp - 0x190], 0
0x13d41:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x13d48:   41 b9 00 00 00 00                     	mov r9d, 0
0x13d4e:   41 b8 01 00 00 00                     	mov r8d, 1
0x13d54:   48 8d 8d 70 fe ff ff                  	lea rcx, [rbp - 0x190]
0x13d5b:   ba 04 00 00 00                        	mov edx, 4
0x13d60:   48 89 df                              	mov rdi, rbx
0x13d63:   e8 58 d2 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x13d68:   c6 85 70 fe ff ff 00                  	mov byte ptr [rbp - 0x190], 0
0x13d6f:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x13d76:   41 b9 00 00 00 00                     	mov r9d, 0
0x13d7c:   41 b8 01 00 00 00                     	mov r8d, 1
0x13d82:   48 8d 8d 70 fe ff ff                  	lea rcx, [rbp - 0x190]
0x13d89:   ba 00 00 00 00                        	mov edx, 0
0x13d8e:   48 89 df                              	mov rdi, rbx
0x13d91:   e8 2a d2 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x13d96:   48 8d 93 48 13 00 00                  	lea rdx, [rbx + 0x1348]
0x13d9d:   b9 28 00 00 00                        	mov ecx, 0x28
0x13da2:   b8 00 00 00 00                        	mov eax, 0
0x13da7:   48 89 d7                              	mov rdi, rdx
0x13daa:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x13dad:   bf 64 00 00 00                        	mov edi, 0x64
0x13db2:   e8 ea 8d 00 00                        	call 0x1cba1 <TLIB_Delay>
0x13db7:   48 8d 8d 60 fe ff ff                  	lea rcx, [rbp - 0x1a0]
0x13dbe:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x13dc5:   41 b9 00 00 00 00                     	mov r9d, 0
0x13dcb:   41 b8 01 00 00 00                     	mov r8d, 1
0x13dd1:   ba 04 00 00 00                        	mov edx, 4
0x13dd6:   48 89 df                              	mov rdi, rbx
0x13dd9:   e8 32 dc ff ff                        	call 0x11a10 <DTV_DecEncChip_I2C_Read>
0x13dde:   f6 85 60 fe ff ff 01                  	test byte ptr [rbp - 0x1a0], 1
0x13de5:   0f 84 1b 02 00 00                     	je 0x14006 <DTV_PollingThread+0x8c4>
0x13deb:   41 80 bc 24 d8 53 00 00 00            	cmp byte ptr [r12 + 0x53d8], 0
0x13df4:   0f 85 0c 02 00 00                     	jne 0x14006 <DTV_PollingThread+0x8c4>
0x13dfa:   ba 01 00 00 00                        	mov edx, 1
0x13dff:   be ff 00 00 00                        	mov esi, 0xff
0x13e04:   48 8b bd 20 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1e0]
0x13e0b:   e8 7a 8d 00 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x13e10:   bf 32 00 00 00                        	mov edi, 0x32
0x13e15:   e8 87 8d 00 00                        	call 0x1cba1 <TLIB_Delay>
0x13e1a:   c6 85 70 fe ff ff 08                  	mov byte ptr [rbp - 0x190], 8
0x13e21:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x13e28:   41 b9 00 00 00 00                     	mov r9d, 0
0x13e2e:   41 b8 01 00 00 00                     	mov r8d, 1
0x13e34:   48 8d 8d 70 fe ff ff                  	lea rcx, [rbp - 0x190]
0x13e3b:   ba 00 00 00 00                        	mov edx, 0
0x13e40:   48 89 df                              	mov rdi, rbx
0x13e43:   e8 78 d1 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x13e48:   c6 85 70 fe ff ff 80                  	mov byte ptr [rbp - 0x190], 0x80
0x13e4f:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x13e56:   41 b9 00 00 00 00                     	mov r9d, 0
0x13e5c:   41 b8 01 00 00 00                     	mov r8d, 1
0x13e62:   48 8d 8d 70 fe ff ff                  	lea rcx, [rbp - 0x190]
0x13e69:   ba 04 00 00 00                        	mov edx, 4
0x13e6e:   48 89 df                              	mov rdi, rbx
0x13e71:   e8 4a d1 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x13e76:   bf c8 00 00 00                        	mov edi, 0xc8
0x13e7b:   e8 21 8d 00 00                        	call 0x1cba1 <TLIB_Delay>
0x13e80:   41 80 bc 24 d8 53 00 00 00            	cmp byte ptr [r12 + 0x53d8], 0
0x13e89:   0f 85 d3 0a 00 00                     	jne 0x14962 <DTV_PollingThread+0x1220>
0x13e8f:   c6 85 70 fe ff ff 09                  	mov byte ptr [rbp - 0x190], 9
0x13e96:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x13e9d:   41 b9 00 00 00 00                     	mov r9d, 0
0x13ea3:   41 b8 01 00 00 00                     	mov r8d, 1
0x13ea9:   48 8d 8d 70 fe ff ff                  	lea rcx, [rbp - 0x190]
0x13eb0:   ba 00 00 00 00                        	mov edx, 0
0x13eb5:   48 89 df                              	mov rdi, rbx
0x13eb8:   e8 03 d1 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x13ebd:   48 8d 93 44 13 00 00                  	lea rdx, [rbx + 0x1344]
0x13ec4:   48 8d b3 48 13 00 00                  	lea rsi, [rbx + 0x1348]
0x13ecb:   44 0f b6 8b 8d 14 00 00               	movzx r9d, byte ptr [rbx + 0x148d]
0x13ed3:   45 89 e8                              	mov r8d, r13d
0x13ed6:   b9 01 00 00 00                        	mov ecx, 1
0x13edb:   48 8b bd 20 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1e0]
0x13ee2:   e8 f0 e9 ff ff                        	call 0x128d7 <bReadBCAS_Data>
0x13ee7:   c6 85 70 fe ff ff 01                  	mov byte ptr [rbp - 0x190], 1
0x13eee:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x13ef5:   41 b9 00 00 00 00                     	mov r9d, 0
0x13efb:   41 b8 01 00 00 00                     	mov r8d, 1
0x13f01:   48 8d 8d 70 fe ff ff                  	lea rcx, [rbp - 0x190]
0x13f08:   ba 01 00 00 00                        	mov edx, 1
0x13f0d:   48 89 df                              	mov rdi, rbx
0x13f10:   e8 ab d0 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x13f15:   c6 83 88 14 00 00 01                  	mov byte ptr [rbx + 0x1488], 1
0x13f1c:   c6 83 8b 14 00 00 00                  	mov byte ptr [rbx + 0x148b], 0
0x13f23:   c6 83 8a 14 00 00 00                  	mov byte ptr [rbx + 0x148a], 0
0x13f2a:   c6 83 8c 14 00 00 00                  	mov byte ptr [rbx + 0x148c], 0
0x13f31:   80 bb 8d 14 00 00 00                  	cmp byte ptr [rbx + 0x148d], 0
0x13f38:   0f 84 9f 00 00 00                     	je 0x13fdd <DTV_PollingThread+0x89b>
0x13f3e:   c6 45 80 00                           	mov byte ptr [rbp - 0x80], 0
0x13f42:   c6 45 81 c1                           	mov byte ptr [rbp - 0x7f], 0xc1
0x13f46:   c6 45 82 01                           	mov byte ptr [rbp - 0x7e], 1
0x13f4a:   c6 45 83 fe                           	mov byte ptr [rbp - 0x7d], 0xfe
0x13f4e:   80 bb 88 14 00 00 00                  	cmp byte ptr [rbx + 0x1488], 0
0x13f55:   74 30                                 	je 0x13f87 <DTV_PollingThread+0x845>
0x13f57:   0f b6 7d 80                           	movzx edi, byte ptr [rbp - 0x80]
0x13f5b:   e8 7d 68 ff ff                        	call 0xa7dd <ChangeEndian>
0x13f60:   88 45 80                              	mov byte ptr [rbp - 0x80], al
0x13f63:   0f b6 7d 81                           	movzx edi, byte ptr [rbp - 0x7f]
0x13f67:   e8 71 68 ff ff                        	call 0xa7dd <ChangeEndian>
0x13f6c:   88 45 81                              	mov byte ptr [rbp - 0x7f], al
0x13f6f:   0f b6 7d 82                           	movzx edi, byte ptr [rbp - 0x7e]
0x13f73:   e8 65 68 ff ff                        	call 0xa7dd <ChangeEndian>
0x13f78:   88 45 82                              	mov byte ptr [rbp - 0x7e], al
0x13f7b:   0f b6 7d 83                           	movzx edi, byte ptr [rbp - 0x7d]
0x13f7f:   e8 59 68 ff ff                        	call 0xa7dd <ChangeEndian>
0x13f84:   88 45 83                              	mov byte ptr [rbp - 0x7d], al
0x13f87:   0f b6 45 80                           	movzx eax, byte ptr [rbp - 0x80]
0x13f8b:   32 45 81                              	xor al, byte ptr [rbp - 0x7f]
0x13f8e:   32 45 82                              	xor al, byte ptr [rbp - 0x7e]
0x13f91:   32 45 83                              	xor al, byte ptr [rbp - 0x7d]
0x13f94:   88 45 84                              	mov byte ptr [rbp - 0x7c], al
0x13f97:   0f b6 8b 8d 14 00 00                  	movzx ecx, byte ptr [rbx + 0x148d]
0x13f9e:   48 8d 75 80                           	lea rsi, [rbp - 0x80]
0x13fa2:   48 8b 7b 48                           	mov rdi, qword ptr [rbx + 0x48]
0x13fa6:   ba 05 00 00 00                        	mov edx, 5
0x13fab:   e8 cf ec ff ff                        	call 0x12c7f <bWtBCAS_Data>
0x13fb0:   c6 85 70 fe ff ff 0c                  	mov byte ptr [rbp - 0x190], 0xc ; "GNU"
0x13fb7:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x13fbe:   41 b9 00 00 00 00                     	mov r9d, 0
0x13fc4:   4c 8d 85 70 fe ff ff                  	lea r8, [rbp - 0x190]
0x13fcb:   b9 01 00 00 00                        	mov ecx, 1
0x13fd0:   ba 00 00 00 00                        	mov edx, 0
0x13fd5:   48 89 df                              	mov rdi, rbx
0x13fd8:   e8 98 e8 ff ff                        	call 0x12875 <DTV_WriteI2CEncData>
0x13fdd:   48 8d 7b 08                           	lea rdi, [rbx + 8]
0x13fe1:   e8 da ed ff ff                        	call 0x12dc0 <Get_BCAS_INFO>
0x13fe6:   c7 83 dc 02 00 00 00 00 00 00         	mov dword ptr [rbx + 0x2dc], 0
0x13ff0:   c7 83 98 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x198], 0
0x13ffa:   c6 83 40 13 00 00 01                  	mov byte ptr [rbx + 0x1340], 1
0x14001:   e9 5c 09 00 00                        	jmp 0x14962 <DTV_PollingThread+0x1220>
0x14006:   ba 01 00 00 00                        	mov edx, 1
0x1400b:   be 00 00 00 00                        	mov esi, 0
0x14010:   48 8b bd 20 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1e0]
0x14017:   e8 6e 8b 00 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x1401c:   e9 41 09 00 00                        	jmp 0x14962 <DTV_PollingThread+0x1220>
0x14021:   3c 02                                 	cmp al, 2
0x14023:   0f 85 1b 02 00 00                     	jne 0x14244 <DTV_PollingThread+0xb02>
0x14029:   8b 93 98 01 00 00                     	mov edx, dword ptr [rbx + 0x198]
0x1402f:   89 95 30 fe ff ff                     	mov dword ptr [rbp - 0x1d0], edx
0x14035:   48 8d 43 58                           	lea rax, [rbx + 0x58]
0x14039:   48 89 85 18 fe ff ff                  	mov qword ptr [rbp - 0x1e8], rax
0x14040:   48 8d 93 e0 02 00 00                  	lea rdx, [rbx + 0x2e0]
0x14047:   48 89 95 00 fe ff ff                  	mov qword ptr [rbp - 0x200], rdx
0x1404e:   8b 85 30 fe ff ff                     	mov eax, dword ptr [rbp - 0x1d0]
0x14054:   8d 74 40 01                           	lea esi, [rax + rax*2 + 1]
0x14058:   48 63 f6                              	movsxd rsi, esi
0x1405b:   bf 00 00 00 00                        	mov edi, 0
0x14060:   e8 03 21 ff ff                        	call 0x6168 <FUSB_ExAllocatePool>
0x14065:   48 89 85 28 fe ff ff                  	mov qword ptr [rbp - 0x1d8], rax
0x1406c:   8b 83 98 01 00 00                     	mov eax, dword ptr [rbx + 0x198]
0x14072:   8d 44 40 01                           	lea eax, [rax + rax*2 + 1]
0x14076:   48 63 d0                              	movsxd rdx, eax
0x14079:   be 00 00 00 00                        	mov esi, 0
0x1407e:   48 8b bd 28 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1d8]
0x14085:   e8 b6 ab 02 00                        	call 0x3ec40 <memset>
0x1408a:   83 bb 98 01 00 00 00                  	cmp dword ptr [rbx + 0x198], 0
0x14091:   7e 4d                                 	jle 0x140e0 <DTV_PollingThread+0x99e>
0x14093:   41 bd 00 00 00 00                     	mov r13d, 0
0x14099:   4c 89 b5 08 fe ff ff                  	mov qword ptr [rbp - 0x1f8], r14
0x140a0:   4d 89 e6                              	mov r14, r12
0x140a3:   4c 8b a5 28 fe ff ff                  	mov r12, qword ptr [rbp - 0x1d8]
0x140aa:   49 63 c5                              	movsxd rax, r13d
0x140ad:   0f b6 4c 03 58                        	movzx ecx, byte ptr [rbx + rax + 0x58]
0x140b2:   4c 89 e2                              	mov rdx, r12
0x140b5:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x140bc:   4c 89 e7                              	mov rdi, r12
0x140bf:   b8 00 00 00 00                        	mov eax, 0
0x140c4:   e8 9f ab 02 00                        	call 0x3ec68 <sprintf>
0x140c9:   41 83 c5 01                           	add r13d, 1
0x140cd:   44 39 ab 98 01 00 00                  	cmp dword ptr [rbx + 0x198], r13d
0x140d4:   7f d4                                 	jg 0x140aa <DTV_PollingThread+0x968>
0x140d6:   4d 89 f4                              	mov r12, r14
0x140d9:   4c 8b b5 08 fe ff ff                  	mov r14, qword ptr [rbp - 0x1f8]
0x140e0:   48 8b bd 28 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1d8]
0x140e7:   e8 6c 20 ff ff                        	call 0x6158 <FUSB_ExFreePool>
0x140ec:   48 8d bb e0 26 09 00                  	lea rdi, [rbx + 0x926e0]
0x140f3:   48 63 93 98 01 00 00                  	movsxd rdx, dword ptr [rbx + 0x198]
0x140fa:   48 8b b5 18 fe ff ff                  	mov rsi, qword ptr [rbp - 0x1e8]
0x14101:   e8 62 aa 02 00                        	call 0x3eb68 <memcpy>
0x14106:   8b 83 98 01 00 00                     	mov eax, dword ptr [rbx + 0x198]
0x1410c:   89 83 20 28 09 00                     	mov dword ptr [rbx + 0x92820], eax
0x14112:   c6 83 e0 02 00 00 00                  	mov byte ptr [rbx + 0x2e0], 0
0x14119:   80 bb 8a 14 00 00 01                  	cmp byte ptr [rbx + 0x148a], 1
0x14120:   19 c0                                 	sbb eax, eax
0x14122:   f7 d0                                 	not eax
0x14124:   83 e0 40                              	and eax, 0x40
0x14127:   48 8b 95 00 fe ff ff                  	mov rdx, qword ptr [rbp - 0x200]
0x1412e:   88 42 01                              	mov byte ptr [rdx + 1], al
0x14131:   0f b6 85 30 fe ff ff                  	movzx eax, byte ptr [rbp - 0x1d0]
0x14138:   88 42 02                              	mov byte ptr [rdx + 2], al
0x1413b:   4c 63 ad 30 fe ff ff                  	movsxd r13, dword ptr [rbp - 0x1d0]
0x14142:   48 89 d7                              	mov rdi, rdx
0x14145:   48 83 c7 03                           	add rdi, 3
0x14149:   4c 89 ea                              	mov rdx, r13
0x1414c:   48 8b b5 18 fe ff ff                  	mov rsi, qword ptr [rbp - 0x1e8]
0x14153:   e8 10 aa 02 00                        	call 0x3eb68 <memcpy>
0x14158:   49 83 c5 03                           	add r13, 3
0x1415c:   42 c6 84 2b e0 02 00 00 00            	mov byte ptr [rbx + r13 + 0x2e0], 0
0x14165:   80 bb 88 14 00 00 00                  	cmp byte ptr [rbx + 0x1488], 0
0x1416c:   74 5b                                 	je 0x141c9 <DTV_PollingThread+0xa87>
0x1416e:   8b 85 30 fe ff ff                     	mov eax, dword ptr [rbp - 0x1d0]
0x14174:   83 c0 04                              	add eax, 4
0x14177:   85 c0                                 	test eax, eax
0x14179:   7e 4e                                 	jle 0x141c9 <DTV_PollingThread+0xa87>
0x1417b:   8b 85 30 fe ff ff                     	mov eax, dword ptr [rbp - 0x1d0]
0x14181:   83 c0 03                              	add eax, 3
0x14184:   48 8d 44 03 01                        	lea rax, [rbx + rax + 1]
0x14189:   48 89 9d 08 fe ff ff                  	mov qword ptr [rbp - 0x1f8], rbx
0x14190:   4c 89 b5 18 fe ff ff                  	mov qword ptr [rbp - 0x1e8], r14
0x14197:   4d 89 e6                              	mov r14, r12
0x1419a:   49 89 c4                              	mov r12, rax
0x1419d:   0f b6 bb e0 02 00 00                  	movzx edi, byte ptr [rbx + 0x2e0]
0x141a4:   e8 34 66 ff ff                        	call 0xa7dd <ChangeEndian>
0x141a9:   88 83 e0 02 00 00                     	mov byte ptr [rbx + 0x2e0], al
0x141af:   48 83 c3 01                           	add rbx, 1
0x141b3:   4c 39 e3                              	cmp rbx, r12
0x141b6:   75 e5                                 	jne 0x1419d <DTV_PollingThread+0xa5b>
0x141b8:   48 8b 9d 08 fe ff ff                  	mov rbx, qword ptr [rbp - 0x1f8]
0x141bf:   4d 89 f4                              	mov r12, r14
0x141c2:   4c 8b b5 18 fe ff ff                  	mov r14, qword ptr [rbp - 0x1e8]
0x141c9:   0f b6 83 e0 02 00 00                  	movzx eax, byte ptr [rbx + 0x2e0]
0x141d0:   42 88 84 2b e0 02 00 00               	mov byte ptr [rbx + r13 + 0x2e0], al
0x141d8:   8b 85 30 fe ff ff                     	mov eax, dword ptr [rbp - 0x1d0]
0x141de:   83 c0 03                              	add eax, 3
0x141e1:   83 f8 01                              	cmp eax, 1
0x141e4:   7e 29                                 	jle 0x1420f <DTV_PollingThread+0xacd>
0x141e6:   48 89 d8                              	mov rax, rbx
0x141e9:   8b 95 30 fe ff ff                     	mov edx, dword ptr [rbp - 0x1d0]
0x141ef:   83 c2 01                              	add edx, 1
0x141f2:   48 8d 4c 13 01                        	lea rcx, [rbx + rdx + 1]
0x141f7:   0f b6 90 e1 02 00 00                  	movzx edx, byte ptr [rax + 0x2e1]
0x141fe:   42 30 94 2b e0 02 00 00               	xor byte ptr [rbx + r13 + 0x2e0], dl
0x14206:   48 83 c0 01                           	add rax, 1
0x1420a:   48 39 c8                              	cmp rax, rcx
0x1420d:   75 e8                                 	jne 0x141f7 <DTV_PollingThread+0xab5>
0x1420f:   8b 95 30 fe ff ff                     	mov edx, dword ptr [rbp - 0x1d0]
0x14215:   83 c2 04                              	add edx, 4
0x14218:   89 93 20 04 00 00                     	mov dword ptr [rbx + 0x420], edx
0x1421e:   0f b6 8b 8d 14 00 00                  	movzx ecx, byte ptr [rbx + 0x148d]
0x14225:   48 8b b5 00 fe ff ff                  	mov rsi, qword ptr [rbp - 0x200]
0x1422c:   48 8b bd 20 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1e0]
0x14233:   e8 47 ea ff ff                        	call 0x12c7f <bWtBCAS_Data>
0x14238:   c6 83 40 13 00 00 03                  	mov byte ptr [rbx + 0x1340], 3
0x1423f:   e9 1e 07 00 00                        	jmp 0x14962 <DTV_PollingThread+0x1220>
0x14244:   3c 04                                 	cmp al, 4
0x14246:   75 60                                 	jne 0x142a8 <DTV_PollingThread+0xb66>
0x14248:   48 8b 95 00 fe ff ff                  	mov rdx, qword ptr [rbp - 0x200]
0x1424f:   c6 02 00                              	mov byte ptr [rdx], 0
0x14252:   80 bb 8b 14 00 00 00                  	cmp byte ptr [rbx + 0x148b], 0
0x14259:   75 0a                                 	jne 0x14265 <DTV_PollingThread+0xb23>
0x1425b:   c6 42 03 09                           	mov byte ptr [rdx + 3], 9
0x1425f:   c6 42 01 09                           	mov byte ptr [rdx + 1], 9
0x14263:   eb 0f                                 	jmp 0x14274 <DTV_PollingThread+0xb32>
0x14265:   48 8b 85 00 fe ff ff                  	mov rax, qword ptr [rbp - 0x200]
0x1426c:   c6 40 03 01                           	mov byte ptr [rax + 3], 1
0x14270:   c6 40 01 01                           	mov byte ptr [rax + 1], 1
0x14274:   48 8b 95 00 fe ff ff                  	mov rdx, qword ptr [rbp - 0x200]
0x1427b:   c6 42 02 00                           	mov byte ptr [rdx + 2], 0
0x1427f:   0f b6 8b 8d 14 00 00                  	movzx ecx, byte ptr [rbx + 0x148d]
0x14286:   8b 93 20 04 00 00                     	mov edx, dword ptr [rbx + 0x420]
0x1428c:   48 8d b3 e0 02 00 00                  	lea rsi, [rbx + 0x2e0]
0x14293:   48 8b 7b 48                           	mov rdi, qword ptr [rbx + 0x48]
0x14297:   e8 e3 e9 ff ff                        	call 0x12c7f <bWtBCAS_Data>
0x1429c:   c6 83 40 13 00 00 03                  	mov byte ptr [rbx + 0x1340], 3
0x142a3:   e9 ba 06 00 00                        	jmp 0x14962 <DTV_PollingThread+0x1220>
0x142a8:   3c 03                                 	cmp al, 3
0x142aa:   0f 85 b2 06 00 00                     	jne 0x14962 <DTV_PollingThread+0x1220>
0x142b0:   48 8d 93 30 04 00 00                  	lea rdx, [rbx + 0x430]
0x142b7:   48 8d b3 34 04 00 00                  	lea rsi, [rbx + 0x434]
0x142be:   45 0f b6 c9                           	movzx r9d, r9b
0x142c2:   45 89 e8                              	mov r8d, r13d
0x142c5:   b9 00 00 00 00                        	mov ecx, 0
0x142ca:   48 8b bd 20 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1e0]
0x142d1:   e8 01 e6 ff ff                        	call 0x128d7 <bReadBCAS_Data>
0x142d6:   84 c0                                 	test al, al
0x142d8:   0f 84 93 07 00 00                     	je 0x14a71
0x142de:   8b bb 30 04 00 00                     	mov edi, dword ptr [rbx + 0x430]
0x142e4:   85 ff                                 	test edi, edi
0x142e6:   0f 8e 85 07 00 00                     	jle 0x14a71
0x142ec:   0f b6 b3 34 04 00 00                  	movzx esi, byte ptr [rbx + 0x434]
0x142f3:   48 89 da                              	mov rdx, rbx
0x142f6:   b8 00 00 00 00                        	mov eax, 0
0x142fb:   40 84 f6                              	test sil, sil
0x142fe:   74 18                                 	je 0x14318 <DTV_PollingThread+0xbd6>
0x14300:   e9 40 07 00 00                        	jmp 0x14a45 <DTV_PollingThread+0x1303>
0x14305:   0f b6 8a 35 04 00 00                  	movzx ecx, byte ptr [rdx + 0x435]
0x1430c:   48 83 c2 01                           	add rdx, 1
0x14310:   84 c9                                 	test cl, cl
0x14312:   0f 85 2d 07 00 00                     	jne 0x14a45 <DTV_PollingThread+0x1303>
0x14318:   83 c0 01                              	add eax, 1
0x1431b:   39 c7                                 	cmp edi, eax
0x1431d:   7f e6                                 	jg 0x14305 <DTV_PollingThread+0xbc3>
0x1431f:   e9 4d 07 00 00                        	jmp 0x14a71
0x14324:   0f b6 8c 13 34 04 00 00               	movzx ecx, byte ptr [rbx + rdx + 0x434]
0x1432c:   32 88 35 04 00 00                     	xor cl, byte ptr [rax + 0x435]
0x14332:   88 8c 13 34 04 00 00                  	mov byte ptr [rbx + rdx + 0x434], cl
0x14339:   48 83 c0 01                           	add rax, 1
0x1433d:   48 39 f0                              	cmp rax, rsi
0x14340:   75 e2                                 	jne 0x14324 <DTV_PollingThread+0xbe2>
0x14342:   48 63 ff                              	movsxd rdi, edi
0x14345:   4d 63 c0                              	movsxd r8, r8d
0x14348:   0f b6 84 3b 34 04 00 00               	movzx eax, byte ptr [rbx + rdi + 0x434]
0x14350:   42 3a 84 03 34 04 00 00               	cmp al, byte ptr [rbx + r8 + 0x434]
0x14358:   0f 85 13 07 00 00                     	jne 0x14a71
0x1435e:   80 bb 88 14 00 00 00                  	cmp byte ptr [rbx + 0x1488], 0
0x14365:   74 5a                                 	je 0x143c1 <DTV_PollingThread+0xc7f>
0x14367:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x1436d:   89 85 30 fe ff ff                     	mov dword ptr [rbp - 0x1d0], eax
0x14373:   85 c0                                 	test eax, eax
0x14375:   7e 4a                                 	jle 0x143c1 <DTV_PollingThread+0xc7f>
0x14377:   49 89 dd                              	mov r13, rbx
0x1437a:   48 89 9d 18 fe ff ff                  	mov qword ptr [rbp - 0x1e8], rbx
0x14381:   4c 89 b5 28 fe ff ff                  	mov qword ptr [rbp - 0x1d8], r14
0x14388:   4d 89 e6                              	mov r14, r12
0x1438b:   41 89 c4                              	mov r12d, eax
0x1438e:   41 0f b6 bd 34 04 00 00               	movzx edi, byte ptr [r13 + 0x434]
0x14396:   e8 42 64 ff ff                        	call 0xa7dd <ChangeEndian>
0x1439b:   41 88 85 34 04 00 00                  	mov byte ptr [r13 + 0x434], al
0x143a2:   49 83 c5 01                           	add r13, 1
0x143a6:   44 89 e8                              	mov eax, r13d
0x143a9:   29 d8                                 	sub eax, ebx
0x143ab:   44 39 e0                              	cmp eax, r12d
0x143ae:   7c de                                 	jl 0x1438e <DTV_PollingThread+0xc4c>
0x143b0:   48 8b 9d 18 fe ff ff                  	mov rbx, qword ptr [rbp - 0x1e8]
0x143b7:   4d 89 f4                              	mov r12, r14
0x143ba:   4c 8b b5 28 fe ff ff                  	mov r14, qword ptr [rbp - 0x1d8]
0x143c1:   f6 83 35 04 00 00 20                  	test byte ptr [rbx + 0x435], 0x20
0x143c8:   0f 84 e4 00 00 00                     	je 0x144b2 <DTV_PollingThread+0xd70>
0x143ce:   c6 83 40 13 00 00 04                  	mov byte ptr [rbx + 0x1340], 4
0x143d5:   80 bb 8c 14 00 00 00                  	cmp byte ptr [rbx + 0x148c], 0
0x143dc:   0f 85 88 00 00 00                     	jne 0x1446a <DTV_PollingThread+0xd28>
0x143e2:   c6 83 8c 14 00 00 01                  	mov byte ptr [rbx + 0x148c], 1
0x143e9:   c6 83 8b 14 00 00 00                  	mov byte ptr [rbx + 0x148b], 0
0x143f0:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x143f6:   89 83 7c 0f 00 00                     	mov dword ptr [rbx + 0xf7c], eax
0x143fc:   4c 8d 83 80 0f 00 00                  	lea r8, [rbx + 0xf80]
0x14403:   4c 89 c7                              	mov rdi, r8
0x14406:   ba c0 03 00 00                        	mov edx, 0x3c0
0x1440b:   b8 00 00 00 00                        	mov eax, 0
0x14410:   41 f6 c0 01                           	test r8b, 1
0x14414:   74 07                                 	je 0x1441d <DTV_PollingThread+0xcdb>
0x14416:   aa                                    	stosb byte ptr [rdi], al
0x14417:   8b 95 e4 fd ff ff                     	mov edx, dword ptr [rbp - 0x21c]
0x1441d:   40 f6 c7 02                           	test dil, 2
0x14421:   74 05                                 	je 0x14428 <DTV_PollingThread+0xce6>
0x14423:   66 ab                                 	stosw word ptr [rdi], ax
0x14425:   83 ea 02                              	sub edx, 2
0x14428:   40 f6 c7 04                           	test dil, 4
0x1442c:   74 04                                 	je 0x14432 <DTV_PollingThread+0xcf0>
0x1442e:   ab                                    	stosd dword ptr [rdi], eax
0x1442f:   83 ea 04                              	sub edx, 4
0x14432:   89 d1                                 	mov ecx, edx
0x14434:   c1 e9 03                              	shr ecx, 3
0x14437:   89 c9                                 	mov ecx, ecx
0x14439:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x1443c:   f6 c2 04                              	test dl, 4
0x1443f:   74 01                                 	je 0x14442 <DTV_PollingThread+0xd00>
0x14441:   ab                                    	stosd dword ptr [rdi], eax
0x14442:   f6 c2 02                              	test dl, 2
0x14445:   74 02                                 	je 0x14449 <DTV_PollingThread+0xd07>
0x14447:   66 ab                                 	stosw word ptr [rdi], ax
0x14449:   f6 c2 01                              	test dl, 1
0x1444c:   74 01                                 	je 0x1444f <DTV_PollingThread+0xd0d>
0x1444e:   aa                                    	stosb byte ptr [rdi], al
0x1444f:   48 63 93 30 04 00 00                  	movsxd rdx, dword ptr [rbx + 0x430]
0x14456:   48 8d b3 34 04 00 00                  	lea rsi, [rbx + 0x434]
0x1445d:   4c 89 c7                              	mov rdi, r8
0x14460:   e8 03 a7 02 00                        	call 0x3eb68 <memcpy>
0x14465:   e9 f8 04 00 00                        	jmp 0x14962 <DTV_PollingThread+0x1220>
0x1446a:   c6 83 8b 14 00 00 00                  	mov byte ptr [rbx + 0x148b], 0
0x14471:   48 63 83 7c 0f 00 00                  	movsxd rax, dword ptr [rbx + 0xf7c]
0x14478:   48 8d bc 03 7f 0f 00 00               	lea rdi, [rbx + rax + 0xf7f]
0x14480:   8b 93 30 04 00 00                     	mov edx, dword ptr [rbx + 0x430]
0x14486:   83 ea 03                              	sub edx, 3
0x14489:   48 63 d2                              	movsxd rdx, edx
0x1448c:   48 8d b3 37 04 00 00                  	lea rsi, [rbx + 0x437]
0x14493:   e8 d0 a6 02 00                        	call 0x3eb68 <memcpy>
0x14498:   8b 83 7c 0f 00 00                     	mov eax, dword ptr [rbx + 0xf7c]
0x1449e:   03 83 30 04 00 00                     	add eax, dword ptr [rbx + 0x430]
0x144a4:   83 e8 04                              	sub eax, 4
0x144a7:   89 83 7c 0f 00 00                     	mov dword ptr [rbx + 0xf7c], eax
0x144ad:   e9 b0 04 00 00                        	jmp 0x14962 <DTV_PollingThread+0x1220>
0x144b2:   80 bb 8a 14 00 00 00                  	cmp byte ptr [rbx + 0x148a], 0
0x144b9:   0f 94 83 8a 14 00 00                  	sete byte ptr [rbx + 0x148a]
0x144c0:   0f b6 83 35 04 00 00                  	movzx eax, byte ptr [rbx + 0x435]
0x144c7:   25 82 00 00 00                        	and eax, 0x82
0x144cc:   3d 82 00 00 00                        	cmp eax, 0x82
0x144d1:   0f 94 c0                              	sete al
0x144d4:   0f b6 c0                              	movzx eax, al
0x144d7:   89 85 28 fe ff ff                     	mov dword ptr [rbp - 0x1d8], eax
0x144dd:   80 bb 8c 14 00 00 00                  	cmp byte ptr [rbx + 0x148c], 0
0x144e4:   74 62                                 	je 0x14548 <DTV_PollingThread+0xe06>
0x144e6:   85 c0                                 	test eax, eax
0x144e8:   75 3c                                 	jne 0x14526 <DTV_PollingThread+0xde4>
0x144ea:   48 63 83 7c 0f 00 00                  	movsxd rax, dword ptr [rbx + 0xf7c]
0x144f1:   48 8d bc 03 7f 0f 00 00               	lea rdi, [rbx + rax + 0xf7f]
0x144f9:   8b 93 30 04 00 00                     	mov edx, dword ptr [rbx + 0x430]
0x144ff:   83 ea 03                              	sub edx, 3
0x14502:   48 63 d2                              	movsxd rdx, edx
0x14505:   48 8d b3 37 04 00 00                  	lea rsi, [rbx + 0x437]
0x1450c:   e8 57 a6 02 00                        	call 0x3eb68 <memcpy>
0x14511:   8b 83 7c 0f 00 00                     	mov eax, dword ptr [rbx + 0xf7c]
0x14517:   03 83 30 04 00 00                     	add eax, dword ptr [rbx + 0x430]
0x1451d:   83 e8 04                              	sub eax, 4
0x14520:   89 83 7c 0f 00 00                     	mov dword ptr [rbx + 0xf7c], eax
0x14526:   8b 93 7c 0f 00 00                     	mov edx, dword ptr [rbx + 0xf7c]
0x1452c:   89 93 30 04 00 00                     	mov dword ptr [rbx + 0x430], edx
0x14532:   48 8d bb 34 04 00 00                  	lea rdi, [rbx + 0x434]
0x14539:   48 63 d2                              	movsxd rdx, edx
0x1453c:   48 8d b3 80 0f 00 00                  	lea rsi, [rbx + 0xf80]
0x14543:   e8 20 a6 02 00                        	call 0x3eb68 <memcpy>
0x14548:   48 8b 85 e8 fd ff ff                  	mov rax, qword ptr [rbp - 0x218]
0x1454f:   4c 89 e2                              	mov rdx, r12
0x14552:   48 8d 75 c0                           	lea rsi, [rbp - 0x40]
0x14556:   48 83 c6 08                           	add rsi, 8
0x1455a:   c6 00 00                              	mov byte ptr [rax], 0
0x1455d:   48 8b 8a e8 04 00 00                  	mov rcx, qword ptr [rdx + 0x4e8]
0x14564:   48 85 c9                              	test rcx, rcx
0x14567:   74 09                                 	je 0x14572 <DTV_PollingThread+0xe30>
0x14569:   0f b6 89 bc fa 08 00                  	movzx ecx, byte ptr [rcx + 0x8fabc]
0x14570:   88 08                                 	mov byte ptr [rax], cl
0x14572:   48 83 c0 01                           	add rax, 1
0x14576:   48 83 c2 08                           	add rdx, 8
0x1457a:   48 39 f0                              	cmp rax, rsi
0x1457d:   75 db                                 	jne 0x1455a <DTV_PollingThread+0xe18>
0x1457f:   80 7d c1 01                           	cmp byte ptr [rbp - 0x3f], 1
0x14583:   74 2e                                 	je 0x145b3 <DTV_PollingThread+0xe71>
0x14585:   48 8d 45 c0                           	lea rax, [rbp - 0x40]
0x14589:   48 83 c0 02                           	add rax, 2
0x1458d:   80 38 01                              	cmp byte ptr [rax], 1
0x14590:   74 21                                 	je 0x145b3 <DTV_PollingThread+0xe71>
0x14592:   48 83 c0 01                           	add rax, 1
0x14596:   48 39 f0                              	cmp rax, rsi
0x14599:   75 f2                                 	jne 0x1458d <DTV_PollingThread+0xe4b>
0x1459b:   80 bb bc fa 08 00 01                  	cmp byte ptr [rbx + 0x8fabc], 1
0x145a2:   74 16                                 	je 0x145ba <DTV_PollingThread+0xe78>
0x145a4:   80 bd f7 fd ff ff 01                  	cmp byte ptr [rbp - 0x209], 1
0x145ab:   0f 85 9d 01 00 00                     	jne 0x1474e <DTV_PollingThread+0x100c>
0x145b1:   eb 07                                 	jmp 0x145ba <DTV_PollingThread+0xe78>
0x145b3:   c6 85 f7 fd ff ff 01                  	mov byte ptr [rbp - 0x209], 1
0x145ba:   48 83 bb 28 04 00 00 00               	cmp qword ptr [rbx + 0x428], 0
0x145c2:   0f 84 86 01 00 00                     	je 0x1474e <DTV_PollingThread+0x100c>
0x145c8:   48 8d 8d 60 fe ff ff                  	lea rcx, [rbp - 0x1a0]
0x145cf:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x145d6:   41 b9 00 00 00 00                     	mov r9d, 0
0x145dc:   41 b8 01 00 00 00                     	mov r8d, 1
0x145e2:   ba 04 00 00 00                        	mov edx, 4
0x145e7:   48 89 df                              	mov rdi, rbx
0x145ea:   e8 21 d4 ff ff                        	call 0x11a10 <DTV_DecEncChip_I2C_Read>
0x145ef:   0f b6 83 24 04 00 00                  	movzx eax, byte ptr [rbx + 0x424]
0x145f6:   48 d1 e8                              	shr rax, 1
0x145f9:   83 e0 07                              	and eax, 7
0x145fc:   49 8b 84 c4 e0 04 00 00               	mov rax, qword ptr [r12 + rax*8 + 0x4e0]
0x14604:   48 85 c0                              	test rax, rax
0x14607:   74 5a                                 	je 0x14663 <DTV_PollingThread+0xf21>
0x14609:   44 0f b6 a8 bc fa 08 00               	movzx r13d, byte ptr [rax + 0x8fabc]
0x14611:   45 84 ed                              	test r13b, r13b
0x14614:   74 4d                                 	je 0x14663 <DTV_PollingThread+0xf21>
0x14616:   48 8b b8 b0 fa 08 00                  	mov rdi, qword ptr [rax + 0x8fab0]
0x1461d:   b8 00 00 00 00                        	mov eax, 0
0x14622:   48 85 ff                              	test rdi, rdi
0x14625:   74 05                                 	je 0x1462c <DTV_PollingThread+0xeea>
0x14627:   e8 88 1b 00 00                        	call 0x161b4 <TS_GetBcasPtr>
0x1462c:   f6 85 60 fe ff ff 01                  	test byte ptr [rbp - 0x1a0], 1
0x14633:   74 2e                                 	je 0x14663 <DTV_PollingThread+0xf21>
0x14635:   41 80 fd 01                           	cmp r13b, 1
0x14639:   75 28                                 	jne 0x14663 <DTV_PollingThread+0xf21>
0x1463b:   48 8b 8b 28 04 00 00                  	mov rcx, qword ptr [rbx + 0x428]
0x14642:   48 39 c1                              	cmp rcx, rax
0x14645:   75 1c                                 	jne 0x14663 <DTV_PollingThread+0xf21>
0x14647:   0f b6 93 24 04 00 00                  	movzx edx, byte ptr [rbx + 0x424]
0x1464e:   8b b3 30 04 00 00                     	mov esi, dword ptr [rbx + 0x430]
0x14654:   83 ee 04                              	sub esi, 4
0x14657:   48 8d bb 37 04 00 00                  	lea rdi, [rbx + 0x437]
0x1465e:   e8 3d 1d 00 00                        	call 0x163a0 <TS_SetBCASResponse>
0x14663:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x14669:   83 f8 07                              	cmp eax, 7
0x1466c:   0f 8e d1 00 00 00                     	jle 0x14743 <DTV_PollingThread+0x1001>
0x14672:   83 e8 03                              	sub eax, 3
0x14675:   48 98                                 	cdqe 
0x14677:   0f b6 84 03 34 04 00 00               	movzx eax, byte ptr [rbx + rax + 0x434]
0x1467f:   88 85 52 fe ff ff                     	mov byte ptr [rbp - 0x1ae], al
0x14685:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x1468b:   83 e8 02                              	sub eax, 2
0x1468e:   48 98                                 	cdqe 
0x14690:   0f b6 84 03 34 04 00 00               	movzx eax, byte ptr [rbx + rax + 0x434]
0x14698:   88 85 53 fe ff ff                     	mov byte ptr [rbp - 0x1ad], al
0x1469e:   80 bb 38 04 00 00 01                  	cmp byte ptr [rbx + 0x438], 1
0x146a5:   76 1c                                 	jbe 0x146c3 <DTV_PollingThread+0xf81>
0x146a7:   0f b6 83 3b 04 00 00                  	movzx eax, byte ptr [rbx + 0x43b]
0x146ae:   88 85 50 fe ff ff                     	mov byte ptr [rbp - 0x1b0], al
0x146b4:   0f b6 83 3c 04 00 00                  	movzx eax, byte ptr [rbx + 0x43c]
0x146bb:   88 85 51 fe ff ff                     	mov byte ptr [rbp - 0x1af], al
0x146c1:   eb 0e                                 	jmp 0x146d1 <DTV_PollingThread+0xf8f>
0x146c3:   c6 85 50 fe ff ff 00                  	mov byte ptr [rbp - 0x1b0], 0
0x146ca:   c6 85 51 fe ff ff 00                  	mov byte ptr [rbp - 0x1af], 0
0x146d1:   48 8d bb 24 28 09 00                  	lea rdi, [rbx + 0x92824]
0x146d8:   48 63 93 30 04 00 00                  	movsxd rdx, dword ptr [rbx + 0x430]
0x146df:   48 8d b3 34 04 00 00                  	lea rsi, [rbx + 0x434]
0x146e6:   e8 7d a4 02 00                        	call 0x3eb68 <memcpy>
0x146eb:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x146f1:   89 83 64 29 09 00                     	mov dword ptr [rbx + 0x92964], eax
0x146f7:   0f b6 83 24 04 00 00                  	movzx eax, byte ptr [rbx + 0x424]
0x146fe:   48 d1 e8                              	shr rax, 1
0x14701:   83 e0 07                              	and eax, 7
0x14704:   49 8b bc c4 e0 04 00 00               	mov rdi, qword ptr [r12 + rax*8 + 0x4e0]
0x1470c:   48 85 ff                              	test rdi, rdi
0x1470f:   74 32                                 	je 0x14743 <DTV_PollingThread+0x1001>
0x14711:   48 8d b3 e0 26 09 00                  	lea rsi, [rbx + 0x926e0]
0x14718:   e8 11 6e ff ff                        	call 0xb52e <DTV_SaveBCASCommand>
0x1471d:   0f b6 83 24 04 00 00                  	movzx eax, byte ptr [rbx + 0x424]
0x14724:   48 d1 e8                              	shr rax, 1
0x14727:   83 e0 07                              	and eax, 7
0x1472a:   49 8b bc c4 e0 04 00 00               	mov rdi, qword ptr [r12 + rax*8 + 0x4e0]
0x14732:   48 85 ff                              	test rdi, rdi
0x14735:   74 0c                                 	je 0x14743 <DTV_PollingThread+0x1001>
0x14737:   48 8d b5 50 fe ff ff                  	lea rsi, [rbp - 0x1b0]
0x1473e:   e8 4a 74 ff ff                        	call 0xbb8d <DTV_SaveBcasReturnCode>
0x14743:   48 c7 83 28 04 00 00 00 00 00 00      	mov qword ptr [rbx + 0x428], 0
0x1474e:   80 bb d4 15 00 00 01                  	cmp byte ptr [rbx + 0x15d4], 1
0x14755:   75 4f                                 	jne 0x147a6 <DTV_PollingThread+0x1064>
0x14757:   80 bb d5 15 00 00 00                  	cmp byte ptr [rbx + 0x15d5], 0
0x1475e:   75 24                                 	jne 0x14784 <DTV_PollingThread+0x1042>
0x14760:   8b 93 30 04 00 00                     	mov edx, dword ptr [rbx + 0x430]
0x14766:   89 93 f4 07 00 00                     	mov dword ptr [rbx + 0x7f4], edx
0x1476c:   48 8d bb f8 07 00 00                  	lea rdi, [rbx + 0x7f8]
0x14773:   48 63 d2                              	movsxd rdx, edx
0x14776:   48 8d b3 34 04 00 00                  	lea rsi, [rbx + 0x434]
0x1477d:   e8 e6 a3 02 00                        	call 0x3eb68 <memcpy>
0x14782:   eb 22                                 	jmp 0x147a6 <DTV_PollingThread+0x1064>
0x14784:   8b 93 30 04 00 00                     	mov edx, dword ptr [rbx + 0x430]
0x1478a:   89 93 b8 0b 00 00                     	mov dword ptr [rbx + 0xbb8], edx
0x14790:   48 8d bb bc 0b 00 00                  	lea rdi, [rbx + 0xbbc]
0x14797:   48 63 d2                              	movsxd rdx, edx
0x1479a:   48 8d b3 34 04 00 00                  	lea rsi, [rbx + 0x434]
0x147a1:   e8 c2 a3 02 00                        	call 0x3eb68 <memcpy>
0x147a6:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x147ac:   8d 44 40 01                           	lea eax, [rax + rax*2 + 1]
0x147b0:   48 63 f0                              	movsxd rsi, eax
0x147b3:   bf 00 00 00 00                        	mov edi, 0
0x147b8:   e8 ab 19 ff ff                        	call 0x6168 <FUSB_ExAllocatePool>
0x147bd:   48 89 85 30 fe ff ff                  	mov qword ptr [rbp - 0x1d0], rax
0x147c4:   8b 83 30 04 00 00                     	mov eax, dword ptr [rbx + 0x430]
0x147ca:   8d 44 40 01                           	lea eax, [rax + rax*2 + 1]
0x147ce:   48 63 d0                              	movsxd rdx, eax
0x147d1:   be 00 00 00 00                        	mov esi, 0
0x147d6:   48 8b bd 30 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1d0]
0x147dd:   e8 5e a4 02 00                        	call 0x3ec40 <memset>
0x147e2:   83 bb 30 04 00 00 00                  	cmp dword ptr [rbx + 0x430], 0
0x147e9:   7e 66                                 	jle 0x14851 <DTV_PollingThread+0x110f>
0x147eb:   49 89 dd                              	mov r13, rbx
0x147ee:   4c 89 b5 08 fe ff ff                  	mov qword ptr [rbp - 0x1f8], r14
0x147f5:   49 89 de                              	mov r14, rbx
0x147f8:   bb 00 00 00 00                        	mov ebx, 0
0x147fd:   4c 89 bd 18 fe ff ff                  	mov qword ptr [rbp - 0x1e8], r15
0x14804:   4d 89 e7                              	mov r15, r12
0x14807:   4c 8b a5 30 fe ff ff                  	mov r12, qword ptr [rbp - 0x1d0]
0x1480e:   41 0f b6 8d 34 04 00 00               	movzx ecx, byte ptr [r13 + 0x434]
0x14816:   4c 89 e2                              	mov rdx, r12
0x14819:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x14820:   4c 89 e7                              	mov rdi, r12
0x14823:   b8 00 00 00 00                        	mov eax, 0
0x14828:   e8 3b a4 02 00                        	call 0x3ec68 <sprintf>
0x1482d:   83 c3 01                              	add ebx, 1
0x14830:   49 83 c5 01                           	add r13, 1
0x14834:   41 39 9e 30 04 00 00                  	cmp dword ptr [r14 + 0x430], ebx
0x1483b:   7f d1                                 	jg 0x1480e <DTV_PollingThread+0x10cc>
0x1483d:   4c 89 f3                              	mov rbx, r14
0x14840:   4c 8b b5 08 fe ff ff                  	mov r14, qword ptr [rbp - 0x1f8]
0x14847:   4d 89 fc                              	mov r12, r15
0x1484a:   4c 8b bd 18 fe ff ff                  	mov r15, qword ptr [rbp - 0x1e8]
0x14851:   48 8b bd 30 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1d0]
0x14858:   e8 fb 18 ff ff                        	call 0x6158 <FUSB_ExFreePool>
0x1485d:   83 bd 28 fe ff ff 00                  	cmp dword ptr [rbp - 0x1d8], 0
0x14864:   0f 94 83 40 13 00 00                  	sete byte ptr [rbx + 0x1340]
0x1486b:   c6 83 8c 14 00 00 00                  	mov byte ptr [rbx + 0x148c], 0
0x14872:   e9 eb 00 00 00                        	jmp 0x14962 <DTV_PollingThread+0x1220>
0x14877:   80 bb 49 fa 08 00 00                  	cmp byte ptr [rbx + 0x8fa49], 0
0x1487e:   74 13                                 	je 0x14893 <DTV_PollingThread+0x1151>
0x14880:   bf 01 00 00 00                        	mov edi, 1
0x14885:   e8 17 83 00 00                        	call 0x1cba1 <TLIB_Delay>
0x1488a:   80 bb 49 fa 08 00 00                  	cmp byte ptr [rbx + 0x8fa49], 0
0x14891:   75 ed                                 	jne 0x14880 <DTV_PollingThread+0x113e>
0x14893:   c6 83 49 fa 08 00 01                  	mov byte ptr [rbx + 0x8fa49], 1
0x1489a:   ba 10 00 00 00                        	mov edx, 0x10
0x1489f:   be 00 00 00 00                        	mov esi, 0
0x148a4:   48 8b bd 20 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1e0]
0x148ab:   e8 da 82 00 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x148b0:   bf 05 00 00 00                        	mov edi, 5
0x148b5:   e8 e7 82 00 00                        	call 0x1cba1 <TLIB_Delay>
0x148ba:   ba 10 00 00 00                        	mov edx, 0x10
0x148bf:   be ff 00 00 00                        	mov esi, 0xff
0x148c4:   48 8b bd 20 fe ff ff                  	mov rdi, qword ptr [rbp - 0x1e0]
0x148cb:   e8 ba 82 00 00                        	call 0x1cb8a <TLIB_SetGPIO>
0x148d0:   c6 83 49 fa 08 00 00                  	mov byte ptr [rbx + 0x8fa49], 0
0x148d7:   4c 8d ab a4 0d 03 00                  	lea r13, [rbx + 0x30da4]
0x148de:   ba 10 00 00 00                        	mov edx, 0x10
0x148e3:   4c 89 ee                              	mov rsi, r13
0x148e6:   48 89 df                              	mov rdi, rbx
0x148e9:   e8 a4 e6 ff ff                        	call 0x12f92 <DTV_Set_EncSeedRegASV5606>
0x148ee:   ba 10 00 00 00                        	mov edx, 0x10
0x148f3:   4c 89 ee                              	mov rsi, r13
0x148f6:   48 89 df                              	mov rdi, rbx
0x148f9:   e8 94 e6 ff ff                        	call 0x12f92 <DTV_Set_EncSeedRegASV5606>
0x148fe:   48 89 df                              	mov rdi, rbx
0x14901:   e8 1f c7 ff ff                        	call 0x11025 <DTV_EnableEncryptionChipTSOutput>
0x14906:   80 3b 00                              	cmp byte ptr [rbx], 0
0x14909:   0f 95 c1                              	setne cl
0x1490c:   0f b6 c9                              	movzx ecx, cl
0x1490f:   ba 01 00 00 00                        	mov edx, 1
0x14914:   be 00 00 00 00                        	mov esi, 0
0x14919:   4c 89 e7                              	mov rdi, r12
0x1491c:   e8 2a 05 00 00                        	call 0x14e4b <USB_FilterReset>
0x14921:   eb 38                                 	jmp 0x1495b <DTV_PollingThread+0x1219>
0x14923:   c6 85 7f fe ff ff 80                  	mov byte ptr [rbp - 0x181], 0x80
0x1492a:   48 8d 8d 7f fe ff ff                  	lea rcx, [rbp - 0x181]
0x14931:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x14938:   41 b9 00 00 00 00                     	mov r9d, 0
0x1493e:   41 b8 01 00 00 00                     	mov r8d, 1
0x14944:   ba 00 00 00 00                        	mov edx, 0
0x14949:   48 89 df                              	mov rdi, rbx
0x1494c:   e8 6f c6 ff ff                        	call 0x10fc0 <DTV_DecEncChip_I2C_Write>
0x14951:   bf 1e 00 00 00                        	mov edi, 0x1e
0x14956:   e8 46 82 00 00                        	call 0x1cba1 <TLIB_Delay>
0x1495b:   c6 83 40 13 00 00 00                  	mov byte ptr [rbx + 0x1340], 0
0x14962:   41 80 bc 24 10 55 00 00 00            	cmp byte ptr [r12 + 0x5510], 0
0x1496b:   75 67                                 	jne 0x149d4 <DTV_PollingThread+0x1292>
0x1496d:   48 ba 93 24 49 92 24 49 92 24         	movabs rdx, 0x2492492492492493
0x14977:   4c 89 f8                              	mov rax, r15
0x1497a:   48 f7 e2                              	mul rdx
0x1497d:   4c 89 f8                              	mov rax, r15
0x14980:   48 29 d0                              	sub rax, rdx
0x14983:   48 d1 e8                              	shr rax, 1
0x14986:   48 01 c2                              	add rdx, rax
0x14989:   48 c1 ea 02                           	shr rdx, 2
0x1498d:   48 8d 04 d5 00 00 00 00               	lea rax, [rdx*8]
0x14995:   48 29 d0                              	sub rax, rdx
0x14998:   49 39 c7                              	cmp r15, rax
0x1499b:   75 37                                 	jne 0x149d4 <DTV_PollingThread+0x1292>
0x1499d:   48 8d 8d 60 fe ff ff                  	lea rcx, [rbp - 0x1a0]
0x149a4:   0f b6 b3 ac fc 08 00                  	movzx esi, byte ptr [rbx + 0x8fcac]
0x149ab:   41 b9 00 00 00 00                     	mov r9d, 0
0x149b1:   41 b8 01 00 00 00                     	mov r8d, 1
0x149b7:   ba 04 00 00 00                        	mov edx, 4
0x149bc:   48 89 df                              	mov rdi, rbx
0x149bf:   e8 4c d0 ff ff                        	call 0x11a10 <DTV_DecEncChip_I2C_Read>
0x149c4:   f6 85 60 fe ff ff 01                  	test byte ptr [rbp - 0x1a0], 1
0x149cb:   75 07                                 	jne 0x149d4 <DTV_PollingThread+0x1292>
0x149cd:   c6 83 40 13 00 00 00                  	mov byte ptr [rbx + 0x1340], 0
0x149d4:   bf 32 00 00 00                        	mov edi, 0x32
0x149d9:   e8 87 0a 00 00                        	call 0x15465 <vUSB_Wait>
0x149de:   41 80 bc 24 d8 53 00 00 00            	cmp byte ptr [r12 + 0x53d8], 0
0x149e7:   75 0d                                 	jne 0x149f6 <DTV_PollingThread+0x12b4>
0x149e9:   49 83 c7 01                           	add r15, 1
0x149ed:   49 83 c6 01                           	add r14, 1
0x149f1:   e9 f9 ed ff ff                        	jmp 0x137ef <DTV_PollingThread+0xad>
0x149f6:   41 c6 84 24 d9 53 00 00 00            	mov byte ptr [r12 + 0x53d9], 0
0x149ff:   41 c6 84 24 d8 53 00 00 01            	mov byte ptr [r12 + 0x53d8], 1
0x14a08:   41 c6 84 24 30 54 00 00 00            	mov byte ptr [r12 + 0x5430], 0
0x14a11:   41 c6 84 24 31 54 00 00 01            	mov byte ptr [r12 + 0x5431], 1
0x14a1a:   49 8d bc 24 b8 53 00 00               	lea rdi, [r12 + 0x53b8]
0x14a22:   e8 19 a1 02 00                        	call 0x3eb40 <complete>
0x14a27:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x14a2b:   65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x14a34:   74 52                                 	je 0x14a88
0x14a36:   eb 4b                                 	jmp 0x14a83
0x14a38:   41 be 00 00 00 00                     	mov r14d, 0
0x14a3e:   66 90                                 	nop 
0x14a40:   e9 07 f2 ff ff                        	jmp 0x13c4c <DTV_PollingThread+0x50a>
0x14a45:   48 63 c7                              	movsxd rax, edi
0x14a48:   40 88 b4 03 34 04 00 00               	mov byte ptr [rbx + rax + 0x434], sil
0x14a50:   44 8d 47 ff                           	lea r8d, [rdi - 1]
0x14a54:   41 83 f8 01                           	cmp r8d, 1
0x14a58:   0f 8e e4 f8 ff ff                     	jle 0x14342 <DTV_PollingThread+0xc00>
0x14a5e:   48 89 d8                              	mov rax, rbx
0x14a61:   8d 57 fd                              	lea edx, [rdi - 3]
0x14a64:   48 8d 74 13 01                        	lea rsi, [rbx + rdx + 1]
; data inside code section at 0x14a69 -- 0x14a6a
0x14a69:   48                                                 |H               |
; function: bWritePcieReg at 0x14a6a -- 0x14a9a
0x14a6a:   63 d7                                 	movsxd rdx, edi
0x14a6c:   e9 b3 f8 ff ff                        	jmp 0x14324
0x14a71:   80 bb 8d 14 00 00 00                  	cmp byte ptr [rbx + 0x148d], 0
0x14a78:   0f 84 f9 fd ff ff                     	je 0x14877
0x14a7e:   e9 a0 fe ff ff                        	jmp 0x14923
0x14a83:   e8 20 a1 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x14a88:   48 81 c4 18 02 00 00                  	add rsp, 0x218
0x14a8f:   5b                                    	pop rbx
0x14a90:   41 5c                                 	pop r12
0x14a92:   41 5d                                 	pop r13
0x14a94:   41 5e                                 	pop r14
0x14a96:   41 5f                                 	pop r15
0x14a98:   c9                                    	leave 
0x14a99:   c3                                    	ret 
; function: bReadPcieReg at 0x14a9a -- 0x14aca
0x14a9a:   55                                    	push rbp
0x14a9b:   48 89 e5                              	mov rbp, rsp
0x14a9e:   e8 4d a1 02 00                        	call 0x3ebf0 <mcount>
0x14aa3:   89 f0                                 	mov eax, esi
0x14aa5:   49 89 d0                              	mov r8, rdx
0x14aa8:   48 89 ce                              	mov rsi, rcx
0x14aab:   0f b7 c8                              	movzx ecx, ax
0x14aae:   0f b7 d7                              	movzx edx, di
0x14ab1:   bf 00 00 00 00                        	mov edi, 0
0x14ab6:   e8 f7 5a ff ff                        	call 0xa5b2 <cfg_access>
0x14abb:   0f b6 f8                              	movzx edi, al
0x14abe:   e8 bd ca fe ff                        	call 0x1580 <NT_SUCCESS>
0x14ac3:   84 c0                                 	test al, al
0x14ac5:   0f 95 c0                              	setne al
0x14ac8:   c9                                    	leave 
0x14ac9:   c3                                    	ret 
; function: bTunerReset at 0x14aca -- 0x14afa
0x14aca:   55                                    	push rbp
0x14acb:   48 89 e5                              	mov rbp, rsp
0x14ace:   e8 1d a1 02 00                        	call 0x3ebf0 <mcount>
0x14ad3:   89 f0                                 	mov eax, esi
0x14ad5:   49 89 d0                              	mov r8, rdx
0x14ad8:   48 89 ce                              	mov rsi, rcx
0x14adb:   0f b7 c8                              	movzx ecx, ax
0x14ade:   0f b7 d7                              	movzx edx, di
0x14ae1:   bf 01 00 00 00                        	mov edi, 1
0x14ae6:   e8 c7 5a ff ff                        	call 0xa5b2 <cfg_access>
0x14aeb:   0f b6 f8                              	movzx edi, al
0x14aee:   e8 8d ca fe ff                        	call 0x1580 <NT_SUCCESS>
0x14af3:   84 c0                                 	test al, al
0x14af5:   0f 95 c0                              	setne al
0x14af8:   c9                                    	leave 
0x14af9:   c3                                    	ret 
; function: bTunerReset at 0x14afa -- 0x14b54
0x14afa:   55                                    	push rbp
0x14afb:   48 89 e5                              	mov rbp, rsp
0x14afe:   48 83 ec 30                           	sub rsp, 0x30
0x14b02:   48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x14b06:   4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x14b0a:   4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x14b0e:   4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x14b12:   e8 d9 a0 02 00                        	call 0x3ebf0 <mcount>
0x14b17:   41 89 fe                              	mov r14d, edi
0x14b1a:   41 89 f5                              	mov r13d, esi
0x14b1d:   48 89 d3                              	mov rbx, rdx
0x14b20:   4c 8d 65 d8                           	lea r12, [rbp - 0x28]
0x14b24:   48 89 d1                              	mov rcx, rdx
0x14b27:   4c 89 e2                              	mov rdx, r12
0x14b2a:   be 04 00 00 00                        	mov esi, 4
0x14b2f:   bf 88 08 00 00                        	mov edi, 0x888
0x14b34:   e8 91 ff ff ff                        	call 0x14aca <bTunerReset>
0x14b39:   41 80 fe 01                           	cmp r14b, 1
0x14b3d:   b8 00 01 00 00                        	mov eax, 0x100
0x14b42:   ba 01 00 00 00                        	mov edx, 1
0x14b47:   48 0f 44 c2                           	cmove rax, rdx
0x14b4b:   45 84 ed                              	test r13b, r13b
0x14b4e:   74 06                                 	je 0x14b56
0x14b50:   48 09 45 d8                           	or qword ptr [rbp - 0x28], rax
; function: bReadPcieCfgReg at 0x14b54 -- 0x14b84
0x14b54:   eb 07                                 	jmp 0x14b5d <bReadPcieCfgReg+0x9>
0x14b56:   48 f7 d0                              	not rax
0x14b59:   48 21 45 d8                           	and qword ptr [rbp - 0x28], rax
0x14b5d:   48 89 d9                              	mov rcx, rbx
0x14b60:   4c 89 e2                              	mov rdx, r12
0x14b63:   be 04 00 00 00                        	mov esi, 4
0x14b68:   bf 88 08 00 00                        	mov edi, 0x888
0x14b6d:   e8 28 ff ff ff                        	call 0x14a9a <bReadPcieReg>
0x14b72:   48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0x14b76:   4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0x14b7a:   4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0x14b7e:   4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x14b82:   c9                                    	leave 
0x14b83:   c3                                    	ret 
; function: bReadPcieCfgReg at 0x14b84 -- 0x14c5c
0x14b84:   55                                    	push rbp
0x14b85:   48 89 e5                              	mov rbp, rsp
0x14b88:   48 83 ec 30                           	sub rsp, 0x30
0x14b8c:   48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x14b90:   4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x14b94:   4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x14b98:   4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x14b9c:   e8 4f a0 02 00                        	call 0x3ebf0 <mcount>
0x14ba1:   49 89 d5                              	mov r13, rdx
0x14ba4:   49 89 cc                              	mov r12, rcx
0x14ba7:   89 f3                                 	mov ebx, esi
0x14ba9:   66 83 fe 08                           	cmp si, 8
0x14bad:   0f 85 c0 00 00 00                     	jne 0x14c73
0x14bb3:   48 85 d2                              	test rdx, rdx
0x14bb6:   0f 84 b7 00 00 00                     	je 0x14c73
0x14bbc:   80 3d 7d 86 01 00 01                  	cmp byte ptr [rip + 0x1867d], 1
0x14bc3:   0f 85 aa 00 00 00                     	jne 0x14c73
0x14bc9:   0f b7 ff                              	movzx edi, di
0x14bcc:   48 89 7d d8                           	mov qword ptr [rbp - 0x28], rdi
0x14bd0:   4c 8d 75 d8                           	lea r14, [rbp - 0x28]
0x14bd4:   4c 89 f2                              	mov rdx, r14
0x14bd7:   be 04 00 00 00                        	mov esi, 4
0x14bdc:   bf a4 08 00 00                        	mov edi, 0x8a4
0x14be1:   e8 b4 fe ff ff                        	call 0x14a9a <bReadPcieReg>
0x14be6:   48 c7 45 d8 10 00 00 00               	mov qword ptr [rbp - 0x28], 0x10
0x14bee:   4c 89 e1                              	mov rcx, r12
0x14bf1:   4c 89 f2                              	mov rdx, r14
0x14bf4:   be 04 00 00 00                        	mov esi, 4
0x14bf9:   bf a0 08 00 00                        	mov edi, 0x8a0
0x14bfe:   e8 97 fe ff ff                        	call 0x14a9a <bReadPcieReg>
0x14c03:   84 c0                                 	test al, al
0x14c05:   74 71                                 	je 0x14c78
0x14c07:   48 c7 45 d8 00 00 00 00               	mov qword ptr [rbp - 0x28], 0
0x14c0f:   4c 89 e1                              	mov rcx, r12
0x14c12:   4c 89 f2                              	mov rdx, r14
0x14c15:   be 04 00 00 00                        	mov esi, 4
0x14c1a:   bf a0 08 00 00                        	mov edi, 0x8a0
0x14c1f:   e8 a6 fe ff ff                        	call 0x14aca <bTunerReset>
0x14c24:   80 7d d8 00                           	cmp byte ptr [rbp - 0x28], 0
0x14c28:   79 43                                 	jns 0x14c6d
0x14c2a:   4c 89 e1                              	mov rcx, r12
0x14c2d:   4c 89 f2                              	mov rdx, r14
0x14c30:   be 04 00 00 00                        	mov esi, 4
0x14c35:   bf a8 08 00 00                        	mov edi, 0x8a8
0x14c3a:   e8 8b fe ff ff                        	call 0x14aca <bTunerReset>
0x14c3f:   0f b7 d3                              	movzx edx, bx
0x14c42:   48 8d 75 d8                           	lea rsi, [rbp - 0x28]
0x14c46:   4c 89 ef                              	mov rdi, r13
0x14c49:   e8 1a 9f 02 00                        	call 0x3eb68 <memcpy>
0x14c4e:   48 c7 45 d8 80 00 00 00               	mov qword ptr [rbp - 0x28], 0x80
0x14c56:   4c 89 e1                              	mov rcx, r12
0x14c59:   4c 89 f2                              	mov rdx, r14
; data inside code section at 0x14c5c -- 0x14c60
0x14c5c:   be 04 00 00                                        |....            |
; function: USB_IsHighSpeed at 0x14c60 -- 0x14c6d
0x14c60:   00 bf a0 08 00 00                     	add byte ptr [rdi + 0x8a0], bh
0x14c66:   e8 2f fe ff ff                        	call 0x14a9a <bReadPcieReg>
0x14c6b:   eb 0b                                 	jmp 0x14c78
; data inside code section at 0x14c6d -- 0x14c70
0x14c6d:   84 c0 75                                           |..u             |
; function: USB_IsPidNeedToKeep at 0x14c70 -- 0x14c8a
0x14c70:   96                                    	xchg eax, esi
0x14c71:   eb 05                                 	jmp 0x14c78 <USB_IsPidNeedToKeep+0x8>
0x14c73:   b8 00 00 00 00                        	mov eax, 0
0x14c78:   48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0x14c7c:   4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0x14c80:   4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0x14c84:   4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x14c88:   c9                                    	leave 
0x14c89:   c3                                    	ret 
; data inside code section at 0x14c8a -- 0x14c90
0x14c8a:   90 90 90 90 90 90                                  |......          |
; function: USB_IsHighSpeed at 0x14c90 -- 0x14ca0
0x14c90:   55                                    	push rbp
0x14c91:   48 89 e5                              	mov rbp, rsp
0x14c94:   e8 57 9f 02 00                        	call 0x3ebf0 <mcount>
0x14c99:   b8 01 00 00 00                        	mov eax, 1
0x14c9e:   c9                                    	leave 
0x14c9f:   c3                                    	ret 
; function: USB_IsPidNeedToKeep at 0x14ca0 -- 0x14d54
0x14ca0:   55                                    	push rbp
0x14ca1:   48 89 e5                              	mov rbp, rsp
0x14ca4:   e8 47 9f 02 00                        	call 0x3ebf0 <mcount>
0x14ca9:   40 0f b6 f6                           	movzx esi, sil
0x14cad:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14cb1:   48 c1 e0 04                           	shl rax, 4
0x14cb5:   48 8d 8c 07 e0 5b 00 00               	lea rcx, [rdi + rax + 0x5be0]
0x14cbd:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x14cc2:   48 85 c9                              	test rcx, rcx
0x14cc5:   0f 84 b0 00 00 00                     	je 0x14d7b
0x14ccb:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14ccf:   48 c1 e0 04                           	shl rax, 4
0x14cd3:   80 bc 07 e0 5b 00 00 00               	cmp byte ptr [rdi + rax + 0x5be0], 0
0x14cdb:   0f 84 87 00 00 00                     	je 0x14d68
0x14ce1:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x14ce6:   66 85 d2                              	test dx, dx
0x14ce9:   0f 88 8c 00 00 00                     	js 0x14d7b
0x14cef:   81 e2 ff 1f 00 00                     	and edx, 0x1fff
0x14cf5:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14cf9:   48 c1 e0 04                           	shl rax, 4
0x14cfd:   3b 94 07 e8 5b 00 00                  	cmp edx, dword ptr [rdi + rax + 0x5be8]
0x14d04:   72 69                                 	jb 0x14d6f
0x14d06:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14d0a:   48 c1 e0 04                           	shl rax, 4
0x14d0e:   3b 94 07 e4 5b 00 00                  	cmp edx, dword ptr [rdi + rax + 0x5be4]
0x14d15:   77 58                                 	ja 0x14d6f
0x14d17:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14d1b:   48 c1 e0 04                           	shl rax, 4
0x14d1f:   44 8b 84 07 6c 5c 00 00               	mov r8d, dword ptr [rdi + rax + 0x5c6c]
0x14d27:   45 85 c0                              	test r8d, r8d
0x14d2a:   74 4a                                 	je 0x14d76
0x14d2c:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14d30:   48 c1 e0 04                           	shl rax, 4
0x14d34:   39 94 07 ec 5b 00 00                  	cmp dword ptr [rdi + rax + 0x5bec], edx
0x14d3b:   74 2b                                 	je 0x14d68
0x14d3d:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14d41:   48 c1 e0 04                           	shl rax, 4
0x14d45:   48 8d 8c 07 f0 5b 00 00               	lea rcx, [rdi + rax + 0x5bf0]
0x14d4d:   b8 00 00 00 00                        	mov eax, 0
0x14d52:   eb 0a                                 	jmp 0x14d5e
; data inside code section at 0x14d54 -- 0x14d55
0x14d54:   8b                                                 |.               |
; function: USB_SetPidTable at 0x14d55 -- 0x14d85
0x14d55:   31 48 83                              	xor dword ptr [rax - 0x7d], ecx
0x14d58:   c1 04 39 d6                           	rol dword ptr [rcx + rdi], -0x2a
0x14d5c:   74 0a                                 	je 0x14d68 <USB_SetPidTable+0x13>
0x14d5e:   83 c0 01                              	add eax, 1
0x14d61:   44 39 c0                              	cmp eax, r8d
0x14d64:   72 ee                                 	jb 0x14d54
0x14d66:   eb 0e                                 	jmp 0x14d76 <USB_SetPidTable+0x21>
0x14d68:   b8 02 00 00 00                        	mov eax, 2
0x14d6d:   eb 0c                                 	jmp 0x14d7b <USB_SetPidTable+0x26>
0x14d6f:   b8 01 00 00 00                        	mov eax, 1
0x14d74:   eb 05                                 	jmp 0x14d7b <USB_SetPidTable+0x26>
0x14d76:   b8 fd ff ff ff                        	mov eax, 0xfffffffd
0x14d7b:   85 c0                                 	test eax, eax
0x14d7d:   0f 9f c0                              	setg al
0x14d80:   0f b6 c0                              	movzx eax, al
0x14d83:   c9                                    	leave 
0x14d84:   c3                                    	ret 
; function: USB_SetPidTable at 0x14d85 -- 0x14e1b
0x14d85:   55                                    	push rbp
0x14d86:   48 89 e5                              	mov rbp, rsp
0x14d89:   e8 62 9e 02 00                        	call 0x3ebf0 <mcount>
0x14d8e:   40 0f b6 f6                           	movzx esi, sil
0x14d92:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14d96:   48 c1 e0 04                           	shl rax, 4
0x14d9a:   48 8d 84 07 e0 5b 00 00               	lea rax, [rdi + rax + 0x5be0]
0x14da2:   48 85 c0                              	test rax, rax
0x14da5:   0f 84 80 00 00 00                     	je 0x14e2b
0x14dab:   44 0f b6 d1                           	movzx r10d, cl
0x14daf:   45 85 d2                              	test r10d, r10d
0x14db2:   7e 7e                                 	jle 0x14e32
0x14db4:   49 89 d0                              	mov r8, rdx
0x14db7:   b8 00 00 00 00                        	mov eax, 0
0x14dbc:   81 3a ff 1f 00 00                     	cmp dword ptr [rdx], 0x1fff
0x14dc2:   76 13                                 	jbe 0x14dd7 <USB_SetPidTable+0x52>
0x14dc4:   eb 65                                 	jmp 0x14e2b
0x14dc6:   45 8b 48 04                           	mov r9d, dword ptr [r8 + 4]
0x14dca:   49 83 c0 04                           	add r8, 4
0x14dce:   41 81 f9 ff 1f 00 00                  	cmp r9d, 0x1fff
0x14dd5:   77 54                                 	ja 0x14e2b
0x14dd7:   83 c0 01                              	add eax, 1
0x14dda:   44 39 d0                              	cmp eax, r10d
0x14ddd:   7c e7                                 	jl 0x14dc6 <USB_SetPidTable+0x41>
0x14ddf:   0f b6 c9                              	movzx ecx, cl
0x14de2:   48 8d 04 f5 00 00 00 00               	lea rax, [rsi*8]
0x14dea:   4c 8d 04 30                           	lea r8, [rax + rsi]
0x14dee:   49 c1 e0 04                           	shl r8, 4
0x14df2:   42 89 8c 07 6c 5c 00 00               	mov dword ptr [rdi + r8 + 0x5c6c], ecx
0x14dfa:   4a 8d b4 07 ec 5b 00 00               	lea rsi, [rdi + r8 + 0x5bec]
0x14e02:   83 e9 01                              	sub ecx, 1
0x14e05:   48 8d 3c 8d 04 00 00 00               	lea rdi, [rcx*4 + 4]
0x14e0d:   b8 00 00 00 00                        	mov eax, 0
0x14e12:   8b 0c 02                              	mov ecx, dword ptr [rdx + rax]
0x14e15:   89 0e                                 	mov dword ptr [rsi], ecx
0x14e17:   48 83 c0 04                           	add rax, 4
; function: USB_FilterReset at 0x14e1b -- 0x14e4b
0x14e1b:   48 83 c6 04                           	add rsi, 4
0x14e1f:   48 39 f8                              	cmp rax, rdi
0x14e22:   75 ee                                 	jne 0x14e12
0x14e24:   b8 01 00 00 00                        	mov eax, 1
0x14e29:   eb 05                                 	jmp 0x14e30 <USB_FilterReset+0x15>
0x14e2b:   b8 00 00 00 00                        	mov eax, 0
0x14e30:   c9                                    	leave 
0x14e31:   c3                                    	ret 
0x14e32:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14e36:   48 c1 e0 04                           	shl rax, 4
0x14e3a:   0f b6 c9                              	movzx ecx, cl
0x14e3d:   89 8c 07 6c 5c 00 00                  	mov dword ptr [rdi + rax + 0x5c6c], ecx
0x14e44:   b8 01 00 00 00                        	mov eax, 1
0x14e49:   eb e5                                 	jmp 0x14e30 <USB_FilterReset+0x15>
; function: USB_FilterReset at 0x14e4b -- 0x14e9b
0x14e4b:   55                                    	push rbp
0x14e4c:   48 89 e5                              	mov rbp, rsp
0x14e4f:   e8 9c 9d 02 00                        	call 0x3ebf0 <mcount>
0x14e54:   40 0f b6 f6                           	movzx esi, sil
0x14e58:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14e5c:   48 c1 e0 04                           	shl rax, 4
0x14e60:   48 8d 94 07 e0 5b 00 00               	lea rdx, [rdi + rax + 0x5be0]
0x14e68:   b8 00 00 00 00                        	mov eax, 0
0x14e6d:   48 85 d2                              	test rdx, rdx
0x14e70:   74 5b                                 	je 0x14ecd
0x14e72:   48 8d 04 f5 00 00 00 00               	lea rax, [rsi*8]
0x14e7a:   48 8d 14 30                           	lea rdx, [rax + rsi]
0x14e7e:   48 c1 e2 04                           	shl rdx, 4
0x14e82:   48 8d 14 17                           	lea rdx, [rdi + rdx]
0x14e86:   48 8d 8a e0 5b 00 00                  	lea rcx, [rdx + 0x5be0]
0x14e8d:   c7 41 08 00 00 00 00                  	mov dword ptr [rcx + 8], 0
0x14e94:   c7 41 04 00 00 00 00                  	mov dword ptr [rcx + 4], 0
; data inside code section at 0x14e9b -- 0x14e9f
0x14e9b:   c7 82 6c 5c                                        |..l\            |
; function: USB_FilterStart_Stop at 0x14e9f -- 0x14ecf
0x14e9f:   00 00                                 	add byte ptr [rax], al
0x14ea1:   00 00                                 	add byte ptr [rax], al
0x14ea3:   00 00                                 	add byte ptr [rax], al
0x14ea5:   48 01 f0                              	add rax, rsi
0x14ea8:   48 c1 e0 04                           	shl rax, 4
0x14eac:   48 8d 94 07 ec 5b 00 00               	lea rdx, [rdi + rax + 0x5bec]
0x14eb4:   b8 00 00 00 00                        	mov eax, 0
0x14eb9:   c7 02 00 00 00 00                     	mov dword ptr [rdx], 0
0x14ebf:   83 c0 01                              	add eax, 1
0x14ec2:   48 83 c2 04                           	add rdx, 4
0x14ec6:   83 f8 20                              	cmp eax, 0x20
0x14ec9:   75 ee                                 	jne 0x14eb9 <USB_FilterStart_Stop+0x1a>
0x14ecb:   b0 01                                 	mov al, 1
0x14ecd:   c9                                    	leave 
0x14ece:   c3                                    	ret 
; function: USB_FilterStart_Stop at 0x14ecf -- 0x14edc
0x14ecf:   55                                    	push rbp
0x14ed0:   48 89 e5                              	mov rbp, rsp
0x14ed3:   e8 18 9d 02 00                        	call 0x3ebf0 <mcount>
0x14ed8:   40 0f b6 f6                           	movzx esi, sil
; function: USB_FilterONOFF at 0x14edc -- 0x14f0c
0x14edc:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14ee0:   48 c1 e0 04                           	shl rax, 4
0x14ee4:   48 8d 8c 07 e0 5b 00 00               	lea rcx, [rdi + rax + 0x5be0]
0x14eec:   b8 00 00 00 00                        	mov eax, 0
0x14ef1:   48 85 c9                              	test rcx, rcx
0x14ef4:   74 14                                 	je 0x14f0a <USB_FilterONOFF+0x2e>
0x14ef6:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14efa:   48 c1 e0 04                           	shl rax, 4
0x14efe:   88 94 07 e0 5b 00 00                  	mov byte ptr [rdi + rax + 0x5be0], dl
0x14f05:   b8 01 00 00 00                        	mov eax, 1
0x14f0a:   c9                                    	leave 
0x14f0b:   c3                                    	ret 
; function: USB_FilterONOFF at 0x14f0c -- 0x14f19
0x14f0c:   55                                    	push rbp
0x14f0d:   48 89 e5                              	mov rbp, rsp
0x14f10:   e8 db 9c 02 00                        	call 0x3ebf0 <mcount>
0x14f15:   40 0f b6 f6                           	movzx esi, sil
; function: USB_FilterON_and_Start at 0x14f19 -- 0x14f49
0x14f19:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14f1d:   48 c1 e0 04                           	shl rax, 4
0x14f21:   48 8d 8c 07 e0 5b 00 00               	lea rcx, [rdi + rax + 0x5be0]
0x14f29:   b8 00 00 00 00                        	mov eax, 0
0x14f2e:   48 85 c9                              	test rcx, rcx
0x14f31:   74 14                                 	je 0x14f47 <USB_FilterON_and_Start+0x2e>
0x14f33:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14f37:   48 c1 e0 04                           	shl rax, 4
0x14f3b:   88 94 07 e0 5b 00 00                  	mov byte ptr [rdi + rax + 0x5be0], dl
0x14f42:   b8 01 00 00 00                        	mov eax, 1
0x14f47:   c9                                    	leave 
0x14f48:   c3                                    	ret 
; function: USB_FilterON_and_Start at 0x14f49 -- 0x14f56
0x14f49:   55                                    	push rbp
0x14f4a:   48 89 e5                              	mov rbp, rsp
0x14f4d:   e8 9e 9c 02 00                        	call 0x3ebf0 <mcount>
0x14f52:   40 0f b6 f6                           	movzx esi, sil
; data inside code section at 0x14f56 -- 0x14f57
0x14f56:   48                                                 |H               |
; function: USB_BulkStreamRead at 0x14f57 -- 0x14f6b
0x14f57:   8d 04 f6                              	lea eax, [rsi + rsi*8]
0x14f5a:   48 c1 e0 04                           	shl rax, 4
0x14f5e:   48 8d 94 07 e0 5b 00 00               	lea rdx, [rdi + rax + 0x5be0]
0x14f66:   b8 00 00 00 00                        	mov eax, 0
; function: USB_BulkStreamStop at 0x14f6b -- 0x14f87
0x14f6b:   48 85 d2                              	test rdx, rdx
0x14f6e:   74 15                                 	je 0x14f85 <USB_BulkStreamStop+0x1a>
0x14f70:   48 8d 04 f6                           	lea rax, [rsi + rsi*8]
0x14f74:   48 c1 e0 04                           	shl rax, 4
0x14f78:   c6 84 07 e0 5b 00 00 01               	mov byte ptr [rdi + rax + 0x5be0], 1
0x14f80:   b8 01 00 00 00                        	mov eax, 1
0x14f85:   c9                                    	leave 
0x14f86:   c3                                    	ret 
; function: USB_BulkStreamRead at 0x14f87 -- 0x14f9b
0x14f87:   55                                    	push rbp
0x14f88:   48 89 e5                              	mov rbp, rsp
0x14f8b:   e8 60 9c 02 00                        	call 0x3ebf0 <mcount>
0x14f90:   40 0f b6 f6                           	movzx esi, sil
0x14f94:   e8 dd 01 ff ff                        	call 0x5176 <iGetStreamData>
0x14f99:   c9                                    	leave 
0x14f9a:   c3                                    	ret 
; function: USB_BulkStreamStop at 0x14f9b -- 0x14fac
0x14f9b:   55                                    	push rbp
0x14f9c:   48 89 e5                              	mov rbp, rsp
0x14f9f:   48 83 ec 10                           	sub rsp, 0x10
0x14fa3:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x14fa7:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
; data inside code section at 0x14fac -- 0x14fae
0x14fac:   e8 3f                                              |.?              |
; function: USB_BulkStreamStart at 0x14fae -- 0x14fde
0x14fae:   9c                                    	pushfq 
0x14faf:   02 00                                 	add al, byte ptr [rax]
0x14fb1:   49 89 fc                              	mov r12, rdi
0x14fb4:   40 0f b6 de                           	movzx ebx, sil
0x14fb8:   89 de                                 	mov esi, ebx
0x14fba:   e8 b1 f0 fe ff                        	call 0x4070 <FUSBDTV_Cmd_I2CRead_NoWt>
0x14fbf:   89 de                                 	mov esi, ebx
0x14fc1:   4c 89 e7                              	mov rdi, r12
0x14fc4:   e8 c3 09 ff ff                        	call 0x598c <FUSBDTV_StopBulkStream>
0x14fc9:   48 83 f8 01                           	cmp rax, 1
0x14fcd:   0f 94 c0                              	sete al
0x14fd0:   0f b6 c0                              	movzx eax, al
0x14fd3:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x14fd7:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x14fdc:   c9                                    	leave 
0x14fdd:   c3                                    	ret 
; function: USB_BulkStreamStart at 0x14fde -- 0x1501e
0x14fde:   55                                    	push rbp
0x14fdf:   48 89 e5                              	mov rbp, rsp
0x14fe2:   48 83 ec 10                           	sub rsp, 0x10
0x14fe6:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x14fea:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x14fef:   e8 fc 9b 02 00                        	call 0x3ebf0 <mcount>
0x14ff4:   49 89 fc                              	mov r12, rdi
0x14ff7:   48 89 d0                              	mov rax, rdx
0x14ffa:   48 89 ca                              	mov rdx, rcx
0x14ffd:   4c 89 c1                              	mov rcx, r8
0x15000:   40 0f b6 de                           	movzx ebx, sil
0x15004:   49 89 c0                              	mov r8, rax
0x15007:   89 de                                 	mov esi, ebx
0x15009:   e8 26 0a ff ff                        	call 0x5a34 <FUSBDTV_StartBulkStream>
0x1500e:   48 89 c2                              	mov rdx, rax
0x15011:   b8 00 00 00 00                        	mov eax, 0
0x15016:   48 83 fa 01                           	cmp rdx, 1
0x1501a:   75 27                                 	jne 0x15043
0x1501c:   89 de                                 	mov esi, ebx
; function: USB_GetFilterStat at 0x1501e -- 0x1504c
0x1501e:   4c 89 e7                              	mov rdi, r12
0x15021:   e8 3a f0 fe ff                        	call 0x4060 <FUSBDTV_Cmd_GetDev_Speed>
0x15026:   48 89 c2                              	mov rdx, rax
0x15029:   b8 01 00 00 00                        	mov eax, 1
0x1502e:   48 83 fa 01                           	cmp rdx, 1
0x15032:   74 0f                                 	je 0x15043 <USB_GetFilterStat+0x25>
0x15034:   89 de                                 	mov esi, ebx
0x15036:   4c 89 e7                              	mov rdi, r12
0x15039:   e8 4e 09 ff ff                        	call 0x598c <FUSBDTV_StopBulkStream>
0x1503e:   b8 00 00 00 00                        	mov eax, 0
0x15043:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x15047:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
; function: USB_CF_Read at 0x1504c -- 0x1504e
0x1504c:   c9                                    	leave 
0x1504d:   c3                                    	ret 
; function: USB_GetFilterStat at 0x1504e -- 0x1507c
0x1504e:   55                                    	push rbp
0x1504f:   48 89 e5                              	mov rbp, rsp
0x15052:   48 83 ec 10                           	sub rsp, 0x10
0x15056:   e8 95 9b 02 00                        	call 0x3ebf0 <mcount>
0x1505b:   c6 45 ff 00                           	mov byte ptr [rbp - 1], 0
0x1505f:   40 0f b6 f6                           	movzx esi, sil
0x15063:   4c 8d 45 ff                           	lea r8, [rbp - 1]
0x15067:   b9 01 00 00 00                        	mov ecx, 1
0x1506c:   ba 40 00 00 00                        	mov edx, 0x40
0x15071:   e8 9a f0 fe ff                        	call 0x4110 <FUSBDTV_Cmd_EncWrite>
0x15076:   0f b6 45 ff                           	movzx eax, byte ptr [rbp - 1]
0x1507a:   c9                                    	leave 
0x1507b:   c3                                    	ret 
; function: USB_CF_Read at 0x1507c -- 0x150d7
0x1507c:   55                                    	push rbp
0x1507d:   48 89 e5                              	mov rbp, rsp
0x15080:   41 57                                 	push r15
0x15082:   41 56                                 	push r14
0x15084:   41 55                                 	push r13
0x15086:   41 54                                 	push r12
0x15088:   53                                    	push rbx
0x15089:   48 83 ec 18                           	sub rsp, 0x18
0x1508d:   e8 5e 9b 02 00                        	call 0x3ebf0 <mcount>
0x15092:   48 89 7d c8                           	mov qword ptr [rbp - 0x38], rdi
0x15096:   4d 89 c7                              	mov r15, r8
0x15099:   41 89 d5                              	mov r13d, edx
0x1509c:   44 0f b6 e1                           	movzx r12d, cl
0x150a0:   66 45 85 e4                           	test r12w, r12w
0x150a4:   74 4f                                 	je 0x150f5
0x150a6:   41 be 00 00 00 00                     	mov r14d, 0
0x150ac:   40 0f b6 f6                           	movzx esi, sil
0x150b0:   89 75 c4                              	mov dword ptr [rbp - 0x3c], esi
0x150b3:   66 41 83 fc 20                        	cmp r12w, 0x20
0x150b8:   bb 20 00 00 00                        	mov ebx, 0x20
0x150bd:   41 0f 46 dc                           	cmovbe ebx, r12d
0x150c1:   41 0f b7 c6                           	movzx eax, r14w
0x150c5:   0f b7 cb                              	movzx ecx, bx
0x150c8:   41 0f b6 d5                           	movzx edx, r13b
0x150cc:   4d 8d 04 07                           	lea r8, [r15 + rax]
0x150d0:   8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x150d3:   48 8b 7d c8                           	mov rdi, qword ptr [rbp - 0x38]
; data inside code section at 0x150d7 -- 0x150d9
0x150d7:   e8 34                                              |.4              |
; function: USB_I2C_Write at 0x150d9 -- 0x15109
; function: USB_I2C_Write at 0x15109 -- 0x15178
0x15109:   55                                    	push rbp
0x1510a:   48 89 e5                              	mov rbp, rsp
0x1510d:   e8 de 9a 02 00                        	call 0x3ebf0 <mcount>
0x15112:   41 80 f9 03                           	cmp r9b, 3
0x15116:   75 1f                                 	jne 0x15137 <USB_I2C_Write+0x2e>
0x15118:   41 0f b6 c0                           	movzx eax, r8b
0x1511c:   40 0f b6 f6                           	movzx esi, sil
0x15120:   41 b9 05 00 00 00                     	mov r9d, 5
0x15126:   49 89 c8                              	mov r8, rcx
0x15129:   89 c1                                 	mov ecx, eax
0x1512b:   ba ff 00 00 00                        	mov edx, 0xff
0x15130:   e8 99 0b ff ff                        	call 0x5cce <FPCIEDTV_Cmd_I2CWrite>
0x15135:   eb 68                                 	jmp 0x1519f
0x15137:   41 80 f9 04                           	cmp r9b, 4
0x1513b:   75 1d                                 	jne 0x1515a <USB_I2C_Write+0x51>
0x1513d:   41 0f b6 c0                           	movzx eax, r8b
0x15141:   0f b6 d2                              	movzx edx, dl
0x15144:   40 0f b6 f6                           	movzx esi, sil
0x15148:   41 b9 04 00 00 00                     	mov r9d, 4
0x1514e:   49 89 c8                              	mov r8, rcx
0x15151:   89 c1                                 	mov ecx, eax
0x15153:   e8 76 0b ff ff                        	call 0x5cce <FPCIEDTV_Cmd_I2CWrite>
0x15158:   eb 45                                 	jmp 0x1519f
0x1515a:   41 80 f9 02                           	cmp r9b, 2
0x1515e:   75 1f                                 	jne 0x1517f
0x15160:   41 0f b6 c0                           	movzx eax, r8b
0x15164:   40 0f b6 f6                           	movzx esi, sil
0x15168:   41 b9 01 00 00 00                     	mov r9d, 1
0x1516e:   49 89 c8                              	mov r8, rcx
0x15171:   89 c1                                 	mov ecx, eax
0x15173:   ba ff 00 00 00                        	mov edx, 0xff
; function: USB_I2C_Read at 0x15178 -- 0x151a8
0x15178:   e8 51 0b ff ff                        	call 0x5cce <FPCIEDTV_Cmd_I2CWrite>
0x1517d:   eb 20                                 	jmp 0x1519f <USB_I2C_Read+0x27>
0x1517f:   45 84 c9                              	test r9b, r9b
0x15182:   75 1b                                 	jne 0x1519f <USB_I2C_Read+0x27>
0x15184:   41 0f b6 c0                           	movzx eax, r8b
0x15188:   0f b6 d2                              	movzx edx, dl
0x1518b:   40 0f b6 f6                           	movzx esi, sil
0x1518f:   41 b9 03 00 00 00                     	mov r9d, 3
0x15195:   49 89 c8                              	mov r8, rcx
0x15198:   89 c1                                 	mov ecx, eax
0x1519a:   e8 2f 0b ff ff                        	call 0x5cce <FPCIEDTV_Cmd_I2CWrite>
0x1519f:   48 83 f8 01                           	cmp rax, 1
0x151a3:   0f 94 c0                              	sete al
0x151a6:   c9                                    	leave 
0x151a7:   c3                                    	ret 
; function: USB_I2C_Read at 0x151a8 -- 0x151f3
0x151a8:   55                                    	push rbp
0x151a9:   48 89 e5                              	mov rbp, rsp
0x151ac:   e8 3f 9a 02 00                        	call 0x3ebf0 <mcount>
0x151b1:   41 80 f9 01                           	cmp r9b, 1
0x151b5:   74 2b                                 	je 0x151e2 <USB_I2C_Read+0x3a>
0x151b7:   41 80 f9 01                           	cmp r9b, 1
0x151bb:   72 08                                 	jb 0x151c5 <USB_I2C_Read+0x1d>
0x151bd:   41 80 f9 02                           	cmp r9b, 2
0x151c1:   75 57                                 	jne 0x1521a
0x151c3:   eb 3a                                 	jmp 0x151ff
0x151c5:   41 0f b6 c0                           	movzx eax, r8b
0x151c9:   0f b6 d2                              	movzx edx, dl
0x151cc:   40 0f b6 f6                           	movzx esi, sil
0x151d0:   41 b9 03 00 00 00                     	mov r9d, 3
0x151d6:   49 89 c8                              	mov r8, rcx
0x151d9:   89 c1                                 	mov ecx, eax
0x151db:   e8 ba 0b ff ff                        	call 0x5d9a <FPCIEDTV_Cmd_I2CRead>
0x151e0:   eb 38                                 	jmp 0x1521a
0x151e2:   41 0f b6 c0                           	movzx eax, r8b
0x151e6:   0f b6 d2                              	movzx edx, dl
0x151e9:   40 0f b6 f6                           	movzx esi, sil
0x151ed:   41 b9 10 00 00 00                     	mov r9d, 0x10
; function: USB_I2C_WriteAndRead at 0x151f3 -- 0x15223
0x151f3:   49 89 c8                              	mov r8, rcx
0x151f6:   89 c1                                 	mov ecx, eax
0x151f8:   e8 9d 0b ff ff                        	call 0x5d9a <FPCIEDTV_Cmd_I2CRead>
0x151fd:   eb 1b                                 	jmp 0x1521a <USB_I2C_WriteAndRead+0x27>
0x151ff:   41 0f b6 c0                           	movzx eax, r8b
0x15203:   0f b6 d2                              	movzx edx, dl
0x15206:   40 0f b6 f6                           	movzx esi, sil
0x1520a:   41 b9 01 00 00 00                     	mov r9d, 1
0x15210:   49 89 c8                              	mov r8, rcx
0x15213:   89 c1                                 	mov ecx, eax
0x15215:   e8 80 0b ff ff                        	call 0x5d9a <FPCIEDTV_Cmd_I2CRead>
0x1521a:   48 83 f8 01                           	cmp rax, 1
0x1521e:   0f 94 c0                              	sete al
0x15221:   c9                                    	leave 
0x15222:   c3                                    	ret 
; function: USB_I2C_WriteAndRead at 0x15223 -- 0x152f4
0x15223:   55                                    	push rbp
0x15224:   48 89 e5                              	mov rbp, rsp
0x15227:   48 83 ec 40                           	sub rsp, 0x40
0x1522b:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x1522f:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x15233:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x15237:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1523b:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1523f:   e8 ac 99 02 00                        	call 0x3ebf0 <mcount>
0x15244:   49 89 fc                              	mov r12, rdi
0x15247:   48 89 d3                              	mov rbx, rdx
0x1524a:   4d 89 c6                              	mov r14, r8
0x1524d:   45 89 cd                              	mov r13d, r9d
0x15250:   0f b6 55 10                           	movzx edx, byte ptr [rbp + 0x10]
0x15254:   84 d2                                 	test dl, dl
0x15256:   75 45                                 	jne 0x1529d <USB_I2C_WriteAndRead+0x7a>
0x15258:   44 0f b6 fe                           	movzx r15d, sil
0x1525c:   41 b9 03 00 00 00                     	mov r9d, 3
0x15262:   44 0f b6 c1                           	movzx r8d, cl
0x15266:   48 89 d9                              	mov rcx, rbx
0x15269:   ba 00 00 00 00                        	mov edx, 0
0x1526e:   44 89 fe                              	mov esi, r15d
0x15271:   e8 93 fe ff ff                        	call 0x15109 <USB_I2C_Write>
0x15276:   3c 01                                 	cmp al, 1
0x15278:   0f 85 93 00 00 00                     	jne 0x15311
0x1527e:   41 b9 02 00 00 00                     	mov r9d, 2
0x15284:   45 0f b6 c5                           	movzx r8d, r13b
0x15288:   4c 89 f1                              	mov rcx, r14
0x1528b:   ba 00 00 00 00                        	mov edx, 0
0x15290:   44 89 fe                              	mov esi, r15d
0x15293:   4c 89 e7                              	mov rdi, r12
0x15296:   e8 0d ff ff ff                        	call 0x151a8 <USB_I2C_Read>
0x1529b:   eb 74                                 	jmp 0x15311
0x1529d:   b8 00 00 00 00                        	mov eax, 0
0x152a2:   80 fa 01                              	cmp dl, 1
0x152a5:   75 6a                                 	jne 0x15311
0x152a7:   4c 8d 7b 01                           	lea r15, [rbx + 1]
0x152ab:   40 0f b6 f6                           	movzx esi, sil
0x152af:   89 75 cc                              	mov dword ptr [rbp - 0x34], esi
0x152b2:   0f b6 13                              	movzx edx, byte ptr [rbx]
0x152b5:   41 b9 00 00 00 00                     	mov r9d, 0
0x152bb:   41 b8 02 00 00 00                     	mov r8d, 2
0x152c1:   4c 89 f9                              	mov rcx, r15
0x152c4:   e8 40 fe ff ff                        	call 0x15109 <USB_I2C_Write>
0x152c9:   3c 01                                 	cmp al, 1
0x152cb:   75 44                                 	jne 0x15311
0x152cd:   41 80 0f 01                           	or byte ptr [r15], 1
0x152d1:   41 b9 03 00 00 00                     	mov r9d, 3
0x152d7:   41 b8 02 00 00 00                     	mov r8d, 2
0x152dd:   48 89 d9                              	mov rcx, rbx
0x152e0:   ba 00 00 00 00                        	mov edx, 0
0x152e5:   8b 75 cc                              	mov esi, dword ptr [rbp - 0x34]
0x152e8:   4c 89 e7                              	mov rdi, r12
0x152eb:   e8 19 fe ff ff                        	call 0x15109 <USB_I2C_Write>
0x152f0:   3c 01                                 	cmp al, 1
0x152f2:   75 1d                                 	jne 0x15311
; data inside code section at 0x152f4 -- 0x152f7
0x152f4:   41 b9 02                                           |A..             |
; function: USB_CleanStreamBuffer at 0x152f7 -- 0x1530c
0x152f7:   00 00                                 	add byte ptr [rax], al
0x152f9:   00 45 0f                              	add byte ptr [rbp + 0xf], al
0x152fc:   b6 c5                                 	mov dh, 0xc5
0x152fe:   4c 89 f1                              	mov rcx, r14
0x15301:   ba 00 00 00 00                        	mov edx, 0
0x15306:   8b 75 cc                              	mov esi, dword ptr [rbp - 0x34]
0x15309:   4c 89 e7                              	mov rdi, r12
; data inside code section at 0x1530c -- 0x15310
0x1530c:   e8 97 fe ff                                        |....            |
; function: USB_CF_Write at 0x15310 -- 0x15327
0x15310:   ff 48 8b                              	dec dword ptr [rax - 0x75]
0x15313:   5d                                    	pop rbp
0x15314:   d8 4c 8b 65                           	fmul dword ptr [rbx + rcx*4 + 0x65]
0x15318:   e0 4c                                 	loopne 0x15366
0x1531a:   8b 6d e8                              	mov ebp, dword ptr [rbp - 0x18]
0x1531d:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x15321:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x15325:   c9                                    	leave 
0x15326:   c3                                    	ret 
; function: USB_CleanStreamBuffer at 0x15327 -- 0x15340
0x15327:   55                                    	push rbp
0x15328:   48 89 e5                              	mov rbp, rsp
0x1532b:   e8 c0 98 02 00                        	call 0x3ebf0 <mcount>
0x15330:   40 0f b6 f6                           	movzx esi, sil
0x15334:   e8 2b 01 ff ff                        	call 0x5464 <vCleanStreamBuffer>
0x15339:   b8 01 00 00 00                        	mov eax, 1
0x1533e:   c9                                    	leave 
0x1533f:   c3                                    	ret 
; function: USB_CF_Write at 0x15340 -- 0x1540b
0x15340:   55                                    	push rbp
0x15341:   48 89 e5                              	mov rbp, rsp
0x15344:   41 57                                 	push r15
0x15346:   41 56                                 	push r14
0x15348:   41 55                                 	push r13
0x1534a:   41 54                                 	push r12
0x1534c:   53                                    	push rbx
0x1534d:   48 83 ec 28                           	sub rsp, 0x28
0x15351:   e8 9a 98 02 00                        	call 0x3ebf0 <mcount>
0x15356:   48 89 7d c0                           	mov qword ptr [rbp - 0x40], rdi
0x1535a:   48 89 cb                              	mov rbx, rcx
0x1535d:   44 88 4d ce                           	mov byte ptr [rbp - 0x32], r9b
0x15361:   45 0f b6 f0                           	movzx r14d, r8b
; data inside code section at 0x15365 -- 0x15366
0x15365:   66                                                 |f               |
0x15366:   45 85 f6                              	test r14d, r14d
0x15369:   0f 84 bb 00 00 00                     	je 0x1542a
0x1536f:   88 55 cf                              	mov byte ptr [rbp - 0x31], dl
0x15372:   41 bf 00 00 00 00                     	mov r15d, 0
0x15378:   40 0f b6 f6                           	movzx esi, sil
0x1537c:   89 75 bc                              	mov dword ptr [rbp - 0x44], esi
0x1537f:   41 bc 00 00 00 00                     	mov r12d, 0
0x15385:   66 41 83 fe 03                        	cmp r14w, 3
0x1538a:   41 bd 03 00 00 00                     	mov r13d, 3
0x15390:   45 0f 46 ee                           	cmovbe r13d, r14d
0x15394:   80 7d ce 00                           	cmp byte ptr [rbp - 0x32], 0
0x15398:   74 4e                                 	je 0x153e8 <USB_CF_Write+0xa8>
0x1539a:   66 45 85 ed                           	test r13w, r13w
0x1539e:   74 66                                 	je 0x15406 <USB_CF_Write+0xc6>
0x153a0:   41 0f b7 c7                           	movzx eax, r15w
0x153a4:   41 8d 75 ff                           	lea esi, [r13 - 1]
0x153a8:   0f b7 f6                              	movzx esi, si
0x153ab:   8d 74 30 01                           	lea esi, [rax + rsi + 1]
0x153af:   ba 01 00 00 00                        	mov edx, 1
0x153b4:   48 63 c8                              	movsxd rcx, eax
0x153b7:   80 3c 0b 00                           	cmp byte ptr [rbx + rcx], 0
0x153bb:   41 0f 45 d4                           	cmovne edx, r12d
0x153bf:   83 c0 01                              	add eax, 1
0x153c2:   39 f0                                 	cmp eax, esi
0x153c4:   75 ee                                 	jne 0x153b4 <USB_CF_Write+0x74>
0x153c6:   84 d2                                 	test dl, dl
0x153c8:   75 3c                                 	jne 0x15406 <USB_CF_Write+0xc6>
0x153ca:   41 0f b7 c7                           	movzx eax, r15w
0x153ce:   41 0f b7 cd                           	movzx ecx, r13w
0x153d2:   0f b6 55 cf                           	movzx edx, byte ptr [rbp - 0x31]
0x153d6:   4c 8d 04 03                           	lea r8, [rbx + rax]
0x153da:   8b 75 bc                              	mov esi, dword ptr [rbp - 0x44]
0x153dd:   48 8b 7d c0                           	mov rdi, qword ptr [rbp - 0x40]
0x153e1:   e8 3a ed fe ff                        	call 0x4120 <FUSBDTV_Cmd_Simulation_Enable>
0x153e6:   eb 23                                 	jmp 0x1540b <USB_CF_Write+0xc6>
0x153e8:   41 0f b7 c7                           	movzx eax, r15w
0x153ec:   41 0f b7 cd                           	movzx ecx, r13w
0x153f0:   0f b6 55 cf                           	movzx edx, byte ptr [rbp - 0x31]
0x153f4:   4c 8d 04 03                           	lea r8, [rbx + rax]
0x153f8:   8b 75 bc                              	mov esi, dword ptr [rbp - 0x44]
0x153fb:   48 8b 7d c0                           	mov rdi, qword ptr [rbp - 0x40]
0x153ff:   e8 1c ed fe ff                        	call 0x4120 <FUSBDTV_Cmd_Simulation_Enable>
0x15404:   eb 05                                 	jmp 0x1540b
0x15406:   b8 01 00 00 00                        	mov eax, 1
; data inside code section at 0x1540b -- 0x1540e
0x1540b:   48 83 f8                                           |H..             |
; function: DelayMilliseconds_i2c at 0x1540e -- 0x15423
0x1540e:   01 75 12                              	add dword ptr [rbp + 0x12], esi
0x15411:   66 45 29 ee                           	sub r14w, r13w
0x15415:   74 13                                 	je 0x1542a
0x15417:   45 01 ef                              	add r15d, r13d
0x1541a:   44 00 6d cf                           	add byte ptr [rbp - 0x31], r13b
0x1541e:   e9 62 ff ff ff                        	jmp 0x15385
; data inside code section at 0x15423 -- 0x15425
0x15423:   b8 00                                              |..              |
; function: DelayMilliseconds at 0x15425 -- 0x15429
0x15425:   00 00                                 	add byte ptr [rax], al
0x15427:   00 eb                                 	add bl, ch
; data inside code section at 0x15429 -- 0x15435
0x15429:   05 b8 01 00 00 00 48 83  c4 28 5b 41               |......H..([A    |
; function: vUSB_Wait at 0x15435 -- 0x1543e
0x15435:   5c                                    	pop rsp
0x15436:   41 5d                                 	pop r13
0x15438:   41 5e                                 	pop r14
0x1543a:   41 5f                                 	pop r15
0x1543c:   c9                                    	leave 
0x1543d:   c3                                    	ret 
; function: DelayMilliseconds_i2c at 0x1543e -- 0x15447
0x1543e:   55                                    	push rbp
0x1543f:   48 89 e5                              	mov rbp, rsp
0x15442:   e8 a9 97 02 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x15447 -- 0x15448
0x15447:   8d                                                 |.               |
; function: private_data at 0x15448 -- 0x15455
0x15448:   3c bf                                 	cmp al, 0xbf
0x1544a:   01 ff                                 	add edi, edi
0x1544c:   89 ff                                 	mov edi, edi
0x1544e:   e8 ad 96 02 00                        	call 0x3eb00 <__udelay>
0x15453:   c9                                    	leave 
0x15454:   c3                                    	ret 
; function: DelayMilliseconds at 0x15455 -- 0x15465
0x15455:   55                                    	push rbp
0x15456:   48 89 e5                              	mov rbp, rsp
0x15459:   e8 92 97 02 00                        	call 0x3ebf0 <mcount>
0x1545e:   e8 2d 97 02 00                        	call 0x3eb90 <msleep_interruptible>
0x15463:   c9                                    	leave 
0x15464:   c3                                    	ret 
; function: vUSB_Wait at 0x15465 -- 0x15469
0x15465:   55                                    	push rbp
0x15466:   48 89 e5                              	mov rbp, rsp
; data inside code section at 0x15469 -- 0x1546c
0x15469:   e8 82 97                                           |...             |
; function: set_init_cbc_multi2 at 0x1546c -- 0x15475
0x1546c:   02 00                                 	add al, byte ptr [rax]
0x1546e:   e8 e2 ff ff ff                        	call 0x15455 <DelayMilliseconds>
0x15473:   c9                                    	leave 
0x15474:   c3                                    	ret 
; data inside code section at 0x15475 -- 0x15478
0x15475:   90 90 90                                           |...             |
; function: private_data at 0x15478 -- 0x1549c
0x15478:   55                                    	push rbp
0x15479:   48 89 e5                              	mov rbp, rsp
0x1547c:   e8 6f 97 02 00                        	call 0x3ebf0 <mcount>
0x15481:   48 85 ff                              	test rdi, rdi
0x15484:   74 0f                                 	je 0x15495 <private_data+0x1d>
0x15486:   48 8b 07                              	mov rax, qword ptr [rdi]
0x15489:   48 8d 90 84 00 00 00                  	lea rdx, [rax + 0x84]
0x15490:   48 39 d7                              	cmp rdi, rdx
0x15493:   74 05                                 	je 0x1549a <private_data+0x22>
0x15495:   b8 00 00 00 00                        	mov eax, 0
0x1549a:   c9                                    	leave 
0x1549b:   c3                                    	ret 
; function: set_init_cbc_multi2 at 0x1549c -- 0x154e4
0x1549c:   55                                    	push rbp
0x1549d:   48 89 e5                              	mov rbp, rsp
0x154a0:   53                                    	push rbx
0x154a1:   e8 4a 97 02 00                        	call 0x3ebf0 <mcount>
0x154a6:   48 89 f3                              	mov rbx, rsi
0x154a9:   e8 ca ff ff ff                        	call 0x15478 <private_data>
0x154ae:   48 85 c0                              	test rax, rax
0x154b1:   74 05                                 	je 0x154b8 <set_init_cbc_multi2+0x1c>
0x154b3:   48 85 db                              	test rbx, rbx
0x154b6:   75 07                                 	jne 0x154bf <set_init_cbc_multi2+0x23>
0x154b8:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x154bd:   eb 52                                 	jmp 0x15511
0x154bf:   0f b6 4b 03                           	movzx ecx, byte ptr [rbx + 3]
0x154c3:   0f b6 13                              	movzx edx, byte ptr [rbx]
0x154c6:   c1 e2 18                              	shl edx, 0x18
0x154c9:   09 ca                                 	or edx, ecx
0x154cb:   0f b6 4b 01                           	movzx ecx, byte ptr [rbx + 1]
0x154cf:   c1 e1 10                              	shl ecx, 0x10
0x154d2:   09 ca                                 	or edx, ecx
0x154d4:   0f b6 4b 02                           	movzx ecx, byte ptr [rbx + 2]
0x154d8:   c1 e1 08                              	shl ecx, 8
0x154db:   09 ca                                 	or edx, ecx
0x154dd:   89 50 04                              	mov dword ptr [rax + 4], edx
0x154e0:   48 83 c3 04                           	add rbx, 4
; function: set_system_key_multi2 at 0x154e4 -- 0x15514
0x154e4:   0f b6 4b 03                           	movzx ecx, byte ptr [rbx + 3]
0x154e8:   0f b6 13                              	movzx edx, byte ptr [rbx]
0x154eb:   c1 e2 18                              	shl edx, 0x18
0x154ee:   09 ca                                 	or edx, ecx
0x154f0:   0f b6 4b 01                           	movzx ecx, byte ptr [rbx + 1]
0x154f4:   c1 e1 10                              	shl ecx, 0x10
0x154f7:   09 ca                                 	or edx, ecx
0x154f9:   0f b6 4b 02                           	movzx ecx, byte ptr [rbx + 2]
0x154fd:   c1 e1 08                              	shl ecx, 8
0x15500:   09 ca                                 	or edx, ecx
0x15502:   89 50 08                              	mov dword ptr [rax + 8], edx
0x15505:   83 88 80 00 00 00 01                  	or dword ptr [rax + 0x80], 1
0x1550c:   b8 00 00 00 00                        	mov eax, 0
0x15511:   5b                                    	pop rbx
0x15512:   c9                                    	leave 
0x15513:   c3                                    	ret 
; function: set_system_key_multi2 at 0x15514 -- 0x1554b
0x15514:   55                                    	push rbp
0x15515:   48 89 e5                              	mov rbp, rsp
0x15518:   53                                    	push rbx
0x15519:   e8 d2 96 02 00                        	call 0x3ebf0 <mcount>
0x1551e:   48 89 f3                              	mov rbx, rsi
0x15521:   e8 52 ff ff ff                        	call 0x15478 <private_data>
0x15526:   48 85 c0                              	test rax, rax
0x15529:   74 0a                                 	je 0x15535 <set_system_key_multi2+0x21>
0x1552b:   ba 00 00 00 00                        	mov edx, 0
0x15530:   48 85 db                              	test rbx, rbx
0x15533:   75 07                                 	jne 0x1553c <set_system_key_multi2+0x28>
0x15535:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x1553a:   eb 3c                                 	jmp 0x15578
0x1553c:   0f b6 34 13                           	movzx esi, byte ptr [rbx + rdx]
0x15540:   c1 e6 18                              	shl esi, 0x18
0x15543:   0f b6 4c 13 01                        	movzx ecx, byte ptr [rbx + rdx + 1]
0x15548:   c1 e1 10                              	shl ecx, 0x10
; function: set_round_multi2 at 0x1554b -- 0x15573
0x1554b:   09 f1                                 	or ecx, esi
0x1554d:   0f b6 74 13 03                        	movzx esi, byte ptr [rbx + rdx + 3]
0x15552:   09 f1                                 	or ecx, esi
0x15554:   0f b6 74 13 02                        	movzx esi, byte ptr [rbx + rdx + 2]
0x15559:   c1 e6 08                              	shl esi, 8
0x1555c:   09 f1                                 	or ecx, esi
0x1555e:   89 4c 10 0c                           	mov dword ptr [rax + rdx + 0xc], ecx
0x15562:   48 83 c2 04                           	add rdx, 4
0x15566:   48 83 fa 20                           	cmp rdx, 0x20
0x1556a:   75 d0                                 	jne 0x1553c
0x1556c:   83 88 80 00 00 00 02                  	or dword ptr [rax + 0x80], 2
; data inside code section at 0x15573 -- 0x15574
0x15573:   b8                                                 |.               |
; function: add_ref_multi2 at 0x15574 -- 0x1557b
0x15574:   00 00                                 	add byte ptr [rax], al
0x15576:   00 00                                 	add byte ptr [rax], al
0x15578:   5b                                    	pop rbx
0x15579:   c9                                    	leave 
0x1557a:   c3                                    	ret 
; function: set_round_multi2 at 0x1557b -- 0x15597
0x1557b:   55                                    	push rbp
0x1557c:   48 89 e5                              	mov rbp, rsp
0x1557f:   53                                    	push rbx
0x15580:   e8 6b 96 02 00                        	call 0x3ebf0 <mcount>
0x15585:   89 f3                                 	mov ebx, esi
0x15587:   e8 ec fe ff ff                        	call 0x15478 <private_data>
0x1558c:   48 89 c2                              	mov rdx, rax
0x1558f:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x15594:   48 85 d2                              	test rdx, rdx
; data inside code section at 0x15597 -- 0x15598
0x15597:   74                                                 |t               |
; function: core_pi1 at 0x15598 -- 0x155a4
0x15598:   08 89 5a 7c b8 00                     	or byte ptr [rcx + 0xb87c5a], cl
0x1559e:   00 00                                 	add byte ptr [rax], al
0x155a0:   00 5b c9                              	add byte ptr [rbx - 0x37], bl
0x155a3:   c3                                    	ret 
; function: add_ref_multi2 at 0x155a4 -- 0x155ad
0x155a4:   55                                    	push rbp
0x155a5:   48 89 e5                              	mov rbp, rsp
0x155a8:   e8 43 96 02 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x155ad -- 0x155af
0x155ad:   e8 c6                                              |..              |
; function: core_pi2 at 0x155af -- 0x155b0
; data inside code section at 0x155b0 -- 0x155b2
0x155b0:   ff ff                                              |..              |
; function: function_155b2 at 0x155b2 -- 0x155c8
0x155b2:   ba ff ff ff ff                        	mov edx, 0xffffffff
0x155b7:   48 85 c0                              	test rax, rax
0x155ba:   74 08                                 	je 0x155c4 <function_155b2+0x12>
0x155bc:   83 00 01                              	add dword ptr [rax], 1
0x155bf:   ba 00 00 00 00                        	mov edx, 0
0x155c4:   89 d0                                 	mov eax, edx
0x155c6:   c9                                    	leave 
0x155c7:   c3                                    	ret 
; function: core_pi1 at 0x155c8 -- 0x155d7
0x155c8:   55                                    	push rbp
0x155c9:   48 89 e5                              	mov rbp, rsp
0x155cc:   e8 1f 96 02 00                        	call 0x3ebf0 <mcount>
0x155d1:   8b 06                                 	mov eax, dword ptr [rsi]
0x155d3:   89 07                                 	mov dword ptr [rdi], eax
0x155d5:   8b 06                                 	mov eax, dword ptr [rsi]
; function: core_pi3 at 0x155d7 -- 0x155df
0x155d7:   33 46 04                              	xor eax, dword ptr [rsi + 4]
0x155da:   89 47 04                              	mov dword ptr [rdi + 4], eax
0x155dd:   c9                                    	leave 
0x155de:   c3                                    	ret 
; function: core_pi2 at 0x155df -- 0x15607
0x155df:   55                                    	push rbp
0x155e0:   48 89 e5                              	mov rbp, rsp
0x155e3:   e8 08 96 02 00                        	call 0x3ebf0 <mcount>
0x155e8:   03 56 04                              	add edx, dword ptr [rsi + 4]
0x155eb:   89 d0                                 	mov eax, edx
0x155ed:   c1 c8 1f                              	ror eax, 0x1f
0x155f0:   8d 54 02 ff                           	lea edx, [rdx + rax - 1]
0x155f4:   89 d0                                 	mov eax, edx
0x155f6:   33 06                                 	xor eax, dword ptr [rsi]
0x155f8:   c1 ca 1c                              	ror edx, 0x1c
0x155fb:   31 c2                                 	xor edx, eax
0x155fd:   89 17                                 	mov dword ptr [rdi], edx
0x155ff:   8b 46 04                              	mov eax, dword ptr [rsi + 4]
0x15602:   89 47 04                              	mov dword ptr [rdi + 4], eax
0x15605:   c9                                    	leave 
0x15606:   c3                                    	ret 
; function: core_pi3 at 0x15607 -- 0x15614
0x15607:   55                                    	push rbp
0x15608:   48 89 e5                              	mov rbp, rsp
0x1560b:   e8 e0 95 02 00                        	call 0x3ebf0 <mcount>
0x15610:   8b 06                                 	mov eax, dword ptr [rsi]
0x15612:   01 c2                                 	add edx, eax
; data inside code section at 0x15614 -- 0x15615
0x15614:   41                                                 |A               |
; function: core_pi4 at 0x15615 -- 0x15636
0x15615:   89 d0                                 	mov eax, edx
0x15617:   41 c1 c8 1e                           	ror r8d, 0x1e
0x1561b:   42 8d 54 02 01                        	lea edx, [rdx + r8 + 1]
0x15620:   41 89 d0                              	mov r8d, edx
0x15623:   41 c1 c8 18                           	ror r8d, 0x18
0x15627:   44 31 c2                              	xor edx, r8d
0x1562a:   8d 0c 0a                              	lea ecx, [rdx + rcx]
0x1562d:   89 ca                                 	mov edx, ecx
0x1562f:   c1 ca 1f                              	ror edx, 0x1f
0x15632:   29 ca                                 	sub edx, ecx
0x15634:   89 07                                 	mov dword ptr [rdi], eax
; function: core_encrypt at 0x15636 -- 0x15645
0x15636:   09 d0                                 	or eax, edx
0x15638:   c1 ca 10                              	ror edx, 0x10
0x1563b:   31 d0                                 	xor eax, edx
0x1563d:   33 46 04                              	xor eax, dword ptr [rsi + 4]
0x15640:   89 47 04                              	mov dword ptr [rdi + 4], eax
0x15643:   c9                                    	leave 
0x15644:   c3                                    	ret 
; function: core_pi4 at 0x15645 -- 0x15666
0x15645:   55                                    	push rbp
0x15646:   48 89 e5                              	mov rbp, rsp
0x15649:   e8 a2 95 02 00                        	call 0x3ebf0 <mcount>
0x1564e:   03 56 04                              	add edx, dword ptr [rsi + 4]
0x15651:   89 d0                                 	mov eax, edx
0x15653:   c1 c8 1e                              	ror eax, 0x1e
0x15656:   8d 54 02 01                           	lea edx, [rdx + rax + 1]
0x1565a:   33 16                                 	xor edx, dword ptr [rsi]
0x1565c:   89 17                                 	mov dword ptr [rdi], edx
0x1565e:   8b 46 04                              	mov eax, dword ptr [rsi + 4]
0x15661:   89 47 04                              	mov dword ptr [rdi + 4], eax
0x15664:   c9                                    	leave 
0x15665:   c3                                    	ret 
; function: core_encrypt at 0x15666 -- 0x156a1
0x15666:   55                                    	push rbp
0x15667:   48 89 e5                              	mov rbp, rsp
0x1566a:   41 57                                 	push r15
0x1566c:   41 56                                 	push r14
0x1566e:   41 55                                 	push r13
0x15670:   41 54                                 	push r12
0x15672:   53                                    	push rbx
0x15673:   48 83 ec 18                           	sub rsp, 0x18
0x15677:   e8 74 95 02 00                        	call 0x3ebf0 <mcount>
0x1567c:   49 89 fd                              	mov r13, rdi
0x1567f:   48 89 d3                              	mov rbx, rdx
0x15682:   41 89 cf                              	mov r15d, ecx
0x15685:   8b 06                                 	mov eax, dword ptr [rsi]
0x15687:   89 07                                 	mov dword ptr [rdi], eax
0x15689:   8b 46 04                              	mov eax, dword ptr [rsi + 4]
0x1568c:   89 47 04                              	mov dword ptr [rdi + 4], eax
0x1568f:   85 c9                                 	test ecx, ecx
0x15691:   0f 8e 82 00 00 00                     	jle 0x15719
0x15697:   41 be 00 00 00 00                     	mov r14d, 0
0x1569d:   4c 8d 65 c0                           	lea r12, [rbp - 0x40]
; data inside code section at 0x156a1 -- 0x156f8
0x156a1:   4c 89 ee 4c 89 e7 e8 1c  ff ff ff 8b 13 4c 89 e6   |L..L.........L..|
0x156b1:   4c 89 ef e8 26 ff ff ff  8b 4b 08 8b 53 04 4c 89   |L...&....K..S.L.|
0x156c1:   ee 4c 89 e7 e8 3d ff ff  ff 8b 53 0c 4c 89 e6 4c   |.L...=....S.L..L|
0x156d1:   89 ef e8 6d ff ff ff 4c  89 ee 4c 89 e7 e8 e5 fe   |...m...L..L.....|
0x156e1:   ff ff 8b 53 10 4c 89 e6  4c 89 ef e8 ee fe ff ff   |...S.L..L.......|
0x156f1:   8b 4b 18 8b 53 14 4c                               |.K..S.L         |
; function: decrypt_multi2 at 0x156f8 -- 0x15728
0x156f8:   89 ee                                 	mov esi, ebp
0x156fa:   4c 89 e7                              	mov rdi, r12
0x156fd:   e8 05 ff ff ff                        	call 0x15607 <core_pi3>
0x15702:   8b 53 1c                              	mov edx, dword ptr [rbx + 0x1c]
0x15705:   4c 89 e6                              	mov rsi, r12
0x15708:   4c 89 ef                              	mov rdi, r13
0x1570b:   e8 35 ff ff ff                        	call 0x15645 <core_pi4>
0x15710:   41 83 c6 01                           	add r14d, 1
0x15714:   45 39 f7                              	cmp r15d, r14d
0x15717:   7f 88                                 	jg 0x156a1
0x15719:   48 83 c4 18                           	add rsp, 0x18
0x1571d:   5b                                    	pop rbx
0x1571e:   41 5c                                 	pop r12
0x15720:   41 5d                                 	pop r13
0x15722:   41 5e                                 	pop r14
0x15724:   41 5f                                 	pop r15
0x15726:   c9                                    	leave 
0x15727:   c3                                    	ret 
; function: decrypt_multi2 at 0x15728 -- 0x15a8b
0x15728:   55                                    	push rbp
0x15729:   48 89 e5                              	mov rbp, rsp
0x1572c:   41 57                                 	push r15
0x1572e:   41 56                                 	push r14
0x15730:   41 55                                 	push r13
0x15732:   41 54                                 	push r12
0x15734:   53                                    	push rbx
0x15735:   48 81 ec 88 00 00 00                  	sub rsp, 0x88
0x1573c:   e8 af 94 02 00                        	call 0x3ebf0 <mcount>
0x15741:   89 f3                                 	mov ebx, esi
0x15743:   48 89 55 90                           	mov qword ptr [rbp - 0x70], rdx
0x15747:   89 4d 9c                              	mov dword ptr [rbp - 0x64], ecx
0x1574a:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x15753:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x15757:   31 c0                                 	xor eax, eax
0x15759:   e8 1a fd ff ff                        	call 0x15478 <private_data>
0x1575e:   48 85 c0                              	test rax, rax
0x15761:   0f 84 24 03 00 00                     	je 0x15a8b <decrypt_multi2+0x361>
0x15767:   48 83 7d 90 00                        	cmp qword ptr [rbp - 0x70], 0
0x1576c:   0f 84 19 03 00 00                     	je 0x15a8b <decrypt_multi2+0x361>
0x15772:   83 7d 9c 00                           	cmp dword ptr [rbp - 0x64], 0
0x15776:   0f 8e 0f 03 00 00                     	jle 0x15a8b <decrypt_multi2+0x361>
0x1577c:   8b 88 80 00 00 00                     	mov ecx, dword ptr [rax + 0x80]
0x15782:   83 f9 07                              	cmp ecx, 7
0x15785:   74 27                                 	je 0x157ae <decrypt_multi2+0x86>
0x15787:   ba fd ff ff ff                        	mov edx, 0xfffffffd
0x1578c:   f6 c1 01                              	test cl, 1
0x1578f:   0f 84 02 03 00 00                     	je 0x15a97
0x15795:   ba fe ff ff ff                        	mov edx, 0xfffffffe
0x1579a:   f6 c1 02                              	test cl, 2
0x1579d:   0f 84 f4 02 00 00                     	je 0x15a97
0x157a3:   b2 fc                                 	mov dl, 0xfc
0x157a5:   f6 c1 04                              	test cl, 4
0x157a8:   0f 84 e9 02 00 00                     	je 0x15a97
0x157ae:   48 8d 50 5c                           	lea rdx, [rax + 0x5c]
0x157b2:   48 8d 48 3c                           	lea rcx, [rax + 0x3c]
0x157b6:   83 fb 02                              	cmp ebx, 2
0x157b9:   48 0f 45 d1                           	cmovne rdx, rcx
0x157bd:   48 89 95 68 ff ff ff                  	mov qword ptr [rbp - 0x98], rdx
0x157c4:   8b 50 04                              	mov edx, dword ptr [rax + 4]
0x157c7:   89 55 a0                              	mov dword ptr [rbp - 0x60], edx
0x157ca:   8b 50 08                              	mov edx, dword ptr [rax + 8]
0x157cd:   89 55 a4                              	mov dword ptr [rbp - 0x5c], edx
0x157d0:   48 8b 95 68 ff ff ff                  	mov rdx, qword ptr [rbp - 0x98]
0x157d7:   44 8b 2a                              	mov r13d, dword ptr [rdx]
0x157da:   8b 4a 08                              	mov ecx, dword ptr [rdx + 8]
0x157dd:   44 8b 62 04                           	mov r12d, dword ptr [rdx + 4]
0x157e1:   44 8b 5a 0c                           	mov r11d, dword ptr [rdx + 0xc]
0x157e5:   44 8b 52 10                           	mov r10d, dword ptr [rdx + 0x10]
0x157e9:   8b 5a 18                              	mov ebx, dword ptr [rdx + 0x18]
0x157ec:   89 9d 74 ff ff ff                     	mov dword ptr [rbp - 0x8c], ebx
0x157f2:   44 8b 4a 14                           	mov r9d, dword ptr [rdx + 0x14]
0x157f6:   44 8b 42 1c                           	mov r8d, dword ptr [rdx + 0x1c]
0x157fa:   8b 78 7c                              	mov edi, dword ptr [rax + 0x7c]
0x157fd:   48 8b 5d 90                           	mov rbx, qword ptr [rbp - 0x70]
0x15801:   83 7d 9c 07                           	cmp dword ptr [rbp - 0x64], 7
0x15805:   0f 8e 0c 02 00 00                     	jle 0x15a17 <decrypt_multi2+0x2ef>
0x1580b:   8b 55 9c                              	mov edx, dword ptr [rbp - 0x64]
0x1580e:   83 ea 08                              	sub edx, 8
0x15811:   c1 ea 03                              	shr edx, 3
0x15814:   89 95 64 ff ff ff                     	mov dword ptr [rbp - 0x9c], edx
0x1581a:   89 d2                                 	mov edx, edx
0x1581c:   48 89 95 58 ff ff ff                  	mov qword ptr [rbp - 0xa8], rdx
0x15823:   48 8d 5c d3 08                        	lea rbx, [rbx + rdx*8 + 8]
0x15828:   48 89 9d 78 ff ff ff                  	mov qword ptr [rbp - 0x88], rbx
0x1582f:   48 8b 75 90                           	mov rsi, qword ptr [rbp - 0x70]
0x15833:   89 cb                                 	mov ebx, ecx
0x15835:   48 89 85 50 ff ff ff                  	mov qword ptr [rbp - 0xb0], rax
0x1583c:   0f b6 16                              	movzx edx, byte ptr [rsi]
0x1583f:   c1 e2 18                              	shl edx, 0x18
0x15842:   0f b6 46 01                           	movzx eax, byte ptr [rsi + 1]
0x15846:   c1 e0 10                              	shl eax, 0x10
0x15849:   09 c2                                 	or edx, eax
0x1584b:   0f b6 46 03                           	movzx eax, byte ptr [rsi + 3]
0x1584f:   09 c2                                 	or edx, eax
0x15851:   0f b6 46 02                           	movzx eax, byte ptr [rsi + 2]
0x15855:   c1 e0 08                              	shl eax, 8
0x15858:   09 c2                                 	or edx, eax
0x1585a:   89 55 8c                              	mov dword ptr [rbp - 0x74], edx
0x1585d:   0f b6 56 04                           	movzx edx, byte ptr [rsi + 4]
0x15861:   c1 e2 18                              	shl edx, 0x18
0x15864:   0f b6 46 05                           	movzx eax, byte ptr [rsi + 5]
0x15868:   c1 e0 10                              	shl eax, 0x10
0x1586b:   09 c2                                 	or edx, eax
0x1586d:   0f b6 46 07                           	movzx eax, byte ptr [rsi + 7]
0x15871:   09 c2                                 	or edx, eax
0x15873:   0f b6 46 06                           	movzx eax, byte ptr [rsi + 6]
0x15877:   c1 e0 08                              	shl eax, 8
0x1587a:   09 c2                                 	or edx, eax
0x1587c:   89 55 98                              	mov dword ptr [rbp - 0x68], edx
0x1587f:   8b 45 8c                              	mov eax, dword ptr [rbp - 0x74]
0x15882:   89 45 b0                              	mov dword ptr [rbp - 0x50], eax
0x15885:   89 55 b4                              	mov dword ptr [rbp - 0x4c], edx
0x15888:   85 ff                                 	test edi, edi
0x1588a:   0f 84 f1 00 00 00                     	je 0x15981 <decrypt_multi2+0x259>
0x15890:   b9 00 00 00 00                        	mov ecx, 0
0x15895:   48 89 75 80                           	mov qword ptr [rbp - 0x80], rsi
0x15899:   8b b5 74 ff ff ff                     	mov esi, dword ptr [rbp - 0x8c]
0x1589f:   45 8d 34 10                           	lea r14d, [r8 + rdx]
0x158a3:   45 89 f7                              	mov r15d, r14d
0x158a6:   41 c1 cf 1e                           	ror r15d, 0x1e
0x158aa:   47 8d 74 3e 01                        	lea r14d, [r14 + r15 + 1]
0x158af:   44 31 f0                              	xor eax, r14d
0x158b2:   46 8d 34 08                           	lea r14d, [rax + r9]
0x158b6:   45 89 f7                              	mov r15d, r14d
0x158b9:   41 c1 cf 1e                           	ror r15d, 0x1e
0x158bd:   47 8d 74 3e 01                        	lea r14d, [r14 + r15 + 1]
0x158c2:   45 89 f7                              	mov r15d, r14d
0x158c5:   41 c1 cf 18                           	ror r15d, 0x18
0x158c9:   45 31 fe                              	xor r14d, r15d
0x158cc:   41 01 f6                              	add r14d, esi
0x158cf:   45 89 f7                              	mov r15d, r14d
0x158d2:   41 c1 cf 1f                           	ror r15d, 0x1f
0x158d6:   45 29 f7                              	sub r15d, r14d
0x158d9:   45 89 fe                              	mov r14d, r15d
0x158dc:   41 c1 ce 10                           	ror r14d, 0x10
0x158e0:   41 09 c7                              	or r15d, eax
0x158e3:   45 31 fe                              	xor r14d, r15d
0x158e6:   44 31 f2                              	xor edx, r14d
0x158e9:   46 8d 34 12                           	lea r14d, [rdx + r10]
0x158ed:   45 89 f7                              	mov r15d, r14d
0x158f0:   41 c1 cf 1f                           	ror r15d, 0x1f
0x158f4:   47 8d 74 3e ff                        	lea r14d, [r14 + r15 - 1]
0x158f9:   44 31 f0                              	xor eax, r14d
0x158fc:   41 c1 ce 1c                           	ror r14d, 0x1c
0x15900:   44 31 f0                              	xor eax, r14d
0x15903:   41 89 c6                              	mov r14d, eax
0x15906:   41 31 d6                              	xor r14d, edx
0x15909:   43 8d 14 1e                           	lea edx, [r14 + r11]
0x1590d:   41 89 d7                              	mov r15d, edx
0x15910:   41 c1 cf 1e                           	ror r15d, 0x1e
0x15914:   42 8d 54 3a 01                        	lea edx, [rdx + r15 + 1]
0x15919:   31 d0                                 	xor eax, edx
0x1591b:   42 8d 14 20                           	lea edx, [rax + r12]
0x1591f:   41 89 d7                              	mov r15d, edx
0x15922:   41 c1 cf 1e                           	ror r15d, 0x1e
0x15926:   42 8d 54 3a 01                        	lea edx, [rdx + r15 + 1]
0x1592b:   41 89 d7                              	mov r15d, edx
0x1592e:   41 c1 cf 18                           	ror r15d, 0x18
0x15932:   44 31 fa                              	xor edx, r15d
0x15935:   01 da                                 	add edx, ebx
0x15937:   41 89 d7                              	mov r15d, edx
0x1593a:   41 c1 cf 1f                           	ror r15d, 0x1f
0x1593e:   41 29 d7                              	sub r15d, edx
0x15941:   44 89 fa                              	mov edx, r15d
0x15944:   c1 ca 10                              	ror edx, 0x10
0x15947:   41 09 c7                              	or r15d, eax
0x1594a:   44 31 fa                              	xor edx, r15d
0x1594d:   44 31 f2                              	xor edx, r14d
0x15950:   46 8d 34 2a                           	lea r14d, [rdx + r13]
0x15954:   45 89 f7                              	mov r15d, r14d
0x15957:   41 c1 cf 1f                           	ror r15d, 0x1f
0x1595b:   47 8d 74 3e ff                        	lea r14d, [r14 + r15 - 1]
0x15960:   44 31 f0                              	xor eax, r14d
0x15963:   41 c1 ce 1c                           	ror r14d, 0x1c
0x15967:   44 31 f0                              	xor eax, r14d
0x1596a:   31 c2                                 	xor edx, eax
0x1596c:   83 c1 01                              	add ecx, 1
0x1596f:   39 cf                                 	cmp edi, ecx
0x15971:   0f 87 28 ff ff ff                     	ja 0x1589f <decrypt_multi2+0x177>
0x15977:   48 8b 75 80                           	mov rsi, qword ptr [rbp - 0x80]
0x1597b:   89 45 b0                              	mov dword ptr [rbp - 0x50], eax
0x1597e:   89 55 b4                              	mov dword ptr [rbp - 0x4c], edx
0x15981:   8b 45 a0                              	mov eax, dword ptr [rbp - 0x60]
0x15984:   33 45 b0                              	xor eax, dword ptr [rbp - 0x50]
0x15987:   89 45 b0                              	mov dword ptr [rbp - 0x50], eax
0x1598a:   8b 55 a4                              	mov edx, dword ptr [rbp - 0x5c]
0x1598d:   31 55 b4                              	xor dword ptr [rbp - 0x4c], edx
0x15990:   8b 55 8c                              	mov edx, dword ptr [rbp - 0x74]
0x15993:   89 55 a0                              	mov dword ptr [rbp - 0x60], edx
0x15996:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x15999:   89 4d a4                              	mov dword ptr [rbp - 0x5c], ecx
0x1599c:   c1 e8 18                              	shr eax, 0x18
0x1599f:   88 06                                 	mov byte ptr [rsi], al
0x159a1:   0f b7 45 b2                           	movzx eax, word ptr [rbp - 0x4e]
0x159a5:   88 46 01                              	mov byte ptr [rsi + 1], al
0x159a8:   8b 45 b0                              	mov eax, dword ptr [rbp - 0x50]
0x159ab:   c1 e8 08                              	shr eax, 8
0x159ae:   88 46 02                              	mov byte ptr [rsi + 2], al
0x159b1:   8b 45 b0                              	mov eax, dword ptr [rbp - 0x50]
0x159b4:   88 46 03                              	mov byte ptr [rsi + 3], al
0x159b7:   0f b6 45 b7                           	movzx eax, byte ptr [rbp - 0x49]
0x159bb:   88 46 04                              	mov byte ptr [rsi + 4], al
0x159be:   0f b7 45 b6                           	movzx eax, word ptr [rbp - 0x4a]
0x159c2:   88 46 05                              	mov byte ptr [rsi + 5], al
0x159c5:   8b 45 b4                              	mov eax, dword ptr [rbp - 0x4c]
0x159c8:   c1 e8 08                              	shr eax, 8
0x159cb:   88 46 06                              	mov byte ptr [rsi + 6], al
0x159ce:   8b 45 b4                              	mov eax, dword ptr [rbp - 0x4c]
0x159d1:   88 46 07                              	mov byte ptr [rsi + 7], al
0x159d4:   48 83 c6 08                           	add rsi, 8
0x159d8:   48 39 b5 78 ff ff ff                  	cmp qword ptr [rbp - 0x88], rsi
0x159df:   0f 85 57 fe ff ff                     	jne 0x1583c <decrypt_multi2+0x114>
0x159e5:   48 8b 85 50 ff ff ff                  	mov rax, qword ptr [rbp - 0xb0]
0x159ec:   8b 95 64 ff ff ff                     	mov edx, dword ptr [rbp - 0x9c]
0x159f2:   c1 e2 03                              	shl edx, 3
0x159f5:   f7 da                                 	neg edx
0x159f7:   8b 5d 9c                              	mov ebx, dword ptr [rbp - 0x64]
0x159fa:   8d 54 13 f8                           	lea edx, [rbx + rdx - 8]
0x159fe:   89 55 9c                              	mov dword ptr [rbp - 0x64], edx
0x15a01:   48 8b 95 58 ff ff ff                  	mov rdx, qword ptr [rbp - 0xa8]
0x15a08:   48 8b 4d 90                           	mov rcx, qword ptr [rbp - 0x70]
0x15a0c:   48 8d 5c d1 08                        	lea rbx, [rcx + rdx*8 + 8]
0x15a11:   83 7d 9c 00                           	cmp dword ptr [rbp - 0x64], 0
0x15a15:   7e 7b                                 	jle 0x15a92
0x15a17:   8b 48 7c                              	mov ecx, dword ptr [rax + 0x7c]
0x15a1a:   48 8d 75 a0                           	lea rsi, [rbp - 0x60]
0x15a1e:   48 8d 7d b0                           	lea rdi, [rbp - 0x50]
0x15a22:   48 8b 95 68 ff ff ff                  	mov rdx, qword ptr [rbp - 0x98]
0x15a29:   e8 38 fc ff ff                        	call 0x15666 <core_encrypt>
0x15a2e:   8b 45 b0                              	mov eax, dword ptr [rbp - 0x50]
0x15a31:   89 c2                                 	mov edx, eax
0x15a33:   c1 ea 18                              	shr edx, 0x18
0x15a36:   88 55 c0                              	mov byte ptr [rbp - 0x40], dl
0x15a39:   89 c2                                 	mov edx, eax
0x15a3b:   c1 ea 10                              	shr edx, 0x10
0x15a3e:   88 55 c1                              	mov byte ptr [rbp - 0x3f], dl
0x15a41:   89 c2                                 	mov edx, eax
0x15a43:   c1 ea 08                              	shr edx, 8
0x15a46:   88 55 c2                              	mov byte ptr [rbp - 0x3e], dl
0x15a49:   88 45 c3                              	mov byte ptr [rbp - 0x3d], al
0x15a4c:   8b 45 b4                              	mov eax, dword ptr [rbp - 0x4c]
0x15a4f:   89 c2                                 	mov edx, eax
0x15a51:   c1 ea 18                              	shr edx, 0x18
0x15a54:   88 55 c4                              	mov byte ptr [rbp - 0x3c], dl
0x15a57:   89 c2                                 	mov edx, eax
0x15a59:   c1 ea 10                              	shr edx, 0x10
0x15a5c:   88 55 c5                              	mov byte ptr [rbp - 0x3b], dl
0x15a5f:   89 c2                                 	mov edx, eax
0x15a61:   c1 ea 08                              	shr edx, 8
0x15a64:   88 55 c6                              	mov byte ptr [rbp - 0x3a], dl
0x15a67:   88 45 c7                              	mov byte ptr [rbp - 0x39], al
0x15a6a:   48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x15a6e:   48 89 d8                              	mov rax, rbx
0x15a71:   8b 75 9c                              	mov esi, dword ptr [rbp - 0x64]
0x15a74:   0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x15a77:   30 08                                 	xor byte ptr [rax], cl
0x15a79:   48 83 c0 01                           	add rax, 1
0x15a7d:   48 83 c2 01                           	add rdx, 1
0x15a81:   89 c1                                 	mov ecx, eax
0x15a83:   29 d9                                 	sub ecx, ebx
0x15a85:   39 ce                                 	cmp esi, ecx
0x15a87:   7f eb                                 	jg 0x15a74 <decrypt_multi2+0x34c>
0x15a89:   eb 07                                 	jmp 0x15a92
; data inside code section at 0x15a8b -- 0x15a8f
0x15a8b:   ba ff ff ff                                        |....            |
; function: encrypt_multi2 at 0x15a8f -- 0x15abf
; function: encrypt_multi2 at 0x15abf -- 0x15cdb
0x15abf:   55                                    	push rbp
0x15ac0:   48 89 e5                              	mov rbp, rsp
0x15ac3:   48 83 ec 70                           	sub rsp, 0x70
0x15ac7:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x15acb:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x15acf:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x15ad3:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x15ad7:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x15adb:   e8 10 91 02 00                        	call 0x3ebf0 <mcount>
0x15ae0:   89 f3                                 	mov ebx, esi
0x15ae2:   49 89 d6                              	mov r14, rdx
0x15ae5:   41 89 cd                              	mov r13d, ecx
0x15ae8:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x15af1:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x15af5:   31 c0                                 	xor eax, eax
0x15af7:   e8 7c f9 ff ff                        	call 0x15478 <private_data>
0x15afc:   49 89 c4                              	mov r12, rax
0x15aff:   48 85 c0                              	test rax, rax
0x15b02:   0f 84 ce 01 00 00                     	je 0x15cd6 <encrypt_multi2+0x217>
0x15b08:   4d 85 f6                              	test r14, r14
0x15b0b:   0f 84 c5 01 00 00                     	je 0x15cd6 <encrypt_multi2+0x217>
0x15b11:   45 85 ed                              	test r13d, r13d
0x15b14:   0f 8e bc 01 00 00                     	jle 0x15cd6 <encrypt_multi2+0x217>
0x15b1a:   8b 90 80 00 00 00                     	mov edx, dword ptr [rax + 0x80]
0x15b20:   83 fa 07                              	cmp edx, 7
0x15b23:   74 27                                 	je 0x15b4c <encrypt_multi2+0x8d>
0x15b25:   b8 fd ff ff ff                        	mov eax, 0xfffffffd
0x15b2a:   f6 c2 01                              	test dl, 1
0x15b2d:   0f 84 af 01 00 00                     	je 0x15ce2
0x15b33:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x15b38:   f6 c2 02                              	test dl, 2
0x15b3b:   0f 84 a1 01 00 00                     	je 0x15ce2
0x15b41:   b0 fc                                 	mov al, 0xfc
0x15b43:   f6 c2 04                              	test dl, 4
0x15b46:   0f 84 96 01 00 00                     	je 0x15ce2
0x15b4c:   49 8d 44 24 5c                        	lea rax, [r12 + 0x5c]
0x15b51:   49 8d 54 24 3c                        	lea rdx, [r12 + 0x3c]
0x15b56:   83 fb 02                              	cmp ebx, 2
0x15b59:   48 0f 45 c2                           	cmovne rax, rdx
0x15b5d:   48 89 45 98                           	mov qword ptr [rbp - 0x68], rax
0x15b61:   41 8b 44 24 04                        	mov eax, dword ptr [r12 + 4]
0x15b66:   89 45 a0                              	mov dword ptr [rbp - 0x60], eax
0x15b69:   41 8b 44 24 08                        	mov eax, dword ptr [r12 + 8]
0x15b6e:   89 45 a4                              	mov dword ptr [rbp - 0x5c], eax
0x15b71:   4c 89 f3                              	mov rbx, r14
0x15b74:   45 89 ef                              	mov r15d, r13d
0x15b77:   4c 89 75 90                           	mov qword ptr [rbp - 0x70], r14
0x15b7b:   41 83 fd 07                           	cmp r13d, 7
0x15b7f:   0f 8e d0 00 00 00                     	jle 0x15c55 <encrypt_multi2+0x196>
0x15b85:   0f b6 13                              	movzx edx, byte ptr [rbx]
0x15b88:   c1 e2 18                              	shl edx, 0x18
0x15b8b:   0f b6 43 01                           	movzx eax, byte ptr [rbx + 1]
0x15b8f:   c1 e0 10                              	shl eax, 0x10
0x15b92:   09 d0                                 	or eax, edx
0x15b94:   0f b6 53 03                           	movzx edx, byte ptr [rbx + 3]
0x15b98:   09 d0                                 	or eax, edx
0x15b9a:   0f b6 53 02                           	movzx edx, byte ptr [rbx + 2]
0x15b9e:   c1 e2 08                              	shl edx, 8
0x15ba1:   09 d0                                 	or eax, edx
0x15ba3:   89 45 b0                              	mov dword ptr [rbp - 0x50], eax
0x15ba6:   0f b6 4b 04                           	movzx ecx, byte ptr [rbx + 4]
0x15baa:   c1 e1 18                              	shl ecx, 0x18
0x15bad:   0f b6 53 05                           	movzx edx, byte ptr [rbx + 5]
0x15bb1:   c1 e2 10                              	shl edx, 0x10
0x15bb4:   09 ca                                 	or edx, ecx
0x15bb6:   0f b6 4b 07                           	movzx ecx, byte ptr [rbx + 7]
0x15bba:   09 ca                                 	or edx, ecx
0x15bbc:   0f b6 4b 06                           	movzx ecx, byte ptr [rbx + 6]
0x15bc0:   c1 e1 08                              	shl ecx, 8
0x15bc3:   09 ca                                 	or edx, ecx
0x15bc5:   33 45 a0                              	xor eax, dword ptr [rbp - 0x60]
0x15bc8:   89 45 b0                              	mov dword ptr [rbp - 0x50], eax
0x15bcb:   89 d0                                 	mov eax, edx
0x15bcd:   33 45 a4                              	xor eax, dword ptr [rbp - 0x5c]
0x15bd0:   89 45 b4                              	mov dword ptr [rbp - 0x4c], eax
0x15bd3:   41 8b 4c 24 7c                        	mov ecx, dword ptr [r12 + 0x7c]
0x15bd8:   48 8b 55 98                           	mov rdx, qword ptr [rbp - 0x68]
0x15bdc:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x15be0:   48 8d 7d a0                           	lea rdi, [rbp - 0x60]
0x15be4:   e8 7d fa ff ff                        	call 0x15666 <core_encrypt>
0x15be9:   8b 45 a0                              	mov eax, dword ptr [rbp - 0x60]
0x15bec:   89 c2                                 	mov edx, eax
0x15bee:   c1 ea 18                              	shr edx, 0x18
0x15bf1:   88 13                                 	mov byte ptr [rbx], dl
0x15bf3:   89 c2                                 	mov edx, eax
0x15bf5:   c1 ea 10                              	shr edx, 0x10
0x15bf8:   88 53 01                              	mov byte ptr [rbx + 1], dl
0x15bfb:   89 c2                                 	mov edx, eax
0x15bfd:   c1 ea 08                              	shr edx, 8
0x15c00:   88 53 02                              	mov byte ptr [rbx + 2], dl
0x15c03:   88 43 03                              	mov byte ptr [rbx + 3], al
0x15c06:   8b 45 a4                              	mov eax, dword ptr [rbp - 0x5c]
0x15c09:   89 c2                                 	mov edx, eax
0x15c0b:   c1 ea 18                              	shr edx, 0x18
0x15c0e:   88 53 04                              	mov byte ptr [rbx + 4], dl
0x15c11:   89 c2                                 	mov edx, eax
0x15c13:   c1 ea 10                              	shr edx, 0x10
0x15c16:   88 53 05                              	mov byte ptr [rbx + 5], dl
0x15c19:   89 c2                                 	mov edx, eax
0x15c1b:   c1 ea 08                              	shr edx, 8
0x15c1e:   88 53 06                              	mov byte ptr [rbx + 6], dl
0x15c21:   88 43 07                              	mov byte ptr [rbx + 7], al
0x15c24:   48 83 c3 08                           	add rbx, 8
0x15c28:   41 83 ef 08                           	sub r15d, 8
0x15c2c:   41 83 ff 07                           	cmp r15d, 7
0x15c30:   0f 8f 4f ff ff ff                     	jg 0x15b85 <encrypt_multi2+0xc6>
0x15c36:   41 83 ed 08                           	sub r13d, 8
0x15c3a:   44 89 e8                              	mov eax, r13d
0x15c3d:   c1 e8 03                              	shr eax, 3
0x15c40:   89 c0                                 	mov eax, eax
0x15c42:   49 8d 44 c6 08                        	lea rax, [r14 + rax*8 + 8]
0x15c47:   48 89 45 90                           	mov qword ptr [rbp - 0x70], rax
0x15c4b:   41 83 e5 07                           	and r13d, 7
0x15c4f:   0f 8e 88 00 00 00                     	jle 0x15cdd
0x15c55:   8b 45 a0                              	mov eax, dword ptr [rbp - 0x60]
0x15c58:   89 45 b0                              	mov dword ptr [rbp - 0x50], eax
0x15c5b:   8b 45 a4                              	mov eax, dword ptr [rbp - 0x5c]
0x15c5e:   89 45 b4                              	mov dword ptr [rbp - 0x4c], eax
0x15c61:   41 8b 4c 24 7c                        	mov ecx, dword ptr [r12 + 0x7c]
0x15c66:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x15c6a:   48 8d 7d a0                           	lea rdi, [rbp - 0x60]
0x15c6e:   48 8b 55 98                           	mov rdx, qword ptr [rbp - 0x68]
0x15c72:   e8 ef f9 ff ff                        	call 0x15666 <core_encrypt>
0x15c77:   8b 45 a0                              	mov eax, dword ptr [rbp - 0x60]
0x15c7a:   89 c2                                 	mov edx, eax
0x15c7c:   c1 ea 18                              	shr edx, 0x18
0x15c7f:   88 55 c0                              	mov byte ptr [rbp - 0x40], dl
0x15c82:   89 c2                                 	mov edx, eax
0x15c84:   c1 ea 10                              	shr edx, 0x10
0x15c87:   88 55 c1                              	mov byte ptr [rbp - 0x3f], dl
0x15c8a:   89 c2                                 	mov edx, eax
0x15c8c:   c1 ea 08                              	shr edx, 8
0x15c8f:   88 55 c2                              	mov byte ptr [rbp - 0x3e], dl
0x15c92:   88 45 c3                              	mov byte ptr [rbp - 0x3d], al
0x15c95:   8b 45 a4                              	mov eax, dword ptr [rbp - 0x5c]
0x15c98:   89 c2                                 	mov edx, eax
0x15c9a:   c1 ea 18                              	shr edx, 0x18
0x15c9d:   88 55 c4                              	mov byte ptr [rbp - 0x3c], dl
0x15ca0:   89 c2                                 	mov edx, eax
0x15ca2:   c1 ea 10                              	shr edx, 0x10
0x15ca5:   88 55 c5                              	mov byte ptr [rbp - 0x3b], dl
0x15ca8:   89 c2                                 	mov edx, eax
0x15caa:   c1 ea 08                              	shr edx, 8
0x15cad:   88 55 c6                              	mov byte ptr [rbp - 0x3a], dl
0x15cb0:   88 45 c7                              	mov byte ptr [rbp - 0x39], al
0x15cb3:   48 8b 5d 90                           	mov rbx, qword ptr [rbp - 0x70]
0x15cb7:   48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x15cbb:   48 89 d8                              	mov rax, rbx
0x15cbe:   0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x15cc1:   30 08                                 	xor byte ptr [rax], cl
0x15cc3:   48 83 c0 01                           	add rax, 1
0x15cc7:   48 83 c2 01                           	add rdx, 1
0x15ccb:   89 c1                                 	mov ecx, eax
0x15ccd:   29 d9                                 	sub ecx, ebx
0x15ccf:   41 39 cd                              	cmp r13d, ecx
0x15cd2:   7f ea                                 	jg 0x15cbe <encrypt_multi2+0x1ff>
0x15cd4:   eb 07                                 	jmp 0x15cdd
0x15cd6:   b8 ff ff ff ff                        	mov eax, 0xffffffff
; data inside code section at 0x15cdb -- 0x15cdc
0x15cdb:   eb                                                 |.               |
; function: core_schedule at 0x15cdc -- 0x15d0c
0x15cdc:   05 b8 00 00 00                        	add eax, 0xb8
0x15ce1:   00 48 8b                              	add byte ptr [rax - 0x75], cl
0x15ce4:   55                                    	push rbp
0x15ce5:   c8 65 48 33                           	enter 0x4865, 0x33
0x15ce9:   14 25                                 	adc al, 0x25
0x15ceb:   28 00                                 	sub byte ptr [rax], al
0x15ced:   00 00                                 	add byte ptr [rax], al
0x15cef:   74 05                                 	je 0x15cf6 <core_schedule+0x1a>
0x15cf1:   e8 b2 8e 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x15cf6:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x15cfa:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x15cfe:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x15d02:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x15d06:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x15d0a:   c9                                    	leave 
0x15d0b:   c3                                    	ret 
; function: core_schedule at 0x15d0c -- 0x15e0e
0x15d0c:   55                                    	push rbp
0x15d0d:   48 89 e5                              	mov rbp, rsp
0x15d10:   48 81 ec c0 00 00 00                  	sub rsp, 0xc0
0x15d17:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x15d1b:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x15d1f:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x15d23:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x15d27:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x15d2b:   e8 c0 8e 02 00                        	call 0x3ebf0 <mcount>
0x15d30:   49 89 fc                              	mov r12, rdi
0x15d33:   48 89 f3                              	mov rbx, rsi
0x15d36:   4c 8d 6d c0                           	lea r13, [rbp - 0x40]
0x15d3a:   48 89 d6                              	mov rsi, rdx
0x15d3d:   4c 89 ef                              	mov rdi, r13
0x15d40:   e8 83 f8 ff ff                        	call 0x155c8 <core_pi1>
0x15d45:   4c 8d 75 b0                           	lea r14, [rbp - 0x50]
0x15d49:   8b 13                                 	mov edx, dword ptr [rbx]
0x15d4b:   4c 89 ee                              	mov rsi, r13
0x15d4e:   4c 89 f7                              	mov rdi, r14
0x15d51:   e8 89 f8 ff ff                        	call 0x155df <core_pi2>
0x15d56:   8b 45 b0                              	mov eax, dword ptr [rbp - 0x50]
0x15d59:   41 89 04 24                           	mov dword ptr [r12], eax
0x15d5d:   8b 4b 08                              	mov ecx, dword ptr [rbx + 8]
0x15d60:   8b 53 04                              	mov edx, dword ptr [rbx + 4]
0x15d63:   4c 8d 7d a0                           	lea r15, [rbp - 0x60]
0x15d67:   4c 89 f6                              	mov rsi, r14
0x15d6a:   4c 89 ff                              	mov rdi, r15
0x15d6d:   e8 95 f8 ff ff                        	call 0x15607 <core_pi3>
0x15d72:   8b 45 a4                              	mov eax, dword ptr [rbp - 0x5c]
0x15d75:   41 89 44 24 04                        	mov dword ptr [r12 + 4], eax
0x15d7a:   8b 53 0c                              	mov edx, dword ptr [rbx + 0xc]
0x15d7d:   4c 8d 6d 90                           	lea r13, [rbp - 0x70]
0x15d81:   4c 89 fe                              	mov rsi, r15
0x15d84:   4c 89 ef                              	mov rdi, r13
0x15d87:   e8 b9 f8 ff ff                        	call 0x15645 <core_pi4>
0x15d8c:   8b 45 90                              	mov eax, dword ptr [rbp - 0x70]
0x15d8f:   41 89 44 24 08                        	mov dword ptr [r12 + 8], eax
0x15d94:   4c 8d 75 80                           	lea r14, [rbp - 0x80]
0x15d98:   4c 89 ee                              	mov rsi, r13
0x15d9b:   4c 89 f7                              	mov rdi, r14
0x15d9e:   e8 25 f8 ff ff                        	call 0x155c8 <core_pi1>
0x15da3:   8b 45 84                              	mov eax, dword ptr [rbp - 0x7c]
0x15da6:   41 89 44 24 0c                        	mov dword ptr [r12 + 0xc], eax
0x15dab:   8b 53 10                              	mov edx, dword ptr [rbx + 0x10]
0x15dae:   4c 8d ad 70 ff ff ff                  	lea r13, [rbp - 0x90]
0x15db5:   4c 89 f6                              	mov rsi, r14
0x15db8:   4c 89 ef                              	mov rdi, r13
0x15dbb:   e8 1f f8 ff ff                        	call 0x155df <core_pi2>
0x15dc0:   8b 85 70 ff ff ff                     	mov eax, dword ptr [rbp - 0x90]
0x15dc6:   41 89 44 24 10                        	mov dword ptr [r12 + 0x10], eax
0x15dcb:   8b 4b 18                              	mov ecx, dword ptr [rbx + 0x18]
0x15dce:   8b 53 14                              	mov edx, dword ptr [rbx + 0x14]
0x15dd1:   4c 8d b5 60 ff ff ff                  	lea r14, [rbp - 0xa0]
0x15dd8:   4c 89 ee                              	mov rsi, r13
0x15ddb:   4c 89 f7                              	mov rdi, r14
0x15dde:   e8 24 f8 ff ff                        	call 0x15607 <core_pi3>
0x15de3:   8b 85 64 ff ff ff                     	mov eax, dword ptr [rbp - 0x9c]
0x15de9:   41 89 44 24 14                        	mov dword ptr [r12 + 0x14], eax
0x15dee:   8b 53 1c                              	mov edx, dword ptr [rbx + 0x1c]
0x15df1:   48 8d 9d 50 ff ff ff                  	lea rbx, [rbp - 0xb0]
0x15df8:   4c 89 f6                              	mov rsi, r14
0x15dfb:   48 89 df                              	mov rdi, rbx
0x15dfe:   e8 42 f8 ff ff                        	call 0x15645 <core_pi4>
0x15e03:   8b 85 50 ff ff ff                     	mov eax, dword ptr [rbp - 0xb0]
0x15e09:   41 89 44 24 18                        	mov dword ptr [r12 + 0x18], eax
; function: set_scramble_key_multi2 at 0x15e0e -- 0x15e3e
0x15e0e:   48 8d bd 40 ff ff ff                  	lea rdi, [rbp - 0xc0]
0x15e15:   48 89 de                              	mov rsi, rbx
0x15e18:   e8 ab f7 ff ff                        	call 0x155c8 <core_pi1>
0x15e1d:   8b 85 44 ff ff ff                     	mov eax, dword ptr [rbp - 0xbc]
0x15e23:   41 89 44 24 1c                        	mov dword ptr [r12 + 0x1c], eax
0x15e28:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x15e2c:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x15e30:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x15e34:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x15e38:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x15e3c:   c9                                    	leave 
0x15e3d:   c3                                    	ret 
; function: set_scramble_key_multi2 at 0x15e3e -- 0x15f13
0x15e3e:   55                                    	push rbp
0x15e3f:   48 89 e5                              	mov rbp, rsp
0x15e42:   41 54                                 	push r12
0x15e44:   53                                    	push rbx
0x15e45:   e8 a6 8d 02 00                        	call 0x3ebf0 <mcount>
0x15e4a:   49 89 f4                              	mov r12, rsi
0x15e4d:   e8 26 f6 ff ff                        	call 0x15478 <private_data>
0x15e52:   48 89 c3                              	mov rbx, rax
0x15e55:   48 85 c0                              	test rax, rax
0x15e58:   74 05                                 	je 0x15e5f <set_scramble_key_multi2+0x21>
0x15e5a:   4d 85 e4                              	test r12, r12
0x15e5d:   75 0a                                 	jne 0x15e69 <set_scramble_key_multi2+0x2b>
0x15e5f:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x15e64:   e9 d6 00 00 00                        	jmp 0x15f3f
0x15e69:   41 0f b6 54 24 03                     	movzx edx, byte ptr [r12 + 3]
0x15e6f:   41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0x15e74:   c1 e0 18                              	shl eax, 0x18
0x15e77:   09 d0                                 	or eax, edx
0x15e79:   41 0f b6 54 24 01                     	movzx edx, byte ptr [r12 + 1]
0x15e7f:   c1 e2 10                              	shl edx, 0x10
0x15e82:   09 d0                                 	or eax, edx
0x15e84:   41 0f b6 54 24 02                     	movzx edx, byte ptr [r12 + 2]
0x15e8a:   c1 e2 08                              	shl edx, 8
0x15e8d:   09 d0                                 	or eax, edx
0x15e8f:   89 43 2c                              	mov dword ptr [rbx + 0x2c], eax
0x15e92:   49 8d 44 24 04                        	lea rax, [r12 + 4]
0x15e97:   0f b6 50 03                           	movzx edx, byte ptr [rax + 3]
0x15e9b:   0f b6 08                              	movzx ecx, byte ptr [rax]
0x15e9e:   c1 e1 18                              	shl ecx, 0x18
0x15ea1:   09 d1                                 	or ecx, edx
0x15ea3:   0f b6 50 01                           	movzx edx, byte ptr [rax + 1]
0x15ea7:   c1 e2 10                              	shl edx, 0x10
0x15eaa:   09 d1                                 	or ecx, edx
0x15eac:   0f b6 50 02                           	movzx edx, byte ptr [rax + 2]
0x15eb0:   c1 e2 08                              	shl edx, 8
0x15eb3:   89 c8                                 	mov eax, ecx
0x15eb5:   09 d0                                 	or eax, edx
0x15eb7:   89 43 30                              	mov dword ptr [rbx + 0x30], eax
0x15eba:   49 8d 44 24 08                        	lea rax, [r12 + 8]
0x15ebf:   0f b6 50 03                           	movzx edx, byte ptr [rax + 3]
0x15ec3:   0f b6 08                              	movzx ecx, byte ptr [rax]
0x15ec6:   c1 e1 18                              	shl ecx, 0x18
0x15ec9:   09 d1                                 	or ecx, edx
0x15ecb:   0f b6 50 01                           	movzx edx, byte ptr [rax + 1]
0x15ecf:   c1 e2 10                              	shl edx, 0x10
0x15ed2:   09 d1                                 	or ecx, edx
0x15ed4:   0f b6 50 02                           	movzx edx, byte ptr [rax + 2]
0x15ed8:   c1 e2 08                              	shl edx, 8
0x15edb:   89 c8                                 	mov eax, ecx
0x15edd:   09 d0                                 	or eax, edx
0x15edf:   89 43 34                              	mov dword ptr [rbx + 0x34], eax
0x15ee2:   49 83 c4 0c                           	add r12, 0xc ; "GNU"
0x15ee6:   41 0f b6 54 24 03                     	movzx edx, byte ptr [r12 + 3]
0x15eec:   41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0x15ef1:   c1 e0 18                              	shl eax, 0x18
0x15ef4:   09 d0                                 	or eax, edx
0x15ef6:   41 0f b6 54 24 01                     	movzx edx, byte ptr [r12 + 1]
0x15efc:   c1 e2 10                              	shl edx, 0x10
0x15eff:   09 d0                                 	or eax, edx
0x15f01:   41 0f b6 54 24 02                     	movzx edx, byte ptr [r12 + 2]
0x15f07:   c1 e2 08                              	shl edx, 8
0x15f0a:   09 d0                                 	or eax, edx
0x15f0c:   89 43 38                              	mov dword ptr [rbx + 0x38], eax
0x15f0f:   4c 8d 63 0c                           	lea r12, [rbx + 0xc]
; data inside code section at 0x15f13 -- 0x15f14
0x15f13:   48                                                 |H               |
; function: clear_scramble_key_multi2 at 0x15f14 -- 0x15f44
0x15f14:   8d 53 2c                              	lea edx, [rbx + 0x2c]
0x15f17:   48 8d 7b 3c                           	lea rdi, [rbx + 0x3c]
0x15f1b:   4c 89 e6                              	mov rsi, r12
0x15f1e:   e8 e9 fd ff ff                        	call 0x15d0c <core_schedule>
0x15f23:   48 8d 53 34                           	lea rdx, [rbx + 0x34]
0x15f27:   48 8d 7b 5c                           	lea rdi, [rbx + 0x5c]
0x15f2b:   4c 89 e6                              	mov rsi, r12
0x15f2e:   e8 d9 fd ff ff                        	call 0x15d0c <core_schedule>
0x15f33:   83 8b 80 00 00 00 04                  	or dword ptr [rbx + 0x80], 4
0x15f3a:   b8 00 00 00 00                        	mov eax, 0
0x15f3f:   5b                                    	pop rbx
0x15f40:   41 5c                                 	pop r12
0x15f42:   c9                                    	leave 
0x15f43:   c3                                    	ret 
; function: clear_scramble_key_multi2 at 0x15f44 -- 0x15f99
0x15f44:   55                                    	push rbp
0x15f45:   48 89 e5                              	mov rbp, rsp
0x15f48:   e8 a3 8c 02 00                        	call 0x3ebf0 <mcount>
0x15f4d:   e8 26 f5 ff ff                        	call 0x15478 <private_data>
0x15f52:   48 89 c2                              	mov rdx, rax
0x15f55:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x15f5a:   48 85 d2                              	test rdx, rdx
0x15f5d:   74 6b                                 	je 0x15fca
0x15f5f:   48 8d 42 2c                           	lea rax, [rdx + 0x2c]
0x15f63:   48 c7 00 00 00 00 00                  	mov qword ptr [rax], 0
0x15f6a:   48 c7 40 08 00 00 00 00               	mov qword ptr [rax + 8], 0
0x15f72:   48 8d 7a 3c                           	lea rdi, [rdx + 0x3c]
0x15f76:   be 40 00 00 00                        	mov esi, 0x40
0x15f7b:   b8 00 00 00 00                        	mov eax, 0
0x15f80:   40 f6 c7 04                           	test dil, 4
0x15f84:   74 09                                 	je 0x15f8f <clear_scramble_key_multi2+0x4b>
0x15f86:   89 07                                 	mov dword ptr [rdi], eax
0x15f88:   48 83 c7 04                           	add rdi, 4
0x15f8c:   83 ee 04                              	sub esi, 4
0x15f8f:   89 f1                                 	mov ecx, esi
0x15f91:   c1 e9 03                              	shr ecx, 3
0x15f94:   89 c9                                 	mov ecx, ecx
0x15f96:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
; data inside code section at 0x15f99 -- 0x15f9c
0x15f99:   40 f6 c6                                           |@..             |
; function: create_multi2 at 0x15f9c -- 0x15fcc
0x15f9c:   04 74                                 	add al, 0x74
; data inside code section at 0x15f9e -- 0x15fca
0x15f9e:   06 89 07 48 83 c7 04 89  f1 83 e1 02 85 c9 74 07   |...H..........t.|
0x15fae:   66 89 07 48 83 c7 02 83  e6 01 85 f6 74 02 88 07   |f..H........t...|
0x15fbe:   83 a2 80 00 00 00 fb b8  00 00 00 00               |............    |
0x15fca:   c9                                    	leave 
0x15fcb:   c3                                    	ret 
; function: create_multi2 at 0x15fcc -- 0x160e4
0x15fcc:   55                                    	push rbp
0x15fcd:   48 89 e5                              	mov rbp, rsp
0x15fd0:   48 83 ec 20                           	sub rsp, 0x20
0x15fd4:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x15fd8:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x15fdd:   4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x15fe2:   4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x15fe7:   e8 04 8c 02 00                        	call 0x3ebf0 <mcount>
0x15fec:   48 8b 1d 35 8d 02 00                  	mov rbx, qword ptr [rip + 0x28d35]
0x15ff3:   be 20 00 00 00                        	mov esi, 0x20
0x15ff8:   48 89 df                              	mov rdi, rbx
0x15ffb:   e8 30 8c 02 00                        	call 0x3ec30 <kmem_cache_alloc_notrace>
0x16000:   49 89 c4                              	mov r12, rax
0x16003:   48 89 df                              	mov rdi, rbx
0x16006:   e8 bd 8c 02 00                        	call 0x3ecc8 <slab_buffer_size>
0x1600b:   48 89 c3                              	mov rbx, rax
0x1600e:   49 c7 c5 00 00 00 00                  	mov r13, 0
0x16015:   83 3d 94 8c 02 00 00                  	cmp dword ptr [rip + 0x28c94], 0
0x1601c:   74 2d                                 	je 0x1604b <create_multi2+0x7f>
0x1601e:   4c 8b 35 a3 8c 02 00                  	mov r14, qword ptr [rip + 0x28ca3]
0x16025:   4d 85 f6                              	test r14, r14
0x16028:   74 21                                 	je 0x1604b <create_multi2+0x7f>
0x1602a:   41 b8 20 00 00 00                     	mov r8d, 0x20
0x16030:   48 89 d9                              	mov rcx, rbx
0x16033:   ba d4 00 00 00                        	mov edx, 0xd4
0x16038:   4c 89 e6                              	mov rsi, r12
0x1603b:   4c 89 ef                              	mov rdi, r13
0x1603e:   41 ff 16                              	call qword ptr [r14]
0x16041:   49 83 c6 08                           	add r14, 8
0x16045:   49 83 3e 00                           	cmp qword ptr [r14], 0
0x16049:   75 df                                 	jne 0x1602a <create_multi2+0x5e>
0x1604b:   b8 00 00 00 00                        	mov eax, 0
0x16050:   4d 85 e4                              	test r12, r12
0x16053:   0f 84 ab 00 00 00                     	je 0x16104
0x16059:   4c 89 e7                              	mov rdi, r12
0x1605c:   ba d4 00 00 00                        	mov edx, 0xd4
0x16061:   41 f6 c4 04                           	test r12b, 4
0x16065:   74 0b                                 	je 0x16072 <create_multi2+0xa6>
0x16067:   41 89 04 24                           	mov dword ptr [r12], eax
0x1606b:   48 83 c7 04                           	add rdi, 4
0x1606f:   83 ea 04                              	sub edx, 4
0x16072:   89 d1                                 	mov ecx, edx
0x16074:   c1 e9 03                              	shr ecx, 3
0x16077:   89 c9                                 	mov ecx, ecx
0x16079:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x1607c:   f6 c2 04                              	test dl, 4
0x1607f:   74 06                                 	je 0x16087 <create_multi2+0xbb>
0x16081:   89 07                                 	mov dword ptr [rdi], eax
0x16083:   48 83 c7 04                           	add rdi, 4
0x16087:   89 d1                                 	mov ecx, edx
0x16089:   83 e1 02                              	and ecx, 2
0x1608c:   85 c9                                 	test ecx, ecx
0x1608e:   74 07                                 	je 0x16097 <create_multi2+0xcb>
0x16090:   66 89 07                              	mov word ptr [rdi], ax
0x16093:   48 83 c7 02                           	add rdi, 2
0x16097:   83 e2 01                              	and edx, 1
0x1609a:   85 d2                                 	test edx, edx
0x1609c:   74 02                                 	je 0x160a0 <create_multi2+0xd4>
0x1609e:   88 07                                 	mov byte ptr [rdi], al
0x160a0:   49 8d 84 24 84 00 00 00               	lea rax, [r12 + 0x84]
0x160a8:   4c 89 20                              	mov qword ptr [rax], r12
0x160ab:   41 c7 04 24 01 00 00 00               	mov dword ptr [r12], 1
0x160b3:   41 c7 44 24 7c 04 00 00 00            	mov dword ptr [r12 + 0x7c], 4
0x160bc:   48 c7 40 08 00 00 00 00               	mov qword ptr [rax + 8], 0
0x160c4:   48 c7 40 10 00 00 00 00               	mov qword ptr [rax + 0x10], 0
0x160cc:   48 c7 40 18 00 00 00 00               	mov qword ptr [rax + 0x18], 0
0x160d4:   48 c7 40 20 00 00 00 00               	mov qword ptr [rax + 0x20], 0
0x160dc:   48 c7 40 28 00 00 00 00               	mov qword ptr [rax + 0x28], 0
; data inside code section at 0x160e4 -- 0x160e9
0x160e4:   48 c7 40 30 00                                     |H.@0.           |
; function: release_multi2 at 0x160e9 -- 0x1610d
0x160e9:   00 00                                 	add byte ptr [rax], al
0x160eb:   00 48 c7                              	add byte ptr [rax - 0x39], cl
0x160ee:   40 38 00                              	cmp byte ptr [rax], al
0x160f1:   00 00                                 	add byte ptr [rax], al
0x160f3:   00 48 c7                              	add byte ptr [rax - 0x39], cl
0x160f6:   40 40 00 00                           	add byte ptr [rax], al
0x160fa:   00 00                                 	add byte ptr [rax], al
0x160fc:   48 c7 40 48 00 00 00 00               	mov qword ptr [rax + 0x48], 0
0x16104:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x16108:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
; function: function_1610d at 0x1610d -- 0x16119
0x1610d:   4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x16112:   4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x16117:   c9                                    	leave 
0x16118:   c3                                    	ret 
; function: release_multi2 at 0x16119 -- 0x1611d
0x16119:   55                                    	push rbp
0x1611a:   48 89 e5                              	mov rbp, rsp
; data inside code section at 0x1611d -- 0x16120
0x1611d:   e8 ce 8a                                           |...             |
; function: TS_Reset at 0x16120 -- 0x16141
0x16120:   02 00                                 	add al, byte ptr [rax]
0x16122:   e8 51 f3 ff ff                        	call 0x15478 <private_data>
0x16127:   48 85 c0                              	test rax, rax
0x1612a:   74 13                                 	je 0x1613f <TS_Reset+0x1f>
0x1612c:   8b 10                                 	mov edx, dword ptr [rax]
0x1612e:   83 ea 01                              	sub edx, 1
0x16131:   89 10                                 	mov dword ptr [rax], edx
0x16133:   85 d2                                 	test edx, edx
0x16135:   75 08                                 	jne 0x1613f <TS_Reset+0x1f>
0x16137:   48 89 c7                              	mov rdi, rax
0x1613a:   e8 39 8a 02 00                        	call 0x3eb78 <kfree>
0x1613f:   c9                                    	leave 
0x16140:   c3                                    	ret 
; data inside code section at 0x16141 -- 0x1614e
0x16141:   90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: TS_Destroy at 0x1614e -- 0x16150
0x1614e:   90                                    	nop 
0x1614f:   90                                    	nop 
; function: TS_Reset at 0x16150 -- 0x1617e
0x16150:   55                                    	push rbp
0x16151:   48 89 e5                              	mov rbp, rsp
0x16154:   53                                    	push rbx
0x16155:   48 83 ec 08                           	sub rsp, 8
0x16159:   e8 92 8a 02 00                        	call 0x3ebf0 <mcount>
0x1615e:   48 85 ff                              	test rdi, rdi
0x16161:   74 14                                 	je 0x16177 <TS_Reset+0x27>
0x16163:   48 89 fb                              	mov rbx, rdi
0x16166:   80 7f 08 00                           	cmp byte ptr [rdi + 8], 0
0x1616a:   75 0b                                 	jne 0x16177 <TS_Reset+0x27>
0x1616c:   c6 47 08 01                           	mov byte ptr [rdi + 8], 1
0x16170:   ff 53 30                              	call qword ptr [rbx + 0x30]
0x16173:   c6 43 08 00                           	mov byte ptr [rbx + 8], 0
0x16177:   48 83 c4 08                           	add rsp, 8
0x1617b:   5b                                    	pop rbx
0x1617c:   c9                                    	leave 
0x1617d:   c3                                    	ret 
; function: TS_Destroy at 0x1617e -- 0x16183
0x1617e:   55                                    	push rbp
0x1617f:   48 89 e5                              	mov rbp, rsp
0x16182:   53                                    	push rbx
; data inside code section at 0x16183 -- 0x16184
0x16183:   48                                                 |H               |
; function: TS_GetBcasPtr at 0x16184 -- 0x1619f
0x16184:   83 ec 08                              	sub esp, 8
0x16187:   e8 64 8a 02 00                        	call 0x3ebf0 <mcount>
0x1618c:   48 85 ff                              	test rdi, rdi
0x1618f:   74 1c                                 	je 0x161ad
0x16191:   48 89 fb                              	mov rbx, rdi
0x16194:   ff 53 28                              	call qword ptr [rbx + 0x28]
0x16197:   48 85 c0                              	test rax, rax
0x1619a:   74 06                                 	je 0x161a2
0x1619c:   48 89 c7                              	mov rdi, rax
; function: TS_SetBcasCardID at 0x1619f -- 0x161b4
0x1619f:   ff 50 08                              	call qword ptr [rax + 8]
0x161a2:   48 85 db                              	test rbx, rbx
0x161a5:   74 06                                 	je 0x161ad <TS_SetBcasCardID+0xe>
0x161a7:   48 89 df                              	mov rdi, rbx
0x161aa:   ff 53 10                              	call qword ptr [rbx + 0x10]
0x161ad:   48 83 c4 08                           	add rsp, 8
0x161b1:   5b                                    	pop rbx
0x161b2:   c9                                    	leave 
0x161b3:   c3                                    	ret 
; function: TS_GetBcasPtr at 0x161b4 -- 0x161b5
0x161b4:   55                                    	push rbp
; function: TS_EnableProcProgramID at 0x161b5 -- 0x161cf
0x161b5:   48 89 e5                              	mov rbp, rsp
0x161b8:   e8 33 8a 02 00                        	call 0x3ebf0 <mcount>
0x161bd:   48 89 fa                              	mov rdx, rdi
0x161c0:   b8 00 00 00 00                        	mov eax, 0
0x161c5:   48 85 ff                              	test rdi, rdi
0x161c8:   74 03                                 	je 0x161cd <TS_EnableProcProgramID+0x18>
0x161ca:   ff 52 28                              	call qword ptr [rdx + 0x28]
0x161cd:   c9                                    	leave 
0x161ce:   c3                                    	ret 
; function: TS_SetBcasCardID at 0x161cf -- 0x161e0
0x161cf:   55                                    	push rbp
0x161d0:   48 89 e5                              	mov rbp, rsp
0x161d3:   e8 18 8a 02 00                        	call 0x3ebf0 <mcount>
0x161d8:   48 89 f8                              	mov rax, rdi
0x161db:   48 85 ff                              	test rdi, rdi
0x161de:   74 03                                 	je 0x161e3
; data inside code section at 0x161e0 -- 0x161e1
0x161e0:   ff                                                 |.               |
; function: TS_SetProgramID at 0x161e1 -- 0x161e5
0x161e1:   50                                    	push rax
0x161e2:   50                                    	push rax
0x161e3:   c9                                    	leave 
0x161e4:   c3                                    	ret 
; function: TS_EnableProcProgramID at 0x161e5 -- 0x161f9
0x161e5:   55                                    	push rbp
0x161e6:   48 89 e5                              	mov rbp, rsp
0x161e9:   e8 02 8a 02 00                        	call 0x3ebf0 <mcount>
0x161ee:   48 85 ff                              	test rdi, rdi
0x161f1:   74 1a                                 	je 0x1620d
0x161f3:   48 89 f8                              	mov rax, rdi
0x161f6:   40 84 f6                              	test sil, sil
; data inside code section at 0x161f9 -- 0x161fa
0x161f9:   74                                                 |t               |
; function: TS_GetTsProgramID at 0x161fa -- 0x16211
0x161fa:   0a be 01 00 00 00                     	or bh, byte ptr [rsi + 1]
0x16200:   ff 50 60                              	call qword ptr [rax + 0x60]
0x16203:   eb 08                                 	jmp 0x1620d <TS_GetTsProgramID+0x13>
0x16205:   be 00 00 00 00                        	mov esi, 0
0x1620a:   ff 50 60                              	call qword ptr [rax + 0x60]
0x1620d:   c9                                    	leave 
0x1620e:   66 90                                 	nop 
0x16210:   c3                                    	ret 
; function: TS_SetProgramID at 0x16211 -- 0x1622a
0x16211:   55                                    	push rbp
0x16212:   48 89 e5                              	mov rbp, rsp
0x16215:   e8 d6 89 02 00                        	call 0x3ebf0 <mcount>
0x1621a:   48 89 f8                              	mov rax, rdi
0x1621d:   48 85 ff                              	test rdi, rdi
0x16220:   74 06                                 	je 0x16228 <TS_SetProgramID+0x17>
0x16222:   0f b7 f6                              	movzx esi, si
0x16225:   ff 50 58                              	call qword ptr [rax + 0x58]
0x16228:   c9                                    	leave 
0x16229:   c3                                    	ret 
; function: TS_GetTsProgramID at 0x1622a -- 0x1622f
0x1622a:   55                                    	push rbp
0x1622b:   48 89 e5                              	mov rbp, rsp
0x1622e:   53                                    	push rbx
; data inside code section at 0x1622f -- 0x16231
0x1622f:   48 83                                              |H.              |
; function: TS_GetTsProgramID_Ex at 0x16231 -- 0x16257
0x16231:   ec                                    	in al, dx
0x16232:   18 e8                                 	sbb al, ch
0x16234:   b8 89 02 00 48                        	mov eax, 0x48000289
0x16239:   89 f8                                 	mov eax, edi
0x1623b:   48 89 d3                              	mov rbx, rdx
0x1623e:   48 85 ff                              	test rdi, rdi
0x16241:   74 17                                 	je 0x1625a
0x16243:   48 8d 55 ee                           	lea rdx, [rbp - 0x12]
0x16247:   40 0f b6 f6                           	movzx esi, sil
0x1624b:   ff 50 68                              	call qword ptr [rax + 0x68]
0x1624e:   48 85 db                              	test rbx, rbx
0x16251:   74 07                                 	je 0x1625a
0x16253:   0f b7 45 ee                           	movzx eax, word ptr [rbp - 0x12]
; data inside code section at 0x16257 -- 0x16259
0x16257:   66 89                                              |f.              |
; function: TS_SetIsStreamScramble at 0x16259 -- 0x16261
; function: TS_GetTsProgramID_Ex at 0x16261 -- 0x16272
0x16261:   55                                    	push rbp
0x16262:   48 89 e5                              	mov rbp, rsp
0x16265:   e8 86 89 02 00                        	call 0x3ebf0 <mcount>
0x1626a:   48 89 f8                              	mov rax, rdi
0x1626d:   48 85 ff                              	test rdi, rdi
0x16270:   74 10                                 	je 0x16282
; data inside code section at 0x16272 -- 0x16273
0x16272:   48                                                 |H               |
; function: TS_GetIsStreamScramble at 0x16273 -- 0x16289
0x16273:   85 f6                                 	test esi, esi
0x16275:   74 0b                                 	je 0x16282 <TS_GetIsStreamScramble+0xf>
0x16277:   ff 50 70                              	call qword ptr [rax + 0x70]
0x1627a:   66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x16280:   eb 05                                 	jmp 0x16287 <TS_GetIsStreamScramble+0x14>
0x16282:   b8 00 00 00 00                        	mov eax, 0
0x16287:   c9                                    	leave 
0x16288:   c3                                    	ret 
; function: TS_SetIsStreamScramble at 0x16289 -- 0x1628a
0x16289:   55                                    	push rbp
; data inside code section at 0x1628a -- 0x1628c
0x1628a:   48 89                                              |H.              |
; function: TS_SetBCASCardExist at 0x1628c -- 0x162a3
0x1628c:   e5 e8                                 	in eax, 0xe8
0x1628e:   5e                                    	pop rsi
0x1628f:   89 02                                 	mov dword ptr [rdx], eax
0x16291:   00 48 89                              	add byte ptr [rax - 0x77], cl
0x16294:   f8                                    	clc 
0x16295:   48 85 ff                              	test rdi, rdi
0x16298:   74 07                                 	je 0x162a1 <TS_SetBCASCardExist+0x15>
0x1629a:   40 0f b6 f6                           	movzx esi, sil
0x1629e:   ff 50 78                              	call qword ptr [rax + 0x78]
0x162a1:   c9                                    	leave 
0x162a2:   c3                                    	ret 
; function: TS_GetIsStreamScramble at 0x162a3 -- 0x162a7
0x162a3:   55                                    	push rbp
0x162a4:   48 89 e5                              	mov rbp, rsp
; data inside code section at 0x162a7 -- 0x162a9
0x162a7:   e8 44                                              |.D              |
; function: TS_GetResetMulti2LibFlag at 0x162a9 -- 0x162bc
0x162a9:   89 02                                 	mov dword ptr [rdx], eax
0x162ab:   00 48 89                              	add byte ptr [rax - 0x77], cl
0x162ae:   f8                                    	clc 
0x162af:   48 85 ff                              	test rdi, rdi
0x162b2:   74 06                                 	je 0x162ba <TS_GetResetMulti2LibFlag+0x11>
0x162b4:   ff 90 80 00 00 00                     	call qword ptr [rax + 0x80]
0x162ba:   c9                                    	leave 
0x162bb:   c3                                    	ret 
; function: TS_SetBCASCardExist at 0x162bc -- 0x162c0
0x162bc:   55                                    	push rbp
0x162bd:   48 89 e5                              	mov rbp, rsp
; data inside code section at 0x162c0 -- 0x162c2
0x162c0:   e8 2b                                              |.+              |
; function: TS_GetDigitalCopyControlDescriptor at 0x162c2 -- 0x162d9
0x162c2:   89 02                                 	mov dword ptr [rdx], eax
0x162c4:   00 48 89                              	add byte ptr [rax - 0x77], cl
0x162c7:   f8                                    	clc 
0x162c8:   48 85 ff                              	test rdi, rdi
0x162cb:   74 0a                                 	je 0x162d7 <TS_GetDigitalCopyControlDescriptor+0x15>
0x162cd:   40 0f b6 f6                           	movzx esi, sil
0x162d1:   ff 90 88 00 00 00                     	call qword ptr [rax + 0x88]
0x162d7:   c9                                    	leave 
0x162d8:   c3                                    	ret 
; function: TS_GetResetMulti2LibFlag at 0x162d9 -- 0x162f2
0x162d9:   55                                    	push rbp
0x162da:   48 89 e5                              	mov rbp, rsp
0x162dd:   e8 0e 89 02 00                        	call 0x3ebf0 <mcount>
0x162e2:   48 89 f8                              	mov rax, rdi
0x162e5:   48 85 ff                              	test rdi, rdi
0x162e8:   74 06                                 	je 0x162f0 <TS_GetResetMulti2LibFlag+0x17>
0x162ea:   ff 90 a0 00 00 00                     	call qword ptr [rax + 0xa0]
0x162f0:   c9                                    	leave 
0x162f1:   c3                                    	ret 
; function: TS_GetDigitalCopyControlDescriptor at 0x162f2 -- 0x16303
0x162f2:   55                                    	push rbp
0x162f3:   48 89 e5                              	mov rbp, rsp
0x162f6:   53                                    	push rbx
0x162f7:   48 83 ec 08                           	sub rsp, 8
0x162fb:   e8 f0 88 02 00                        	call 0x3ebf0 <mcount>
0x16300:   48 89 f8                              	mov rax, rdi
; function: TS_GetContentAvailabilityDescriptor at 0x16303 -- 0x16333
0x16303:   48 89 cb                              	mov rbx, rcx
0x16306:   66 c7 01 00 00                        	mov word ptr [rcx], 0
0x1630b:   48 85 ff                              	test rdi, rdi
0x1630e:   74 17                                 	je 0x16327 <TS_GetContentAvailabilityDescriptor+0x24>
0x16310:   0f b7 f6                              	movzx esi, si
0x16313:   ff 90 90 00 00 00                     	call qword ptr [rax + 0x90]
0x16319:   85 c0                                 	test eax, eax
0x1631b:   78 0a                                 	js 0x16327 <TS_GetContentAvailabilityDescriptor+0x24>
0x1631d:   66 89 03                              	mov word ptr [rbx], ax
0x16320:   b8 01 00 00 00                        	mov eax, 1
0x16325:   eb 05                                 	jmp 0x1632c <TS_GetContentAvailabilityDescriptor+0x29>
0x16327:   b8 00 00 00 00                        	mov eax, 0
0x1632c:   48 83 c4 08                           	add rsp, 8
0x16330:   5b                                    	pop rbx
0x16331:   c9                                    	leave 
0x16332:   c3                                    	ret 
; function: TS_GetContentAvailabilityDescriptor at 0x16333 -- 0x16344
0x16333:   55                                    	push rbp
0x16334:   48 89 e5                              	mov rbp, rsp
0x16337:   53                                    	push rbx
0x16338:   48 83 ec 08                           	sub rsp, 8
0x1633c:   e8 af 88 02 00                        	call 0x3ebf0 <mcount>
0x16341:   48 89 f8                              	mov rax, rdi
; function: TS_GetProgramNumber_ByPID at 0x16344 -- 0x1636d
0x16344:   48 89 cb                              	mov rbx, rcx
0x16347:   66 c7 01 00 00                        	mov word ptr [rcx], 0
0x1634c:   48 85 ff                              	test rdi, rdi
0x1634f:   74 17                                 	je 0x16368 <TS_GetProgramNumber_ByPID+0x24>
0x16351:   0f b7 f6                              	movzx esi, si
0x16354:   ff 90 98 00 00 00                     	call qword ptr [rax + 0x98]
0x1635a:   85 c0                                 	test eax, eax
0x1635c:   78 0a                                 	js 0x16368 <TS_GetProgramNumber_ByPID+0x24>
0x1635e:   66 89 03                              	mov word ptr [rbx], ax
0x16361:   b8 01 00 00 00                        	mov eax, 1
0x16366:   eb 05                                 	jmp 0x1636d
0x16368:   b8 00 00 00 00                        	mov eax, 0
; data inside code section at 0x1636d -- 0x16370
0x1636d:   48 83 c4                                           |H..             |
; function: TS_SetBCASResponse at 0x16370 -- 0x16374
0x16370:   08 5b c9                              	or byte ptr [rbx - 0x37], bl
0x16373:   c3                                    	ret 
; function: TS_GetProgramNumber_ByPID at 0x16374 -- 0x163a0
0x16374:   55                                    	push rbp
0x16375:   48 89 e5                              	mov rbp, rsp
0x16378:   e8 73 88 02 00                        	call 0x3ebf0 <mcount>
0x1637d:   48 89 f9                              	mov rcx, rdi
0x16380:   c7 02 00 00 00 00                     	mov dword ptr [rdx], 0
0x16386:   b8 00 00 00 00                        	mov eax, 0
0x1638b:   48 85 ff                              	test rdi, rdi
0x1638e:   74 0e                                 	je 0x1639e <TS_GetProgramNumber_ByPID+0x2a>
0x16390:   0f b7 f6                              	movzx esi, si
0x16393:   ff 91 a8 00 00 00                     	call qword ptr [rcx + 0xa8]
0x16399:   85 c0                                 	test eax, eax
0x1639b:   0f 9f c0                              	setg al
0x1639e:   c9                                    	leave 
0x1639f:   c3                                    	ret 
; function: TS_SetBCASResponse at 0x163a0 -- 0x16499
0x163a0:   55                                    	push rbp
0x163a1:   48 89 e5                              	mov rbp, rsp
0x163a4:   41 54                                 	push r12
0x163a6:   53                                    	push rbx
0x163a7:   e8 44 88 02 00                        	call 0x3ebf0 <mcount>
0x163ac:   41 89 f4                              	mov r12d, esi
0x163af:   48 85 c9                              	test rcx, rcx
0x163b2:   0f 84 0c 01 00 00                     	je 0x164c4
0x163b8:   81 fe fe 00 00 00                     	cmp esi, 0xfe
0x163be:   0f 87 00 01 00 00                     	ja 0x164c4
0x163c4:   48 8b 19                              	mov rbx, qword ptr [rcx]
0x163c7:   48 85 db                              	test rbx, rbx
0x163ca:   0f 84 f4 00 00 00                     	je 0x164c4
0x163d0:   f6 c2 01                              	test dl, 1
0x163d3:   0f 85 8e 00 00 00                     	jne 0x16467 <TS_SetBCASResponse+0xc7>
0x163d9:   48 8d 83 5e 02 00 00                  	lea rax, [rbx + 0x25e]
0x163e0:   89 f2                                 	mov edx, esi
0x163e2:   48 89 fe                              	mov rsi, rdi
0x163e5:   48 89 c7                              	mov rdi, rax
0x163e8:   e8 7b 87 02 00                        	call 0x3eb68 <memcpy>
0x163ed:   44 89 a3 60 04 00 00                  	mov dword ptr [rbx + 0x460], r12d
0x163f4:   41 83 fc 02                           	cmp r12d, 2
0x163f8:   0f 86 c6 00 00 00                     	jbe 0x164c4
0x163fe:   80 bb 5e 02 00 00 00                  	cmp byte ptr [rbx + 0x25e], 0
0x16405:   0f 85 b9 00 00 00                     	jne 0x164c4
0x1640b:   0f b6 83 62 02 00 00                  	movzx eax, byte ptr [rbx + 0x262]
0x16412:   c1 e0 08                              	shl eax, 8
0x16415:   0f b6 93 63 02 00 00                  	movzx edx, byte ptr [rbx + 0x263]
0x1641c:   09 d0                                 	or eax, edx
0x1641e:   66 3d 00 21                           	cmp ax, 0x2100
0x16422:   74 0c                                 	je 0x16430 <TS_SetBCASResponse+0x90>
0x16424:   66 3d 02 a1                           	cmp ax, 0xa102
0x16428:   74 06                                 	je 0x16430 <TS_SetBCASResponse+0x90>
0x1642a:   66 3d 07 a1                           	cmp ax, 0xa107
0x1642e:   75 0c                                 	jne 0x1643c <TS_SetBCASResponse+0x9c>
0x16430:   c6 83 5c 02 00 00 00                  	mov byte ptr [rbx + 0x25c], 0
0x16437:   e9 88 00 00 00                        	jmp 0x164c4
0x1643c:   66 3d 00 08                           	cmp ax, 0x800
0x16440:   74 15                                 	je 0x16457 <TS_SetBCASResponse+0xb7>
0x16442:   66 3d 00 04                           	cmp ax, 0x400
0x16446:   74 0f                                 	je 0x16457 <TS_SetBCASResponse+0xb7>
0x16448:   66 3d 00 02                           	cmp ax, 0x200
0x1644c:   74 09                                 	je 0x16457 <TS_SetBCASResponse+0xb7>
0x1644e:   c6 83 5d 02 00 00 00                  	mov byte ptr [rbx + 0x25d], 0
0x16455:   eb 07                                 	jmp 0x1645e <TS_SetBCASResponse+0xbe>
0x16457:   c6 83 5d 02 00 00 01                  	mov byte ptr [rbx + 0x25d], 1
0x1645e:   c6 83 5c 02 00 00 01                  	mov byte ptr [rbx + 0x25c], 1
0x16465:   eb 5d                                 	jmp 0x164c4
0x16467:   48 8d 43 56                           	lea rax, [rbx + 0x56]
0x1646b:   89 f2                                 	mov edx, esi
0x1646d:   48 89 fe                              	mov rsi, rdi
0x16470:   48 89 c7                              	mov rdi, rax
0x16473:   e8 f0 86 02 00                        	call 0x3eb68 <memcpy>
0x16478:   44 89 a3 58 02 00 00                  	mov dword ptr [rbx + 0x258], r12d
0x1647f:   48 8d 43 28                           	lea rax, [rbx + 0x28]
0x16483:   48 8d 53 66                           	lea rdx, [rbx + 0x66]
0x16487:   48 8b 0a                              	mov rcx, qword ptr [rdx]
0x1648a:   48 89 08                              	mov qword ptr [rax], rcx
0x1648d:   48 8b 4a 08                           	mov rcx, qword ptr [rdx + 8]
0x16491:   48 89 48 08                           	mov qword ptr [rax + 8], rcx
0x16495:   48 8b 4a 10                           	mov rcx, qword ptr [rdx + 0x10]
; function: TS_Process at 0x16499 -- 0x164c9
0x16499:   48 89 48 10                           	mov qword ptr [rax + 0x10], rcx
0x1649d:   48 8b 52 18                           	mov rdx, qword ptr [rdx + 0x18]
0x164a1:   48 89 50 18                           	mov qword ptr [rax + 0x18], rdx
0x164a5:   48 8b 83 86 00 00 00                  	mov rax, qword ptr [rbx + 0x86]
0x164ac:   48 89 43 48                           	mov qword ptr [rbx + 0x48], rax
0x164b0:   0f b6 53 59                           	movzx edx, byte ptr [rbx + 0x59]
0x164b4:   0f b6 43 58                           	movzx eax, byte ptr [rbx + 0x58]
0x164b8:   c1 e0 08                              	shl eax, 8
0x164bb:   09 d0                                 	or eax, edx
0x164bd:   89 43 50                              	mov dword ptr [rbx + 0x50], eax
0x164c0:   c6 43 54 01                           	mov byte ptr [rbx + 0x54], 1
0x164c4:   5b                                    	pop rbx
0x164c5:   41 5c                                 	pop r12
0x164c7:   c9                                    	leave 
0x164c8:   c3                                    	ret 
; function: TS_Process at 0x164c9 -- 0x16511
0x164c9:   55                                    	push rbp
0x164ca:   48 89 e5                              	mov rbp, rsp
0x164cd:   48 83 ec 40                           	sub rsp, 0x40
0x164d1:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x164d5:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x164d9:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x164dd:   e8 0e 87 02 00                        	call 0x3ebf0 <mcount>
0x164e2:   49 89 f4                              	mov r12, rsi
0x164e5:   89 d0                                 	mov eax, edx
0x164e7:   48 85 ff                              	test rdi, rdi
0x164ea:   74 49                                 	je 0x16535
0x164ec:   48 89 fb                              	mov rbx, rdi
0x164ef:   48 89 75 d0                           	mov qword ptr [rbp - 0x30], rsi
0x164f3:   41 89 d5                              	mov r13d, edx
0x164f6:   89 55 d8                              	mov dword ptr [rbp - 0x28], edx
0x164f9:   80 7f 08 00                           	cmp byte ptr [rdi + 8], 0
0x164fd:   75 36                                 	jne 0x16535
0x164ff:   c6 47 08 01                           	mov byte ptr [rdi + 8], 1
0x16503:   48 8d 75 d0                           	lea rsi, [rbp - 0x30]
0x16507:   ff 53 40                              	call qword ptr [rbx + 0x40]
0x1650a:   48 8d 75 c0                           	lea rsi, [rbp - 0x40]
0x1650e:   48 89 df                              	mov rdi, rbx
; data inside code section at 0x16511 -- 0x16513
0x16511:   ff 53                                              |.S              |
; function: TS_Init at 0x16513 -- 0x16543
0x16513:   48 c6 43 08 00                        	mov byte ptr [rbx + 8], 0
0x16518:   44 3b 6d c8                           	cmp r13d, dword ptr [rbp - 0x38]
0x1651c:   7d 04                                 	jge 0x16522 <TS_Init+0xf>
0x1651e:   44 89 6d c8                           	mov dword ptr [rbp - 0x38], r13d
0x16522:   48 63 55 c8                           	movsxd rdx, dword ptr [rbp - 0x38]
0x16526:   48 8b 75 c0                           	mov rsi, qword ptr [rbp - 0x40]
0x1652a:   4c 89 e7                              	mov rdi, r12
0x1652d:   e8 36 86 02 00                        	call 0x3eb68 <memcpy>
0x16532:   8b 45 c8                              	mov eax, dword ptr [rbp - 0x38]
0x16535:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x16539:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x1653d:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x16541:   c9                                    	leave 
0x16542:   c3                                    	ret 
; function: TS_Init at 0x16543 -- 0x165ce
0x16543:   55                                    	push rbp
0x16544:   48 89 e5                              	mov rbp, rsp
0x16547:   48 83 ec 20                           	sub rsp, 0x20
0x1654b:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x1654f:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x16554:   4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x16559:   4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x1655e:   e8 8d 86 02 00                        	call 0x3ebf0 <mcount>
0x16563:   49 89 fd                              	mov r13, rdi
0x16566:   49 89 f4                              	mov r12, rsi
0x16569:   41 89 d6                              	mov r14d, edx
0x1656c:   b8 00 00 00 00                        	mov eax, 0
0x16571:   e8 8a 2f 00 00                        	call 0x19500 <create_arib_std_b25>
0x16576:   48 89 c3                              	mov rbx, rax
0x16579:   48 85 c0                              	test rax, rax
0x1657c:   74 4b                                 	je 0x165c9 <TS_Init+0x86>
0x1657e:   be 04 00 00 00                        	mov esi, 4
0x16583:   48 89 c7                              	mov rdi, rax
0x16586:   ff 50 18                              	call qword ptr [rax + 0x18]
0x16589:   85 c0                                 	test eax, eax
0x1658b:   78 3c                                 	js 0x165c9 <TS_Init+0x86>
0x1658d:   4c 89 e6                              	mov rsi, r12
0x16590:   4c 89 ef                              	mov rdi, r13
0x16593:   e8 1b 77 00 00                        	call 0x1dcb3 <create_b_cas_card>
0x16598:   49 89 c4                              	mov r12, rax
0x1659b:   48 85 c0                              	test rax, rax
0x1659e:   74 29                                 	je 0x165c9 <TS_Init+0x86>
0x165a0:   45 0f b6 f6                           	movzx r14d, r14b
0x165a4:   44 89 b0 7c 01 00 00                  	mov dword ptr [rax + 0x17c], r14d
0x165ab:   48 89 c7                              	mov rdi, rax
0x165ae:   ff 50 10                              	call qword ptr [rax + 0x10]
0x165b1:   85 c0                                 	test eax, eax
0x165b3:   78 40                                 	js 0x165f5
0x165b5:   4c 89 e6                              	mov rsi, r12
0x165b8:   48 89 df                              	mov rdi, rbx
0x165bb:   ff 53 20                              	call qword ptr [rbx + 0x20]
0x165be:   89 c2                                 	mov edx, eax
0x165c0:   48 89 d8                              	mov rax, rbx
0x165c3:   85 d2                                 	test edx, edx
0x165c5:   79 19                                 	jns 0x165e0
0x165c7:   eb 2c                                 	jmp 0x165f5
0x165c9:   48 85 db                              	test rbx, rbx
0x165cc:   75 07                                 	jne 0x165d5
; data inside code section at 0x165ce -- 0x165d0
0x165ce:   b8 00                                              |..              |
; function: rijndaelKeySetupEnc at 0x165d0 -- 0x165ff
0x165d0:   00 00                                 	add byte ptr [rax], al
0x165d2:   00 eb                                 	add bl, ch
0x165d4:   0b 48 89                              	or ecx, dword ptr [rax - 0x77]
; data inside code section at 0x165d7 -- 0x165d8
0x165d7:   df                                                 |.               |
0x165d8:   ff 53 10                              	call qword ptr [rbx + 0x10]
0x165db:   b8 00 00 00 00                        	mov eax, 0
0x165e0:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x165e4:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x165e9:   4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x165ee:   4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x165f3:   c9                                    	leave 
0x165f4:   c3                                    	ret 
0x165f5:   4c 89 e7                              	mov rdi, r12
0x165f8:   41 ff 54 24 08                        	call qword ptr [r12 + 8]
0x165fd:   eb d6                                 	jmp 0x165d5
; data inside code section at 0x165ff -- 0x16600
0x165ff:   90                                                 |.               |
; function: rijndaelKeySetupEnc at 0x16600 -- 0x1698c
0x16600:   55                                    	push rbp
0x16601:   48 89 e5                              	mov rbp, rsp
0x16604:   e8 e7 85 02 00                        	call 0x3ebf0 <mcount>
0x16609:   44 0f b6 46 03                        	movzx r8d, byte ptr [rsi + 3]
0x1660e:   0f b6 06                              	movzx eax, byte ptr [rsi]
0x16611:   c1 e0 18                              	shl eax, 0x18
0x16614:   44 31 c0                              	xor eax, r8d
0x16617:   44 0f b6 46 01                        	movzx r8d, byte ptr [rsi + 1]
0x1661c:   41 c1 e0 10                           	shl r8d, 0x10
0x16620:   44 31 c0                              	xor eax, r8d
0x16623:   44 0f b6 46 02                        	movzx r8d, byte ptr [rsi + 2]
0x16628:   41 c1 e0 08                           	shl r8d, 8
0x1662c:   44 31 c0                              	xor eax, r8d
0x1662f:   89 07                                 	mov dword ptr [rdi], eax
0x16631:   44 0f b6 46 04                        	movzx r8d, byte ptr [rsi + 4]
0x16636:   41 c1 e0 18                           	shl r8d, 0x18
0x1663a:   0f b6 46 05                           	movzx eax, byte ptr [rsi + 5]
0x1663e:   c1 e0 10                              	shl eax, 0x10
0x16641:   44 31 c0                              	xor eax, r8d
0x16644:   44 0f b6 46 07                        	movzx r8d, byte ptr [rsi + 7]
0x16649:   44 31 c0                              	xor eax, r8d
0x1664c:   44 0f b6 46 06                        	movzx r8d, byte ptr [rsi + 6]
0x16651:   41 c1 e0 08                           	shl r8d, 8
0x16655:   44 31 c0                              	xor eax, r8d
0x16658:   89 47 04                              	mov dword ptr [rdi + 4], eax
0x1665b:   44 0f b6 46 08                        	movzx r8d, byte ptr [rsi + 8]
0x16660:   41 c1 e0 18                           	shl r8d, 0x18
0x16664:   0f b6 46 09                           	movzx eax, byte ptr [rsi + 9]
0x16668:   c1 e0 10                              	shl eax, 0x10
0x1666b:   44 31 c0                              	xor eax, r8d
0x1666e:   44 0f b6 46 0b                        	movzx r8d, byte ptr [rsi + 0xb]
0x16673:   44 31 c0                              	xor eax, r8d
0x16676:   44 0f b6 46 0a                        	movzx r8d, byte ptr [rsi + 0xa]
0x1667b:   41 c1 e0 08                           	shl r8d, 8
0x1667f:   44 31 c0                              	xor eax, r8d
0x16682:   89 47 08                              	mov dword ptr [rdi + 8], eax
0x16685:   44 0f b6 46 0c                        	movzx r8d, byte ptr [rsi + 0xc]
0x1668a:   41 c1 e0 18                           	shl r8d, 0x18
0x1668e:   0f b6 46 0d                           	movzx eax, byte ptr [rsi + 0xd]
0x16692:   c1 e0 10                              	shl eax, 0x10
0x16695:   44 31 c0                              	xor eax, r8d
0x16698:   44 0f b6 46 0f                        	movzx r8d, byte ptr [rsi + 0xf]
0x1669d:   44 31 c0                              	xor eax, r8d
0x166a0:   44 0f b6 46 0e                        	movzx r8d, byte ptr [rsi + 0xe]
0x166a5:   41 c1 e0 08                           	shl r8d, 8
0x166a9:   44 31 c0                              	xor eax, r8d
0x166ac:   89 47 0c                              	mov dword ptr [rdi + 0xc], eax
0x166af:   81 fa 80 00 00 00                     	cmp edx, 0x80
0x166b5:   0f 85 92 00 00 00                     	jne 0x1674d <rijndaelKeySetupEnc+0x14d>
0x166bb:   48 89 ca                              	mov rdx, rcx
0x166be:   4c 8d 49 28                           	lea r9, [rcx + 0x28]
0x166c2:   8b 47 0c                              	mov eax, dword ptr [rdi + 0xc]
0x166c5:   48 83 c7 10                           	add rdi, 0x10
0x166c9:   44 8b 82 00 28 00 00                  	mov r8d, dword ptr [rdx + 0x2800]
0x166d0:   44 33 47 f0                           	xor r8d, dword ptr [rdi - 0x10]
0x166d4:   0f b6 f0                              	movzx esi, al
0x166d7:   8b b4 b1 00 10 00 00                  	mov esi, dword ptr [rcx + rsi*4 + 0x1000]
0x166de:   81 e6 00 ff 00 00                     	and esi, 0xff00
0x166e4:   41 31 f0                              	xor r8d, esi
0x166e7:   89 c6                                 	mov esi, eax
0x166e9:   c1 ee 18                              	shr esi, 0x18
0x166ec:   89 f6                                 	mov esi, esi
0x166ee:   0f b6 b4 b1 00 10 00 00               	movzx esi, byte ptr [rcx + rsi*4 + 0x1000]
0x166f6:   41 31 f0                              	xor r8d, esi
0x166f9:   89 c6                                 	mov esi, eax
0x166fb:   c1 ee 10                              	shr esi, 0x10
0x166fe:   40 0f b6 f6                           	movzx esi, sil
0x16702:   8b b4 b1 00 10 00 00                  	mov esi, dword ptr [rcx + rsi*4 + 0x1000]
0x16709:   81 e6 00 00 00 ff                     	and esi, 0xff000000
0x1670f:   41 31 f0                              	xor r8d, esi
0x16712:   0f b6 c4                              	movzx eax, ah
0x16715:   8b b4 81 00 10 00 00                  	mov esi, dword ptr [rcx + rax*4 + 0x1000]
0x1671c:   81 e6 00 00 ff 00                     	and esi, 0xff0000
0x16722:   44 89 c0                              	mov eax, r8d
0x16725:   31 f0                                 	xor eax, esi
0x16727:   89 07                                 	mov dword ptr [rdi], eax
0x16729:   33 47 f4                              	xor eax, dword ptr [rdi - 0xc]
0x1672c:   89 47 04                              	mov dword ptr [rdi + 4], eax
0x1672f:   33 47 f8                              	xor eax, dword ptr [rdi - 8]
0x16732:   89 47 08                              	mov dword ptr [rdi + 8], eax
0x16735:   33 47 fc                              	xor eax, dword ptr [rdi - 4]
0x16738:   89 47 0c                              	mov dword ptr [rdi + 0xc], eax
0x1673b:   48 83 c2 04                           	add rdx, 4
0x1673f:   4c 39 ca                              	cmp rdx, r9
0x16742:   0f 85 7a ff ff ff                     	jne 0x166c2 <rijndaelKeySetupEnc+0xc2>
0x16748:   e9 6b 02 00 00                        	jmp 0x169b8
0x1674d:   44 0f b6 46 10                        	movzx r8d, byte ptr [rsi + 0x10]
0x16752:   41 c1 e0 18                           	shl r8d, 0x18
0x16756:   0f b6 46 11                           	movzx eax, byte ptr [rsi + 0x11]
0x1675a:   c1 e0 10                              	shl eax, 0x10
0x1675d:   44 31 c0                              	xor eax, r8d
0x16760:   44 0f b6 46 13                        	movzx r8d, byte ptr [rsi + 0x13]
0x16765:   44 31 c0                              	xor eax, r8d
0x16768:   44 0f b6 46 12                        	movzx r8d, byte ptr [rsi + 0x12]
0x1676d:   41 c1 e0 08                           	shl r8d, 8
0x16771:   44 31 c0                              	xor eax, r8d
0x16774:   89 47 10                              	mov dword ptr [rdi + 0x10], eax
0x16777:   44 0f b6 46 14                        	movzx r8d, byte ptr [rsi + 0x14]
0x1677c:   41 c1 e0 18                           	shl r8d, 0x18
0x16780:   0f b6 46 15                           	movzx eax, byte ptr [rsi + 0x15]
0x16784:   c1 e0 10                              	shl eax, 0x10
0x16787:   44 31 c0                              	xor eax, r8d
0x1678a:   44 0f b6 46 17                        	movzx r8d, byte ptr [rsi + 0x17]
0x1678f:   44 31 c0                              	xor eax, r8d
0x16792:   44 0f b6 46 16                        	movzx r8d, byte ptr [rsi + 0x16]
0x16797:   41 c1 e0 08                           	shl r8d, 8
0x1679b:   44 31 c0                              	xor eax, r8d
0x1679e:   89 47 14                              	mov dword ptr [rdi + 0x14], eax
0x167a1:   81 fa c0 00 00 00                     	cmp edx, 0xc0
0x167a7:   0f 85 a4 00 00 00                     	jne 0x16851 <rijndaelKeySetupEnc+0x251>
0x167ad:   ba 00 00 00 00                        	mov edx, 0
0x167b2:   8b 47 14                              	mov eax, dword ptr [rdi + 0x14]
0x167b5:   48 83 c7 18                           	add rdi, 0x18
0x167b9:   44 8b 84 11 00 28 00 00               	mov r8d, dword ptr [rcx + rdx + 0x2800]
0x167c1:   44 33 47 e8                           	xor r8d, dword ptr [rdi - 0x18]
0x167c5:   0f b6 f0                              	movzx esi, al
0x167c8:   8b b4 b1 00 10 00 00                  	mov esi, dword ptr [rcx + rsi*4 + 0x1000]
0x167cf:   81 e6 00 ff 00 00                     	and esi, 0xff00
0x167d5:   41 31 f0                              	xor r8d, esi
0x167d8:   89 c6                                 	mov esi, eax
0x167da:   c1 ee 18                              	shr esi, 0x18
0x167dd:   89 f6                                 	mov esi, esi
0x167df:   0f b6 b4 b1 00 10 00 00               	movzx esi, byte ptr [rcx + rsi*4 + 0x1000]
0x167e7:   41 31 f0                              	xor r8d, esi
0x167ea:   89 c6                                 	mov esi, eax
0x167ec:   c1 ee 10                              	shr esi, 0x10
0x167ef:   40 0f b6 f6                           	movzx esi, sil
0x167f3:   8b b4 b1 00 10 00 00                  	mov esi, dword ptr [rcx + rsi*4 + 0x1000]
0x167fa:   81 e6 00 00 00 ff                     	and esi, 0xff000000
0x16800:   41 31 f0                              	xor r8d, esi
0x16803:   0f b6 c4                              	movzx eax, ah
0x16806:   8b b4 81 00 10 00 00                  	mov esi, dword ptr [rcx + rax*4 + 0x1000]
0x1680d:   81 e6 00 00 ff 00                     	and esi, 0xff0000
0x16813:   44 89 c0                              	mov eax, r8d
0x16816:   31 f0                                 	xor eax, esi
0x16818:   89 07                                 	mov dword ptr [rdi], eax
0x1681a:   33 47 ec                              	xor eax, dword ptr [rdi - 0x14]
0x1681d:   89 47 04                              	mov dword ptr [rdi + 4], eax
0x16820:   33 47 f0                              	xor eax, dword ptr [rdi - 0x10]
0x16823:   89 47 08                              	mov dword ptr [rdi + 8], eax
0x16826:   33 47 f4                              	xor eax, dword ptr [rdi - 0xc]
0x16829:   89 47 0c                              	mov dword ptr [rdi + 0xc], eax
0x1682c:   48 83 c2 04                           	add rdx, 4
0x16830:   48 83 fa 20                           	cmp rdx, 0x20
0x16834:   75 0a                                 	jne 0x16840 <rijndaelKeySetupEnc+0x240>
0x16836:   b8 0c 00 00 00                        	mov eax, 0xc ; "GNU"
0x1683b:   e9 7d 01 00 00                        	jmp 0x169bd
0x16840:   33 47 f8                              	xor eax, dword ptr [rdi - 8]
0x16843:   89 47 10                              	mov dword ptr [rdi + 0x10], eax
0x16846:   33 47 fc                              	xor eax, dword ptr [rdi - 4]
0x16849:   89 47 14                              	mov dword ptr [rdi + 0x14], eax
0x1684c:   e9 61 ff ff ff                        	jmp 0x167b2 <rijndaelKeySetupEnc+0x1b2>
0x16851:   44 0f b6 46 18                        	movzx r8d, byte ptr [rsi + 0x18]
0x16856:   41 c1 e0 18                           	shl r8d, 0x18
0x1685a:   0f b6 46 19                           	movzx eax, byte ptr [rsi + 0x19]
0x1685e:   c1 e0 10                              	shl eax, 0x10
0x16861:   44 31 c0                              	xor eax, r8d
0x16864:   44 0f b6 46 1b                        	movzx r8d, byte ptr [rsi + 0x1b]
0x16869:   44 31 c0                              	xor eax, r8d
0x1686c:   44 0f b6 46 1a                        	movzx r8d, byte ptr [rsi + 0x1a]
0x16871:   41 c1 e0 08                           	shl r8d, 8
0x16875:   44 31 c0                              	xor eax, r8d
0x16878:   89 47 18                              	mov dword ptr [rdi + 0x18], eax
0x1687b:   44 0f b6 46 1c                        	movzx r8d, byte ptr [rsi + 0x1c]
0x16880:   41 c1 e0 18                           	shl r8d, 0x18
0x16884:   0f b6 46 1d                           	movzx eax, byte ptr [rsi + 0x1d]
0x16888:   c1 e0 10                              	shl eax, 0x10
0x1688b:   44 31 c0                              	xor eax, r8d
0x1688e:   44 0f b6 46 1f                        	movzx r8d, byte ptr [rsi + 0x1f]
0x16893:   44 31 c0                              	xor eax, r8d
0x16896:   0f b6 76 1e                           	movzx esi, byte ptr [rsi + 0x1e]
0x1689a:   c1 e6 08                              	shl esi, 8
0x1689d:   31 f0                                 	xor eax, esi
0x1689f:   89 47 1c                              	mov dword ptr [rdi + 0x1c], eax
0x168a2:   b8 00 00 00 00                        	mov eax, 0
0x168a7:   81 fa 00 01 00 00                     	cmp edx, 0x100
0x168ad:   0f 85 0a 01 00 00                     	jne 0x169bd
0x168b3:   be 00 00 00 00                        	mov esi, 0
0x168b8:   8b 57 1c                              	mov edx, dword ptr [rdi + 0x1c]
0x168bb:   48 83 c7 20                           	add rdi, 0x20
0x168bf:   8b 84 31 00 28 00 00                  	mov eax, dword ptr [rcx + rsi + 0x2800]
0x168c6:   33 47 e0                              	xor eax, dword ptr [rdi - 0x20]
0x168c9:   44 0f b6 c2                           	movzx r8d, dl
0x168cd:   46 8b 84 81 00 10 00 00               	mov r8d, dword ptr [rcx + r8*4 + 0x1000]
0x168d5:   41 81 e0 00 ff 00 00                  	and r8d, 0xff00
0x168dc:   44 31 c0                              	xor eax, r8d
0x168df:   41 89 d0                              	mov r8d, edx
0x168e2:   41 c1 e8 18                           	shr r8d, 0x18
0x168e6:   45 89 c0                              	mov r8d, r8d
0x168e9:   46 0f b6 84 81 00 10 00 00            	movzx r8d, byte ptr [rcx + r8*4 + 0x1000]
0x168f2:   44 31 c0                              	xor eax, r8d
0x168f5:   41 89 d0                              	mov r8d, edx
0x168f8:   41 c1 e8 10                           	shr r8d, 0x10
0x168fc:   45 0f b6 c0                           	movzx r8d, r8b
0x16900:   46 8b 84 81 00 10 00 00               	mov r8d, dword ptr [rcx + r8*4 + 0x1000]
0x16908:   41 81 e0 00 00 00 ff                  	and r8d, 0xff000000
0x1690f:   44 31 c0                              	xor eax, r8d
0x16912:   0f b6 d6                              	movzx edx, dh
0x16915:   8b 94 91 00 10 00 00                  	mov edx, dword ptr [rcx + rdx*4 + 0x1000]
0x1691c:   81 e2 00 00 ff 00                     	and edx, 0xff0000
0x16922:   31 d0                                 	xor eax, edx
0x16924:   89 07                                 	mov dword ptr [rdi], eax
0x16926:   33 47 e4                              	xor eax, dword ptr [rdi - 0x1c]
0x16929:   89 47 04                              	mov dword ptr [rdi + 4], eax
0x1692c:   33 47 e8                              	xor eax, dword ptr [rdi - 0x18]
0x1692f:   89 47 08                              	mov dword ptr [rdi + 8], eax
0x16932:   33 47 ec                              	xor eax, dword ptr [rdi - 0x14]
0x16935:   89 47 0c                              	mov dword ptr [rdi + 0xc], eax
0x16938:   48 83 c6 04                           	add rsi, 4
0x1693c:   48 83 fe 1c                           	cmp rsi, 0x1c
0x16940:   75 07                                 	jne 0x16949 <rijndaelKeySetupEnc+0x349>
0x16942:   b8 0e 00 00 00                        	mov eax, 0xe
0x16947:   eb 74                                 	jmp 0x169bd
0x16949:   89 c2                                 	mov edx, eax
0x1694b:   c1 ea 18                              	shr edx, 0x18
0x1694e:   89 d2                                 	mov edx, edx
0x16950:   44 8b 84 91 00 10 00 00               	mov r8d, dword ptr [rcx + rdx*4 + 0x1000]
0x16958:   41 81 e0 00 00 00 ff                  	and r8d, 0xff000000
0x1695f:   0f b6 d0                              	movzx edx, al
0x16962:   0f b6 94 91 00 10 00 00               	movzx edx, byte ptr [rcx + rdx*4 + 0x1000]
0x1696a:   41 31 d0                              	xor r8d, edx
0x1696d:   44 33 47 f0                           	xor r8d, dword ptr [rdi - 0x10]
0x16971:   89 c2                                 	mov edx, eax
0x16973:   c1 ea 10                              	shr edx, 0x10
0x16976:   0f b6 d2                              	movzx edx, dl
0x16979:   8b 94 91 00 10 00 00                  	mov edx, dword ptr [rcx + rdx*4 + 0x1000]
0x16980:   81 e2 00 00 ff 00                     	and edx, 0xff0000
0x16986:   41 31 d0                              	xor r8d, edx
0x16989:   0f b6 c4                              	movzx eax, ah
; data inside code section at 0x1698c -- 0x1698f
0x1698c:   8b 94 81                                           |...             |
; function: rijndaelKeySetupDec at 0x1698f -- 0x169bf
0x1698f:   00 10                                 	add byte ptr [rax], dl
0x16991:   00 00                                 	add byte ptr [rax], al
0x16993:   81 e2 00 ff 00 00                     	and edx, 0xff00
0x16999:   44 89 c0                              	mov eax, r8d
0x1699c:   31 d0                                 	xor eax, edx
0x1699e:   89 47 10                              	mov dword ptr [rdi + 0x10], eax
0x169a1:   33 47 f4                              	xor eax, dword ptr [rdi - 0xc]
0x169a4:   89 47 14                              	mov dword ptr [rdi + 0x14], eax
0x169a7:   33 47 f8                              	xor eax, dword ptr [rdi - 8]
0x169aa:   89 47 18                              	mov dword ptr [rdi + 0x18], eax
0x169ad:   33 47 fc                              	xor eax, dword ptr [rdi - 4]
0x169b0:   89 47 1c                              	mov dword ptr [rdi + 0x1c], eax
0x169b3:   e9 00 ff ff ff                        	jmp 0x168b8
0x169b8:   b8 0a 00 00 00                        	mov eax, 0xa
0x169bd:   c9                                    	leave 
0x169be:   c3                                    	ret 
; function: rijndaelKeySetupDec at 0x169bf -- 0x16baf
0x169bf:   55                                    	push rbp
0x169c0:   48 89 e5                              	mov rbp, rsp
0x169c3:   41 54                                 	push r12
0x169c5:   53                                    	push rbx
0x169c6:   e8 25 82 02 00                        	call 0x3ebf0 <mcount>
0x169cb:   49 89 fc                              	mov r12, rdi
0x169ce:   48 89 cb                              	mov rbx, rcx
0x169d1:   e8 2a fc ff ff                        	call 0x16600 <rijndaelKeySetupEnc>
0x169d6:   8d 34 85 00 00 00 00                  	lea esi, [rax*4]
0x169dd:   85 f6                                 	test esi, esi
0x169df:   7e 6b                                 	jle 0x16a4c <rijndaelKeySetupDec+0x8d>
0x169e1:   bf 00 00 00 00                        	mov edi, 0
0x169e6:   48 63 cf                              	movsxd rcx, edi
0x169e9:   4d 8d 0c 8c                           	lea r9, [r12 + rcx*4]
0x169ed:   45 8b 11                              	mov r10d, dword ptr [r9]
0x169f0:   48 63 d6                              	movsxd rdx, esi
0x169f3:   4d 8d 04 94                           	lea r8, [r12 + rdx*4]
0x169f7:   45 8b 18                              	mov r11d, dword ptr [r8]
0x169fa:   45 89 19                              	mov dword ptr [r9], r11d
0x169fd:   45 89 10                              	mov dword ptr [r8], r10d
0x16a00:   4d 8d 4c 8c 04                        	lea r9, [r12 + rcx*4 + 4]
0x16a05:   45 8b 11                              	mov r10d, dword ptr [r9]
0x16a08:   4d 8d 44 94 04                        	lea r8, [r12 + rdx*4 + 4]
0x16a0d:   45 8b 18                              	mov r11d, dword ptr [r8]
0x16a10:   45 89 19                              	mov dword ptr [r9], r11d
0x16a13:   45 89 10                              	mov dword ptr [r8], r10d
0x16a16:   4d 8d 4c 8c 08                        	lea r9, [r12 + rcx*4 + 8]
0x16a1b:   45 8b 11                              	mov r10d, dword ptr [r9]
0x16a1e:   4d 8d 44 94 08                        	lea r8, [r12 + rdx*4 + 8]
0x16a23:   45 8b 18                              	mov r11d, dword ptr [r8]
0x16a26:   45 89 19                              	mov dword ptr [r9], r11d
0x16a29:   45 89 10                              	mov dword ptr [r8], r10d
0x16a2c:   49 8d 4c 8c 0c                        	lea rcx, [r12 + rcx*4 + 0xc]
0x16a31:   44 8b 01                              	mov r8d, dword ptr [rcx]
0x16a34:   49 8d 54 94 0c                        	lea rdx, [r12 + rdx*4 + 0xc]
0x16a39:   44 8b 0a                              	mov r9d, dword ptr [rdx]
0x16a3c:   44 89 09                              	mov dword ptr [rcx], r9d
0x16a3f:   44 89 02                              	mov dword ptr [rdx], r8d
0x16a42:   83 c7 04                              	add edi, 4
0x16a45:   83 ee 04                              	sub esi, 4
0x16a48:   39 f7                                 	cmp edi, esi
0x16a4a:   7c 9a                                 	jl 0x169e6 <rijndaelKeySetupDec+0x27>
0x16a4c:   83 f8 01                              	cmp eax, 1
0x16a4f:   0f 8e 8b 01 00 00                     	jle 0x16be0
0x16a55:   8d 50 fe                              	lea edx, [rax - 2]
0x16a58:   48 c1 e2 04                           	shl rdx, 4
0x16a5c:   49 8d 7c 14 10                        	lea rdi, [r12 + rdx + 0x10]
0x16a61:   49 83 c4 10                           	add r12, 0x10
0x16a65:   41 8b 14 24                           	mov edx, dword ptr [r12]
0x16a69:   0f b6 ca                              	movzx ecx, dl
0x16a6c:   0f b6 b4 8b 00 10 00 00               	movzx esi, byte ptr [rbx + rcx*4 + 0x1000]
0x16a74:   89 d1                                 	mov ecx, edx
0x16a76:   c1 e9 18                              	shr ecx, 0x18
0x16a79:   89 c9                                 	mov ecx, ecx
0x16a7b:   0f b6 8c 8b 00 10 00 00               	movzx ecx, byte ptr [rbx + rcx*4 + 0x1000]
0x16a83:   8b b4 b3 00 20 00 00                  	mov esi, dword ptr [rbx + rsi*4 + 0x2000]
0x16a8a:   33 b4 8b 00 14 00 00                  	xor esi, dword ptr [rbx + rcx*4 + 0x1400]
0x16a91:   89 d1                                 	mov ecx, edx
0x16a93:   c1 e9 10                              	shr ecx, 0x10
0x16a96:   0f b6 c9                              	movzx ecx, cl
0x16a99:   0f b6 8c 8b 00 10 00 00               	movzx ecx, byte ptr [rbx + rcx*4 + 0x1000]
0x16aa1:   33 b4 8b 00 18 00 00                  	xor esi, dword ptr [rbx + rcx*4 + 0x1800]
0x16aa8:   0f b6 d6                              	movzx edx, dh
0x16aab:   0f b6 8c 93 00 10 00 00               	movzx ecx, byte ptr [rbx + rdx*4 + 0x1000]
0x16ab3:   89 f2                                 	mov edx, esi
0x16ab5:   33 94 8b 00 1c 00 00                  	xor edx, dword ptr [rbx + rcx*4 + 0x1c00]
0x16abc:   41 89 14 24                           	mov dword ptr [r12], edx
0x16ac0:   41 8b 54 24 04                        	mov edx, dword ptr [r12 + 4]
0x16ac5:   0f b6 ca                              	movzx ecx, dl
0x16ac8:   0f b6 b4 8b 00 10 00 00               	movzx esi, byte ptr [rbx + rcx*4 + 0x1000]
0x16ad0:   89 d1                                 	mov ecx, edx
0x16ad2:   c1 e9 18                              	shr ecx, 0x18
0x16ad5:   89 c9                                 	mov ecx, ecx
0x16ad7:   0f b6 8c 8b 00 10 00 00               	movzx ecx, byte ptr [rbx + rcx*4 + 0x1000]
0x16adf:   8b b4 b3 00 20 00 00                  	mov esi, dword ptr [rbx + rsi*4 + 0x2000]
0x16ae6:   33 b4 8b 00 14 00 00                  	xor esi, dword ptr [rbx + rcx*4 + 0x1400]
0x16aed:   89 d1                                 	mov ecx, edx
0x16aef:   c1 e9 10                              	shr ecx, 0x10
0x16af2:   0f b6 c9                              	movzx ecx, cl
0x16af5:   0f b6 8c 8b 00 10 00 00               	movzx ecx, byte ptr [rbx + rcx*4 + 0x1000]
0x16afd:   33 b4 8b 00 18 00 00                  	xor esi, dword ptr [rbx + rcx*4 + 0x1800]
0x16b04:   0f b6 d6                              	movzx edx, dh
0x16b07:   0f b6 8c 93 00 10 00 00               	movzx ecx, byte ptr [rbx + rdx*4 + 0x1000]
0x16b0f:   89 f2                                 	mov edx, esi
0x16b11:   33 94 8b 00 1c 00 00                  	xor edx, dword ptr [rbx + rcx*4 + 0x1c00]
0x16b18:   41 89 54 24 04                        	mov dword ptr [r12 + 4], edx
0x16b1d:   41 8b 54 24 08                        	mov edx, dword ptr [r12 + 8]
0x16b22:   0f b6 ca                              	movzx ecx, dl
0x16b25:   0f b6 b4 8b 00 10 00 00               	movzx esi, byte ptr [rbx + rcx*4 + 0x1000]
0x16b2d:   89 d1                                 	mov ecx, edx
0x16b2f:   c1 e9 18                              	shr ecx, 0x18
0x16b32:   89 c9                                 	mov ecx, ecx
0x16b34:   0f b6 8c 8b 00 10 00 00               	movzx ecx, byte ptr [rbx + rcx*4 + 0x1000]
0x16b3c:   8b b4 b3 00 20 00 00                  	mov esi, dword ptr [rbx + rsi*4 + 0x2000]
0x16b43:   33 b4 8b 00 14 00 00                  	xor esi, dword ptr [rbx + rcx*4 + 0x1400]
0x16b4a:   89 d1                                 	mov ecx, edx
0x16b4c:   c1 e9 10                              	shr ecx, 0x10
0x16b4f:   0f b6 c9                              	movzx ecx, cl
0x16b52:   0f b6 8c 8b 00 10 00 00               	movzx ecx, byte ptr [rbx + rcx*4 + 0x1000]
0x16b5a:   33 b4 8b 00 18 00 00                  	xor esi, dword ptr [rbx + rcx*4 + 0x1800]
0x16b61:   0f b6 d6                              	movzx edx, dh
0x16b64:   0f b6 8c 93 00 10 00 00               	movzx ecx, byte ptr [rbx + rdx*4 + 0x1000]
0x16b6c:   89 f2                                 	mov edx, esi
0x16b6e:   33 94 8b 00 1c 00 00                  	xor edx, dword ptr [rbx + rcx*4 + 0x1c00]
0x16b75:   41 89 54 24 08                        	mov dword ptr [r12 + 8], edx
0x16b7a:   41 8b 54 24 0c                        	mov edx, dword ptr [r12 + 0xc]
0x16b7f:   0f b6 ca                              	movzx ecx, dl
0x16b82:   0f b6 b4 8b 00 10 00 00               	movzx esi, byte ptr [rbx + rcx*4 + 0x1000]
0x16b8a:   89 d1                                 	mov ecx, edx
0x16b8c:   c1 e9 18                              	shr ecx, 0x18
0x16b8f:   89 c9                                 	mov ecx, ecx
0x16b91:   0f b6 8c 8b 00 10 00 00               	movzx ecx, byte ptr [rbx + rcx*4 + 0x1000]
0x16b99:   8b b4 b3 00 20 00 00                  	mov esi, dword ptr [rbx + rsi*4 + 0x2000]
0x16ba0:   33 b4 8b 00 14 00 00                  	xor esi, dword ptr [rbx + rcx*4 + 0x1400]
0x16ba7:   89 d1                                 	mov ecx, edx
0x16ba9:   c1 e9 10                              	shr ecx, 0x10
0x16bac:   0f b6 c9                              	movzx ecx, cl
; data inside code section at 0x16baf -- 0x16bb5
0x16baf:   0f b6 8c 8b 00 10                                  |......          |
; function: rijndaelEncryptRound at 0x16bb5 -- 0x16be5
0x16bb5:   00 00                                 	add byte ptr [rax], al
0x16bb7:   33 b4 8b 00 18 00 00                  	xor esi, dword ptr [rbx + rcx*4 + 0x1800]
0x16bbe:   0f b6 d6                              	movzx edx, dh
0x16bc1:   0f b6 8c 93 00 10 00 00               	movzx ecx, byte ptr [rbx + rdx*4 + 0x1000]
0x16bc9:   89 f2                                 	mov edx, esi
0x16bcb:   33 94 8b 00 1c 00 00                  	xor edx, dword ptr [rbx + rcx*4 + 0x1c00]
0x16bd2:   41 89 54 24 0c                        	mov dword ptr [r12 + 0xc], edx
0x16bd7:   49 39 fc                              	cmp r12, rdi
0x16bda:   0f 85 81 fe ff ff                     	jne 0x16a61
0x16be0:   5b                                    	pop rbx
0x16be1:   41 5c                                 	pop r12
0x16be3:   c9                                    	leave 
0x16be4:   c3                                    	ret 
; function: rijndaelEncryptRound at 0x16be5 -- 0x170ba
0x16be5:   55                                    	push rbp
0x16be6:   48 89 e5                              	mov rbp, rsp
0x16be9:   41 57                                 	push r15
0x16beb:   41 56                                 	push r14
0x16bed:   41 55                                 	push r13
0x16bef:   41 54                                 	push r12
0x16bf1:   53                                    	push rbx
0x16bf2:   48 81 ec 90 00 00 00                  	sub rsp, 0x90
0x16bf9:   e8 f2 7f 02 00                        	call 0x3ebf0 <mcount>
0x16bfe:   89 75 d4                              	mov dword ptr [rbp - 0x2c], esi
0x16c01:   48 8d 42 01                           	lea rax, [rdx + 1]
0x16c05:   48 89 85 58 ff ff ff                  	mov qword ptr [rbp - 0xa8], rax
0x16c0c:   48 8d 5a 02                           	lea rbx, [rdx + 2]
0x16c10:   48 89 9d 60 ff ff ff                  	mov qword ptr [rbp - 0xa0], rbx
0x16c17:   4c 8d 5a 03                           	lea r11, [rdx + 3]
0x16c1b:   4c 89 9d 68 ff ff ff                  	mov qword ptr [rbp - 0x98], r11
0x16c22:   44 0f b6 12                           	movzx r10d, byte ptr [rdx]
0x16c26:   41 c1 e2 18                           	shl r10d, 0x18
0x16c2a:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x16c2e:   41 31 c2                              	xor r10d, eax
0x16c31:   44 33 17                              	xor r10d, dword ptr [rdi]
0x16c34:   48 8b 9d 58 ff ff ff                  	mov rbx, qword ptr [rbp - 0xa8]
0x16c3b:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x16c3e:   c1 e0 10                              	shl eax, 0x10
0x16c41:   41 31 c2                              	xor r10d, eax
0x16c44:   4c 8b 9d 60 ff ff ff                  	mov r11, qword ptr [rbp - 0xa0]
0x16c4b:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x16c4f:   c1 e0 08                              	shl eax, 8
0x16c52:   41 31 c2                              	xor r10d, eax
0x16c55:   48 8d 42 04                           	lea rax, [rdx + 4]
0x16c59:   48 89 85 70 ff ff ff                  	mov qword ptr [rbp - 0x90], rax
0x16c60:   48 8d 5a 05                           	lea rbx, [rdx + 5]
0x16c64:   48 89 9d 78 ff ff ff                  	mov qword ptr [rbp - 0x88], rbx
0x16c6b:   4c 8d 5a 06                           	lea r11, [rdx + 6]
0x16c6f:   4c 89 5d 80                           	mov qword ptr [rbp - 0x80], r11
0x16c73:   48 8d 42 07                           	lea rax, [rdx + 7]
0x16c77:   48 89 45 88                           	mov qword ptr [rbp - 0x78], rax
0x16c7b:   44 0f b6 08                           	movzx r9d, byte ptr [rax]
0x16c7f:   44 33 4f 04                           	xor r9d, dword ptr [rdi + 4]
0x16c83:   48 8b 9d 70 ff ff ff                  	mov rbx, qword ptr [rbp - 0x90]
0x16c8a:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x16c8d:   c1 e0 18                              	shl eax, 0x18
0x16c90:   41 31 c1                              	xor r9d, eax
0x16c93:   4c 8b 9d 78 ff ff ff                  	mov r11, qword ptr [rbp - 0x88]
0x16c9a:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x16c9e:   c1 e0 10                              	shl eax, 0x10
0x16ca1:   41 31 c1                              	xor r9d, eax
0x16ca4:   48 8b 5d 80                           	mov rbx, qword ptr [rbp - 0x80]
0x16ca8:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x16cab:   c1 e0 08                              	shl eax, 8
0x16cae:   41 31 c1                              	xor r9d, eax
0x16cb1:   4c 8d 5a 08                           	lea r11, [rdx + 8]
0x16cb5:   4c 89 5d 90                           	mov qword ptr [rbp - 0x70], r11
0x16cb9:   48 8d 42 09                           	lea rax, [rdx + 9]
0x16cbd:   48 89 45 98                           	mov qword ptr [rbp - 0x68], rax
0x16cc1:   48 8d 5a 0a                           	lea rbx, [rdx + 0xa]
0x16cc5:   48 89 5d a0                           	mov qword ptr [rbp - 0x60], rbx
0x16cc9:   4c 8d 5a 0b                           	lea r11, [rdx + 0xb]
0x16ccd:   4c 89 5d a8                           	mov qword ptr [rbp - 0x58], r11
0x16cd1:   41 0f b6 33                           	movzx esi, byte ptr [r11]
0x16cd5:   33 77 08                              	xor esi, dword ptr [rdi + 8]
0x16cd8:   48 8b 5d 90                           	mov rbx, qword ptr [rbp - 0x70]
0x16cdc:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x16cdf:   c1 e0 18                              	shl eax, 0x18
0x16ce2:   31 c6                                 	xor esi, eax
0x16ce4:   4c 8b 5d 98                           	mov r11, qword ptr [rbp - 0x68]
0x16ce8:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x16cec:   c1 e0 10                              	shl eax, 0x10
0x16cef:   31 c6                                 	xor esi, eax
0x16cf1:   48 8b 5d a0                           	mov rbx, qword ptr [rbp - 0x60]
0x16cf5:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x16cf8:   c1 e0 08                              	shl eax, 8
0x16cfb:   31 c6                                 	xor esi, eax
0x16cfd:   4c 8d 5a 0c                           	lea r11, [rdx + 0xc]
0x16d01:   4c 89 5d b0                           	mov qword ptr [rbp - 0x50], r11
0x16d05:   48 8d 42 0d                           	lea rax, [rdx + 0xd]
0x16d09:   48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0x16d0d:   48 8d 5a 0e                           	lea rbx, [rdx + 0xe]
0x16d11:   48 89 5d c0                           	mov qword ptr [rbp - 0x40], rbx
0x16d15:   4c 8d 5a 0f                           	lea r11, [rdx + 0xf]
0x16d19:   4c 89 5d c8                           	mov qword ptr [rbp - 0x38], r11
0x16d1d:   41 0f b6 1b                           	movzx ebx, byte ptr [r11]
0x16d21:   33 5f 0c                              	xor ebx, dword ptr [rdi + 0xc]
0x16d24:   4c 8b 5d b0                           	mov r11, qword ptr [rbp - 0x50]
0x16d28:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x16d2c:   c1 e0 18                              	shl eax, 0x18
0x16d2f:   31 c3                                 	xor ebx, eax
0x16d31:   4c 8b 5d b8                           	mov r11, qword ptr [rbp - 0x48]
0x16d35:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x16d39:   c1 e0 10                              	shl eax, 0x10
0x16d3c:   31 c3                                 	xor ebx, eax
0x16d3e:   4c 8b 5d c0                           	mov r11, qword ptr [rbp - 0x40]
0x16d42:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x16d46:   c1 e0 08                              	shl eax, 8
0x16d49:   31 c3                                 	xor ebx, eax
0x16d4b:   4c 8d 77 10                           	lea r14, [rdi + 0x10]
0x16d4f:   8b 45 d4                              	mov eax, dword ptr [rbp - 0x2c]
0x16d52:   83 e8 01                              	sub eax, 1
0x16d55:   3b 4d d4                              	cmp ecx, dword ptr [rbp - 0x2c]
0x16d58:   0f 4c c1                              	cmovl eax, ecx
0x16d5b:   89 45 d0                              	mov dword ptr [rbp - 0x30], eax
0x16d5e:   85 c0                                 	test eax, eax
0x16d60:   0f 8e 49 01 00 00                     	jle 0x16eaf <rijndaelEncryptRound+0x2ca>
0x16d66:   83 e8 01                              	sub eax, 1
0x16d69:   48 c1 e0 04                           	shl rax, 4
0x16d6d:   4c 8d 7c 07 20                        	lea r15, [rdi + rax + 0x20]
0x16d72:   4c 89 f0                              	mov rax, r14
0x16d75:   48 89 d7                              	mov rdi, rdx
0x16d78:   89 f2                                 	mov edx, esi
0x16d7a:   44 89 8d 48 ff ff ff                  	mov dword ptr [rbp - 0xb8], r9d
0x16d81:   41 89 c9                              	mov r9d, ecx
0x16d84:   45 89 d3                              	mov r11d, r10d
0x16d87:   41 c1 eb 18                           	shr r11d, 0x18
0x16d8b:   45 89 db                              	mov r11d, r11d
0x16d8e:   0f b6 f3                              	movzx esi, bl
0x16d91:   47 8b 24 98                           	mov r12d, dword ptr [r8 + r11*4]
0x16d95:   45 33 a4 b0 00 0c 00 00               	xor r12d, dword ptr [r8 + rsi*4 + 0xc00]
0x16d9d:   44 33 20                              	xor r12d, dword ptr [rax]
0x16da0:   8b b5 48 ff ff ff                     	mov esi, dword ptr [rbp - 0xb8]
0x16da6:   c1 ee 10                              	shr esi, 0x10
0x16da9:   40 0f b6 f6                           	movzx esi, sil
0x16dad:   45 33 a4 b0 00 04 00 00               	xor r12d, dword ptr [r8 + rsi*4 + 0x400]
0x16db5:   0f b6 f6                              	movzx esi, dh
0x16db8:   45 33 a4 b0 00 08 00 00               	xor r12d, dword ptr [r8 + rsi*4 + 0x800]
0x16dc0:   44 8b 9d 48 ff ff ff                  	mov r11d, dword ptr [rbp - 0xb8]
0x16dc7:   41 c1 eb 18                           	shr r11d, 0x18
0x16dcb:   45 89 db                              	mov r11d, r11d
0x16dce:   41 0f b6 f2                           	movzx esi, r10b
0x16dd2:   47 8b 2c 98                           	mov r13d, dword ptr [r8 + r11*4]
0x16dd6:   45 33 ac b0 00 0c 00 00               	xor r13d, dword ptr [r8 + rsi*4 + 0xc00]
0x16dde:   44 33 68 04                           	xor r13d, dword ptr [rax + 4]
0x16de2:   89 d6                                 	mov esi, edx
0x16de4:   c1 ee 10                              	shr esi, 0x10
0x16de7:   40 0f b6 f6                           	movzx esi, sil
0x16deb:   45 33 ac b0 00 04 00 00               	xor r13d, dword ptr [r8 + rsi*4 + 0x400]
0x16df3:   0f b6 f7                              	movzx esi, bh
0x16df6:   45 33 ac b0 00 08 00 00               	xor r13d, dword ptr [r8 + rsi*4 + 0x800]
0x16dfe:   41 89 d3                              	mov r11d, edx
0x16e01:   41 c1 eb 18                           	shr r11d, 0x18
0x16e05:   45 89 db                              	mov r11d, r11d
0x16e08:   0f b6 b5 48 ff ff ff                  	movzx esi, byte ptr [rbp - 0xb8]
0x16e0f:   47 8b 1c 98                           	mov r11d, dword ptr [r8 + r11*4]
0x16e13:   45 33 9c b0 00 0c 00 00               	xor r11d, dword ptr [r8 + rsi*4 + 0xc00]
0x16e1b:   44 33 58 08                           	xor r11d, dword ptr [rax + 8]
0x16e1f:   89 de                                 	mov esi, ebx
0x16e21:   c1 ee 10                              	shr esi, 0x10
0x16e24:   40 0f b6 f6                           	movzx esi, sil
0x16e28:   45 33 9c b0 00 04 00 00               	xor r11d, dword ptr [r8 + rsi*4 + 0x400]
0x16e30:   4c 89 d1                              	mov rcx, r10
0x16e33:   0f b6 f5                              	movzx esi, ch
0x16e36:   45 33 9c b0 00 08 00 00               	xor r11d, dword ptr [r8 + rsi*4 + 0x800]
0x16e3e:   c1 eb 18                              	shr ebx, 0x18
0x16e41:   89 db                                 	mov ebx, ebx
0x16e43:   0f b6 d2                              	movzx edx, dl
0x16e46:   41 8b 1c 98                           	mov ebx, dword ptr [r8 + rbx*4]
0x16e4a:   41 33 9c 90 00 0c 00 00               	xor ebx, dword ptr [r8 + rdx*4 + 0xc00]
0x16e52:   33 58 0c                              	xor ebx, dword ptr [rax + 0xc]
0x16e55:   41 c1 ea 10                           	shr r10d, 0x10
0x16e59:   45 0f b6 d2                           	movzx r10d, r10b
0x16e5d:   43 33 9c 90 00 04 00 00               	xor ebx, dword ptr [r8 + r10*4 + 0x400]
0x16e65:   8b 95 48 ff ff ff                     	mov edx, dword ptr [rbp - 0xb8]
0x16e6b:   0f b6 ce                              	movzx ecx, dh
0x16e6e:   41 33 9c 88 00 08 00 00               	xor ebx, dword ptr [r8 + rcx*4 + 0x800]
0x16e76:   48 83 c0 10                           	add rax, 0x10
0x16e7a:   4c 39 f8                              	cmp rax, r15
0x16e7d:   74 12                                 	je 0x16e91 <rijndaelEncryptRound+0x2ac>
0x16e7f:   44 89 da                              	mov edx, r11d
0x16e82:   44 89 ad 48 ff ff ff                  	mov dword ptr [rbp - 0xb8], r13d
0x16e89:   45 89 e2                              	mov r10d, r12d
0x16e8c:   e9 f3 fe ff ff                        	jmp 0x16d84 <rijndaelEncryptRound+0x19f>
0x16e91:   48 89 fa                              	mov rdx, rdi
0x16e94:   44 89 c9                              	mov ecx, r9d
0x16e97:   8b 45 d0                              	mov eax, dword ptr [rbp - 0x30]
0x16e9a:   83 e8 01                              	sub eax, 1
0x16e9d:   48 c1 e0 04                           	shl rax, 4
0x16ea1:   4e 8d 74 30 10                        	lea r14, [rax + r14 + 0x10]
0x16ea6:   44 89 de                              	mov esi, r11d
0x16ea9:   45 89 e9                              	mov r9d, r13d
0x16eac:   45 89 e2                              	mov r10d, r12d
0x16eaf:   3b 4d d4                              	cmp ecx, dword ptr [rbp - 0x2c]
0x16eb2:   0f 85 6d 01 00 00                     	jne 0x17025 <rijndaelEncryptRound+0x440>
0x16eb8:   44 89 d0                              	mov eax, r10d
0x16ebb:   c1 e8 18                              	shr eax, 0x18
0x16ebe:   89 c0                                 	mov eax, eax
0x16ec0:   41 8b 8c 80 00 10 00 00               	mov ecx, dword ptr [r8 + rax*4 + 0x1000]
0x16ec8:   81 e1 00 00 00 ff                     	and ecx, 0xff000000
0x16ece:   0f b6 c3                              	movzx eax, bl
0x16ed1:   41 0f b6 84 80 00 10 00 00            	movzx eax, byte ptr [r8 + rax*4 + 0x1000]
0x16eda:   31 c1                                 	xor ecx, eax
0x16edc:   41 33 0e                              	xor ecx, dword ptr [r14]
0x16edf:   44 89 c8                              	mov eax, r9d
0x16ee2:   c1 e8 10                              	shr eax, 0x10
0x16ee5:   0f b6 c0                              	movzx eax, al
0x16ee8:   41 8b 84 80 00 10 00 00               	mov eax, dword ptr [r8 + rax*4 + 0x1000]
0x16ef0:   25 00 00 ff 00                        	and eax, 0xff0000
0x16ef5:   41 89 cd                              	mov r13d, ecx
0x16ef8:   41 31 c5                              	xor r13d, eax
0x16efb:   48 89 f1                              	mov rcx, rsi
0x16efe:   0f b6 c5                              	movzx eax, ch
0x16f01:   41 8b 84 80 00 10 00 00               	mov eax, dword ptr [r8 + rax*4 + 0x1000]
0x16f09:   41 89 c7                              	mov r15d, eax
0x16f0c:   41 81 e7 00 ff 00 00                  	and r15d, 0xff00
0x16f13:   44 89 c8                              	mov eax, r9d
0x16f16:   c1 e8 18                              	shr eax, 0x18
0x16f19:   89 c0                                 	mov eax, eax
0x16f1b:   41 8b 8c 80 00 10 00 00               	mov ecx, dword ptr [r8 + rax*4 + 0x1000]
0x16f23:   81 e1 00 00 00 ff                     	and ecx, 0xff000000
0x16f29:   41 0f b6 c2                           	movzx eax, r10b
0x16f2d:   41 0f b6 84 80 00 10 00 00            	movzx eax, byte ptr [r8 + rax*4 + 0x1000]
0x16f36:   31 c1                                 	xor ecx, eax
0x16f38:   41 33 4e 04                           	xor ecx, dword ptr [r14 + 4]
0x16f3c:   89 f0                                 	mov eax, esi
0x16f3e:   c1 e8 10                              	shr eax, 0x10
0x16f41:   0f b6 c0                              	movzx eax, al
0x16f44:   41 8b 84 80 00 10 00 00               	mov eax, dword ptr [r8 + rax*4 + 0x1000]
0x16f4c:   25 00 00 ff 00                        	and eax, 0xff0000
0x16f51:   41 89 cb                              	mov r11d, ecx
0x16f54:   41 31 c3                              	xor r11d, eax
0x16f57:   0f b6 c7                              	movzx eax, bh
0x16f5a:   41 8b 84 80 00 10 00 00               	mov eax, dword ptr [r8 + rax*4 + 0x1000]
0x16f62:   41 89 c4                              	mov r12d, eax
0x16f65:   41 81 e4 00 ff 00 00                  	and r12d, 0xff00
0x16f6c:   89 f0                                 	mov eax, esi
0x16f6e:   c1 e8 18                              	shr eax, 0x18
0x16f71:   89 c0                                 	mov eax, eax
0x16f73:   41 8b 8c 80 00 10 00 00               	mov ecx, dword ptr [r8 + rax*4 + 0x1000]
0x16f7b:   81 e1 00 00 00 ff                     	and ecx, 0xff000000
0x16f81:   41 0f b6 c1                           	movzx eax, r9b
0x16f85:   41 0f b6 84 80 00 10 00 00            	movzx eax, byte ptr [r8 + rax*4 + 0x1000]
0x16f8e:   31 c1                                 	xor ecx, eax
0x16f90:   41 33 4e 08                           	xor ecx, dword ptr [r14 + 8]
0x16f94:   89 d8                                 	mov eax, ebx
0x16f96:   c1 e8 10                              	shr eax, 0x10
0x16f99:   0f b6 c0                              	movzx eax, al
0x16f9c:   41 8b 84 80 00 10 00 00               	mov eax, dword ptr [r8 + rax*4 + 0x1000]
0x16fa4:   25 00 00 ff 00                        	and eax, 0xff0000
0x16fa9:   89 cf                                 	mov edi, ecx
0x16fab:   31 c7                                 	xor edi, eax
0x16fad:   4c 89 d1                              	mov rcx, r10
0x16fb0:   0f b6 c5                              	movzx eax, ch
0x16fb3:   41 8b 84 80 00 10 00 00               	mov eax, dword ptr [r8 + rax*4 + 0x1000]
0x16fbb:   25 00 ff 00 00                        	and eax, 0xff00
0x16fc0:   89 45 d4                              	mov dword ptr [rbp - 0x2c], eax
0x16fc3:   c1 eb 18                              	shr ebx, 0x18
0x16fc6:   89 db                                 	mov ebx, ebx
0x16fc8:   41 8b 84 98 00 10 00 00               	mov eax, dword ptr [r8 + rbx*4 + 0x1000]
0x16fd0:   25 00 00 00 ff                        	and eax, 0xff000000
0x16fd5:   40 0f b6 f6                           	movzx esi, sil
0x16fd9:   41 0f b6 9c b0 00 10 00 00            	movzx ebx, byte ptr [r8 + rsi*4 + 0x1000]
0x16fe2:   31 c3                                 	xor ebx, eax
0x16fe4:   41 33 5e 0c                           	xor ebx, dword ptr [r14 + 0xc]
0x16fe8:   41 c1 ea 10                           	shr r10d, 0x10
0x16fec:   45 0f b6 d2                           	movzx r10d, r10b
0x16ff0:   43 8b 84 90 00 10 00 00               	mov eax, dword ptr [r8 + r10*4 + 0x1000]
0x16ff8:   25 00 00 ff 00                        	and eax, 0xff0000
0x16ffd:   31 c3                                 	xor ebx, eax
0x16fff:   4c 89 c9                              	mov rcx, r9
0x17002:   0f b6 c5                              	movzx eax, ch
0x17005:   41 8b 84 80 00 10 00 00               	mov eax, dword ptr [r8 + rax*4 + 0x1000]
0x1700d:   25 00 ff 00 00                        	and eax, 0xff00
0x17012:   31 c3                                 	xor ebx, eax
0x17014:   8b 75 d4                              	mov esi, dword ptr [rbp - 0x2c]
0x17017:   31 fe                                 	xor esi, edi
0x17019:   45 89 d9                              	mov r9d, r11d
0x1701c:   45 31 e1                              	xor r9d, r12d
0x1701f:   45 89 ea                              	mov r10d, r13d
0x17022:   45 31 fa                              	xor r10d, r15d
0x17025:   44 89 d0                              	mov eax, r10d
0x17028:   c1 e8 18                              	shr eax, 0x18
0x1702b:   88 02                                 	mov byte ptr [rdx], al
0x1702d:   44 89 d0                              	mov eax, r10d
0x17030:   c1 e8 10                              	shr eax, 0x10
0x17033:   4c 8b 9d 58 ff ff ff                  	mov r11, qword ptr [rbp - 0xa8]
0x1703a:   41 88 03                              	mov byte ptr [r11], al
0x1703d:   44 89 d0                              	mov eax, r10d
0x17040:   c1 e8 08                              	shr eax, 8
0x17043:   48 8b 95 60 ff ff ff                  	mov rdx, qword ptr [rbp - 0xa0]
0x1704a:   88 02                                 	mov byte ptr [rdx], al
0x1704c:   48 8b 8d 68 ff ff ff                  	mov rcx, qword ptr [rbp - 0x98]
0x17053:   44 88 11                              	mov byte ptr [rcx], r10b
0x17056:   44 89 c8                              	mov eax, r9d
0x17059:   c1 e8 18                              	shr eax, 0x18
0x1705c:   4c 8b 9d 70 ff ff ff                  	mov r11, qword ptr [rbp - 0x90]
0x17063:   41 88 03                              	mov byte ptr [r11], al
0x17066:   44 89 c8                              	mov eax, r9d
0x17069:   c1 e8 10                              	shr eax, 0x10
0x1706c:   48 8b 95 78 ff ff ff                  	mov rdx, qword ptr [rbp - 0x88]
0x17073:   88 02                                 	mov byte ptr [rdx], al
0x17075:   44 89 c8                              	mov eax, r9d
0x17078:   c1 e8 08                              	shr eax, 8
0x1707b:   48 8b 4d 80                           	mov rcx, qword ptr [rbp - 0x80]
0x1707f:   88 01                                 	mov byte ptr [rcx], al
0x17081:   4c 8b 5d 88                           	mov r11, qword ptr [rbp - 0x78]
0x17085:   45 88 0b                              	mov byte ptr [r11], r9b
0x17088:   89 f0                                 	mov eax, esi
0x1708a:   c1 e8 18                              	shr eax, 0x18
0x1708d:   48 8b 55 90                           	mov rdx, qword ptr [rbp - 0x70]
0x17091:   88 02                                 	mov byte ptr [rdx], al
0x17093:   89 f0                                 	mov eax, esi
0x17095:   c1 e8 10                              	shr eax, 0x10
0x17098:   48 8b 4d 98                           	mov rcx, qword ptr [rbp - 0x68]
0x1709c:   88 01                                 	mov byte ptr [rcx], al
0x1709e:   89 f0                                 	mov eax, esi
0x170a0:   c1 e8 08                              	shr eax, 8
0x170a3:   4c 8b 5d a0                           	mov r11, qword ptr [rbp - 0x60]
0x170a7:   41 88 03                              	mov byte ptr [r11], al
0x170aa:   48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0x170ae:   40 88 30                              	mov byte ptr [rax], sil
0x170b1:   89 d8                                 	mov eax, ebx
0x170b3:   c1 e8 18                              	shr eax, 0x18
0x170b6:   48 8b 55 b0                           	mov rdx, qword ptr [rbp - 0x50]
; data inside code section at 0x170ba -- 0x170bb
0x170ba:   88                                                 |.               |
; function: rijndaelDecryptRound at 0x170bb -- 0x170eb
0x170bb:   02 89 d8 c1 e8 10                     	add cl, byte ptr [rcx + 0x10e8c1d8]
0x170c1:   48 8b 4d b8                           	mov rcx, qword ptr [rbp - 0x48]
0x170c5:   88 01                                 	mov byte ptr [rcx], al
0x170c7:   89 d8                                 	mov eax, ebx
0x170c9:   c1 e8 08                              	shr eax, 8
0x170cc:   4c 8b 5d c0                           	mov r11, qword ptr [rbp - 0x40]
0x170d0:   41 88 03                              	mov byte ptr [r11], al
0x170d3:   48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x170d7:   88 18                                 	mov byte ptr [rax], bl
0x170d9:   48 81 c4 90 00 00 00                  	add rsp, 0x90
0x170e0:   5b                                    	pop rbx
0x170e1:   41 5c                                 	pop r12
0x170e3:   41 5d                                 	pop r13
0x170e5:   41 5e                                 	pop r14
0x170e7:   41 5f                                 	pop r15
0x170e9:   c9                                    	leave 
0x170ea:   c3                                    	ret 
; function: rijndaelDecryptRound at 0x170eb -- 0x175c5
0x170eb:   55                                    	push rbp
0x170ec:   48 89 e5                              	mov rbp, rsp
0x170ef:   41 57                                 	push r15
0x170f1:   41 56                                 	push r14
0x170f3:   41 55                                 	push r13
0x170f5:   41 54                                 	push r12
0x170f7:   53                                    	push rbx
0x170f8:   48 81 ec 90 00 00 00                  	sub rsp, 0x90
0x170ff:   e8 ec 7a 02 00                        	call 0x3ebf0 <mcount>
0x17104:   89 75 d4                              	mov dword ptr [rbp - 0x2c], esi
0x17107:   48 8d 42 01                           	lea rax, [rdx + 1]
0x1710b:   48 89 85 58 ff ff ff                  	mov qword ptr [rbp - 0xa8], rax
0x17112:   48 8d 5a 02                           	lea rbx, [rdx + 2]
0x17116:   48 89 9d 60 ff ff ff                  	mov qword ptr [rbp - 0xa0], rbx
0x1711d:   48 8d 72 03                           	lea rsi, [rdx + 3]
0x17121:   48 89 b5 68 ff ff ff                  	mov qword ptr [rbp - 0x98], rsi
0x17128:   44 0f b6 12                           	movzx r10d, byte ptr [rdx]
0x1712c:   41 c1 e2 18                           	shl r10d, 0x18
0x17130:   0f b6 06                              	movzx eax, byte ptr [rsi]
0x17133:   41 31 c2                              	xor r10d, eax
0x17136:   44 33 17                              	xor r10d, dword ptr [rdi]
0x17139:   4c 8b 8d 58 ff ff ff                  	mov r9, qword ptr [rbp - 0xa8]
0x17140:   41 0f b6 01                           	movzx eax, byte ptr [r9]
0x17144:   c1 e0 10                              	shl eax, 0x10
0x17147:   41 31 c2                              	xor r10d, eax
0x1714a:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x1714d:   c1 e0 08                              	shl eax, 8
0x17150:   41 31 c2                              	xor r10d, eax
0x17153:   4c 8d 5a 04                           	lea r11, [rdx + 4]
0x17157:   4c 89 9d 70 ff ff ff                  	mov qword ptr [rbp - 0x90], r11
0x1715e:   48 8d 42 05                           	lea rax, [rdx + 5]
0x17162:   48 89 85 78 ff ff ff                  	mov qword ptr [rbp - 0x88], rax
0x17169:   48 8d 5a 06                           	lea rbx, [rdx + 6]
0x1716d:   48 89 5d 80                           	mov qword ptr [rbp - 0x80], rbx
0x17171:   48 8d 72 07                           	lea rsi, [rdx + 7]
0x17175:   48 89 75 88                           	mov qword ptr [rbp - 0x78], rsi
0x17179:   0f b6 1e                              	movzx ebx, byte ptr [rsi]
0x1717c:   33 5f 04                              	xor ebx, dword ptr [rdi + 4]
0x1717f:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x17183:   c1 e0 18                              	shl eax, 0x18
0x17186:   31 c3                                 	xor ebx, eax
0x17188:   4c 8b 8d 78 ff ff ff                  	mov r9, qword ptr [rbp - 0x88]
0x1718f:   41 0f b6 01                           	movzx eax, byte ptr [r9]
0x17193:   c1 e0 10                              	shl eax, 0x10
0x17196:   31 c3                                 	xor ebx, eax
0x17198:   4c 8b 5d 80                           	mov r11, qword ptr [rbp - 0x80]
0x1719c:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x171a0:   c1 e0 08                              	shl eax, 8
0x171a3:   31 c3                                 	xor ebx, eax
0x171a5:   48 8d 42 08                           	lea rax, [rdx + 8]
0x171a9:   48 89 45 90                           	mov qword ptr [rbp - 0x70], rax
0x171ad:   48 8d 72 09                           	lea rsi, [rdx + 9]
0x171b1:   48 89 75 98                           	mov qword ptr [rbp - 0x68], rsi
0x171b5:   4c 8d 4a 0a                           	lea r9, [rdx + 0xa]
0x171b9:   4c 89 4d a0                           	mov qword ptr [rbp - 0x60], r9
0x171bd:   4c 8d 5a 0b                           	lea r11, [rdx + 0xb]
0x171c1:   4c 89 5d a8                           	mov qword ptr [rbp - 0x58], r11
0x171c5:   41 0f b6 33                           	movzx esi, byte ptr [r11]
0x171c9:   33 77 08                              	xor esi, dword ptr [rdi + 8]
0x171cc:   0f b6 00                              	movzx eax, byte ptr [rax]
0x171cf:   c1 e0 18                              	shl eax, 0x18
0x171d2:   31 c6                                 	xor esi, eax
0x171d4:   4c 8b 4d 98                           	mov r9, qword ptr [rbp - 0x68]
0x171d8:   41 0f b6 01                           	movzx eax, byte ptr [r9]
0x171dc:   c1 e0 10                              	shl eax, 0x10
0x171df:   31 c6                                 	xor esi, eax
0x171e1:   4c 8b 5d a0                           	mov r11, qword ptr [rbp - 0x60]
0x171e5:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x171e9:   c1 e0 08                              	shl eax, 8
0x171ec:   31 c6                                 	xor esi, eax
0x171ee:   48 8d 42 0c                           	lea rax, [rdx + 0xc]
0x171f2:   48 89 45 b0                           	mov qword ptr [rbp - 0x50], rax
0x171f6:   4c 8d 4a 0d                           	lea r9, [rdx + 0xd]
0x171fa:   4c 89 4d b8                           	mov qword ptr [rbp - 0x48], r9
0x171fe:   4c 8d 5a 0e                           	lea r11, [rdx + 0xe]
0x17202:   4c 89 5d c0                           	mov qword ptr [rbp - 0x40], r11
0x17206:   48 8d 42 0f                           	lea rax, [rdx + 0xf]
0x1720a:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x1720e:   44 0f b6 08                           	movzx r9d, byte ptr [rax]
0x17212:   44 33 4f 0c                           	xor r9d, dword ptr [rdi + 0xc]
0x17216:   4c 8b 5d b0                           	mov r11, qword ptr [rbp - 0x50]
0x1721a:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x1721e:   c1 e0 18                              	shl eax, 0x18
0x17221:   41 31 c1                              	xor r9d, eax
0x17224:   4c 8b 5d b8                           	mov r11, qword ptr [rbp - 0x48]
0x17228:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x1722c:   c1 e0 10                              	shl eax, 0x10
0x1722f:   41 31 c1                              	xor r9d, eax
0x17232:   4c 8b 5d c0                           	mov r11, qword ptr [rbp - 0x40]
0x17236:   41 0f b6 03                           	movzx eax, byte ptr [r11]
0x1723a:   c1 e0 08                              	shl eax, 8
0x1723d:   41 31 c1                              	xor r9d, eax
0x17240:   4c 8d 77 10                           	lea r14, [rdi + 0x10]
0x17244:   3b 4d d4                              	cmp ecx, dword ptr [rbp - 0x2c]
0x17247:   8b 45 d4                              	mov eax, dword ptr [rbp - 0x2c]
0x1724a:   0f 4e c1                              	cmovle eax, ecx
0x1724d:   89 45 d0                              	mov dword ptr [rbp - 0x30], eax
0x17250:   83 e8 01                              	sub eax, 1
0x17253:   85 c0                                 	test eax, eax
0x17255:   0f 8e 60 01 00 00                     	jle 0x173bb <rijndaelDecryptRound+0x2d0>
0x1725b:   8b 45 d0                              	mov eax, dword ptr [rbp - 0x30]
0x1725e:   83 e8 02                              	sub eax, 2
0x17261:   48 c1 e0 04                           	shl rax, 4
0x17265:   4c 8d 7c 07 20                        	lea r15, [rdi + rax + 0x20]
0x1726a:   4c 89 f0                              	mov rax, r14
0x1726d:   48 89 d7                              	mov rdi, rdx
0x17270:   89 f2                                 	mov edx, esi
0x17272:   89 9d 48 ff ff ff                     	mov dword ptr [rbp - 0xb8], ebx
0x17278:   44 89 cb                              	mov ebx, r9d
0x1727b:   41 89 c9                              	mov r9d, ecx
0x1727e:   45 89 d3                              	mov r11d, r10d
0x17281:   41 c1 eb 18                           	shr r11d, 0x18
0x17285:   45 89 db                              	mov r11d, r11d
0x17288:   0f b6 b5 48 ff ff ff                  	movzx esi, byte ptr [rbp - 0xb8]
0x1728f:   47 8b a4 98 00 14 00 00               	mov r12d, dword ptr [r8 + r11*4 + 0x1400]
0x17297:   45 33 a4 b0 00 20 00 00               	xor r12d, dword ptr [r8 + rsi*4 + 0x2000]
0x1729f:   44 33 20                              	xor r12d, dword ptr [rax]
0x172a2:   89 de                                 	mov esi, ebx
0x172a4:   c1 ee 10                              	shr esi, 0x10
0x172a7:   40 0f b6 f6                           	movzx esi, sil
0x172ab:   45 33 a4 b0 00 18 00 00               	xor r12d, dword ptr [r8 + rsi*4 + 0x1800]
0x172b3:   0f b6 f6                              	movzx esi, dh
0x172b6:   45 33 a4 b0 00 1c 00 00               	xor r12d, dword ptr [r8 + rsi*4 + 0x1c00]
0x172be:   44 8b 9d 48 ff ff ff                  	mov r11d, dword ptr [rbp - 0xb8]
0x172c5:   41 c1 eb 18                           	shr r11d, 0x18
0x172c9:   45 89 db                              	mov r11d, r11d
0x172cc:   0f b6 f2                              	movzx esi, dl
0x172cf:   47 8b ac 98 00 14 00 00               	mov r13d, dword ptr [r8 + r11*4 + 0x1400]
0x172d7:   45 33 ac b0 00 20 00 00               	xor r13d, dword ptr [r8 + rsi*4 + 0x2000]
0x172df:   44 33 68 04                           	xor r13d, dword ptr [rax + 4]
0x172e3:   44 89 d6                              	mov esi, r10d
0x172e6:   c1 ee 10                              	shr esi, 0x10
0x172e9:   40 0f b6 f6                           	movzx esi, sil
0x172ed:   45 33 ac b0 00 18 00 00               	xor r13d, dword ptr [r8 + rsi*4 + 0x1800]
0x172f5:   0f b6 f7                              	movzx esi, bh
0x172f8:   45 33 ac b0 00 1c 00 00               	xor r13d, dword ptr [r8 + rsi*4 + 0x1c00]
0x17300:   41 89 d3                              	mov r11d, edx
0x17303:   41 c1 eb 18                           	shr r11d, 0x18
0x17307:   45 89 db                              	mov r11d, r11d
0x1730a:   0f b6 f3                              	movzx esi, bl
0x1730d:   47 8b 9c 98 00 14 00 00               	mov r11d, dword ptr [r8 + r11*4 + 0x1400]
0x17315:   45 33 9c b0 00 20 00 00               	xor r11d, dword ptr [r8 + rsi*4 + 0x2000]
0x1731d:   44 33 58 08                           	xor r11d, dword ptr [rax + 8]
0x17321:   8b b5 48 ff ff ff                     	mov esi, dword ptr [rbp - 0xb8]
0x17327:   c1 ee 10                              	shr esi, 0x10
0x1732a:   40 0f b6 f6                           	movzx esi, sil
0x1732e:   45 33 9c b0 00 18 00 00               	xor r11d, dword ptr [r8 + rsi*4 + 0x1800]
0x17336:   4c 89 d1                              	mov rcx, r10
0x17339:   0f b6 f5                              	movzx esi, ch
0x1733c:   45 33 9c b0 00 1c 00 00               	xor r11d, dword ptr [r8 + rsi*4 + 0x1c00]
0x17344:   c1 eb 18                              	shr ebx, 0x18
0x17347:   89 db                                 	mov ebx, ebx
0x17349:   45 0f b6 d2                           	movzx r10d, r10b
0x1734d:   41 8b 9c 98 00 14 00 00               	mov ebx, dword ptr [r8 + rbx*4 + 0x1400]
0x17355:   43 33 9c 90 00 20 00 00               	xor ebx, dword ptr [r8 + r10*4 + 0x2000]
0x1735d:   33 58 0c                              	xor ebx, dword ptr [rax + 0xc]
0x17360:   c1 ea 10                              	shr edx, 0x10
0x17363:   0f b6 d2                              	movzx edx, dl
0x17366:   41 33 9c 90 00 18 00 00               	xor ebx, dword ptr [r8 + rdx*4 + 0x1800]
0x1736e:   8b 95 48 ff ff ff                     	mov edx, dword ptr [rbp - 0xb8]
0x17374:   0f b6 ce                              	movzx ecx, dh
0x17377:   41 33 9c 88 00 1c 00 00               	xor ebx, dword ptr [r8 + rcx*4 + 0x1c00]
0x1737f:   48 83 c0 10                           	add rax, 0x10
0x17383:   4c 39 f8                              	cmp rax, r15
0x17386:   74 12                                 	je 0x1739a <rijndaelDecryptRound+0x2af>
0x17388:   44 89 da                              	mov edx, r11d
0x1738b:   44 89 ad 48 ff ff ff                  	mov dword ptr [rbp - 0xb8], r13d
0x17392:   45 89 e2                              	mov r10d, r12d
0x17395:   e9 e4 fe ff ff                        	jmp 0x1727e <rijndaelDecryptRound+0x193>
0x1739a:   48 89 fa                              	mov rdx, rdi
0x1739d:   44 89 c9                              	mov ecx, r9d
0x173a0:   41 89 d9                              	mov r9d, ebx
0x173a3:   8b 45 d0                              	mov eax, dword ptr [rbp - 0x30]
0x173a6:   83 e8 02                              	sub eax, 2
0x173a9:   48 c1 e0 04                           	shl rax, 4
0x173ad:   4e 8d 74 30 10                        	lea r14, [rax + r14 + 0x10]
0x173b2:   44 89 de                              	mov esi, r11d
0x173b5:   44 89 eb                              	mov ebx, r13d
0x173b8:   45 89 e2                              	mov r10d, r12d
0x173bb:   0f b6 c3                              	movzx eax, bl
0x173be:   41 0f b6 84 80 00 24 00 00            	movzx eax, byte ptr [r8 + rax*4 + 0x2400]
0x173c7:   44 89 d7                              	mov edi, r10d
0x173ca:   c1 ef 18                              	shr edi, 0x18
0x173cd:   89 ff                                 	mov edi, edi
0x173cf:   41 8b bc b8 00 24 00 00               	mov edi, dword ptr [r8 + rdi*4 + 0x2400]
0x173d7:   81 e7 00 00 00 ff                     	and edi, 0xff000000
0x173dd:   31 c7                                 	xor edi, eax
0x173df:   44 89 c8                              	mov eax, r9d
0x173e2:   c1 e8 10                              	shr eax, 0x10
0x173e5:   0f b6 c0                              	movzx eax, al
0x173e8:   41 8b 84 80 00 24 00 00               	mov eax, dword ptr [r8 + rax*4 + 0x2400]
0x173f0:   25 00 00 ff 00                        	and eax, 0xff0000
0x173f5:   31 c7                                 	xor edi, eax
0x173f7:   48 89 f0                              	mov rax, rsi
0x173fa:   0f b6 c4                              	movzx eax, ah
0x173fd:   41 8b 84 80 00 24 00 00               	mov eax, dword ptr [r8 + rax*4 + 0x2400]
0x17405:   25 00 ff 00 00                        	and eax, 0xff00
0x1740a:   31 c7                                 	xor edi, eax
0x1740c:   40 0f b6 c6                           	movzx eax, sil
0x17410:   45 0f b6 9c 80 00 24 00 00            	movzx r11d, byte ptr [r8 + rax*4 + 0x2400]
0x17419:   89 d8                                 	mov eax, ebx
0x1741b:   c1 e8 18                              	shr eax, 0x18
0x1741e:   89 c0                                 	mov eax, eax
0x17420:   41 8b 84 80 00 24 00 00               	mov eax, dword ptr [r8 + rax*4 + 0x2400]
0x17428:   25 00 00 00 ff                        	and eax, 0xff000000
0x1742d:   44 31 d8                              	xor eax, r11d
0x17430:   45 89 d3                              	mov r11d, r10d
0x17433:   41 c1 eb 10                           	shr r11d, 0x10
0x17437:   45 0f b6 db                           	movzx r11d, r11b
0x1743b:   47 8b 9c 98 00 24 00 00               	mov r11d, dword ptr [r8 + r11*4 + 0x2400]
0x17443:   41 81 e3 00 00 ff 00                  	and r11d, 0xff0000
0x1744a:   41 89 c5                              	mov r13d, eax
0x1744d:   45 31 dd                              	xor r13d, r11d
0x17450:   4c 89 c8                              	mov rax, r9
0x17453:   0f b6 c4                              	movzx eax, ah
0x17456:   45 8b 9c 80 00 24 00 00               	mov r11d, dword ptr [r8 + rax*4 + 0x2400]
0x1745e:   41 81 e3 00 ff 00 00                  	and r11d, 0xff00
0x17465:   45 31 dd                              	xor r13d, r11d
0x17468:   45 0f b6 d9                           	movzx r11d, r9b
0x1746c:   47 0f b6 9c 98 00 24 00 00            	movzx r11d, byte ptr [r8 + r11*4 + 0x2400]
0x17475:   41 89 f4                              	mov r12d, esi
0x17478:   41 c1 ec 18                           	shr r12d, 0x18
0x1747c:   45 89 e4                              	mov r12d, r12d
0x1747f:   47 8b a4 a0 00 24 00 00               	mov r12d, dword ptr [r8 + r12*4 + 0x2400]
0x17487:   41 81 e4 00 00 00 ff                  	and r12d, 0xff000000
0x1748e:   45 31 dc                              	xor r12d, r11d
0x17491:   41 89 db                              	mov r11d, ebx
0x17494:   41 c1 eb 10                           	shr r11d, 0x10
0x17498:   45 0f b6 db                           	movzx r11d, r11b
0x1749c:   47 8b 9c 98 00 24 00 00               	mov r11d, dword ptr [r8 + r11*4 + 0x2400]
0x174a4:   41 81 e3 00 00 ff 00                  	and r11d, 0xff0000
0x174ab:   45 31 dc                              	xor r12d, r11d
0x174ae:   4c 89 d0                              	mov rax, r10
0x174b1:   0f b6 c4                              	movzx eax, ah
0x174b4:   45 8b 9c 80 00 24 00 00               	mov r11d, dword ptr [r8 + rax*4 + 0x2400]
0x174bc:   41 81 e3 00 ff 00 00                  	and r11d, 0xff00
0x174c3:   45 31 e3                              	xor r11d, r12d
0x174c6:   45 0f b6 d2                           	movzx r10d, r10b
0x174ca:   47 0f b6 94 90 00 24 00 00            	movzx r10d, byte ptr [r8 + r10*4 + 0x2400]
0x174d3:   41 c1 e9 18                           	shr r9d, 0x18
0x174d7:   45 89 c9                              	mov r9d, r9d
0x174da:   47 8b 8c 88 00 24 00 00               	mov r9d, dword ptr [r8 + r9*4 + 0x2400]
0x174e2:   41 81 e1 00 00 00 ff                  	and r9d, 0xff000000
0x174e9:   45 31 ca                              	xor r10d, r9d
0x174ec:   c1 ee 10                              	shr esi, 0x10
0x174ef:   40 0f b6 f6                           	movzx esi, sil
0x174f3:   45 8b 8c b0 00 24 00 00               	mov r9d, dword ptr [r8 + rsi*4 + 0x2400]
0x174fb:   41 81 e1 00 00 ff 00                  	and r9d, 0xff0000
0x17502:   45 31 ca                              	xor r10d, r9d
0x17505:   0f b6 df                              	movzx ebx, bh
0x17508:   45 8b 8c 98 00 24 00 00               	mov r9d, dword ptr [r8 + rbx*4 + 0x2400]
0x17510:   41 81 e1 00 ff 00 00                  	and r9d, 0xff00
0x17517:   45 31 ca                              	xor r10d, r9d
0x1751a:   3b 4d d4                              	cmp ecx, dword ptr [rbp - 0x2c]
0x1751d:   75 0f                                 	jne 0x1752e <rijndaelDecryptRound+0x443>
0x1751f:   41 33 3e                              	xor edi, dword ptr [r14]
0x17522:   45 33 6e 04                           	xor r13d, dword ptr [r14 + 4]
0x17526:   45 33 5e 08                           	xor r11d, dword ptr [r14 + 8]
0x1752a:   45 33 56 0c                           	xor r10d, dword ptr [r14 + 0xc]
0x1752e:   89 f9                                 	mov ecx, edi
0x17530:   c1 e9 18                              	shr ecx, 0x18
0x17533:   88 0a                                 	mov byte ptr [rdx], cl
0x17535:   89 fa                                 	mov edx, edi
0x17537:   c1 ea 10                              	shr edx, 0x10
0x1753a:   48 8b 8d 58 ff ff ff                  	mov rcx, qword ptr [rbp - 0xa8]
0x17541:   88 11                                 	mov byte ptr [rcx], dl
0x17543:   89 fa                                 	mov edx, edi
0x17545:   c1 ea 08                              	shr edx, 8
0x17548:   48 8b 9d 60 ff ff ff                  	mov rbx, qword ptr [rbp - 0xa0]
0x1754f:   88 13                                 	mov byte ptr [rbx], dl
0x17551:   48 8b b5 68 ff ff ff                  	mov rsi, qword ptr [rbp - 0x98]
0x17558:   40 88 3e                              	mov byte ptr [rsi], dil
0x1755b:   44 89 ea                              	mov edx, r13d
0x1755e:   c1 ea 18                              	shr edx, 0x18
0x17561:   4c 8b 8d 70 ff ff ff                  	mov r9, qword ptr [rbp - 0x90]
0x17568:   41 88 11                              	mov byte ptr [r9], dl
0x1756b:   44 89 ea                              	mov edx, r13d
0x1756e:   c1 ea 10                              	shr edx, 0x10
0x17571:   48 8b 85 78 ff ff ff                  	mov rax, qword ptr [rbp - 0x88]
0x17578:   88 10                                 	mov byte ptr [rax], dl
0x1757a:   44 89 ea                              	mov edx, r13d
0x1757d:   c1 ea 08                              	shr edx, 8
0x17580:   48 8b 4d 80                           	mov rcx, qword ptr [rbp - 0x80]
0x17584:   88 11                                 	mov byte ptr [rcx], dl
0x17586:   48 8b 5d 88                           	mov rbx, qword ptr [rbp - 0x78]
0x1758a:   44 88 2b                              	mov byte ptr [rbx], r13b
0x1758d:   44 89 d8                              	mov eax, r11d
0x17590:   c1 e8 18                              	shr eax, 0x18
0x17593:   48 8b 75 90                           	mov rsi, qword ptr [rbp - 0x70]
0x17597:   88 06                                 	mov byte ptr [rsi], al
0x17599:   44 89 d8                              	mov eax, r11d
0x1759c:   c1 e8 10                              	shr eax, 0x10
0x1759f:   4c 8b 4d 98                           	mov r9, qword ptr [rbp - 0x68]
0x175a3:   41 88 01                              	mov byte ptr [r9], al
0x175a6:   44 89 d8                              	mov eax, r11d
0x175a9:   c1 e8 08                              	shr eax, 8
0x175ac:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x175b0:   88 02                                 	mov byte ptr [rdx], al
0x175b2:   48 8b 4d a8                           	mov rcx, qword ptr [rbp - 0x58]
0x175b6:   44 88 19                              	mov byte ptr [rcx], r11b
0x175b9:   44 89 d0                              	mov eax, r10d
0x175bc:   c1 e8 18                              	shr eax, 0x18
0x175bf:   48 8b 5d b0                           	mov rbx, qword ptr [rbp - 0x50]
0x175c3:   88 03                                 	mov byte ptr [rbx], al
; data inside code section at 0x175c5 -- 0x175c7
0x175c5:   44 89                                              |D.              |
; function: cipherUpdateRounds at 0x175c7 -- 0x175f7
0x175c7:   d0 c1                                 	rol cl, 1
0x175c9:   e8 10 48 8b 75                        	call 0x758cbdde <unknown_758cbdde>
0x175ce:   b8 88 06 44 89                        	mov eax, 0x89440688
0x175d3:   d0 c1                                 	rol cl, 1
0x175d5:   e8 08 4c 8b 4d                        	call 0x4d8cc1e2 <unknown_4d8cc1e2>
0x175da:   c0 41 88 01                           	rol byte ptr [rcx - 0x78], 1
0x175de:   4c 8b 5d c8                           	mov r11, qword ptr [rbp - 0x38]
0x175e2:   45 88 13                              	mov byte ptr [r11], r10b
0x175e5:   48 81 c4 90 00 00 00                  	add rsp, 0x90
0x175ec:   5b                                    	pop rbx
0x175ed:   41 5c                                 	pop r12
0x175ef:   41 5d                                 	pop r13
0x175f1:   41 5e                                 	pop r14
0x175f3:   41 5f                                 	pop r15
0x175f5:   c9                                    	leave 
0x175f6:   c3                                    	ret 
; function: cipherUpdateRounds at 0x175f7 -- 0x1779f
0x175f7:   55                                    	push rbp
0x175f8:   48 89 e5                              	mov rbp, rsp
0x175fb:   48 81 ec 20 01 00 00                  	sub rsp, 0x120
0x17602:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x17606:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x1760a:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x1760e:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x17612:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x17616:   e8 d5 75 02 00                        	call 0x3ebf0 <mcount>
0x1761b:   49 89 d6                              	mov r14, rdx
0x1761e:   48 8b 45 10                           	mov rax, qword ptr [rbp + 0x10]
0x17622:   48 89 85 08 ff ff ff                  	mov qword ptr [rbp - 0xf8], rax
0x17629:   65 48 8b 14 25 28 00 00 00            	mov rdx, qword ptr gs:[0x28]
0x17632:   48 89 55 c8                           	mov qword ptr [rbp - 0x38], rdx
0x17636:   31 d2                                 	xor edx, edx
0x17638:   48 85 ff                              	test rdi, rdi
0x1763b:   74 05                                 	je 0x17642 <cipherUpdateRounds+0x4b>
0x1763d:   48 85 f6                              	test rsi, rsi
0x17640:   75 0a                                 	jne 0x1764c <cipherUpdateRounds+0x55>
0x17642:   b8 fb ff ff ff                        	mov eax, 0xfffffffb
0x17647:   e9 5a 01 00 00                        	jmp 0x177a6
0x1764c:   0f b6 16                              	movzx edx, byte ptr [rsi]
0x1764f:   84 d2                                 	test dl, dl
0x17651:   74 1b                                 	je 0x1766e <cipherUpdateRounds+0x77>
0x17653:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x17658:   80 fa 01                              	cmp dl, 1
0x1765b:   0f 85 45 01 00 00                     	jne 0x177a6
0x17661:   85 c9                                 	test ecx, ecx
0x17663:   0f 8f a5 00 00 00                     	jg 0x1770e <cipherUpdateRounds+0x117>
0x17669:   e9 33 01 00 00                        	jmp 0x177a1
0x1766e:   85 c9                                 	test ecx, ecx
0x17670:   0f 8e 2b 01 00 00                     	jle 0x177a1
0x17676:   48 8d 46 50                           	lea rax, [rsi + 0x50]
0x1767a:   48 89 85 00 ff ff ff                  	mov qword ptr [rbp - 0x100], rax
0x17681:   c7 85 ec fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x114], 0
0x1768b:   89 8d fc fe ff ff                     	mov dword ptr [rbp - 0x104], ecx
0x17691:   4c 89 85 f0 fe ff ff                  	mov qword ptr [rbp - 0x110], r8
0x17698:   49 89 f5                              	mov r13, rsi
0x1769b:   bb 00 00 00 00                        	mov ebx, 0
0x176a0:   45 89 cf                              	mov r15d, r9d
0x176a3:   4c 63 e3                              	movsxd r12, ebx
0x176a6:   4b 8d 04 26                           	lea rax, [r14 + r12]
0x176aa:   48 8b 10                              	mov rdx, qword ptr [rax]
0x176ad:   48 89 95 10 ff ff ff                  	mov qword ptr [rbp - 0xf0], rdx
0x176b4:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x176b8:   48 89 85 18 ff ff ff                  	mov qword ptr [rbp - 0xe8], rax
0x176bf:   41 8b 75 4c                           	mov esi, dword ptr [r13 + 0x4c]
0x176c3:   4c 8b 85 08 ff ff ff                  	mov r8, qword ptr [rbp - 0xf8]
0x176ca:   44 89 f9                              	mov ecx, r15d
0x176cd:   48 8d 95 10 ff ff ff                  	lea rdx, [rbp - 0xf0]
0x176d4:   48 8b bd 00 ff ff ff                  	mov rdi, qword ptr [rbp - 0x100]
0x176db:   e8 05 f5 ff ff                        	call 0x16be5 <rijndaelEncryptRound>
0x176e0:   4c 03 a5 f0 fe ff ff                  	add r12, qword ptr [rbp - 0x110]
0x176e7:   48 8b 85 10 ff ff ff                  	mov rax, qword ptr [rbp - 0xf0]
0x176ee:   49 89 04 24                           	mov qword ptr [r12], rax
0x176f2:   48 8b 85 18 ff ff ff                  	mov rax, qword ptr [rbp - 0xe8]
0x176f9:   49 89 44 24 08                        	mov qword ptr [r12 + 8], rax
0x176fe:   83 c3 10                              	add ebx, 0x10
0x17701:   39 9d fc fe ff ff                     	cmp dword ptr [rbp - 0x104], ebx
0x17707:   7f 9a                                 	jg 0x176a3 <cipherUpdateRounds+0xac>
0x17709:   e9 93 00 00 00                        	jmp 0x177a1
0x1770e:   48 8d 56 50                           	lea rdx, [rsi + 0x50]
0x17712:   48 89 95 00 ff ff ff                  	mov qword ptr [rbp - 0x100], rdx
0x17719:   c7 85 ec fe ff ff 00 00 00 00         	mov dword ptr [rbp - 0x114], 0
0x17723:   89 8d fc fe ff ff                     	mov dword ptr [rbp - 0x104], ecx
0x17729:   4c 89 85 f0 fe ff ff                  	mov qword ptr [rbp - 0x110], r8
0x17730:   49 89 f5                              	mov r13, rsi
0x17733:   bb 00 00 00 00                        	mov ebx, 0
0x17738:   45 89 cf                              	mov r15d, r9d
0x1773b:   4c 63 e3                              	movsxd r12, ebx
0x1773e:   4b 8d 04 26                           	lea rax, [r14 + r12]
0x17742:   48 8b 10                              	mov rdx, qword ptr [rax]
0x17745:   48 89 95 10 ff ff ff                  	mov qword ptr [rbp - 0xf0], rdx
0x1774c:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x17750:   48 89 85 18 ff ff ff                  	mov qword ptr [rbp - 0xe8], rax
0x17757:   41 8b 75 4c                           	mov esi, dword ptr [r13 + 0x4c]
0x1775b:   4c 8b 85 08 ff ff ff                  	mov r8, qword ptr [rbp - 0xf8]
0x17762:   44 89 f9                              	mov ecx, r15d
0x17765:   48 8d 95 10 ff ff ff                  	lea rdx, [rbp - 0xf0]
0x1776c:   48 8b bd 00 ff ff ff                  	mov rdi, qword ptr [rbp - 0x100]
0x17773:   e8 73 f9 ff ff                        	call 0x170eb <rijndaelDecryptRound>
0x17778:   4c 03 a5 f0 fe ff ff                  	add r12, qword ptr [rbp - 0x110]
0x1777f:   48 8b 85 10 ff ff ff                  	mov rax, qword ptr [rbp - 0xf0]
0x17786:   49 89 04 24                           	mov qword ptr [r12], rax
0x1778a:   48 8b 85 18 ff ff ff                  	mov rax, qword ptr [rbp - 0xe8]
0x17791:   49 89 44 24 08                        	mov qword ptr [r12 + 8], rax
0x17796:   83 c3 10                              	add ebx, 0x10
0x17799:   39 9d fc fe ff ff                     	cmp dword ptr [rbp - 0x104], ebx
; data inside code section at 0x1779f -- 0x177a0
0x1779f:   7f                                                 |.               |
; function: cipherInit at 0x177a0 -- 0x177d0
; function: cipherInit at 0x177d0 -- 0x17873
0x177d0:   55                                    	push rbp
0x177d1:   48 89 e5                              	mov rbp, rsp
0x177d4:   e8 17 74 02 00                        	call 0x3ebf0 <mcount>
0x177d9:   8d 4e ff                              	lea ecx, [rsi - 1]
0x177dc:   b8 fc ff ff ff                        	mov eax, 0xfffffffc
0x177e1:   80 f9 02                              	cmp cl, 2
0x177e4:   0f 87 ba 00 00 00                     	ja 0x178a4
0x177ea:   40 88 37                              	mov byte ptr [rdi], sil
0x177ed:   48 85 d2                              	test rdx, rdx
0x177f0:   0f 84 8f 00 00 00                     	je 0x17885
0x177f6:   b8 00 00 00 00                        	mov eax, 0
0x177fb:   0f be 0c 02                           	movsx ecx, byte ptr [rdx + rax]
0x177ff:   41 89 c8                              	mov r8d, ecx
0x17802:   8d 71 d0                              	lea esi, [rcx - 0x30]
0x17805:   83 fe 09                              	cmp esi, 9
0x17808:   77 07                                 	ja 0x17811 <cipherInit+0x41>
0x1780a:   89 f1                                 	mov ecx, esi
0x1780c:   c1 e1 04                              	shl ecx, 4
0x1780f:   eb 21                                 	jmp 0x17832 <cipherInit+0x62>
0x17811:   41 8d 70 9f                           	lea esi, [r8 - 0x61]
0x17815:   83 fe 05                              	cmp esi, 5
0x17818:   77 08                                 	ja 0x17822 <cipherInit+0x52>
0x1781a:   83 e9 57                              	sub ecx, 0x57
0x1781d:   c1 e1 04                              	shl ecx, 4
0x17820:   eb 10                                 	jmp 0x17832 <cipherInit+0x62>
0x17822:   41 83 e8 41                           	sub r8d, 0x41
0x17826:   41 83 f8 05                           	cmp r8d, 5
0x1782a:   77 73                                 	ja 0x1789f
0x1782c:   83 e9 37                              	sub ecx, 0x37
0x1782f:   c1 e1 04                              	shl ecx, 4
0x17832:   0f be 74 02 01                        	movsx esi, byte ptr [rdx + rax + 1]
0x17837:   41 89 f1                              	mov r9d, esi
0x1783a:   44 8d 46 d0                           	lea r8d, [rsi - 0x30]
0x1783e:   41 83 f8 09                           	cmp r8d, 9
0x17842:   77 07                                 	ja 0x1784b <cipherInit+0x7b>
0x17844:   44 89 c6                              	mov esi, r8d
0x17847:   31 ce                                 	xor esi, ecx
0x17849:   eb 20                                 	jmp 0x1786b <cipherInit+0x9b>
0x1784b:   45 8d 41 9f                           	lea r8d, [r9 - 0x61]
0x1784f:   41 83 f8 05                           	cmp r8d, 5
0x17853:   77 07                                 	ja 0x1785c <cipherInit+0x8c>
0x17855:   83 ee 57                              	sub esi, 0x57
0x17858:   31 ce                                 	xor esi, ecx
0x1785a:   eb 0f                                 	jmp 0x1786b <cipherInit+0x9b>
0x1785c:   41 83 e9 41                           	sub r9d, 0x41
0x17860:   41 83 f9 05                           	cmp r9d, 5
0x17864:   77 39                                 	ja 0x1789f
0x17866:   83 ee 37                              	sub esi, 0x37
0x17869:   31 ce                                 	xor esi, ecx
0x1786b:   40 88 77 01                           	mov byte ptr [rdi + 1], sil
0x1786f:   48 83 c0 02                           	add rax, 2
; data inside code section at 0x17873 -- 0x17876
0x17873:   48 83 c7                                           |H..             |
; function: makeKey at 0x17876 -- 0x178a6
0x17876:   01 48 83                              	add dword ptr [rax - 0x7d], ecx
0x17879:   f8                                    	clc 
0x1787a:   20 0f                                 	and byte ptr [rdi], cl
0x1787c:   85 7a ff                              	test dword ptr [rdx - 1], edi
; data inside code section at 0x1787f -- 0x17885
0x1787f:   ff ff b0 01 eb 1f                                  |......          |
0x17885:   48 83 c7 01                           	add rdi, 1
0x17889:   48 c7 07 00 00 00 00                  	mov qword ptr [rdi], 0
0x17890:   48 c7 47 08 00 00 00 00               	mov qword ptr [rdi + 8], 0
0x17898:   b8 01 00 00 00                        	mov eax, 1
0x1789d:   eb 05                                 	jmp 0x178a4 <makeKey+0x2e>
0x1789f:   b8 f9 ff ff ff                        	mov eax, 0xfffffff9
0x178a4:   c9                                    	leave 
0x178a5:   c3                                    	ret 
; function: makeKey at 0x178a6 -- 0x17a2e
0x178a6:   55                                    	push rbp
0x178a7:   48 89 e5                              	mov rbp, rsp
0x178aa:   41 56                                 	push r14
0x178ac:   41 55                                 	push r13
0x178ae:   41 54                                 	push r12
0x178b0:   53                                    	push rbx
0x178b1:   48 83 ec 30                           	sub rsp, 0x30
0x178b5:   e8 36 73 02 00                        	call 0x3ebf0 <mcount>
0x178ba:   48 89 fb                              	mov rbx, rdi
0x178bd:   41 89 d4                              	mov r12d, edx
0x178c0:   4d 89 c5                              	mov r13, r8
0x178c3:   41 89 f6                              	mov r14d, esi
0x178c6:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x178cf:   48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x178d3:   31 c0                                 	xor eax, eax
0x178d5:   b8 fd ff ff ff                        	mov eax, 0xfffffffd
0x178da:   48 85 ff                              	test rdi, rdi
0x178dd:   0f 84 57 01 00 00                     	je 0x17a3a
0x178e3:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x178e8:   40 80 fe 01                           	cmp sil, 1
0x178ec:   0f 87 48 01 00 00                     	ja 0x17a3a
0x178f2:   40 88 33                              	mov byte ptr [rbx], sil
0x178f5:   81 fa 80 00 00 00                     	cmp edx, 0x80
0x178fb:   74 14                                 	je 0x17911 <makeKey+0x6b>
0x178fd:   81 fa c0 00 00 00                     	cmp edx, 0xc0
0x17903:   74 0c                                 	je 0x17911 <makeKey+0x6b>
0x17905:   81 fa 00 01 00 00                     	cmp edx, 0x100
0x1790b:   0f 85 24 01 00 00                     	jne 0x17a35
0x17911:   44 89 63 04                           	mov dword ptr [rbx + 4], r12d
0x17915:   48 85 c9                              	test rcx, rcx
0x17918:   74 1e                                 	je 0x17938 <makeKey+0x92>
0x1791a:   41 8d 54 24 03                        	lea edx, [r12 + 3]
0x1791f:   45 85 e4                              	test r12d, r12d
0x17922:   41 0f 49 d4                           	cmovns edx, r12d
0x17926:   c1 fa 02                              	sar edx, 2
0x17929:   48 63 d2                              	movsxd rdx, edx
0x1792c:   48 8d 7b 08                           	lea rdi, [rbx + 8]
0x17930:   48 89 ce                              	mov rsi, rcx
0x17933:   e8 c8 72 02 00                        	call 0x3ec00 <strncpy>
0x17938:   83 7b 04 07                           	cmp dword ptr [rbx + 4], 7
0x1793c:   0f 8e a3 00 00 00                     	jle 0x179e5 <makeKey+0x13f>
0x17942:   48 8d 4b 08                           	lea rcx, [rbx + 8]
0x17946:   48 8d 7d b0                           	lea rdi, [rbp - 0x50]
0x1794a:   be 00 00 00 00                        	mov esi, 0
0x1794f:   0f be 01                              	movsx eax, byte ptr [rcx]
0x17952:   41 89 c0                              	mov r8d, eax
0x17955:   8d 50 d0                              	lea edx, [rax - 0x30]
0x17958:   83 fa 09                              	cmp edx, 9
0x1795b:   77 07                                 	ja 0x17964 <makeKey+0xbe>
0x1795d:   89 d0                                 	mov eax, edx
0x1795f:   c1 e0 04                              	shl eax, 4
0x17962:   eb 25                                 	jmp 0x17989 <makeKey+0xe3>
0x17964:   41 8d 50 9f                           	lea edx, [r8 - 0x61]
0x17968:   83 fa 05                              	cmp edx, 5
0x1796b:   77 08                                 	ja 0x17975 <makeKey+0xcf>
0x1796d:   83 e8 57                              	sub eax, 0x57
0x17970:   c1 e0 04                              	shl eax, 4
0x17973:   eb 14                                 	jmp 0x17989 <makeKey+0xe3>
0x17975:   41 83 e8 41                           	sub r8d, 0x41
0x17979:   41 83 f8 05                           	cmp r8d, 5
0x1797d:   0f 87 b2 00 00 00                     	ja 0x17a35
0x17983:   83 e8 37                              	sub eax, 0x37
0x17986:   c1 e0 04                              	shl eax, 4
0x17989:   0f be 51 01                           	movsx edx, byte ptr [rcx + 1]
0x1798d:   41 89 d1                              	mov r9d, edx
0x17990:   44 8d 42 d0                           	lea r8d, [rdx - 0x30]
0x17994:   41 83 f8 09                           	cmp r8d, 9
0x17998:   77 07                                 	ja 0x179a1 <makeKey+0xfb>
0x1799a:   44 89 c2                              	mov edx, r8d
0x1799d:   31 c2                                 	xor edx, eax
0x1799f:   eb 20                                 	jmp 0x179c1 <makeKey+0x11b>
0x179a1:   45 8d 41 9f                           	lea r8d, [r9 - 0x61]
0x179a5:   41 83 f8 05                           	cmp r8d, 5
0x179a9:   77 07                                 	ja 0x179b2 <makeKey+0x10c>
0x179ab:   83 ea 57                              	sub edx, 0x57
0x179ae:   31 c2                                 	xor edx, eax
0x179b0:   eb 0f                                 	jmp 0x179c1 <makeKey+0x11b>
0x179b2:   41 83 e9 41                           	sub r9d, 0x41
0x179b6:   41 83 f9 05                           	cmp r9d, 5
0x179ba:   77 79                                 	ja 0x17a35
0x179bc:   83 ea 37                              	sub edx, 0x37
0x179bf:   31 c2                                 	xor edx, eax
0x179c1:   88 17                                 	mov byte ptr [rdi], dl
0x179c3:   83 c6 01                              	add esi, 1
0x179c6:   48 83 c7 01                           	add rdi, 1
0x179ca:   8b 43 04                              	mov eax, dword ptr [rbx + 4]
0x179cd:   8d 50 07                              	lea edx, [rax + 7]
0x179d0:   85 c0                                 	test eax, eax
0x179d2:   0f 48 c2                              	cmovs eax, edx
0x179d5:   c1 f8 03                              	sar eax, 3
0x179d8:   39 f0                                 	cmp eax, esi
0x179da:   7e 09                                 	jle 0x179e5 <makeKey+0x13f>
0x179dc:   48 83 c1 02                           	add rcx, 2
0x179e0:   e9 6a ff ff ff                        	jmp 0x1794f <makeKey+0xa9>
0x179e5:   45 84 f6                              	test r14b, r14b
0x179e8:   75 18                                 	jne 0x17a02 <makeKey+0x15c>
0x179ea:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x179ee:   48 8d 7b 50                           	lea rdi, [rbx + 0x50]
0x179f2:   4c 89 e9                              	mov rcx, r13
0x179f5:   44 89 e2                              	mov edx, r12d
0x179f8:   e8 03 ec ff ff                        	call 0x16600 <rijndaelKeySetupEnc>
0x179fd:   89 43 4c                              	mov dword ptr [rbx + 0x4c], eax
0x17a00:   eb 16                                 	jmp 0x17a18 <makeKey+0x172>
0x17a02:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x17a06:   48 8d 7b 50                           	lea rdi, [rbx + 0x50]
0x17a0a:   4c 89 e9                              	mov rcx, r13
0x17a0d:   44 89 e2                              	mov edx, r12d
0x17a10:   e8 aa ef ff ff                        	call 0x169bf <rijndaelKeySetupDec>
0x17a15:   89 43 4c                              	mov dword ptr [rbx + 0x4c], eax
0x17a18:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x17a1c:   48 8d bb 40 01 00 00                  	lea rdi, [rbx + 0x140]
0x17a23:   4c 89 e9                              	mov rcx, r13
0x17a26:   44 89 e2                              	mov edx, r12d
0x17a29:   e8 d2 eb ff ff                        	call 0x16600 <rijndaelKeySetupEnc>
; data inside code section at 0x17a2e -- 0x17a30
0x17a2e:   b8 01                                              |..              |
; function: private_data at 0x17a30 -- 0x17a3a
0x17a30:   00 00                                 	add byte ptr [rax], al
0x17a32:   00 eb                                 	add bl, ch
; data inside code section at 0x17a34 -- 0x17a35
0x17a34:   05                                                 |.               |
0x17a35:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
; data inside code section at 0x17a3a -- 0x17a54
0x17a3a:   48 8b 55 d8 65 48 33 14  25 28 00 00 00 74 05 e8   |H.U.eH3.%(...t..|
0x17a4a:   5a 71 02 00 48 83 c4 30  5b 41                     |Zq..H..0[A      |
; function: get_reset_multi2_lib_flag at 0x17a54 -- 0x17a5b
0x17a54:   5c                                    	pop rsp
0x17a55:   41 5d                                 	pop r13
0x17a57:   41 5e                                 	pop r14
0x17a59:   c9                                    	leave 
0x17a5a:   c3                                    	ret 
; data inside code section at 0x17a5b -- 0x17a60
0x17a5b:   90 90 90 90 90                                     |.....           |
; function: private_data at 0x17a60 -- 0x17a71
0x17a60:   55                                    	push rbp
0x17a61:   48 89 e5                              	mov rbp, rsp
0x17a64:   e8 87 71 02 00                        	call 0x3ebf0 <mcount>
0x17a69:   48 85 ff                              	test rdi, rdi
0x17a6c:   74 0f                                 	je 0x17a7d
0x17a6e:   48 8b 07                              	mov rax, qword ptr [rdi]
; data inside code section at 0x17a71 -- 0x17a77
0x17a71:   48 8d 90 78 1a 09                                  |H..x..          |
; function: get_ProgramNumberByPid at 0x17a77 -- 0x17a84
0x17a77:   00 48 39                              	add byte ptr [rax + 0x39], cl
0x17a7a:   d7                                    	xlatb 
0x17a7b:   74 05                                 	je 0x17a82 <get_ProgramNumberByPid+0xb>
0x17a7d:   b8 00 00 00 00                        	mov eax, 0
0x17a82:   c9                                    	leave 
0x17a83:   c3                                    	ret 
; function: get_reset_multi2_lib_flag at 0x17a84 -- 0x17aa7
0x17a84:   55                                    	push rbp
0x17a85:   48 89 e5                              	mov rbp, rsp
0x17a88:   53                                    	push rbx
0x17a89:   e8 62 71 02 00                        	call 0x3ebf0 <mcount>
0x17a8e:   48 89 f3                              	mov rbx, rsi
0x17a91:   e8 ca ff ff ff                        	call 0x17a60 <private_data>
0x17a96:   0f b6 80 72 06 01 00                  	movzx eax, byte ptr [rax + 0x10672]
0x17a9d:   88 03                                 	mov byte ptr [rbx], al
0x17a9f:   b8 00 00 00 00                        	mov eax, 0
0x17aa4:   5b                                    	pop rbx
0x17aa5:   c9                                    	leave 
0x17aa6:   c3                                    	ret 
; function: get_ProgramNumberByPid at 0x17aa7 -- 0x17afc
0x17aa7:   55                                    	push rbp
0x17aa8:   48 89 e5                              	mov rbp, rsp
0x17aab:   41 54                                 	push r12
0x17aad:   53                                    	push rbx
0x17aae:   e8 3d 71 02 00                        	call 0x3ebf0 <mcount>
0x17ab3:   48 89 d3                              	mov rbx, rdx
0x17ab6:   41 89 f4                              	mov r12d, esi
0x17ab9:   e8 a2 ff ff ff                        	call 0x17a60 <private_data>
0x17abe:   44 8b 88 f8 03 00 00                  	mov r9d, dword ptr [rax + 0x3f8]
0x17ac5:   45 85 c9                              	test r9d, r9d
0x17ac8:   7e 68                                 	jle 0x17b32
0x17aca:   48 8b b8 00 04 00 00                  	mov rdi, qword ptr [rax + 0x400]
0x17ad1:   41 b8 00 00 00 00                     	mov r8d, 0
0x17ad7:   45 0f b7 e4                           	movzx r12d, r12w
0x17adb:   41 bb 00 00 00 00                     	mov r11d, 0
0x17ae1:   49 89 fa                              	mov r10, rdi
0x17ae4:   8b b7 40 01 00 00                     	mov esi, dword ptr [rdi + 0x140]
0x17aea:   85 f6                                 	test esi, esi
0x17aec:   7e 34                                 	jle 0x17b22
0x17aee:   48 8b 97 38 01 00 00                  	mov rdx, qword ptr [rdi + 0x138]
0x17af5:   44 39 22                              	cmp dword ptr [rdx], r12d
0x17af8:   75 1e                                 	jne 0x17b18
0x17afa:   eb 0c                                 	jmp 0x17b08
; function: function_17afc at 0x17afc -- 0x17b08
0x17afc:   8b 4a 08                              	mov ecx, dword ptr [rdx + 8]
0x17aff:   48 83 c2 08                           	add rdx, 8
0x17b03:   44 39 e1                              	cmp ecx, r12d
0x17b06:   75 13                                 	jne 0x17b1b
; data inside code section at 0x17b08 -- 0x17b0c
0x17b08:   41 8b 82 98                                        |A...            |
; function: set_bcas_card_exist at 0x17b0c -- 0x17b26
0x17b0c:   00 00                                 	add byte ptr [rax], al
0x17b0e:   00 89 03 b8 01 00                     	add byte ptr [rcx + 0x1b803], cl
0x17b14:   00 00                                 	add byte ptr [rax], al
0x17b16:   eb 1f                                 	jmp 0x17b37
0x17b18:   44 89 d8                              	mov eax, r11d
0x17b1b:   83 c0 01                              	add eax, 1
0x17b1e:   39 f0                                 	cmp eax, esi
0x17b20:   7c da                                 	jl 0x17afc <function_17afc>
0x17b22:   41 83 c0 01                           	add r8d, 1
; data inside code section at 0x17b26 -- 0x17b2b
0x17b26:   48 81 c7 80 07                                     |H....           |
; function: get_is_streamscramble at 0x17b2b -- 0x17b3c
0x17b2b:   00 00                                 	add byte ptr [rax], al
0x17b2d:   45 39 c8                              	cmp r8d, r9d
0x17b30:   7c af                                 	jl 0x17ae1
0x17b32:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x17b37:   5b                                    	pop rbx
0x17b38:   41 5c                                 	pop r12
0x17b3a:   c9                                    	leave 
0x17b3b:   c3                                    	ret 
; function: set_bcas_card_exist at 0x17b3c -- 0x17b4d
0x17b3c:   55                                    	push rbp
0x17b3d:   48 89 e5                              	mov rbp, rsp
0x17b40:   53                                    	push rbx
0x17b41:   e8 aa 70 02 00                        	call 0x3ebf0 <mcount>
0x17b46:   89 f3                                 	mov ebx, esi
0x17b48:   e8 13 ff ff ff                        	call 0x17a60 <private_data>
; data inside code section at 0x17b4d -- 0x17b4e
0x17b4d:   88                                                 |.               |
; function: set_is_streamscramble at 0x17b4e -- 0x17b5b
0x17b4e:   98                                    	cwde 
0x17b4f:   71 06                                 	jno 0x17b57 <set_is_streamscramble+0x9>
0x17b51:   01 00                                 	add dword ptr [rax], eax
; data inside code section at 0x17b53 -- 0x17b55
0x17b53:   b8 00                                              |..              |
0x17b55:   00 00                                 	add byte ptr [rax], al
0x17b57:   00 5b c9                              	add byte ptr [rbx - 0x37], bl
0x17b5a:   c3                                    	ret 
; function: get_is_streamscramble at 0x17b5b -- 0x17b6d
0x17b5b:   55                                    	push rbp
0x17b5c:   48 89 e5                              	mov rbp, rsp
0x17b5f:   53                                    	push rbx
0x17b60:   e8 8b 70 02 00                        	call 0x3ebf0 <mcount>
0x17b65:   48 89 f3                              	mov rbx, rsi
0x17b68:   e8 f3 fe ff ff                        	call 0x17a60 <private_data>
; function: get_prognum at 0x17b6d -- 0x17b7e
0x17b6d:   0f b6 80 70 06 01 00                  	movzx eax, byte ptr [rax + 0x10670]
0x17b74:   88 03                                 	mov byte ptr [rbx], al
0x17b76:   b8 00 00 00 00                        	mov eax, 0
0x17b7b:   5b                                    	pop rbx
0x17b7c:   c9                                    	leave 
0x17b7d:   c3                                    	ret 
; function: set_is_streamscramble at 0x17b7e -- 0x17b9d
0x17b7e:   55                                    	push rbp
0x17b7f:   48 89 e5                              	mov rbp, rsp
0x17b82:   53                                    	push rbx
0x17b83:   e8 68 70 02 00                        	call 0x3ebf0 <mcount>
0x17b88:   89 f3                                 	mov ebx, esi
0x17b8a:   e8 d1 fe ff ff                        	call 0x17a60 <private_data>
0x17b8f:   88 98 70 06 01 00                     	mov byte ptr [rax + 0x10670], bl
0x17b95:   b8 00 00 00 00                        	mov eax, 0
0x17b9a:   5b                                    	pop rbx
0x17b9b:   c9                                    	leave 
0x17b9c:   c3                                    	ret 
; function: get_prognum at 0x17b9d -- 0x17bae
0x17b9d:   55                                    	push rbp
0x17b9e:   48 89 e5                              	mov rbp, rsp
0x17ba1:   48 83 ec 10                           	sub rsp, 0x10
0x17ba5:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x17ba9:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
; function: enable_prognum_proc at 0x17bae -- 0x17bcb
0x17bae:   e8 3d 70 02 00                        	call 0x3ebf0 <mcount>
0x17bb3:   48 89 d3                              	mov rbx, rdx
0x17bb6:   41 89 f4                              	mov r12d, esi
0x17bb9:   e8 a2 fe ff ff                        	call 0x17a60 <private_data>
0x17bbe:   45 0f b6 e4                           	movzx r12d, r12b
0x17bc2:   42 0f b7 84 60 10 04 01 00            	movzx eax, word ptr [rax + r12*2 + 0x10410]
; data inside code section at 0x17bcb -- 0x17bcd
0x17bcb:   66 89                                              |f.              |
; function: set_prognum at 0x17bcd -- 0x17bde
0x17bcd:   03 b8 00 00 00 00                     	add edi, dword ptr [rax]
0x17bd3:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x17bd7:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x17bdc:   c9                                    	leave 
0x17bdd:   c3                                    	ret 
; function: enable_prognum_proc at 0x17bde -- 0x17bea
0x17bde:   55                                    	push rbp
0x17bdf:   48 89 e5                              	mov rbp, rsp
0x17be2:   53                                    	push rbx
0x17be3:   e8 08 70 02 00                        	call 0x3ebf0 <mcount>
0x17be8:   89 f3                                 	mov ebx, esi
; data inside code section at 0x17bea -- 0x17bed
0x17bea:   e8 71 fe                                           |.q.             |
; function: set_bcas_id at 0x17bed -- 0x17bee
; function: function_17bee at 0x17bee -- 0x17bfd
0x17bee:   ff 88 98 6c 06 01                     	dec dword ptr [rax + 0x1066c98]
0x17bf4:   00 b8 00 00 00 00                     	add byte ptr [rax], bh
0x17bfa:   5b                                    	pop rbx
0x17bfb:   c9                                    	leave 
0x17bfc:   c3                                    	ret 
; function: set_prognum at 0x17bfd -- 0x17c1d
0x17bfd:   55                                    	push rbp
0x17bfe:   48 89 e5                              	mov rbp, rsp
0x17c01:   53                                    	push rbx
0x17c02:   e8 e9 6f 02 00                        	call 0x3ebf0 <mcount>
0x17c07:   89 f3                                 	mov ebx, esi
0x17c09:   e8 52 fe ff ff                        	call 0x17a60 <private_data>
0x17c0e:   66 89 98 6e 06 01 00                  	mov word ptr [rax + 0x1066e], bx
0x17c15:   b8 00 00 00 00                        	mov eax, 0
0x17c1a:   5b                                    	pop rbx
0x17c1b:   c9                                    	leave 
0x17c1c:   c3                                    	ret 
; function: set_bcas_id at 0x17c1d -- 0x17c69
0x17c1d:   55                                    	push rbp
0x17c1e:   48 89 e5                              	mov rbp, rsp
0x17c21:   41 54                                 	push r12
0x17c23:   53                                    	push rbx
0x17c24:   e8 c7 6f 02 00                        	call 0x3ebf0 <mcount>
0x17c29:   48 89 f3                              	mov rbx, rsi
0x17c2c:   41 89 d4                              	mov r12d, edx
0x17c2f:   e8 2c fe ff ff                        	call 0x17a60 <private_data>
0x17c34:   48 85 c0                              	test rax, rax
0x17c37:   74 06                                 	je 0x17c3f <set_bcas_id+0x22>
0x17c39:   41 83 fc 09                           	cmp r12d, 9
0x17c3d:   7f 07                                 	jg 0x17c46 <set_bcas_id+0x29>
0x17c3f:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x17c44:   eb 54                                 	jmp 0x17c9a
0x17c46:   c7 80 24 06 01 00 00 00 00 00         	mov dword ptr [rax + 0x10624], 0
0x17c50:   0f b6 53 02                           	movzx edx, byte ptr [rbx + 2]
0x17c54:   89 90 24 06 01 00                     	mov dword ptr [rax + 0x10624], edx
0x17c5a:   0f b6 4b 03                           	movzx ecx, byte ptr [rbx + 3]
0x17c5e:   c1 e2 08                              	shl edx, 8
0x17c61:   09 ca                                 	or edx, ecx
0x17c63:   89 90 24 06 01 00                     	mov dword ptr [rax + 0x10624], edx
; data inside code section at 0x17c69 -- 0x17c6f
0x17c69:   c7 80 20 06 01 00                                  |.. ...          |
; function: get_b_cas_card_arib_std_b25 at 0x17c6f -- 0x17c93
0x17c6f:   00 00                                 	add byte ptr [rax], al
0x17c71:   00 00                                 	add byte ptr [rax], al
0x17c73:   48 8d 73 04                           	lea rsi, [rbx + 4]
0x17c77:   0f b6 4b 04                           	movzx ecx, byte ptr [rbx + 4]
0x17c7b:   8b 90 20 06 01 00                     	mov edx, dword ptr [rax + 0x10620]
0x17c81:   c1 e2 08                              	shl edx, 8
0x17c84:   09 ca                                 	or edx, ecx
0x17c86:   89 90 20 06 01 00                     	mov dword ptr [rax + 0x10620], edx
0x17c8c:   48 83 c3 01                           	add rbx, 1
0x17c90:   48 39 f3                              	cmp rbx, rsi
; function: set_b_cas_card_arib_std_b25 at 0x17c93 -- 0x17c9f
0x17c93:   75 e2                                 	jne 0x17c77
0x17c95:   b8 00 00 00 00                        	mov eax, 0
0x17c9a:   5b                                    	pop rbx
0x17c9b:   41 5c                                 	pop r12
0x17c9d:   c9                                    	leave 
0x17c9e:   c3                                    	ret 
; function: get_b_cas_card_arib_std_b25 at 0x17c9f -- 0x17cc1
0x17c9f:   55                                    	push rbp
0x17ca0:   48 89 e5                              	mov rbp, rsp
0x17ca3:   e8 48 6f 02 00                        	call 0x3ebf0 <mcount>
0x17ca8:   e8 b3 fd ff ff                        	call 0x17a60 <private_data>
0x17cad:   48 89 c2                              	mov rdx, rax
0x17cb0:   b8 00 00 00 00                        	mov eax, 0
0x17cb5:   48 85 d2                              	test rdx, rdx
0x17cb8:   74 07                                 	je 0x17cc1 <set_multi2_round_arib_std_b25>
0x17cba:   48 8b 82 18 06 01 00                  	mov rax, qword ptr [rdx + 0x10618]
; function: set_multi2_round_arib_std_b25 at 0x17cc1 -- 0x17cc3
0x17cc1:   c9                                    	leave 
0x17cc2:   c3                                    	ret 
; function: set_b_cas_card_arib_std_b25 at 0x17cc3 -- 0x17ce9
0x17cc3:   55                                    	push rbp
0x17cc4:   48 89 e5                              	mov rbp, rsp
0x17cc7:   53                                    	push rbx
0x17cc8:   e8 23 6f 02 00                        	call 0x3ebf0 <mcount>
0x17ccd:   48 89 f3                              	mov rbx, rsi
0x17cd0:   e8 8b fd ff ff                        	call 0x17a60 <private_data>
0x17cd5:   48 89 c2                              	mov rdx, rax
0x17cd8:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x17cdd:   48 85 d2                              	test rdx, rdx
0x17ce0:   74 0c                                 	je 0x17cee
0x17ce2:   48 89 9a 18 06 01 00                  	mov qword ptr [rdx + 0x10618], rbx
; function: proc_cat at 0x17ce9 -- 0x17cf1
0x17ce9:   b8 00 00 00 00                        	mov eax, 0
0x17cee:   5b                                    	pop rbx
0x17cef:   c9                                    	leave 
0x17cf0:   c3                                    	ret 
; function: set_multi2_round_arib_std_b25 at 0x17cf1 -- 0x17d19
0x17cf1:   55                                    	push rbp
0x17cf2:   48 89 e5                              	mov rbp, rsp
0x17cf5:   53                                    	push rbx
0x17cf6:   e8 f5 6e 02 00                        	call 0x3ebf0 <mcount>
0x17cfb:   89 f3                                 	mov ebx, esi
0x17cfd:   e8 5e fd ff ff                        	call 0x17a60 <private_data>
0x17d02:   48 89 c2                              	mov rdx, rax
0x17d05:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x17d0a:   48 85 d2                              	test rdx, rdx
0x17d0d:   74 07                                 	je 0x17d16 <set_multi2_round_arib_std_b25+0x25>
0x17d0f:   89 1a                                 	mov dword ptr [rdx], ebx
0x17d11:   b8 00 00 00 00                        	mov eax, 0
0x17d16:   5b                                    	pop rbx
0x17d17:   c9                                    	leave 
0x17d18:   c3                                    	ret 
; function: proc_cat at 0x17d19 -- 0x17d50
0x17d19:   55                                    	push rbp
0x17d1a:   48 89 e5                              	mov rbp, rsp
0x17d1d:   e8 ce 6e 02 00                        	call 0x3ebf0 <mcount>
0x17d22:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x17d27:   83 bf c8 00 00 00 01                  	cmp dword ptr [rdi + 0xc8], 1
0x17d2e:   75 6a                                 	jne 0x17d9a
0x17d30:   48 8b 97 b0 00 00 00                  	mov rdx, qword ptr [rdi + 0xb0]
0x17d37:   48 8d 42 08                           	lea rax, [rdx + 8]
0x17d3b:   48 63 8f d4 00 00 00                  	movsxd rcx, dword ptr [rdi + 0xd4]
0x17d42:   48 8d 74 0a ff                        	lea rsi, [rdx + rcx - 1]
0x17d47:   48 83 c2 09                           	add rdx, 9
0x17d4b:   48 39 d6                              	cmp rsi, rdx
0x17d4e:   76 45                                 	jbe 0x17d95
; data inside code section at 0x17d50 -- 0x17d6c
0x17d50:   0f b6 12 48 8d 48 02 80  38 09 75 2a 83 fa 03 76   |...H.H..8.u*...v|
0x17d60:   25 89 d0 48 8d 04 01 48  39 c6 72 1a               |%..H...H9.r.    |
; function: get_arib_std_b25 at 0x17d6c -- 0x17d9c
0x17d6c:   0f b6 41 02                           	movzx eax, byte ptr [rcx + 2]
0x17d70:   c1 e0 08                              	shl eax, 8
0x17d73:   44 0f b6 41 03                        	movzx r8d, byte ptr [rcx + 3]
0x17d78:   44 09 c0                              	or eax, r8d
0x17d7b:   25 ff 1f 00 00                        	and eax, 0x1fff
0x17d80:   89 87 58 02 00 00                     	mov dword ptr [rdi + 0x258], eax
0x17d86:   89 d0                                 	mov eax, edx
0x17d88:   48 8d 04 01                           	lea rax, [rcx + rax]
0x17d8c:   48 8d 50 01                           	lea rdx, [rax + 1]
0x17d90:   48 39 d6                              	cmp rsi, rdx
0x17d93:   77 bb                                 	ja 0x17d50
0x17d95:   b8 00 00 00 00                        	mov eax, 0
0x17d9a:   c9                                    	leave 
0x17d9b:   c3                                    	ret 
; function: get_arib_std_b25 at 0x17d9c -- 0x17dc6
0x17d9c:   55                                    	push rbp
0x17d9d:   48 89 e5                              	mov rbp, rsp
0x17da0:   53                                    	push rbx
0x17da1:   e8 4a 6e 02 00                        	call 0x3ebf0 <mcount>
0x17da6:   48 89 f3                              	mov rbx, rsi
0x17da9:   e8 b2 fc ff ff                        	call 0x17a60 <private_data>
0x17dae:   48 85 c0                              	test rax, rax
0x17db1:   74 05                                 	je 0x17db8 <get_arib_std_b25+0x1c>
0x17db3:   48 85 db                              	test rbx, rbx
0x17db6:   75 07                                 	jne 0x17dbf <get_arib_std_b25+0x23>
0x17db8:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x17dbd:   eb 34                                 	jmp 0x17df3
0x17dbf:   48 8b 90 50 06 01 00                  	mov rdx, qword ptr [rax + 0x10650]
; function: check_ts_section at 0x17dc6 -- 0x17dee
0x17dc6:   48 89 13                              	mov qword ptr [rbx], rdx
0x17dc9:   48 8b 90 58 06 01 00                  	mov rdx, qword ptr [rax + 0x10658]
0x17dd0:   2b 90 50 06 01 00                     	sub edx, dword ptr [rax + 0x10650]
0x17dd6:   89 53 08                              	mov dword ptr [rbx + 8], edx
0x17dd9:   48 8b 90 48 06 01 00                  	mov rdx, qword ptr [rax + 0x10648]
0x17de0:   48 89 90 50 06 01 00                  	mov qword ptr [rax + 0x10650], rdx
0x17de7:   48 89 90 58 06 01 00                  	mov qword ptr [rax + 0x10658], rdx
; data inside code section at 0x17dee -- 0x17def
0x17dee:   b8                                                 |.               |
; function: check_pmt_complete at 0x17def -- 0x17df6
0x17def:   00 00                                 	add byte ptr [rax], al
0x17df1:   00 00                                 	add byte ptr [rax], al
0x17df3:   5b                                    	pop rbx
0x17df4:   c9                                    	leave 
0x17df5:   c3                                    	ret 
; function: check_ts_section at 0x17df6 -- 0x17e1f
0x17df6:   55                                    	push rbp
0x17df7:   48 89 e5                              	mov rbp, rsp
0x17dfa:   e8 f1 6d 02 00                        	call 0x3ebf0 <mcount>
0x17dff:   8b 57 2c                              	mov edx, dword ptr [rdi + 0x2c]
0x17e02:   b8 00 00 00 00                        	mov eax, 0
0x17e07:   85 d2                                 	test edx, edx
0x17e09:   7e 12                                 	jle 0x17e1d <check_ts_section+0x27>
0x17e0b:   83 c2 03                              	add edx, 3
0x17e0e:   48 8b 47 10                           	mov rax, qword ptr [rdi + 0x10]
0x17e12:   2b 47 08                              	sub eax, dword ptr [rdi + 8]
0x17e15:   39 c2                                 	cmp edx, eax
0x17e17:   0f 9e c0                              	setle al
0x17e1a:   0f b6 c0                              	movzx eax, al
0x17e1d:   c9                                    	leave 
0x17e1e:   c3                                    	ret 
; function: check_pmt_complete at 0x17e1f -- 0x17e49
0x17e1f:   55                                    	push rbp
0x17e20:   48 89 e5                              	mov rbp, rsp
0x17e23:   41 56                                 	push r14
0x17e25:   41 55                                 	push r13
0x17e27:   41 54                                 	push r12
0x17e29:   53                                    	push rbx
0x17e2a:   e8 c1 6d 02 00                        	call 0x3ebf0 <mcount>
0x17e2f:   49 89 fd                              	mov r13, rdi
0x17e32:   44 8b b7 f8 03 00 00                  	mov r14d, dword ptr [rdi + 0x3f8]
0x17e39:   45 85 f6                              	test r14d, r14d
0x17e3c:   7e 32                                 	jle 0x17e70
0x17e3e:   bb 00 00 00 00                        	mov ebx, 0
0x17e43:   41 bc 00 00 00 00                     	mov r12d, 0
; data inside code section at 0x17e49 -- 0x17e4e
0x17e49:   48 89 df 49 03                                     |H..I.           |
; function: check_ecm_complete at 0x17e4e -- 0x17e7e
0x17e4e:   bd 00 04 00 00                        	mov ebp, 0x400
0x17e53:   48 83 c7 08                           	add rdi, 8
0x17e57:   e8 9a ff ff ff                        	call 0x17df6 <check_ts_section>
0x17e5c:   85 c0                                 	test eax, eax
0x17e5e:   74 15                                 	je 0x17e75 <check_ecm_complete+0x27>
0x17e60:   41 83 c4 01                           	add r12d, 1
0x17e64:   48 81 c3 80 07 00 00                  	add rbx, 0x780
0x17e6b:   45 39 f4                              	cmp r12d, r14d
0x17e6e:   7c d9                                 	jl 0x17e49
0x17e70:   b8 01 00 00 00                        	mov eax, 1
0x17e75:   5b                                    	pop rbx
0x17e76:   41 5c                                 	pop r12
0x17e78:   41 5d                                 	pop r13
0x17e7a:   41 5e                                 	pop r14
0x17e7c:   c9                                    	leave 
0x17e7d:   c3                                    	ret 
; function: check_ecm_complete at 0x17e7e -- 0x17ea8
0x17e7e:   55                                    	push rbp
0x17e7f:   48 89 e5                              	mov rbp, rsp
0x17e82:   41 56                                 	push r14
0x17e84:   41 55                                 	push r13
0x17e86:   41 54                                 	push r12
0x17e88:   53                                    	push rbx
0x17e89:   e8 62 6d 02 00                        	call 0x3ebf0 <mcount>
0x17e8e:   49 89 fd                              	mov r13, rdi
0x17e91:   44 8b b7 f8 03 00 00                  	mov r14d, dword ptr [rdi + 0x3f8]
0x17e98:   45 85 f6                              	test r14d, r14d
0x17e9b:   7e 4b                                 	jle 0x17ee8
0x17e9d:   bb 00 00 00 00                        	mov ebx, 0
0x17ea2:   41 bc 00 00 00 00                     	mov r12d, 0
; data inside code section at 0x17ea8 -- 0x17ec6
0x17ea8:   48 89 df 49 03 bd 00 04  00 00 8b 87 a0 00 00 00   |H..I............|
0x17eb8:   85 c0 74 1c 89 c0 49 3b  bc c5 10 04 00 00         |..t...I;......  |
; function: extract_ts_header at 0x17ec6 -- 0x17ef6
0x17ec6:   75 10                                 	jne 0x17ed8 <extract_ts_header+0x12>
0x17ec8:   48 81 c7 a8 00 00 00                  	add rdi, 0xa8
0x17ecf:   e8 22 ff ff ff                        	call 0x17df6 <check_ts_section>
0x17ed4:   85 c0                                 	test eax, eax
0x17ed6:   74 15                                 	je 0x17eed <extract_ts_header+0x27>
0x17ed8:   41 83 c4 01                           	add r12d, 1
0x17edc:   48 81 c3 80 07 00 00                  	add rbx, 0x780
0x17ee3:   45 39 e6                              	cmp r14d, r12d
0x17ee6:   7f c0                                 	jg 0x17ea8
0x17ee8:   b8 01 00 00 00                        	mov eax, 1
0x17eed:   5b                                    	pop rbx
0x17eee:   41 5c                                 	pop r12
0x17ef0:   41 5d                                 	pop r13
0x17ef2:   41 5e                                 	pop r14
0x17ef4:   c9                                    	leave 
0x17ef5:   c3                                    	ret 
; function: extract_ts_header at 0x17ef6 -- 0x17f35
0x17ef6:   55                                    	push rbp
0x17ef7:   48 89 e5                              	mov rbp, rsp
0x17efa:   e8 f1 6c 02 00                        	call 0x3ebf0 <mcount>
0x17eff:   0f b6 06                              	movzx eax, byte ptr [rsi]
0x17f02:   89 07                                 	mov dword ptr [rdi], eax
0x17f04:   48 8d 46 01                           	lea rax, [rsi + 1]
0x17f08:   0f b6 10                              	movzx edx, byte ptr [rax]
0x17f0b:   c0 ea 07                              	shr dl, 7
0x17f0e:   0f b6 d2                              	movzx edx, dl
0x17f11:   89 57 04                              	mov dword ptr [rdi + 4], edx
0x17f14:   0f b6 10                              	movzx edx, byte ptr [rax]
0x17f17:   c0 ea 06                              	shr dl, 6
0x17f1a:   83 e2 01                              	and edx, 1
0x17f1d:   89 57 08                              	mov dword ptr [rdi + 8], edx
0x17f20:   0f b6 10                              	movzx edx, byte ptr [rax]
0x17f23:   c0 ea 05                              	shr dl, 5
0x17f26:   83 e2 01                              	and edx, 1
0x17f29:   89 57 0c                              	mov dword ptr [rdi + 0xc], edx
0x17f2c:   0f b6 00                              	movzx eax, byte ptr [rax]
0x17f2f:   83 e0 1f                              	and eax, 0x1f
0x17f32:   c1 e0 08                              	shl eax, 8
; function: extract_ts_section_header at 0x17f35 -- 0x17f65
0x17f35:   0f b6 56 02                           	movzx edx, byte ptr [rsi + 2]
0x17f39:   09 d0                                 	or eax, edx
0x17f3b:   89 47 10                              	mov dword ptr [rdi + 0x10], eax
0x17f3e:   48 83 c6 03                           	add rsi, 3
0x17f42:   0f b6 06                              	movzx eax, byte ptr [rsi]
0x17f45:   c0 e8 06                              	shr al, 6
0x17f48:   0f b6 c0                              	movzx eax, al
0x17f4b:   89 47 14                              	mov dword ptr [rdi + 0x14], eax
0x17f4e:   0f b6 06                              	movzx eax, byte ptr [rsi]
0x17f51:   c0 e8 04                              	shr al, 4
0x17f54:   83 e0 03                              	and eax, 3
0x17f57:   89 47 18                              	mov dword ptr [rdi + 0x18], eax
0x17f5a:   0f b6 06                              	movzx eax, byte ptr [rsi]
0x17f5d:   83 e0 0f                              	and eax, 0xf
0x17f60:   89 47 1c                              	mov dword ptr [rdi + 0x1c], eax
0x17f63:   c9                                    	leave 
0x17f64:   c3                                    	ret 
; function: extract_ts_section_header at 0x17f65 -- 0x17fd3
0x17f65:   55                                    	push rbp
0x17f66:   48 89 e5                              	mov rbp, rsp
0x17f69:   e8 82 6c 02 00                        	call 0x3ebf0 <mcount>
0x17f6e:   0f b6 06                              	movzx eax, byte ptr [rsi]
0x17f71:   89 07                                 	mov dword ptr [rdi], eax
0x17f73:   48 8d 46 01                           	lea rax, [rsi + 1]
0x17f77:   0f b6 10                              	movzx edx, byte ptr [rax]
0x17f7a:   c0 ea 07                              	shr dl, 7
0x17f7d:   0f b6 d2                              	movzx edx, dl
0x17f80:   89 57 04                              	mov dword ptr [rdi + 4], edx
0x17f83:   0f b6 08                              	movzx ecx, byte ptr [rax]
0x17f86:   c0 e9 06                              	shr cl, 6
0x17f89:   83 e1 01                              	and ecx, 1
0x17f8c:   89 4f 08                              	mov dword ptr [rdi + 8], ecx
0x17f8f:   0f b6 00                              	movzx eax, byte ptr [rax]
0x17f92:   c1 e0 08                              	shl eax, 8
0x17f95:   0f b6 4e 02                           	movzx ecx, byte ptr [rsi + 2]
0x17f99:   09 c8                                 	or eax, ecx
0x17f9b:   25 ff 0f 00 00                        	and eax, 0xfff
0x17fa0:   89 47 0c                              	mov dword ptr [rdi + 0xc], eax
0x17fa3:   85 d2                                 	test edx, edx
0x17fa5:   74 38                                 	je 0x17fdf
0x17fa7:   0f b6 46 03                           	movzx eax, byte ptr [rsi + 3]
0x17fab:   c1 e0 08                              	shl eax, 8
0x17fae:   0f b6 56 04                           	movzx edx, byte ptr [rsi + 4]
0x17fb2:   09 d0                                 	or eax, edx
0x17fb4:   89 47 10                              	mov dword ptr [rdi + 0x10], eax
0x17fb7:   48 8d 46 05                           	lea rax, [rsi + 5]
0x17fbb:   0f b6 10                              	movzx edx, byte ptr [rax]
0x17fbe:   d0 ea                                 	shr dl, 1
0x17fc0:   83 e2 1f                              	and edx, 0x1f
0x17fc3:   89 57 14                              	mov dword ptr [rdi + 0x14], edx
0x17fc6:   0f b6 00                              	movzx eax, byte ptr [rax]
0x17fc9:   83 e0 01                              	and eax, 1
0x17fcc:   89 47 18                              	mov dword ptr [rdi + 0x18], eax
0x17fcf:   0f b6 46 06                           	movzx eax, byte ptr [rsi + 6]
; data inside code section at 0x17fd3 -- 0x17fd4
0x17fd3:   89                                                 |.               |
; function: resync at 0x17fd4 -- 0x18004
0x17fd4:   47 1c 0f                              	sbb al, 0xf
0x17fd7:   b6 46                                 	mov dh, 0x46
; data inside code section at 0x17fd9 -- 0x17fdf
0x17fd9:   07 89 47 20 eb 23                                  |..G .#          |
0x17fdf:   c7 47 10 00 00 00 00                  	mov dword ptr [rdi + 0x10], 0
0x17fe6:   c7 47 14 00 00 00 00                  	mov dword ptr [rdi + 0x14], 0
0x17fed:   c7 47 18 00 00 00 00                  	mov dword ptr [rdi + 0x18], 0
0x17ff4:   c7 47 1c 00 00 00 00                  	mov dword ptr [rdi + 0x1c], 0
0x17ffb:   c7 47 20 00 00 00 00                  	mov dword ptr [rdi + 0x20], 0
0x18002:   c9                                    	leave 
0x18003:   c3                                    	ret 
; function: resync at 0x18004 -- 0x18035
0x18004:   55                                    	push rbp
0x18005:   48 89 e5                              	mov rbp, rsp
0x18008:   e8 e3 6b 02 00                        	call 0x3ebf0 <mcount>
0x1800d:   8d 04 d5 00 00 00 00                  	lea eax, [rdx*8]
0x18014:   48 98                                 	cdqe 
0x18016:   48 29 c6                              	sub rsi, rax
0x18019:   48 39 f7                              	cmp rdi, rsi
0x1801c:   77 50                                 	ja 0x1806e
0x1801e:   4c 63 ca                              	movsxd r9, edx
0x18021:   4e 8d 0c 0f                           	lea r9, [rdi + r9]
0x18025:   48 89 f8                              	mov rax, rdi
0x18028:   41 89 d0                              	mov r8d, edx
0x1802b:   44 8d 1c 12                           	lea r11d, [rdx + rdx]
0x1802f:   41 ba 02 00 00 00                     	mov r10d, 2
; data inside code section at 0x18035 -- 0x18045
0x18035:   80 38 47 75 27 41 80 39  47 75 21 44 89 da 44 89   |.8Gu'A.9Gu!D..D.|
; function: check_ts_section_crc at 0x18045 -- 0x18075
0x18045:   d1 48 63                              	ror dword ptr [rax + 0x63], 1
0x18048:   fa                                    	cli 
0x18049:   80 3c 38 47                           	cmp byte ptr [rax + rdi], 0x47
0x1804d:   75 0d                                 	jne 0x1805c <check_ts_section_crc+0x17>
0x1804f:   83 c1 01                              	add ecx, 1
0x18052:   44 01 c2                              	add edx, r8d
0x18055:   83 f9 08                              	cmp ecx, 8
0x18058:   75 ec                                 	jne 0x18046
0x1805a:   eb 17                                 	jmp 0x18073 <check_ts_section_crc+0x2e>
0x1805c:   83 f9 08                              	cmp ecx, 8
0x1805f:   74 12                                 	je 0x18073 <check_ts_section_crc+0x2e>
0x18061:   48 83 c0 01                           	add rax, 1
0x18065:   49 83 c1 01                           	add r9, 1
0x18069:   48 39 c6                              	cmp rsi, rax
0x1806c:   73 c7                                 	jae 0x18035
0x1806e:   b8 00 00 00 00                        	mov eax, 0
0x18073:   c9                                    	leave 
0x18074:   c3                                    	ret 
; function: check_ts_section_crc at 0x18075 -- 0x1809d
0x18075:   55                                    	push rbp
0x18076:   48 89 e5                              	mov rbp, rsp
0x18079:   e8 72 6b 02 00                        	call 0x3ebf0 <mcount>
0x1807e:   8b 77 2c                              	mov esi, dword ptr [rdi + 0x2c]
0x18081:   b8 00 00 00 00                        	mov eax, 0
0x18086:   85 f6                                 	test esi, esi
0x18088:   7e 42                                 	jle 0x180cc
0x1808a:   48 8b 47 08                           	mov rax, qword ptr [rdi + 8]
0x1808e:   83 c6 03                              	add esi, 3
0x18091:   48 63 f6                              	movsxd rsi, esi
0x18094:   48 8d 34 30                           	lea rsi, [rax + rsi]
0x18098:   ba ff ff ff ff                        	mov edx, 0xffffffff
; data inside code section at 0x1809d -- 0x1809e
0x1809d:   48                                                 |H               |
; function: select_unit_size at 0x1809e -- 0x180ce
0x1809e:   c7 c7 00 00 00 00                     	mov edi, 0
0x180a4:   48 39 f0                              	cmp rax, rsi
0x180a7:   73 1b                                 	jae 0x180c4 <select_unit_size+0x26>
0x180a9:   89 d1                                 	mov ecx, edx
0x180ab:   c1 e1 08                              	shl ecx, 8
0x180ae:   c1 ea 18                              	shr edx, 0x18
0x180b1:   32 10                                 	xor dl, byte ptr [rax]
0x180b3:   0f b6 d2                              	movzx edx, dl
0x180b6:   8b 14 97                              	mov edx, dword ptr [rdi + rdx*4]
0x180b9:   31 ca                                 	xor edx, ecx
0x180bb:   48 83 c0 01                           	add rax, 1
0x180bf:   48 39 c6                              	cmp rsi, rax
0x180c2:   77 e5                                 	ja 0x180a9 <select_unit_size+0xb>
0x180c4:   85 d2                                 	test edx, edx
0x180c6:   0f 94 c0                              	sete al
0x180c9:   0f b6 c0                              	movzx eax, al
0x180cc:   c9                                    	leave 
0x180cd:   c3                                    	ret 
; function: select_unit_size at 0x180ce -- 0x18212
0x180ce:   55                                    	push rbp
0x180cf:   48 89 e5                              	mov rbp, rsp
0x180d2:   48 81 ec 00 05 00 00                  	sub rsp, 0x500
0x180d9:   e8 12 6b 02 00                        	call 0x3ebf0 <mcount>
0x180de:   48 89 fe                              	mov rsi, rdi
0x180e1:   4c 8b 87 30 06 01 00                  	mov r8, qword ptr [rdi + 0x10630]
0x180e8:   48 8b 97 38 06 01 00                  	mov rdx, qword ptr [rdi + 0x10638]
0x180ef:   4c 8d 8d 00 fb ff ff                  	lea r9, [rbp - 0x500]
0x180f6:   b9 a0 00 00 00                        	mov ecx, 0xa0
0x180fb:   b8 00 00 00 00                        	mov eax, 0
0x18100:   4c 89 cf                              	mov rdi, r9
0x18103:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x18106:   49 39 d0                              	cmp r8, rdx
0x18109:   0f 83 2e 01 00 00                     	jae 0x1823d
0x1810f:   4c 89 c0                              	mov rax, r8
0x18112:   4d 89 c1                              	mov r9, r8
0x18115:   41 80 38 47                           	cmp byte ptr [r8], 0x47
0x18119:   75 07                                 	jne 0x18122 <select_unit_size+0x54>
0x1811b:   eb 16                                 	jmp 0x18133 <select_unit_size+0x65>
0x1811d:   80 38 47                              	cmp byte ptr [rax], 0x47
0x18120:   74 0e                                 	je 0x18130 <select_unit_size+0x62>
0x18122:   48 83 c0 01                           	add rax, 1
0x18126:   48 39 c2                              	cmp rdx, rax
0x18129:   77 f2                                 	ja 0x1811d <select_unit_size+0x4f>
0x1812b:   e9 0d 01 00 00                        	jmp 0x1823d
0x18130:   49 89 c1                              	mov r9, rax
0x18133:   4d 85 c9                              	test r9, r9
0x18136:   0f 84 01 01 00 00                     	je 0x1823d
0x1813c:   49 8d 41 01                           	lea rax, [r9 + 1]
0x18140:   48 39 c2                              	cmp rdx, rax
0x18143:   0f 86 86 00 00 00                     	jbe 0x181cf <select_unit_size+0x101>
0x18149:   49 8d b9 45 ff ff ff                  	lea rdi, [r9 - 0xbb]
0x18150:   80 38 47                              	cmp byte ptr [rax], 0x47
0x18153:   75 6d                                 	jne 0x181c2 <select_unit_size+0xf4>
0x18155:   41 89 c3                              	mov r11d, eax
0x18158:   41 89 c2                              	mov r10d, eax
0x1815b:   45 29 ca                              	sub r10d, r9d
0x1815e:   41 81 fa bb 00 00 00                  	cmp r10d, 0xbb
0x18165:   7f 43                                 	jg 0x181aa <select_unit_size+0xdc>
0x18167:   48 89 f9                              	mov rcx, rdi
0x1816a:   49 39 f8                              	cmp r8, rdi
0x1816d:   77 53                                 	ja 0x181c2 <select_unit_size+0xf4>
0x1816f:   80 3f 47                              	cmp byte ptr [rdi], 0x47
0x18172:   75 1b                                 	jne 0x1818f <select_unit_size+0xc1>
0x18174:   eb 05                                 	jmp 0x1817b <select_unit_size+0xad>
0x18176:   80 39 47                              	cmp byte ptr [rcx], 0x47
0x18179:   75 14                                 	jne 0x1818f <select_unit_size+0xc1>
0x1817b:   41 29 cb                              	sub r11d, ecx
0x1817e:   41 8d 8b 44 ff ff ff                  	lea ecx, [r11 - 0xbc]
0x18185:   81 f9 83 00 00 00                     	cmp ecx, 0x83
0x1818b:   76 0d                                 	jbe 0x1819a <select_unit_size+0xcc>
0x1818d:   eb 33                                 	jmp 0x181c2 <select_unit_size+0xf4>
0x1818f:   48 83 e9 01                           	sub rcx, 1
0x18193:   49 39 c8                              	cmp r8, rcx
0x18196:   76 de                                 	jbe 0x18176 <select_unit_size+0xa8>
0x18198:   eb 28                                 	jmp 0x181c2 <select_unit_size+0xf4>
0x1819a:   49 63 cb                              	movsxd rcx, r11d
0x1819d:   83 84 8d 00 fb ff ff 01               	add dword ptr [rbp + rcx*4 - 0x500], 1
0x181a5:   49 89 c1                              	mov r9, rax
0x181a8:   eb 18                                 	jmp 0x181c2 <select_unit_size+0xf4>
0x181aa:   49 89 c1                              	mov r9, rax
0x181ad:   41 81 fa 3f 01 00 00                  	cmp r10d, 0x13f
0x181b4:   7f 0c                                 	jg 0x181c2 <select_unit_size+0xf4>
0x181b6:   4d 63 d2                              	movsxd r10, r10d
0x181b9:   42 83 84 95 00 fb ff ff 01            	add dword ptr [rbp + r10*4 - 0x500], 1
0x181c2:   48 83 c0 01                           	add rax, 1
0x181c6:   48 83 c7 01                           	add rdi, 1
0x181ca:   48 39 d0                              	cmp rax, rdx
0x181cd:   75 81                                 	jne 0x18150 <select_unit_size+0x82>
0x181cf:   4c 8d 8d f0 fd ff ff                  	lea r9, [rbp - 0x210]
0x181d6:   b9 00 00 00 00                        	mov ecx, 0
0x181db:   41 ba 00 00 00 00                     	mov r10d, 0
0x181e1:   b8 bc 00 00 00                        	mov eax, 0xbc
0x181e6:   41 8b 39                              	mov edi, dword ptr [r9]
0x181e9:   44 39 d7                              	cmp edi, r10d
0x181ec:   7e 04                                 	jle 0x181f2 <select_unit_size+0x124>
0x181ee:   89 c1                                 	mov ecx, eax
0x181f0:   eb 03                                 	jmp 0x181f5 <select_unit_size+0x127>
0x181f2:   44 89 d7                              	mov edi, r10d
0x181f5:   83 c0 01                              	add eax, 1
0x181f8:   49 83 c1 04                           	add r9, 4
0x181fc:   3d 40 01 00 00                        	cmp eax, 0x140
0x18201:   74 05                                 	je 0x18208 <select_unit_size+0x13a>
0x18203:   41 89 fa                              	mov r10d, edi
0x18206:   eb de                                 	jmp 0x181e6 <select_unit_size+0x118>
0x18208:   83 ff 07                              	cmp edi, 7
0x1820b:   7e 30                                 	jle 0x1823d
0x1820d:   89 c8                                 	mov eax, ecx
0x1820f:   0f af c7                              	imul eax, edi
; data inside code section at 0x18212 -- 0x18214
0x18212:   48 63                                              |Hc              |
; function: reset_ts_section at 0x18214 -- 0x18244
0x18214:   f8                                    	clc 
0x18215:   4c 29 c2                              	sub rdx, r8
0x18218:   49 89 d0                              	mov r8, rdx
0x1821b:   41 b9 08 00 00 00                     	mov r9d, 8
0x18221:   89 c2                                 	mov edx, eax
0x18223:   c1 fa 1f                              	sar edx, 0x1f
0x18226:   41 f7 f9                              	idiv r9d
0x18229:   48 98                                 	cdqe 
0x1822b:   49 29 c0                              	sub r8, rax
0x1822e:   4c 39 c7                              	cmp rdi, r8
0x18231:   7c 0a                                 	jl 0x1823d <reset_ts_section+0x29>
0x18233:   89 4e 04                              	mov dword ptr [rsi + 4], ecx
0x18236:   b8 00 00 00 00                        	mov eax, 0
0x1823b:   eb 05                                 	jmp 0x18242 <reset_ts_section+0x2e>
0x1823d:   b8 fd ff ff ff                        	mov eax, 0xfffffffd
0x18242:   c9                                    	leave 
0x18243:   c3                                    	ret 
; function: reset_ts_section at 0x18244 -- 0x18254
0x18244:   55                                    	push rbp
0x18245:   48 89 e5                              	mov rbp, rsp
0x18248:   e8 a3 69 02 00                        	call 0x3ebf0 <mcount>
0x1824d:   48 8b 07                              	mov rax, qword ptr [rdi]
0x18250:   48 89 47 08                           	mov qword ptr [rdi + 8], rax
; function: setup_pid_map at 0x18254 -- 0x18284
0x18254:   48 89 47 10                           	mov qword ptr [rdi + 0x10], rax
0x18258:   48 83 c7 20                           	add rdi, 0x20
0x1825c:   48 c7 07 00 00 00 00                  	mov qword ptr [rdi], 0
0x18263:   48 c7 47 08 00 00 00 00               	mov qword ptr [rdi + 8], 0
0x1826b:   48 c7 47 10 00 00 00 00               	mov qword ptr [rdi + 0x10], 0
0x18273:   48 c7 47 18 00 00 00 00               	mov qword ptr [rdi + 0x18], 0
0x1827b:   c7 47 20 00 00 00 00                  	mov dword ptr [rdi + 0x20], 0
0x18282:   c9                                    	leave 
0x18283:   c3                                    	ret 
; function: setup_pid_map at 0x18284 -- 0x182f5
0x18284:   55                                    	push rbp
0x18285:   48 89 e5                              	mov rbp, rsp
0x18288:   41 55                                 	push r13
0x1828a:   41 54                                 	push r12
0x1828c:   53                                    	push rbx
0x1828d:   48 83 ec 08                           	sub rsp, 8
0x18291:   e8 5a 69 02 00                        	call 0x3ebf0 <mcount>
0x18296:   48 89 fb                              	mov rbx, rdi
0x18299:   48 8d bf 10 04 00 00                  	lea rdi, [rdi + 0x410]
0x182a0:   ba 00 00 01 00                        	mov edx, 0x10000
0x182a5:   be 00 00 00 00                        	mov esi, 0
0x182aa:   e8 91 69 02 00                        	call 0x3ec40 <memset>
0x182af:   48 8d bb 74 06 01 00                  	lea rdi, [rbx + 0x10674]
0x182b6:   ba 00 14 08 00                        	mov edx, 0x81400
0x182bb:   be 00 00 00 00                        	mov esi, 0
0x182c0:   e8 7b 69 02 00                        	call 0x3ec40 <memset>
0x182c5:   c6 83 74 1a 09 00 00                  	mov byte ptr [rbx + 0x91a74], 0
0x182cc:   83 bb f8 03 00 00 00                  	cmp dword ptr [rbx + 0x3f8], 0
0x182d3:   0f 8e 4e 01 00 00                     	jle 0x18427
0x182d9:   48 8b 93 00 04 00 00                  	mov rdx, qword ptr [rbx + 0x400]
0x182e0:   49 89 d9                              	mov r9, rbx
0x182e3:   41 ba 00 00 00 00                     	mov r10d, 0
0x182e9:   41 bc 00 00 00 00                     	mov r12d, 0
0x182ef:   41 bb 00 00 00 00                     	mov r11d, 0
; data inside code section at 0x182f5 -- 0x182f9
0x182f5:   49 89 d0 8b                                        |I...            |
; function: function_182f9 at 0x182f9 -- 0x18304
0x182f9:   02 85 c0 74 17 89                     	add al, byte ptr [rbp - 0x76e88b40]
0x182ff:   c1 48 83 bc                           	ror dword ptr [rax - 0x7d], -0x44
0x18303:   cb                                    	retf 
; data inside code section at 0x18304 -- 0x1830a
0x18304:   10 04 00 00 00 75                                  |.....u          |
; function: function_1830a at 0x1830a -- 0x18311
0x1830a:   0a 89 c0 48 89 94                     	or cl, byte ptr [rcx - 0x6b76b740]
0x18310:   c3                                    	ret 
; function: function_18311 at 0x18311 -- 0x18325
0x18311:   10 04 00                              	adc byte ptr [rax + rax], al
0x18314:   00 8b 82 9c 00 00                     	add byte ptr [rbx + 0x9c82], cl
0x1831a:   00 85 c0 74 17 89                     	add byte ptr [rbp - 0x76e88b40], al
0x18320:   c1 48 83 bc                           	ror dword ptr [rax - 0x7d], -0x44
0x18324:   cb                                    	retf 
; data inside code section at 0x18325 -- 0x1832b
0x18325:   10 04 00 00 00 75                                  |.....u          |
; function: function_1832b at 0x1832b -- 0x18332
0x1832b:   0a 89 c0 4c 89 84                     	or cl, byte ptr [rcx - 0x7b76b340]
0x18331:   c3                                    	ret 
; function: function_18332 at 0x18332 -- 0x18346
0x18332:   10 04 00                              	adc byte ptr [rax + rax], al
0x18335:   00 8b 82 a0 00 00                     	add byte ptr [rbx + 0xa082], cl
0x1833b:   00 85 c0 74 17 89                     	add byte ptr [rbp - 0x76e88b40], al
0x18341:   c1 48 83 bc                           	ror dword ptr [rax - 0x7d], -0x44
0x18345:   cb                                    	retf 
; data inside code section at 0x18346 -- 0x1834c
0x18346:   10 04 00 00 00 75                                  |.....u          |
; function: function_1834c at 0x1834c -- 0x18353
0x1834c:   0a 89 c0 4c 89 84                     	or cl, byte ptr [rcx - 0x7b76b340]
0x18352:   c3                                    	ret 
; data inside code section at 0x18353 -- 0x1839f
0x18353:   10 04 00 00 8b 82 98 00  00 00 41 89 81 74 06 01   |..........A..t..|
0x18363:   00 8b 02 41 89 81 78 06  01 00 8b 82 a0 00 00 00   |...A..x.........|
0x18373:   41 89 81 7c 06 01 00 8b  82 9c 00 00 00 41 89 81   |A..|.........A..|
0x18383:   80 06 01 00 8b 82 40 01  00 00 41 89 81 84 06 01   |......@...A.....|
0x18393:   00 83 ba 40 01 00 00 00  7e 6b 49 63               |...@....~kIc    |
; function: function_1839f at 0x1839f -- 0x183a2
0x1839f:   c2 48 69                              	ret 0x6948
; data inside code section at 0x183a2 -- 0x183b5
0x183a2:   c0 14 08 00 00 48 8d 8c  03 88 06 01 00 4c 89 e0   |.....H.......L..|
0x183b2:   44 89 de                                           |D..             |
; function: function_183b5 at 0x183b5 -- 0x183b6
; data inside code section at 0x183b6 -- 0x183c9
0x183b6:   8b ba 38 01 00 00 8b 3c  07 85 ff 74 18 41 89 fd   |..8....<...t.A..|
0x183c6:   4a 83 bc                                           |J..             |
; function: function_183c9 at 0x183c9 -- 0x183cb
0x183c9:   eb 10                                 	jmp 0x183db <function_183db>
; function: function_183cb at 0x183cb -- 0x183db
0x183cb:   04 00                                 	add al, 0
0x183cd:   00 00                                 	add byte ptr [rax], al
0x183cf:   75 0a                                 	jne 0x183db <function_183db>
0x183d1:   89 ff                                 	mov edi, edi
0x183d3:   4c 89 84 fb 10 04 00 00               	mov qword ptr [rbx + rdi*8 + 0x410], r8
; function: function_183db at 0x183db -- 0x18408
0x183db:   48 8b ba 38 01 00 00                  	mov rdi, qword ptr [rdx + 0x138]
0x183e2:   8b 3c 07                              	mov edi, dword ptr [rdi + rax]
0x183e5:   89 39                                 	mov dword ptr [rcx], edi
0x183e7:   48 8b ba 38 01 00 00                  	mov rdi, qword ptr [rdx + 0x138]
0x183ee:   8b 7c 07 04                           	mov edi, dword ptr [rdi + rax + 4]
0x183f2:   89 79 04                              	mov dword ptr [rcx + 4], edi
0x183f5:   83 c6 01                              	add esi, 1
0x183f8:   48 83 c0 08                           	add rax, 8
0x183fc:   48 83 c1 08                           	add rcx, 8
0x18400:   39 b2 40 01 00 00                     	cmp dword ptr [rdx + 0x140], esi
0x18406:   7f ad                                 	jg 0x183b5 <function_183b5>
; data inside code section at 0x18408 -- 0x18409
0x18408:   41                                                 |A               |
; function: get_ContentAvailabilityDescriptor at 0x18409 -- 0x18439
0x18409:   83 c2 01                              	add edx, 1
0x1840c:   48 81 c2 80 07 00 00                  	add rdx, 0x780
0x18413:   49 81 c1 14 08 00 00                  	add r9, 0x814
0x1841a:   44 39 93 f8 03 00 00                  	cmp dword ptr [rbx + 0x3f8], r10d
0x18421:   0f 8f ce fe ff ff                     	jg 0x182f5
0x18427:   c6 83 74 1a 09 00 01                  	mov byte ptr [rbx + 0x91a74], 1
0x1842e:   48 83 c4 08                           	add rsp, 8
0x18432:   5b                                    	pop rbx
0x18433:   41 5c                                 	pop r12
0x18435:   41 5d                                 	pop r13
0x18437:   c9                                    	leave 
0x18438:   c3                                    	ret 
; function: get_ContentAvailabilityDescriptor at 0x18439 -- 0x18500
0x18439:   55                                    	push rbp
0x1843a:   48 89 e5                              	mov rbp, rsp
0x1843d:   41 54                                 	push r12
0x1843f:   53                                    	push rbx
0x18440:   e8 ab 67 02 00                        	call 0x3ebf0 <mcount>
0x18445:   49 89 d4                              	mov r12, rdx
0x18448:   89 f3                                 	mov ebx, esi
0x1844a:   e8 11 f6 ff ff                        	call 0x17a60 <private_data>
0x1844f:   44 8b 90 f8 03 00 00                  	mov r10d, dword ptr [rax + 0x3f8]
0x18456:   45 85 d2                              	test r10d, r10d
0x18459:   0f 8e c7 00 00 00                     	jle 0x18526
0x1845f:   4c 8b 80 00 04 00 00                  	mov r8, qword ptr [rax + 0x400]
0x18466:   41 b9 00 00 00 00                     	mov r9d, 0
0x1846c:   0f b7 fb                              	movzx edi, bx
0x1846f:   41 bb 00 00 00 00                     	mov r11d, 0
0x18475:   4c 89 c3                              	mov rbx, r8
0x18478:   41 8b b0 40 01 00 00                  	mov esi, dword ptr [r8 + 0x140]
0x1847f:   85 f6                                 	test esi, esi
0x18481:   0f 8e 8b 00 00 00                     	jle 0x18512
0x18487:   49 8b 90 38 01 00 00                  	mov rdx, qword ptr [r8 + 0x138]
0x1848e:   39 3a                                 	cmp dword ptr [rdx], edi
0x18490:   75 76                                 	jne 0x18508
0x18492:   eb 0b                                 	jmp 0x1849f <get_ContentAvailabilityDescriptor+0x66>
0x18494:   8b 4a 08                              	mov ecx, dword ptr [rdx + 8]
0x18497:   48 83 c2 08                           	add rdx, 8
0x1849b:   39 f9                                 	cmp ecx, edi
0x1849d:   75 6c                                 	jne 0x1850b
0x1849f:   8b 83 5c 03 00 00                     	mov eax, dword ptr [rbx + 0x35c]
0x184a5:   85 c0                                 	test eax, eax
0x184a7:   74 19                                 	je 0x184c2 <get_ContentAvailabilityDescriptor+0x89>
0x184a9:   89 c2                                 	mov edx, eax
0x184ab:   48 8d b3 58 02 00 00                  	lea rsi, [rbx + 0x258]
0x184b2:   4c 89 e7                              	mov rdi, r12
0x184b5:   e8 ae 66 02 00                        	call 0x3eb68 <memcpy>
0x184ba:   8b 83 5c 03 00 00                     	mov eax, dword ptr [rbx + 0x35c]
0x184c0:   eb 69                                 	jmp 0x1852b
0x184c2:   8b 83 6c 05 00 00                     	mov eax, dword ptr [rbx + 0x56c]
0x184c8:   85 c0                                 	test eax, eax
0x184ca:   74 19                                 	je 0x184e5 <get_ContentAvailabilityDescriptor+0xac>
0x184cc:   89 c2                                 	mov edx, eax
0x184ce:   48 8d b3 68 04 00 00                  	lea rsi, [rbx + 0x468]
0x184d5:   4c 89 e7                              	mov rdi, r12
0x184d8:   e8 8b 66 02 00                        	call 0x3eb68 <memcpy>
0x184dd:   8b 83 6c 05 00 00                     	mov eax, dword ptr [rbx + 0x56c]
0x184e3:   eb 46                                 	jmp 0x1852b
0x184e5:   8b 83 7c 07 00 00                     	mov eax, dword ptr [rbx + 0x77c]
0x184eb:   85 c0                                 	test eax, eax
0x184ed:   74 37                                 	je 0x18526
0x184ef:   89 c2                                 	mov edx, eax
0x184f1:   48 8d b3 78 06 00 00                  	lea rsi, [rbx + 0x678]
0x184f8:   4c 89 e7                              	mov rdi, r12
0x184fb:   e8 68 66 02 00                        	call 0x3eb68 <memcpy>
; function: get_DigitalCopyControlDescriptor at 0x18500 -- 0x18530
0x18500:   8b 83 7c 07 00 00                     	mov eax, dword ptr [rbx + 0x77c]
0x18506:   eb 23                                 	jmp 0x1852b <get_DigitalCopyControlDescriptor+0x2b>
0x18508:   44 89 d8                              	mov eax, r11d
0x1850b:   83 c0 01                              	add eax, 1
0x1850e:   39 f0                                 	cmp eax, esi
0x18510:   7c 82                                 	jl 0x18494
0x18512:   41 83 c1 01                           	add r9d, 1
0x18516:   49 81 c0 80 07 00 00                  	add r8, 0x780
0x1851d:   45 39 ca                              	cmp r10d, r9d
0x18520:   0f 8f 4f ff ff ff                     	jg 0x18475
0x18526:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x1852b:   5b                                    	pop rbx
0x1852c:   41 5c                                 	pop r12
0x1852e:   c9                                    	leave 
0x1852f:   c3                                    	ret 
; function: get_DigitalCopyControlDescriptor at 0x18530 -- 0x185f7
0x18530:   55                                    	push rbp
0x18531:   48 89 e5                              	mov rbp, rsp
0x18534:   41 54                                 	push r12
0x18536:   53                                    	push rbx
0x18537:   e8 b4 66 02 00                        	call 0x3ebf0 <mcount>
0x1853c:   49 89 d4                              	mov r12, rdx
0x1853f:   89 f3                                 	mov ebx, esi
0x18541:   e8 1a f5 ff ff                        	call 0x17a60 <private_data>
0x18546:   44 8b 90 f8 03 00 00                  	mov r10d, dword ptr [rax + 0x3f8]
0x1854d:   45 85 d2                              	test r10d, r10d
0x18550:   0f 8e c7 00 00 00                     	jle 0x1861d
0x18556:   4c 8b 80 00 04 00 00                  	mov r8, qword ptr [rax + 0x400]
0x1855d:   41 b9 00 00 00 00                     	mov r9d, 0
0x18563:   0f b7 fb                              	movzx edi, bx
0x18566:   41 bb 00 00 00 00                     	mov r11d, 0
0x1856c:   4c 89 c3                              	mov rbx, r8
0x1856f:   41 8b b0 40 01 00 00                  	mov esi, dword ptr [r8 + 0x140]
0x18576:   85 f6                                 	test esi, esi
0x18578:   0f 8e 8b 00 00 00                     	jle 0x18609
0x1857e:   49 8b 90 38 01 00 00                  	mov rdx, qword ptr [r8 + 0x138]
0x18585:   39 3a                                 	cmp dword ptr [rdx], edi
0x18587:   75 76                                 	jne 0x185ff
0x18589:   eb 0b                                 	jmp 0x18596 <get_DigitalCopyControlDescriptor+0x66>
0x1858b:   8b 4a 08                              	mov ecx, dword ptr [rdx + 8]
0x1858e:   48 83 c2 08                           	add rdx, 8
0x18592:   39 f9                                 	cmp ecx, edi
0x18594:   75 6c                                 	jne 0x18602
0x18596:   8b 83 54 02 00 00                     	mov eax, dword ptr [rbx + 0x254]
0x1859c:   85 c0                                 	test eax, eax
0x1859e:   74 19                                 	je 0x185b9 <get_DigitalCopyControlDescriptor+0x89>
0x185a0:   89 c2                                 	mov edx, eax
0x185a2:   48 8d b3 50 01 00 00                  	lea rsi, [rbx + 0x150]
0x185a9:   4c 89 e7                              	mov rdi, r12
0x185ac:   e8 b7 65 02 00                        	call 0x3eb68 <memcpy>
0x185b1:   8b 83 54 02 00 00                     	mov eax, dword ptr [rbx + 0x254]
0x185b7:   eb 69                                 	jmp 0x18622
0x185b9:   8b 83 64 04 00 00                     	mov eax, dword ptr [rbx + 0x464]
0x185bf:   85 c0                                 	test eax, eax
0x185c1:   74 19                                 	je 0x185dc <get_DigitalCopyControlDescriptor+0xac>
0x185c3:   89 c2                                 	mov edx, eax
0x185c5:   48 8d b3 60 03 00 00                  	lea rsi, [rbx + 0x360]
0x185cc:   4c 89 e7                              	mov rdi, r12
0x185cf:   e8 94 65 02 00                        	call 0x3eb68 <memcpy>
0x185d4:   8b 83 64 04 00 00                     	mov eax, dword ptr [rbx + 0x464]
0x185da:   eb 46                                 	jmp 0x18622
0x185dc:   8b 83 74 06 00 00                     	mov eax, dword ptr [rbx + 0x674]
0x185e2:   85 c0                                 	test eax, eax
0x185e4:   74 37                                 	je 0x1861d
0x185e6:   89 c2                                 	mov edx, eax
0x185e8:   48 8d b3 70 05 00 00                  	lea rsi, [rbx + 0x570]
0x185ef:   4c 89 e7                              	mov rdi, r12
0x185f2:   e8 71 65 02 00                        	call 0x3eb68 <memcpy>
; function: get_prognum_ex at 0x185f7 -- 0x18627
0x185f7:   8b 83 74 06 00 00                     	mov eax, dword ptr [rbx + 0x674]
0x185fd:   eb 23                                 	jmp 0x18622 <get_prognum_ex+0x2b>
0x185ff:   44 89 d8                              	mov eax, r11d
0x18602:   83 c0 01                              	add eax, 1
0x18605:   39 f0                                 	cmp eax, esi
0x18607:   7c 82                                 	jl 0x1858b
0x18609:   41 83 c1 01                           	add r9d, 1
0x1860d:   49 81 c0 80 07 00 00                  	add r8, 0x780
0x18614:   45 39 ca                              	cmp r10d, r9d
0x18617:   0f 8f 4f ff ff ff                     	jg 0x1856c
0x1861d:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x18622:   5b                                    	pop rbx
0x18623:   41 5c                                 	pop r12
0x18625:   c9                                    	leave 
0x18626:   c3                                    	ret 
; function: get_prognum_ex at 0x18627 -- 0x18648
0x18627:   55                                    	push rbp
0x18628:   48 89 e5                              	mov rbp, rsp
0x1862b:   48 83 ec 10                           	sub rsp, 0x10
0x1862f:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x18633:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x18638:   e8 b3 65 02 00                        	call 0x3ebf0 <mcount>
0x1863d:   49 89 f4                              	mov r12, rsi
0x18640:   e8 1b f4 ff ff                        	call 0x17a60 <private_data>
0x18645:   48 89 c3                              	mov rbx, rax
; data inside code section at 0x18648 -- 0x1864b
0x18648:   b8 00 00                                           |...             |
; function: swap_ts_section at 0x1864b -- 0x1867b
0x1864b:   00 00                                 	add byte ptr [rax], al
0x1864d:   80 bb 74 1a 09 00 00                  	cmp byte ptr [rbx + 0x91a74], 0
0x18654:   74 1a                                 	je 0x18670 <swap_ts_section+0x25>
0x18656:   48 8d b3 74 06 01 00                  	lea rsi, [rbx + 0x10674]
0x1865d:   ba 00 14 08 00                        	mov edx, 0x81400
0x18662:   4c 89 e7                              	mov rdi, r12
0x18665:   e8 fe 64 02 00                        	call 0x3eb68 <memcpy>
0x1866a:   8b 83 f8 03 00 00                     	mov eax, dword ptr [rbx + 0x3f8]
0x18670:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x18674:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x18679:   c9                                    	leave 
0x1867a:   c3                                    	ret 
; function: swap_ts_section at 0x1867b -- 0x1873a
0x1867b:   55                                    	push rbp
0x1867c:   48 89 e5                              	mov rbp, rsp
0x1867f:   48 83 ec 38                           	sub rsp, 0x38
0x18683:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x18687:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x1868b:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x1868f:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x18693:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x18697:   e8 54 65 02 00                        	call 0x3ebf0 <mcount>
0x1869c:   44 8b 7f 40                           	mov r15d, dword ptr [rdi + 0x40]
0x186a0:   44 8b 77 3c                           	mov r14d, dword ptr [rdi + 0x3c]
0x186a4:   44 8b 6f 38                           	mov r13d, dword ptr [rdi + 0x38]
0x186a8:   44 8b 67 34                           	mov r12d, dword ptr [rdi + 0x34]
0x186ac:   8b 5f 30                              	mov ebx, dword ptr [rdi + 0x30]
0x186af:   44 8b 5f 2c                           	mov r11d, dword ptr [rdi + 0x2c]
0x186b3:   44 8b 57 28                           	mov r10d, dword ptr [rdi + 0x28]
0x186b7:   44 8b 4f 24                           	mov r9d, dword ptr [rdi + 0x24]
0x186bb:   44 8b 47 20                           	mov r8d, dword ptr [rdi + 0x20]
0x186bf:   8b 4f 18                              	mov ecx, dword ptr [rdi + 0x18]
0x186c2:   48 8b 57 10                           	mov rdx, qword ptr [rdi + 0x10]
0x186c6:   48 8b 47 08                           	mov rax, qword ptr [rdi + 8]
0x186ca:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x186ce:   48 8b 07                              	mov rax, qword ptr [rdi]
0x186d1:   48 89 45 d0                           	mov qword ptr [rbp - 0x30], rax
0x186d5:   48 8b 06                              	mov rax, qword ptr [rsi]
0x186d8:   48 89 07                              	mov qword ptr [rdi], rax
0x186db:   48 8b 46 08                           	mov rax, qword ptr [rsi + 8]
0x186df:   48 89 47 08                           	mov qword ptr [rdi + 8], rax
0x186e3:   48 8b 46 10                           	mov rax, qword ptr [rsi + 0x10]
0x186e7:   48 89 47 10                           	mov qword ptr [rdi + 0x10], rax
0x186eb:   48 8b 46 18                           	mov rax, qword ptr [rsi + 0x18]
0x186ef:   48 89 47 18                           	mov qword ptr [rdi + 0x18], rax
0x186f3:   48 8b 46 20                           	mov rax, qword ptr [rsi + 0x20]
0x186f7:   48 89 47 20                           	mov qword ptr [rdi + 0x20], rax
0x186fb:   48 8b 46 28                           	mov rax, qword ptr [rsi + 0x28]
0x186ff:   48 89 47 28                           	mov qword ptr [rdi + 0x28], rax
0x18703:   48 8b 46 30                           	mov rax, qword ptr [rsi + 0x30]
0x18707:   48 89 47 30                           	mov qword ptr [rdi + 0x30], rax
0x1870b:   48 8b 46 38                           	mov rax, qword ptr [rsi + 0x38]
0x1870f:   48 89 47 38                           	mov qword ptr [rdi + 0x38], rax
0x18713:   48 8b 46 40                           	mov rax, qword ptr [rsi + 0x40]
0x18717:   48 89 47 40                           	mov qword ptr [rdi + 0x40], rax
0x1871b:   44 89 7e 40                           	mov dword ptr [rsi + 0x40], r15d
0x1871f:   44 89 76 3c                           	mov dword ptr [rsi + 0x3c], r14d
0x18723:   44 89 6e 38                           	mov dword ptr [rsi + 0x38], r13d
0x18727:   44 89 66 34                           	mov dword ptr [rsi + 0x34], r12d
0x1872b:   89 5e 30                              	mov dword ptr [rsi + 0x30], ebx
0x1872e:   44 89 5e 2c                           	mov dword ptr [rsi + 0x2c], r11d
0x18732:   44 89 56 28                           	mov dword ptr [rsi + 0x28], r10d
0x18736:   44 89 4e 24                           	mov dword ptr [rsi + 0x24], r9d
; function: proc_emm at 0x1873a -- 0x1876a
0x1873a:   44 89 46 20                           	mov dword ptr [rsi + 0x20], r8d
0x1873e:   89 4e 18                              	mov dword ptr [rsi + 0x18], ecx
0x18741:   48 89 56 10                           	mov qword ptr [rsi + 0x10], rdx
0x18745:   48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x18749:   48 89 46 08                           	mov qword ptr [rsi + 8], rax
0x1874d:   48 8b 45 d0                           	mov rax, qword ptr [rbp - 0x30]
0x18751:   48 89 06                              	mov qword ptr [rsi], rax
0x18754:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x18758:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x1875c:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x18760:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x18764:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x18768:   c9                                    	leave 
0x18769:   c3                                    	ret 
; function: proc_emm at 0x1876a -- 0x18879
0x1876a:   55                                    	push rbp
0x1876b:   48 89 e5                              	mov rbp, rsp
0x1876e:   41 57                                 	push r15
0x18770:   41 56                                 	push r14
0x18772:   41 55                                 	push r13
0x18774:   41 54                                 	push r12
0x18776:   53                                    	push rbx
0x18777:   48 83 ec 18                           	sub rsp, 0x18
0x1877b:   e8 70 64 02 00                        	call 0x3ebf0 <mcount>
0x18780:   49 89 fc                              	mov r12, rdi
0x18783:   b8 f9 ff ff ff                        	mov eax, 0xfffffff9
0x18788:   48 83 bf 18 06 01 00 00               	cmp qword ptr [rdi + 0x10618], 0
0x18790:   0f 84 07 01 00 00                     	je 0x1889d
0x18796:   48 8b 87 68 02 00 00                  	mov rax, qword ptr [rdi + 0x268]
0x1879d:   48 8d 58 08                           	lea rbx, [rax + 8]
0x187a1:   48 63 97 8c 02 00 00                  	movsxd rdx, dword ptr [rdi + 0x28c]
0x187a8:   4c 8d 74 10 ff                        	lea r14, [rax + rdx - 1]
0x187ad:   48 83 c0 15                           	add rax, 0x15
0x187b1:   49 39 c6                              	cmp r14, rax
0x187b4:   0f 82 de 00 00 00                     	jb 0x18898
0x187ba:   4c 8d bf f4 02 00 00                  	lea r15, [rdi + 0x2f4]
0x187c1:   4c 89 7d c8                           	mov qword ptr [rbp - 0x38], r15
0x187c5:   0f b6 0b                              	movzx ecx, byte ptr [rbx]
0x187c8:   c1 e1 08                              	shl ecx, 8
0x187cb:   0f b6 43 01                           	movzx eax, byte ptr [rbx + 1]
0x187cf:   09 c1                                 	or ecx, eax
0x187d1:   0f b6 43 02                           	movzx eax, byte ptr [rbx + 2]
0x187d5:   c1 e0 08                              	shl eax, 8
0x187d8:   0f b6 53 03                           	movzx edx, byte ptr [rbx + 3]
0x187dc:   09 d0                                 	or eax, edx
0x187de:   c1 e0 08                              	shl eax, 8
0x187e1:   0f b6 53 04                           	movzx edx, byte ptr [rbx + 4]
0x187e5:   09 d0                                 	or eax, edx
0x187e7:   c1 e0 08                              	shl eax, 8
0x187ea:   44 0f b6 6b 06                        	movzx r13d, byte ptr [rbx + 6]
0x187ef:   41 83 c5 07                           	add r13d, 7
0x187f3:   0f b6 53 05                           	movzx edx, byte ptr [rbx + 5]
0x187f7:   09 d0                                 	or eax, edx
0x187f9:   41 39 84 24 20 06 01 00               	cmp dword ptr [r12 + 0x10620], eax
0x18801:   75 47                                 	jne 0x1884a <proc_emm+0xe0>
0x18803:   41 39 8c 24 24 06 01 00               	cmp dword ptr [r12 + 0x10624], ecx
0x1880b:   75 3d                                 	jne 0x1884a <proc_emm+0xe0>
0x1880d:   49 63 d5                              	movsxd rdx, r13d
0x18810:   48 89 de                              	mov rsi, rbx
0x18813:   4c 89 ff                              	mov rdi, r15
0x18816:   e8 4d 63 02 00                        	call 0x3eb68 <memcpy>
0x1881b:   45 89 ac 24 f4 03 00 00               	mov dword ptr [r12 + 0x3f4], r13d
0x18823:   41 c7 84 24 f0 02 00 00 01 00 00 00   	mov dword ptr [r12 + 0x2f0], 1
0x1882f:   49 8b 84 24 18 06 01 00               	mov rax, qword ptr [r12 + 0x10618]
0x18837:   44 89 ea                              	mov edx, r13d
0x1883a:   48 8b 75 c8                           	mov rsi, qword ptr [rbp - 0x38]
0x1883e:   48 89 c7                              	mov rdi, rax
0x18841:   ff 50 28                              	call qword ptr [rax + 0x28]
0x18844:   85 c0                                 	test eax, eax
0x18846:   79 31                                 	jns 0x18879 <proc_emm+0x10d>
0x18848:   eb 0e                                 	jmp 0x18858 <proc_emm+0xee>
0x1884a:   41 c7 84 24 f0 02 00 00 00 00 00 00   	mov dword ptr [r12 + 0x2f0], 0
0x18856:   eb 2d                                 	jmp 0x18885
0x18858:   41 8b 84 24 f0 02 00 00               	mov eax, dword ptr [r12 + 0x2f0]
0x18860:   83 f8 64                              	cmp eax, 0x64
0x18863:   7e 07                                 	jle 0x1886c <proc_emm+0x102>
0x18865:   b8 f5 ff ff ff                        	mov eax, 0xfffffff5
0x1886a:   eb 31                                 	jmp 0x1889d
0x1886c:   83 c0 01                              	add eax, 1
0x1886f:   41 89 84 24 f0 02 00 00               	mov dword ptr [r12 + 0x2f0], eax
0x18877:   eb 0c                                 	jmp 0x18885
; data inside code section at 0x18879 -- 0x1887c
0x18879:   41 c7 84                                           |A..             |
; function: proc_sdt at 0x1887c -- 0x188ac
0x1887c:   24 f0                                 	and al, 0xf0
0x1887e:   02 00                                 	add al, byte ptr [rax]
0x18880:   00 00                                 	add byte ptr [rax], al
0x18882:   00 00                                 	add byte ptr [rax], al
0x18884:   00 4d 63                              	add byte ptr [rbp + 0x63], cl
0x18887:   ed                                    	in eax, dx
0x18888:   4c 01 eb                              	add rbx, r13
0x1888b:   48 8d 43 0d                           	lea rax, [rbx + 0xd]
0x1888f:   49 39 c6                              	cmp r14, rax
0x18892:   0f 83 2d ff ff ff                     	jae 0x187c5
0x18898:   b8 00 00 00 00                        	mov eax, 0
0x1889d:   48 83 c4 18                           	add rsp, 0x18
0x188a1:   5b                                    	pop rbx
0x188a2:   41 5c                                 	pop r12
0x188a4:   41 5d                                 	pop r13
0x188a6:   41 5e                                 	pop r14
0x188a8:   41 5f                                 	pop r15
0x188aa:   c9                                    	leave 
0x188ab:   c3                                    	ret 
; function: proc_sdt at 0x188ac -- 0x18a54
0x188ac:   55                                    	push rbp
0x188ad:   48 89 e5                              	mov rbp, rsp
0x188b0:   41 57                                 	push r15
0x188b2:   41 56                                 	push r14
0x188b4:   41 55                                 	push r13
0x188b6:   41 54                                 	push r12
0x188b8:   53                                    	push rbx
0x188b9:   48 83 ec 38                           	sub rsp, 0x38
0x188bd:   e8 2e 63 02 00                        	call 0x3ebf0 <mcount>
0x188c2:   48 89 7d b8                           	mov qword ptr [rbp - 0x48], rdi
0x188c6:   83 bf 58 01 00 00 42                  	cmp dword ptr [rdi + 0x158], 0x42
0x188cd:   0f 85 9d 01 00 00                     	jne 0x18a70
0x188d3:   48 8b 87 40 01 00 00                  	mov rax, qword ptr [rdi + 0x140]
0x188da:   48 63 97 64 01 00 00                  	movsxd rdx, dword ptr [rdi + 0x164]
0x188e1:   48 8d 54 10 ff                        	lea rdx, [rax + rdx - 1]
0x188e6:   48 89 55 a8                           	mov qword ptr [rbp - 0x58], rdx
0x188ea:   48 83 c0 0b                           	add rax, 0xb
0x188ee:   e9 6f 01 00 00                        	jmp 0x18a62
0x188f3:   44 0f b6 22                           	movzx r12d, byte ptr [rdx]
0x188f7:   0f b6 10                              	movzx edx, byte ptr [rax]
0x188fa:   c1 e2 08                              	shl edx, 8
0x188fd:   41 09 d4                              	or r12d, edx
0x18900:   48 8d 58 05                           	lea rbx, [rax + 5]
0x18904:   0f b6 50 03                           	movzx edx, byte ptr [rax + 3]
0x18908:   c1 e2 08                              	shl edx, 8
0x1890b:   0f b6 40 04                           	movzx eax, byte ptr [rax + 4]
0x1890f:   09 d0                                 	or eax, edx
0x18911:   25 ff 0f 00 00                        	and eax, 0xfff
0x18916:   48 8d 04 03                           	lea rax, [rbx + rax]
0x1891a:   48 89 45 c0                           	mov qword ptr [rbp - 0x40], rax
0x1891e:   48 39 c3                              	cmp rbx, rax
0x18921:   0f 83 37 01 00 00                     	jae 0x18a5e
0x18927:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x1892a:   89 45 cc                              	mov dword ptr [rbp - 0x34], eax
0x1892d:   44 0f b6 6b 01                        	movzx r13d, byte ptr [rbx + 1]
0x18932:   4c 8d 7b 02                           	lea r15, [rbx + 2]
0x18936:   45 85 ed                              	test r13d, r13d
0x18939:   0f 95 45 cb                           	setne byte ptr [rbp - 0x35]
0x1893d:   3d c1 00 00 00                        	cmp eax, 0xc1
0x18942:   75 7e                                 	jne 0x189c2 <proc_sdt+0x116>
0x18944:   80 7d cb 00                           	cmp byte ptr [rbp - 0x35], 0
0x18948:   74 78                                 	je 0x189c2 <proc_sdt+0x116>
0x1894a:   44 89 e8                              	mov eax, r13d
0x1894d:   49 8d 04 07                           	lea rax, [r15 + rax]
0x18951:   48 39 45 c0                           	cmp qword ptr [rbp - 0x40], rax
0x18955:   72 6b                                 	jb 0x189c2 <proc_sdt+0x116>
0x18957:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x1895b:   8b b2 f8 03 00 00                     	mov esi, dword ptr [rdx + 0x3f8]
0x18961:   85 f6                                 	test esi, esi
0x18963:   7e 5d                                 	jle 0x189c2 <proc_sdt+0x116>
0x18965:   4c 8b b2 00 04 00 00                  	mov r14, qword ptr [rdx + 0x400]
0x1896c:   49 8d 86 80 07 00 00                  	lea rax, [r14 + 0x780]
0x18973:   ba 00 00 00 00                        	mov edx, 0
0x18978:   45 39 a6 98 00 00 00                  	cmp dword ptr [r14 + 0x98], r12d
0x1897f:   75 3a                                 	jne 0x189bb <proc_sdt+0x10f>
0x18981:   eb 14                                 	jmp 0x18997 <proc_sdt+0xeb>
0x18983:   49 89 c6                              	mov r14, rax
0x18986:   8b 88 98 00 00 00                     	mov ecx, dword ptr [rax + 0x98]
0x1898c:   48 05 80 07 00 00                     	add rax, 0x780
0x18992:   44 39 e1                              	cmp ecx, r12d
0x18995:   75 24                                 	jne 0x189bb <proc_sdt+0x10f>
0x18997:   41 8d 4d 02                           	lea ecx, [r13 + 2]
0x1899b:   89 4d b4                              	mov dword ptr [rbp - 0x4c], ecx
0x1899e:   49 8d be 60 03 00 00                  	lea rdi, [r14 + 0x360]
0x189a5:   89 ca                                 	mov edx, ecx
0x189a7:   48 89 de                              	mov rsi, rbx
0x189aa:   e8 b9 61 02 00                        	call 0x3eb68 <memcpy>
0x189af:   8b 45 b4                              	mov eax, dword ptr [rbp - 0x4c]
0x189b2:   41 89 86 64 04 00 00                  	mov dword ptr [r14 + 0x464], eax
0x189b9:   eb 07                                 	jmp 0x189c2 <proc_sdt+0x116>
0x189bb:   83 c2 01                              	add edx, 1
0x189be:   39 f2                                 	cmp edx, esi
0x189c0:   7c c1                                 	jl 0x18983 <proc_sdt+0xd7>
0x189c2:   80 7d cb 00                           	cmp byte ptr [rbp - 0x35], 0
0x189c6:   0f 84 81 00 00 00                     	je 0x18a4d <proc_sdt+0x1a1>
0x189cc:   81 7d cc de 00 00 00                  	cmp dword ptr [rbp - 0x34], 0xde
0x189d3:   75 78                                 	jne 0x18a4d <proc_sdt+0x1a1>
0x189d5:   44 89 e8                              	mov eax, r13d
0x189d8:   49 8d 04 07                           	lea rax, [r15 + rax]
0x189dc:   48 39 45 c0                           	cmp qword ptr [rbp - 0x40], rax
0x189e0:   72 6b                                 	jb 0x18a4d <proc_sdt+0x1a1>
0x189e2:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x189e6:   8b b2 f8 03 00 00                     	mov esi, dword ptr [rdx + 0x3f8]
0x189ec:   85 f6                                 	test esi, esi
0x189ee:   7e 5d                                 	jle 0x18a4d <proc_sdt+0x1a1>
0x189f0:   4c 8b b2 00 04 00 00                  	mov r14, qword ptr [rdx + 0x400]
0x189f7:   49 8d 86 80 07 00 00                  	lea rax, [r14 + 0x780]
0x189fe:   ba 00 00 00 00                        	mov edx, 0
0x18a03:   45 39 a6 98 00 00 00                  	cmp dword ptr [r14 + 0x98], r12d
0x18a0a:   75 3a                                 	jne 0x18a46 <proc_sdt+0x19a>
0x18a0c:   eb 14                                 	jmp 0x18a22 <proc_sdt+0x176>
0x18a0e:   49 89 c6                              	mov r14, rax
0x18a11:   8b 88 98 00 00 00                     	mov ecx, dword ptr [rax + 0x98]
0x18a17:   48 05 80 07 00 00                     	add rax, 0x780
0x18a1d:   44 39 e1                              	cmp ecx, r12d
0x18a20:   75 24                                 	jne 0x18a46 <proc_sdt+0x19a>
0x18a22:   41 8d 4d 02                           	lea ecx, [r13 + 2]
0x18a26:   89 4d cc                              	mov dword ptr [rbp - 0x34], ecx
0x18a29:   49 8d be 68 04 00 00                  	lea rdi, [r14 + 0x468]
0x18a30:   89 ca                                 	mov edx, ecx
0x18a32:   48 89 de                              	mov rsi, rbx
0x18a35:   e8 2e 61 02 00                        	call 0x3eb68 <memcpy>
0x18a3a:   8b 45 cc                              	mov eax, dword ptr [rbp - 0x34]
0x18a3d:   41 89 86 6c 05 00 00                  	mov dword ptr [r14 + 0x56c], eax
0x18a44:   eb 07                                 	jmp 0x18a4d <proc_sdt+0x1a1>
0x18a46:   83 c2 01                              	add edx, 1
0x18a49:   39 d6                                 	cmp esi, edx
0x18a4b:   7f c1                                 	jg 0x18a0e <proc_sdt+0x162>
0x18a4d:   44 89 eb                              	mov ebx, r13d
0x18a50:   49 8d 1c 1f                           	lea rbx, [r15 + rbx]
; function: proc_eit at 0x18a54 -- 0x18a84
0x18a54:   48 39 5d c0                           	cmp qword ptr [rbp - 0x40], rbx
0x18a58:   0f 87 c9 fe ff ff                     	ja 0x18927
0x18a5e:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x18a62:   48 8d 50 01                           	lea rdx, [rax + 1]
0x18a66:   48 39 55 a8                           	cmp qword ptr [rbp - 0x58], rdx
0x18a6a:   0f 87 83 fe ff ff                     	ja 0x188f3
0x18a70:   b8 00 00 00 00                        	mov eax, 0
0x18a75:   48 83 c4 38                           	add rsp, 0x38
0x18a79:   5b                                    	pop rbx
0x18a7a:   41 5c                                 	pop r12
0x18a7c:   41 5d                                 	pop r13
0x18a7e:   41 5e                                 	pop r14
0x18a80:   41 5f                                 	pop r15
0x18a82:   c9                                    	leave 
0x18a83:   c3                                    	ret 
; function: proc_eit at 0x18a84 -- 0x18c28
0x18a84:   55                                    	push rbp
0x18a85:   48 89 e5                              	mov rbp, rsp
0x18a88:   41 57                                 	push r15
0x18a8a:   41 56                                 	push r14
0x18a8c:   41 55                                 	push r13
0x18a8e:   41 54                                 	push r12
0x18a90:   53                                    	push rbx
0x18a91:   48 83 ec 38                           	sub rsp, 0x38
0x18a95:   e8 56 61 02 00                        	call 0x3ebf0 <mcount>
0x18a9a:   48 89 7d b8                           	mov qword ptr [rbp - 0x48], rdi
0x18a9e:   83 bf e8 01 00 00 4e                  	cmp dword ptr [rdi + 0x1e8], 0x4e
0x18aa5:   0f 85 99 01 00 00                     	jne 0x18c44
0x18aab:   48 8b 87 d0 01 00 00                  	mov rax, qword ptr [rdi + 0x1d0]
0x18ab2:   48 63 97 f4 01 00 00                  	movsxd rdx, dword ptr [rdi + 0x1f4]
0x18ab9:   48 8d 54 10 ff                        	lea rdx, [rax + rdx - 1]
0x18abe:   48 89 55 a8                           	mov qword ptr [rbp - 0x58], rdx
0x18ac2:   48 83 c0 0e                           	add rax, 0xe
0x18ac6:   e9 6b 01 00 00                        	jmp 0x18c36
0x18acb:   48 8d 58 0c                           	lea rbx, [rax + 0xc]
0x18acf:   0f b6 50 0a                           	movzx edx, byte ptr [rax + 0xa]
0x18ad3:   c1 e2 08                              	shl edx, 8
0x18ad6:   0f b6 40 0b                           	movzx eax, byte ptr [rax + 0xb]
0x18ada:   09 d0                                 	or eax, edx
0x18adc:   25 ff 0f 00 00                        	and eax, 0xfff
0x18ae1:   48 8d 04 03                           	lea rax, [rbx + rax]
0x18ae5:   48 89 45 c0                           	mov qword ptr [rbp - 0x40], rax
0x18ae9:   48 39 c3                              	cmp rbx, rax
0x18aec:   0f 83 40 01 00 00                     	jae 0x18c32
0x18af2:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x18af5:   89 45 cc                              	mov dword ptr [rbp - 0x34], eax
0x18af8:   44 0f b6 63 01                        	movzx r12d, byte ptr [rbx + 1]
0x18afd:   4c 8d 73 02                           	lea r14, [rbx + 2]
0x18b01:   45 85 e4                              	test r12d, r12d
0x18b04:   41 0f 95 c7                           	setne r15b
0x18b08:   3d c1 00 00 00                        	cmp eax, 0xc1
0x18b0d:   0f 85 83 00 00 00                     	jne 0x18b96 <proc_eit+0x112>
0x18b13:   45 84 ff                              	test r15b, r15b
0x18b16:   74 7e                                 	je 0x18b96 <proc_eit+0x112>
0x18b18:   44 89 e0                              	mov eax, r12d
0x18b1b:   49 8d 04 06                           	lea rax, [r14 + rax]
0x18b1f:   48 39 45 c0                           	cmp qword ptr [rbp - 0x40], rax
0x18b23:   72 71                                 	jb 0x18b96 <proc_eit+0x112>
0x18b25:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x18b29:   8b b2 f8 03 00 00                     	mov esi, dword ptr [rdx + 0x3f8]
0x18b2f:   85 f6                                 	test esi, esi
0x18b31:   7e 63                                 	jle 0x18b96 <proc_eit+0x112>
0x18b33:   4c 8b aa 00 04 00 00                  	mov r13, qword ptr [rdx + 0x400]
0x18b3a:   8b ba f8 01 00 00                     	mov edi, dword ptr [rdx + 0x1f8]
0x18b40:   49 8d 85 80 07 00 00                  	lea rax, [r13 + 0x780]
0x18b47:   ba 00 00 00 00                        	mov edx, 0
0x18b4c:   41 39 bd 98 00 00 00                  	cmp dword ptr [r13 + 0x98], edi
0x18b53:   75 3a                                 	jne 0x18b8f <proc_eit+0x10b>
0x18b55:   eb 13                                 	jmp 0x18b6a <proc_eit+0xe6>
0x18b57:   49 89 c5                              	mov r13, rax
0x18b5a:   8b 88 98 00 00 00                     	mov ecx, dword ptr [rax + 0x98]
0x18b60:   48 05 80 07 00 00                     	add rax, 0x780
0x18b66:   39 f9                                 	cmp ecx, edi
0x18b68:   75 25                                 	jne 0x18b8f <proc_eit+0x10b>
0x18b6a:   41 8d 4c 24 02                        	lea ecx, [r12 + 2]
0x18b6f:   89 4d b4                              	mov dword ptr [rbp - 0x4c], ecx
0x18b72:   49 8d bd 70 05 00 00                  	lea rdi, [r13 + 0x570]
0x18b79:   89 ca                                 	mov edx, ecx
0x18b7b:   48 89 de                              	mov rsi, rbx
0x18b7e:   e8 e5 5f 02 00                        	call 0x3eb68 <memcpy>
0x18b83:   8b 45 b4                              	mov eax, dword ptr [rbp - 0x4c]
0x18b86:   41 89 85 74 06 00 00                  	mov dword ptr [r13 + 0x674], eax
0x18b8d:   eb 07                                 	jmp 0x18b96 <proc_eit+0x112>
0x18b8f:   83 c2 01                              	add edx, 1
0x18b92:   39 f2                                 	cmp edx, esi
0x18b94:   7c c1                                 	jl 0x18b57 <proc_eit+0xd3>
0x18b96:   45 84 ff                              	test r15b, r15b
0x18b99:   0f 84 82 00 00 00                     	je 0x18c21 <proc_eit+0x19d>
0x18b9f:   81 7d cc de 00 00 00                  	cmp dword ptr [rbp - 0x34], 0xde
0x18ba6:   75 79                                 	jne 0x18c21 <proc_eit+0x19d>
0x18ba8:   44 89 e0                              	mov eax, r12d
0x18bab:   49 8d 04 06                           	lea rax, [r14 + rax]
0x18baf:   48 39 45 c0                           	cmp qword ptr [rbp - 0x40], rax
0x18bb3:   72 6c                                 	jb 0x18c21 <proc_eit+0x19d>
0x18bb5:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
0x18bb9:   8b b2 f8 03 00 00                     	mov esi, dword ptr [rdx + 0x3f8]
0x18bbf:   85 f6                                 	test esi, esi
0x18bc1:   7e 5e                                 	jle 0x18c21 <proc_eit+0x19d>
0x18bc3:   4c 8b aa 00 04 00 00                  	mov r13, qword ptr [rdx + 0x400]
0x18bca:   8b ba f8 01 00 00                     	mov edi, dword ptr [rdx + 0x1f8]
0x18bd0:   49 8d 85 80 07 00 00                  	lea rax, [r13 + 0x780]
0x18bd7:   ba 00 00 00 00                        	mov edx, 0
0x18bdc:   41 39 bd 98 00 00 00                  	cmp dword ptr [r13 + 0x98], edi
0x18be3:   75 35                                 	jne 0x18c1a <proc_eit+0x196>
0x18be5:   eb 13                                 	jmp 0x18bfa <proc_eit+0x176>
0x18be7:   49 89 c5                              	mov r13, rax
0x18bea:   8b 88 98 00 00 00                     	mov ecx, dword ptr [rax + 0x98]
0x18bf0:   48 05 80 07 00 00                     	add rax, 0x780
0x18bf6:   39 f9                                 	cmp ecx, edi
0x18bf8:   75 20                                 	jne 0x18c1a <proc_eit+0x196>
0x18bfa:   45 8d 7c 24 02                        	lea r15d, [r12 + 2]
0x18bff:   49 8d bd 78 06 00 00                  	lea rdi, [r13 + 0x678]
0x18c06:   44 89 fa                              	mov edx, r15d
0x18c09:   48 89 de                              	mov rsi, rbx
0x18c0c:   e8 57 5f 02 00                        	call 0x3eb68 <memcpy>
0x18c11:   45 89 bd 7c 07 00 00                  	mov dword ptr [r13 + 0x77c], r15d
0x18c18:   eb 07                                 	jmp 0x18c21 <proc_eit+0x19d>
0x18c1a:   83 c2 01                              	add edx, 1
0x18c1d:   39 d6                                 	cmp esi, edx
0x18c1f:   7f c6                                 	jg 0x18be7 <proc_eit+0x163>
0x18c21:   44 89 e3                              	mov ebx, r12d
0x18c24:   49 8d 1c 1e                           	lea rbx, [r14 + rbx]
; function: release_work_buffer at 0x18c28 -- 0x18c58
0x18c28:   48 39 5d c0                           	cmp qword ptr [rbp - 0x40], rbx
0x18c2c:   0f 87 c0 fe ff ff                     	ja 0x18af2
0x18c32:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x18c36:   48 8d 50 01                           	lea rdx, [rax + 1]
0x18c3a:   48 39 55 a8                           	cmp qword ptr [rbp - 0x58], rdx
0x18c3e:   0f 87 87 fe ff ff                     	ja 0x18acb
0x18c44:   b8 00 00 00 00                        	mov eax, 0
0x18c49:   48 83 c4 38                           	add rsp, 0x38
0x18c4d:   5b                                    	pop rbx
0x18c4e:   41 5c                                 	pop r12
0x18c50:   41 5d                                 	pop r13
0x18c52:   41 5e                                 	pop r14
0x18c54:   41 5f                                 	pop r15
0x18c56:   c9                                    	leave 
0x18c57:   c3                                    	ret 
; function: release_work_buffer at 0x18c58 -- 0x18c69
0x18c58:   55                                    	push rbp
0x18c59:   48 89 e5                              	mov rbp, rsp
0x18c5c:   53                                    	push rbx
0x18c5d:   48 83 ec 08                           	sub rsp, 8
0x18c61:   e8 8a 5f 02 00                        	call 0x3ebf0 <mcount>
0x18c66:   48 89 fb                              	mov rbx, rdi
; data inside code section at 0x18c69 -- 0x18c6b
0x18c69:   48 8b                                              |H.              |
; function: release_ts_section at 0x18c6b -- 0x18c6c
; function: function_18c6c at 0x18c6c -- 0x18c9b
0x18c6c:   48 85 ff                              	test rdi, rdi
0x18c6f:   74 05                                 	je 0x18c76 <function_18c6c+0xa>
0x18c71:   e8 02 5f 02 00                        	call 0x3eb78 <kfree>
0x18c76:   48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0x18c7d:   48 c7 43 08 00 00 00 00               	mov qword ptr [rbx + 8], 0
0x18c85:   48 c7 43 10 00 00 00 00               	mov qword ptr [rbx + 0x10], 0
0x18c8d:   c7 43 18 00 00 00 00                  	mov dword ptr [rbx + 0x18], 0
0x18c94:   48 83 c4 08                           	add rsp, 8
0x18c98:   5b                                    	pop rbx
0x18c99:   c9                                    	leave 
0x18c9a:   c3                                    	ret 
; function: release_ts_section at 0x18c9b -- 0x18cb1
0x18c9b:   55                                    	push rbp
0x18c9c:   48 89 e5                              	mov rbp, rsp
0x18c9f:   53                                    	push rbx
0x18ca0:   48 83 ec 08                           	sub rsp, 8
0x18ca4:   e8 47 5f 02 00                        	call 0x3ebf0 <mcount>
0x18ca9:   48 89 fb                              	mov rbx, rdi
0x18cac:   e8 a7 ff ff ff                        	call 0x18c58 <release_work_buffer>
; data inside code section at 0x18cb1 -- 0x18cb2
0x18cb1:   48                                                 |H               |
; function: release_program at 0x18cb2 -- 0x18ce2
0x18cb2:   83 c3 20                              	add ebx, 0x20
0x18cb5:   48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0x18cbc:   48 c7 43 08 00 00 00 00               	mov qword ptr [rbx + 8], 0
0x18cc4:   48 c7 43 10 00 00 00 00               	mov qword ptr [rbx + 0x10], 0
0x18ccc:   48 c7 43 18 00 00 00 00               	mov qword ptr [rbx + 0x18], 0
0x18cd4:   c7 43 20 00 00 00 00                  	mov dword ptr [rbx + 0x20], 0
0x18cdb:   48 83 c4 08                           	add rsp, 8
0x18cdf:   5b                                    	pop rbx
0x18ce0:   c9                                    	leave 
0x18ce1:   c3                                    	ret 
; function: release_program at 0x18ce2 -- 0x18d29
0x18ce2:   55                                    	push rbp
0x18ce3:   48 89 e5                              	mov rbp, rsp
0x18ce6:   53                                    	push rbx
0x18ce7:   48 83 ec 08                           	sub rsp, 8
0x18ceb:   e8 00 5f 02 00                        	call 0x3ebf0 <mcount>
0x18cf0:   48 89 fb                              	mov rbx, rdi
0x18cf3:   48 8d 7f 08                           	lea rdi, [rdi + 8]
0x18cf7:   e8 9f ff ff ff                        	call 0x18c9b <release_ts_section>
0x18cfc:   48 8d 7b 50                           	lea rdi, [rbx + 0x50]
0x18d00:   e8 96 ff ff ff                        	call 0x18c9b <release_ts_section>
0x18d05:   48 8d bb a8 00 00 00                  	lea rdi, [rbx + 0xa8]
0x18d0c:   e8 8a ff ff ff                        	call 0x18c9b <release_ts_section>
0x18d11:   48 8d bb f0 00 00 00                  	lea rdi, [rbx + 0xf0]
0x18d18:   e8 7e ff ff ff                        	call 0x18c9b <release_ts_section>
0x18d1d:   48 8b bb 38 01 00 00                  	mov rdi, qword ptr [rbx + 0x138]
0x18d24:   48 85 ff                              	test rdi, rdi
0x18d27:   74 10                                 	je 0x18d39
; data inside code section at 0x18d29 -- 0x18d2d
0x18d29:   e8 4a 5e 02                                        |.J^.            |
; function: proc_pmt at 0x18d2d -- 0x18d5d
0x18d2d:   00 48 c7                              	add byte ptr [rax - 0x39], cl
0x18d30:   83 38 01                              	cmp dword ptr [rax], 1
0x18d33:   00 00                                 	add byte ptr [rax], al
0x18d35:   00 00                                 	add byte ptr [rax], al
0x18d37:   00 00                                 	add byte ptr [rax], al
0x18d39:   48 8b 83 48 01 00 00                  	mov rax, qword ptr [rbx + 0x148]
0x18d40:   48 85 c0                              	test rax, rax
0x18d43:   74 11                                 	je 0x18d56 <proc_pmt+0x29>
0x18d45:   48 89 c7                              	mov rdi, rax
0x18d48:   ff 50 08                              	call qword ptr [rax + 8]
0x18d4b:   48 c7 83 48 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x148], 0
0x18d56:   48 83 c4 08                           	add rsp, 8
0x18d5a:   5b                                    	pop rbx
0x18d5b:   c9                                    	leave 
0x18d5c:   c3                                    	ret 
; function: proc_pmt at 0x18d5d -- 0x18fc6
0x18d5d:   55                                    	push rbp
0x18d5e:   48 89 e5                              	mov rbp, rsp
0x18d61:   48 83 ec 70                           	sub rsp, 0x70
0x18d65:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x18d69:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x18d6d:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x18d71:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x18d75:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x18d79:   e8 72 5e 02 00                        	call 0x3ebf0 <mcount>
0x18d7e:   48 89 fb                              	mov rbx, rdi
0x18d81:   4c 8b 6f 10                           	mov r13, qword ptr [rdi + 0x10]
0x18d85:   49 8d 45 08                           	lea rax, [r13 + 8]
0x18d89:   44 8b 77 34                           	mov r14d, dword ptr [rdi + 0x34]
0x18d8d:   41 83 ee 09                           	sub r14d, 9
0x18d91:   4d 63 f6                              	movsxd r14, r14d
0x18d94:   4e 8d 34 30                           	lea r14, [rax + r14]
0x18d98:   0f b6 48 01                           	movzx ecx, byte ptr [rax + 1]
0x18d9c:   0f b6 10                              	movzx edx, byte ptr [rax]
0x18d9f:   c1 e2 08                              	shl edx, 8
0x18da2:   09 ca                                 	or edx, ecx
0x18da4:   81 e2 ff 1f 00 00                     	and edx, 0x1fff
0x18daa:   89 97 9c 00 00 00                     	mov dword ptr [rdi + 0x9c], edx
0x18db0:   49 83 c5 0c                           	add r13, 0xc ; "GNU"
0x18db4:   44 0f b6 60 02                        	movzx r12d, byte ptr [rax + 2]
0x18db9:   41 c1 e4 08                           	shl r12d, 8
0x18dbd:   0f b6 40 03                           	movzx eax, byte ptr [rax + 3]
0x18dc1:   41 09 c4                              	or r12d, eax
0x18dc4:   41 81 e4 ff 0f 00 00                  	and r12d, 0xfff
0x18dcb:   4f 8d 64 25 00                        	lea r12, [r13 + r12]
0x18dd0:   4d 39 e6                              	cmp r14, r12
0x18dd3:   0f 82 4d 02 00 00                     	jb 0x19026
0x18dd9:   49 8d 45 01                           	lea rax, [r13 + 1]
0x18ddd:   49 39 c4                              	cmp r12, rax
0x18de0:   0f 86 38 01 00 00                     	jbe 0x18f1e <proc_pmt+0x1c1>
0x18de6:   48 8d 97 a8 00 00 00                  	lea rdx, [rdi + 0xa8]
0x18ded:   48 89 55 a0                           	mov qword ptr [rbp - 0x60], rdx
0x18df1:   48 8d 97 f0 00 00 00                  	lea rdx, [rdi + 0xf0]
0x18df8:   48 89 55 98                           	mov qword ptr [rbp - 0x68], rdx
0x18dfc:   48 8d 97 50 01 00 00                  	lea rdx, [rdi + 0x150]
0x18e03:   48 89 55 b0                           	mov qword ptr [rbp - 0x50], rdx
0x18e07:   48 8d 97 58 02 00 00                  	lea rdx, [rdi + 0x258]
0x18e0e:   48 89 55 a8                           	mov qword ptr [rbp - 0x58], rdx
0x18e12:   4c 89 65 c8                           	mov qword ptr [rbp - 0x38], r12
0x18e16:   4c 89 75 90                           	mov qword ptr [rbp - 0x70], r14
0x18e1a:   48 89 7d c0                           	mov qword ptr [rbp - 0x40], rdi
0x18e1e:   45 0f b6 75 00                        	movzx r14d, byte ptr [r13]
0x18e23:   0f b6 18                              	movzx ebx, byte ptr [rax]
0x18e26:   4d 8d 65 02                           	lea r12, [r13 + 2]
0x18e2a:   41 83 fe 09                           	cmp r14d, 9
0x18e2e:   75 55                                 	jne 0x18e85 <proc_pmt+0x128>
0x18e30:   83 fb 03                              	cmp ebx, 3
0x18e33:   76 50                                 	jbe 0x18e85 <proc_pmt+0x128>
0x18e35:   89 d8                                 	mov eax, ebx
0x18e37:   49 8d 04 04                           	lea rax, [r12 + rax]
0x18e3b:   48 39 45 c8                           	cmp qword ptr [rbp - 0x38], rax
0x18e3f:   72 44                                 	jb 0x18e85 <proc_pmt+0x128>
0x18e41:   45 0f b6 7c 24 02                     	movzx r15d, byte ptr [r12 + 2]
0x18e47:   41 c1 e7 08                           	shl r15d, 8
0x18e4b:   41 0f b6 44 24 03                     	movzx eax, byte ptr [r12 + 3]
0x18e51:   41 09 c7                              	or r15d, eax
0x18e54:   41 81 e7 ff 1f 00 00                  	and r15d, 0x1fff
0x18e5b:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x18e5f:   44 3b b8 a0 00 00 00                  	cmp r15d, dword ptr [rax + 0xa0]
0x18e66:   74 12                                 	je 0x18e7a <proc_pmt+0x11d>
0x18e68:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x18e6c:   e8 d3 f3 ff ff                        	call 0x18244 <reset_ts_section>
0x18e71:   48 8b 7d 98                           	mov rdi, qword ptr [rbp - 0x68]
0x18e75:   e8 ca f3 ff ff                        	call 0x18244 <reset_ts_section>
0x18e7a:   48 8b 55 c0                           	mov rdx, qword ptr [rbp - 0x40]
0x18e7e:   44 89 ba a0 00 00 00                  	mov dword ptr [rdx + 0xa0], r15d
0x18e85:   85 db                                 	test ebx, ebx
0x18e87:   41 0f 95 c7                           	setne r15b
0x18e8b:   41 81 fe c1 00 00 00                  	cmp r14d, 0xc1
0x18e92:   75 32                                 	jne 0x18ec6 <proc_pmt+0x169>
0x18e94:   45 84 ff                              	test r15b, r15b
0x18e97:   74 2d                                 	je 0x18ec6 <proc_pmt+0x169>
0x18e99:   89 d8                                 	mov eax, ebx
0x18e9b:   49 8d 04 04                           	lea rax, [r12 + rax]
0x18e9f:   48 39 45 c8                           	cmp qword ptr [rbp - 0x38], rax
0x18ea3:   72 21                                 	jb 0x18ec6 <proc_pmt+0x169>
0x18ea5:   8d 43 02                              	lea eax, [rbx + 2]
0x18ea8:   89 45 bc                              	mov dword ptr [rbp - 0x44], eax
0x18eab:   89 c2                                 	mov edx, eax
0x18ead:   4c 89 ee                              	mov rsi, r13
0x18eb0:   48 8b 7d b0                           	mov rdi, qword ptr [rbp - 0x50]
0x18eb4:   e8 af 5c 02 00                        	call 0x3eb68 <memcpy>
0x18eb9:   8b 45 bc                              	mov eax, dword ptr [rbp - 0x44]
0x18ebc:   48 8b 55 c0                           	mov rdx, qword ptr [rbp - 0x40]
0x18ec0:   89 82 54 02 00 00                     	mov dword ptr [rdx + 0x254], eax
0x18ec6:   45 84 ff                              	test r15b, r15b
0x18ec9:   74 33                                 	je 0x18efe <proc_pmt+0x1a1>
0x18ecb:   41 81 fe de 00 00 00                  	cmp r14d, 0xde
0x18ed2:   75 2a                                 	jne 0x18efe <proc_pmt+0x1a1>
0x18ed4:   89 d8                                 	mov eax, ebx
0x18ed6:   49 8d 04 04                           	lea rax, [r12 + rax]
0x18eda:   48 39 45 c8                           	cmp qword ptr [rbp - 0x38], rax
0x18ede:   72 1e                                 	jb 0x18efe <proc_pmt+0x1a1>
0x18ee0:   44 8d 73 02                           	lea r14d, [rbx + 2]
0x18ee4:   44 89 f2                              	mov edx, r14d
0x18ee7:   4c 89 ee                              	mov rsi, r13
0x18eea:   48 8b 7d a8                           	mov rdi, qword ptr [rbp - 0x58]
0x18eee:   e8 75 5c 02 00                        	call 0x3eb68 <memcpy>
0x18ef3:   48 8b 55 c0                           	mov rdx, qword ptr [rbp - 0x40]
0x18ef7:   44 89 b2 5c 03 00 00                  	mov dword ptr [rdx + 0x35c], r14d
0x18efe:   89 db                                 	mov ebx, ebx
0x18f00:   4d 8d 2c 1c                           	lea r13, [r12 + rbx]
0x18f04:   49 8d 45 01                           	lea rax, [r13 + 1]
0x18f08:   48 39 45 c8                           	cmp qword ptr [rbp - 0x38], rax
0x18f0c:   0f 87 0c ff ff ff                     	ja 0x18e1e <proc_pmt+0xc1>
0x18f12:   4c 8b 65 c8                           	mov r12, qword ptr [rbp - 0x38]
0x18f16:   4c 8b 75 90                           	mov r14, qword ptr [rbp - 0x70]
0x18f1a:   48 8b 5d c0                           	mov rbx, qword ptr [rbp - 0x40]
0x18f1e:   4d 8d 6c 24 04                        	lea r13, [r12 + 4]
0x18f23:   b9 00 00 00 00                        	mov ecx, 0
0x18f28:   4d 39 ee                              	cmp r14, r13
0x18f2b:   76 2b                                 	jbe 0x18f58 <proc_pmt+0x1fb>
0x18f2d:   4c 89 ea                              	mov rdx, r13
0x18f30:   4c 89 e0                              	mov rax, r12
0x18f33:   83 c1 01                              	add ecx, 1
0x18f36:   0f b6 78 03                           	movzx edi, byte ptr [rax + 3]
0x18f3a:   c1 e7 08                              	shl edi, 8
0x18f3d:   0f b6 32                              	movzx esi, byte ptr [rdx]
0x18f40:   89 fa                                 	mov edx, edi
0x18f42:   09 f2                                 	or edx, esi
0x18f44:   81 e2 ff 0f 00 00                     	and edx, 0xfff
0x18f4a:   48 8d 44 10 05                        	lea rax, [rax + rdx + 5]
0x18f4f:   48 8d 50 04                           	lea rdx, [rax + 4]
0x18f53:   49 39 d6                              	cmp r14, rdx
0x18f56:   77 db                                 	ja 0x18f33 <proc_pmt+0x1d6>
0x18f58:   89 8b 40 01 00 00                     	mov dword ptr [rbx + 0x140], ecx
0x18f5e:   48 8b bb 38 01 00 00                  	mov rdi, qword ptr [rbx + 0x138]
0x18f65:   48 85 ff                              	test rdi, rdi
0x18f68:   74 10                                 	je 0x18f7a <proc_pmt+0x21d>
0x18f6a:   e8 09 5c 02 00                        	call 0x3eb78 <kfree>
0x18f6f:   48 c7 83 38 01 00 00 00 00 00 00      	mov qword ptr [rbx + 0x138], 0
0x18f7a:   48 63 bb 40 01 00 00                  	movsxd rdi, dword ptr [rbx + 0x140]
0x18f81:   48 c1 e7 03                           	shl rdi, 3
0x18f85:   be 20 00 00 00                        	mov esi, 0x20
0x18f8a:   e8 61 5d 02 00                        	call 0x3ecf0 <__kmalloc>
0x18f8f:   48 89 c7                              	mov rdi, rax
0x18f92:   48 89 83 38 01 00 00                  	mov qword ptr [rbx + 0x138], rax
0x18f99:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x18f9e:   48 85 ff                              	test rdi, rdi
0x18fa1:   0f 84 84 00 00 00                     	je 0x1902b
0x18fa7:   48 63 93 40 01 00 00                  	movsxd rdx, dword ptr [rbx + 0x140]
0x18fae:   48 c1 e2 03                           	shl rdx, 3
0x18fb2:   be 00 00 00 00                        	mov esi, 0
0x18fb7:   e8 84 5c 02 00                        	call 0x3ec40 <memset>
0x18fbc:   4d 39 ee                              	cmp r14, r13
0x18fbf:   76 65                                 	jbe 0x19026
0x18fc1:   b8 00 00 00 00                        	mov eax, 0
; data inside code section at 0x18fc6 -- 0x19011
0x18fc6:   48 63 d0 48 c1 e2 03 48  8b 8b 38 01 00 00 41 0f   |Hc.H...H..8...A.|
0x18fd6:   b6 34 24 89 74 11 04 48  8b 8b 38 01 00 00 41 0f   |.4$.t..H..8...A.|
0x18fe6:   b6 74 24 01 c1 e6 08 41  0f b6 7c 24 02 09 fe 81   |.t$....A..|$....|
0x18ff6:   e6 ff 1f 00 00 89 34 11  83 c0 01 41 0f b6 54 24   |......4....A..T$|
0x19006:   03 c1 e2 08 41 0f b6 4d  00 09 ca                  |....A..M...     |
; function: teardown at 0x19011 -- 0x19041
0x19011:   81 e2 ff 0f 00 00                     	and edx, 0xfff
0x19017:   4d 8d 64 14 05                        	lea r12, [r12 + rdx + 5]
0x1901c:   4d 8d 6c 24 04                        	lea r13, [r12 + 4]
0x19021:   4d 39 ee                              	cmp r14, r13
0x19024:   77 a0                                 	ja 0x18fc6
0x19026:   b8 00 00 00 00                        	mov eax, 0
0x1902b:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x1902f:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x19033:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x19037:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x1903b:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x1903f:   c9                                    	leave 
0x19040:   c3                                    	ret 
; function: teardown at 0x19041 -- 0x19188
0x19041:   55                                    	push rbp
0x19042:   48 89 e5                              	mov rbp, rsp
0x19045:   41 54                                 	push r12
0x19047:   53                                    	push rbx
0x19048:   e8 a3 5b 02 00                        	call 0x3ebf0 <mcount>
0x1904d:   48 89 fb                              	mov rbx, rdi
0x19050:   c7 47 04 00 00 00 00                  	mov dword ptr [rdi + 4], 0
0x19057:   c7 47 08 00 00 00 00                  	mov dword ptr [rdi + 8], 0
0x1905e:   c7 47 0c 00 00 00 00                  	mov dword ptr [rdi + 0xc], 0
0x19065:   c7 47 10 00 00 00 00                  	mov dword ptr [rdi + 0x10], 0
0x1906c:   48 8d 7f 18                           	lea rdi, [rdi + 0x18]
0x19070:   e8 26 fc ff ff                        	call 0x18c9b <release_ts_section>
0x19075:   48 8d 7b 60                           	lea rdi, [rbx + 0x60]
0x19079:   e8 1d fc ff ff                        	call 0x18c9b <release_ts_section>
0x1907e:   48 8d bb a8 00 00 00                  	lea rdi, [rbx + 0xa8]
0x19085:   e8 11 fc ff ff                        	call 0x18c9b <release_ts_section>
0x1908a:   48 8d bb f0 00 00 00                  	lea rdi, [rbx + 0xf0]
0x19091:   e8 05 fc ff ff                        	call 0x18c9b <release_ts_section>
0x19096:   48 8d bb 38 01 00 00                  	lea rdi, [rbx + 0x138]
0x1909d:   e8 f9 fb ff ff                        	call 0x18c9b <release_ts_section>
0x190a2:   48 8d bb 80 01 00 00                  	lea rdi, [rbx + 0x180]
0x190a9:   e8 ed fb ff ff                        	call 0x18c9b <release_ts_section>
0x190ae:   48 8d bb c8 01 00 00                  	lea rdi, [rbx + 0x1c8]
0x190b5:   e8 e1 fb ff ff                        	call 0x18c9b <release_ts_section>
0x190ba:   48 8d bb 10 02 00 00                  	lea rdi, [rbx + 0x210]
0x190c1:   e8 d5 fb ff ff                        	call 0x18c9b <release_ts_section>
0x190c6:   c7 83 f0 02 00 00 00 00 00 00         	mov dword ptr [rbx + 0x2f0], 0
0x190d0:   c6 83 08 04 00 00 00                  	mov byte ptr [rbx + 0x408], 0
0x190d7:   c6 83 70 06 01 00 00                  	mov byte ptr [rbx + 0x10670], 0
0x190de:   c6 83 71 06 01 00 00                  	mov byte ptr [rbx + 0x10671], 0
0x190e5:   c6 83 72 06 01 00 00                  	mov byte ptr [rbx + 0x10672], 0
0x190ec:   48 8d bb 60 02 00 00                  	lea rdi, [rbx + 0x260]
0x190f3:   e8 a3 fb ff ff                        	call 0x18c9b <release_ts_section>
0x190f8:   48 8d bb a8 02 00 00                  	lea rdi, [rbx + 0x2a8]
0x190ff:   e8 97 fb ff ff                        	call 0x18c9b <release_ts_section>
0x19104:   48 83 bb 00 04 00 00 00               	cmp qword ptr [rbx + 0x400], 0
0x1910c:   74 53                                 	je 0x19161 <teardown+0x120>
0x1910e:   83 bb f8 03 00 00 00                  	cmp dword ptr [rbx + 0x3f8], 0
0x19115:   7e 33                                 	jle 0x1914a <teardown+0x109>
0x19117:   41 bc 00 00 00 00                     	mov r12d, 0
0x1911d:   49 63 c4                              	movsxd rax, r12d
0x19120:   48 89 c2                              	mov rdx, rax
0x19123:   48 c1 e2 07                           	shl rdx, 7
0x19127:   48 c1 e0 0b                           	shl rax, 0xb
0x1912b:   48 29 d0                              	sub rax, rdx
0x1912e:   48 89 c7                              	mov rdi, rax
0x19131:   48 03 bb 00 04 00 00                  	add rdi, qword ptr [rbx + 0x400]
0x19138:   e8 a5 fb ff ff                        	call 0x18ce2 <release_program>
0x1913d:   41 83 c4 01                           	add r12d, 1
0x19141:   44 39 a3 f8 03 00 00                  	cmp dword ptr [rbx + 0x3f8], r12d
0x19148:   7f d3                                 	jg 0x1911d <teardown+0xdc>
0x1914a:   48 8b bb 00 04 00 00                  	mov rdi, qword ptr [rbx + 0x400]
0x19151:   e8 22 5a 02 00                        	call 0x3eb78 <kfree>
0x19156:   48 c7 83 00 04 00 00 00 00 00 00      	mov qword ptr [rbx + 0x400], 0
0x19161:   c7 83 f8 03 00 00 00 00 00 00         	mov dword ptr [rbx + 0x3f8], 0
0x1916b:   48 8d bb 10 04 00 00                  	lea rdi, [rbx + 0x410]
0x19172:   ba 00 00 01 00                        	mov edx, 0x10000
0x19177:   be 00 00 00 00                        	mov esi, 0
0x1917c:   e8 bf 5a 02 00                        	call 0x3ec40 <memset>
0x19181:   48 8d bb 74 06 01 00                  	lea rdi, [rbx + 0x10674]
; data inside code section at 0x19188 -- 0x1918b
0x19188:   ba 00 14                                           |...             |
; function: reset_arib_std_b25 at 0x1918b -- 0x191bb
0x1918b:   08 00                                 	or byte ptr [rax], al
0x1918d:   be 00 00 00 00                        	mov esi, 0
0x19192:   e8 a9 5a 02 00                        	call 0x3ec40 <memset>
0x19197:   c6 83 74 1a 09 00 00                  	mov byte ptr [rbx + 0x91a74], 0
0x1919e:   48 8d bb 28 06 01 00                  	lea rdi, [rbx + 0x10628]
0x191a5:   e8 ae fa ff ff                        	call 0x18c58 <release_work_buffer>
0x191aa:   48 8d bb 48 06 01 00                  	lea rdi, [rbx + 0x10648]
0x191b1:   e8 a2 fa ff ff                        	call 0x18c58 <release_work_buffer>
0x191b6:   5b                                    	pop rbx
0x191b7:   41 5c                                 	pop r12
0x191b9:   c9                                    	leave 
0x191ba:   c3                                    	ret 
; function: reset_arib_std_b25 at 0x191bb -- 0x191de
0x191bb:   55                                    	push rbp
0x191bc:   48 89 e5                              	mov rbp, rsp
0x191bf:   53                                    	push rbx
0x191c0:   48 83 ec 08                           	sub rsp, 8
0x191c4:   e8 27 5a 02 00                        	call 0x3ebf0 <mcount>
0x191c9:   e8 92 e8 ff ff                        	call 0x17a60 <private_data>
0x191ce:   48 89 c3                              	mov rbx, rax
0x191d1:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x191d6:   48 85 db                              	test rbx, rbx
0x191d9:   74 2e                                 	je 0x19209
0x191db:   48 89 df                              	mov rdi, rbx
; data inside code section at 0x191de -- 0x191e0
0x191de:   e8 5e                                              |.^              |
; function: release_arib_std_b25 at 0x191e0 -- 0x19210
; function: release_arib_std_b25 at 0x19210 -- 0x19211
0x19210:   55                                    	push rbp
; data inside code section at 0x19211 -- 0x19212
0x19211:   48                                                 |H               |
; function: setup_multi2 at 0x19212 -- 0x19242
0x19212:   89 e5                                 	mov ebp, esp
0x19214:   53                                    	push rbx
0x19215:   48 83 ec 08                           	sub rsp, 8
0x19219:   e8 d2 59 02 00                        	call 0x3ebf0 <mcount>
0x1921e:   e8 3d e8 ff ff                        	call 0x17a60 <private_data>
0x19223:   48 89 c3                              	mov rbx, rax
0x19226:   48 85 c0                              	test rax, rax
0x19229:   74 10                                 	je 0x1923b <setup_multi2+0x29>
0x1922b:   48 89 c7                              	mov rdi, rax
0x1922e:   e8 0e fe ff ff                        	call 0x19041 <teardown>
0x19233:   48 89 df                              	mov rdi, rbx
0x19236:   e8 3d 59 02 00                        	call 0x3eb78 <kfree>
0x1923b:   48 83 c4 08                           	add rsp, 8
0x1923f:   5b                                    	pop rbx
0x19240:   c9                                    	leave 
0x19241:   c3                                    	ret 
; function: setup_multi2 at 0x19242 -- 0x193a3
0x19242:   55                                    	push rbp
0x19243:   48 89 e5                              	mov rbp, rsp
0x19246:   41 57                                 	push r15
0x19248:   41 56                                 	push r14
0x1924a:   41 55                                 	push r13
0x1924c:   41 54                                 	push r12
0x1924e:   53                                    	push rbx
0x1924f:   48 81 ec 68 04 00 00                  	sub rsp, 0x468
0x19256:   e8 95 59 02 00                        	call 0x3ebf0 <mcount>
0x1925b:   49 89 fd                              	mov r13, rdi
0x1925e:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x19267:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x1926b:   31 c0                                 	xor eax, eax
0x1926d:   bb 00 00 00 00                        	mov ebx, 0
0x19272:   41 be 00 00 00 00                     	mov r14d, 0
0x19278:   83 bf f8 03 00 00 00                  	cmp dword ptr [rdi + 0x3f8], 0
0x1927f:   0f 8e 2b 01 00 00                     	jle 0x193b0
0x19285:   4c 8d bd 80 fb ff ff                  	lea r15, [rbp - 0x480]
0x1928c:   49 8d 57 20                           	lea rdx, [r15 + 0x20]
0x19290:   48 89 95 78 fb ff ff                  	mov qword ptr [rbp - 0x488], rdx
0x19297:   48 63 c3                              	movsxd rax, ebx
0x1929a:   48 89 c2                              	mov rdx, rax
0x1929d:   48 c1 e2 07                           	shl rdx, 7
0x192a1:   48 c1 e0 0b                           	shl rax, 0xb
0x192a5:   48 29 d0                              	sub rax, rdx
0x192a8:   49 89 c4                              	mov r12, rax
0x192ab:   4d 03 a5 00 04 00 00                  	add r12, qword ptr [r13 + 0x400]
0x192b2:   41 8b 84 24 a0 00 00 00               	mov eax, dword ptr [r12 + 0xa0]
0x192ba:   85 c0                                 	test eax, eax
0x192bc:   0f 84 de 00 00 00                     	je 0x193a0 <setup_multi2+0x15e>
0x192c2:   89 c0                                 	mov eax, eax
0x192c4:   49 8b 84 c5 10 04 00 00               	mov rax, qword ptr [r13 + rax*8 + 0x410]
0x192cc:   48 85 c0                              	test rax, rax
0x192cf:   0f 84 cb 00 00 00                     	je 0x193a0 <setup_multi2+0x15e>
0x192d5:   49 39 c4                              	cmp r12, rax
0x192d8:   74 21                                 	je 0x192fb <setup_multi2+0xb9>
0x192da:   48 8b 90 48 01 00 00                  	mov rdx, qword ptr [rax + 0x148]
0x192e1:   49 89 94 24 48 01 00 00               	mov qword ptr [r12 + 0x148], rdx
0x192e9:   48 8b 80 48 01 00 00                  	mov rax, qword ptr [rax + 0x148]
0x192f0:   48 89 c7                              	mov rdi, rax
0x192f3:   ff 50 10                              	call qword ptr [rax + 0x10]
0x192f6:   e9 a5 00 00 00                        	jmp 0x193a0 <setup_multi2+0x15e>
0x192fb:   49 83 bd 18 06 01 00 00               	cmp qword ptr [r13 + 0x10618], 0
0x19303:   75 0b                                 	jne 0x19310 <setup_multi2+0xce>
0x19305:   41 be f9 ff ff ff                     	mov r14d, 0xfffffff9
0x1930b:   e9 a0 00 00 00                        	jmp 0x193b0
0x19310:   49 8b 84 24 48 01 00 00               	mov rax, qword ptr [r12 + 0x148]
0x19318:   48 85 c0                              	test rax, rax
0x1931b:   74 08                                 	je 0x19325 <setup_multi2+0xe3>
0x1931d:   41 be 00 00 00 00                     	mov r14d, 0
0x19323:   eb 71                                 	jmp 0x19396 <setup_multi2+0x154>
0x19325:   b8 00 00 00 00                        	mov eax, 0
0x1932a:   e8 9d cc ff ff                        	call 0x15fcc <create_multi2>
0x1932f:   49 89 84 24 48 01 00 00               	mov qword ptr [r12 + 0x148], rax
0x19337:   48 85 c0                              	test rax, rax
0x1933a:   75 08                                 	jne 0x19344 <setup_multi2+0x102>
0x1933c:   41 be fe ff ff ff                     	mov r14d, 0xfffffffe
0x19342:   eb 6c                                 	jmp 0x193b0
0x19344:   49 8b 85 18 06 01 00                  	mov rax, qword ptr [r13 + 0x10618]
0x1934b:   4c 89 fe                              	mov rsi, r15
0x1934e:   48 89 c7                              	mov rdi, rax
0x19351:   ff 50 18                              	call qword ptr [rax + 0x18]
0x19354:   41 89 c6                              	mov r14d, eax
0x19357:   85 c0                                 	test eax, eax
0x19359:   79 08                                 	jns 0x19363 <setup_multi2+0x121>
0x1935b:   41 be f8 ff ff ff                     	mov r14d, 0xfffffff8
0x19361:   eb 4d                                 	jmp 0x193b0
0x19363:   49 8b 84 24 48 01 00 00               	mov rax, qword ptr [r12 + 0x148]
0x1936b:   4c 89 fe                              	mov rsi, r15
0x1936e:   48 89 c7                              	mov rdi, rax
0x19371:   ff 50 20                              	call qword ptr [rax + 0x20]
0x19374:   49 8b 84 24 48 01 00 00               	mov rax, qword ptr [r12 + 0x148]
0x1937c:   48 8b b5 78 fb ff ff                  	mov rsi, qword ptr [rbp - 0x488]
0x19383:   48 89 c7                              	mov rdi, rax
0x19386:   ff 50 28                              	call qword ptr [rax + 0x28]
0x19389:   49 8b 84 24 48 01 00 00               	mov rax, qword ptr [r12 + 0x148]
0x19391:   48 85 c0                              	test rax, rax
0x19394:   74 0a                                 	je 0x193a0 <setup_multi2+0x15e>
0x19396:   41 8b 75 00                           	mov esi, dword ptr [r13]
0x1939a:   48 89 c7                              	mov rdi, rax
0x1939d:   ff 50 18                              	call qword ptr [rax + 0x18]
0x193a0:   83 c3 01                              	add ebx, 1
; data inside code section at 0x193a3 -- 0x193a9
0x193a3:   41 39 9d f8 03 00                                  |A9....          |
; function: proc_ecm at 0x193a9 -- 0x193d9
0x193a9:   00 0f                                 	add byte ptr [rdi], cl
; data inside code section at 0x193ab -- 0x193b0
0x193ab:   8f e7 fe ff ff                                     |.....           |
0x193b0:   44 89 f0                              	mov eax, r14d
0x193b3:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x193b7:   65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x193c0:   74 05                                 	je 0x193c7 <proc_ecm+0x1e>
0x193c2:   e8 e1 57 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x193c7:   48 81 c4 68 04 00 00                  	add rsp, 0x468
0x193ce:   5b                                    	pop rbx
0x193cf:   41 5c                                 	pop r12
0x193d1:   41 5d                                 	pop r13
0x193d3:   41 5e                                 	pop r14
0x193d5:   41 5f                                 	pop r15
0x193d7:   c9                                    	leave 
0x193d8:   c3                                    	ret 
; function: proc_ecm at 0x193d9 -- 0x19492
0x193d9:   55                                    	push rbp
0x193da:   48 89 e5                              	mov rbp, rsp
0x193dd:   48 81 ec 80 04 00 00                  	sub rsp, 0x480
0x193e4:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x193e8:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x193ec:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x193f0:   e8 fb 57 02 00                        	call 0x3ebf0 <mcount>
0x193f5:   48 89 fb                              	mov rbx, rdi
0x193f8:   49 89 f4                              	mov r12, rsi
0x193fb:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x19404:   48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x19408:   31 c0                                 	xor eax, eax
0x1940a:   b8 f9 ff ff ff                        	mov eax, 0xfffffff9
0x1940f:   48 85 f6                              	test rsi, rsi
0x19412:   0f 84 8a 00 00 00                     	je 0x194a2
0x19418:   48 83 bf 48 01 00 00 00               	cmp qword ptr [rdi + 0x148], 0
0x19420:   75 60                                 	jne 0x19482 <proc_ecm+0xa9>
0x19422:   b8 00 00 00 00                        	mov eax, 0
0x19427:   e8 a0 cb ff ff                        	call 0x15fcc <create_multi2>
0x1942c:   48 89 c2                              	mov rdx, rax
0x1942f:   48 89 83 48 01 00 00                  	mov qword ptr [rbx + 0x148], rax
0x19436:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x1943b:   48 85 d2                              	test rdx, rdx
0x1943e:   74 62                                 	je 0x194a2
0x19440:   48 8d b5 80 fb ff ff                  	lea rsi, [rbp - 0x480]
0x19447:   4c 89 e7                              	mov rdi, r12
0x1944a:   41 ff 54 24 18                        	call qword ptr [r12 + 0x18]
0x1944f:   89 c2                                 	mov edx, eax
0x19451:   b8 f8 ff ff ff                        	mov eax, 0xfffffff8
0x19456:   85 d2                                 	test edx, edx
0x19458:   78 48                                 	js 0x194a2
0x1945a:   48 8b 83 48 01 00 00                  	mov rax, qword ptr [rbx + 0x148]
0x19461:   4c 8d ad 80 fb ff ff                  	lea r13, [rbp - 0x480]
0x19468:   4c 89 ee                              	mov rsi, r13
0x1946b:   48 89 c7                              	mov rdi, rax
0x1946e:   ff 50 20                              	call qword ptr [rax + 0x20]
0x19471:   48 8b 83 48 01 00 00                  	mov rax, qword ptr [rbx + 0x148]
0x19478:   49 8d 75 20                           	lea rsi, [r13 + 0x20]
0x1947c:   48 89 c7                              	mov rdi, rax
0x1947f:   ff 50 28                              	call qword ptr [rax + 0x28]
0x19482:   8b 8b d4 00 00 00                     	mov ecx, dword ptr [rbx + 0xd4]
0x19488:   83 e9 09                              	sub ecx, 9
0x1948b:   48 8b 93 b0 00 00 00                  	mov rdx, qword ptr [rbx + 0xb0]
; data inside code section at 0x19492 -- 0x19494
0x19492:   48 83                                              |H.              |
; function: compare_ts_section at 0x19494 -- 0x194c4
0x19494:   c2 08 48                              	ret 0x4808
; data inside code section at 0x19497 -- 0x194a2
0x19497:   8d 75 c0 4c 89 e7 41 ff  54 24 20                  |.u.L..A.T$      |
0x194a2:   48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x194a6:   65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x194af:   74 05                                 	je 0x194b6 <compare_ts_section+0x22>
0x194b1:   e8 f2 56 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x194b6:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x194ba:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x194be:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x194c2:   c9                                    	leave 
0x194c3:   c3                                    	ret 
; function: compare_ts_section at 0x194c4 -- 0x194d0
0x194c4:   55                                    	push rbp
0x194c5:   48 89 e5                              	mov rbp, rsp
0x194c8:   e8 23 57 02 00                        	call 0x3ebf0 <mcount>
0x194cd:   8b 57 2c                              	mov edx, dword ptr [rdi + 0x2c]
; function: create_arib_std_b25 at 0x194d0 -- 0x19500
0x194d0:   b8 01 00 00 00                        	mov eax, 1
0x194d5:   3b 56 2c                              	cmp edx, dword ptr [rsi + 0x2c]
0x194d8:   75 24                                 	jne 0x194fe <create_arib_std_b25+0x2e>
0x194da:   83 c2 03                              	add edx, 3
0x194dd:   48 63 d2                              	movsxd rdx, edx
0x194e0:   48 8b 47 08                           	mov rax, qword ptr [rdi + 8]
0x194e4:   48 8b 7e 08                           	mov rdi, qword ptr [rsi + 8]
0x194e8:   48 89 d1                              	mov rcx, rdx
0x194eb:   48 39 d2                              	cmp rdx, rdx
0x194ee:   48 89 c6                              	mov rsi, rax
0x194f1:   f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x194f3:   0f 97 c0                              	seta al
0x194f6:   0f 92 c2                              	setb dl
0x194f9:   28 d0                                 	sub al, dl
0x194fb:   0f be c0                              	movsx eax, al
0x194fe:   c9                                    	leave 
0x194ff:   c3                                    	ret 
; function: create_arib_std_b25 at 0x19500 -- 0x1965e
0x19500:   55                                    	push rbp
0x19501:   48 89 e5                              	mov rbp, rsp
0x19504:   48 83 ec 20                           	sub rsp, 0x20
0x19508:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x1950c:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x19511:   4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x19516:   4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x1951b:   e8 d0 56 02 00                        	call 0x3ebf0 <mcount>
0x19520:   48 8b 1d 21 59 02 00                  	mov rbx, qword ptr [rip + 0x25921]
0x19527:   be 20 00 00 00                        	mov esi, 0x20
0x1952c:   48 89 df                              	mov rdi, rbx
0x1952f:   e8 fc 56 02 00                        	call 0x3ec30 <kmem_cache_alloc_notrace>
0x19534:   49 89 c4                              	mov r12, rax
0x19537:   48 89 df                              	mov rdi, rbx
0x1953a:   e8 89 57 02 00                        	call 0x3ecc8 <slab_buffer_size>
0x1953f:   48 89 c3                              	mov rbx, rax
0x19542:   49 c7 c5 00 00 00 00                  	mov r13, 0
0x19549:   83 3d 60 57 02 00 00                  	cmp dword ptr [rip + 0x25760], 0
0x19550:   74 2d                                 	je 0x1957f <create_arib_std_b25+0x7f>
0x19552:   4c 8b 35 6f 57 02 00                  	mov r14, qword ptr [rip + 0x2576f]
0x19559:   4d 85 f6                              	test r14, r14
0x1955c:   74 21                                 	je 0x1957f <create_arib_std_b25+0x7f>
0x1955e:   41 b8 20 00 00 00                     	mov r8d, 0x20
0x19564:   48 89 d9                              	mov rcx, rbx
0x19567:   ba 28 1b 09 00                        	mov edx, 0x91b28
0x1956c:   4c 89 e6                              	mov rsi, r12
0x1956f:   4c 89 ef                              	mov rdi, r13
0x19572:   41 ff 16                              	call qword ptr [r14]
0x19575:   49 83 c6 08                           	add r14, 8
0x19579:   49 83 3e 00                           	cmp qword ptr [r14], 0
0x1957d:   75 df                                 	jne 0x1955e <create_arib_std_b25+0x5e>
0x1957f:   b8 00 00 00 00                        	mov eax, 0
0x19584:   4d 85 e4                              	test r12, r12
0x19587:   0f 84 f2 00 00 00                     	je 0x1967f
0x1958d:   ba 28 1b 09 00                        	mov edx, 0x91b28
0x19592:   be 00 00 00 00                        	mov esi, 0
0x19597:   4c 89 e7                              	mov rdi, r12
0x1959a:   e8 a1 56 02 00                        	call 0x3ec40 <memset>
0x1959f:   41 c7 04 24 04 00 00 00               	mov dword ptr [r12], 4
0x195a7:   41 c6 84 24 70 06 01 00 00            	mov byte ptr [r12 + 0x10670], 0
0x195b0:   41 c6 84 24 71 06 01 00 00            	mov byte ptr [r12 + 0x10671], 0
0x195b9:   41 c6 84 24 72 06 01 00 00            	mov byte ptr [r12 + 0x10672], 0
0x195c2:   49 8d 84 24 78 1a 09 00               	lea rax, [r12 + 0x91a78]
0x195ca:   4c 89 20                              	mov qword ptr [rax], r12
0x195cd:   48 c7 40 10 00 00 00 00               	mov qword ptr [rax + 0x10], 0
0x195d5:   48 c7 40 18 00 00 00 00               	mov qword ptr [rax + 0x18], 0
0x195dd:   48 c7 40 20 00 00 00 00               	mov qword ptr [rax + 0x20], 0
0x195e5:   48 c7 40 28 00 00 00 00               	mov qword ptr [rax + 0x28], 0
0x195ed:   48 c7 40 30 00 00 00 00               	mov qword ptr [rax + 0x30], 0
0x195f5:   48 c7 40 38 00 00 00 00               	mov qword ptr [rax + 0x38], 0
0x195fd:   48 c7 40 40 00 00 00 00               	mov qword ptr [rax + 0x40], 0
0x19605:   48 c7 40 48 00 00 00 00               	mov qword ptr [rax + 0x48], 0
0x1960d:   48 c7 40 50 00 00 00 00               	mov qword ptr [rax + 0x50], 0
0x19615:   48 c7 40 58 00 00 00 00               	mov qword ptr [rax + 0x58], 0
0x1961d:   48 c7 40 60 00 00 00 00               	mov qword ptr [rax + 0x60], 0
0x19625:   48 c7 40 68 00 00 00 00               	mov qword ptr [rax + 0x68], 0
0x1962d:   48 c7 40 70 00 00 00 00               	mov qword ptr [rax + 0x70], 0
0x19635:   48 c7 40 78 00 00 00 00               	mov qword ptr [rax + 0x78], 0
0x1963d:   48 c7 80 80 00 00 00 00 00 00 00      	mov qword ptr [rax + 0x80], 0
0x19648:   48 c7 80 88 00 00 00 00 00 00 00      	mov qword ptr [rax + 0x88], 0
0x19653:   48 c7 80 90 00 00 00 00 00 00 00      	mov qword ptr [rax + 0x90], 0
; data inside code section at 0x1965e -- 0x19664
0x1965e:   48 c7 80 98 00 00                                  |H.....          |
; function: proc_pat at 0x19664 -- 0x19694
0x19664:   00 00                                 	add byte ptr [rax], al
0x19666:   00 00                                 	add byte ptr [rax], al
0x19668:   00 48 c7                              	add byte ptr [rax - 0x39], cl
0x1966b:   80 a8 00 00 00 00 00                  	sub byte ptr [rax], 0
0x19672:   00 00                                 	add byte ptr [rax], al
0x19674:   48 c7 80 a0 00 00 00 00 00 00 00      	mov qword ptr [rax + 0xa0], 0
0x1967f:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x19683:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x19688:   4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x1968d:   4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x19692:   c9                                    	leave 
0x19693:   c3                                    	ret 
; function: proc_pat at 0x19694 -- 0x197ad
0x19694:   55                                    	push rbp
0x19695:   48 89 e5                              	mov rbp, rsp
0x19698:   41 56                                 	push r14
0x1969a:   41 55                                 	push r13
0x1969c:   41 54                                 	push r12
0x1969e:   53                                    	push rbx
0x1969f:   e8 4c 55 02 00                        	call 0x3ebf0 <mcount>
0x196a4:   48 89 fb                              	mov rbx, rdi
0x196a7:   44 8b 77 44                           	mov r14d, dword ptr [rdi + 0x44]
0x196ab:   41 83 ee 09                           	sub r14d, 9
0x196af:   41 8d 46 03                           	lea eax, [r14 + 3]
0x196b3:   45 85 f6                              	test r14d, r14d
0x196b6:   41 0f 49 c6                           	cmovns eax, r14d
0x196ba:   c1 f8 02                              	sar eax, 2
0x196bd:   48 98                                 	cdqe 
0x196bf:   48 89 c2                              	mov rdx, rax
0x196c2:   48 c1 e2 07                           	shl rdx, 7
0x196c6:   49 89 c4                              	mov r12, rax
0x196c9:   49 c1 e4 0b                           	shl r12, 0xb
0x196cd:   49 29 d4                              	sub r12, rdx
0x196d0:   be 20 00 00 00                        	mov esi, 0x20
0x196d5:   4c 89 e7                              	mov rdi, r12
0x196d8:   e8 13 56 02 00                        	call 0x3ecf0 <__kmalloc>
0x196dd:   49 89 c5                              	mov r13, rax
0x196e0:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x196e5:   4d 85 ed                              	test r13, r13
0x196e8:   0f 84 51 01 00 00                     	je 0x1983f
0x196ee:   4c 89 e2                              	mov rdx, r12
0x196f1:   be 00 00 00 00                        	mov esi, 0
0x196f6:   4c 89 ef                              	mov rdi, r13
0x196f9:   e8 42 55 02 00                        	call 0x3ec40 <memset>
0x196fe:   48 83 bb 00 04 00 00 00               	cmp qword ptr [rbx + 0x400], 0
0x19706:   74 53                                 	je 0x1975b <proc_pat+0xc7>
0x19708:   83 bb f8 03 00 00 00                  	cmp dword ptr [rbx + 0x3f8], 0
0x1970f:   7e 33                                 	jle 0x19744 <proc_pat+0xb0>
0x19711:   41 bc 00 00 00 00                     	mov r12d, 0
0x19717:   49 63 c4                              	movsxd rax, r12d
0x1971a:   48 89 c2                              	mov rdx, rax
0x1971d:   48 c1 e2 07                           	shl rdx, 7
0x19721:   48 c1 e0 0b                           	shl rax, 0xb
0x19725:   48 29 d0                              	sub rax, rdx
0x19728:   48 89 c7                              	mov rdi, rax
0x1972b:   48 03 bb 00 04 00 00                  	add rdi, qword ptr [rbx + 0x400]
0x19732:   e8 ab f5 ff ff                        	call 0x18ce2 <release_program>
0x19737:   41 83 c4 01                           	add r12d, 1
0x1973b:   44 39 a3 f8 03 00 00                  	cmp dword ptr [rbx + 0x3f8], r12d
0x19742:   7f d3                                 	jg 0x19717 <proc_pat+0x83>
0x19744:   48 8b bb 00 04 00 00                  	mov rdi, qword ptr [rbx + 0x400]
0x1974b:   e8 28 54 02 00                        	call 0x3eb78 <kfree>
0x19750:   48 c7 83 00 04 00 00 00 00 00 00      	mov qword ptr [rbx + 0x400], 0
0x1975b:   c7 83 f8 03 00 00 00 00 00 00         	mov dword ptr [rbx + 0x3f8], 0
0x19765:   48 8d bb 10 04 00 00                  	lea rdi, [rbx + 0x410]
0x1976c:   ba 00 00 01 00                        	mov edx, 0x10000
0x19771:   be 00 00 00 00                        	mov esi, 0
0x19776:   e8 c5 54 02 00                        	call 0x3ec40 <memset>
0x1977b:   48 8b 53 20                           	mov rdx, qword ptr [rbx + 0x20]
0x1977f:   4d 63 f6                              	movsxd r14, r14d
0x19782:   4a 8d 4c 32 08                        	lea rcx, [rdx + r14 + 8]
0x19787:   48 8d 72 0b                           	lea rsi, [rdx + 0xb]
0x1978b:   bf 00 00 00 00                        	mov edi, 0
0x19790:   48 39 f1                              	cmp rcx, rsi
0x19793:   0f 86 94 00 00 00                     	jbe 0x1982d
0x19799:   48 8d 42 0f                           	lea rax, [rdx + 0xf]
0x1979d:   48 29 c1                              	sub rcx, rax
0x197a0:   48 8d 49 03                           	lea rcx, [rcx + 3]
0x197a4:   48 83 e1 fc                           	and rcx, 0xfffffffffffffffc
0x197a8:   4c 8d 4c 0a 13                        	lea r9, [rdx + rcx + 0x13]
; data inside code section at 0x197ad -- 0x197c2
0x197ad:   0f b6 50 f9 c1 e2 08 0f  b6 48 fa 44 0f b6 40 fb   |..P......H.D..@.|
0x197bd:   0f b6 36 66 09                                     |..6f.           |
; function: function_197c2 at 0x197c2 -- 0x197c5
0x197c2:   ca 74 5c                              	retf 0x5c74
; data inside code section at 0x197c5 -- 0x197df
0x197c5:   40 0f b6 f6 45 0f b6 c0  41 c1 e0 08 44 09 c6 81   |@...E...A...D...|
0x197d5:   e6 ff 1f 00 00 4c 63 c7  4d 89                     |.....Lc.M.      |
; function: function_197df at 0x197df -- 0x197e2
0x197df:   c2 49 c1                              	ret 0xc149
; data inside code section at 0x197e2 -- 0x197e7
0x197e2:   e2 07 49 c1 e0                                     |..I..           |
; function: function_197e7 at 0x197e7 -- 0x197f6
0x197e7:   0b 4d 29                              	or ecx, dword ptr [rbp + 0x29]
0x197ea:   d0 4b 8d                              	ror byte ptr [rbx - 0x73], 1
0x197ed:   4c 05 00 44 0f b7                     	add rax, -0x48f0bc00
0x197f3:   c2 44 89                              	ret 0x8944
; data inside code section at 0x197f6 -- 0x19818
0x197f6:   81 98 00 00 00 89 31 48  63 f6 48 89 8c f3 10 04   |......1Hc.H.....|
0x19806:   00 00 83 c7 01 0f b6 8b  10 06 01 00 66 89 94 4b   |............f..K|
0x19816:   10 04                                              |..              |
; function: reserve_work_buffer at 0x19818 -- 0x19848
0x19818:   01 00                                 	add dword ptr [rax], eax
0x1981a:   80 83 10 06 01 00 01                  	add byte ptr [rbx + 0x10610], 1
0x19821:   48 89 c6                              	mov rsi, rax
0x19824:   48 83 c0 04                           	add rax, 4
0x19828:   4c 39 c8                              	cmp rax, r9
0x1982b:   75 80                                 	jne 0x197ad
0x1982d:   4c 89 ab 00 04 00 00                  	mov qword ptr [rbx + 0x400], r13
0x19834:   89 bb f8 03 00 00                     	mov dword ptr [rbx + 0x3f8], edi
0x1983a:   b8 00 00 00 00                        	mov eax, 0
0x1983f:   5b                                    	pop rbx
0x19840:   41 5c                                 	pop r12
0x19842:   41 5d                                 	pop r13
0x19844:   41 5e                                 	pop r14
0x19846:   c9                                    	leave 
0x19847:   c3                                    	ret 
; function: reserve_work_buffer at 0x19848 -- 0x198fd
0x19848:   55                                    	push rbp
0x19849:   48 89 e5                              	mov rbp, rsp
0x1984c:   48 83 ec 20                           	sub rsp, 0x20
0x19850:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x19854:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x19859:   4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x1985e:   4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x19863:   e8 88 53 02 00                        	call 0x3ebf0 <mcount>
0x19868:   49 89 fc                              	mov r12, rdi
0x1986b:   8b 57 18                              	mov edx, dword ptr [rdi + 0x18]
0x1986e:   b8 01 00 00 00                        	mov eax, 1
0x19873:   39 f2                                 	cmp edx, esi
0x19875:   0f 8d a0 00 00 00                     	jge 0x1991b
0x1987b:   8d 1c 12                              	lea ebx, [rdx + rdx]
0x1987e:   81 fa ff 01 00 00                     	cmp edx, 0x1ff
0x19884:   66 b8 00 02                           	mov ax, 0x200
0x19888:   0f 4e d8                              	cmovle ebx, eax
0x1988b:   39 de                                 	cmp esi, ebx
0x1988d:   7e 06                                 	jle 0x19895 <reserve_work_buffer+0x4d>
0x1988f:   01 db                                 	add ebx, ebx
0x19891:   39 de                                 	cmp esi, ebx
0x19893:   7f fa                                 	jg 0x1988f <reserve_work_buffer+0x47>
0x19895:   4c 63 f3                              	movsxd r14, ebx
0x19898:   be 20 00 00 00                        	mov esi, 0x20
0x1989d:   4c 89 f7                              	mov rdi, r14
0x198a0:   e8 4b 54 02 00                        	call 0x3ecf0 <__kmalloc>
0x198a5:   49 89 c5                              	mov r13, rax
0x198a8:   b8 00 00 00 00                        	mov eax, 0
0x198ad:   4d 85 ed                              	test r13, r13
0x198b0:   74 69                                 	je 0x1991b
0x198b2:   4c 89 f2                              	mov rdx, r14
0x198b5:   be 00 00 00 00                        	mov esi, 0
0x198ba:   4c 89 ef                              	mov rdi, r13
0x198bd:   e8 7e 53 02 00                        	call 0x3ec40 <memset>
0x198c2:   41 be 00 00 00 00                     	mov r14d, 0
0x198c8:   49 83 3c 24 00                        	cmp qword ptr [r12], 0
0x198cd:   74 2e                                 	je 0x198fd <reserve_work_buffer+0xad>
0x198cf:   49 8b 74 24 08                        	mov rsi, qword ptr [r12 + 8]
0x198d4:   4d 8b 74 24 10                        	mov r14, qword ptr [r12 + 0x10]
0x198d9:   41 29 f6                              	sub r14d, esi
0x198dc:   45 85 f6                              	test r14d, r14d
0x198df:   7e 0b                                 	jle 0x198ec <reserve_work_buffer+0xa4>
0x198e1:   49 63 d6                              	movsxd rdx, r14d
0x198e4:   4c 89 ef                              	mov rdi, r13
0x198e7:   e8 7c 52 02 00                        	call 0x3eb68 <memcpy>
0x198ec:   49 8b 3c 24                           	mov rdi, qword ptr [r12]
0x198f0:   e8 83 52 02 00                        	call 0x3eb78 <kfree>
0x198f5:   49 c7 04 24 00 00 00 00               	mov qword ptr [r12], 0
; data inside code section at 0x198fd -- 0x19900
0x198fd:   4d 89 2c                                           |M.,             |
; function: append_work_buffer at 0x19900 -- 0x19930
0x19900:   24 4d                                 	and al, 0x4d
0x19902:   89 6c 24 08                           	mov dword ptr [rsp + 8], ebp
0x19906:   4d 63 f6                              	movsxd r14, r14d
0x19909:   4d 01 f5                              	add r13, r14
0x1990c:   4d 89 6c 24 10                        	mov qword ptr [r12 + 0x10], r13
0x19911:   41 89 5c 24 18                        	mov dword ptr [r12 + 0x18], ebx
0x19916:   b8 01 00 00 00                        	mov eax, 1
0x1991b:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x1991f:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x19924:   4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x19929:   4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x1992e:   c9                                    	leave 
0x1992f:   c3                                    	ret 
; function: append_work_buffer at 0x19930 -- 0x1996f
0x19930:   55                                    	push rbp
0x19931:   48 89 e5                              	mov rbp, rsp
0x19934:   48 83 ec 20                           	sub rsp, 0x20
0x19938:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x1993c:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x19940:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x19944:   e8 a7 52 02 00                        	call 0x3ebf0 <mcount>
0x19949:   48 89 fb                              	mov rbx, rdi
0x1994c:   49 89 f5                              	mov r13, rsi
0x1994f:   41 89 d4                              	mov r12d, edx
0x19952:   b8 01 00 00 00                        	mov eax, 1
0x19957:   85 d2                                 	test edx, edx
0x19959:   7e 38                                 	jle 0x19993
0x1995b:   48 8b 77 10                           	mov rsi, qword ptr [rdi + 0x10]
0x1995f:   2b 37                                 	sub esi, dword ptr [rdi]
0x19961:   01 d6                                 	add esi, edx
0x19963:   3b 77 18                              	cmp esi, dword ptr [rdi + 0x18]
0x19966:   7e 10                                 	jle 0x19978
0x19968:   e8 db fe ff ff                        	call 0x19848 <reserve_work_buffer>
0x1996d:   89 c2                                 	mov edx, eax
; data inside code section at 0x1996f -- 0x19971
0x1996f:   b8 00                                              |..              |
; function: set_ts_section_data at 0x19971 -- 0x199a1
0x19971:   00 00                                 	add byte ptr [rax], al
0x19973:   00 85 d2 74 1b 4d                     	add byte ptr [rbp + 0x4d1b74d2], al
0x19979:   63 e4                                 	movsxd rsp, esp
0x1997b:   48 8b 7b 10                           	mov rdi, qword ptr [rbx + 0x10]
0x1997f:   4c 89 e2                              	mov rdx, r12
0x19982:   4c 89 ee                              	mov rsi, r13
0x19985:   e8 de 51 02 00                        	call 0x3eb68 <memcpy>
0x1998a:   4c 01 63 10                           	add qword ptr [rbx + 0x10], r12
0x1998e:   b8 01 00 00 00                        	mov eax, 1
0x19993:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x19997:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x1999b:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x1999f:   c9                                    	leave 
0x199a0:   c3                                    	ret 
; function: set_ts_section_data at 0x199a1 -- 0x19a1e
0x199a1:   55                                    	push rbp
0x199a2:   48 89 e5                              	mov rbp, rsp
0x199a5:   48 83 ec 20                           	sub rsp, 0x20
0x199a9:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x199ad:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x199b1:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x199b5:   e8 36 52 02 00                        	call 0x3ebf0 <mcount>
0x199ba:   48 89 fb                              	mov rbx, rdi
0x199bd:   49 89 d4                              	mov r12, rdx
0x199c0:   41 89 cd                              	mov r13d, ecx
0x199c3:   48 8b 57 10                           	mov rdx, qword ptr [rdi + 0x10]
0x199c7:   48 8b 47 08                           	mov rax, qword ptr [rdi + 8]
0x199cb:   83 7e 08 00                           	cmp dword ptr [rsi + 8], 0
0x199cf:   74 27                                 	je 0x199f8 <set_ts_section_data+0x57>
0x199d1:   e8 6e e8 ff ff                        	call 0x18244 <reset_ts_section>
0x199d6:   41 0f b6 34 24                        	movzx esi, byte ptr [r12]
0x199db:   83 c6 01                              	add esi, 1
0x199de:   44 89 ea                              	mov edx, r13d
0x199e1:   29 f2                                 	sub edx, esi
0x199e3:   48 63 f6                              	movsxd rsi, esi
0x199e6:   49 8d 34 34                           	lea rsi, [r12 + rsi]
0x199ea:   48 89 df                              	mov rdi, rbx
0x199ed:   e8 3e ff ff ff                        	call 0x19930 <append_work_buffer>
0x199f2:   85 c0                                 	test eax, eax
0x199f4:   75 1a                                 	jne 0x19a10 <set_ts_section_data+0x6f>
0x199f6:   eb 3d                                 	jmp 0x19a35
0x199f8:   29 c2                                 	sub edx, eax
0x199fa:   85 d2                                 	test edx, edx
0x199fc:   0f 1f 40 00                           	nop dword ptr [rax]
0x19a00:   7e 0e                                 	jle 0x19a10 <set_ts_section_data+0x6f>
0x19a02:   89 ca                                 	mov edx, ecx
0x19a04:   4c 89 e6                              	mov rsi, r12
0x19a07:   e8 24 ff ff ff                        	call 0x19930 <append_work_buffer>
0x19a0c:   85 c0                                 	test eax, eax
0x19a0e:   74 25                                 	je 0x19a35
0x19a10:   83 7b 2c 00                           	cmp dword ptr [rbx + 0x2c], 0
0x19a14:   75 26                                 	jne 0x19a3c
0x19a16:   48 8b 73 08                           	mov rsi, qword ptr [rbx + 8]
0x19a1a:   48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
; data inside code section at 0x19a1e -- 0x19a1f
0x19a1e:   29                                                 |)               |
; function: find_pmt at 0x19a1f -- 0x19a4f
; function: find_pmt at 0x19a4f -- 0x19bbb
0x19a4f:   55                                    	push rbp
0x19a50:   48 89 e5                              	mov rbp, rsp
0x19a53:   41 57                                 	push r15
0x19a55:   41 56                                 	push r14
0x19a57:   41 55                                 	push r13
0x19a59:   41 54                                 	push r12
0x19a5b:   53                                    	push rbx
0x19a5c:   48 83 ec 58                           	sub rsp, 0x58
0x19a60:   e8 8b 51 02 00                        	call 0x3ebf0 <mcount>
0x19a65:   49 89 fe                              	mov r14, rdi
0x19a68:   8b 47 04                              	mov eax, dword ptr [rdi + 4]
0x19a6b:   89 45 8c                              	mov dword ptr [rbp - 0x74], eax
0x19a6e:   48 63 5f 08                           	movsxd rbx, dword ptr [rdi + 8]
0x19a72:   48 03 9f 30 06 01 00                  	add rbx, qword ptr [rdi + 0x10630]
0x19a79:   48 8b 87 38 06 01 00                  	mov rax, qword ptr [rdi + 0x10638]
0x19a80:   48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x19a84:   41 bf 00 00 00 00                     	mov r15d, 0
0x19a8a:   4c 63 6d 8c                           	movsxd r13, dword ptr [rbp - 0x74]
0x19a8e:   e9 f0 00 00 00                        	jmp 0x19b83 <find_pmt+0x134>
0x19a93:   80 3b 47                              	cmp byte ptr [rbx], 0x47
0x19a96:   74 1b                                 	je 0x19ab3 <find_pmt+0x64>
0x19a98:   8b 55 8c                              	mov edx, dword ptr [rbp - 0x74]
0x19a9b:   48 8b 75 a8                           	mov rsi, qword ptr [rbp - 0x58]
0x19a9f:   48 89 df                              	mov rdi, rbx
0x19aa2:   e8 5d e5 ff ff                        	call 0x18004 <resync>
0x19aa7:   48 85 c0                              	test rax, rax
0x19aaa:   0f 84 e5 00 00 00                     	je 0x19b95 <find_pmt+0x146>
0x19ab0:   48 89 c3                              	mov rbx, rax
0x19ab3:   48 89 de                              	mov rsi, rbx
0x19ab6:   48 8d 7d b0                           	lea rdi, [rbp - 0x50]
0x19aba:   e8 37 e4 ff ff                        	call 0x17ef6 <extract_ts_header>
0x19abf:   48 63 45 c0                           	movsxd rax, dword ptr [rbp - 0x40]
0x19ac3:   4d 8b a4 c6 10 04 00 00               	mov r12, qword ptr [r14 + rax*8 + 0x410]
0x19acb:   4d 85 e4                              	test r12, r12
0x19ace:   0f 84 ac 00 00 00                     	je 0x19b80 <find_pmt+0x131>
0x19ad4:   49 8d 44 24 08                        	lea rax, [r12 + 8]
0x19ad9:   48 89 45 a0                           	mov qword ptr [rbp - 0x60], rax
0x19add:   48 89 c7                              	mov rdi, rax
0x19ae0:   e8 11 e3 ff ff                        	call 0x17df6 <check_ts_section>
0x19ae5:   85 c0                                 	test eax, eax
0x19ae7:   0f 85 93 00 00 00                     	jne 0x19b80 <find_pmt+0x131>
0x19aed:   48 8d 53 04                           	lea rdx, [rbx + 4]
0x19af1:   f6 45 c8 02                           	test byte ptr [rbp - 0x38], 2
0x19af5:   74 08                                 	je 0x19aff <find_pmt+0xb0>
0x19af7:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x19afa:   48 8d 54 02 01                        	lea rdx, [rdx + rax + 1]
0x19aff:   49 8d 44 24 50                        	lea rax, [r12 + 0x50]
0x19b04:   48 89 45 98                           	mov qword ptr [rbp - 0x68], rax
0x19b08:   89 d9                                 	mov ecx, ebx
0x19b0a:   29 d1                                 	sub ecx, edx
0x19b0c:   81 c1 bc 00 00 00                     	add ecx, 0xbc
0x19b12:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x19b16:   48 89 c7                              	mov rdi, rax
0x19b19:   e8 83 fe ff ff                        	call 0x199a1 <set_ts_section_data>
0x19b1e:   41 89 c7                              	mov r15d, eax
0x19b21:   85 c0                                 	test eax, eax
0x19b23:   78 70                                 	js 0x19b95 <find_pmt+0x146>
0x19b25:   48 8b 7d 98                           	mov rdi, qword ptr [rbp - 0x68]
0x19b29:   e8 c8 e2 ff ff                        	call 0x17df6 <check_ts_section>
0x19b2e:   85 c0                                 	test eax, eax
0x19b30:   74 4e                                 	je 0x19b80 <find_pmt+0x131>
0x19b32:   48 8b 7d 98                           	mov rdi, qword ptr [rbp - 0x68]
0x19b36:   e8 3a e5 ff ff                        	call 0x18075 <check_ts_section_crc>
0x19b3b:   85 c0                                 	test eax, eax
0x19b3d:   74 0b                                 	je 0x19b4a <find_pmt+0xfb>
0x19b3f:   41 83 bc 24 88 00 00 00 00            	cmp dword ptr [r12 + 0x88], 0
0x19b48:   75 0e                                 	jne 0x19b58 <find_pmt+0x109>
0x19b4a:   48 8b 7d 98                           	mov rdi, qword ptr [rbp - 0x68]
0x19b4e:   e8 f1 e6 ff ff                        	call 0x18244 <reset_ts_section>
0x19b53:   4c 01 eb                              	add rbx, r13
0x19b56:   eb 2b                                 	jmp 0x19b83 <find_pmt+0x134>
0x19b58:   48 8b 75 98                           	mov rsi, qword ptr [rbp - 0x68]
0x19b5c:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x19b60:   e8 16 eb ff ff                        	call 0x1867b <swap_ts_section>
0x19b65:   48 8b 7d 98                           	mov rdi, qword ptr [rbp - 0x68]
0x19b69:   e8 d6 e6 ff ff                        	call 0x18244 <reset_ts_section>
0x19b6e:   4c 89 f7                              	mov rdi, r14
0x19b71:   e8 a9 e2 ff ff                        	call 0x17e1f <check_pmt_complete>
0x19b76:   85 c0                                 	test eax, eax
0x19b78:   74 06                                 	je 0x19b80 <find_pmt+0x131>
0x19b7a:   48 03 5d 90                           	add rbx, qword ptr [rbp - 0x70]
0x19b7e:   eb 15                                 	jmp 0x19b95 <find_pmt+0x146>
0x19b80:   4c 01 eb                              	add rbx, r13
0x19b83:   4c 89 6d 90                           	mov qword ptr [rbp - 0x70], r13
0x19b87:   4a 8d 04 2b                           	lea rax, [rbx + r13]
0x19b8b:   48 39 45 a8                           	cmp qword ptr [rbp - 0x58], rax
0x19b8f:   0f 83 fe fe ff ff                     	jae 0x19a93 <find_pmt+0x44>
0x19b95:   41 2b 9e 30 06 01 00                  	sub ebx, dword ptr [r14 + 0x10630]
0x19b9c:   41 89 5e 08                           	mov dword ptr [r14 + 8], ebx
0x19ba0:   4c 89 f7                              	mov rdi, r14
0x19ba3:   e8 77 e2 ff ff                        	call 0x17e1f <check_pmt_complete>
0x19ba8:   85 c0                                 	test eax, eax
0x19baa:   74 42                                 	je 0x19bee
0x19bac:   41 83 be f8 03 00 00 00               	cmp dword ptr [r14 + 0x3f8], 0
0x19bb4:   7e 38                                 	jle 0x19bee
0x19bb6:   bb 00 00 00 00                        	mov ebx, 0
; data inside code section at 0x19bbb -- 0x19bbd
0x19bbb:   48 63                                              |Hc              |
; function: function_19bbd at 0x19bbd -- 0x19bbe
0x19bbd:   c3                                    	ret 
; data inside code section at 0x19bbe -- 0x19bc0
0x19bbe:   48 89                                              |H.              |
; function: function_19bc0 at 0x19bc0 -- 0x19bc3
0x19bc0:   c2 48 c1                              	ret 0xc148
; data inside code section at 0x19bc3 -- 0x19bd0
0x19bc3:   e2 07 48 c1 e0 0b 48 29  d0 48 89 c7 49            |..H...H).H..I   |
; function: set_ts_section_data_for_remaining_payload_data at 0x19bd0 -- 0x19c00
0x19bd0:   03 be 00 04 00 00                     	add edi, dword ptr [rsi + 0x400]
0x19bd6:   e8 82 f1 ff ff                        	call 0x18d5d <proc_pmt>
0x19bdb:   41 89 c7                              	mov r15d, eax
0x19bde:   85 c0                                 	test eax, eax
0x19be0:   78 0c                                 	js 0x19bee <set_ts_section_data_for_remaining_payload_data+0x1e>
0x19be2:   83 c3 01                              	add ebx, 1
0x19be5:   41 39 9e f8 03 00 00                  	cmp dword ptr [r14 + 0x3f8], ebx
0x19bec:   7f cd                                 	jg 0x19bbb
0x19bee:   44 89 f8                              	mov eax, r15d
0x19bf1:   48 83 c4 58                           	add rsp, 0x58
0x19bf5:   5b                                    	pop rbx
0x19bf6:   41 5c                                 	pop r12
0x19bf8:   41 5d                                 	pop r13
0x19bfa:   41 5e                                 	pop r14
0x19bfc:   41 5f                                 	pop r15
0x19bfe:   c9                                    	leave 
0x19bff:   c3                                    	ret 
; function: set_ts_section_data_for_remaining_payload_data at 0x19c00 -- 0x19c44
0x19c00:   55                                    	push rbp
0x19c01:   48 89 e5                              	mov rbp, rsp
0x19c04:   53                                    	push rbx
0x19c05:   48 83 ec 08                           	sub rsp, 8
0x19c09:   e8 e2 4f 02 00                        	call 0x3ebf0 <mcount>
0x19c0e:   48 89 fb                              	mov rbx, rdi
0x19c11:   48 8b 4f 10                           	mov rcx, qword ptr [rdi + 0x10]
0x19c15:   48 8b 47 08                           	mov rax, qword ptr [rdi + 8]
0x19c19:   83 7e 08 00                           	cmp dword ptr [rsi + 8], 0
0x19c1d:   74 25                                 	je 0x19c44 <set_ts_section_data_for_remaining_payload_data+0x42>
0x19c1f:   f6 46 18 01                           	test byte ptr [rsi + 0x18], 1
0x19c23:   74 1f                                 	je 0x19c44 <set_ts_section_data_for_remaining_payload_data+0x42>
0x19c25:   29 c1                                 	sub ecx, eax
0x19c27:   85 c9                                 	test ecx, ecx
0x19c29:   7e 19                                 	jle 0x19c44 <set_ts_section_data_for_remaining_payload_data+0x42>
0x19c2b:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x19c2e:   48 8d 72 01                           	lea rsi, [rdx + 1]
0x19c32:   89 c2                                 	mov edx, eax
0x19c34:   e8 f7 fc ff ff                        	call 0x19930 <append_work_buffer>
0x19c39:   89 c2                                 	mov edx, eax
0x19c3b:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x19c40:   85 d2                                 	test edx, edx
0x19c42:   74 2a                                 	je 0x19c6e
; data inside code section at 0x19c44 -- 0x19c45
0x19c44:   83                                                 |.               |
; function: proc_arib_std_b25 at 0x19c45 -- 0x19c75
0x19c45:   7b 2c                                 	jnp 0x19c73 <proc_arib_std_b25+0x2e>
0x19c47:   00 75 1f                              	add byte ptr [rbp + 0x1f], dh
0x19c4a:   48 8b 73 08                           	mov rsi, qword ptr [rbx + 8]
0x19c4e:   48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0x19c52:   29 f0                                 	sub eax, esi
0x19c54:   83 f8 08                              	cmp eax, 8
0x19c57:   7e 10                                 	jle 0x19c69 <proc_arib_std_b25+0x24>
0x19c59:   48 8d 7b 20                           	lea rdi, [rbx + 0x20]
0x19c5d:   e8 03 e3 ff ff                        	call 0x17f65 <extract_ts_section_header>
0x19c62:   b8 00 00 00 00                        	mov eax, 0
0x19c67:   eb 05                                 	jmp 0x19c6e <proc_arib_std_b25+0x29>
0x19c69:   b8 00 00 00 00                        	mov eax, 0
0x19c6e:   48 83 c4 08                           	add rsp, 8
0x19c72:   5b                                    	pop rbx
0x19c73:   c9                                    	leave 
0x19c74:   c3                                    	ret 
; function: proc_arib_std_b25 at 0x19c75 -- 0x1a86e
0x19c75:   55                                    	push rbp
0x19c76:   48 89 e5                              	mov rbp, rsp
0x19c79:   41 57                                 	push r15
0x19c7b:   41 56                                 	push r14
0x19c7d:   41 55                                 	push r13
0x19c7f:   41 54                                 	push r12
0x19c81:   53                                    	push rbx
0x19c82:   48 81 ec 18 05 00 00                  	sub rsp, 0x518
0x19c89:   e8 62 4f 02 00                        	call 0x3ebf0 <mcount>
0x19c8e:   49 89 fc                              	mov r12, rdi
0x19c91:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x19c9a:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x19c9e:   31 c0                                 	xor eax, eax
0x19ca0:   8b 57 04                              	mov edx, dword ptr [rdi + 4]
0x19ca3:   89 95 24 fb ff ff                     	mov dword ptr [rbp - 0x4dc], edx
0x19ca9:   4c 8b b7 30 06 01 00                  	mov r14, qword ptr [rdi + 0x10630]
0x19cb0:   48 8b 87 38 06 01 00                  	mov rax, qword ptr [rdi + 0x10638]
0x19cb7:   48 89 85 38 fb ff ff                  	mov qword ptr [rbp - 0x4c8], rax
0x19cbe:   44 29 f0                              	sub eax, r14d
0x19cc1:   89 85 30 fb ff ff                     	mov dword ptr [rbp - 0x4d0], eax
0x19cc7:   48 8d 97 48 06 01 00                  	lea rdx, [rdi + 0x10648]
0x19cce:   48 89 95 28 fb ff ff                  	mov qword ptr [rbp - 0x4d8], rdx
0x19cd5:   48 8b b7 58 06 01 00                  	mov rsi, qword ptr [rdi + 0x10658]
0x19cdc:   2b b7 50 06 01 00                     	sub esi, dword ptr [rdi + 0x10650]
0x19ce2:   01 c6                                 	add esi, eax
0x19ce4:   48 89 d7                              	mov rdi, rdx
0x19ce7:   e8 5c fb ff ff                        	call 0x19848 <reserve_work_buffer>
0x19cec:   85 c0                                 	test eax, eax
0x19cee:   0f 84 c5 00 00 00                     	je 0x19db9 <proc_arib_std_b25+0x144>
0x19cf4:   49 8d 44 24 60                        	lea rax, [r12 + 0x60]
0x19cf9:   48 89 85 18 fb ff ff                  	mov qword ptr [rbp - 0x4e8], rax
0x19d00:   49 8d 54 24 18                        	lea rdx, [r12 + 0x18]
0x19d05:   48 89 95 d0 fa ff ff                  	mov qword ptr [rbp - 0x530], rdx
0x19d0c:   49 8d 84 24 a8 02 00 00               	lea rax, [r12 + 0x2a8]
0x19d14:   48 89 85 00 fb ff ff                  	mov qword ptr [rbp - 0x500], rax
0x19d1b:   49 8d 94 24 60 02 00 00               	lea rdx, [r12 + 0x260]
0x19d23:   48 89 95 e0 fa ff ff                  	mov qword ptr [rbp - 0x520], rdx
0x19d2a:   49 8d 84 24 f0 00 00 00               	lea rax, [r12 + 0xf0]
0x19d32:   48 89 85 f8 fa ff ff                  	mov qword ptr [rbp - 0x508], rax
0x19d39:   49 8d 94 24 a8 00 00 00               	lea rdx, [r12 + 0xa8]
0x19d41:   48 89 95 d8 fa ff ff                  	mov qword ptr [rbp - 0x528], rdx
0x19d48:   49 8d 84 24 80 01 00 00               	lea rax, [r12 + 0x180]
0x19d50:   48 89 85 08 fb ff ff                  	mov qword ptr [rbp - 0x4f8], rax
0x19d57:   49 8d 94 24 38 01 00 00               	lea rdx, [r12 + 0x138]
0x19d5f:   48 89 95 e8 fa ff ff                  	mov qword ptr [rbp - 0x518], rdx
0x19d66:   49 8d 84 24 10 02 00 00               	lea rax, [r12 + 0x210]
0x19d6e:   48 89 85 10 fb ff ff                  	mov qword ptr [rbp - 0x4f0], rax
0x19d75:   49 8d 94 24 c8 01 00 00               	lea rdx, [r12 + 0x1c8]
0x19d7d:   48 89 95 f0 fa ff ff                  	mov qword ptr [rbp - 0x510], rdx
0x19d84:   c7 85 4c fb ff ff 00 00 00 00         	mov dword ptr [rbp - 0x4b4], 0
0x19d8e:   48 63 85 24 fb ff ff                  	movsxd rax, dword ptr [rbp - 0x4dc]
0x19d95:   48 89 85 40 fb ff ff                  	mov qword ptr [rbp - 0x4c0], rax
0x19d9c:   48 8d 95 80 fb ff ff                  	lea rdx, [rbp - 0x480]
0x19da3:   48 83 c2 20                           	add rdx, 0x20
0x19da7:   48 89 95 c8 fa ff ff                  	mov qword ptr [rbp - 0x538], rdx
0x19dae:   41 bf 00 00 00 00                     	mov r15d, 0
0x19db4:   e9 62 0a 00 00                        	jmp 0x1a81b <proc_arib_std_b25+0xba6>
0x19db9:   49 8b 84 24 28 06 01 00               	mov rax, qword ptr [r12 + 0x10628]
0x19dc1:   49 89 84 24 38 06 01 00               	mov qword ptr [r12 + 0x10638], rax
0x19dc9:   49 89 84 24 30 06 01 00               	mov qword ptr [r12 + 0x10630], rax
0x19dd1:   c7 85 4c fb ff ff fe ff ff ff         	mov dword ptr [rbp - 0x4b4], 0xfffffffe
0x19ddb:   e9 6b 0a 00 00                        	jmp 0x1a84b <proc_arib_std_b25+0xbd6>
0x19de0:   41 80 3e 47                           	cmp byte ptr [r14], 0x47
0x19de4:   74 21                                 	je 0x19e07 <proc_arib_std_b25+0x192>
0x19de6:   8b 95 24 fb ff ff                     	mov edx, dword ptr [rbp - 0x4dc]
0x19dec:   48 8b b5 38 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4c8]
0x19df3:   4c 89 f7                              	mov rdi, r14
0x19df6:   e8 09 e2 ff ff                        	call 0x18004 <resync>
0x19dfb:   48 85 c0                              	test rax, rax
0x19dfe:   0f 84 2f 0a 00 00                     	je 0x1a833 <proc_arib_std_b25+0xbbe>
0x19e04:   49 89 c6                              	mov r14, rax
0x19e07:   4c 89 f6                              	mov rsi, r14
0x19e0a:   48 8d bd 60 fb ff ff                  	lea rdi, [rbp - 0x4a0]
0x19e11:   e8 e0 e0 ff ff                        	call 0x17ef6 <extract_ts_header>
0x19e16:   8b 85 74 fb ff ff                     	mov eax, dword ptr [rbp - 0x48c]
0x19e1c:   89 85 34 fb ff ff                     	mov dword ptr [rbp - 0x4cc], eax
0x19e22:   8b 9d 70 fb ff ff                     	mov ebx, dword ptr [rbp - 0x490]
0x19e28:   89 d8                                 	mov eax, ebx
0x19e2a:   4d 8b ac c4 10 04 00 00               	mov r13, qword ptr [r12 + rax*8 + 0x410]
0x19e32:   4d 85 ed                              	test r13, r13
0x19e35:   75 08                                 	jne 0x19e3f <proc_arib_std_b25+0x1ca>
0x19e37:   4d 8b ac 24 00 04 00 00               	mov r13, qword ptr [r12 + 0x400]
0x19e3f:   c6 85 50 fb ff ff 01                  	mov byte ptr [rbp - 0x4b0], 1
0x19e46:   41 80 bc 24 6c 06 01 00 00            	cmp byte ptr [r12 + 0x1066c], 0
0x19e4f:   0f 84 94 00 00 00                     	je 0x19ee9 <proc_arib_std_b25+0x274>
0x19e55:   45 8b 94 24 f8 03 00 00               	mov r10d, dword ptr [r12 + 0x3f8]
0x19e5d:   45 85 d2                              	test r10d, r10d
0x19e60:   0f 8e ff 09 00 00                     	jle 0x1a865 <proc_arib_std_b25+0xbf0>
0x19e66:   49 8b 8c 24 00 04 00 00               	mov rcx, qword ptr [r12 + 0x400]
0x19e6e:   41 b8 00 00 00 00                     	mov r8d, 0
0x19e74:   49 89 c9                              	mov r9, rcx
0x19e77:   48 85 c9                              	test rcx, rcx
0x19e7a:   74 58                                 	je 0x19ed4 <proc_arib_std_b25+0x25f>
0x19e7c:   41 0f b7 84 24 6e 06 01 00            	movzx eax, word ptr [r12 + 0x1066e]
0x19e85:   39 81 98 00 00 00                     	cmp dword ptr [rcx + 0x98], eax
0x19e8b:   75 47                                 	jne 0x19ed4 <proc_arib_std_b25+0x25f>
0x19e8d:   8b b9 40 01 00 00                     	mov edi, dword ptr [rcx + 0x140]
0x19e93:   44 89 f8                              	mov eax, r15d
0x19e96:   85 ff                                 	test edi, edi
0x19e98:   7e 26                                 	jle 0x19ec0 <proc_arib_std_b25+0x24b>
0x19e9a:   48 8b 91 38 01 00 00                  	mov rdx, qword ptr [rcx + 0x138]
0x19ea1:   39 1a                                 	cmp dword ptr [rdx], ebx
0x19ea3:   75 14                                 	jne 0x19eb9 <proc_arib_std_b25+0x244>
0x19ea5:   e9 b8 09 00 00                        	jmp 0x1a862 <proc_arib_std_b25+0xbed>
0x19eaa:   8b 72 08                              	mov esi, dword ptr [rdx + 8]
0x19ead:   48 83 c2 08                           	add rdx, 8
0x19eb1:   39 de                                 	cmp esi, ebx
0x19eb3:   0f 84 a9 09 00 00                     	je 0x1a862 <proc_arib_std_b25+0xbed>
0x19eb9:   83 c0 01                              	add eax, 1
0x19ebc:   39 f8                                 	cmp eax, edi
0x19ebe:   7c ea                                 	jl 0x19eaa <proc_arib_std_b25+0x235>
0x19ec0:   39 f8                                 	cmp eax, edi
0x19ec2:   0f 85 9d 09 00 00                     	jne 0x1a865 <proc_arib_std_b25+0xbf0>
0x19ec8:   39 99 a0 00 00 00                     	cmp dword ptr [rcx + 0xa0], ebx
0x19ece:   0f 84 8e 09 00 00                     	je 0x1a862 <proc_arib_std_b25+0xbed>
0x19ed4:   41 83 c0 01                           	add r8d, 1
0x19ed8:   48 81 c1 80 07 00 00                  	add rcx, 0x780
0x19edf:   45 39 d0                              	cmp r8d, r10d
0x19ee2:   7c 90                                 	jl 0x19e74 <proc_arib_std_b25+0x1ff>
0x19ee4:   e9 7c 09 00 00                        	jmp 0x1a865 <proc_arib_std_b25+0xbf0>
0x19ee9:   49 8b 84 24 18 06 01 00               	mov rax, qword ptr [r12 + 0x10618]
0x19ef1:   48 8b 10                              	mov rdx, qword ptr [rax]
0x19ef4:   48 89 95 58 fb ff ff                  	mov qword ptr [rbp - 0x4a8], rdx
0x19efb:   80 7a 54 00                           	cmp byte ptr [rdx + 0x54], 0
0x19eff:   74 50                                 	je 0x19f51 <proc_arib_std_b25+0x2dc>
0x19f01:   80 7a 55 00                           	cmp byte ptr [rdx + 0x55], 0
0x19f05:   75 4a                                 	jne 0x19f51 <proc_arib_std_b25+0x2dc>
0x19f07:   49 83 bd 48 01 00 00 00               	cmp qword ptr [r13 + 0x148], 0
0x19f0f:   74 40                                 	je 0x19f51 <proc_arib_std_b25+0x2dc>
0x19f11:   48 8d b5 80 fb ff ff                  	lea rsi, [rbp - 0x480]
0x19f18:   48 89 c7                              	mov rdi, rax
0x19f1b:   ff 50 18                              	call qword ptr [rax + 0x18]
0x19f1e:   49 8b 85 48 01 00 00                  	mov rax, qword ptr [r13 + 0x148]
0x19f25:   48 8d b5 80 fb ff ff                  	lea rsi, [rbp - 0x480]
0x19f2c:   48 89 c7                              	mov rdi, rax
0x19f2f:   ff 50 20                              	call qword ptr [rax + 0x20]
0x19f32:   49 8b 85 48 01 00 00                  	mov rax, qword ptr [r13 + 0x148]
0x19f39:   48 8b b5 c8 fa ff ff                  	mov rsi, qword ptr [rbp - 0x538]
0x19f40:   48 89 c7                              	mov rdi, rax
0x19f43:   ff 50 28                              	call qword ptr [rax + 0x28]
0x19f46:   48 8b 85 58 fb ff ff                  	mov rax, qword ptr [rbp - 0x4a8]
0x19f4d:   c6 40 55 01                           	mov byte ptr [rax + 0x55], 1
0x19f51:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x19f58:   80 ba 5c 02 00 00 00                  	cmp byte ptr [rdx + 0x25c], 0
0x19f5f:   74 3b                                 	je 0x19f9c <proc_arib_std_b25+0x327>
0x19f61:   49 8b 85 48 01 00 00                  	mov rax, qword ptr [r13 + 0x148]
0x19f68:   48 85 c0                              	test rax, rax
0x19f6b:   74 4c                                 	je 0x19fb9 <proc_arib_std_b25+0x344>
0x19f6d:   80 ba 5d 02 00 00 00                  	cmp byte ptr [rdx + 0x25d], 0
0x19f74:   74 12                                 	je 0x19f88 <proc_arib_std_b25+0x313>
0x19f76:   48 89 d6                              	mov rsi, rdx
0x19f79:   48 81 c6 64 02 00 00                  	add rsi, 0x264
0x19f80:   48 89 c7                              	mov rdi, rax
0x19f83:   ff 50 30                              	call qword ptr [rax + 0x30]
0x19f86:   eb 06                                 	jmp 0x19f8e <proc_arib_std_b25+0x319>
0x19f88:   48 89 c7                              	mov rdi, rax
0x19f8b:   ff 50 38                              	call qword ptr [rax + 0x38]
0x19f8e:   48 8b 85 58 fb ff ff                  	mov rax, qword ptr [rbp - 0x4a8]
0x19f95:   c6 80 5c 02 00 00 00                  	mov byte ptr [rax + 0x25c], 0
0x19f9c:   49 8b 85 48 01 00 00                  	mov rax, qword ptr [r13 + 0x148]
0x19fa3:   48 85 c0                              	test rax, rax
0x19fa6:   74 11                                 	je 0x19fb9 <proc_arib_std_b25+0x344>
0x19fa8:   41 80 bc 24 71 06 01 00 00            	cmp byte ptr [r12 + 0x10671], 0
0x19fb1:   75 06                                 	jne 0x19fb9 <proc_arib_std_b25+0x344>
0x19fb3:   48 89 c7                              	mov rdi, rax
0x19fb6:   ff 50 38                              	call qword ptr [rax + 0x38]
0x19fb9:   49 8d 56 04                           	lea rdx, [r14 + 4]
0x19fbd:   48 89 95 58 fb ff ff                  	mov qword ptr [rbp - 0x4a8], rdx
0x19fc4:   8b 85 78 fb ff ff                     	mov eax, dword ptr [rbp - 0x488]
0x19fca:   a8 01                                 	test al, 1
0x19fcc:   0f 84 95 00 00 00                     	je 0x1a067 <proc_arib_std_b25+0x3f2>
0x19fd2:   a8 02                                 	test al, 2
0x19fd4:   74 0f                                 	je 0x19fe5 <proc_arib_std_b25+0x370>
0x19fd6:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x19fd9:   48 8d 54 02 01                        	lea rdx, [rdx + rax + 1]
0x19fde:   48 89 95 58 fb ff ff                  	mov qword ptr [rbp - 0x4a8], rdx
0x19fe5:   44 89 f0                              	mov eax, r14d
0x19fe8:   2b 85 58 fb ff ff                     	sub eax, dword ptr [rbp - 0x4a8]
0x19fee:   05 bc 00 00 00                        	add eax, 0xbc
0x19ff3:   89 85 30 fb ff ff                     	mov dword ptr [rbp - 0x4d0], eax
0x19ff9:   83 bd 34 fb ff ff 00                  	cmp dword ptr [rbp - 0x4cc], 0
0x1a000:   74 65                                 	je 0x1a067 <proc_arib_std_b25+0x3f2>
0x1a002:   41 c6 84 24 70 06 01 00 01            	mov byte ptr [r12 + 0x10670], 1
0x1a00b:   49 8b 85 48 01 00 00                  	mov rax, qword ptr [r13 + 0x148]
0x1a012:   48 85 c0                              	test rax, rax
0x1a015:   74 50                                 	je 0x1a067 <proc_arib_std_b25+0x3f2>
0x1a017:   83 bd 68 fb ff ff 01                  	cmp dword ptr [rbp - 0x498], 1
0x1a01e:   ba 00 00 00 00                        	mov edx, 0
0x1a023:   0f 45 95 4c fb ff ff                  	cmovne edx, dword ptr [rbp - 0x4b4]
0x1a02a:   89 95 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], edx
0x1a030:   80 bd 50 fb ff ff 01                  	cmp byte ptr [rbp - 0x4b0], 1
0x1a037:   75 2e                                 	jne 0x1a067 <proc_arib_std_b25+0x3f2>
0x1a039:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a03f:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a046:   8b b5 34 fb ff ff                     	mov esi, dword ptr [rbp - 0x4cc]
0x1a04c:   48 89 c7                              	mov rdi, rax
0x1a04f:   ff 50 48                              	call qword ptr [rax + 0x48]
0x1a052:   85 c0                                 	test eax, eax
0x1a054:   79 0c                                 	jns 0x1a062 <proc_arib_std_b25+0x3ed>
0x1a056:   c7 85 4c fb ff ff f6 ff ff ff         	mov dword ptr [rbp - 0x4b4], 0xfffffff6
0x1a060:   eb 05                                 	jmp 0x1a067 <proc_arib_std_b25+0x3f2>
0x1a062:   41 80 66 03 3f                        	and byte ptr [r14 + 3], 0x3f
0x1a067:   ba bc 00 00 00                        	mov edx, 0xbc
0x1a06c:   4c 89 f6                              	mov rsi, r14
0x1a06f:   48 8b bd 28 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4d8]
0x1a076:   e8 b5 f8 ff ff                        	call 0x19930 <append_work_buffer>
0x1a07b:   85 c0                                 	test eax, eax
0x1a07d:   75 0f                                 	jne 0x1a08e <proc_arib_std_b25+0x419>
0x1a07f:   c7 85 4c fb ff ff fe ff ff ff         	mov dword ptr [rbp - 0x4b4], 0xfffffffe
0x1a089:   e9 a5 07 00 00                        	jmp 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a08e:   85 db                                 	test ebx, ebx
0x1a090:   0f 85 be 00 00 00                     	jne 0x1a154 <proc_arib_std_b25+0x4df>
0x1a096:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a09c:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a0a3:   48 8d b5 60 fb ff ff                  	lea rsi, [rbp - 0x4a0]
0x1a0aa:   48 8b bd 18 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4e8]
0x1a0b1:   e8 eb f8 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1a0b6:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a0bc:   85 c0                                 	test eax, eax
0x1a0be:   0f 88 6f 07 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a0c4:   48 8b bd 18 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4e8]
0x1a0cb:   e8 26 dd ff ff                        	call 0x17df6 <check_ts_section>
0x1a0d0:   85 c0                                 	test eax, eax
0x1a0d2:   0f 84 3c 07 00 00                     	je 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a0d8:   48 8b bd 18 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4e8]
0x1a0df:   e8 91 df ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a0e4:   85 c0                                 	test eax, eax
0x1a0e6:   74 22                                 	je 0x1a10a <proc_arib_std_b25+0x495>
0x1a0e8:   41 83 bc 24 98 00 00 00 00            	cmp dword ptr [r12 + 0x98], 0
0x1a0f1:   74 17                                 	je 0x1a10a <proc_arib_std_b25+0x495>
0x1a0f3:   48 8b b5 18 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4e8]
0x1a0fa:   48 8b bd d0 fa ff ff                  	mov rdi, qword ptr [rbp - 0x530]
0x1a101:   e8 be f3 ff ff                        	call 0x194c4 <compare_ts_section>
0x1a106:   85 c0                                 	test eax, eax
0x1a108:   75 18                                 	jne 0x1a122 <proc_arib_std_b25+0x4ad>
0x1a10a:   48 8b bd 18 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4e8]
0x1a111:   e8 2e e1 ff ff                        	call 0x18244 <reset_ts_section>
0x1a116:   4c 03 b5 40 fb ff ff                  	add r14, qword ptr [rbp - 0x4c0]
0x1a11d:   e9 f9 06 00 00                        	jmp 0x1a81b <proc_arib_std_b25+0xba6>
0x1a122:   48 8b b5 18 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4e8]
0x1a129:   48 8b bd d0 fa ff ff                  	mov rdi, qword ptr [rbp - 0x530]
0x1a130:   e8 46 e5 ff ff                        	call 0x1867b <swap_ts_section>
0x1a135:   48 8b bd 18 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4e8]
0x1a13c:   e8 03 e1 ff ff                        	call 0x18244 <reset_ts_section>
0x1a141:   4c 89 e7                              	mov rdi, r12
0x1a144:   e8 4b f5 ff ff                        	call 0x19694 <proc_pat>
0x1a149:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a14f:   e9 df 06 00 00                        	jmp 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a154:   41 39 9d a0 00 00 00                  	cmp dword ptr [r13 + 0xa0], ebx
0x1a15b:   0f 85 b2 00 00 00                     	jne 0x1a213 <proc_arib_std_b25+0x59e>
0x1a161:   80 bd 50 fb ff ff 01                  	cmp byte ptr [rbp - 0x4b0], 1
0x1a168:   0f 85 a5 00 00 00                     	jne 0x1a213 <proc_arib_std_b25+0x59e>
0x1a16e:   49 8d 9d f0 00 00 00                  	lea rbx, [r13 + 0xf0]
0x1a175:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a17b:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a182:   48 8d b5 60 fb ff ff                  	lea rsi, [rbp - 0x4a0]
0x1a189:   48 89 df                              	mov rdi, rbx
0x1a18c:   e8 10 f8 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1a191:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a197:   85 c0                                 	test eax, eax
0x1a199:   0f 88 94 06 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a19f:   48 89 df                              	mov rdi, rbx
0x1a1a2:   e8 4f dc ff ff                        	call 0x17df6 <check_ts_section>
0x1a1a7:   85 c0                                 	test eax, eax
0x1a1a9:   0f 84 65 06 00 00                     	je 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a1af:   48 89 df                              	mov rdi, rbx
0x1a1b2:   e8 be de ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a1b7:   85 c0                                 	test eax, eax
0x1a1b9:   74 0a                                 	je 0x1a1c5 <proc_arib_std_b25+0x550>
0x1a1bb:   41 83 bd 28 01 00 00 00               	cmp dword ptr [r13 + 0x128], 0
0x1a1c3:   75 14                                 	jne 0x1a1d9 <proc_arib_std_b25+0x564>
0x1a1c5:   48 89 df                              	mov rdi, rbx
0x1a1c8:   e8 77 e0 ff ff                        	call 0x18244 <reset_ts_section>
0x1a1cd:   4c 03 b5 40 fb ff ff                  	add r14, qword ptr [rbp - 0x4c0]
0x1a1d4:   e9 42 06 00 00                        	jmp 0x1a81b <proc_arib_std_b25+0xba6>
0x1a1d9:   49 8d bd a8 00 00 00                  	lea rdi, [r13 + 0xa8]
0x1a1e0:   48 89 de                              	mov rsi, rbx
0x1a1e3:   e8 93 e4 ff ff                        	call 0x1867b <swap_ts_section>
0x1a1e8:   48 89 df                              	mov rdi, rbx
0x1a1eb:   e8 54 e0 ff ff                        	call 0x18244 <reset_ts_section>
0x1a1f0:   49 8b b4 24 18 06 01 00               	mov rsi, qword ptr [r12 + 0x10618]
0x1a1f8:   4c 89 ef                              	mov rdi, r13
0x1a1fb:   e8 d9 f1 ff ff                        	call 0x193d9 <proc_ecm>
0x1a200:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a206:   85 c0                                 	test eax, eax
0x1a208:   0f 89 06 06 00 00                     	jns 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a20e:   e9 20 06 00 00                        	jmp 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a213:   41 39 5d 00                           	cmp dword ptr [r13], ebx
0x1a217:   0f 85 bc 00 00 00                     	jne 0x1a2d9 <proc_arib_std_b25+0x664>
0x1a21d:   49 8d 5d 50                           	lea rbx, [r13 + 0x50]
0x1a221:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a227:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a22e:   48 8d b5 60 fb ff ff                  	lea rsi, [rbp - 0x4a0]
0x1a235:   48 89 df                              	mov rdi, rbx
0x1a238:   e8 64 f7 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1a23d:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a243:   85 c0                                 	test eax, eax
0x1a245:   0f 88 e8 05 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a24b:   48 89 df                              	mov rdi, rbx
0x1a24e:   e8 a3 db ff ff                        	call 0x17df6 <check_ts_section>
0x1a253:   85 c0                                 	test eax, eax
0x1a255:   0f 84 b9 05 00 00                     	je 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a25b:   48 89 df                              	mov rdi, rbx
0x1a25e:   e8 12 de ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a263:   85 c0                                 	test eax, eax
0x1a265:   74 24                                 	je 0x1a28b <proc_arib_std_b25+0x616>
0x1a267:   41 83 bd 88 00 00 00 00               	cmp dword ptr [r13 + 0x88], 0
0x1a26f:   74 1a                                 	je 0x1a28b <proc_arib_std_b25+0x616>
0x1a271:   49 8d 45 08                           	lea rax, [r13 + 8]
0x1a275:   48 89 85 50 fb ff ff                  	mov qword ptr [rbp - 0x4b0], rax
0x1a27c:   48 89 de                              	mov rsi, rbx
0x1a27f:   48 89 c7                              	mov rdi, rax
0x1a282:   e8 3d f2 ff ff                        	call 0x194c4 <compare_ts_section>
0x1a287:   85 c0                                 	test eax, eax
0x1a289:   75 14                                 	jne 0x1a29f <proc_arib_std_b25+0x62a>
0x1a28b:   48 89 df                              	mov rdi, rbx
0x1a28e:   e8 b1 df ff ff                        	call 0x18244 <reset_ts_section>
0x1a293:   4c 03 b5 40 fb ff ff                  	add r14, qword ptr [rbp - 0x4c0]
0x1a29a:   e9 7c 05 00 00                        	jmp 0x1a81b <proc_arib_std_b25+0xba6>
0x1a29f:   48 89 de                              	mov rsi, rbx
0x1a2a2:   48 8b bd 50 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4b0]
0x1a2a9:   e8 cd e3 ff ff                        	call 0x1867b <swap_ts_section>
0x1a2ae:   48 89 df                              	mov rdi, rbx
0x1a2b1:   e8 8e df ff ff                        	call 0x18244 <reset_ts_section>
0x1a2b6:   4c 89 ef                              	mov rdi, r13
0x1a2b9:   e8 9f ea ff ff                        	call 0x18d5d <proc_pmt>
0x1a2be:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a2c4:   85 c0                                 	test eax, eax
0x1a2c6:   0f 88 67 05 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a2cc:   4c 89 e7                              	mov rdi, r12
0x1a2cf:   e8 b0 df ff ff                        	call 0x18284 <setup_pid_map>
0x1a2d4:   e9 3b 05 00 00                        	jmp 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a2d9:   41 39 9c 24 58 02 00 00               	cmp dword ptr [r12 + 0x258], ebx
0x1a2e1:   0f 85 86 01 00 00                     	jne 0x1a46d <proc_arib_std_b25+0x7f8>
0x1a2e7:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a2ed:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a2f4:   48 8d b5 60 fb ff ff                  	lea rsi, [rbp - 0x4a0]
0x1a2fb:   48 8b bd 00 fb ff ff                  	mov rdi, qword ptr [rbp - 0x500]
0x1a302:   e8 f9 f8 ff ff                        	call 0x19c00 <set_ts_section_data_for_remaining_payload_data>
0x1a307:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a30d:   48 8b bd 00 fb ff ff                  	mov rdi, qword ptr [rbp - 0x500]
0x1a314:   e8 dd da ff ff                        	call 0x17df6 <check_ts_section>
0x1a319:   85 c0                                 	test eax, eax
0x1a31b:   0f 84 82 00 00 00                     	je 0x1a3a3 <proc_arib_std_b25+0x72e>
0x1a321:   48 8b bd 00 fb ff ff                  	mov rdi, qword ptr [rbp - 0x500]
0x1a328:   e8 48 dd ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a32d:   85 c0                                 	test eax, eax
0x1a32f:   74 22                                 	je 0x1a353 <proc_arib_std_b25+0x6de>
0x1a331:   41 83 bc 24 e0 02 00 00 00            	cmp dword ptr [r12 + 0x2e0], 0
0x1a33a:   74 17                                 	je 0x1a353 <proc_arib_std_b25+0x6de>
0x1a33c:   48 8b b5 00 fb ff ff                  	mov rsi, qword ptr [rbp - 0x500]
0x1a343:   48 8b bd e0 fa ff ff                  	mov rdi, qword ptr [rbp - 0x520]
0x1a34a:   e8 75 f1 ff ff                        	call 0x194c4 <compare_ts_section>
0x1a34f:   85 c0                                 	test eax, eax
0x1a351:   75 0e                                 	jne 0x1a361 <proc_arib_std_b25+0x6ec>
0x1a353:   48 8b bd 00 fb ff ff                  	mov rdi, qword ptr [rbp - 0x500]
0x1a35a:   e8 e5 de ff ff                        	call 0x18244 <reset_ts_section>
0x1a35f:   eb 42                                 	jmp 0x1a3a3 <proc_arib_std_b25+0x72e>
0x1a361:   48 8b b5 00 fb ff ff                  	mov rsi, qword ptr [rbp - 0x500]
0x1a368:   48 8b bd e0 fa ff ff                  	mov rdi, qword ptr [rbp - 0x520]
0x1a36f:   e8 07 e3 ff ff                        	call 0x1867b <swap_ts_section>
0x1a374:   48 8b bd 00 fb ff ff                  	mov rdi, qword ptr [rbp - 0x500]
0x1a37b:   e8 c4 de ff ff                        	call 0x18244 <reset_ts_section>
0x1a380:   41 81 bc 24 80 02 00 00 84 00 00 00   	cmp dword ptr [r12 + 0x280], 0x84
0x1a38c:   75 15                                 	jne 0x1a3a3 <proc_arib_std_b25+0x72e>
0x1a38e:   4c 89 e7                              	mov rdi, r12
0x1a391:   e8 d4 e3 ff ff                        	call 0x1876a <proc_emm>
0x1a396:   83 bd 4c fb ff ff 00                  	cmp dword ptr [rbp - 0x4b4], 0
0x1a39d:   0f 88 90 04 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a3a3:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a3a9:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a3b0:   48 8d b5 60 fb ff ff                  	lea rsi, [rbp - 0x4a0]
0x1a3b7:   48 8b bd 00 fb ff ff                  	mov rdi, qword ptr [rbp - 0x500]
0x1a3be:   e8 de f5 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1a3c3:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a3c9:   85 c0                                 	test eax, eax
0x1a3cb:   0f 88 62 04 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a3d1:   48 8b bd 00 fb ff ff                  	mov rdi, qword ptr [rbp - 0x500]
0x1a3d8:   e8 19 da ff ff                        	call 0x17df6 <check_ts_section>
0x1a3dd:   85 c0                                 	test eax, eax
0x1a3df:   0f 84 2f 04 00 00                     	je 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a3e5:   48 8b bd 00 fb ff ff                  	mov rdi, qword ptr [rbp - 0x500]
0x1a3ec:   e8 84 dc ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a3f1:   85 c0                                 	test eax, eax
0x1a3f3:   74 22                                 	je 0x1a417 <proc_arib_std_b25+0x7a2>
0x1a3f5:   41 83 bc 24 e0 02 00 00 00            	cmp dword ptr [r12 + 0x2e0], 0
0x1a3fe:   74 17                                 	je 0x1a417 <proc_arib_std_b25+0x7a2>
0x1a400:   48 8b b5 00 fb ff ff                  	mov rsi, qword ptr [rbp - 0x500]
0x1a407:   48 8b bd e0 fa ff ff                  	mov rdi, qword ptr [rbp - 0x520]
0x1a40e:   e8 b1 f0 ff ff                        	call 0x194c4 <compare_ts_section>
0x1a413:   85 c0                                 	test eax, eax
0x1a415:   75 18                                 	jne 0x1a42f <proc_arib_std_b25+0x7ba>
0x1a417:   48 8b bd 00 fb ff ff                  	mov rdi, qword ptr [rbp - 0x500]
0x1a41e:   e8 21 de ff ff                        	call 0x18244 <reset_ts_section>
0x1a423:   4c 03 b5 40 fb ff ff                  	add r14, qword ptr [rbp - 0x4c0]
0x1a42a:   e9 ec 03 00 00                        	jmp 0x1a81b <proc_arib_std_b25+0xba6>
0x1a42f:   48 8b b5 00 fb ff ff                  	mov rsi, qword ptr [rbp - 0x500]
0x1a436:   48 8b bd e0 fa ff ff                  	mov rdi, qword ptr [rbp - 0x520]
0x1a43d:   e8 39 e2 ff ff                        	call 0x1867b <swap_ts_section>
0x1a442:   48 8b bd 00 fb ff ff                  	mov rdi, qword ptr [rbp - 0x500]
0x1a449:   e8 f6 dd ff ff                        	call 0x18244 <reset_ts_section>
0x1a44e:   41 81 bc 24 80 02 00 00 84 00 00 00   	cmp dword ptr [r12 + 0x280], 0x84
0x1a45a:   0f 85 b4 03 00 00                     	jne 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a460:   4c 89 e7                              	mov rdi, r12
0x1a463:   e8 02 e3 ff ff                        	call 0x1876a <proc_emm>
0x1a468:   e9 a7 03 00 00                        	jmp 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a46d:   83 fb 01                              	cmp ebx, 1
0x1a470:   0f 85 c6 00 00 00                     	jne 0x1a53c <proc_arib_std_b25+0x8c7>
0x1a476:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a47c:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a483:   48 8d b5 60 fb ff ff                  	lea rsi, [rbp - 0x4a0]
0x1a48a:   48 8b bd f8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x508]
0x1a491:   e8 0b f5 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1a496:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a49c:   85 c0                                 	test eax, eax
0x1a49e:   0f 88 8f 03 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a4a4:   48 8b bd f8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x508]
0x1a4ab:   e8 46 d9 ff ff                        	call 0x17df6 <check_ts_section>
0x1a4b0:   85 c0                                 	test eax, eax
0x1a4b2:   0f 84 5c 03 00 00                     	je 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a4b8:   48 8b bd f8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x508]
0x1a4bf:   e8 b1 db ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a4c4:   85 c0                                 	test eax, eax
0x1a4c6:   74 22                                 	je 0x1a4ea <proc_arib_std_b25+0x875>
0x1a4c8:   41 83 bc 24 28 01 00 00 00            	cmp dword ptr [r12 + 0x128], 0
0x1a4d1:   74 17                                 	je 0x1a4ea <proc_arib_std_b25+0x875>
0x1a4d3:   48 8b b5 f8 fa ff ff                  	mov rsi, qword ptr [rbp - 0x508]
0x1a4da:   48 8b bd d8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x528]
0x1a4e1:   e8 de ef ff ff                        	call 0x194c4 <compare_ts_section>
0x1a4e6:   85 c0                                 	test eax, eax
0x1a4e8:   75 18                                 	jne 0x1a502 <proc_arib_std_b25+0x88d>
0x1a4ea:   48 8b bd f8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x508]
0x1a4f1:   e8 4e dd ff ff                        	call 0x18244 <reset_ts_section>
0x1a4f6:   4c 03 b5 40 fb ff ff                  	add r14, qword ptr [rbp - 0x4c0]
0x1a4fd:   e9 19 03 00 00                        	jmp 0x1a81b <proc_arib_std_b25+0xba6>
0x1a502:   48 8b b5 f8 fa ff ff                  	mov rsi, qword ptr [rbp - 0x508]
0x1a509:   48 8b bd d8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x528]
0x1a510:   e8 66 e1 ff ff                        	call 0x1867b <swap_ts_section>
0x1a515:   48 8b bd f8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x508]
0x1a51c:   e8 23 dd ff ff                        	call 0x18244 <reset_ts_section>
0x1a521:   4c 89 e7                              	mov rdi, r12
0x1a524:   e8 f0 d7 ff ff                        	call 0x17d19 <proc_cat>
0x1a529:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a52f:   85 c0                                 	test eax, eax
0x1a531:   0f 89 dd 02 00 00                     	jns 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a537:   e9 f7 02 00 00                        	jmp 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a53c:   83 fb 11                              	cmp ebx, 0x11
0x1a53f:   0f 85 6b 01 00 00                     	jne 0x1a6b0 <proc_arib_std_b25+0xa3b>
0x1a545:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a54b:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a552:   48 8d b5 60 fb ff ff                  	lea rsi, [rbp - 0x4a0]
0x1a559:   48 8b bd 08 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f8]
0x1a560:   e8 9b f6 ff ff                        	call 0x19c00 <set_ts_section_data_for_remaining_payload_data>
0x1a565:   48 8b bd 08 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f8]
0x1a56c:   e8 85 d8 ff ff                        	call 0x17df6 <check_ts_section>
0x1a571:   85 c0                                 	test eax, eax
0x1a573:   74 75                                 	je 0x1a5ea <proc_arib_std_b25+0x975>
0x1a575:   48 8b bd 08 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f8]
0x1a57c:   e8 f4 da ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a581:   85 c0                                 	test eax, eax
0x1a583:   74 22                                 	je 0x1a5a7 <proc_arib_std_b25+0x932>
0x1a585:   41 83 bc 24 b8 01 00 00 00            	cmp dword ptr [r12 + 0x1b8], 0
0x1a58e:   74 17                                 	je 0x1a5a7 <proc_arib_std_b25+0x932>
0x1a590:   48 8b b5 08 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4f8]
0x1a597:   48 8b bd e8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x518]
0x1a59e:   e8 21 ef ff ff                        	call 0x194c4 <compare_ts_section>
0x1a5a3:   85 c0                                 	test eax, eax
0x1a5a5:   75 0e                                 	jne 0x1a5b5 <proc_arib_std_b25+0x940>
0x1a5a7:   48 8b bd 08 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f8]
0x1a5ae:   e8 91 dc ff ff                        	call 0x18244 <reset_ts_section>
0x1a5b3:   eb 35                                 	jmp 0x1a5ea <proc_arib_std_b25+0x975>
0x1a5b5:   48 8b b5 08 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4f8]
0x1a5bc:   48 8b bd e8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x518]
0x1a5c3:   e8 b3 e0 ff ff                        	call 0x1867b <swap_ts_section>
0x1a5c8:   48 8b bd 08 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f8]
0x1a5cf:   e8 70 dc ff ff                        	call 0x18244 <reset_ts_section>
0x1a5d4:   4c 89 e7                              	mov rdi, r12
0x1a5d7:   e8 d0 e2 ff ff                        	call 0x188ac <proc_sdt>
0x1a5dc:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a5e2:   85 c0                                 	test eax, eax
0x1a5e4:   0f 88 49 02 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a5ea:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a5f0:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a5f7:   48 8d b5 60 fb ff ff                  	lea rsi, [rbp - 0x4a0]
0x1a5fe:   48 8b bd 08 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f8]
0x1a605:   e8 97 f3 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1a60a:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a610:   85 c0                                 	test eax, eax
0x1a612:   0f 88 1b 02 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a618:   48 8b bd 08 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f8]
0x1a61f:   e8 d2 d7 ff ff                        	call 0x17df6 <check_ts_section>
0x1a624:   85 c0                                 	test eax, eax
0x1a626:   0f 84 e8 01 00 00                     	je 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a62c:   48 8b bd 08 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f8]
0x1a633:   e8 3d da ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a638:   85 c0                                 	test eax, eax
0x1a63a:   74 22                                 	je 0x1a65e <proc_arib_std_b25+0x9e9>
0x1a63c:   41 83 bc 24 b8 01 00 00 00            	cmp dword ptr [r12 + 0x1b8], 0
0x1a645:   74 17                                 	je 0x1a65e <proc_arib_std_b25+0x9e9>
0x1a647:   48 8b b5 08 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4f8]
0x1a64e:   48 8b bd e8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x518]
0x1a655:   e8 6a ee ff ff                        	call 0x194c4 <compare_ts_section>
0x1a65a:   85 c0                                 	test eax, eax
0x1a65c:   75 18                                 	jne 0x1a676 <proc_arib_std_b25+0xa01>
0x1a65e:   48 8b bd 08 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f8]
0x1a665:   e8 da db ff ff                        	call 0x18244 <reset_ts_section>
0x1a66a:   4c 03 b5 40 fb ff ff                  	add r14, qword ptr [rbp - 0x4c0]
0x1a671:   e9 a5 01 00 00                        	jmp 0x1a81b <proc_arib_std_b25+0xba6>
0x1a676:   48 8b b5 08 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4f8]
0x1a67d:   48 8b bd e8 fa ff ff                  	mov rdi, qword ptr [rbp - 0x518]
0x1a684:   e8 f2 df ff ff                        	call 0x1867b <swap_ts_section>
0x1a689:   48 8b bd 08 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f8]
0x1a690:   e8 af db ff ff                        	call 0x18244 <reset_ts_section>
0x1a695:   4c 89 e7                              	mov rdi, r12
0x1a698:   e8 0f e2 ff ff                        	call 0x188ac <proc_sdt>
0x1a69d:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a6a3:   85 c0                                 	test eax, eax
0x1a6a5:   0f 89 69 01 00 00                     	jns 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a6ab:   e9 83 01 00 00                        	jmp 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a6b0:   83 fb 12                              	cmp ebx, 0x12
0x1a6b3:   0f 85 5b 01 00 00                     	jne 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a6b9:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a6bf:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a6c6:   48 8d b5 60 fb ff ff                  	lea rsi, [rbp - 0x4a0]
0x1a6cd:   48 8b bd 10 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f0]
0x1a6d4:   e8 27 f5 ff ff                        	call 0x19c00 <set_ts_section_data_for_remaining_payload_data>
0x1a6d9:   48 8b bd 10 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f0]
0x1a6e0:   e8 11 d7 ff ff                        	call 0x17df6 <check_ts_section>
0x1a6e5:   85 c0                                 	test eax, eax
0x1a6e7:   74 75                                 	je 0x1a75e <proc_arib_std_b25+0xae9>
0x1a6e9:   48 8b bd 10 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f0]
0x1a6f0:   e8 80 d9 ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a6f5:   85 c0                                 	test eax, eax
0x1a6f7:   74 22                                 	je 0x1a71b <proc_arib_std_b25+0xaa6>
0x1a6f9:   41 83 bc 24 48 02 00 00 00            	cmp dword ptr [r12 + 0x248], 0
0x1a702:   74 17                                 	je 0x1a71b <proc_arib_std_b25+0xaa6>
0x1a704:   48 8b b5 10 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4f0]
0x1a70b:   48 8b bd f0 fa ff ff                  	mov rdi, qword ptr [rbp - 0x510]
0x1a712:   e8 ad ed ff ff                        	call 0x194c4 <compare_ts_section>
0x1a717:   85 c0                                 	test eax, eax
0x1a719:   75 0e                                 	jne 0x1a729 <proc_arib_std_b25+0xab4>
0x1a71b:   48 8b bd 10 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f0]
0x1a722:   e8 1d db ff ff                        	call 0x18244 <reset_ts_section>
0x1a727:   eb 35                                 	jmp 0x1a75e <proc_arib_std_b25+0xae9>
0x1a729:   48 8b b5 10 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4f0]
0x1a730:   48 8b bd f0 fa ff ff                  	mov rdi, qword ptr [rbp - 0x510]
0x1a737:   e8 3f df ff ff                        	call 0x1867b <swap_ts_section>
0x1a73c:   48 8b bd 10 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f0]
0x1a743:   e8 fc da ff ff                        	call 0x18244 <reset_ts_section>
0x1a748:   4c 89 e7                              	mov rdi, r12
0x1a74b:   e8 34 e3 ff ff                        	call 0x18a84 <proc_eit>
0x1a750:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a756:   85 c0                                 	test eax, eax
0x1a758:   0f 88 d5 00 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a75e:   8b 8d 30 fb ff ff                     	mov ecx, dword ptr [rbp - 0x4d0]
0x1a764:   48 8b 95 58 fb ff ff                  	mov rdx, qword ptr [rbp - 0x4a8]
0x1a76b:   48 8d b5 60 fb ff ff                  	lea rsi, [rbp - 0x4a0]
0x1a772:   48 8b bd 10 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f0]
0x1a779:   e8 23 f2 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1a77e:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a784:   85 c0                                 	test eax, eax
0x1a786:   0f 88 a7 00 00 00                     	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a78c:   48 8b bd 10 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f0]
0x1a793:   e8 5e d6 ff ff                        	call 0x17df6 <check_ts_section>
0x1a798:   85 c0                                 	test eax, eax
0x1a79a:   74 78                                 	je 0x1a814 <proc_arib_std_b25+0xb9f>
0x1a79c:   48 8b bd 10 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f0]
0x1a7a3:   e8 cd d8 ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a7a8:   85 c0                                 	test eax, eax
0x1a7aa:   74 22                                 	je 0x1a7ce <proc_arib_std_b25+0xb59>
0x1a7ac:   41 83 bc 24 48 02 00 00 00            	cmp dword ptr [r12 + 0x248], 0
0x1a7b5:   74 17                                 	je 0x1a7ce <proc_arib_std_b25+0xb59>
0x1a7b7:   48 8b b5 10 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4f0]
0x1a7be:   48 8b bd f0 fa ff ff                  	mov rdi, qword ptr [rbp - 0x510]
0x1a7c5:   e8 fa ec ff ff                        	call 0x194c4 <compare_ts_section>
0x1a7ca:   85 c0                                 	test eax, eax
0x1a7cc:   75 15                                 	jne 0x1a7e3 <proc_arib_std_b25+0xb6e>
0x1a7ce:   48 8b bd 10 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f0]
0x1a7d5:   e8 6a da ff ff                        	call 0x18244 <reset_ts_section>
0x1a7da:   4c 03 b5 40 fb ff ff                  	add r14, qword ptr [rbp - 0x4c0]
0x1a7e1:   eb 38                                 	jmp 0x1a81b <proc_arib_std_b25+0xba6>
0x1a7e3:   48 8b b5 10 fb ff ff                  	mov rsi, qword ptr [rbp - 0x4f0]
0x1a7ea:   48 8b bd f0 fa ff ff                  	mov rdi, qword ptr [rbp - 0x510]
0x1a7f1:   e8 85 de ff ff                        	call 0x1867b <swap_ts_section>
0x1a7f6:   48 8b bd 10 fb ff ff                  	mov rdi, qword ptr [rbp - 0x4f0]
0x1a7fd:   e8 42 da ff ff                        	call 0x18244 <reset_ts_section>
0x1a802:   4c 89 e7                              	mov rdi, r12
0x1a805:   e8 7a e2 ff ff                        	call 0x18a84 <proc_eit>
0x1a80a:   89 85 4c fb ff ff                     	mov dword ptr [rbp - 0x4b4], eax
0x1a810:   85 c0                                 	test eax, eax
0x1a812:   78 1f                                 	js 0x1a833 <proc_arib_std_b25+0xbbe>
0x1a814:   4c 03 b5 40 fb ff ff                  	add r14, qword ptr [rbp - 0x4c0]
0x1a81b:   48 8b 85 40 fb ff ff                  	mov rax, qword ptr [rbp - 0x4c0]
0x1a822:   49 8d 04 06                           	lea rax, [r14 + rax]
0x1a826:   48 39 85 38 fb ff ff                  	cmp qword ptr [rbp - 0x4c8], rax
0x1a82d:   0f 83 ad f5 ff ff                     	jae 0x19de0 <proc_arib_std_b25+0x16b>
0x1a833:   49 8b 84 24 28 06 01 00               	mov rax, qword ptr [r12 + 0x10628]
0x1a83b:   49 89 84 24 38 06 01 00               	mov qword ptr [r12 + 0x10638], rax
0x1a843:   49 89 84 24 30 06 01 00               	mov qword ptr [r12 + 0x10630], rax
0x1a84b:   8b 85 4c fb ff ff                     	mov eax, dword ptr [rbp - 0x4b4]
0x1a851:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x1a855:   65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x1a85e:   74 2c                                 	je 0x1a88c
0x1a860:   eb 25                                 	jmp 0x1a887
0x1a862:   4d 89 cd                              	mov r13, r9
0x1a865:   41 0f b7 84 24 6e 06 01 00            	movzx eax, word ptr [r12 + 0x1066e]
; function: put_arib_std_b25 at 0x1a86e -- 0x1a89e
0x1a86e:   41 39 85 98 00 00 00                  	cmp dword ptr [r13 + 0x98], eax
0x1a875:   0f 94 85 50 fb ff ff                  	sete byte ptr [rbp - 0x4b0]
0x1a87c:   0f 85 1a f7 ff ff                     	jne 0x19f9c
0x1a882:   e9 62 f6 ff ff                        	jmp 0x19ee9
0x1a887:   e8 1c 43 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x1a88c:   48 81 c4 18 05 00 00                  	add rsp, 0x518
0x1a893:   5b                                    	pop rbx
0x1a894:   41 5c                                 	pop r12
0x1a896:   41 5d                                 	pop r13
0x1a898:   41 5e                                 	pop r14
0x1a89a:   41 5f                                 	pop r15
0x1a89c:   c9                                    	leave 
0x1a89d:   c3                                    	ret 
; function: put_arib_std_b25 at 0x1a89e -- 0x1aedc
0x1a89e:   55                                    	push rbp
0x1a89f:   48 89 e5                              	mov rbp, rsp
0x1a8a2:   48 83 c4 80                           	add rsp, -0x80
0x1a8a6:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x1a8aa:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x1a8ae:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x1a8b2:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1a8b6:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1a8ba:   e8 31 43 02 00                        	call 0x3ebf0 <mcount>
0x1a8bf:   49 89 fd                              	mov r13, rdi
0x1a8c2:   49 89 f4                              	mov r12, rsi
0x1a8c5:   e8 96 d1 ff ff                        	call 0x17a60 <private_data>
0x1a8ca:   48 89 c3                              	mov rbx, rax
0x1a8cd:   48 85 c0                              	test rax, rax
0x1a8d0:   74 05                                 	je 0x1a8d7 <put_arib_std_b25+0x39>
0x1a8d2:   4d 85 e4                              	test r12, r12
0x1a8d5:   75 0b                                 	jne 0x1a8e2 <put_arib_std_b25+0x44>
0x1a8d7:   41 bc ff ff ff ff                     	mov r12d, 0xffffffff
0x1a8dd:   e9 00 06 00 00                        	jmp 0x1aee2
0x1a8e2:   41 8b 54 24 08                        	mov edx, dword ptr [r12 + 8]
0x1a8e7:   48 8d b8 28 06 01 00                  	lea rdi, [rax + 0x10628]
0x1a8ee:   49 8b 34 24                           	mov rsi, qword ptr [r12]
0x1a8f2:   e8 39 f0 ff ff                        	call 0x19930 <append_work_buffer>
0x1a8f7:   85 c0                                 	test eax, eax
0x1a8f9:   0f 84 dd 05 00 00                     	je 0x1aedc <put_arib_std_b25+0x63c>
0x1a8ff:   81 7b 04 bb 00 00 00                  	cmp dword ptr [rbx + 4], 0xbb
0x1a906:   7f 20                                 	jg 0x1a928 <put_arib_std_b25+0x8a>
0x1a908:   48 89 df                              	mov rdi, rbx
0x1a90b:   e8 be d7 ff ff                        	call 0x180ce <select_unit_size>
0x1a910:   41 89 c4                              	mov r12d, eax
0x1a913:   85 c0                                 	test eax, eax
0x1a915:   0f 88 53 05 00 00                     	js 0x1ae6e <put_arib_std_b25+0x5d0>
0x1a91b:   81 7b 04 bb 00 00 00                  	cmp dword ptr [rbx + 4], 0xbb
0x1a922:   0f 8e 40 05 00 00                     	jle 0x1ae68 <put_arib_std_b25+0x5ca>
0x1a928:   83 bb f8 03 00 00 00                  	cmp dword ptr [rbx + 0x3f8], 0
0x1a92f:   0f 8f 4d 01 00 00                     	jg 0x1aa82 <put_arib_std_b25+0x1e4>
0x1a935:   8b 43 04                              	mov eax, dword ptr [rbx + 4]
0x1a938:   89 45 94                              	mov dword ptr [rbp - 0x6c], eax
0x1a93b:   4c 63 73 08                           	movsxd r14, dword ptr [rbx + 8]
0x1a93f:   4c 03 b3 30 06 01 00                  	add r14, qword ptr [rbx + 0x10630]
0x1a946:   48 8b 83 38 06 01 00                  	mov rax, qword ptr [rbx + 0x10638]
0x1a94d:   48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x1a951:   48 8d 43 60                           	lea rax, [rbx + 0x60]
0x1a955:   48 89 45 a0                           	mov qword ptr [rbp - 0x60], rax
0x1a959:   41 bc 00 00 00 00                     	mov r12d, 0
0x1a95f:   4c 63 7d 94                           	movsxd r15, dword ptr [rbp - 0x6c]
0x1a963:   e9 b4 00 00 00                        	jmp 0x1aa1c <put_arib_std_b25+0x17e>
0x1a968:   41 80 3e 47                           	cmp byte ptr [r14], 0x47
0x1a96c:   74 1b                                 	je 0x1a989 <put_arib_std_b25+0xeb>
0x1a96e:   8b 55 94                              	mov edx, dword ptr [rbp - 0x6c]
0x1a971:   48 8b 75 a8                           	mov rsi, qword ptr [rbp - 0x58]
0x1a975:   4c 89 f7                              	mov rdi, r14
0x1a978:   e8 87 d6 ff ff                        	call 0x18004 <resync>
0x1a97d:   48 85 c0                              	test rax, rax
0x1a980:   0f 84 a8 00 00 00                     	je 0x1aa2e <put_arib_std_b25+0x190>
0x1a986:   49 89 c6                              	mov r14, rax
0x1a989:   4c 89 f6                              	mov rsi, r14
0x1a98c:   48 8d 7d b0                           	lea rdi, [rbp - 0x50]
0x1a990:   e8 61 d5 ff ff                        	call 0x17ef6 <extract_ts_header>
0x1a995:   83 7d c0 00                           	cmp dword ptr [rbp - 0x40], 0
0x1a999:   75 7e                                 	jne 0x1aa19 <put_arib_std_b25+0x17b>
0x1a99b:   49 8d 56 04                           	lea rdx, [r14 + 4]
0x1a99f:   f6 45 c8 02                           	test byte ptr [rbp - 0x38], 2
0x1a9a3:   74 08                                 	je 0x1a9ad <put_arib_std_b25+0x10f>
0x1a9a5:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x1a9a8:   48 8d 54 02 01                        	lea rdx, [rdx + rax + 1]
0x1a9ad:   44 89 f1                              	mov ecx, r14d
0x1a9b0:   29 d1                                 	sub ecx, edx
0x1a9b2:   81 c1 bc 00 00 00                     	add ecx, 0xbc
0x1a9b8:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1a9bc:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x1a9c0:   e8 dc ef ff ff                        	call 0x199a1 <set_ts_section_data>
0x1a9c5:   41 89 c4                              	mov r12d, eax
0x1a9c8:   85 c0                                 	test eax, eax
0x1a9ca:   78 62                                 	js 0x1aa2e <put_arib_std_b25+0x190>
0x1a9cc:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x1a9d0:   e8 21 d4 ff ff                        	call 0x17df6 <check_ts_section>
0x1a9d5:   85 c0                                 	test eax, eax
0x1a9d7:   74 40                                 	je 0x1aa19 <put_arib_std_b25+0x17b>
0x1a9d9:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x1a9dd:   e8 93 d6 ff ff                        	call 0x18075 <check_ts_section_crc>
0x1a9e2:   85 c0                                 	test eax, eax
0x1a9e4:   74 09                                 	je 0x1a9ef <put_arib_std_b25+0x151>
0x1a9e6:   83 bb 98 00 00 00 00                  	cmp dword ptr [rbx + 0x98], 0
0x1a9ed:   75 0e                                 	jne 0x1a9fd <put_arib_std_b25+0x15f>
0x1a9ef:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x1a9f3:   e8 4c d8 ff ff                        	call 0x18244 <reset_ts_section>
0x1a9f8:   4d 01 fe                              	add r14, r15
0x1a9fb:   eb 1f                                 	jmp 0x1aa1c <put_arib_std_b25+0x17e>
0x1a9fd:   48 8d 7b 18                           	lea rdi, [rbx + 0x18]
0x1aa01:   48 8b 75 a0                           	mov rsi, qword ptr [rbp - 0x60]
0x1aa05:   e8 71 dc ff ff                        	call 0x1867b <swap_ts_section>
0x1aa0a:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x1aa0e:   e8 31 d8 ff ff                        	call 0x18244 <reset_ts_section>
0x1aa13:   4c 03 75 98                           	add r14, qword ptr [rbp - 0x68]
0x1aa17:   eb 15                                 	jmp 0x1aa2e <put_arib_std_b25+0x190>
0x1aa19:   4d 01 fe                              	add r14, r15
0x1aa1c:   4c 89 7d 98                           	mov qword ptr [rbp - 0x68], r15
0x1aa20:   4b 8d 04 3e                           	lea rax, [r14 + r15]
0x1aa24:   48 39 45 a8                           	cmp qword ptr [rbp - 0x58], rax
0x1aa28:   0f 83 3a ff ff ff                     	jae 0x1a968 <put_arib_std_b25+0xca>
0x1aa2e:   44 2b b3 30 06 01 00                  	sub r14d, dword ptr [rbx + 0x10630]
0x1aa35:   44 89 73 08                           	mov dword ptr [rbx + 8], r14d
0x1aa39:   48 8d 7b 18                           	lea rdi, [rbx + 0x18]
0x1aa3d:   e8 b4 d3 ff ff                        	call 0x17df6 <check_ts_section>
0x1aa42:   85 c0                                 	test eax, eax
0x1aa44:   74 0b                                 	je 0x1aa51 <put_arib_std_b25+0x1b3>
0x1aa46:   48 89 df                              	mov rdi, rbx
0x1aa49:   e8 46 ec ff ff                        	call 0x19694 <proc_pat>
0x1aa4e:   41 89 c4                              	mov r12d, eax
0x1aa51:   45 85 e4                              	test r12d, r12d
0x1aa54:   0f 88 14 04 00 00                     	js 0x1ae6e <put_arib_std_b25+0x5d0>
0x1aa5a:   83 bb f8 03 00 00 00                  	cmp dword ptr [rbx + 0x3f8], 0
0x1aa61:   7f 18                                 	jg 0x1aa7b <put_arib_std_b25+0x1dd>
0x1aa63:   41 bc fc ff ff ff                     	mov r12d, 0xfffffffc
0x1aa69:   81 7b 08 ff ff ff 00                  	cmp dword ptr [rbx + 8], 0xffffff
0x1aa70:   0f 8f f8 03 00 00                     	jg 0x1ae6e <put_arib_std_b25+0x5d0>
0x1aa76:   e9 ed 03 00 00                        	jmp 0x1ae68 <put_arib_std_b25+0x5ca>
0x1aa7b:   c7 43 08 00 00 00 00                  	mov dword ptr [rbx + 8], 0
0x1aa82:   48 89 df                              	mov rdi, rbx
0x1aa85:   e8 95 d3 ff ff                        	call 0x17e1f <check_pmt_complete>
0x1aa8a:   85 c0                                 	test eax, eax
0x1aa8c:   0f 85 e9 01 00 00                     	jne 0x1ac7b <put_arib_std_b25+0x3dd>
0x1aa92:   48 89 df                              	mov rdi, rbx
0x1aa95:   e8 b5 ef ff ff                        	call 0x19a4f <find_pmt>
0x1aa9a:   41 89 c4                              	mov r12d, eax
0x1aa9d:   85 c0                                 	test eax, eax
0x1aa9f:   0f 88 c9 03 00 00                     	js 0x1ae6e <put_arib_std_b25+0x5d0>
0x1aaa5:   48 89 df                              	mov rdi, rbx
0x1aaa8:   e8 72 d3 ff ff                        	call 0x17e1f <check_pmt_complete>
0x1aaad:   85 c0                                 	test eax, eax
0x1aaaf:   0f 85 b7 01 00 00                     	jne 0x1ac6c <put_arib_std_b25+0x3ce>
0x1aab5:   8b 43 08                              	mov eax, dword ptr [rbx + 8]
0x1aab8:   41 bc fb ff ff ff                     	mov r12d, 0xfffffffb
0x1aabe:   3d ff ff ff 01                        	cmp eax, 0x1ffffff
0x1aac3:   0f 8f a5 03 00 00                     	jg 0x1ae6e <put_arib_std_b25+0x5d0>
0x1aac9:   03 43 0c                              	add eax, dword ptr [rbx + 0xc]
0x1aacc:   89 43 0c                              	mov dword ptr [rbx + 0xc], eax
0x1aacf:   3d 00 00 50 00                        	cmp eax, 0x500000
0x1aad4:   0f 8e 8e 03 00 00                     	jle 0x1ae68 <put_arib_std_b25+0x5ca>
0x1aada:   48 63 83 f8 03 00 00                  	movsxd rax, dword ptr [rbx + 0x3f8]
0x1aae1:   48 89 c2                              	mov rdx, rax
0x1aae4:   48 c1 e2 07                           	shl rdx, 7
0x1aae8:   48 89 c7                              	mov rdi, rax
0x1aaeb:   48 c1 e7 0b                           	shl rdi, 0xb
0x1aaef:   48 29 d7                              	sub rdi, rdx
0x1aaf2:   be 20 00 00 00                        	mov esi, 0x20
0x1aaf7:   e8 f4 41 02 00                        	call 0x3ecf0 <__kmalloc>
0x1aafc:   48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x1ab00:   41 bf 00 00 00 00                     	mov r15d, 0
0x1ab06:   41 bc 00 00 00 00                     	mov r12d, 0
0x1ab0c:   83 bb f8 03 00 00 00                  	cmp dword ptr [rbx + 0x3f8], 0
0x1ab13:   0f 8e 05 01 00 00                     	jle 0x1ac1e <put_arib_std_b25+0x380>
0x1ab19:   b8 00 00 00 00                        	mov eax, 0
0x1ab1e:   48 83 c0 04                           	add rax, 4
0x1ab22:   48 89 45 a0                           	mov qword ptr [rbp - 0x60], rax
0x1ab26:   66 b8 80 07                           	mov ax, 0x780
0x1ab2a:   83 e8 01                              	sub eax, 1
0x1ab2d:   89 45 98                              	mov dword ptr [rbp - 0x68], eax
0x1ab30:   4d 89 ee                              	mov r14, r13
0x1ab33:   49 89 dd                              	mov r13, rbx
0x1ab36:   49 63 c4                              	movsxd rax, r12d
0x1ab39:   48 89 c2                              	mov rdx, rax
0x1ab3c:   48 c1 e2 07                           	shl rdx, 7
0x1ab40:   48 c1 e0 0b                           	shl rax, 0xb
0x1ab44:   48 29 d0                              	sub rax, rdx
0x1ab47:   48 89 c3                              	mov rbx, rax
0x1ab4a:   49 03 9d 00 04 00 00                  	add rbx, qword ptr [r13 + 0x400]
0x1ab51:   48 8d 7b 08                           	lea rdi, [rbx + 8]
0x1ab55:   e8 9c d2 ff ff                        	call 0x17df6 <check_ts_section>
0x1ab5a:   85 c0                                 	test eax, eax
0x1ab5c:   75 0d                                 	jne 0x1ab6b <put_arib_std_b25+0x2cd>
0x1ab5e:   48 89 df                              	mov rdi, rbx
0x1ab61:   e8 7c e1 ff ff                        	call 0x18ce2 <release_program>
0x1ab66:   e9 9c 00 00 00                        	jmp 0x1ac07 <put_arib_std_b25+0x369>
0x1ab6b:   49 63 c7                              	movsxd rax, r15d
0x1ab6e:   48 89 c2                              	mov rdx, rax
0x1ab71:   48 c1 e2 07                           	shl rdx, 7
0x1ab75:   48 c1 e0 0b                           	shl rax, 0xb
0x1ab79:   48 29 d0                              	sub rax, rdx
0x1ab7c:   48 8b 7d a8                           	mov rdi, qword ptr [rbp - 0x58]
0x1ab80:   48 01 c7                              	add rdi, rax
0x1ab83:   48 89 de                              	mov rsi, rbx
0x1ab86:   b8 80 07 00 00                        	mov eax, 0x780
0x1ab8b:   40 f6 c7 01                           	test dil, 1
0x1ab8f:   74 10                                 	je 0x1aba1 <put_arib_std_b25+0x303>
0x1ab91:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x1ab94:   88 07                                 	mov byte ptr [rdi], al
0x1ab96:   48 83 c7 01                           	add rdi, 1
0x1ab9a:   48 83 c6 01                           	add rsi, 1
0x1ab9e:   8b 45 98                              	mov eax, dword ptr [rbp - 0x68]
0x1aba1:   40 f6 c7 02                           	test dil, 2
0x1aba5:   74 11                                 	je 0x1abb8 <put_arib_std_b25+0x31a>
0x1aba7:   0f b7 16                              	movzx edx, word ptr [rsi]
0x1abaa:   66 89 17                              	mov word ptr [rdi], dx
0x1abad:   48 83 c7 02                           	add rdi, 2
0x1abb1:   48 83 c6 02                           	add rsi, 2
0x1abb5:   83 e8 02                              	sub eax, 2
0x1abb8:   40 f6 c7 04                           	test dil, 4
0x1abbc:   74 0f                                 	je 0x1abcd <put_arib_std_b25+0x32f>
0x1abbe:   8b 16                                 	mov edx, dword ptr [rsi]
0x1abc0:   89 17                                 	mov dword ptr [rdi], edx
0x1abc2:   48 83 c7 04                           	add rdi, 4
0x1abc6:   48 83 c6 04                           	add rsi, 4
0x1abca:   83 e8 04                              	sub eax, 4
0x1abcd:   89 c1                                 	mov ecx, eax
0x1abcf:   c1 e9 03                              	shr ecx, 3
0x1abd2:   89 c9                                 	mov ecx, ecx
0x1abd4:   f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0x1abd7:   ba 00 00 00 00                        	mov edx, 0
0x1abdc:   a8 04                                 	test al, 4
0x1abde:   74 08                                 	je 0x1abe8 <put_arib_std_b25+0x34a>
0x1abe0:   8b 16                                 	mov edx, dword ptr [rsi]
0x1abe2:   89 17                                 	mov dword ptr [rdi], edx
0x1abe4:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1abe8:   a8 02                                 	test al, 2
0x1abea:   74 0c                                 	je 0x1abf8 <put_arib_std_b25+0x35a>
0x1abec:   0f b7 0c 16                           	movzx ecx, word ptr [rsi + rdx]
0x1abf0:   66 89 0c 17                           	mov word ptr [rdi + rdx], cx
0x1abf4:   48 83 c2 02                           	add rdx, 2
0x1abf8:   a8 01                                 	test al, 1
0x1abfa:   74 07                                 	je 0x1ac03 <put_arib_std_b25+0x365>
0x1abfc:   0f b6 04 16                           	movzx eax, byte ptr [rsi + rdx]
0x1ac00:   88 04 17                              	mov byte ptr [rdi + rdx], al
0x1ac03:   41 83 c7 01                           	add r15d, 1
0x1ac07:   41 83 c4 01                           	add r12d, 1
0x1ac0b:   45 3b a5 f8 03 00 00                  	cmp r12d, dword ptr [r13 + 0x3f8]
0x1ac12:   0f 8c 1e ff ff ff                     	jl 0x1ab36 <put_arib_std_b25+0x298>
0x1ac18:   4c 89 eb                              	mov rbx, r13
0x1ac1b:   4d 89 f5                              	mov r13, r14
0x1ac1e:   44 89 bb f8 03 00 00                  	mov dword ptr [rbx + 0x3f8], r15d
0x1ac25:   48 8b bb 00 04 00 00                  	mov rdi, qword ptr [rbx + 0x400]
0x1ac2c:   4d 63 ff                              	movsxd r15, r15d
0x1ac2f:   4c 89 f8                              	mov rax, r15
0x1ac32:   48 c1 e0 07                           	shl rax, 7
0x1ac36:   4c 89 fa                              	mov rdx, r15
0x1ac39:   48 c1 e2 0b                           	shl rdx, 0xb
0x1ac3d:   48 29 c2                              	sub rdx, rax
0x1ac40:   48 8b 75 a8                           	mov rsi, qword ptr [rbp - 0x58]
0x1ac44:   e8 1f 3f 02 00                        	call 0x3eb68 <memcpy>
0x1ac49:   48 8b 7d a8                           	mov rdi, qword ptr [rbp - 0x58]
0x1ac4d:   e8 26 3f 02 00                        	call 0x3eb78 <kfree>
0x1ac52:   c7 43 0c 00 00 00 00                  	mov dword ptr [rbx + 0xc], 0
0x1ac59:   48 89 df                              	mov rdi, rbx
0x1ac5c:   e8 ee ed ff ff                        	call 0x19a4f <find_pmt>
0x1ac61:   41 89 c4                              	mov r12d, eax
0x1ac64:   85 c0                                 	test eax, eax
0x1ac66:   0f 88 02 02 00 00                     	js 0x1ae6e <put_arib_std_b25+0x5d0>
0x1ac6c:   c7 43 08 00 00 00 00                  	mov dword ptr [rbx + 8], 0
0x1ac73:   48 89 df                              	mov rdi, rbx
0x1ac76:   e8 09 d6 ff ff                        	call 0x18284 <setup_pid_map>
0x1ac7b:   48 89 df                              	mov rdi, rbx
0x1ac7e:   e8 fb d1 ff ff                        	call 0x17e7e <check_ecm_complete>
0x1ac83:   85 c0                                 	test eax, eax
0x1ac85:   0f 85 cd 01 00 00                     	jne 0x1ae58 <put_arib_std_b25+0x5ba>
0x1ac8b:   8b 43 04                              	mov eax, dword ptr [rbx + 4]
0x1ac8e:   89 45 94                              	mov dword ptr [rbp - 0x6c], eax
0x1ac91:   4c 63 73 08                           	movsxd r14, dword ptr [rbx + 8]
0x1ac95:   4c 03 b3 30 06 01 00                  	add r14, qword ptr [rbx + 0x10630]
0x1ac9c:   48 8b 83 38 06 01 00                  	mov rax, qword ptr [rbx + 0x10638]
0x1aca3:   48 89 45 a0                           	mov qword ptr [rbp - 0x60], rax
0x1aca7:   41 bc 00 00 00 00                     	mov r12d, 0
0x1acad:   48 63 45 94                           	movsxd rax, dword ptr [rbp - 0x6c]
0x1acb1:   48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x1acb5:   4d 89 ef                              	mov r15, r13
0x1acb8:   45 89 e5                              	mov r13d, r12d
0x1acbb:   e9 1e 01 00 00                        	jmp 0x1adde <put_arib_std_b25+0x540>
0x1acc0:   41 80 3e 47                           	cmp byte ptr [r14], 0x47
0x1acc4:   74 1b                                 	je 0x1ace1 <put_arib_std_b25+0x443>
0x1acc6:   8b 55 94                              	mov edx, dword ptr [rbp - 0x6c]
0x1acc9:   48 8b 75 a0                           	mov rsi, qword ptr [rbp - 0x60]
0x1accd:   4c 89 f7                              	mov rdi, r14
0x1acd0:   e8 2f d3 ff ff                        	call 0x18004 <resync>
0x1acd5:   48 85 c0                              	test rax, rax
0x1acd8:   0f 84 16 01 00 00                     	je 0x1adf4 <put_arib_std_b25+0x556>
0x1acde:   49 89 c6                              	mov r14, rax
0x1ace1:   4c 89 f6                              	mov rsi, r14
0x1ace4:   48 8d 7d b0                           	lea rdi, [rbp - 0x50]
0x1ace8:   e8 09 d2 ff ff                        	call 0x17ef6 <extract_ts_header>
0x1aced:   8b 45 c0                              	mov eax, dword ptr [rbp - 0x40]
0x1acf0:   48 63 d0                              	movsxd rdx, eax
0x1acf3:   4c 8b a4 d3 10 04 00 00               	mov r12, qword ptr [rbx + rdx*8 + 0x410]
0x1acfb:   4d 85 e4                              	test r12, r12
0x1acfe:   0f 84 d6 00 00 00                     	je 0x1adda <put_arib_std_b25+0x53c>
0x1ad04:   41 3b 84 24 a0 00 00 00               	cmp eax, dword ptr [r12 + 0xa0]
0x1ad0c:   0f 85 c8 00 00 00                     	jne 0x1adda <put_arib_std_b25+0x53c>
0x1ad12:   49 8d 84 24 a8 00 00 00               	lea rax, [r12 + 0xa8]
0x1ad1a:   48 89 45 88                           	mov qword ptr [rbp - 0x78], rax
0x1ad1e:   48 89 c7                              	mov rdi, rax
0x1ad21:   e8 d0 d0 ff ff                        	call 0x17df6 <check_ts_section>
0x1ad26:   85 c0                                 	test eax, eax
0x1ad28:   0f 85 ac 00 00 00                     	jne 0x1adda <put_arib_std_b25+0x53c>
0x1ad2e:   49 8d 56 04                           	lea rdx, [r14 + 4]
0x1ad32:   f6 45 c8 02                           	test byte ptr [rbp - 0x38], 2
0x1ad36:   74 08                                 	je 0x1ad40 <put_arib_std_b25+0x4a2>
0x1ad38:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x1ad3b:   48 8d 54 02 01                        	lea rdx, [rdx + rax + 1]
0x1ad40:   49 8d 84 24 f0 00 00 00               	lea rax, [r12 + 0xf0]
0x1ad48:   48 89 45 80                           	mov qword ptr [rbp - 0x80], rax
0x1ad4c:   44 89 f1                              	mov ecx, r14d
0x1ad4f:   29 d1                                 	sub ecx, edx
0x1ad51:   81 c1 bc 00 00 00                     	add ecx, 0xbc
0x1ad57:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1ad5b:   48 89 c7                              	mov rdi, rax
0x1ad5e:   e8 3e ec ff ff                        	call 0x199a1 <set_ts_section_data>
0x1ad63:   41 89 c5                              	mov r13d, eax
0x1ad66:   85 c0                                 	test eax, eax
0x1ad68:   0f 88 8d 01 00 00                     	js 0x1aefb
0x1ad6e:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1ad72:   e8 7f d0 ff ff                        	call 0x17df6 <check_ts_section>
0x1ad77:   85 c0                                 	test eax, eax
0x1ad79:   74 5f                                 	je 0x1adda <put_arib_std_b25+0x53c>
0x1ad7b:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1ad7f:   e8 f1 d2 ff ff                        	call 0x18075 <check_ts_section_crc>
0x1ad84:   85 c0                                 	test eax, eax
0x1ad86:   74 0b                                 	je 0x1ad93 <put_arib_std_b25+0x4f5>
0x1ad88:   41 83 bc 24 28 01 00 00 00            	cmp dword ptr [r12 + 0x128], 0
0x1ad91:   75 0f                                 	jne 0x1ada2 <put_arib_std_b25+0x504>
0x1ad93:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1ad97:   e8 a8 d4 ff ff                        	call 0x18244 <reset_ts_section>
0x1ad9c:   4c 03 75 a8                           	add r14, qword ptr [rbp - 0x58]
0x1ada0:   eb 3c                                 	jmp 0x1adde <put_arib_std_b25+0x540>
0x1ada2:   48 8b 75 80                           	mov rsi, qword ptr [rbp - 0x80]
0x1ada6:   48 8b 7d 88                           	mov rdi, qword ptr [rbp - 0x78]
0x1adaa:   e8 cc d8 ff ff                        	call 0x1867b <swap_ts_section>
0x1adaf:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1adb3:   e8 8c d4 ff ff                        	call 0x18244 <reset_ts_section>
0x1adb8:   48 89 df                              	mov rdi, rbx
0x1adbb:   e8 be d0 ff ff                        	call 0x17e7e <check_ecm_complete>
0x1adc0:   85 c0                                 	test eax, eax
0x1adc2:   74 16                                 	je 0x1adda <put_arib_std_b25+0x53c>
0x1adc4:   4d 89 fd                              	mov r13, r15
0x1adc7:   48 8b 45 98                           	mov rax, qword ptr [rbp - 0x68]
0x1adcb:   49 8d 04 06                           	lea rax, [r14 + rax]
0x1adcf:   2b 83 30 06 01 00                     	sub eax, dword ptr [rbx + 0x10630]
0x1add5:   89 43 08                              	mov dword ptr [rbx + 8], eax
0x1add8:   eb 30                                 	jmp 0x1ae0a <put_arib_std_b25+0x56c>
0x1adda:   4c 03 75 a8                           	add r14, qword ptr [rbp - 0x58]
0x1adde:   48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0x1ade2:   48 89 45 98                           	mov qword ptr [rbp - 0x68], rax
0x1ade6:   49 8d 04 06                           	lea rax, [r14 + rax]
0x1adea:   48 39 45 a0                           	cmp qword ptr [rbp - 0x60], rax
0x1adee:   0f 83 cc fe ff ff                     	jae 0x1acc0 <put_arib_std_b25+0x422>
0x1adf4:   45 89 ec                              	mov r12d, r13d
0x1adf7:   4d 89 fd                              	mov r13, r15
0x1adfa:   44 2b b3 30 06 01 00                  	sub r14d, dword ptr [rbx + 0x10630]
0x1ae01:   44 89 73 08                           	mov dword ptr [rbx + 8], r14d
0x1ae05:   45 85 e4                              	test r12d, r12d
0x1ae08:   78 64                                 	js 0x1ae6e <put_arib_std_b25+0x5d0>
0x1ae0a:   48 89 df                              	mov rdi, rbx
0x1ae0d:   e8 6c d0 ff ff                        	call 0x17e7e <check_ecm_complete>
0x1ae12:   85 c0                                 	test eax, eax
0x1ae14:   75 33                                 	jne 0x1ae49 <put_arib_std_b25+0x5ab>
0x1ae16:   8b 43 08                              	mov eax, dword ptr [rbx + 8]
0x1ae19:   41 bc fa ff ff ff                     	mov r12d, 0xfffffffa
0x1ae1f:   3d ff ff ff 01                        	cmp eax, 0x1ffffff
0x1ae24:   7f 48                                 	jg 0x1ae6e <put_arib_std_b25+0x5d0>
0x1ae26:   03 43 10                              	add eax, dword ptr [rbx + 0x10]
0x1ae29:   89 43 10                              	mov dword ptr [rbx + 0x10], eax
0x1ae2c:   3d 00 00 10 00                        	cmp eax, 0x100000
0x1ae31:   7e 35                                 	jle 0x1ae68 <put_arib_std_b25+0x5ca>
0x1ae33:   c7 43 10 00 00 00 00                  	mov dword ptr [rbx + 0x10], 0
0x1ae3a:   c6 83 72 06 01 00 01                  	mov byte ptr [rbx + 0x10672], 1
0x1ae41:   41 bc 00 00 00 00                     	mov r12d, 0
0x1ae47:   eb 25                                 	jmp 0x1ae6e <put_arib_std_b25+0x5d0>
0x1ae49:   c7 43 08 00 00 00 00                  	mov dword ptr [rbx + 8], 0
0x1ae50:   48 89 df                              	mov rdi, rbx
0x1ae53:   e8 ea e3 ff ff                        	call 0x19242 <setup_multi2>
0x1ae58:   4c 89 ee                              	mov rsi, r13
0x1ae5b:   48 89 df                              	mov rdi, rbx
0x1ae5e:   e8 12 ee ff ff                        	call 0x19c75 <proc_arib_std_b25>
0x1ae63:   41 89 c4                              	mov r12d, eax
0x1ae66:   eb 7a                                 	jmp 0x1aee2
0x1ae68:   41 bc 00 00 00 00                     	mov r12d, 0
0x1ae6e:   c7 43 08 00 00 00 00                  	mov dword ptr [rbx + 8], 0
0x1ae75:   4c 8b ab 38 06 01 00                  	mov r13, qword ptr [rbx + 0x10638]
0x1ae7c:   44 2b ab 30 06 01 00                  	sub r13d, dword ptr [rbx + 0x10630]
0x1ae83:   4c 8d b3 48 06 01 00                  	lea r14, [rbx + 0x10648]
0x1ae8a:   48 8b b3 58 06 01 00                  	mov rsi, qword ptr [rbx + 0x10658]
0x1ae91:   2b b3 50 06 01 00                     	sub esi, dword ptr [rbx + 0x10650]
0x1ae97:   41 8d 74 35 00                        	lea esi, [r13 + rsi]
0x1ae9c:   4c 89 f7                              	mov rdi, r14
0x1ae9f:   e8 a4 e9 ff ff                        	call 0x19848 <reserve_work_buffer>
0x1aea4:   85 c0                                 	test eax, eax
0x1aea6:   74 34                                 	je 0x1aedc <put_arib_std_b25+0x63c>
0x1aea8:   48 8b b3 30 06 01 00                  	mov rsi, qword ptr [rbx + 0x10630]
0x1aeaf:   44 89 ea                              	mov edx, r13d
0x1aeb2:   4c 89 f7                              	mov rdi, r14
0x1aeb5:   e8 76 ea ff ff                        	call 0x19930 <append_work_buffer>
0x1aeba:   85 c0                                 	test eax, eax
0x1aebc:   b8 fe ff ff ff                        	mov eax, 0xfffffffe
0x1aec1:   44 0f 44 e0                           	cmove r12d, eax
0x1aec5:   48 8b 83 28 06 01 00                  	mov rax, qword ptr [rbx + 0x10628]
0x1aecc:   48 89 83 38 06 01 00                  	mov qword ptr [rbx + 0x10638], rax
0x1aed3:   48 89 83 30 06 01 00                  	mov qword ptr [rbx + 0x10630], rax
0x1aeda:   eb 06                                 	jmp 0x1aee2
; data inside code section at 0x1aedc -- 0x1aede
0x1aedc:   41 bc                                              |A.              |
; function: flush_arib_std_b25 at 0x1aede -- 0x1af0e
; function: flush_arib_std_b25 at 0x1af0e -- 0x1b9a5
0x1af0e:   55                                    	push rbp
0x1af0f:   48 89 e5                              	mov rbp, rsp
0x1af12:   41 57                                 	push r15
0x1af14:   41 56                                 	push r14
0x1af16:   41 55                                 	push r13
0x1af18:   41 54                                 	push r12
0x1af1a:   53                                    	push rbx
0x1af1b:   48 81 ec c8 00 00 00                  	sub rsp, 0xc8
0x1af22:   e8 c9 3c 02 00                        	call 0x3ebf0 <mcount>
0x1af27:   48 89 fb                              	mov rbx, rdi
0x1af2a:   e8 31 cb ff ff                        	call 0x17a60 <private_data>
0x1af2f:   49 89 c5                              	mov r13, rax
0x1af32:   41 be ff ff ff ff                     	mov r14d, 0xffffffff
0x1af38:   48 85 c0                              	test rax, rax
0x1af3b:   0f 84 7f 0a 00 00                     	je 0x1b9c0
0x1af41:   48 89 de                              	mov rsi, rbx
0x1af44:   48 89 c7                              	mov rdi, rax
0x1af47:   e8 29 ed ff ff                        	call 0x19c75 <proc_arib_std_b25>
0x1af4c:   41 89 c6                              	mov r14d, eax
0x1af4f:   85 c0                                 	test eax, eax
0x1af51:   0f 88 69 0a 00 00                     	js 0x1b9c0
0x1af57:   41 81 7d 04 bb 00 00 00               	cmp dword ptr [r13 + 4], 0xbb
0x1af5f:   7f 13                                 	jg 0x1af74 <flush_arib_std_b25+0x66>
0x1af61:   4c 89 ef                              	mov rdi, r13
0x1af64:   e8 65 d1 ff ff                        	call 0x180ce <select_unit_size>
0x1af69:   41 89 c6                              	mov r14d, eax
0x1af6c:   85 c0                                 	test eax, eax
0x1af6e:   0f 88 4c 0a 00 00                     	js 0x1b9c0
0x1af74:   41 8b 45 04                           	mov eax, dword ptr [r13 + 4]
0x1af78:   89 85 6c ff ff ff                     	mov dword ptr [rbp - 0x94], eax
0x1af7e:   4d 8b a5 30 06 01 00                  	mov r12, qword ptr [r13 + 0x10630]
0x1af85:   49 8b 95 38 06 01 00                  	mov rdx, qword ptr [r13 + 0x10638]
0x1af8c:   48 89 55 88                           	mov qword ptr [rbp - 0x78], rdx
0x1af90:   89 95 5c ff ff ff                     	mov dword ptr [rbp - 0xa4], edx
0x1af96:   44 29 e2                              	sub edx, r12d
0x1af99:   89 55 98                              	mov dword ptr [rbp - 0x68], edx
0x1af9c:   49 8d 85 48 06 01 00                  	lea rax, [r13 + 0x10648]
0x1afa3:   48 89 85 60 ff ff ff                  	mov qword ptr [rbp - 0xa0], rax
0x1afaa:   49 8b b5 58 06 01 00                  	mov rsi, qword ptr [r13 + 0x10658]
0x1afb1:   41 2b b5 50 06 01 00                  	sub esi, dword ptr [r13 + 0x10650]
0x1afb8:   01 d6                                 	add esi, edx
0x1afba:   48 89 c7                              	mov rdi, rax
0x1afbd:   e8 86 e8 ff ff                        	call 0x19848 <reserve_work_buffer>
0x1afc2:   41 be fe ff ff ff                     	mov r14d, 0xfffffffe
0x1afc8:   85 c0                                 	test eax, eax
0x1afca:   0f 84 f0 09 00 00                     	je 0x1b9c0
0x1afd0:   49 8d 95 a8 02 00 00                  	lea rdx, [r13 + 0x2a8]
0x1afd7:   48 89 95 70 ff ff ff                  	mov qword ptr [rbp - 0x90], rdx
0x1afde:   49 8d 85 60 02 00 00                  	lea rax, [r13 + 0x260]
0x1afe5:   48 89 85 20 ff ff ff                  	mov qword ptr [rbp - 0xe0], rax
0x1afec:   49 8d 95 f0 00 00 00                  	lea rdx, [r13 + 0xf0]
0x1aff3:   48 89 95 38 ff ff ff                  	mov qword ptr [rbp - 0xc8], rdx
0x1affa:   49 8d 85 a8 00 00 00                  	lea rax, [r13 + 0xa8]
0x1b001:   48 89 85 10 ff ff ff                  	mov qword ptr [rbp - 0xf0], rax
0x1b008:   49 8d 95 80 01 00 00                  	lea rdx, [r13 + 0x180]
0x1b00f:   48 89 95 78 ff ff ff                  	mov qword ptr [rbp - 0x88], rdx
0x1b016:   49 8d 85 38 01 00 00                  	lea rax, [r13 + 0x138]
0x1b01d:   48 89 85 28 ff ff ff                  	mov qword ptr [rbp - 0xd8], rax
0x1b024:   49 8d 95 10 02 00 00                  	lea rdx, [r13 + 0x210]
0x1b02b:   48 89 55 80                           	mov qword ptr [rbp - 0x80], rdx
0x1b02f:   49 8d 85 c8 01 00 00                  	lea rax, [r13 + 0x1c8]
0x1b036:   48 89 85 30 ff ff ff                  	mov qword ptr [rbp - 0xd0], rax
0x1b03d:   49 8d 55 60                           	lea rdx, [r13 + 0x60]
0x1b041:   48 89 95 40 ff ff ff                  	mov qword ptr [rbp - 0xc0], rdx
0x1b048:   49 8d 45 18                           	lea rax, [r13 + 0x18]
0x1b04c:   48 89 85 18 ff ff ff                  	mov qword ptr [rbp - 0xe8], rax
0x1b053:   41 be 00 00 00 00                     	mov r14d, 0
0x1b059:   4c 8b 7d 88                           	mov r15, qword ptr [rbp - 0x78]
0x1b05d:   49 81 ef bc 00 00 00                  	sub r15, 0xbc
0x1b064:   48 63 95 6c ff ff ff                  	movsxd rdx, dword ptr [rbp - 0x94]
0x1b06b:   48 89 55 90                           	mov qword ptr [rbp - 0x70], rdx
0x1b06f:   48 83 c2 01                           	add rdx, 1
0x1b073:   48 89 95 50 ff ff ff                  	mov qword ptr [rbp - 0xb0], rdx
0x1b07a:   8b 9d 6c ff ff ff                     	mov ebx, dword ptr [rbp - 0x94]
0x1b080:   89 d8                                 	mov eax, ebx
0x1b082:   01 c0                                 	add eax, eax
0x1b084:   89 85 4c ff ff ff                     	mov dword ptr [rbp - 0xb4], eax
0x1b08a:   44 89 75 9c                           	mov dword ptr [rbp - 0x64], r14d
0x1b08e:   e9 66 08 00 00                        	jmp 0x1b8f9 <flush_arib_std_b25+0x9eb>
0x1b093:   41 80 3c 24 47                        	cmp byte ptr [r12], 0x47
0x1b098:   0f 84 a1 00 00 00                     	je 0x1b13f <flush_arib_std_b25+0x231>
0x1b09e:   4d 39 fc                              	cmp r12, r15
0x1b0a1:   0f 87 6a 08 00 00                     	ja 0x1b911 <flush_arib_std_b25+0xa03>
0x1b0a7:   48 8b bd 50 ff ff ff                  	mov rdi, qword ptr [rbp - 0xb0]
0x1b0ae:   49 8d 3c 3c                           	lea rdi, [r12 + rdi]
0x1b0b2:   49 8d 74 24 01                        	lea rsi, [r12 + 1]
0x1b0b7:   8b 95 5c ff ff ff                     	mov edx, dword ptr [rbp - 0xa4]
0x1b0bd:   29 f2                                 	sub edx, esi
0x1b0bf:   89 d6                                 	mov esi, edx
0x1b0c1:   4c 89 e1                              	mov rcx, r12
0x1b0c4:   44 8b 85 6c ff ff ff                  	mov r8d, dword ptr [rbp - 0x94]
0x1b0cb:   44 8b 8d 4c ff ff ff                  	mov r9d, dword ptr [rbp - 0xb4]
0x1b0d2:   eb 4d                                 	jmp 0x1b121 <flush_arib_std_b25+0x213>
0x1b0d4:   80 39 47                              	cmp byte ptr [rcx], 0x47
0x1b0d7:   75 41                                 	jne 0x1b11a <flush_arib_std_b25+0x20c>
0x1b0d9:   89 f2                                 	mov edx, esi
0x1b0db:   89 f0                                 	mov eax, esi
0x1b0dd:   c1 fa 1f                              	sar edx, 0x1f
0x1b0e0:   41 f7 f8                              	idiv r8d
0x1b0e3:   85 c0                                 	test eax, eax
0x1b0e5:   74 4c                                 	je 0x1b133 <flush_arib_std_b25+0x225>
0x1b0e7:   83 f8 01                              	cmp eax, 1
0x1b0ea:   7e 25                                 	jle 0x1b111 <flush_arib_std_b25+0x203>
0x1b0ec:   45 89 ca                              	mov r10d, r9d
0x1b0ef:   ba 01 00 00 00                        	mov edx, 1
0x1b0f4:   80 3f 47                              	cmp byte ptr [rdi], 0x47
0x1b0f7:   74 0f                                 	je 0x1b108 <flush_arib_std_b25+0x1fa>
0x1b0f9:   eb 16                                 	jmp 0x1b111 <flush_arib_std_b25+0x203>
0x1b0fb:   4d 63 da                              	movsxd r11, r10d
0x1b0fe:   41 01 da                              	add r10d, ebx
0x1b101:   42 80 3c 19 47                        	cmp byte ptr [rcx + r11], 0x47
0x1b106:   75 0e                                 	jne 0x1b116 <flush_arib_std_b25+0x208>
0x1b108:   83 c2 01                              	add edx, 1
0x1b10b:   39 d0                                 	cmp eax, edx
0x1b10d:   7f ec                                 	jg 0x1b0fb <flush_arib_std_b25+0x1ed>
0x1b10f:   eb 05                                 	jmp 0x1b116 <flush_arib_std_b25+0x208>
0x1b111:   ba 01 00 00 00                        	mov edx, 1
0x1b116:   39 d0                                 	cmp eax, edx
0x1b118:   74 19                                 	je 0x1b133 <flush_arib_std_b25+0x225>
0x1b11a:   48 83 c7 01                           	add rdi, 1
0x1b11e:   83 ee 01                              	sub esi, 1
0x1b121:   48 83 c1 01                           	add rcx, 1
0x1b125:   49 39 cf                              	cmp r15, rcx
0x1b128:   73 aa                                 	jae 0x1b0d4 <flush_arib_std_b25+0x1c6>
0x1b12a:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b12e:   e9 24 08 00 00                        	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b133:   48 85 c9                              	test rcx, rcx
0x1b136:   0f 84 db 07 00 00                     	je 0x1b917 <flush_arib_std_b25+0xa09>
0x1b13c:   49 89 cc                              	mov r12, rcx
0x1b13f:   4c 89 e6                              	mov rsi, r12
0x1b142:   48 8d 7d b0                           	lea rdi, [rbp - 0x50]
0x1b146:   e8 ab cd ff ff                        	call 0x17ef6 <extract_ts_header>
0x1b14b:   8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x1b14e:   44 8b 75 c0                           	mov r14d, dword ptr [rbp - 0x40]
0x1b152:   44 89 f0                              	mov eax, r14d
0x1b155:   49 8b 84 c5 10 04 00 00               	mov rax, qword ptr [r13 + rax*8 + 0x410]
0x1b15d:   48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x1b161:   48 85 c0                              	test rax, rax
0x1b164:   75 0b                                 	jne 0x1b171 <flush_arib_std_b25+0x263>
0x1b166:   49 8b 85 00 04 00 00                  	mov rax, qword ptr [r13 + 0x400]
0x1b16d:   48 89 45 a8                           	mov qword ptr [rbp - 0x58], rax
0x1b171:   49 8d 54 24 04                        	lea rdx, [r12 + 4]
0x1b176:   48 89 55 a0                           	mov qword ptr [rbp - 0x60], rdx
0x1b17a:   8b 45 c8                              	mov eax, dword ptr [rbp - 0x38]
0x1b17d:   a8 01                                 	test al, 1
0x1b17f:   74 54                                 	je 0x1b1d5 <flush_arib_std_b25+0x2c7>
0x1b181:   a8 02                                 	test al, 2
0x1b183:   74 0c                                 	je 0x1b191 <flush_arib_std_b25+0x283>
0x1b185:   0f b6 02                              	movzx eax, byte ptr [rdx]
0x1b188:   48 8d 54 02 01                        	lea rdx, [rdx + rax + 1]
0x1b18d:   48 89 55 a0                           	mov qword ptr [rbp - 0x60], rdx
0x1b191:   44 89 e0                              	mov eax, r12d
0x1b194:   2b 45 a0                              	sub eax, dword ptr [rbp - 0x60]
0x1b197:   05 bc 00 00 00                        	add eax, 0xbc
0x1b19c:   89 45 98                              	mov dword ptr [rbp - 0x68], eax
0x1b19f:   85 f6                                 	test esi, esi
0x1b1a1:   74 32                                 	je 0x1b1d5 <flush_arib_std_b25+0x2c7>
0x1b1a3:   48 8b 55 a8                           	mov rdx, qword ptr [rbp - 0x58]
0x1b1a7:   48 8b 82 48 01 00 00                  	mov rax, qword ptr [rdx + 0x148]
0x1b1ae:   48 85 c0                              	test rax, rax
0x1b1b1:   74 22                                 	je 0x1b1d5 <flush_arib_std_b25+0x2c7>
0x1b1b3:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b1b6:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b1ba:   48 89 c7                              	mov rdi, rax
0x1b1bd:   ff 50 48                              	call qword ptr [rax + 0x48]
0x1b1c0:   85 c0                                 	test eax, eax
0x1b1c2:   79 0b                                 	jns 0x1b1cf <flush_arib_std_b25+0x2c1>
0x1b1c4:   41 be f6 ff ff ff                     	mov r14d, 0xfffffff6
0x1b1ca:   e9 88 07 00 00                        	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b1cf:   41 80 64 24 03 3f                     	and byte ptr [r12 + 3], 0x3f
0x1b1d5:   ba bc 00 00 00                        	mov edx, 0xbc
0x1b1da:   4c 89 e6                              	mov rsi, r12
0x1b1dd:   48 8b bd 60 ff ff ff                  	mov rdi, qword ptr [rbp - 0xa0]
0x1b1e4:   e8 47 e7 ff ff                        	call 0x19930 <append_work_buffer>
0x1b1e9:   85 c0                                 	test eax, eax
0x1b1eb:   75 0b                                 	jne 0x1b1f8 <flush_arib_std_b25+0x2ea>
0x1b1ed:   41 be fe ff ff ff                     	mov r14d, 0xfffffffe
0x1b1f3:   e9 5f 07 00 00                        	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b1f8:   48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0x1b1fc:   44 39 b0 a0 00 00 00                  	cmp dword ptr [rax + 0xa0], r14d
0x1b203:   0f 85 b3 00 00 00                     	jne 0x1b2bc <flush_arib_std_b25+0x3ae>
0x1b209:   49 89 c6                              	mov r14, rax
0x1b20c:   49 81 c6 f0 00 00 00                  	add r14, 0xf0
0x1b213:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b216:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b21a:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1b21e:   4c 89 f7                              	mov rdi, r14
0x1b221:   e8 7b e7 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1b226:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b229:   85 c0                                 	test eax, eax
0x1b22b:   0f 88 ec 06 00 00                     	js 0x1b91d <flush_arib_std_b25+0xa0f>
0x1b231:   4c 89 f7                              	mov rdi, r14
0x1b234:   e8 bd cb ff ff                        	call 0x17df6 <check_ts_section>
0x1b239:   85 c0                                 	test eax, eax
0x1b23b:   0f 84 b4 06 00 00                     	je 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b241:   4c 89 f7                              	mov rdi, r14
0x1b244:   e8 2c ce ff ff                        	call 0x18075 <check_ts_section_crc>
0x1b249:   85 c0                                 	test eax, eax
0x1b24b:   74 27                                 	je 0x1b274 <flush_arib_std_b25+0x366>
0x1b24d:   48 8b 55 a8                           	mov rdx, qword ptr [rbp - 0x58]
0x1b251:   83 ba 28 01 00 00 00                  	cmp dword ptr [rdx + 0x128], 0
0x1b258:   74 1a                                 	je 0x1b274 <flush_arib_std_b25+0x366>
0x1b25a:   48 81 c2 a8 00 00 00                  	add rdx, 0xa8
0x1b261:   48 89 55 a0                           	mov qword ptr [rbp - 0x60], rdx
0x1b265:   4c 89 f6                              	mov rsi, r14
0x1b268:   48 89 d7                              	mov rdi, rdx
0x1b26b:   e8 54 e2 ff ff                        	call 0x194c4 <compare_ts_section>
0x1b270:   85 c0                                 	test eax, eax
0x1b272:   75 11                                 	jne 0x1b285 <flush_arib_std_b25+0x377>
0x1b274:   4c 89 f7                              	mov rdi, r14
0x1b277:   e8 c8 cf ff ff                        	call 0x18244 <reset_ts_section>
0x1b27c:   4c 03 65 90                           	add r12, qword ptr [rbp - 0x70]
0x1b280:   e9 74 06 00 00                        	jmp 0x1b8f9 <flush_arib_std_b25+0x9eb>
0x1b285:   4c 89 f6                              	mov rsi, r14
0x1b288:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x1b28c:   e8 ea d3 ff ff                        	call 0x1867b <swap_ts_section>
0x1b291:   4c 89 f7                              	mov rdi, r14
0x1b294:   e8 ab cf ff ff                        	call 0x18244 <reset_ts_section>
0x1b299:   49 8b b5 18 06 01 00                  	mov rsi, qword ptr [r13 + 0x10618]
0x1b2a0:   48 8b 7d a8                           	mov rdi, qword ptr [rbp - 0x58]
0x1b2a4:   e8 30 e1 ff ff                        	call 0x193d9 <proc_ecm>
0x1b2a9:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b2ac:   85 c0                                 	test eax, eax
0x1b2ae:   0f 89 41 06 00 00                     	jns 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b2b4:   41 89 c6                              	mov r14d, eax
0x1b2b7:   e9 9b 06 00 00                        	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b2bc:   48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0x1b2c0:   44 39 30                              	cmp dword ptr [rax], r14d
0x1b2c3:   0f 85 b9 00 00 00                     	jne 0x1b382 <flush_arib_std_b25+0x474>
0x1b2c9:   49 89 c6                              	mov r14, rax
0x1b2cc:   49 83 c6 50                           	add r14, 0x50
0x1b2d0:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b2d3:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b2d7:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1b2db:   4c 89 f7                              	mov rdi, r14
0x1b2de:   e8 be e6 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1b2e3:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b2e6:   85 c0                                 	test eax, eax
0x1b2e8:   0f 88 35 06 00 00                     	js 0x1b923 <flush_arib_std_b25+0xa15>
0x1b2ee:   4c 89 f7                              	mov rdi, r14
0x1b2f1:   e8 00 cb ff ff                        	call 0x17df6 <check_ts_section>
0x1b2f6:   85 c0                                 	test eax, eax
0x1b2f8:   0f 84 f7 05 00 00                     	je 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b2fe:   4c 89 f7                              	mov rdi, r14
0x1b301:   e8 6f cd ff ff                        	call 0x18075 <check_ts_section_crc>
0x1b306:   85 c0                                 	test eax, eax
0x1b308:   74 24                                 	je 0x1b32e <flush_arib_std_b25+0x420>
0x1b30a:   48 8b 55 a8                           	mov rdx, qword ptr [rbp - 0x58]
0x1b30e:   83 ba 88 00 00 00 00                  	cmp dword ptr [rdx + 0x88], 0
0x1b315:   74 17                                 	je 0x1b32e <flush_arib_std_b25+0x420>
0x1b317:   48 83 c2 08                           	add rdx, 8
0x1b31b:   48 89 55 a0                           	mov qword ptr [rbp - 0x60], rdx
0x1b31f:   4c 89 f6                              	mov rsi, r14
0x1b322:   48 89 d7                              	mov rdi, rdx
0x1b325:   e8 9a e1 ff ff                        	call 0x194c4 <compare_ts_section>
0x1b32a:   85 c0                                 	test eax, eax
0x1b32c:   75 11                                 	jne 0x1b33f <flush_arib_std_b25+0x431>
0x1b32e:   4c 89 f7                              	mov rdi, r14
0x1b331:   e8 0e cf ff ff                        	call 0x18244 <reset_ts_section>
0x1b336:   4c 03 65 90                           	add r12, qword ptr [rbp - 0x70]
0x1b33a:   e9 ba 05 00 00                        	jmp 0x1b8f9 <flush_arib_std_b25+0x9eb>
0x1b33f:   4c 89 e3                              	mov rbx, r12
0x1b342:   4c 89 f6                              	mov rsi, r14
0x1b345:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x1b349:   e8 2d d3 ff ff                        	call 0x1867b <swap_ts_section>
0x1b34e:   4c 89 f7                              	mov rdi, r14
0x1b351:   e8 ee ce ff ff                        	call 0x18244 <reset_ts_section>
0x1b356:   48 8b 7d a8                           	mov rdi, qword ptr [rbp - 0x58]
0x1b35a:   e8 fe d9 ff ff                        	call 0x18d5d <proc_pmt>
0x1b35f:   41 89 c6                              	mov r14d, eax
0x1b362:   85 c0                                 	test eax, eax
0x1b364:   0f 88 ed 05 00 00                     	js 0x1b957 <flush_arib_std_b25+0xa49>
0x1b36a:   4c 89 ef                              	mov rdi, r13
0x1b36d:   e8 12 cf ff ff                        	call 0x18284 <setup_pid_map>
0x1b372:   4c 63 a5 6c ff ff ff                  	movsxd r12, dword ptr [rbp - 0x94]
0x1b379:   4e 8d 24 23                           	lea r12, [rbx + r12]
0x1b37d:   e9 d5 05 00 00                        	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b382:   45 39 b5 58 02 00 00                  	cmp dword ptr [r13 + 0x258], r14d
0x1b389:   0f 85 60 01 00 00                     	jne 0x1b4ef <flush_arib_std_b25+0x5e1>
0x1b38f:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b392:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b396:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1b39a:   48 8b bd 70 ff ff ff                  	mov rdi, qword ptr [rbp - 0x90]
0x1b3a1:   e8 5a e8 ff ff                        	call 0x19c00 <set_ts_section_data_for_remaining_payload_data>
0x1b3a6:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b3a9:   48 8b bd 70 ff ff ff                  	mov rdi, qword ptr [rbp - 0x90]
0x1b3b0:   e8 41 ca ff ff                        	call 0x17df6 <check_ts_section>
0x1b3b5:   85 c0                                 	test eax, eax
0x1b3b7:   74 7d                                 	je 0x1b436 <flush_arib_std_b25+0x528>
0x1b3b9:   48 8b bd 70 ff ff ff                  	mov rdi, qword ptr [rbp - 0x90]
0x1b3c0:   e8 b0 cc ff ff                        	call 0x18075 <check_ts_section_crc>
0x1b3c5:   85 c0                                 	test eax, eax
0x1b3c7:   74 21                                 	je 0x1b3ea <flush_arib_std_b25+0x4dc>
0x1b3c9:   41 83 bd e0 02 00 00 00               	cmp dword ptr [r13 + 0x2e0], 0
0x1b3d1:   74 17                                 	je 0x1b3ea <flush_arib_std_b25+0x4dc>
0x1b3d3:   48 8b b5 70 ff ff ff                  	mov rsi, qword ptr [rbp - 0x90]
0x1b3da:   48 8b bd 20 ff ff ff                  	mov rdi, qword ptr [rbp - 0xe0]
0x1b3e1:   e8 de e0 ff ff                        	call 0x194c4 <compare_ts_section>
0x1b3e6:   85 c0                                 	test eax, eax
0x1b3e8:   75 0e                                 	jne 0x1b3f8 <flush_arib_std_b25+0x4ea>
0x1b3ea:   48 8b bd 70 ff ff ff                  	mov rdi, qword ptr [rbp - 0x90]
0x1b3f1:   e8 4e ce ff ff                        	call 0x18244 <reset_ts_section>
0x1b3f6:   eb 3e                                 	jmp 0x1b436 <flush_arib_std_b25+0x528>
0x1b3f8:   48 8b b5 70 ff ff ff                  	mov rsi, qword ptr [rbp - 0x90]
0x1b3ff:   48 8b bd 20 ff ff ff                  	mov rdi, qword ptr [rbp - 0xe0]
0x1b406:   e8 70 d2 ff ff                        	call 0x1867b <swap_ts_section>
0x1b40b:   48 8b bd 70 ff ff ff                  	mov rdi, qword ptr [rbp - 0x90]
0x1b412:   e8 2d ce ff ff                        	call 0x18244 <reset_ts_section>
0x1b417:   41 81 bd 80 02 00 00 84 00 00 00      	cmp dword ptr [r13 + 0x280], 0x84
0x1b422:   75 12                                 	jne 0x1b436 <flush_arib_std_b25+0x528>
0x1b424:   4c 89 ef                              	mov rdi, r13
0x1b427:   e8 3e d3 ff ff                        	call 0x1876a <proc_emm>
0x1b42c:   83 7d 9c 00                           	cmp dword ptr [rbp - 0x64], 0
0x1b430:   0f 88 f3 04 00 00                     	js 0x1b929 <flush_arib_std_b25+0xa1b>
0x1b436:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b439:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b43d:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1b441:   48 8b bd 70 ff ff ff                  	mov rdi, qword ptr [rbp - 0x90]
0x1b448:   e8 54 e5 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1b44d:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b450:   85 c0                                 	test eax, eax
0x1b452:   0f 88 d7 04 00 00                     	js 0x1b92f <flush_arib_std_b25+0xa21>
0x1b458:   48 8b bd 70 ff ff ff                  	mov rdi, qword ptr [rbp - 0x90]
0x1b45f:   e8 92 c9 ff ff                        	call 0x17df6 <check_ts_section>
0x1b464:   85 c0                                 	test eax, eax
0x1b466:   0f 84 89 04 00 00                     	je 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b46c:   48 8b bd 70 ff ff ff                  	mov rdi, qword ptr [rbp - 0x90]
0x1b473:   e8 fd cb ff ff                        	call 0x18075 <check_ts_section_crc>
0x1b478:   85 c0                                 	test eax, eax
0x1b47a:   74 21                                 	je 0x1b49d <flush_arib_std_b25+0x58f>
0x1b47c:   41 83 bd e0 02 00 00 00               	cmp dword ptr [r13 + 0x2e0], 0
0x1b484:   74 17                                 	je 0x1b49d <flush_arib_std_b25+0x58f>
0x1b486:   48 8b b5 70 ff ff ff                  	mov rsi, qword ptr [rbp - 0x90]
0x1b48d:   48 8b bd 20 ff ff ff                  	mov rdi, qword ptr [rbp - 0xe0]
0x1b494:   e8 2b e0 ff ff                        	call 0x194c4 <compare_ts_section>
0x1b499:   85 c0                                 	test eax, eax
0x1b49b:   75 15                                 	jne 0x1b4b2 <flush_arib_std_b25+0x5a4>
0x1b49d:   48 8b bd 70 ff ff ff                  	mov rdi, qword ptr [rbp - 0x90]
0x1b4a4:   e8 9b cd ff ff                        	call 0x18244 <reset_ts_section>
0x1b4a9:   4c 03 65 90                           	add r12, qword ptr [rbp - 0x70]
0x1b4ad:   e9 47 04 00 00                        	jmp 0x1b8f9 <flush_arib_std_b25+0x9eb>
0x1b4b2:   48 8b b5 70 ff ff ff                  	mov rsi, qword ptr [rbp - 0x90]
0x1b4b9:   48 8b bd 20 ff ff ff                  	mov rdi, qword ptr [rbp - 0xe0]
0x1b4c0:   e8 b6 d1 ff ff                        	call 0x1867b <swap_ts_section>
0x1b4c5:   48 8b bd 70 ff ff ff                  	mov rdi, qword ptr [rbp - 0x90]
0x1b4cc:   e8 73 cd ff ff                        	call 0x18244 <reset_ts_section>
0x1b4d1:   41 81 bd 80 02 00 00 84 00 00 00      	cmp dword ptr [r13 + 0x280], 0x84
0x1b4dc:   0f 85 13 04 00 00                     	jne 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b4e2:   4c 89 ef                              	mov rdi, r13
0x1b4e5:   e8 80 d2 ff ff                        	call 0x1876a <proc_emm>
0x1b4ea:   e9 06 04 00 00                        	jmp 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b4ef:   41 83 fe 01                           	cmp r14d, 1
0x1b4f3:   0f 85 b6 00 00 00                     	jne 0x1b5af <flush_arib_std_b25+0x6a1>
0x1b4f9:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b4fc:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b500:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1b504:   48 8b bd 38 ff ff ff                  	mov rdi, qword ptr [rbp - 0xc8]
0x1b50b:   e8 91 e4 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1b510:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b513:   85 c0                                 	test eax, eax
0x1b515:   0f 88 1a 04 00 00                     	js 0x1b935 <flush_arib_std_b25+0xa27>
0x1b51b:   48 8b bd 38 ff ff ff                  	mov rdi, qword ptr [rbp - 0xc8]
0x1b522:   e8 cf c8 ff ff                        	call 0x17df6 <check_ts_section>
0x1b527:   85 c0                                 	test eax, eax
0x1b529:   0f 84 c6 03 00 00                     	je 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b52f:   48 8b bd 38 ff ff ff                  	mov rdi, qword ptr [rbp - 0xc8]
0x1b536:   e8 3a cb ff ff                        	call 0x18075 <check_ts_section_crc>
0x1b53b:   85 c0                                 	test eax, eax
0x1b53d:   74 21                                 	je 0x1b560 <flush_arib_std_b25+0x652>
0x1b53f:   41 83 bd 28 01 00 00 00               	cmp dword ptr [r13 + 0x128], 0
0x1b547:   74 17                                 	je 0x1b560 <flush_arib_std_b25+0x652>
0x1b549:   48 8b b5 38 ff ff ff                  	mov rsi, qword ptr [rbp - 0xc8]
0x1b550:   48 8b bd 10 ff ff ff                  	mov rdi, qword ptr [rbp - 0xf0]
0x1b557:   e8 68 df ff ff                        	call 0x194c4 <compare_ts_section>
0x1b55c:   85 c0                                 	test eax, eax
0x1b55e:   75 15                                 	jne 0x1b575 <flush_arib_std_b25+0x667>
0x1b560:   48 8b bd 38 ff ff ff                  	mov rdi, qword ptr [rbp - 0xc8]
0x1b567:   e8 d8 cc ff ff                        	call 0x18244 <reset_ts_section>
0x1b56c:   4c 03 65 90                           	add r12, qword ptr [rbp - 0x70]
0x1b570:   e9 84 03 00 00                        	jmp 0x1b8f9 <flush_arib_std_b25+0x9eb>
0x1b575:   48 8b b5 38 ff ff ff                  	mov rsi, qword ptr [rbp - 0xc8]
0x1b57c:   48 8b bd 10 ff ff ff                  	mov rdi, qword ptr [rbp - 0xf0]
0x1b583:   e8 f3 d0 ff ff                        	call 0x1867b <swap_ts_section>
0x1b588:   48 8b bd 38 ff ff ff                  	mov rdi, qword ptr [rbp - 0xc8]
0x1b58f:   e8 b0 cc ff ff                        	call 0x18244 <reset_ts_section>
0x1b594:   4c 89 ef                              	mov rdi, r13
0x1b597:   e8 7d c7 ff ff                        	call 0x17d19 <proc_cat>
0x1b59c:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b59f:   85 c0                                 	test eax, eax
0x1b5a1:   0f 89 4e 03 00 00                     	jns 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b5a7:   41 89 c6                              	mov r14d, eax
0x1b5aa:   e9 a8 03 00 00                        	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b5af:   41 83 fe 11                           	cmp r14d, 0x11
0x1b5b3:   0f 85 4e 01 00 00                     	jne 0x1b707 <flush_arib_std_b25+0x7f9>
0x1b5b9:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b5bc:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b5c0:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1b5c4:   48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0x1b5cb:   e8 30 e6 ff ff                        	call 0x19c00 <set_ts_section_data_for_remaining_payload_data>
0x1b5d0:   48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0x1b5d7:   e8 1a c8 ff ff                        	call 0x17df6 <check_ts_section>
0x1b5dc:   85 c0                                 	test eax, eax
0x1b5de:   74 71                                 	je 0x1b651 <flush_arib_std_b25+0x743>
0x1b5e0:   48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0x1b5e7:   e8 89 ca ff ff                        	call 0x18075 <check_ts_section_crc>
0x1b5ec:   85 c0                                 	test eax, eax
0x1b5ee:   74 21                                 	je 0x1b611 <flush_arib_std_b25+0x703>
0x1b5f0:   41 83 bd b8 01 00 00 00               	cmp dword ptr [r13 + 0x1b8], 0
0x1b5f8:   74 17                                 	je 0x1b611 <flush_arib_std_b25+0x703>
0x1b5fa:   48 8b b5 78 ff ff ff                  	mov rsi, qword ptr [rbp - 0x88]
0x1b601:   48 8b bd 28 ff ff ff                  	mov rdi, qword ptr [rbp - 0xd8]
0x1b608:   e8 b7 de ff ff                        	call 0x194c4 <compare_ts_section>
0x1b60d:   85 c0                                 	test eax, eax
0x1b60f:   75 0e                                 	jne 0x1b61f <flush_arib_std_b25+0x711>
0x1b611:   48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0x1b618:   e8 27 cc ff ff                        	call 0x18244 <reset_ts_section>
0x1b61d:   eb 32                                 	jmp 0x1b651 <flush_arib_std_b25+0x743>
0x1b61f:   48 8b b5 78 ff ff ff                  	mov rsi, qword ptr [rbp - 0x88]
0x1b626:   48 8b bd 28 ff ff ff                  	mov rdi, qword ptr [rbp - 0xd8]
0x1b62d:   e8 49 d0 ff ff                        	call 0x1867b <swap_ts_section>
0x1b632:   48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0x1b639:   e8 06 cc ff ff                        	call 0x18244 <reset_ts_section>
0x1b63e:   4c 89 ef                              	mov rdi, r13
0x1b641:   e8 66 d2 ff ff                        	call 0x188ac <proc_sdt>
0x1b646:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b649:   85 c0                                 	test eax, eax
0x1b64b:   0f 88 ea 02 00 00                     	js 0x1b93b <flush_arib_std_b25+0xa2d>
0x1b651:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b654:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b658:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1b65c:   48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0x1b663:   e8 39 e3 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1b668:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b66b:   85 c0                                 	test eax, eax
0x1b66d:   0f 88 ce 02 00 00                     	js 0x1b941 <flush_arib_std_b25+0xa33>
0x1b673:   48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0x1b67a:   e8 77 c7 ff ff                        	call 0x17df6 <check_ts_section>
0x1b67f:   85 c0                                 	test eax, eax
0x1b681:   0f 84 6e 02 00 00                     	je 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b687:   48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0x1b68e:   e8 e2 c9 ff ff                        	call 0x18075 <check_ts_section_crc>
0x1b693:   85 c0                                 	test eax, eax
0x1b695:   74 21                                 	je 0x1b6b8 <flush_arib_std_b25+0x7aa>
0x1b697:   41 83 bd b8 01 00 00 00               	cmp dword ptr [r13 + 0x1b8], 0
0x1b69f:   74 17                                 	je 0x1b6b8 <flush_arib_std_b25+0x7aa>
0x1b6a1:   48 8b b5 78 ff ff ff                  	mov rsi, qword ptr [rbp - 0x88]
0x1b6a8:   48 8b bd 28 ff ff ff                  	mov rdi, qword ptr [rbp - 0xd8]
0x1b6af:   e8 10 de ff ff                        	call 0x194c4 <compare_ts_section>
0x1b6b4:   85 c0                                 	test eax, eax
0x1b6b6:   75 15                                 	jne 0x1b6cd <flush_arib_std_b25+0x7bf>
0x1b6b8:   48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0x1b6bf:   e8 80 cb ff ff                        	call 0x18244 <reset_ts_section>
0x1b6c4:   4c 03 65 90                           	add r12, qword ptr [rbp - 0x70]
0x1b6c8:   e9 2c 02 00 00                        	jmp 0x1b8f9 <flush_arib_std_b25+0x9eb>
0x1b6cd:   48 8b b5 78 ff ff ff                  	mov rsi, qword ptr [rbp - 0x88]
0x1b6d4:   48 8b bd 28 ff ff ff                  	mov rdi, qword ptr [rbp - 0xd8]
0x1b6db:   e8 9b cf ff ff                        	call 0x1867b <swap_ts_section>
0x1b6e0:   48 8b bd 78 ff ff ff                  	mov rdi, qword ptr [rbp - 0x88]
0x1b6e7:   e8 58 cb ff ff                        	call 0x18244 <reset_ts_section>
0x1b6ec:   4c 89 ef                              	mov rdi, r13
0x1b6ef:   e8 b8 d1 ff ff                        	call 0x188ac <proc_sdt>
0x1b6f4:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b6f7:   85 c0                                 	test eax, eax
0x1b6f9:   0f 89 f6 01 00 00                     	jns 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b6ff:   41 89 c6                              	mov r14d, eax
0x1b702:   e9 50 02 00 00                        	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b707:   41 83 fe 12                           	cmp r14d, 0x12
0x1b70b:   0f 85 24 01 00 00                     	jne 0x1b835 <flush_arib_std_b25+0x927>
0x1b711:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b714:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b718:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1b71c:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1b720:   e8 db e4 ff ff                        	call 0x19c00 <set_ts_section_data_for_remaining_payload_data>
0x1b725:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1b729:   e8 c8 c6 ff ff                        	call 0x17df6 <check_ts_section>
0x1b72e:   85 c0                                 	test eax, eax
0x1b730:   74 62                                 	je 0x1b794 <flush_arib_std_b25+0x886>
0x1b732:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1b736:   e8 3a c9 ff ff                        	call 0x18075 <check_ts_section_crc>
0x1b73b:   85 c0                                 	test eax, eax
0x1b73d:   74 1e                                 	je 0x1b75d <flush_arib_std_b25+0x84f>
0x1b73f:   41 83 bd 48 02 00 00 00               	cmp dword ptr [r13 + 0x248], 0
0x1b747:   74 14                                 	je 0x1b75d <flush_arib_std_b25+0x84f>
0x1b749:   48 8b 75 80                           	mov rsi, qword ptr [rbp - 0x80]
0x1b74d:   48 8b bd 30 ff ff ff                  	mov rdi, qword ptr [rbp - 0xd0]
0x1b754:   e8 6b dd ff ff                        	call 0x194c4 <compare_ts_section>
0x1b759:   85 c0                                 	test eax, eax
0x1b75b:   75 0b                                 	jne 0x1b768 <flush_arib_std_b25+0x85a>
0x1b75d:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1b761:   e8 de ca ff ff                        	call 0x18244 <reset_ts_section>
0x1b766:   eb 2c                                 	jmp 0x1b794 <flush_arib_std_b25+0x886>
0x1b768:   48 8b 75 80                           	mov rsi, qword ptr [rbp - 0x80]
0x1b76c:   48 8b bd 30 ff ff ff                  	mov rdi, qword ptr [rbp - 0xd0]
0x1b773:   e8 03 cf ff ff                        	call 0x1867b <swap_ts_section>
0x1b778:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1b77c:   e8 c3 ca ff ff                        	call 0x18244 <reset_ts_section>
0x1b781:   4c 89 ef                              	mov rdi, r13
0x1b784:   e8 fb d2 ff ff                        	call 0x18a84 <proc_eit>
0x1b789:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b78c:   85 c0                                 	test eax, eax
0x1b78e:   0f 88 b3 01 00 00                     	js 0x1b947 <flush_arib_std_b25+0xa39>
0x1b794:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b797:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b79b:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1b79f:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1b7a3:   e8 f9 e1 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1b7a8:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b7ab:   85 c0                                 	test eax, eax
0x1b7ad:   0f 88 9a 01 00 00                     	js 0x1b94d <flush_arib_std_b25+0xa3f>
0x1b7b3:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1b7b7:   e8 3a c6 ff ff                        	call 0x17df6 <check_ts_section>
0x1b7bc:   85 c0                                 	test eax, eax
0x1b7be:   0f 84 31 01 00 00                     	je 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b7c4:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1b7c8:   e8 a8 c8 ff ff                        	call 0x18075 <check_ts_section_crc>
0x1b7cd:   85 c0                                 	test eax, eax
0x1b7cf:   74 1e                                 	je 0x1b7ef <flush_arib_std_b25+0x8e1>
0x1b7d1:   41 83 bd 48 02 00 00 00               	cmp dword ptr [r13 + 0x248], 0
0x1b7d9:   74 14                                 	je 0x1b7ef <flush_arib_std_b25+0x8e1>
0x1b7db:   48 8b 75 80                           	mov rsi, qword ptr [rbp - 0x80]
0x1b7df:   48 8b bd 30 ff ff ff                  	mov rdi, qword ptr [rbp - 0xd0]
0x1b7e6:   e8 d9 dc ff ff                        	call 0x194c4 <compare_ts_section>
0x1b7eb:   85 c0                                 	test eax, eax
0x1b7ed:   75 12                                 	jne 0x1b801 <flush_arib_std_b25+0x8f3>
0x1b7ef:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1b7f3:   e8 4c ca ff ff                        	call 0x18244 <reset_ts_section>
0x1b7f8:   4c 03 65 90                           	add r12, qword ptr [rbp - 0x70]
0x1b7fc:   e9 f8 00 00 00                        	jmp 0x1b8f9 <flush_arib_std_b25+0x9eb>
0x1b801:   48 8b 75 80                           	mov rsi, qword ptr [rbp - 0x80]
0x1b805:   48 8b bd 30 ff ff ff                  	mov rdi, qword ptr [rbp - 0xd0]
0x1b80c:   e8 6a ce ff ff                        	call 0x1867b <swap_ts_section>
0x1b811:   48 8b 7d 80                           	mov rdi, qword ptr [rbp - 0x80]
0x1b815:   e8 2a ca ff ff                        	call 0x18244 <reset_ts_section>
0x1b81a:   4c 89 ef                              	mov rdi, r13
0x1b81d:   e8 62 d2 ff ff                        	call 0x18a84 <proc_eit>
0x1b822:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b825:   85 c0                                 	test eax, eax
0x1b827:   0f 89 c8 00 00 00                     	jns 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b82d:   41 89 c6                              	mov r14d, eax
0x1b830:   e9 22 01 00 00                        	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b835:   45 85 f6                              	test r14d, r14d
0x1b838:   0f 85 b7 00 00 00                     	jne 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b83e:   8b 4d 98                              	mov ecx, dword ptr [rbp - 0x68]
0x1b841:   48 8b 55 a0                           	mov rdx, qword ptr [rbp - 0x60]
0x1b845:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x1b849:   48 8b bd 40 ff ff ff                  	mov rdi, qword ptr [rbp - 0xc0]
0x1b850:   e8 4c e1 ff ff                        	call 0x199a1 <set_ts_section_data>
0x1b855:   89 45 9c                              	mov dword ptr [rbp - 0x64], eax
0x1b858:   85 c0                                 	test eax, eax
0x1b85a:   0f 88 f3 00 00 00                     	js 0x1b953 <flush_arib_std_b25+0xa45>
0x1b860:   48 8b bd 40 ff ff ff                  	mov rdi, qword ptr [rbp - 0xc0]
0x1b867:   e8 8a c5 ff ff                        	call 0x17df6 <check_ts_section>
0x1b86c:   85 c0                                 	test eax, eax
0x1b86e:   0f 84 81 00 00 00                     	je 0x1b8f5 <flush_arib_std_b25+0x9e7>
0x1b874:   48 8b bd 40 ff ff ff                  	mov rdi, qword ptr [rbp - 0xc0]
0x1b87b:   e8 f5 c7 ff ff                        	call 0x18075 <check_ts_section_crc>
0x1b880:   85 c0                                 	test eax, eax
0x1b882:   74 21                                 	je 0x1b8a5 <flush_arib_std_b25+0x997>
0x1b884:   41 83 bd 98 00 00 00 00               	cmp dword ptr [r13 + 0x98], 0
0x1b88c:   74 17                                 	je 0x1b8a5 <flush_arib_std_b25+0x997>
0x1b88e:   48 8b b5 40 ff ff ff                  	mov rsi, qword ptr [rbp - 0xc0]
0x1b895:   48 8b bd 18 ff ff ff                  	mov rdi, qword ptr [rbp - 0xe8]
0x1b89c:   e8 23 dc ff ff                        	call 0x194c4 <compare_ts_section>
0x1b8a1:   85 c0                                 	test eax, eax
0x1b8a3:   75 12                                 	jne 0x1b8b7 <flush_arib_std_b25+0x9a9>
0x1b8a5:   48 8b bd 40 ff ff ff                  	mov rdi, qword ptr [rbp - 0xc0]
0x1b8ac:   e8 93 c9 ff ff                        	call 0x18244 <reset_ts_section>
0x1b8b1:   4c 03 65 90                           	add r12, qword ptr [rbp - 0x70]
0x1b8b5:   eb 42                                 	jmp 0x1b8f9 <flush_arib_std_b25+0x9eb>
0x1b8b7:   4c 89 e3                              	mov rbx, r12
0x1b8ba:   48 8b b5 40 ff ff ff                  	mov rsi, qword ptr [rbp - 0xc0]
0x1b8c1:   48 8b bd 18 ff ff ff                  	mov rdi, qword ptr [rbp - 0xe8]
0x1b8c8:   e8 ae cd ff ff                        	call 0x1867b <swap_ts_section>
0x1b8cd:   48 8b bd 40 ff ff ff                  	mov rdi, qword ptr [rbp - 0xc0]
0x1b8d4:   e8 6b c9 ff ff                        	call 0x18244 <reset_ts_section>
0x1b8d9:   4c 89 ef                              	mov rdi, r13
0x1b8dc:   e8 b3 dd ff ff                        	call 0x19694 <proc_pat>
0x1b8e1:   41 89 c6                              	mov r14d, eax
0x1b8e4:   85 c0                                 	test eax, eax
0x1b8e6:   78 6f                                 	js 0x1b957 <flush_arib_std_b25+0xa49>
0x1b8e8:   4c 63 a5 6c ff ff ff                  	movsxd r12, dword ptr [rbp - 0x94]
0x1b8ef:   4e 8d 24 23                           	lea r12, [rbx + r12]
0x1b8f3:   eb 62                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b8f5:   4c 03 65 90                           	add r12, qword ptr [rbp - 0x70]
0x1b8f9:   49 8d 84 24 bc 00 00 00               	lea rax, [r12 + 0xbc]
0x1b901:   48 39 45 88                           	cmp qword ptr [rbp - 0x78], rax
0x1b905:   0f 83 88 f7 ff ff                     	jae 0x1b093 <flush_arib_std_b25+0x185>
0x1b90b:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b90f:   eb 46                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b911:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b915:   eb 40                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b917:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b91b:   eb 3a                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b91d:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b921:   eb 34                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b923:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b927:   eb 2e                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b929:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b92d:   eb 28                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b92f:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b933:   eb 22                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b935:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b939:   eb 1c                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b93b:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b93f:   eb 16                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b941:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b945:   eb 10                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b947:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b94b:   eb 0a                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b94d:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b951:   eb 04                                 	jmp 0x1b957 <flush_arib_std_b25+0xa49>
0x1b953:   44 8b 75 9c                           	mov r14d, dword ptr [rbp - 0x64]
0x1b957:   44 89 e0                              	mov eax, r12d
0x1b95a:   49 8b 8d 30 06 01 00                  	mov rcx, qword ptr [r13 + 0x10630]
0x1b961:   8b 9d 5c ff ff ff                     	mov ebx, dword ptr [rbp - 0xa4]
0x1b967:   44 29 e3                              	sub ebx, r12d
0x1b96a:   81 fb ff 03 00 00                     	cmp ebx, 0x3ff
0x1b970:   7e 1b                                 	jle 0x1b98d <flush_arib_std_b25+0xa7f>
0x1b972:   29 c8                                 	sub eax, ecx
0x1b974:   89 c1                                 	mov ecx, eax
0x1b976:   41 8b 95 40 06 01 00                  	mov edx, dword ptr [r13 + 0x10640]
0x1b97d:   be 02 00 00 00                        	mov esi, 2
0x1b982:   89 d0                                 	mov eax, edx
0x1b984:   c1 fa 1f                              	sar edx, 0x1f
0x1b987:   f7 fe                                 	idiv esi
0x1b989:   39 c1                                 	cmp ecx, eax
0x1b98b:   7e 2c                                 	jle 0x1b9b9
0x1b98d:   4d 8b bd 28 06 01 00                  	mov r15, qword ptr [r13 + 0x10628]
0x1b994:   48 63 db                              	movsxd rbx, ebx
0x1b997:   48 89 da                              	mov rdx, rbx
0x1b99a:   4c 89 e6                              	mov rsi, r12
0x1b99d:   4c 89 ff                              	mov rdi, r15
0x1b9a0:   e8 c3 31 02 00                        	call 0x3eb68 <memcpy>
; data inside code section at 0x1b9a5 -- 0x1b9a8
0x1b9a5:   4d 89 bd                                           |M..             |
; function: Set_Key at 0x1b9a8 -- 0x1b9d5
0x1b9a8:   30 06                                 	xor byte ptr [rsi], al
0x1b9aa:   01 00                                 	add dword ptr [rax], eax
0x1b9ac:   49 8d 1c 1f                           	lea rbx, [r15 + rbx]
0x1b9b0:   49 89 9d 38 06 01 00                  	mov qword ptr [r13 + 0x10638], rbx
0x1b9b7:   eb 07                                 	jmp 0x1b9c0 <Set_Key+0x18>
0x1b9b9:   4d 89 a5 30 06 01 00                  	mov qword ptr [r13 + 0x10630], r12
0x1b9c0:   44 89 f0                              	mov eax, r14d
0x1b9c3:   48 81 c4 c8 00 00 00                  	add rsp, 0xc8
0x1b9ca:   5b                                    	pop rbx
0x1b9cb:   41 5c                                 	pop r12
0x1b9cd:   41 5d                                 	pop r13
0x1b9cf:   41 5e                                 	pop r14
0x1b9d1:   41 5f                                 	pop r15
0x1b9d3:   c9                                    	leave 
0x1b9d4:   c3                                    	ret 
; data inside code section at 0x1b9d5 -- 0x1b9d8
0x1b9d5:   90 90 90                                           |...             |
; function: Set_Key at 0x1b9d8 -- 0x1ba8c
0x1b9d8:   55                                    	push rbp
0x1b9d9:   48 89 e5                              	mov rbp, rsp
0x1b9dc:   41 57                                 	push r15
0x1b9de:   41 56                                 	push r14
0x1b9e0:   41 55                                 	push r13
0x1b9e2:   41 54                                 	push r12
0x1b9e4:   53                                    	push rbx
0x1b9e5:   48 83 ec 68                           	sub rsp, 0x68
0x1b9e9:   e8 02 32 02 00                        	call 0x3ebf0 <mcount>
0x1b9ee:   49 89 fc                              	mov r12, rdi
0x1b9f1:   49 89 f7                              	mov r15, rsi
0x1b9f4:   48 89 95 78 ff ff ff                  	mov qword ptr [rbp - 0x88], rdx
0x1b9fb:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x1ba04:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x1ba08:   31 c0                                 	xor eax, eax
0x1ba0a:   48 8d 5d 80                           	lea rbx, [rbp - 0x80]
0x1ba0e:   b9 08 00 00 00                        	mov ecx, 8
0x1ba13:   48 89 df                              	mov rdi, rbx
0x1ba16:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x1ba19:   4c 8d 6b 20                           	lea r13, [rbx + 0x20]
0x1ba1d:   49 c7 c6 00 00 00 00                  	mov r14, 0
0x1ba24:   41 0f b6 14 24                        	movzx edx, byte ptr [r12]
0x1ba29:   4c 89 f6                              	mov rsi, r14
0x1ba2c:   48 89 df                              	mov rdi, rbx
0x1ba2f:   b8 00 00 00 00                        	mov eax, 0
0x1ba34:   e8 2f 32 02 00                        	call 0x3ec68 <sprintf>
0x1ba39:   49 83 c4 01                           	add r12, 1
0x1ba3d:   48 83 c3 02                           	add rbx, 2
0x1ba41:   4c 39 eb                              	cmp rbx, r13
0x1ba44:   75 de                                 	jne 0x1ba24 <Set_Key+0x4c>
0x1ba46:   48 8d 5d 80                           	lea rbx, [rbp - 0x80]
0x1ba4a:   49 8d bf f4 02 00 00                  	lea rdi, [r15 + 0x2f4]
0x1ba51:   4c 8b 85 78 ff ff ff                  	mov r8, qword ptr [rbp - 0x88]
0x1ba58:   48 89 d9                              	mov rcx, rbx
0x1ba5b:   ba 80 00 00 00                        	mov edx, 0x80
0x1ba60:   be 00 00 00 00                        	mov esi, 0
0x1ba65:   e8 3c be ff ff                        	call 0x178a6 <makeKey>
0x1ba6a:   49 8d 7f 14                           	lea rdi, [r15 + 0x14]
0x1ba6e:   4c 8b 85 78 ff ff ff                  	mov r8, qword ptr [rbp - 0x88]
0x1ba75:   48 89 d9                              	mov rcx, rbx
0x1ba78:   ba 80 00 00 00                        	mov edx, 0x80
0x1ba7d:   be 01 00 00 00                        	mov esi, 1
0x1ba82:   e8 1f be ff ff                        	call 0x178a6 <makeKey>
0x1ba87:   ba 00 00 00 00                        	mov edx, 0
; function: DecryptBlock at 0x1ba8c -- 0x1babc
0x1ba8c:   be 01 00 00 00                        	mov esi, 1
0x1ba91:   4c 89 ff                              	mov rdi, r15
0x1ba94:   e8 37 bd ff ff                        	call 0x177d0 <cipherInit>
0x1ba99:   48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x1ba9d:   65 48 33 04 25 28 00 00 00            	xor rax, qword ptr gs:[0x28]
0x1baa6:   74 05                                 	je 0x1baad <DecryptBlock+0x21>
0x1baa8:   e8 fb 30 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x1baad:   48 83 c4 68                           	add rsp, 0x68
0x1bab1:   5b                                    	pop rbx
0x1bab2:   41 5c                                 	pop r12
0x1bab4:   41 5d                                 	pop r13
0x1bab6:   41 5e                                 	pop r14
0x1bab8:   41 5f                                 	pop r15
0x1baba:   c9                                    	leave 
0x1babb:   c3                                    	ret 
; function: DecryptBlock at 0x1babc -- 0x1bb1d
0x1babc:   55                                    	push rbp
0x1babd:   48 89 e5                              	mov rbp, rsp
0x1bac0:   48 81 ec 10 06 00 00                  	sub rsp, 0x610
0x1bac7:   48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x1bacb:   4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x1bacf:   4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x1bad3:   4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x1bad7:   e8 14 31 02 00                        	call 0x3ebf0 <mcount>
0x1badc:   49 89 f6                              	mov r14, rsi
0x1badf:   49 89 d5                              	mov r13, rdx
0x1bae2:   49 89 cc                              	mov r12, rcx
0x1bae5:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x1baee:   48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x1baf2:   31 c0                                 	xor eax, eax
0x1baf4:   48 8d 9d 00 fa ff ff                  	lea rbx, [rbp - 0x600]
0x1bafb:   48 89 ca                              	mov rdx, rcx
0x1bafe:   48 89 de                              	mov rsi, rbx
0x1bb01:   e8 d2 fe ff ff                        	call 0x1b9d8 <Set_Key>
0x1bb06:   48 8d 73 14                           	lea rsi, [rbx + 0x14]
0x1bb0a:   4c 89 24 24                           	mov qword ptr [rsp], r12
0x1bb0e:   44 8b 8d 60 fa ff ff                  	mov r9d, dword ptr [rbp - 0x5a0]
0x1bb15:   4d 89 e8                              	mov r8, r13
0x1bb18:   b9 10 00 00 00                        	mov ecx, 0x10
; data inside code section at 0x1bb1d -- 0x1bb1e
0x1bb1d:   4c                                                 |L               |
; function: EncryptBlock at 0x1bb1e -- 0x1bb4e
0x1bb1e:   89 f2                                 	mov edx, esi
0x1bb20:   48 89 df                              	mov rdi, rbx
0x1bb23:   e8 cf ba ff ff                        	call 0x175f7 <cipherUpdateRounds>
0x1bb28:   48 8b 45 d8                           	mov rax, qword ptr [rbp - 0x28]
0x1bb2c:   65 48 33 04 25 28 00 00 00            	xor rax, qword ptr gs:[0x28]
0x1bb35:   74 05                                 	je 0x1bb3c <EncryptBlock+0x1e>
0x1bb37:   e8 6c 30 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x1bb3c:   48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0x1bb40:   4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0x1bb44:   4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0x1bb48:   4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x1bb4c:   c9                                    	leave 
0x1bb4d:   c3                                    	ret 
; function: EncryptBlock at 0x1bb4e -- 0x1bbb2
0x1bb4e:   55                                    	push rbp
0x1bb4f:   48 89 e5                              	mov rbp, rsp
0x1bb52:   48 81 ec 10 06 00 00                  	sub rsp, 0x610
0x1bb59:   48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x1bb5d:   4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x1bb61:   4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x1bb65:   4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x1bb69:   e8 82 30 02 00                        	call 0x3ebf0 <mcount>
0x1bb6e:   49 89 f6                              	mov r14, rsi
0x1bb71:   49 89 d5                              	mov r13, rdx
0x1bb74:   49 89 cc                              	mov r12, rcx
0x1bb77:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x1bb80:   48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x1bb84:   31 c0                                 	xor eax, eax
0x1bb86:   48 8d 9d 00 fa ff ff                  	lea rbx, [rbp - 0x600]
0x1bb8d:   48 89 ca                              	mov rdx, rcx
0x1bb90:   48 89 de                              	mov rsi, rbx
0x1bb93:   e8 40 fe ff ff                        	call 0x1b9d8 <Set_Key>
0x1bb98:   48 8d b3 f4 02 00 00                  	lea rsi, [rbx + 0x2f4]
0x1bb9f:   4c 89 24 24                           	mov qword ptr [rsp], r12
0x1bba3:   44 8b 8d 40 fd ff ff                  	mov r9d, dword ptr [rbp - 0x2c0]
0x1bbaa:   4d 89 e8                              	mov r8, r13
0x1bbad:   b9 10 00 00 00                        	mov ecx, 0x10
; data inside code section at 0x1bbb2 -- 0x1bbb4
0x1bbb2:   4c 89                                              |L.              |
; function: des_setkey at 0x1bbb4 -- 0x1bbe3
0x1bbb4:   f2 48 89 df                           	mov rdi, rbx
0x1bbb8:   e8 3a ba ff ff                        	call 0x175f7 <cipherUpdateRounds>
0x1bbbd:   48 8b 45 d8                           	mov rax, qword ptr [rbp - 0x28]
0x1bbc1:   65 48 33 04 25 28 00 00 00            	xor rax, qword ptr gs:[0x28]
0x1bbca:   74 05                                 	je 0x1bbd1 <des_setkey+0x1d>
0x1bbcc:   e8 d7 2f 02 00                        	call 0x3eba8 <__stack_chk_fail>
0x1bbd1:   48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0x1bbd5:   4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0x1bbd9:   4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0x1bbdd:   4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x1bbe1:   c9                                    	leave 
0x1bbe2:   c3                                    	ret 
; data inside code section at 0x1bbe3 -- 0x1bbe4
0x1bbe3:   90                                                 |.               |
; function: des_setkey at 0x1bbe4 -- 0x1c0db
0x1bbe4:   55                                    	push rbp
0x1bbe5:   48 89 e5                              	mov rbp, rsp
0x1bbe8:   53                                    	push rbx
0x1bbe9:   e8 02 30 02 00                        	call 0x3ebf0 <mcount>
0x1bbee:   0f b6 4e 03                           	movzx ecx, byte ptr [rsi + 3]
0x1bbf2:   0f b6 06                              	movzx eax, byte ptr [rsi]
0x1bbf5:   48 c1 e0 18                           	shl rax, 0x18
0x1bbf9:   48 09 c8                              	or rax, rcx
0x1bbfc:   0f b6 4e 01                           	movzx ecx, byte ptr [rsi + 1]
0x1bc00:   48 c1 e1 10                           	shl rcx, 0x10
0x1bc04:   48 09 c8                              	or rax, rcx
0x1bc07:   0f b6 4e 02                           	movzx ecx, byte ptr [rsi + 2]
0x1bc0b:   48 c1 e1 08                           	shl rcx, 8
0x1bc0f:   48 09 c8                              	or rax, rcx
0x1bc12:   0f b6 5e 04                           	movzx ebx, byte ptr [rsi + 4]
0x1bc16:   48 c1 e3 18                           	shl rbx, 0x18
0x1bc1a:   0f b6 4e 05                           	movzx ecx, byte ptr [rsi + 5]
0x1bc1e:   48 c1 e1 10                           	shl rcx, 0x10
0x1bc22:   48 09 d9                              	or rcx, rbx
0x1bc25:   0f b6 5e 07                           	movzx ebx, byte ptr [rsi + 7]
0x1bc29:   48 09 d9                              	or rcx, rbx
0x1bc2c:   0f b6 5e 06                           	movzx ebx, byte ptr [rsi + 6]
0x1bc30:   48 c1 e3 08                           	shl rbx, 8
0x1bc34:   48 09 d9                              	or rcx, rbx
0x1bc37:   48 89 cb                              	mov rbx, rcx
0x1bc3a:   48 c1 eb 04                           	shr rbx, 4
0x1bc3e:   48 31 c3                              	xor rbx, rax
0x1bc41:   81 e3 0f 0f 0f 0f                     	and ebx, 0xf0f0f0f
0x1bc47:   48 31 d8                              	xor rax, rbx
0x1bc4a:   48 c1 e3 04                           	shl rbx, 4
0x1bc4e:   48 31 d9                              	xor rcx, rbx
0x1bc51:   48 89 cb                              	mov rbx, rcx
0x1bc54:   48 31 c3                              	xor rbx, rax
0x1bc57:   81 e3 10 10 10 10                     	and ebx, 0x10101010
0x1bc5d:   48 31 d8                              	xor rax, rbx
0x1bc60:   48 31 d9                              	xor rcx, rbx
0x1bc63:   48 89 c6                              	mov rsi, rax
0x1bc66:   48 c1 ee 18                           	shr rsi, 0x18
0x1bc6a:   83 e6 0f                              	and esi, 0xf
0x1bc6d:   48 89 c3                              	mov rbx, rax
0x1bc70:   83 e3 0f                              	and ebx, 0xf
0x1bc73:   48 8b 9c da 00 10 00 00               	mov rbx, qword ptr [rdx + rbx*8 + 0x1000]
0x1bc7b:   48 c1 e3 03                           	shl rbx, 3
0x1bc7f:   48 0b 9c f2 00 10 00 00               	or rbx, qword ptr [rdx + rsi*8 + 0x1000]
0x1bc87:   48 89 c6                              	mov rsi, rax
0x1bc8a:   48 c1 ee 08                           	shr rsi, 8
0x1bc8e:   83 e6 0f                              	and esi, 0xf
0x1bc91:   48 8b b4 f2 00 10 00 00               	mov rsi, qword ptr [rdx + rsi*8 + 0x1000]
0x1bc99:   48 c1 e6 02                           	shl rsi, 2
0x1bc9d:   48 09 f3                              	or rbx, rsi
0x1bca0:   48 89 c6                              	mov rsi, rax
0x1bca3:   48 c1 ee 10                           	shr rsi, 0x10
0x1bca7:   83 e6 0f                              	and esi, 0xf
0x1bcaa:   48 8b b4 f2 00 10 00 00               	mov rsi, qword ptr [rdx + rsi*8 + 0x1000]
0x1bcb2:   48 01 f6                              	add rsi, rsi
0x1bcb5:   48 09 f3                              	or rbx, rsi
0x1bcb8:   48 89 c6                              	mov rsi, rax
0x1bcbb:   48 c1 ee 05                           	shr rsi, 5
0x1bcbf:   83 e6 0f                              	and esi, 0xf
0x1bcc2:   48 8b b4 f2 00 10 00 00               	mov rsi, qword ptr [rdx + rsi*8 + 0x1000]
0x1bcca:   48 c1 e6 07                           	shl rsi, 7
0x1bcce:   48 09 f3                              	or rbx, rsi
0x1bcd1:   48 89 c6                              	mov rsi, rax
0x1bcd4:   48 c1 ee 0d                           	shr rsi, 0xd ; "NU"
0x1bcd8:   83 e6 0f                              	and esi, 0xf
0x1bcdb:   48 8b b4 f2 00 10 00 00               	mov rsi, qword ptr [rdx + rsi*8 + 0x1000]
0x1bce3:   48 c1 e6 06                           	shl rsi, 6
0x1bce7:   48 09 f3                              	or rbx, rsi
0x1bcea:   48 89 c6                              	mov rsi, rax
0x1bced:   48 c1 ee 15                           	shr rsi, 0x15
0x1bcf1:   83 e6 0f                              	and esi, 0xf
0x1bcf4:   48 8b b4 f2 00 10 00 00               	mov rsi, qword ptr [rdx + rsi*8 + 0x1000]
0x1bcfc:   48 c1 e6 05                           	shl rsi, 5
0x1bd00:   48 09 f3                              	or rbx, rsi
0x1bd03:   48 c1 e8 1d                           	shr rax, 0x1d
0x1bd07:   48 8b 84 c2 00 10 00 00               	mov rax, qword ptr [rdx + rax*8 + 0x1000]
0x1bd0f:   48 c1 e0 04                           	shl rax, 4
0x1bd13:   48 09 c3                              	or rbx, rax
0x1bd16:   48 89 c8                              	mov rax, rcx
0x1bd19:   48 d1 e8                              	shr rax, 1
0x1bd1c:   83 e0 0f                              	and eax, 0xf
0x1bd1f:   48 8b b4 c2 80 10 00 00               	mov rsi, qword ptr [rdx + rax*8 + 0x1080]
0x1bd27:   48 c1 e6 03                           	shl rsi, 3
0x1bd2b:   48 89 c8                              	mov rax, rcx
0x1bd2e:   48 c1 e8 09                           	shr rax, 9
0x1bd32:   83 e0 0f                              	and eax, 0xf
0x1bd35:   48 8b 84 c2 80 10 00 00               	mov rax, qword ptr [rdx + rax*8 + 0x1080]
0x1bd3d:   48 c1 e0 02                           	shl rax, 2
0x1bd41:   48 09 f0                              	or rax, rsi
0x1bd44:   48 89 ce                              	mov rsi, rcx
0x1bd47:   48 c1 ee 19                           	shr rsi, 0x19
0x1bd4b:   83 e6 0f                              	and esi, 0xf
0x1bd4e:   48 0b 84 f2 80 10 00 00               	or rax, qword ptr [rdx + rsi*8 + 0x1080]
0x1bd56:   48 89 ce                              	mov rsi, rcx
0x1bd59:   48 c1 ee 11                           	shr rsi, 0x11
0x1bd5d:   83 e6 0f                              	and esi, 0xf
0x1bd60:   48 8b b4 f2 80 10 00 00               	mov rsi, qword ptr [rdx + rsi*8 + 0x1080]
0x1bd68:   48 01 f6                              	add rsi, rsi
0x1bd6b:   48 09 f0                              	or rax, rsi
0x1bd6e:   48 89 ce                              	mov rsi, rcx
0x1bd71:   48 c1 ee 04                           	shr rsi, 4
0x1bd75:   83 e6 0f                              	and esi, 0xf
0x1bd78:   48 8b b4 f2 80 10 00 00               	mov rsi, qword ptr [rdx + rsi*8 + 0x1080]
0x1bd80:   48 c1 e6 07                           	shl rsi, 7
0x1bd84:   48 09 f0                              	or rax, rsi
0x1bd87:   48 89 ce                              	mov rsi, rcx
0x1bd8a:   48 c1 ee 0c                           	shr rsi, 0xc ; "GNU"
0x1bd8e:   83 e6 0f                              	and esi, 0xf
0x1bd91:   48 8b b4 f2 80 10 00 00               	mov rsi, qword ptr [rdx + rsi*8 + 0x1080]
0x1bd99:   48 c1 e6 06                           	shl rsi, 6
0x1bd9d:   48 09 f0                              	or rax, rsi
0x1bda0:   48 89 ce                              	mov rsi, rcx
0x1bda3:   48 c1 ee 14                           	shr rsi, 0x14
0x1bda7:   83 e6 0f                              	and esi, 0xf
0x1bdaa:   48 8b b4 f2 80 10 00 00               	mov rsi, qword ptr [rdx + rsi*8 + 0x1080]
0x1bdb2:   48 c1 e6 05                           	shl rsi, 5
0x1bdb6:   48 09 f0                              	or rax, rsi
0x1bdb9:   48 c1 e9 1c                           	shr rcx, 0x1c
0x1bdbd:   48 8b 94 ca 80 10 00 00               	mov rdx, qword ptr [rdx + rcx*8 + 0x1080]
0x1bdc5:   48 c1 e2 04                           	shl rdx, 4
0x1bdc9:   48 09 d0                              	or rax, rdx
0x1bdcc:   48 89 da                              	mov rdx, rbx
0x1bdcf:   81 e2 ff ff ff 0f                     	and edx, 0xfffffff
0x1bdd5:   25 ff ff ff 0f                        	and eax, 0xfffffff
0x1bdda:   b9 00 00 00 00                        	mov ecx, 0
0x1bddf:   83 f9 01                              	cmp ecx, 1
0x1bde2:   7e 0a                                 	jle 0x1bdee <des_setkey+0x20a>
0x1bde4:   83 f9 08                              	cmp ecx, 8
0x1bde7:   74 05                                 	je 0x1bdee <des_setkey+0x20a>
0x1bde9:   83 f9 0f                              	cmp ecx, 0xf
0x1bdec:   75 27                                 	jne 0x1be15 <des_setkey+0x231>
0x1bdee:   48 89 d3                              	mov rbx, rdx
0x1bdf1:   48 c1 eb 1b                           	shr rbx, 0x1b
0x1bdf5:   48 01 d2                              	add rdx, rdx
0x1bdf8:   48 09 da                              	or rdx, rbx
0x1bdfb:   81 e2 ff ff ff 0f                     	and edx, 0xfffffff
0x1be01:   48 89 c3                              	mov rbx, rax
0x1be04:   48 c1 eb 1b                           	shr rbx, 0x1b
0x1be08:   48 01 c0                              	add rax, rax
0x1be0b:   48 09 d8                              	or rax, rbx
0x1be0e:   25 ff ff ff 0f                        	and eax, 0xfffffff
0x1be13:   eb 27                                 	jmp 0x1be3c <des_setkey+0x258>
0x1be15:   48 89 d3                              	mov rbx, rdx
0x1be18:   48 c1 eb 1a                           	shr rbx, 0x1a
0x1be1c:   48 c1 e2 02                           	shl rdx, 2
0x1be20:   48 09 da                              	or rdx, rbx
0x1be23:   81 e2 ff ff ff 0f                     	and edx, 0xfffffff
0x1be29:   48 89 c3                              	mov rbx, rax
0x1be2c:   48 c1 eb 1a                           	shr rbx, 0x1a
0x1be30:   48 c1 e0 02                           	shl rax, 2
0x1be34:   48 09 d8                              	or rax, rbx
0x1be37:   25 ff ff ff 0f                        	and eax, 0xfffffff
0x1be3c:   49 89 d2                              	mov r10, rdx
0x1be3f:   49 c1 e2 0a                           	shl r10, 0xa
0x1be43:   49 89 c0                              	mov r8, rax
0x1be46:   49 c1 e8 0e                           	shr r8, 0xe
0x1be4a:   48 89 c6                              	mov rsi, rax
0x1be4d:   48 c1 ee 03                           	shr rsi, 3
0x1be51:   49 89 d1                              	mov r9, rdx
0x1be54:   49 c1 e1 04                           	shl r9, 4
0x1be58:   41 81 e1 00 00 00 24                  	and r9d, 0x24000000
0x1be5f:   48 89 d3                              	mov rbx, rdx
0x1be62:   48 c1 e3 1c                           	shl rbx, 0x1c
0x1be66:   81 e3 00 00 00 10                     	and ebx, 0x10000000
0x1be6c:   4c 09 cb                              	or rbx, r9
0x1be6f:   49 89 c1                              	mov r9, rax
0x1be72:   41 81 e1 00 01 00 00                  	and r9d, 0x100
0x1be79:   4c 09 cb                              	or rbx, r9
0x1be7c:   49 89 d1                              	mov r9, rdx
0x1be7f:   49 c1 e1 0e                           	shl r9, 0xe
0x1be83:   41 81 e1 00 00 00 08                  	and r9d, 0x8000000
0x1be8a:   4c 09 cb                              	or rbx, r9
0x1be8d:   49 89 d1                              	mov r9, rdx
0x1be90:   49 c1 e1 12                           	shl r9, 0x12
0x1be94:   41 81 e1 00 00 08 02                  	and r9d, 0x2080000
0x1be9b:   4c 09 cb                              	or rbx, r9
0x1be9e:   49 89 d1                              	mov r9, rdx
0x1bea1:   49 c1 e1 06                           	shl r9, 6
0x1bea5:   41 81 e1 00 00 00 01                  	and r9d, 0x1000000
0x1beac:   4c 09 cb                              	or rbx, r9
0x1beaf:   49 89 d1                              	mov r9, rdx
0x1beb2:   49 c1 e1 09                           	shl r9, 9
0x1beb6:   41 81 e1 00 00 20 00                  	and r9d, 0x200000
0x1bebd:   4c 09 cb                              	or rbx, r9
0x1bec0:   49 89 d1                              	mov r9, rdx
0x1bec3:   49 d1 e9                              	shr r9, 1
0x1bec6:   41 81 e1 00 00 10 00                  	and r9d, 0x100000
0x1becd:   4c 09 cb                              	or rbx, r9
0x1bed0:   4d 89 d1                              	mov r9, r10
0x1bed3:   41 81 e1 00 00 04 00                  	and r9d, 0x40000
0x1beda:   4c 09 cb                              	or rbx, r9
0x1bedd:   4c 8d 0c 95 00 00 00 00               	lea r9, [rdx*4]
0x1bee5:   41 81 e1 00 00 02 00                  	and r9d, 0x20000
0x1beec:   4c 09 cb                              	or rbx, r9
0x1beef:   49 89 d1                              	mov r9, rdx
0x1bef2:   49 c1 e9 0a                           	shr r9, 0xa
0x1bef6:   41 81 e1 00 00 01 00                  	and r9d, 0x10000
0x1befd:   4c 09 cb                              	or rbx, r9
0x1bf00:   49 89 c1                              	mov r9, rax
0x1bf03:   49 c1 e9 0d                           	shr r9, 0xd ; "NU"
0x1bf07:   41 81 e1 00 20 00 00                  	and r9d, 0x2000
0x1bf0e:   4c 09 cb                              	or rbx, r9
0x1bf11:   49 89 c1                              	mov r9, rax
0x1bf14:   49 c1 e9 04                           	shr r9, 4
0x1bf18:   41 81 e1 00 10 00 00                  	and r9d, 0x1000
0x1bf1f:   4c 09 cb                              	or rbx, r9
0x1bf22:   49 89 c1                              	mov r9, rax
0x1bf25:   49 c1 e1 06                           	shl r9, 6
0x1bf29:   41 81 e1 00 08 00 00                  	and r9d, 0x800
0x1bf30:   4c 09 cb                              	or rbx, r9
0x1bf33:   49 89 c1                              	mov r9, rax
0x1bf36:   49 d1 e9                              	shr r9, 1
0x1bf39:   41 81 e1 00 04 00 00                  	and r9d, 0x400
0x1bf40:   4c 09 cb                              	or rbx, r9
0x1bf43:   4d 89 c1                              	mov r9, r8
0x1bf46:   41 81 e1 00 02 00 00                  	and r9d, 0x200
0x1bf4d:   4c 09 cb                              	or rbx, r9
0x1bf50:   49 89 c1                              	mov r9, rax
0x1bf53:   49 c1 e9 05                           	shr r9, 5
0x1bf57:   41 83 e1 20                           	and r9d, 0x20
0x1bf5b:   4c 09 cb                              	or rbx, r9
0x1bf5e:   49 89 c1                              	mov r9, rax
0x1bf61:   49 c1 e9 0a                           	shr r9, 0xa
0x1bf65:   41 83 e1 10                           	and r9d, 0x10
0x1bf69:   4c 09 cb                              	or rbx, r9
0x1bf6c:   49 89 f1                              	mov r9, rsi
0x1bf6f:   41 83 e1 08                           	and r9d, 8
0x1bf73:   4c 09 cb                              	or rbx, r9
0x1bf76:   49 89 c1                              	mov r9, rax
0x1bf79:   49 c1 e9 12                           	shr r9, 0x12
0x1bf7d:   41 83 e1 04                           	and r9d, 4
0x1bf81:   4c 09 cb                              	or rbx, r9
0x1bf84:   49 89 c1                              	mov r9, rax
0x1bf87:   49 c1 e9 1a                           	shr r9, 0x1a
0x1bf8b:   41 83 e1 02                           	and r9d, 2
0x1bf8f:   4c 09 cb                              	or rbx, r9
0x1bf92:   49 89 c1                              	mov r9, rax
0x1bf95:   49 c1 e9 18                           	shr r9, 0x18
0x1bf99:   41 83 e1 01                           	and r9d, 1
0x1bf9d:   4c 09 cb                              	or rbx, r9
0x1bfa0:   48 89 1f                              	mov qword ptr [rdi], rbx
0x1bfa3:   49 89 d1                              	mov r9, rdx
0x1bfa6:   49 c1 e1 0f                           	shl r9, 0xf
0x1bfaa:   4c 89 cb                              	mov rbx, r9
0x1bfad:   81 e3 00 00 00 20                     	and ebx, 0x20000000
0x1bfb3:   49 89 d3                              	mov r11, rdx
0x1bfb6:   49 c1 e3 11                           	shl r11, 0x11
0x1bfba:   41 81 e3 00 00 00 10                  	and r11d, 0x10000000
0x1bfc1:   49 09 db                              	or r11, rbx
0x1bfc4:   48 89 c3                              	mov rbx, rax
0x1bfc7:   81 e3 00 02 00 00                     	and ebx, 0x200
0x1bfcd:   49 09 db                              	or r11, rbx
0x1bfd0:   41 81 e2 00 00 00 08                  	and r10d, 0x8000000
0x1bfd7:   4d 09 d3                              	or r11, r10
0x1bfda:   48 89 d3                              	mov rbx, rdx
0x1bfdd:   48 c1 e3 16                           	shl rbx, 0x16
0x1bfe1:   81 e3 00 00 00 04                     	and ebx, 0x4000000
0x1bfe7:   49 09 db                              	or r11, rbx
0x1bfea:   48 89 d3                              	mov rbx, rdx
0x1bfed:   48 c1 eb 02                           	shr rbx, 2
0x1bff1:   81 e3 00 00 00 02                     	and ebx, 0x2000000
0x1bff7:   49 09 db                              	or r11, rbx
0x1bffa:   48 8d 1c 12                           	lea rbx, [rdx + rdx]
0x1bffe:   81 e3 00 00 00 01                     	and ebx, 0x1000000
0x1c004:   49 09 db                              	or r11, rbx
0x1c007:   48 89 d3                              	mov rbx, rdx
0x1c00a:   48 c1 e3 10                           	shl rbx, 0x10
0x1c00e:   81 e3 00 00 20 00                     	and ebx, 0x200000
0x1c014:   49 09 db                              	or r11, rbx
0x1c017:   49 89 d2                              	mov r10, rdx
0x1c01a:   49 c1 e2 0b                           	shl r10, 0xb
0x1c01e:   41 81 e2 00 00 10 00                  	and r10d, 0x100000
0x1c025:   4d 09 d3                              	or r11, r10
0x1c028:   4c 8d 14 d5 00 00 00 00               	lea r10, [rdx*8]
0x1c030:   41 81 e2 00 00 08 00                  	and r10d, 0x80000
0x1c037:   4d 09 d3                              	or r11, r10
0x1c03a:   49 89 d2                              	mov r10, rdx
0x1c03d:   49 c1 ea 06                           	shr r10, 6
0x1c041:   41 81 e2 00 00 04 00                  	and r10d, 0x40000
0x1c048:   4d 09 d3                              	or r11, r10
0x1c04b:   4d 89 ca                              	mov r10, r9
0x1c04e:   41 81 e2 00 00 02 00                  	and r10d, 0x20000
0x1c055:   4d 89 d9                              	mov r9, r11
0x1c058:   4d 09 d1                              	or r9, r10
0x1c05b:   49 89 d2                              	mov r10, rdx
0x1c05e:   49 c1 ea 04                           	shr r10, 4
0x1c062:   41 81 e2 00 00 01 00                  	and r10d, 0x10000
0x1c069:   4d 09 d1                              	or r9, r10
0x1c06c:   49 89 c2                              	mov r10, rax
0x1c06f:   49 c1 ea 02                           	shr r10, 2
0x1c073:   41 81 e2 00 20 00 00                  	and r10d, 0x2000
0x1c07a:   4d 09 d1                              	or r9, r10
0x1c07d:   49 89 c2                              	mov r10, rax
0x1c080:   49 c1 e2 08                           	shl r10, 8
0x1c084:   41 81 e2 00 10 00 00                  	and r10d, 0x1000
0x1c08b:   4d 09 d1                              	or r9, r10
0x1c08e:   4d 89 c2                              	mov r10, r8
0x1c091:   41 81 e2 08 08 00 00                  	and r10d, 0x808
0x1c098:   4d 89 c8                              	mov r8, r9
0x1c09b:   4d 09 d0                              	or r8, r10
0x1c09e:   49 89 c2                              	mov r10, rax
0x1c0a1:   49 c1 ea 09                           	shr r10, 9
0x1c0a5:   41 81 e2 00 04 00 00                  	and r10d, 0x400
0x1c0ac:   4d 09 d0                              	or r8, r10
0x1c0af:   49 89 c1                              	mov r9, rax
0x1c0b2:   49 c1 e1 07                           	shl r9, 7
0x1c0b6:   41 81 e1 00 01 00 00                  	and r9d, 0x100
0x1c0bd:   4d 09 c8                              	or r8, r9
0x1c0c0:   49 89 c1                              	mov r9, rax
0x1c0c3:   49 c1 e9 07                           	shr r9, 7
0x1c0c7:   41 83 e1 20                           	and r9d, 0x20
0x1c0cb:   4d 09 c8                              	or r8, r9
0x1c0ce:   49 89 f1                              	mov r9, rsi
0x1c0d1:   41 83 e1 11                           	and r9d, 0x11
0x1c0d5:   4c 89 c6                              	mov rsi, r8
0x1c0d8:   4c 09 ce                              	or rsi, r9
; data inside code section at 0x1c0db -- 0x1c0e0
0x1c0db:   4c 8d 0c 85 00                                     |L....           |
; function: des_setkey_enc at 0x1c0e0 -- 0x1c0f1
0x1c0e0:   00 00                                 	add byte ptr [rax], al
0x1c0e2:   00 41 83                              	add byte ptr [rcx - 0x7d], al
0x1c0e5:   e1 04                                 	loope 0x1c0eb <des_setkey_enc+0xb>
0x1c0e7:   4c 09 ce                              	or rsi, r9
; data inside code section at 0x1c0ea -- 0x1c0eb
0x1c0ea:   49                                                 |I               |
0x1c0eb:   89 c0                                 	mov eax, eax
0x1c0ed:   49 c1 e8 15                           	shr r8, 0x15
; data inside code section at 0x1c0f1 -- 0x1c0f4
0x1c0f1:   41 83 e0                                           |A..             |
; function: des_setkey_dec at 0x1c0f4 -- 0x1c110
0x1c0f4:   02 4c 09 c6                           	add cl, byte ptr [rcx + rcx - 0x3a]
0x1c0f8:   48 89 77 08                           	mov qword ptr [rdi + 8], rsi
0x1c0fc:   83 c1 01                              	add ecx, 1
0x1c0ff:   83 f9 10                              	cmp ecx, 0x10
0x1c102:   74 09                                 	je 0x1c10d <des_setkey_dec+0x19>
0x1c104:   48 83 c7 10                           	add rdi, 0x10
0x1c108:   e9 d2 fc ff ff                        	jmp 0x1bddf
0x1c10d:   5b                                    	pop rbx
0x1c10e:   c9                                    	leave 
0x1c10f:   c3                                    	ret 
; function: des_setkey_enc at 0x1c110 -- 0x1c124
0x1c110:   55                                    	push rbp
0x1c111:   48 89 e5                              	mov rbp, rsp
0x1c114:   e8 d7 2a 02 00                        	call 0x3ebf0 <mcount>
0x1c119:   48 83 c7 08                           	add rdi, 8
0x1c11d:   e8 c2 fa ff ff                        	call 0x1bbe4 <des_setkey>
0x1c122:   c9                                    	leave 
0x1c123:   c3                                    	ret 
; function: des_setkey_dec at 0x1c124 -- 0x1c152
0x1c124:   55                                    	push rbp
0x1c125:   48 89 e5                              	mov rbp, rsp
0x1c128:   53                                    	push rbx
0x1c129:   e8 c2 2a 02 00                        	call 0x3ebf0 <mcount>
0x1c12e:   48 89 fb                              	mov rbx, rdi
0x1c131:   48 8d 7f 08                           	lea rdi, [rdi + 8]
0x1c135:   e8 aa fa ff ff                        	call 0x1bbe4 <des_setkey>
0x1c13a:   48 89 da                              	mov rdx, rbx
0x1c13d:   b8 00 00 00 00                        	mov eax, 0
0x1c142:   48 8b 4a 08                           	mov rcx, qword ptr [rdx + 8]
0x1c146:   48 8b b4 03 f8 00 00 00               	mov rsi, qword ptr [rbx + rax + 0xf8]
0x1c14e:   48 89 72 08                           	mov qword ptr [rdx + 8], rsi
; data inside code section at 0x1c152 -- 0x1c153
0x1c152:   48                                                 |H               |
; function: des_crypt_ecb at 0x1c153 -- 0x1c183
0x1c153:   89 8c 03 f8 00 00 00                  	mov dword ptr [rbx + rax + 0xf8], ecx
0x1c15a:   48 8b 4a 10                           	mov rcx, qword ptr [rdx + 0x10]
0x1c15e:   48 8b b4 03 00 01 00 00               	mov rsi, qword ptr [rbx + rax + 0x100]
0x1c166:   48 89 72 10                           	mov qword ptr [rdx + 0x10], rsi
0x1c16a:   48 89 8c 03 00 01 00 00               	mov qword ptr [rbx + rax + 0x100], rcx
0x1c172:   48 83 c2 10                           	add rdx, 0x10
0x1c176:   48 83 e8 10                           	sub rax, 0x10
0x1c17a:   48 83 f8 80                           	cmp rax, -0x80
0x1c17e:   75 c2                                 	jne 0x1c142
0x1c180:   5b                                    	pop rbx
0x1c181:   c9                                    	leave 
0x1c182:   c3                                    	ret 
; function: des_crypt_ecb at 0x1c183 -- 0x1c4a9
0x1c183:   55                                    	push rbp
0x1c184:   48 89 e5                              	mov rbp, rsp
0x1c187:   41 54                                 	push r12
0x1c189:   53                                    	push rbx
0x1c18a:   e8 61 2a 02 00                        	call 0x3ebf0 <mcount>
0x1c18f:   49 89 d4                              	mov r12, rdx
0x1c192:   48 83 c7 08                           	add rdi, 8
0x1c196:   b8 00 00 00 00                        	mov eax, 0
0x1c19b:   8a 46 03                              	mov al, byte ptr [rsi + 3]
0x1c19e:   0f b6 5e 02                           	movzx ebx, byte ptr [rsi + 2]
0x1c1a2:   88 dc                                 	mov ah, bl
0x1c1a4:   0f b6 5e 01                           	movzx ebx, byte ptr [rsi + 1]
0x1c1a8:   48 c1 e3 10                           	shl rbx, 0x10
0x1c1ac:   48 25 ff ff 00 ff                     	and rax, 0xffffffffff00ffff
0x1c1b2:   48 09 d8                              	or rax, rbx
0x1c1b5:   0f b6 1e                              	movzx ebx, byte ptr [rsi]
0x1c1b8:   48 c1 e3 18                           	shl rbx, 0x18
0x1c1bc:   49 b8 ff ff ff 00 ff ff ff ff         	movabs r8, 0xffffffff00ffffff
0x1c1c6:   4c 21 c0                              	and rax, r8
0x1c1c9:   48 09 d8                              	or rax, rbx
0x1c1cc:   bb 00 00 00 00                        	mov ebx, 0
0x1c1d1:   8a 5e 07                              	mov bl, byte ptr [rsi + 7]
0x1c1d4:   44 0f b6 4e 06                        	movzx r9d, byte ptr [rsi + 6]
0x1c1d9:   4c 89 ca                              	mov rdx, r9
0x1c1dc:   88 d7                                 	mov bh, dl
0x1c1de:   44 0f b6 4e 05                        	movzx r9d, byte ptr [rsi + 5]
0x1c1e3:   49 c1 e1 10                           	shl r9, 0x10
0x1c1e7:   48 81 e3 ff ff 00 ff                  	and rbx, 0xffffffffff00ffff
0x1c1ee:   4c 09 cb                              	or rbx, r9
0x1c1f1:   0f b6 76 04                           	movzx esi, byte ptr [rsi + 4]
0x1c1f5:   48 c1 e6 18                           	shl rsi, 0x18
0x1c1f9:   4c 21 c3                              	and rbx, r8
0x1c1fc:   48 09 f3                              	or rbx, rsi
0x1c1ff:   48 89 c6                              	mov rsi, rax
0x1c202:   48 c1 ee 04                           	shr rsi, 4
0x1c206:   48 31 de                              	xor rsi, rbx
0x1c209:   81 e6 0f 0f 0f 0f                     	and esi, 0xf0f0f0f
0x1c20f:   48 31 f3                              	xor rbx, rsi
0x1c212:   48 c1 e6 04                           	shl rsi, 4
0x1c216:   48 31 f0                              	xor rax, rsi
0x1c219:   48 89 c6                              	mov rsi, rax
0x1c21c:   48 c1 ee 10                           	shr rsi, 0x10
0x1c220:   48 31 de                              	xor rsi, rbx
0x1c223:   81 e6 ff ff 00 00                     	and esi, 0xffff
0x1c229:   48 31 f3                              	xor rbx, rsi
0x1c22c:   48 c1 e6 10                           	shl rsi, 0x10
0x1c230:   48 31 f0                              	xor rax, rsi
0x1c233:   48 89 de                              	mov rsi, rbx
0x1c236:   48 c1 ee 02                           	shr rsi, 2
0x1c23a:   48 31 c6                              	xor rsi, rax
0x1c23d:   81 e6 33 33 33 33                     	and esi, 0x33333333
0x1c243:   48 31 f0                              	xor rax, rsi
0x1c246:   48 c1 e6 02                           	shl rsi, 2
0x1c24a:   48 31 f3                              	xor rbx, rsi
0x1c24d:   48 89 de                              	mov rsi, rbx
0x1c250:   48 c1 ee 08                           	shr rsi, 8
0x1c254:   48 31 c6                              	xor rsi, rax
0x1c257:   81 e6 ff 00 ff 00                     	and esi, 0xff00ff
0x1c25d:   48 31 f0                              	xor rax, rsi
0x1c260:   48 c1 e6 08                           	shl rsi, 8
0x1c264:   48 31 f3                              	xor rbx, rsi
0x1c267:   49 89 d8                              	mov r8, rbx
0x1c26a:   49 c1 e8 1f                           	shr r8, 0x1f
0x1c26e:   48 01 db                              	add rbx, rbx
0x1c271:   49 09 d8                              	or r8, rbx
0x1c274:   41 83 e0 ff                           	and r8d, 0xffffffff
0x1c278:   4c 89 c6                              	mov rsi, r8
0x1c27b:   48 31 c6                              	xor rsi, rax
0x1c27e:   81 e6 aa aa aa aa                     	and esi, 0xaaaaaaaa
0x1c284:   49 31 f0                              	xor r8, rsi
0x1c287:   48 31 f0                              	xor rax, rsi
0x1c28a:   48 89 c6                              	mov rsi, rax
0x1c28d:   48 c1 ee 1f                           	shr rsi, 0x1f
0x1c291:   48 01 c0                              	add rax, rax
0x1c294:   48 09 c6                              	or rsi, rax
0x1c297:   83 e6 ff                              	and esi, 0xffffffff
0x1c29a:   b8 00 00 00 00                        	mov eax, 0
0x1c29f:   4d 89 c2                              	mov r10, r8
0x1c2a2:   4c 33 14 07                           	xor r10, qword ptr [rdi + rax]
0x1c2a6:   4d 89 c3                              	mov r11, r8
0x1c2a9:   49 c1 eb 04                           	shr r11, 4
0x1c2ad:   4d 89 c1                              	mov r9, r8
0x1c2b0:   49 c1 e1 1c                           	shl r9, 0x1c
0x1c2b4:   4d 09 d9                              	or r9, r11
0x1c2b7:   4c 33 4c 07 08                        	xor r9, qword ptr [rdi + rax + 8]
0x1c2bc:   4d 89 d3                              	mov r11, r10
0x1c2bf:   41 83 e3 3f                           	and r11d, 0x3f
0x1c2c3:   4a 33 b4 d9 00 0e 00 00               	xor rsi, qword ptr [rcx + r11*8 + 0xe00]
0x1c2cb:   4d 89 d3                              	mov r11, r10
0x1c2ce:   49 c1 eb 08                           	shr r11, 8
0x1c2d2:   41 83 e3 3f                           	and r11d, 0x3f
0x1c2d6:   4a 33 b4 d9 00 0a 00 00               	xor rsi, qword ptr [rcx + r11*8 + 0xa00]
0x1c2de:   4d 89 d3                              	mov r11, r10
0x1c2e1:   49 c1 eb 10                           	shr r11, 0x10
0x1c2e5:   41 83 e3 3f                           	and r11d, 0x3f
0x1c2e9:   4a 33 b4 d9 00 06 00 00               	xor rsi, qword ptr [rcx + r11*8 + 0x600]
0x1c2f1:   49 c1 ea 18                           	shr r10, 0x18
0x1c2f5:   41 83 e2 3f                           	and r10d, 0x3f
0x1c2f9:   4a 33 b4 d1 00 02 00 00               	xor rsi, qword ptr [rcx + r10*8 + 0x200]
0x1c301:   4d 89 ca                              	mov r10, r9
0x1c304:   41 83 e2 3f                           	and r10d, 0x3f
0x1c308:   4a 33 b4 d1 00 0c 00 00               	xor rsi, qword ptr [rcx + r10*8 + 0xc00]
0x1c310:   4d 89 ca                              	mov r10, r9
0x1c313:   49 c1 ea 08                           	shr r10, 8
0x1c317:   41 83 e2 3f                           	and r10d, 0x3f
0x1c31b:   4a 33 b4 d1 00 08 00 00               	xor rsi, qword ptr [rcx + r10*8 + 0x800]
0x1c323:   4d 89 ca                              	mov r10, r9
0x1c326:   49 c1 ea 10                           	shr r10, 0x10
0x1c32a:   41 83 e2 3f                           	and r10d, 0x3f
0x1c32e:   4a 33 b4 d1 00 04 00 00               	xor rsi, qword ptr [rcx + r10*8 + 0x400]
0x1c336:   49 c1 e9 18                           	shr r9, 0x18
0x1c33a:   41 83 e1 3f                           	and r9d, 0x3f
0x1c33e:   4a 33 34 c9                           	xor rsi, qword ptr [rcx + r9*8]
0x1c342:   49 89 f2                              	mov r10, rsi
0x1c345:   4c 33 54 07 10                        	xor r10, qword ptr [rdi + rax + 0x10]
0x1c34a:   49 89 f3                              	mov r11, rsi
0x1c34d:   49 c1 eb 04                           	shr r11, 4
0x1c351:   49 89 f1                              	mov r9, rsi
0x1c354:   49 c1 e1 1c                           	shl r9, 0x1c
0x1c358:   4d 09 d9                              	or r9, r11
0x1c35b:   4c 33 4c 07 18                        	xor r9, qword ptr [rdi + rax + 0x18]
0x1c360:   4d 89 d3                              	mov r11, r10
0x1c363:   41 83 e3 3f                           	and r11d, 0x3f
0x1c367:   4e 33 84 d9 00 0e 00 00               	xor r8, qword ptr [rcx + r11*8 + 0xe00]
0x1c36f:   4d 89 d3                              	mov r11, r10
0x1c372:   49 c1 eb 08                           	shr r11, 8
0x1c376:   41 83 e3 3f                           	and r11d, 0x3f
0x1c37a:   4e 33 84 d9 00 0a 00 00               	xor r8, qword ptr [rcx + r11*8 + 0xa00]
0x1c382:   4d 89 d3                              	mov r11, r10
0x1c385:   49 c1 eb 10                           	shr r11, 0x10
0x1c389:   41 83 e3 3f                           	and r11d, 0x3f
0x1c38d:   4e 33 84 d9 00 06 00 00               	xor r8, qword ptr [rcx + r11*8 + 0x600]
0x1c395:   49 c1 ea 18                           	shr r10, 0x18
0x1c399:   41 83 e2 3f                           	and r10d, 0x3f
0x1c39d:   4e 33 84 d1 00 02 00 00               	xor r8, qword ptr [rcx + r10*8 + 0x200]
0x1c3a5:   4d 89 ca                              	mov r10, r9
0x1c3a8:   41 83 e2 3f                           	and r10d, 0x3f
0x1c3ac:   4e 33 84 d1 00 0c 00 00               	xor r8, qword ptr [rcx + r10*8 + 0xc00]
0x1c3b4:   4d 89 ca                              	mov r10, r9
0x1c3b7:   49 c1 ea 08                           	shr r10, 8
0x1c3bb:   41 83 e2 3f                           	and r10d, 0x3f
0x1c3bf:   4e 33 84 d1 00 08 00 00               	xor r8, qword ptr [rcx + r10*8 + 0x800]
0x1c3c7:   4d 89 ca                              	mov r10, r9
0x1c3ca:   49 c1 ea 10                           	shr r10, 0x10
0x1c3ce:   41 83 e2 3f                           	and r10d, 0x3f
0x1c3d2:   4e 33 84 d1 00 04 00 00               	xor r8, qword ptr [rcx + r10*8 + 0x400]
0x1c3da:   49 c1 e9 18                           	shr r9, 0x18
0x1c3de:   41 83 e1 3f                           	and r9d, 0x3f
0x1c3e2:   4e 33 04 c9                           	xor r8, qword ptr [rcx + r9*8]
0x1c3e6:   48 83 c0 20                           	add rax, 0x20
0x1c3ea:   48 3d 00 01 00 00                     	cmp rax, 0x100
0x1c3f0:   0f 85 a9 fe ff ff                     	jne 0x1c29f <des_crypt_ecb+0x11c>
0x1c3f6:   4c 89 c1                              	mov rcx, r8
0x1c3f9:   48 d1 e9                              	shr rcx, 1
0x1c3fc:   49 c1 e0 1f                           	shl r8, 0x1f
0x1c400:   4c 09 c1                              	or rcx, r8
0x1c403:   83 e1 ff                              	and ecx, 0xffffffff
0x1c406:   48 89 c8                              	mov rax, rcx
0x1c409:   48 31 f0                              	xor rax, rsi
0x1c40c:   25 aa aa aa aa                        	and eax, 0xaaaaaaaa
0x1c411:   48 31 c1                              	xor rcx, rax
0x1c414:   48 31 c6                              	xor rsi, rax
0x1c417:   48 89 f0                              	mov rax, rsi
0x1c41a:   48 d1 e8                              	shr rax, 1
0x1c41d:   48 c1 e6 1f                           	shl rsi, 0x1f
0x1c421:   48 09 c6                              	or rsi, rax
0x1c424:   48 89 f0                              	mov rax, rsi
0x1c427:   83 e0 ff                              	and eax, 0xffffffff
0x1c42a:   48 89 c3                              	mov rbx, rax
0x1c42d:   48 c1 eb 08                           	shr rbx, 8
0x1c431:   48 31 cb                              	xor rbx, rcx
0x1c434:   81 e3 ff 00 ff 00                     	and ebx, 0xff00ff
0x1c43a:   48 31 d9                              	xor rcx, rbx
0x1c43d:   48 c1 e3 08                           	shl rbx, 8
0x1c441:   48 31 c3                              	xor rbx, rax
0x1c444:   48 89 d8                              	mov rax, rbx
0x1c447:   48 c1 e8 02                           	shr rax, 2
0x1c44b:   48 31 c8                              	xor rax, rcx
0x1c44e:   25 33 33 33 33                        	and eax, 0x33333333
0x1c453:   48 31 c1                              	xor rcx, rax
0x1c456:   48 c1 e0 02                           	shl rax, 2
0x1c45a:   48 31 c3                              	xor rbx, rax
0x1c45d:   48 89 ce                              	mov rsi, rcx
0x1c460:   48 c1 ee 10                           	shr rsi, 0x10
0x1c464:   48 31 de                              	xor rsi, rbx
0x1c467:   81 e6 ff ff 00 00                     	and esi, 0xffff
0x1c46d:   48 31 f3                              	xor rbx, rsi
0x1c470:   48 c1 e6 10                           	shl rsi, 0x10
0x1c474:   48 31 f1                              	xor rcx, rsi
0x1c477:   48 89 c8                              	mov rax, rcx
0x1c47a:   48 c1 e8 04                           	shr rax, 4
0x1c47e:   48 31 d8                              	xor rax, rbx
0x1c481:   25 0f 0f 0f 0f                        	and eax, 0xf0f0f0f
0x1c486:   48 89 c6                              	mov rsi, rax
0x1c489:   48 c1 e6 04                           	shl rsi, 4
0x1c48d:   48 31 f1                              	xor rcx, rsi
0x1c490:   41 88 4c 24 03                        	mov byte ptr [r12 + 3], cl
0x1c495:   0f b6 f5                              	movzx esi, ch
0x1c498:   41 88 74 24 02                        	mov byte ptr [r12 + 2], sil
0x1c49d:   48 89 ce                              	mov rsi, rcx
0x1c4a0:   48 c1 ee 10                           	shr rsi, 0x10
0x1c4a4:   41 88 74 24 01                        	mov byte ptr [r12 + 1], sil
; data inside code section at 0x1c4a9 -- 0x1c4ab
0x1c4a9:   48 c1                                              |H.              |
; function: des_crypt_ecb_Multi at 0x1c4ab -- 0x1c4b0
0x1c4ab:   e9 18 41 88 0c                        	jmp 0xc8a05c8 <function_c8a05c8>
; function: function_1c4b0 at 0x1c4b0 -- 0x1c4db
0x1c4b0:   24 48                                 	and al, 0x48
0x1c4b2:   31 d8                                 	xor eax, ebx
0x1c4b4:   41 88 44 24 07                        	mov byte ptr [r12 + 7], al
0x1c4b9:   0f b6 cc                              	movzx ecx, ah
0x1c4bc:   41 88 4c 24 06                        	mov byte ptr [r12 + 6], cl
0x1c4c1:   48 89 c1                              	mov rcx, rax
0x1c4c4:   48 c1 e9 10                           	shr rcx, 0x10
0x1c4c8:   41 88 4c 24 05                        	mov byte ptr [r12 + 5], cl
0x1c4cd:   48 c1 e8 18                           	shr rax, 0x18
0x1c4d1:   41 88 44 24 04                        	mov byte ptr [r12 + 4], al
0x1c4d6:   5b                                    	pop rbx
0x1c4d7:   41 5c                                 	pop r12
0x1c4d9:   c9                                    	leave 
0x1c4da:   c3                                    	ret 
; function: des_crypt_ecb_Multi at 0x1c4db -- 0x1c50b
0x1c4db:   55                                    	push rbp
0x1c4dc:   48 89 e5                              	mov rbp, rsp
0x1c4df:   41 57                                 	push r15
0x1c4e1:   41 56                                 	push r14
0x1c4e3:   41 55                                 	push r13
0x1c4e5:   41 54                                 	push r12
0x1c4e7:   53                                    	push rbx
0x1c4e8:   48 83 ec 30                           	sub rsp, 0x30
0x1c4ec:   e8 ff 26 02 00                        	call 0x3ebf0 <mcount>
0x1c4f1:   44 89 45 ac                           	mov dword ptr [rbp - 0x54], r8d
0x1c4f5:   45 85 c0                              	test r8d, r8d
0x1c4f8:   0f 8e ce 03 00 00                     	jle 0x1c8cc
0x1c4fe:   4c 8d 4f 08                           	lea r9, [rdi + 8]
0x1c502:   41 bb 00 00 00 00                     	mov r11d, 0
0x1c508:   49 89 ca                              	mov r10, rcx
; data inside code section at 0x1c50b -- 0x1c5b5
0x1c50b:   46 8d 24 dd 00 00 00 00  4d 63 e4 49 8d 4c 24 03   |F.$.....Mc.I.L$.|
0x1c51b:   48 89 4d b0 8a 04 0e 4d  8d 74 24 02 42 0f b6 3c   |H.M....M.t$.B..<|
0x1c52b:   36 48 89 f9 88 cc 49 8d  7c 24 01 48 89 7d b8 44   |6H....I.|$.H.}.D|
0x1c53b:   0f b6 04 3e 49 c1 e0 10  48 25 ff ff 00 ff 4c 09   |...>I...H%....L.|
0x1c54b:   c0 46 0f b6 04 26 49 c1  e0 18 48 b9 ff ff ff 00   |.F...&I...H.....|
0x1c55b:   ff ff ff ff 48 21 c8 4c  09 c0 49 8d 7c 24 07 48   |....H!.L..I.|$.H|
0x1c56b:   89 7d c0 8a 1c 3e 4d 8d  6c 24 06 42 0f b6 3c 2e   |.}...>M.l$.B..<.|
0x1c57b:   48 89 f9 88 cf 49 8d 7c  24 05 48 89 7d c8 0f b6   |H....I.|$.H.}...|
0x1c58b:   3c 3e 48 c1 e7 10 48 81  e3 ff ff 00 ff 48 09 fb   |<>H...H......H..|
0x1c59b:   49 8d 4c 24 04 48 89 4d  d0 0f b6 3c 0e 48 c1 e7   |I.L$.H.M...<.H..|
0x1c5ab:   18 48 b9 ff ff ff 00 ff  ff ff                     |.H........      |
; function: function_1c5b5 at 0x1c5b5 -- 0x1c5b9
0x1c5b5:   ff 48 21                              	dec dword ptr [rax + 0x21]
0x1c5b8:   cb                                    	retf 
; data inside code section at 0x1c5b9 -- 0x1c5d3
0x1c5b9:   48 09 fb 83 e3 ff 48 89  c7 83 e7 ff 48 89 f8 48   |H.....H.....H..H|
0x1c5c9:   c1 e8 04 48 31 d8 25 0f  0f 0f                     |...H1.%...      |
; function: function_1c5d3 at 0x1c5d3 -- 0x1c5d7
0x1c5d3:   0f 48 31                              	cmovs esi, dword ptr [rcx]
0x1c5d6:   c3                                    	ret 
; data inside code section at 0x1c5d7 -- 0x1c612
0x1c5d7:   48 c1 e0 04 48 31 f8 48  89 c7 48 c1 ef 10 48 31   |H...H1.H..H...H1|
0x1c5e7:   df 81 e7 ff ff 00 00 48  31 fb 48 c1 e7 10 48 31   |.......H1.H...H1|
0x1c5f7:   f8 49 89 d8 49 c1 e8 02  49 31 c0 41 81 e0 33 33   |.I..I...I1.A..33|
0x1c607:   33 33 4c 31 c0 49 c1 e0  02 4c 31                  |33L1.I...L1     |
; function: function_1c612 at 0x1c612 -- 0x1c613
0x1c612:   c3                                    	ret 
; data inside code section at 0x1c613 -- 0x1c643
0x1c613:   48 89 df 48 c1 ef 08 48  31 c7 81 e7 ff 00 ff 00   |H..H...H1.......|
0x1c623:   48 31 f8 48 c1 e7 08 48  31 fb 49 89 d8 49 c1 e8   |H1.H...H1.I..I..|
0x1c633:   1f 48 8d 3c 1b 4c 09 c7  83 e7 ff 48 89 fb 48 31   |.H.<.L.....H..H1|
; function: function_1c643 at 0x1c643 -- 0x1c644
0x1c643:   c3                                    	ret 
; data inside code section at 0x1c644 -- 0x1c64c
0x1c644:   81 e3 aa aa aa aa 48 31                            |......H1        |
; function: function_1c64c at 0x1c64c -- 0x1c653
0x1c64c:   df 48 31                              	fisttp word ptr [rax + 0x31]
0x1c64f:   d8 48 89                              	fmul dword ptr [rax - 0x77]
0x1c652:   c3                                    	ret 
; data inside code section at 0x1c653 -- 0x1c655
0x1c653:   48 c1                                              |H.              |
; function: function_1c655 at 0x1c655 -- 0x1c8ab
0x1c655:   eb 1f                                 	jmp 0x1c676 <function_1c655+0x21>
0x1c657:   48 01 c0                              	add rax, rax
0x1c65a:   48 09 d8                              	or rax, rbx
0x1c65d:   48 89 c3                              	mov rbx, rax
0x1c660:   83 e3 ff                              	and ebx, 0xffffffff
0x1c663:   b8 00 00 00 00                        	mov eax, 0
0x1c668:   4c 89 d1                              	mov rcx, r10
0x1c66b:   49 89 fa                              	mov r10, rdi
0x1c66e:   4d 33 14 01                           	xor r10, qword ptr [r9 + rax]
0x1c672:   49 89 ff                              	mov r15, rdi
; data inside code section at 0x1c675 -- 0x1c676
0x1c675:   49                                                 |I               |
0x1c676:   c1 ef 04                              	shr edi, 4
0x1c679:   49 89 f8                              	mov r8, rdi
0x1c67c:   49 c1 e0 1c                           	shl r8, 0x1c
0x1c680:   4d 09 f8                              	or r8, r15
0x1c683:   4d 33 44 01 08                        	xor r8, qword ptr [r9 + rax + 8]
0x1c688:   4d 89 d7                              	mov r15, r10
0x1c68b:   41 83 e7 3f                           	and r15d, 0x3f
0x1c68f:   4a 33 9c f9 00 0e 00 00               	xor rbx, qword ptr [rcx + r15*8 + 0xe00]
0x1c697:   4d 89 d7                              	mov r15, r10
0x1c69a:   49 c1 ef 08                           	shr r15, 8
0x1c69e:   41 83 e7 3f                           	and r15d, 0x3f
0x1c6a2:   4a 33 9c f9 00 0a 00 00               	xor rbx, qword ptr [rcx + r15*8 + 0xa00]
0x1c6aa:   4d 89 d7                              	mov r15, r10
0x1c6ad:   49 c1 ef 10                           	shr r15, 0x10
0x1c6b1:   41 83 e7 3f                           	and r15d, 0x3f
0x1c6b5:   4a 33 9c f9 00 06 00 00               	xor rbx, qword ptr [rcx + r15*8 + 0x600]
0x1c6bd:   49 c1 ea 18                           	shr r10, 0x18
0x1c6c1:   41 83 e2 3f                           	and r10d, 0x3f
0x1c6c5:   4a 33 9c d1 00 02 00 00               	xor rbx, qword ptr [rcx + r10*8 + 0x200]
0x1c6cd:   4d 89 c2                              	mov r10, r8
0x1c6d0:   41 83 e2 3f                           	and r10d, 0x3f
0x1c6d4:   4a 33 9c d1 00 0c 00 00               	xor rbx, qword ptr [rcx + r10*8 + 0xc00]
0x1c6dc:   4d 89 c2                              	mov r10, r8
0x1c6df:   49 c1 ea 08                           	shr r10, 8
0x1c6e3:   41 83 e2 3f                           	and r10d, 0x3f
0x1c6e7:   4a 33 9c d1 00 08 00 00               	xor rbx, qword ptr [rcx + r10*8 + 0x800]
0x1c6ef:   4d 89 c2                              	mov r10, r8
0x1c6f2:   49 c1 ea 10                           	shr r10, 0x10
0x1c6f6:   41 83 e2 3f                           	and r10d, 0x3f
0x1c6fa:   4a 33 9c d1 00 04 00 00               	xor rbx, qword ptr [rcx + r10*8 + 0x400]
0x1c702:   49 c1 e8 18                           	shr r8, 0x18
0x1c706:   41 83 e0 3f                           	and r8d, 0x3f
0x1c70a:   4a 33 1c c1                           	xor rbx, qword ptr [rcx + r8*8]
0x1c70e:   49 89 da                              	mov r10, rbx
0x1c711:   4d 33 54 01 10                        	xor r10, qword ptr [r9 + rax + 0x10]
0x1c716:   49 89 df                              	mov r15, rbx
0x1c719:   49 c1 ef 04                           	shr r15, 4
0x1c71d:   49 89 d8                              	mov r8, rbx
0x1c720:   49 c1 e0 1c                           	shl r8, 0x1c
0x1c724:   4d 09 f8                              	or r8, r15
0x1c727:   4d 33 44 01 18                        	xor r8, qword ptr [r9 + rax + 0x18]
0x1c72c:   4d 89 d7                              	mov r15, r10
0x1c72f:   41 83 e7 3f                           	and r15d, 0x3f
0x1c733:   4a 33 bc f9 00 0e 00 00               	xor rdi, qword ptr [rcx + r15*8 + 0xe00]
0x1c73b:   4d 89 d7                              	mov r15, r10
0x1c73e:   49 c1 ef 08                           	shr r15, 8
0x1c742:   41 83 e7 3f                           	and r15d, 0x3f
0x1c746:   4a 33 bc f9 00 0a 00 00               	xor rdi, qword ptr [rcx + r15*8 + 0xa00]
0x1c74e:   4d 89 d7                              	mov r15, r10
0x1c751:   49 c1 ef 10                           	shr r15, 0x10
0x1c755:   41 83 e7 3f                           	and r15d, 0x3f
0x1c759:   4a 33 bc f9 00 06 00 00               	xor rdi, qword ptr [rcx + r15*8 + 0x600]
0x1c761:   49 c1 ea 18                           	shr r10, 0x18
0x1c765:   41 83 e2 3f                           	and r10d, 0x3f
0x1c769:   4a 33 bc d1 00 02 00 00               	xor rdi, qword ptr [rcx + r10*8 + 0x200]
0x1c771:   4d 89 c2                              	mov r10, r8
0x1c774:   41 83 e2 3f                           	and r10d, 0x3f
0x1c778:   4a 33 bc d1 00 0c 00 00               	xor rdi, qword ptr [rcx + r10*8 + 0xc00]
0x1c780:   4d 89 c2                              	mov r10, r8
0x1c783:   49 c1 ea 08                           	shr r10, 8
0x1c787:   41 83 e2 3f                           	and r10d, 0x3f
0x1c78b:   4a 33 bc d1 00 08 00 00               	xor rdi, qword ptr [rcx + r10*8 + 0x800]
0x1c793:   4d 89 c2                              	mov r10, r8
0x1c796:   49 c1 ea 10                           	shr r10, 0x10
0x1c79a:   41 83 e2 3f                           	and r10d, 0x3f
0x1c79e:   4a 33 bc d1 00 04 00 00               	xor rdi, qword ptr [rcx + r10*8 + 0x400]
0x1c7a6:   49 c1 e8 18                           	shr r8, 0x18
0x1c7aa:   41 83 e0 3f                           	and r8d, 0x3f
0x1c7ae:   4a 33 3c c1                           	xor rdi, qword ptr [rcx + r8*8]
0x1c7b2:   48 83 c0 20                           	add rax, 0x20
0x1c7b6:   48 3d 00 01 00 00                     	cmp rax, 0x100
0x1c7bc:   0f 85 a9 fe ff ff                     	jne 0x1c66b <function_1c655+0x16>
0x1c7c2:   49 89 ca                              	mov r10, rcx
0x1c7c5:   48 89 f8                              	mov rax, rdi
0x1c7c8:   48 d1 e8                              	shr rax, 1
0x1c7cb:   48 c1 e7 1f                           	shl rdi, 0x1f
0x1c7cf:   48 09 c7                              	or rdi, rax
0x1c7d2:   83 e7 ff                              	and edi, 0xffffffff
0x1c7d5:   49 89 f8                              	mov r8, rdi
0x1c7d8:   49 31 d8                              	xor r8, rbx
0x1c7db:   41 81 e0 aa aa aa aa                  	and r8d, 0xaaaaaaaa
0x1c7e2:   4c 31 c7                              	xor rdi, r8
0x1c7e5:   4c 31 c3                              	xor rbx, r8
0x1c7e8:   48 89 d8                              	mov rax, rbx
0x1c7eb:   48 d1 e8                              	shr rax, 1
0x1c7ee:   49 89 d8                              	mov r8, rbx
0x1c7f1:   49 c1 e0 1f                           	shl r8, 0x1f
0x1c7f5:   49 09 c0                              	or r8, rax
0x1c7f8:   41 83 e0 ff                           	and r8d, 0xffffffff
0x1c7fc:   4c 89 c0                              	mov rax, r8
0x1c7ff:   48 c1 e8 08                           	shr rax, 8
0x1c803:   48 31 f8                              	xor rax, rdi
0x1c806:   25 ff 00 ff 00                        	and eax, 0xff00ff
0x1c80b:   48 89 c3                              	mov rbx, rax
0x1c80e:   48 31 fb                              	xor rbx, rdi
0x1c811:   48 c1 e0 08                           	shl rax, 8
0x1c815:   4c 31 c0                              	xor rax, r8
0x1c818:   48 89 c7                              	mov rdi, rax
0x1c81b:   48 c1 ef 02                           	shr rdi, 2
0x1c81f:   48 31 df                              	xor rdi, rbx
0x1c822:   81 e7 33 33 33 33                     	and edi, 0x33333333
0x1c828:   48 31 fb                              	xor rbx, rdi
0x1c82b:   48 c1 e7 02                           	shl rdi, 2
0x1c82f:   48 31 f8                              	xor rax, rdi
0x1c832:   49 89 d8                              	mov r8, rbx
0x1c835:   49 c1 e8 10                           	shr r8, 0x10
0x1c839:   49 31 c0                              	xor r8, rax
0x1c83c:   41 81 e0 ff ff 00 00                  	and r8d, 0xffff
0x1c843:   4c 31 c0                              	xor rax, r8
0x1c846:   49 c1 e0 10                           	shl r8, 0x10
0x1c84a:   4c 31 c3                              	xor rbx, r8
0x1c84d:   48 89 df                              	mov rdi, rbx
0x1c850:   48 c1 ef 04                           	shr rdi, 4
0x1c854:   48 31 c7                              	xor rdi, rax
0x1c857:   81 e7 0f 0f 0f 0f                     	and edi, 0xf0f0f0f
0x1c85d:   49 89 f8                              	mov r8, rdi
0x1c860:   49 c1 e0 04                           	shl r8, 4
0x1c864:   4c 31 c3                              	xor rbx, r8
0x1c867:   48 8b 4d b0                           	mov rcx, qword ptr [rbp - 0x50]
0x1c86b:   88 1c 0a                              	mov byte ptr [rdx + rcx], bl
0x1c86e:   0f b6 cf                              	movzx ecx, bh
0x1c871:   42 88 0c 32                           	mov byte ptr [rdx + r14], cl
0x1c875:   49 89 d8                              	mov r8, rbx
0x1c878:   49 c1 e8 10                           	shr r8, 0x10
0x1c87c:   48 8b 4d b8                           	mov rcx, qword ptr [rbp - 0x48]
0x1c880:   44 88 04 0a                           	mov byte ptr [rdx + rcx], r8b
0x1c884:   49 89 d8                              	mov r8, rbx
0x1c887:   49 c1 e8 18                           	shr r8, 0x18
0x1c88b:   46 88 04 22                           	mov byte ptr [rdx + r12], r8b
0x1c88f:   48 31 f8                              	xor rax, rdi
0x1c892:   48 8b 7d c0                           	mov rdi, qword ptr [rbp - 0x40]
0x1c896:   88 04 3a                              	mov byte ptr [rdx + rdi], al
0x1c899:   0f b6 fc                              	movzx edi, ah
0x1c89c:   42 88 3c 2a                           	mov byte ptr [rdx + r13], dil
0x1c8a0:   48 89 c7                              	mov rdi, rax
0x1c8a3:   48 c1 ef 10                           	shr rdi, 0x10
0x1c8a7:   48 8b 4d c8                           	mov rcx, qword ptr [rbp - 0x38]
; data inside code section at 0x1c8ab -- 0x1c8ac
0x1c8ab:   40                                                 |@               |
; function: Tnim_PollingThreadDelayTime at 0x1c8ac -- 0x1c8ba
0x1c8ac:   88 3c 0a                              	mov byte ptr [rdx + rcx], bh
0x1c8af:   48 89 c7                              	mov rdi, rax
0x1c8b2:   48 c1 ef 18                           	shr rdi, 0x18
0x1c8b6:   48 8b 4d d0                           	mov rcx, qword ptr [rbp - 0x30]
; data inside code section at 0x1c8ba -- 0x1c8bc
0x1c8ba:   40 88                                              |@.              |
; function: Tnim_PollingThreadOnlyCallOnce at 0x1c8bc -- 0x1c8cc
0x1c8bc:   3c 0a                                 	cmp al, 0xa
0x1c8be:   41 83 c3 01                           	add r11d, 1
0x1c8c2:   44 3b 5d ac                           	cmp r11d, dword ptr [rbp - 0x54]
0x1c8c6:   0f 85 3f fc ff ff                     	jne 0x1c50b
; data inside code section at 0x1c8cc -- 0x1c8cf
0x1c8cc:   48 83 c4                                           |H..             |
; function: Tnim_PollingThread at 0x1c8cf -- 0x1c8db
0x1c8cf:   30 5b 41                              	xor byte ptr [rbx + 0x41], bl
0x1c8d2:   5c                                    	pop rsp
0x1c8d3:   41 5d                                 	pop r13
0x1c8d5:   41 5e                                 	pop r14
0x1c8d7:   41 5f                                 	pop r15
0x1c8d9:   c9                                    	leave 
0x1c8da:   c3                                    	ret 
; data inside code section at 0x1c8db -- 0x1c8dc
0x1c8db:   90                                                 |.               |
; function: Tnim_PollingThreadDelayTime at 0x1c8dc -- 0x1c8ec
0x1c8dc:   55                                    	push rbp
0x1c8dd:   48 89 e5                              	mov rbp, rsp
0x1c8e0:   e8 0b 23 02 00                        	call 0x3ebf0 <mcount>
0x1c8e5:   e8 ae 9a fe ff                        	call 0x6398 <TC_PowerTunerDemod>
0x1c8ea:   c9                                    	leave 
0x1c8eb:   c3                                    	ret 
; function: Tnim_PollingThreadOnlyCallOnce at 0x1c8ec -- 0x1c8f5
0x1c8ec:   55                                    	push rbp
0x1c8ed:   48 89 e5                              	mov rbp, rsp
0x1c8f0:   e8 fb 22 02 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x1c8f5 -- 0x1c8f7
0x1c8f5:   0f b6                                              |..              |
; function: Tnim_IsLocked at 0x1c8f7 -- 0x1c8ff
0x1c8f7:   d2 e8                                 	shr al, cl
0x1c8f9:   8b 9a fe ff c9 c3                     	mov ebx, dword ptr [rdx - 0x3c360002]
; function: Tnim_PollingThread at 0x1c8ff -- 0x1c927
0x1c8ff:   55                                    	push rbp
0x1c900:   48 89 e5                              	mov rbp, rsp
0x1c903:   e8 e8 22 02 00                        	call 0x3ebf0 <mcount>
0x1c908:   40 0f b6 c6                           	movzx eax, sil
0x1c90c:   48 8d 04 80                           	lea rax, [rax + rax*4]
0x1c910:   48 c1 e0 04                           	shl rax, 4
0x1c914:   48 8d 94 07 60 59 00 00               	lea rdx, [rdi + rax + 0x5960]
0x1c91c:   40 0f b6 f6                           	movzx esi, sil
0x1c920:   e8 53 9a fe ff                        	call 0x6378 <TC_CurrentTSIDRead>
0x1c925:   c9                                    	leave 
0x1c926:   c3                                    	ret 
; function: Tnim_IsLocked at 0x1c927 -- 0x1c930
0x1c927:   55                                    	push rbp
0x1c928:   48 89 e5                              	mov rbp, rsp
0x1c92b:   e8 c0 22 02 00                        	call 0x3ebf0 <mcount>
; function: Tnim_ReadSNRx8 at 0x1c930 -- 0x1c960
0x1c930:   48 89 f8                              	mov rax, rdi
0x1c933:   48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0x1c93a:   0f b6 b0 30 1d 00 00                  	movzx esi, byte ptr [rax + 0x1d30]
0x1c941:   40 0f b6 c6                           	movzx eax, sil
0x1c945:   48 8d 04 80                           	lea rax, [rax + rax*4]
0x1c949:   48 c1 e0 04                           	shl rax, 4
0x1c94d:   48 8d 94 07 60 59 00 00               	lea rdx, [rdi + rax + 0x5960]
0x1c955:   40 0f b6 f6                           	movzx esi, sil
0x1c959:   e8 09 ba fe ff                        	call 0x8367 <TC_IsLocked>
0x1c95e:   c9                                    	leave 
0x1c95f:   c3                                    	ret 
; function: Tnim_ReadSNRx8 at 0x1c960 -- 0x1c969
0x1c960:   55                                    	push rbp
0x1c961:   48 89 e5                              	mov rbp, rsp
0x1c964:   e8 87 22 02 00                        	call 0x3ebf0 <mcount>
; function: Tnim_AcqInit at 0x1c969 -- 0x1c999
0x1c969:   48 89 f8                              	mov rax, rdi
0x1c96c:   48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0x1c973:   0f b6 b0 30 1d 00 00                  	movzx esi, byte ptr [rax + 0x1d30]
0x1c97a:   40 0f b6 c6                           	movzx eax, sil
0x1c97e:   48 8d 04 80                           	lea rax, [rax + rax*4]
0x1c982:   48 c1 e0 04                           	shl rax, 4
0x1c986:   48 8d 94 07 60 59 00 00               	lea rdx, [rdi + rax + 0x5960]
0x1c98e:   40 0f b6 f6                           	movzx esi, sil
0x1c992:   e8 77 ca fe ff                        	call 0x940e <TC_ReadSNR>
0x1c997:   c9                                    	leave 
0x1c998:   c3                                    	ret 
; function: Tnim_AcqInit at 0x1c999 -- 0x1c9a2
0x1c999:   55                                    	push rbp
0x1c99a:   48 89 e5                              	mov rbp, rsp
0x1c99d:   e8 4e 22 02 00                        	call 0x3ebf0 <mcount>
; function: Tnim_AcquireFrequency at 0x1c9a2 -- 0x1c9d2
0x1c9a2:   48 89 f8                              	mov rax, rdi
0x1c9a5:   48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0x1c9ac:   0f b6 b0 30 1d 00 00                  	movzx esi, byte ptr [rax + 0x1d30]
0x1c9b3:   40 0f b6 c6                           	movzx eax, sil
0x1c9b7:   48 8d 04 80                           	lea rax, [rax + rax*4]
0x1c9bb:   48 c1 e0 04                           	shl rax, 4
0x1c9bf:   48 8d 94 07 60 59 00 00               	lea rdx, [rdi + rax + 0x5960]
0x1c9c7:   40 0f b6 f6                           	movzx esi, sil
0x1c9cb:   e8 98 99 fe ff                        	call 0x6368 <TC_PollingThreadDelayTime>
0x1c9d0:   c9                                    	leave 
0x1c9d1:   c3                                    	ret 
; function: Tnim_AcquireFrequency at 0x1c9d2 -- 0x1ca20
0x1c9d2:   55                                    	push rbp
0x1c9d3:   48 89 e5                              	mov rbp, rsp
0x1c9d6:   e8 15 22 02 00                        	call 0x3ebf0 <mcount>
0x1c9db:   49 89 f8                              	mov r8, rdi
0x1c9de:   48 89 f0                              	mov rax, rsi
0x1c9e1:   89 d1                                 	mov ecx, edx
0x1c9e3:   48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0x1c9ea:   41 83 b8 70 1c 00 00 00               	cmp dword ptr [r8 + 0x1c70], 0
0x1c9f2:   75 33                                 	jne 0x1ca27
0x1c9f4:   0f b6 b7 b0 4f 00 00                  	movzx esi, byte ptr [rdi + 0x4fb0]
0x1c9fb:   c1 e6 08                              	shl esi, 8
0x1c9fe:   44 0f b6 8f af 4f 00 00               	movzx r9d, byte ptr [rdi + 0x4faf]
0x1ca06:   44 09 ce                              	or esi, r9d
0x1ca09:   0f b6 97 12 55 00 00                  	movzx edx, byte ptr [rdi + 0x5512]
0x1ca10:   c1 e2 08                              	shl edx, 8
0x1ca13:   44 0f b6 8f 11 55 00 00               	movzx r9d, byte ptr [rdi + 0x5511]
0x1ca1b:   44 09 ca                              	or edx, r9d
0x1ca1e:   31 f2                                 	xor edx, esi
; data inside code section at 0x1ca20 -- 0x1ca24
0x1ca20:   41 89 90 c0                                        |A...            |
; function: Tnim_Initialise at 0x1ca24 -- 0x1ca54
0x1ca24:   fa                                    	cli 
0x1ca25:   08 00                                 	or byte ptr [rax], al
0x1ca27:   41 0f b6 b0 30 1d 00 00               	movzx esi, byte ptr [r8 + 0x1d30]
0x1ca2f:   44 0f b6 c6                           	movzx r8d, sil
0x1ca33:   4f 8d 04 80                           	lea r8, [r8 + r8*4]
0x1ca37:   49 c1 e0 04                           	shl r8, 4
0x1ca3b:   0f b6 c9                              	movzx ecx, cl
0x1ca3e:   40 0f b6 f6                           	movzx esi, sil
0x1ca42:   4e 8d 84 07 60 59 00 00               	lea r8, [rdi + r8 + 0x5960]
0x1ca4a:   48 89 c2                              	mov rdx, rax
0x1ca4d:   e8 82 a5 fe ff                        	call 0x6fd4 <TC_SetFrequency>
0x1ca52:   c9                                    	leave 
0x1ca53:   c3                                    	ret 
; function: Tnim_Initialise at 0x1ca54 -- 0x1cad1
0x1ca54:   55                                    	push rbp
0x1ca55:   48 89 e5                              	mov rbp, rsp
0x1ca58:   41 54                                 	push r12
0x1ca5a:   53                                    	push rbx
0x1ca5b:   48 83 ec 10                           	sub rsp, 0x10
0x1ca5f:   e8 8c 21 02 00                        	call 0x3ebf0 <mcount>
0x1ca64:   48 89 fb                              	mov rbx, rdi
0x1ca67:   4c 8b a7 38 1d 00 00                  	mov r12, qword ptr [rdi + 0x1d38]
0x1ca6e:   80 bf 30 1d 00 00 01                  	cmp byte ptr [rdi + 0x1d30], 1
0x1ca75:   19 c0                                 	sbb eax, eax
0x1ca77:   83 e8 0f                              	sub eax, 0xf
0x1ca7a:   88 45 ef                              	mov byte ptr [rbp - 0x11], al
0x1ca7d:   0f b6 b7 30 1d 00 00                  	movzx esi, byte ptr [rdi + 0x1d30]
0x1ca84:   40 0f b6 c6                           	movzx eax, sil
0x1ca88:   48 8d 04 80                           	lea rax, [rax + rax*4]
0x1ca8c:   48 c1 e0 04                           	shl rax, 4
0x1ca90:   49 8d 8c 04 60 59 00 00               	lea rcx, [r12 + rax + 0x5960]
0x1ca98:   48 8d 55 ef                           	lea rdx, [rbp - 0x11]
0x1ca9c:   40 0f b6 f6                           	movzx esi, sil
0x1caa0:   4c 89 e7                              	mov rdi, r12
0x1caa3:   e8 2d b8 fe ff                        	call 0x82d5 <TC_Initialise>
0x1caa8:   0f b6 55 ef                           	movzx edx, byte ptr [rbp - 0x11]
0x1caac:   83 e2 01                              	and edx, 1
0x1caaf:   88 13                                 	mov byte ptr [rbx], dl
0x1cab1:   f6 45 ef 02                           	test byte ptr [rbp - 0x11], 2
0x1cab5:   0f 95 83 e9 15 00 00                  	setne byte ptr [rbx + 0x15e9]
0x1cabc:   f6 45 ef 08                           	test byte ptr [rbp - 0x11], 8
0x1cac0:   0f 95 83 ea 15 00 00                  	setne byte ptr [rbx + 0x15ea]
0x1cac7:   0f b6 55 ef                           	movzx edx, byte ptr [rbp - 0x11]
0x1cacb:   c1 ea 04                              	shr edx, 4
0x1cace:   83 e2 01                              	and edx, 1
; data inside code section at 0x1cad1 -- 0x1cad2
0x1cad1:   41                                                 |A               |
; function: Tnim_SignalLevel at 0x1cad2 -- 0x1cb02
0x1cad2:   88 94 24 99 57 00 00                  	mov byte ptr [rsp + 0x5799], dl
0x1cad9:   80 bb eb 15 00 00 16                  	cmp byte ptr [rbx + 0x15eb], 0x16
0x1cae0:   75 10                                 	jne 0x1caf2 <Tnim_SignalLevel+0x20>
0x1cae2:   c6 83 e4 0d 03 00 01                  	mov byte ptr [rbx + 0x30de4], 1
0x1cae9:   c6 83 75 f4 08 00 01                  	mov byte ptr [rbx + 0x8f475], 1
0x1caf0:   eb 07                                 	jmp 0x1caf9 <Tnim_SignalLevel+0x27>
0x1caf2:   c6 83 e4 0d 03 00 01                  	mov byte ptr [rbx + 0x30de4], 1
0x1caf9:   48 83 c4 10                           	add rsp, 0x10
0x1cafd:   5b                                    	pop rbx
0x1cafe:   41 5c                                 	pop r12
0x1cb00:   c9                                    	leave 
0x1cb01:   c3                                    	ret 
; function: Tnim_SignalLevel at 0x1cb02 -- 0x1cb0b
0x1cb02:   55                                    	push rbp
0x1cb03:   48 89 e5                              	mov rbp, rsp
0x1cb06:   e8 e5 20 02 00                        	call 0x3ebf0 <mcount>
; function: TLIB_GetGPIOEx at 0x1cb0b -- 0x1cb24
0x1cb0b:   48 89 f8                              	mov rax, rdi
0x1cb0e:   48 8b bf 38 1d 00 00                  	mov rdi, qword ptr [rdi + 0x1d38]
0x1cb15:   0f b6 b0 30 1d 00 00                  	movzx esi, byte ptr [rax + 0x1d30]
0x1cb1c:   40 0f b6 c6                           	movzx eax, sil
0x1cb20:   48 8d 04 80                           	lea rax, [rax + rax*4]
; data inside code section at 0x1cb24 -- 0x1cb27
0x1cb24:   48 c1 e0                                           |H..             |
; function: TLIB_SetGPIOEx at 0x1cb27 -- 0x1cb3b
0x1cb27:   04 48                                 	add al, 0x48
0x1cb29:   8d 94 07 60 59 00 00                  	lea edx, [rdi + rax + 0x5960]
0x1cb30:   40 0f b6 f6                           	movzx esi, sil
0x1cb34:   e8 74 c8 fe ff                        	call 0x93ad <TC_GetSignaLevel>
0x1cb39:   c9                                    	leave 
0x1cb3a:   c3                                    	ret 
; function: TLIB_GetGPIOEx at 0x1cb3b -- 0x1cb3c
0x1cb3b:   55                                    	push rbp
; data inside code section at 0x1cb3c -- 0x1cb3e
0x1cb3c:   48 89                                              |H.              |
; function: TLIB_GetGPIO at 0x1cb3e -- 0x1cb57
0x1cb3e:   e5 48                                 	in eax, 0x48
0x1cb40:   83 ec 10                              	sub esp, 0x10
0x1cb43:   e8 a8 20 02 00                        	call 0x3ebf0 <mcount>
0x1cb48:   48 8d 75 ff                           	lea rsi, [rbp - 1]
0x1cb4c:   e8 fa 94 fe ff                        	call 0x604b <FUSBDTV_Cmd_Get_GPIO_Ex>
0x1cb51:   0f b6 45 ff                           	movzx eax, byte ptr [rbp - 1]
0x1cb55:   c9                                    	leave 
0x1cb56:   c3                                    	ret 
; function: TLIB_SetGPIOEx at 0x1cb57 -- 0x1cb58
0x1cb57:   55                                    	push rbp
; data inside code section at 0x1cb58 -- 0x1cb5a
0x1cb58:   48 89                                              |H.              |
; function: TLIB_SetGPIO at 0x1cb5a -- 0x1cb6e
0x1cb5a:   e5 e8                                 	in eax, 0xe8
0x1cb5c:   90                                    	nop 
0x1cb5d:   20 02                                 	and byte ptr [rdx], al
0x1cb5f:   00 0f                                 	add byte ptr [rdi], cl
0x1cb61:   b6 d2                                 	mov dh, 0xd2
0x1cb63:   40 0f b6 f6                           	movzx esi, sil
0x1cb67:   e8 41 95 fe ff                        	call 0x60ad <FUSBDTV_Cmd_Set_GPIO_Ex>
0x1cb6c:   c9                                    	leave 
0x1cb6d:   c3                                    	ret 
; function: TLIB_GetGPIO at 0x1cb6e -- 0x1cb6f
0x1cb6e:   55                                    	push rbp
; data inside code section at 0x1cb6f -- 0x1cb71
0x1cb6f:   48 89                                              |H.              |
; function: TLIB_Delay at 0x1cb71 -- 0x1cb7f
0x1cb71:   e5 48                                 	in eax, 0x48
0x1cb73:   83 ec 10                              	sub esp, 0x10
0x1cb76:   e8 75 20 02 00                        	call 0x3ebf0 <mcount>
0x1cb7b:   48 8d 75 ff                           	lea rsi, [rbp - 1]
; data inside code section at 0x1cb7f -- 0x1cb81
0x1cb7f:   e8 f4                                              |..              |
; function: TLIB_I2C_WriteAndRead at 0x1cb81 -- 0x1cb82
0x1cb81:   92                                    	xchg eax, edx
; data inside code section at 0x1cb82 -- 0x1cb83
0x1cb82:   fe                                                 |.               |
; function: function_1cb83 at 0x1cb83 -- 0x1cb8a
0x1cb83:   ff 0f                                 	dec dword ptr [rdi]
0x1cb85:   b6 45                                 	mov dh, 0x45
0x1cb87:   ff c9                                 	dec ecx
0x1cb89:   c3                                    	ret 
; function: TLIB_SetGPIO at 0x1cb8a -- 0x1cba1
0x1cb8a:   55                                    	push rbp
0x1cb8b:   48 89 e5                              	mov rbp, rsp
0x1cb8e:   e8 5d 20 02 00                        	call 0x3ebf0 <mcount>
0x1cb93:   0f b6 d2                              	movzx edx, dl
0x1cb96:   40 0f b6 f6                           	movzx esi, sil
0x1cb9a:   e8 8d 93 fe ff                        	call 0x5f2c <FUSBDTV_Cmd_Set_GPIO>
0x1cb9f:   c9                                    	leave 
0x1cba0:   c3                                    	ret 
; function: TLIB_Delay at 0x1cba1 -- 0x1cbb1
0x1cba1:   55                                    	push rbp
0x1cba2:   48 89 e5                              	mov rbp, rsp
0x1cba5:   e8 46 20 02 00                        	call 0x3ebf0 <mcount>
0x1cbaa:   e8 b6 88 ff ff                        	call 0x15465 <vUSB_Wait>
0x1cbaf:   c9                                    	leave 
0x1cbb0:   c3                                    	ret 
; function: TLIB_I2C_WriteAndRead at 0x1cbb1 -- 0x1cc2d
0x1cbb1:   55                                    	push rbp
0x1cbb2:   48 89 e5                              	mov rbp, rsp
0x1cbb5:   41 57                                 	push r15
0x1cbb7:   41 56                                 	push r14
0x1cbb9:   41 55                                 	push r13
0x1cbbb:   41 54                                 	push r12
0x1cbbd:   53                                    	push rbx
0x1cbbe:   48 83 ec 38                           	sub rsp, 0x38
0x1cbc2:   e8 29 20 02 00                        	call 0x3ebf0 <mcount>
0x1cbc7:   48 89 55 c8                           	mov qword ptr [rbp - 0x38], rdx
0x1cbcb:   4c 89 45 c0                           	mov qword ptr [rbp - 0x40], r8
0x1cbcf:   41 89 f6                              	mov r14d, esi
0x1cbd2:   41 89 cd                              	mov r13d, ecx
0x1cbd5:   44 88 4d bf                           	mov byte ptr [rbp - 0x41], r9b
0x1cbd9:   44 0f b6 7d 10                        	movzx r15d, byte ptr [rbp + 0x10]
0x1cbde:   48 89 fb                              	mov rbx, rdi
0x1cbe1:   4c 8d a7 40 01 00 00                  	lea r12, [rdi + 0x140]
0x1cbe8:   4c 89 e7                              	mov rdi, r12
0x1cbeb:   e8 e8 1f 02 00                        	call 0x3ebd8 <down>
0x1cbf0:   48 83 bb 78 56 00 00 00               	cmp qword ptr [rbx + 0x5678], 0
0x1cbf8:   75 52                                 	jne 0x1cc4c
0x1cbfa:   48 c7 83 78 56 00 00 01 00 00 00      	mov qword ptr [rbx + 0x5678], 1
0x1cc05:   4c 89 e7                              	mov rdi, r12
0x1cc08:   e8 4b 1f 02 00                        	call 0x3eb58 <up>
0x1cc0d:   41 0f b6 cd                           	movzx ecx, r13b
0x1cc11:   41 0f b6 f6                           	movzx esi, r14b
0x1cc15:   45 0f b6 ff                           	movzx r15d, r15b
0x1cc19:   44 89 3c 24                           	mov dword ptr [rsp], r15d
0x1cc1d:   44 0f b6 4d bf                        	movzx r9d, byte ptr [rbp - 0x41]
0x1cc22:   4c 8b 45 c0                           	mov r8, qword ptr [rbp - 0x40]
0x1cc26:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x1cc2a:   48 89 df                              	mov rdi, rbx
; data inside code section at 0x1cc2d -- 0x1cc30
0x1cc2d:   e8 f1 85                                           |...             |
; function: TLIB_I2C_Read at 0x1cc30 -- 0x1cc60
; function: TLIB_I2C_Read at 0x1cc60 -- 0x1ccce
0x1cc60:   55                                    	push rbp
0x1cc61:   48 89 e5                              	mov rbp, rsp
0x1cc64:   41 57                                 	push r15
0x1cc66:   41 56                                 	push r14
0x1cc68:   41 55                                 	push r13
0x1cc6a:   41 54                                 	push r12
0x1cc6c:   53                                    	push rbx
0x1cc6d:   48 83 ec 18                           	sub rsp, 0x18
0x1cc71:   e8 7a 1f 02 00                        	call 0x3ebf0 <mcount>
0x1cc76:   48 89 4d c8                           	mov qword ptr [rbp - 0x38], rcx
0x1cc7a:   41 89 f6                              	mov r14d, esi
0x1cc7d:   41 89 d5                              	mov r13d, edx
0x1cc80:   44 88 45 c7                           	mov byte ptr [rbp - 0x39], r8b
0x1cc84:   45 89 cf                              	mov r15d, r9d
0x1cc87:   48 89 fb                              	mov rbx, rdi
0x1cc8a:   4c 8d a7 40 01 00 00                  	lea r12, [rdi + 0x140]
0x1cc91:   4c 89 e7                              	mov rdi, r12
0x1cc94:   e8 3f 1f 02 00                        	call 0x3ebd8 <down>
0x1cc99:   48 83 bb 78 56 00 00 00               	cmp qword ptr [rbx + 0x5678], 0
0x1cca1:   75 4a                                 	jne 0x1cced
0x1cca3:   48 c7 83 78 56 00 00 01 00 00 00      	mov qword ptr [rbx + 0x5678], 1
0x1ccae:   4c 89 e7                              	mov rdi, r12
0x1ccb1:   e8 a2 1e 02 00                        	call 0x3eb58 <up>
0x1ccb6:   41 0f b6 d5                           	movzx edx, r13b
0x1ccba:   41 0f b6 f6                           	movzx esi, r14b
0x1ccbe:   45 0f b6 cf                           	movzx r9d, r15b
0x1ccc2:   44 0f b6 45 c7                        	movzx r8d, byte ptr [rbp - 0x39]
0x1ccc7:   48 8b 4d c8                           	mov rcx, qword ptr [rbp - 0x38]
0x1cccb:   48 89 df                              	mov rdi, rbx
; data inside code section at 0x1ccce -- 0x1ccd1
0x1ccce:   e8 d5 84                                           |...             |
; function: TLIB_I2C_Write at 0x1ccd1 -- 0x1cd01
; function: TLIB_I2C_Write at 0x1cd01 -- 0x1cd9a
0x1cd01:   55                                    	push rbp
0x1cd02:   48 89 e5                              	mov rbp, rsp
0x1cd05:   41 57                                 	push r15
0x1cd07:   41 56                                 	push r14
0x1cd09:   41 55                                 	push r13
0x1cd0b:   41 54                                 	push r12
0x1cd0d:   53                                    	push rbx
0x1cd0e:   48 83 ec 18                           	sub rsp, 0x18
0x1cd12:   e8 d9 1e 02 00                        	call 0x3ebf0 <mcount>
0x1cd17:   48 89 4d c8                           	mov qword ptr [rbp - 0x38], rcx
0x1cd1b:   41 89 f7                              	mov r15d, esi
0x1cd1e:   41 89 d6                              	mov r14d, edx
0x1cd21:   44 88 45 c7                           	mov byte ptr [rbp - 0x39], r8b
0x1cd25:   45 89 cd                              	mov r13d, r9d
0x1cd28:   48 89 fb                              	mov rbx, rdi
0x1cd2b:   4c 8d a7 40 01 00 00                  	lea r12, [rdi + 0x140]
0x1cd32:   4c 89 e7                              	mov rdi, r12
0x1cd35:   e8 9e 1e 02 00                        	call 0x3ebd8 <down>
0x1cd3a:   48 83 bb 78 56 00 00 00               	cmp qword ptr [rbx + 0x5678], 0
0x1cd42:   75 1b                                 	jne 0x1cd5f <TLIB_I2C_Write+0x5e>
0x1cd44:   48 c7 83 78 56 00 00 01 00 00 00      	mov qword ptr [rbx + 0x5678], 1
0x1cd4f:   4c 89 e7                              	mov rdi, r12
0x1cd52:   e8 01 1e 02 00                        	call 0x3eb58 <up>
0x1cd57:   41 80 fd 01                           	cmp r13b, 1
0x1cd5b:   77 35                                 	ja 0x1cd92 <TLIB_I2C_Write+0x91>
0x1cd5d:   eb 14                                 	jmp 0x1cd73 <TLIB_I2C_Write+0x72>
0x1cd5f:   4c 89 e7                              	mov rdi, r12
0x1cd62:   e8 f1 1d 02 00                        	call 0x3eb58 <up>
0x1cd67:   bf 01 00 00 00                        	mov edi, 1
0x1cd6c:   e8 f4 86 ff ff                        	call 0x15465 <vUSB_Wait>
0x1cd71:   eb bf                                 	jmp 0x1cd32 <TLIB_I2C_Write+0x31>
0x1cd73:   41 0f b6 d6                           	movzx edx, r14b
0x1cd77:   41 0f b6 f7                           	movzx esi, r15b
0x1cd7b:   45 0f b6 cd                           	movzx r9d, r13b
0x1cd7f:   44 0f b6 45 c7                        	movzx r8d, byte ptr [rbp - 0x39]
0x1cd84:   48 8b 4d c8                           	mov rcx, qword ptr [rbp - 0x38]
0x1cd88:   48 89 df                              	mov rdi, rbx
0x1cd8b:   e8 79 83 ff ff                        	call 0x15109 <USB_I2C_Write>
0x1cd90:   eb 1d                                 	jmp 0x1cdaf
0x1cd92:   41 0f b6 d6                           	movzx edx, r14b
0x1cd96:   41 0f b6 f7                           	movzx esi, r15b
; data inside code section at 0x1cd9a -- 0x1cd9c
0x1cd9a:   45 0f                                              |E.              |
; function: smi_clear_interrupt at 0x1cd9c -- 0x1cdc9
0x1cd9c:   b6 cd                                 	mov dh, 0xcd
0x1cd9e:   44 0f b6 45 c7                        	movzx r8d, byte ptr [rbp - 0x39]
0x1cda3:   48 8b 4d c8                           	mov rcx, qword ptr [rbp - 0x38]
0x1cda7:   48 89 df                              	mov rdi, rbx
0x1cdaa:   e8 5a 83 ff ff                        	call 0x15109 <USB_I2C_Write>
0x1cdaf:   48 c7 83 78 56 00 00 00 00 00 00      	mov qword ptr [rbx + 0x5678], 0
0x1cdba:   48 83 c4 18                           	add rsp, 0x18
0x1cdbe:   5b                                    	pop rbx
0x1cdbf:   41 5c                                 	pop r12
0x1cdc1:   41 5d                                 	pop r13
0x1cdc3:   41 5e                                 	pop r14
0x1cdc5:   41 5f                                 	pop r15
0x1cdc7:   c9                                    	leave 
0x1cdc8:   c3                                    	ret 
; data inside code section at 0x1cdc9 -- 0x1cdcc
0x1cdc9:   90 90 90                                           |...             |
; function: smi_clear_interrupt at 0x1cdcc -- 0x1cde4
0x1cdcc:   55                                    	push rbp
0x1cdcd:   48 89 e5                              	mov rbp, rsp
0x1cdd0:   e8 1b 1e 02 00                        	call 0x3ebf0 <mcount>
0x1cdd5:   48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x1cddc:   48 05 08 08 00 00                     	add rax, 0x808
0x1cde2:   8b 00                                 	mov eax, dword ptr [rax]
; data inside code section at 0x1cde4 -- 0x1cdea
0x1cde4:   48 8b 97 f8 57 00                                  |H...W.          |
; function: smi_disable_interrupt at 0x1cdea -- 0x1cdf0
0x1cdea:   00 48 81                              	add byte ptr [rax - 0x7f], cl
0x1cded:   c2 0c 08                              	ret 0x80c
; data inside code section at 0x1cdf0 -- 0x1ce09
0x1cdf0:   00 00 89 02 48 8b 87 f8  57 00 00 48 05 08 08 00   |....H...W..H....|
0x1ce00:   00 8b 00 48 8b 97 f8 57  00                        |...H...W.       |
; function: function_1ce09 at 0x1ce09 -- 0x1ce0f
0x1ce09:   00 48 81                              	add byte ptr [rax - 0x7f], cl
0x1ce0c:   c2 10 08                              	ret 0x810
; data inside code section at 0x1ce0f -- 0x1ce18
0x1ce0f:   00 00 8b 12 85 c0 0f 94  c0                        |.........       |
; function: smi_enable_interrupt at 0x1ce18 -- 0x1ce1a
0x1ce18:   c9                                    	leave 
0x1ce19:   c3                                    	ret 
; function: smi_disable_interrupt at 0x1ce1a -- 0x1ce48
0x1ce1a:   55                                    	push rbp
0x1ce1b:   48 89 e5                              	mov rbp, rsp
0x1ce1e:   e8 cd 1d 02 00                        	call 0x3ebf0 <mcount>
0x1ce23:   48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x1ce2a:   48 05 18 08 00 00                     	add rax, 0x818
0x1ce30:   89 30                                 	mov dword ptr [rax], esi
0x1ce32:   48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x1ce39:   48 05 14 08 00 00                     	add rax, 0x814
0x1ce3f:   8b 00                                 	mov eax, dword ptr [rax]
0x1ce41:   85 c0                                 	test eax, eax
0x1ce43:   0f 94 c0                              	sete al
0x1ce46:   c9                                    	leave 
0x1ce47:   c3                                    	ret 
; function: smi_enable_interrupt at 0x1ce48 -- 0x1ce49
0x1ce48:   55                                    	push rbp
; data inside code section at 0x1ce49 -- 0x1ce4a
0x1ce49:   48                                                 |H               |
; function: smi_cancel_dma_A at 0x1ce4a -- 0x1ce7a
0x1ce4a:   89 e5                                 	mov ebp, esp
0x1ce4c:   e8 9f 1d 02 00                        	call 0x3ebf0 <mcount>
0x1ce51:   48 8b 97 f8 57 00 00                  	mov rdx, qword ptr [rdi + 0x57f8]
0x1ce58:   48 81 c2 1c 08 00 00                  	add rdx, 0x81c
0x1ce5f:   89 32                                 	mov dword ptr [rdx], esi
0x1ce61:   48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x1ce68:   48 05 14 08 00 00                     	add rax, 0x814
0x1ce6e:   8b 00                                 	mov eax, dword ptr [rax]
0x1ce70:   89 c0                                 	mov eax, eax
0x1ce72:   48 39 c6                              	cmp rsi, rax
0x1ce75:   0f 94 c0                              	sete al
0x1ce78:   c9                                    	leave 
0x1ce79:   c3                                    	ret 
; function: smi_cancel_dma_A at 0x1ce7a -- 0x1ce98
0x1ce7a:   55                                    	push rbp
0x1ce7b:   48 89 e5                              	mov rbp, rsp
0x1ce7e:   e8 6d 1d 02 00                        	call 0x3ebf0 <mcount>
0x1ce83:   48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x1ce8a:   48 03 87 b8 62 00 00                  	add rax, qword ptr [rdi + 0x62b8]
0x1ce91:   8b 00                                 	mov eax, dword ptr [rax]
0x1ce93:   89 c0                                 	mov eax, eax
0x1ce95:   48 89 c2                              	mov rdx, rax
; data inside code section at 0x1ce98 -- 0x1ce9a
0x1ce98:   83 e2                                              |..              |
; function: smi_cancel_dma_B at 0x1ce9a -- 0x1ce9d
0x1ce9a:   0f 48 c1                              	cmovs eax, ecx
; data inside code section at 0x1ce9d -- 0x1ce9e
0x1ce9d:   ea                                                 |.               |
; function: function_1ce9e at 0x1ce9e -- 0x1ceca
0x1ce9e:   02 80 fa 01 75 13                     	add al, byte ptr [rax + 0x137501fa]
0x1cea4:   83 e0 fd                              	and eax, 0xfffffffd
0x1cea7:   48 8b 97 f8 57 00 00                  	mov rdx, qword ptr [rdi + 0x57f8]
0x1ceae:   48 03 97 b8 62 00 00                  	add rdx, qword ptr [rdi + 0x62b8]
0x1ceb5:   89 02                                 	mov dword ptr [rdx], eax
0x1ceb7:   0f b6 b7 ec 58 00 00                  	movzx esi, byte ptr [rdi + 0x58ec]
0x1cebe:   e8 57 ff ff ff                        	call 0x1ce1a <smi_disable_interrupt>
0x1cec3:   b8 01 00 00 00                        	mov eax, 1
0x1cec8:   c9                                    	leave 
0x1cec9:   c3                                    	ret 
; function: smi_cancel_dma_B at 0x1ceca -- 0x1ceef
0x1ceca:   55                                    	push rbp
0x1cecb:   48 89 e5                              	mov rbp, rsp
0x1cece:   e8 1d 1d 02 00                        	call 0x3ebf0 <mcount>
0x1ced3:   48 8b 87 f8 57 00 00                  	mov rax, qword ptr [rdi + 0x57f8]
0x1ceda:   48 03 87 00 63 00 00                  	add rax, qword ptr [rdi + 0x6300]
0x1cee1:   8b 00                                 	mov eax, dword ptr [rax]
0x1cee3:   89 c0                                 	mov eax, eax
0x1cee5:   48 89 c2                              	mov rdx, rax
0x1cee8:   83 e2 0f                              	and edx, 0xf
0x1ceeb:   48 c1 ea 02                           	shr rdx, 2
; data inside code section at 0x1ceef -- 0x1cef0
0x1ceef:   80                                                 |.               |
; function: smi_portA_dpc at 0x1cef0 -- 0x1cf20
0x1cef0:   fa                                    	cli 
0x1cef1:   01 75 13                              	add dword ptr [rbp + 0x13], esi
0x1cef4:   83 e0 fd                              	and eax, 0xfffffffd
0x1cef7:   48 8b 97 f8 57 00 00                  	mov rdx, qword ptr [rdi + 0x57f8]
0x1cefe:   48 03 97 00 63 00 00                  	add rdx, qword ptr [rdi + 0x6300]
0x1cf05:   89 02                                 	mov dword ptr [rdx], eax
0x1cf07:   0f b6 b7 ed 58 00 00                  	movzx esi, byte ptr [rdi + 0x58ed]
0x1cf0e:   c1 e6 02                              	shl esi, 2
0x1cf11:   48 63 f6                              	movsxd rsi, esi
0x1cf14:   e8 01 ff ff ff                        	call 0x1ce1a <smi_disable_interrupt>
0x1cf19:   b8 01 00 00 00                        	mov eax, 1
0x1cf1e:   c9                                    	leave 
0x1cf1f:   c3                                    	ret 
; function: smi_portA_dpc at 0x1cf20 -- 0x1d007
0x1cf20:   55                                    	push rbp
0x1cf21:   48 89 e5                              	mov rbp, rsp
0x1cf24:   e8 c7 1c 02 00                        	call 0x3ebf0 <mcount>
0x1cf29:   48 8b 96 00 59 00 00                  	mov rdx, qword ptr [rsi + 0x5900]
0x1cf30:   b8 00 00 00 00                        	mov eax, 0
0x1cf35:   f6 c2 01                              	test dl, 1
0x1cf38:   75 09                                 	jne 0x1cf43 <smi_portA_dpc+0x23>
0x1cf3a:   48 89 d0                              	mov rax, rdx
0x1cf3d:   48 d1 e8                              	shr rax, 1
0x1cf40:   83 e0 01                              	and eax, 1
0x1cf43:   48 8b 96 f8 57 00 00                  	mov rdx, qword ptr [rsi + 0x57f8]
0x1cf4a:   48 03 96 b8 62 00 00                  	add rdx, qword ptr [rsi + 0x62b8]
0x1cf51:   8b 12                                 	mov edx, dword ptr [rdx]
0x1cf53:   89 d2                                 	mov edx, edx
0x1cf55:   89 c1                                 	mov ecx, eax
0x1cf57:   80 f1 01                              	xor cl, 1
0x1cf5a:   74 43                                 	je 0x1cf9f <smi_portA_dpc+0x7f>
0x1cf5c:   48 89 d7                              	mov rdi, rdx
0x1cf5f:   83 e7 30                              	and edi, 0x30
0x1cf62:   48 c1 ef 04                           	shr rdi, 4
0x1cf66:   40 80 ff 01                           	cmp dil, 1
0x1cf6a:   75 33                                 	jne 0x1cf9f <smi_portA_dpc+0x7f>
0x1cf6c:   f6 86 ec 58 00 00 01                  	test byte ptr [rsi + 0x58ec], 1
0x1cf73:   74 2a                                 	je 0x1cf9f <smi_portA_dpc+0x7f>
0x1cf75:   48 8b be f8 57 00 00                  	mov rdi, qword ptr [rsi + 0x57f8]
0x1cf7c:   48 03 be 88 62 00 00                  	add rdi, qword ptr [rsi + 0x6288]
0x1cf83:   8b 3f                                 	mov edi, dword ptr [rdi]
0x1cf85:   81 e7 ff ff 3f 00                     	and edi, 0x3fffff
0x1cf8b:   74 09                                 	je 0x1cf96 <smi_portA_dpc+0x76>
0x1cf8d:   48 81 ff 20 e5 00 00                  	cmp rdi, 0xe520
0x1cf94:   74 51                                 	je 0x1cfe7 <smi_portA_dpc+0xc7>
0x1cf96:   c6 86 59 59 00 00 01                  	mov byte ptr [rsi + 0x5959], 1
0x1cf9d:   eb 48                                 	jmp 0x1cfe7 <smi_portA_dpc+0xc7>
0x1cf9f:   3c 01                                 	cmp al, 1
0x1cfa1:   75 44                                 	jne 0x1cfe7 <smi_portA_dpc+0xc7>
0x1cfa3:   48 89 d7                              	mov rdi, rdx
0x1cfa6:   81 e7 00 00 30 00                     	and edi, 0x300000
0x1cfac:   48 c1 ef 14                           	shr rdi, 0x14
0x1cfb0:   40 80 ff 01                           	cmp dil, 1
0x1cfb4:   75 31                                 	jne 0x1cfe7 <smi_portA_dpc+0xc7>
0x1cfb6:   f6 86 ec 58 00 00 02                  	test byte ptr [rsi + 0x58ec], 2
0x1cfbd:   74 28                                 	je 0x1cfe7 <smi_portA_dpc+0xc7>
0x1cfbf:   48 8b be f8 57 00 00                  	mov rdi, qword ptr [rsi + 0x57f8]
0x1cfc6:   48 03 be a8 62 00 00                  	add rdi, qword ptr [rsi + 0x62a8]
0x1cfcd:   8b 3f                                 	mov edi, dword ptr [rdi]
0x1cfcf:   81 e7 ff ff 3f 00                     	and edi, 0x3fffff
0x1cfd5:   74 09                                 	je 0x1cfe0 <smi_portA_dpc+0xc0>
0x1cfd7:   48 81 ff 20 e5 00 00                  	cmp rdi, 0xe520
0x1cfde:   74 07                                 	je 0x1cfe7 <smi_portA_dpc+0xc7>
0x1cfe0:   c6 86 59 59 00 00 01                  	mov byte ptr [rsi + 0x5959], 1
0x1cfe7:   80 be f9 58 00 00 00                  	cmp byte ptr [rsi + 0x58f9], 0
0x1cfee:   75 45                                 	jne 0x1d035
0x1cff0:   84 c9                                 	test cl, cl
0x1cff2:   74 1e                                 	je 0x1d012
0x1cff4:   f6 86 ec 58 00 00 01                  	test byte ptr [rsi + 0x58ec], 1
0x1cffb:   74 15                                 	je 0x1d012
0x1cffd:   83 ca 02                              	or edx, 2
0x1d000:   48 8b 86 f8 57 00 00                  	mov rax, qword ptr [rsi + 0x57f8]
; function: smi_portB_dpc at 0x1d007 -- 0x1d037
0x1d007:   48 03 86 b8 62 00 00                  	add rax, qword ptr [rsi + 0x62b8]
0x1d00e:   89 10                                 	mov dword ptr [rax], edx
0x1d010:   eb 23                                 	jmp 0x1d035 <smi_portB_dpc+0x2e>
0x1d012:   3c 01                                 	cmp al, 1
0x1d014:   75 1f                                 	jne 0x1d035 <smi_portB_dpc+0x2e>
0x1d016:   f6 86 ec 58 00 00 02                  	test byte ptr [rsi + 0x58ec], 2
0x1d01d:   74 16                                 	je 0x1d035 <smi_portB_dpc+0x2e>
0x1d01f:   81 ca 00 00 02 00                     	or edx, 0x20000
0x1d025:   48 8b 86 f8 57 00 00                  	mov rax, qword ptr [rsi + 0x57f8]
0x1d02c:   48 03 86 b8 62 00 00                  	add rax, qword ptr [rsi + 0x62b8]
0x1d033:   89 10                                 	mov dword ptr [rax], edx
0x1d035:   c9                                    	leave 
0x1d036:   c3                                    	ret 
; function: smi_portB_dpc at 0x1d037 -- 0x1d11f
0x1d037:   55                                    	push rbp
0x1d038:   48 89 e5                              	mov rbp, rsp
0x1d03b:   e8 b0 1b 02 00                        	call 0x3ebf0 <mcount>
0x1d040:   48 8b 96 00 59 00 00                  	mov rdx, qword ptr [rsi + 0x5900]
0x1d047:   b8 00 00 00 00                        	mov eax, 0
0x1d04c:   f6 c2 04                              	test dl, 4
0x1d04f:   75 0a                                 	jne 0x1d05b <smi_portB_dpc+0x24>
0x1d051:   48 89 d0                              	mov rax, rdx
0x1d054:   48 c1 e8 03                           	shr rax, 3
0x1d058:   83 e0 01                              	and eax, 1
0x1d05b:   48 8b 96 f8 57 00 00                  	mov rdx, qword ptr [rsi + 0x57f8]
0x1d062:   48 03 96 00 63 00 00                  	add rdx, qword ptr [rsi + 0x6300]
0x1d069:   8b 12                                 	mov edx, dword ptr [rdx]
0x1d06b:   89 d2                                 	mov edx, edx
0x1d06d:   89 c1                                 	mov ecx, eax
0x1d06f:   80 f1 01                              	xor cl, 1
0x1d072:   74 43                                 	je 0x1d0b7 <smi_portB_dpc+0x80>
0x1d074:   48 89 d7                              	mov rdi, rdx
0x1d077:   83 e7 30                              	and edi, 0x30
0x1d07a:   48 c1 ef 04                           	shr rdi, 4
0x1d07e:   40 80 ff 01                           	cmp dil, 1
0x1d082:   75 33                                 	jne 0x1d0b7 <smi_portB_dpc+0x80>
0x1d084:   f6 86 ed 58 00 00 01                  	test byte ptr [rsi + 0x58ed], 1
0x1d08b:   74 2a                                 	je 0x1d0b7 <smi_portB_dpc+0x80>
0x1d08d:   48 8b be f8 57 00 00                  	mov rdi, qword ptr [rsi + 0x57f8]
0x1d094:   48 03 be d0 62 00 00                  	add rdi, qword ptr [rsi + 0x62d0]
0x1d09b:   8b 3f                                 	mov edi, dword ptr [rdi]
0x1d09d:   81 e7 ff ff 3f 00                     	and edi, 0x3fffff
0x1d0a3:   74 09                                 	je 0x1d0ae <smi_portB_dpc+0x77>
0x1d0a5:   48 81 ff 20 e5 00 00                  	cmp rdi, 0xe520
0x1d0ac:   74 51                                 	je 0x1d0ff <smi_portB_dpc+0xc8>
0x1d0ae:   c6 86 58 59 00 00 01                  	mov byte ptr [rsi + 0x5958], 1
0x1d0b5:   eb 48                                 	jmp 0x1d0ff <smi_portB_dpc+0xc8>
0x1d0b7:   3c 01                                 	cmp al, 1
0x1d0b9:   75 44                                 	jne 0x1d0ff <smi_portB_dpc+0xc8>
0x1d0bb:   48 89 d7                              	mov rdi, rdx
0x1d0be:   81 e7 00 00 30 00                     	and edi, 0x300000
0x1d0c4:   48 c1 ef 14                           	shr rdi, 0x14
0x1d0c8:   40 80 ff 01                           	cmp dil, 1
0x1d0cc:   75 31                                 	jne 0x1d0ff <smi_portB_dpc+0xc8>
0x1d0ce:   f6 86 ed 58 00 00 02                  	test byte ptr [rsi + 0x58ed], 2
0x1d0d5:   74 28                                 	je 0x1d0ff <smi_portB_dpc+0xc8>
0x1d0d7:   48 8b be f8 57 00 00                  	mov rdi, qword ptr [rsi + 0x57f8]
0x1d0de:   48 03 be f0 62 00 00                  	add rdi, qword ptr [rsi + 0x62f0]
0x1d0e5:   8b 3f                                 	mov edi, dword ptr [rdi]
0x1d0e7:   81 e7 ff ff 3f 00                     	and edi, 0x3fffff
0x1d0ed:   74 09                                 	je 0x1d0f8 <smi_portB_dpc+0xc1>
0x1d0ef:   48 81 ff 20 e5 00 00                  	cmp rdi, 0xe520
0x1d0f6:   74 07                                 	je 0x1d0ff <smi_portB_dpc+0xc8>
0x1d0f8:   c6 86 58 59 00 00 01                  	mov byte ptr [rsi + 0x5958], 1
0x1d0ff:   80 be fb 58 00 00 00                  	cmp byte ptr [rsi + 0x58fb], 0
0x1d106:   75 45                                 	jne 0x1d14d
0x1d108:   84 c9                                 	test cl, cl
0x1d10a:   74 1e                                 	je 0x1d12a
0x1d10c:   f6 86 ed 58 00 00 01                  	test byte ptr [rsi + 0x58ed], 1
0x1d113:   74 15                                 	je 0x1d12a
0x1d115:   83 ca 02                              	or edx, 2
0x1d118:   48 8b 86 f8 57 00 00                  	mov rax, qword ptr [rsi + 0x57f8]
; function: smi_cfg_dma_B at 0x1d11f -- 0x1d14f
0x1d11f:   48 03 86 00 63 00 00                  	add rax, qword ptr [rsi + 0x6300]
0x1d126:   89 10                                 	mov dword ptr [rax], edx
0x1d128:   eb 23                                 	jmp 0x1d14d <smi_cfg_dma_B+0x2e>
0x1d12a:   3c 01                                 	cmp al, 1
0x1d12c:   75 1f                                 	jne 0x1d14d <smi_cfg_dma_B+0x2e>
0x1d12e:   f6 86 ed 58 00 00 02                  	test byte ptr [rsi + 0x58ed], 2
0x1d135:   74 16                                 	je 0x1d14d <smi_cfg_dma_B+0x2e>
0x1d137:   81 ca 00 00 02 00                     	or edx, 0x20000
0x1d13d:   48 8b 86 f8 57 00 00                  	mov rax, qword ptr [rsi + 0x57f8]
0x1d144:   48 03 86 00 63 00 00                  	add rax, qword ptr [rsi + 0x6300]
0x1d14b:   89 10                                 	mov dword ptr [rax], edx
0x1d14d:   c9                                    	leave 
0x1d14e:   c3                                    	ret 
; function: smi_cfg_dma_B at 0x1d14f -- 0x1d23a
0x1d14f:   55                                    	push rbp
0x1d150:   48 89 e5                              	mov rbp, rsp
0x1d153:   53                                    	push rbx
0x1d154:   48 83 ec 08                           	sub rsp, 8
0x1d158:   e8 93 1a 02 00                        	call 0x3ebf0 <mcount>
0x1d15d:   48 89 fb                              	mov rbx, rdi
0x1d160:   0f b6 b7 ed 58 00 00                  	movzx esi, byte ptr [rdi + 0x58ed]
0x1d167:   c1 e6 02                              	shl esi, 2
0x1d16a:   48 63 f6                              	movsxd rsi, esi
0x1d16d:   e8 d6 fc ff ff                        	call 0x1ce48 <smi_enable_interrupt>
0x1d172:   48 89 df                              	mov rdi, rbx
0x1d175:   e8 9a 3b fe ff                        	call 0xd14 <SmiCalculateMemAddr>
0x1d17a:   b8 00 00 00 00                        	mov eax, 0
0x1d17f:   f6 83 ed 58 00 00 01                  	test byte ptr [rbx + 0x58ed], 1
0x1d186:   74 6b                                 	je 0x1d1f3 <smi_cfg_dma_B+0xa4>
0x1d188:   48 8b 93 d0 58 00 00                  	mov rdx, qword ptr [rbx + 0x58d0]
0x1d18f:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d196:   48 03 83 00 63 00 00                  	add rax, qword ptr [rbx + 0x6300]
0x1d19d:   8b 00                                 	mov eax, dword ptr [rax]
0x1d19f:   89 c0                                 	mov eax, eax
0x1d1a1:   48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x1d1a8:   48 03 8b c0 62 00 00                  	add rcx, qword ptr [rbx + 0x62c0]
0x1d1af:   89 11                                 	mov dword ptr [rcx], edx
0x1d1b1:   48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x1d1b8:   48 03 8b c8 62 00 00                  	add rcx, qword ptr [rbx + 0x62c8]
0x1d1bf:   ba 00 00 00 00                        	mov edx, 0
0x1d1c4:   89 11                                 	mov dword ptr [rcx], edx
0x1d1c6:   48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x1d1cd:   48 03 8b d8 62 00 00                  	add rcx, qword ptr [rbx + 0x62d8]
0x1d1d4:   ba 20 e5 c0 11                        	mov edx, 0x11c0e520
0x1d1d9:   89 11                                 	mov dword ptr [rcx], edx
0x1d1db:   83 c8 03                              	or eax, 3
0x1d1de:   48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x1d1e5:   48 03 93 00 63 00 00                  	add rdx, qword ptr [rbx + 0x6300]
0x1d1ec:   89 02                                 	mov dword ptr [rdx], eax
0x1d1ee:   b8 01 00 00 00                        	mov eax, 1
0x1d1f3:   f6 83 ed 58 00 00 02                  	test byte ptr [rbx + 0x58ed], 2
0x1d1fa:   74 6d                                 	je 0x1d269
0x1d1fc:   48 8b 93 d8 58 00 00                  	mov rdx, qword ptr [rbx + 0x58d8]
0x1d203:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d20a:   48 03 83 00 63 00 00                  	add rax, qword ptr [rbx + 0x6300]
0x1d211:   8b 00                                 	mov eax, dword ptr [rax]
0x1d213:   89 c0                                 	mov eax, eax
0x1d215:   48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x1d21c:   48 03 8b e0 62 00 00                  	add rcx, qword ptr [rbx + 0x62e0]
0x1d223:   89 11                                 	mov dword ptr [rcx], edx
0x1d225:   48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x1d22c:   48 03 8b e8 62 00 00                  	add rcx, qword ptr [rbx + 0x62e8]
0x1d233:   ba 00 00 00 00                        	mov edx, 0
0x1d238:   89 11                                 	mov dword ptr [rcx], edx
; data inside code section at 0x1d23a -- 0x1d240
0x1d23a:   48 8b 8b f8 57 00                                  |H...W.          |
; function: smi_cfg_dma_A at 0x1d240 -- 0x1d270
0x1d240:   00 48 03                              	add byte ptr [rax + 3], cl
0x1d243:   8b f8                                 	mov edi, eax
; data inside code section at 0x1d245 -- 0x1d269
0x1d245:   62 00 00 ba 20 e5 c0 11  89 11 0d 00 00 03 00 48   |b... ..........H|
0x1d255:   8b 93 f8 57 00 00 48 03  93 00 63 00 00 89 02 b8   |...W..H...c.....|
0x1d265:   01 00 00 00                                        |....            |
0x1d269:   48 83 c4 08                           	add rsp, 8
0x1d26d:   5b                                    	pop rbx
0x1d26e:   c9                                    	leave 
0x1d26f:   c3                                    	ret 
; function: smi_cfg_dma_A at 0x1d270 -- 0x1d355
0x1d270:   55                                    	push rbp
0x1d271:   48 89 e5                              	mov rbp, rsp
0x1d274:   53                                    	push rbx
0x1d275:   48 83 ec 08                           	sub rsp, 8
0x1d279:   e8 72 19 02 00                        	call 0x3ebf0 <mcount>
0x1d27e:   48 89 fb                              	mov rbx, rdi
0x1d281:   0f b6 b7 ec 58 00 00                  	movzx esi, byte ptr [rdi + 0x58ec]
0x1d288:   e8 bb fb ff ff                        	call 0x1ce48 <smi_enable_interrupt>
0x1d28d:   48 89 df                              	mov rdi, rbx
0x1d290:   e8 7f 3a fe ff                        	call 0xd14 <SmiCalculateMemAddr>
0x1d295:   b8 00 00 00 00                        	mov eax, 0
0x1d29a:   f6 83 ec 58 00 00 01                  	test byte ptr [rbx + 0x58ec], 1
0x1d2a1:   74 6b                                 	je 0x1d30e <smi_cfg_dma_A+0x9e>
0x1d2a3:   48 8b 93 c0 58 00 00                  	mov rdx, qword ptr [rbx + 0x58c0]
0x1d2aa:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d2b1:   48 03 83 b8 62 00 00                  	add rax, qword ptr [rbx + 0x62b8]
0x1d2b8:   8b 00                                 	mov eax, dword ptr [rax]
0x1d2ba:   89 c0                                 	mov eax, eax
0x1d2bc:   48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x1d2c3:   48 03 8b 78 62 00 00                  	add rcx, qword ptr [rbx + 0x6278]
0x1d2ca:   89 11                                 	mov dword ptr [rcx], edx
0x1d2cc:   48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x1d2d3:   48 03 8b 80 62 00 00                  	add rcx, qword ptr [rbx + 0x6280]
0x1d2da:   ba 00 00 00 00                        	mov edx, 0
0x1d2df:   89 11                                 	mov dword ptr [rcx], edx
0x1d2e1:   48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x1d2e8:   48 03 8b 90 62 00 00                  	add rcx, qword ptr [rbx + 0x6290]
0x1d2ef:   ba 20 e5 c0 11                        	mov edx, 0x11c0e520
0x1d2f4:   89 11                                 	mov dword ptr [rcx], edx
0x1d2f6:   83 c8 03                              	or eax, 3
0x1d2f9:   48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x1d300:   48 03 93 b8 62 00 00                  	add rdx, qword ptr [rbx + 0x62b8]
0x1d307:   89 02                                 	mov dword ptr [rdx], eax
0x1d309:   b8 01 00 00 00                        	mov eax, 1
0x1d30e:   f6 83 ec 58 00 00 02                  	test byte ptr [rbx + 0x58ec], 2
0x1d315:   74 6d                                 	je 0x1d384
0x1d317:   48 8b 93 c8 58 00 00                  	mov rdx, qword ptr [rbx + 0x58c8]
0x1d31e:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d325:   48 03 83 b8 62 00 00                  	add rax, qword ptr [rbx + 0x62b8]
0x1d32c:   8b 00                                 	mov eax, dword ptr [rax]
0x1d32e:   89 c0                                 	mov eax, eax
0x1d330:   48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x1d337:   48 03 8b 98 62 00 00                  	add rcx, qword ptr [rbx + 0x6298]
0x1d33e:   89 11                                 	mov dword ptr [rcx], edx
0x1d340:   48 8b 8b f8 57 00 00                  	mov rcx, qword ptr [rbx + 0x57f8]
0x1d347:   48 03 8b a0 62 00 00                  	add rcx, qword ptr [rbx + 0x62a0]
0x1d34e:   ba 00 00 00 00                        	mov edx, 0
0x1d353:   89 11                                 	mov dword ptr [rcx], edx
; data inside code section at 0x1d355 -- 0x1d35b
0x1d355:   48 8b 8b f8 57 00                                  |H...W.          |
; function: smi_interrupt_handler at 0x1d35b -- 0x1d38b
0x1d35b:   00 48 03                              	add byte ptr [rax + 3], cl
0x1d35e:   8b b0 62 00 00 ba                     	mov esi, dword ptr [rax - 0x45ffff9e]
0x1d364:   20 e5                                 	and ch, ah
0x1d366:   c0 11 89                              	rcl byte ptr [rcx], 0x89
0x1d369:   11 0d 00 00 03 00                     	adc dword ptr [rip + 0x30000], ecx
0x1d36f:   48 8b 93 f8 57 00 00                  	mov rdx, qword ptr [rbx + 0x57f8]
0x1d376:   48 03 93 b8 62 00 00                  	add rdx, qword ptr [rbx + 0x62b8]
0x1d37d:   89 02                                 	mov dword ptr [rdx], eax
0x1d37f:   b8 01 00 00 00                        	mov eax, 1
0x1d384:   48 83 c4 08                           	add rsp, 8
0x1d388:   5b                                    	pop rbx
0x1d389:   c9                                    	leave 
0x1d38a:   c3                                    	ret 
; function: smi_interrupt_handler at 0x1d38b -- 0x1d66c
0x1d38b:   55                                    	push rbp
0x1d38c:   48 89 e5                              	mov rbp, rsp
0x1d38f:   48 83 ec 30                           	sub rsp, 0x30
0x1d393:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x1d397:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x1d39b:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x1d39f:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1d3a3:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1d3a7:   e8 44 18 02 00                        	call 0x3ebf0 <mcount>
0x1d3ac:   48 89 f3                              	mov rbx, rsi
0x1d3af:   c6 06 01                              	mov byte ptr [rsi], 1
0x1d3b2:   48 8b 86 f8 57 00 00                  	mov rax, qword ptr [rsi + 0x57f8]
0x1d3b9:   48 05 08 08 00 00                     	add rax, 0x808
0x1d3bf:   44 8b 28                              	mov r13d, dword ptr [rax]
0x1d3c2:   45 89 ed                              	mov r13d, r13d
0x1d3c5:   4c 89 ae 00 59 00 00                  	mov qword ptr [rsi + 0x5900], r13
0x1d3cc:   41 bc 00 00 00 00                     	mov r12d, 0
0x1d3d2:   41 f6 c5 03                           	test r13b, 3
0x1d3d6:   0f 84 47 01 00 00                     	je 0x1d523 <smi_interrupt_handler+0x198>
0x1d3dc:   48 89 f7                              	mov rdi, rsi
0x1d3df:   e8 e8 f9 ff ff                        	call 0x1cdcc <smi_clear_interrupt>
0x1d3e4:   48 8b 83 00 59 00 00                  	mov rax, qword ptr [rbx + 0x5900]
0x1d3eb:   a8 01                                 	test al, 1
0x1d3ed:   75 0a                                 	jne 0x1d3f9 <smi_interrupt_handler+0x6e>
0x1d3ef:   49 89 c4                              	mov r12, rax
0x1d3f2:   49 d1 ec                              	shr r12, 1
0x1d3f5:   41 83 e4 01                           	and r12d, 1
0x1d3f9:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d400:   48 03 83 b8 62 00 00                  	add rax, qword ptr [rbx + 0x62b8]
0x1d407:   44 8b 30                              	mov r14d, dword ptr [rax]
0x1d40a:   45 89 f6                              	mov r14d, r14d
0x1d40d:   45 84 e4                              	test r12b, r12b
0x1d410:   41 0f 94 c7                           	sete r15b
0x1d414:   75 59                                 	jne 0x1d46f <smi_interrupt_handler+0xe4>
0x1d416:   4c 89 f0                              	mov rax, r14
0x1d419:   83 e0 30                              	and eax, 0x30
0x1d41c:   48 c1 e8 04                           	shr rax, 4
0x1d420:   3c 01                                 	cmp al, 1
0x1d422:   75 4b                                 	jne 0x1d46f <smi_interrupt_handler+0xe4>
0x1d424:   f6 83 ec 58 00 00 01                  	test byte ptr [rbx + 0x58ec], 1
0x1d42b:   74 42                                 	je 0x1d46f <smi_interrupt_handler+0xe4>
0x1d42d:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d434:   48 03 83 88 62 00 00                  	add rax, qword ptr [rbx + 0x6288]
0x1d43b:   8b 00                                 	mov eax, dword ptr [rax]
0x1d43d:   25 ff ff 3f 00                        	and eax, 0x3fffff
0x1d442:   74 08                                 	je 0x1d44c <smi_interrupt_handler+0xc1>
0x1d444:   48 3d 20 e5 00 00                     	cmp rax, 0xe520
0x1d44a:   74 09                                 	je 0x1d455 <smi_interrupt_handler+0xca>
0x1d44c:   c6 83 59 59 00 00 01                  	mov byte ptr [rbx + 0x5959], 1
0x1d453:   eb 79                                 	jmp 0x1d4ce <smi_interrupt_handler+0x143>
0x1d455:   48 8b b3 c8 04 00 00                  	mov rsi, qword ptr [rbx + 0x4c8]
0x1d45c:   48 8b bb a0 58 00 00                  	mov rdi, qword ptr [rbx + 0x58a0]
0x1d463:   ba 20 e5 00 00                        	mov edx, 0xe520
0x1d468:   e8 95 78 fe ff                        	call 0x4d02 <writeStorageBuff>
0x1d46d:   eb 5f                                 	jmp 0x1d4ce <smi_interrupt_handler+0x143>
0x1d46f:   41 80 fc 01                           	cmp r12b, 1
0x1d473:   75 59                                 	jne 0x1d4ce <smi_interrupt_handler+0x143>
0x1d475:   4c 89 f0                              	mov rax, r14
0x1d478:   25 00 00 30 00                        	and eax, 0x300000
0x1d47d:   48 c1 e8 14                           	shr rax, 0x14
0x1d481:   3c 01                                 	cmp al, 1
0x1d483:   75 49                                 	jne 0x1d4ce <smi_interrupt_handler+0x143>
0x1d485:   f6 83 ec 58 00 00 02                  	test byte ptr [rbx + 0x58ec], 2
0x1d48c:   74 40                                 	je 0x1d4ce <smi_interrupt_handler+0x143>
0x1d48e:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d495:   48 03 83 a8 62 00 00                  	add rax, qword ptr [rbx + 0x62a8]
0x1d49c:   8b 00                                 	mov eax, dword ptr [rax]
0x1d49e:   25 ff ff 3f 00                        	and eax, 0x3fffff
0x1d4a3:   74 08                                 	je 0x1d4ad <smi_interrupt_handler+0x122>
0x1d4a5:   48 3d 20 e5 00 00                     	cmp rax, 0xe520
0x1d4ab:   74 09                                 	je 0x1d4b6 <smi_interrupt_handler+0x12b>
0x1d4ad:   c6 83 59 59 00 00 01                  	mov byte ptr [rbx + 0x5959], 1
0x1d4b4:   eb 18                                 	jmp 0x1d4ce <smi_interrupt_handler+0x143>
0x1d4b6:   48 8b b3 c8 04 00 00                  	mov rsi, qword ptr [rbx + 0x4c8]
0x1d4bd:   48 8b bb a8 58 00 00                  	mov rdi, qword ptr [rbx + 0x58a8]
0x1d4c4:   ba 20 e5 00 00                        	mov edx, 0xe520
0x1d4c9:   e8 34 78 fe ff                        	call 0x4d02 <writeStorageBuff>
0x1d4ce:   80 bb f9 58 00 00 00                  	cmp byte ptr [rbx + 0x58f9], 0
0x1d4d5:   75 4c                                 	jne 0x1d523 <smi_interrupt_handler+0x198>
0x1d4d7:   45 84 ff                              	test r15b, r15b
0x1d4da:   74 20                                 	je 0x1d4fc <smi_interrupt_handler+0x171>
0x1d4dc:   f6 83 ec 58 00 00 01                  	test byte ptr [rbx + 0x58ec], 1
0x1d4e3:   74 17                                 	je 0x1d4fc <smi_interrupt_handler+0x171>
0x1d4e5:   41 83 ce 02                           	or r14d, 2
0x1d4e9:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d4f0:   48 03 83 b8 62 00 00                  	add rax, qword ptr [rbx + 0x62b8]
0x1d4f7:   44 89 30                              	mov dword ptr [rax], r14d
0x1d4fa:   eb 27                                 	jmp 0x1d523 <smi_interrupt_handler+0x198>
0x1d4fc:   41 80 fc 01                           	cmp r12b, 1
0x1d500:   75 21                                 	jne 0x1d523 <smi_interrupt_handler+0x198>
0x1d502:   f6 83 ec 58 00 00 02                  	test byte ptr [rbx + 0x58ec], 2
0x1d509:   74 18                                 	je 0x1d523 <smi_interrupt_handler+0x198>
0x1d50b:   41 81 ce 00 00 02 00                  	or r14d, 0x20000
0x1d512:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d519:   48 03 83 b8 62 00 00                  	add rax, qword ptr [rbx + 0x62b8]
0x1d520:   44 89 30                              	mov dword ptr [rax], r14d
0x1d523:   41 f6 c5 0c                           	test r13b, 0xc ; "GNU"
0x1d527:   0f 84 50 01 00 00                     	je 0x1d67d
0x1d52d:   48 89 df                              	mov rdi, rbx
0x1d530:   e8 97 f8 ff ff                        	call 0x1cdcc <smi_clear_interrupt>
0x1d535:   48 8b 83 00 59 00 00                  	mov rax, qword ptr [rbx + 0x5900]
0x1d53c:   a8 04                                 	test al, 4
0x1d53e:   74 08                                 	je 0x1d548 <smi_interrupt_handler+0x1bd>
0x1d540:   41 bc 00 00 00 00                     	mov r12d, 0
0x1d546:   eb 0b                                 	jmp 0x1d553 <smi_interrupt_handler+0x1c8>
0x1d548:   a8 08                                 	test al, 8
0x1d54a:   b8 01 00 00 00                        	mov eax, 1
0x1d54f:   44 0f 45 e0                           	cmovne r12d, eax
0x1d553:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d55a:   48 03 83 00 63 00 00                  	add rax, qword ptr [rbx + 0x6300]
0x1d561:   44 8b 28                              	mov r13d, dword ptr [rax]
0x1d564:   45 89 ed                              	mov r13d, r13d
0x1d567:   45 84 e4                              	test r12b, r12b
0x1d56a:   41 0f 94 c6                           	sete r14b
0x1d56e:   75 59                                 	jne 0x1d5c9 <smi_interrupt_handler+0x23e>
0x1d570:   4c 89 e8                              	mov rax, r13
0x1d573:   83 e0 30                              	and eax, 0x30
0x1d576:   48 c1 e8 04                           	shr rax, 4
0x1d57a:   3c 01                                 	cmp al, 1
0x1d57c:   75 4b                                 	jne 0x1d5c9 <smi_interrupt_handler+0x23e>
0x1d57e:   f6 83 ed 58 00 00 01                  	test byte ptr [rbx + 0x58ed], 1
0x1d585:   74 42                                 	je 0x1d5c9 <smi_interrupt_handler+0x23e>
0x1d587:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d58e:   48 03 83 d0 62 00 00                  	add rax, qword ptr [rbx + 0x62d0]
0x1d595:   8b 00                                 	mov eax, dword ptr [rax]
0x1d597:   25 ff ff 3f 00                        	and eax, 0x3fffff
0x1d59c:   74 08                                 	je 0x1d5a6 <smi_interrupt_handler+0x21b>
0x1d59e:   48 3d 20 e5 00 00                     	cmp rax, 0xe520
0x1d5a4:   74 09                                 	je 0x1d5af <smi_interrupt_handler+0x224>
0x1d5a6:   c6 83 58 59 00 00 01                  	mov byte ptr [rbx + 0x5958], 1
0x1d5ad:   eb 79                                 	jmp 0x1d628 <smi_interrupt_handler+0x29d>
0x1d5af:   48 8b b3 d0 04 00 00                  	mov rsi, qword ptr [rbx + 0x4d0]
0x1d5b6:   48 8b bb b0 58 00 00                  	mov rdi, qword ptr [rbx + 0x58b0]
0x1d5bd:   ba 20 e5 00 00                        	mov edx, 0xe520
0x1d5c2:   e8 3b 77 fe ff                        	call 0x4d02 <writeStorageBuff>
0x1d5c7:   eb 5f                                 	jmp 0x1d628 <smi_interrupt_handler+0x29d>
0x1d5c9:   41 80 fc 01                           	cmp r12b, 1
0x1d5cd:   75 59                                 	jne 0x1d628 <smi_interrupt_handler+0x29d>
0x1d5cf:   4c 89 e8                              	mov rax, r13
0x1d5d2:   25 00 00 30 00                        	and eax, 0x300000
0x1d5d7:   48 c1 e8 14                           	shr rax, 0x14
0x1d5db:   3c 01                                 	cmp al, 1
0x1d5dd:   75 49                                 	jne 0x1d628 <smi_interrupt_handler+0x29d>
0x1d5df:   f6 83 ed 58 00 00 02                  	test byte ptr [rbx + 0x58ed], 2
0x1d5e6:   74 40                                 	je 0x1d628 <smi_interrupt_handler+0x29d>
0x1d5e8:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d5ef:   48 03 83 f0 62 00 00                  	add rax, qword ptr [rbx + 0x62f0]
0x1d5f6:   8b 00                                 	mov eax, dword ptr [rax]
0x1d5f8:   25 ff ff 3f 00                        	and eax, 0x3fffff
0x1d5fd:   74 08                                 	je 0x1d607 <smi_interrupt_handler+0x27c>
0x1d5ff:   48 3d 20 e5 00 00                     	cmp rax, 0xe520
0x1d605:   74 09                                 	je 0x1d610 <smi_interrupt_handler+0x285>
0x1d607:   c6 83 58 59 00 00 01                  	mov byte ptr [rbx + 0x5958], 1
0x1d60e:   eb 18                                 	jmp 0x1d628 <smi_interrupt_handler+0x29d>
0x1d610:   48 8b b3 d0 04 00 00                  	mov rsi, qword ptr [rbx + 0x4d0]
0x1d617:   48 8b bb b8 58 00 00                  	mov rdi, qword ptr [rbx + 0x58b8]
0x1d61e:   ba 20 e5 00 00                        	mov edx, 0xe520
0x1d623:   e8 da 76 fe ff                        	call 0x4d02 <writeStorageBuff>
0x1d628:   80 bb fb 58 00 00 00                  	cmp byte ptr [rbx + 0x58fb], 0
0x1d62f:   75 4c                                 	jne 0x1d67d
0x1d631:   45 84 f6                              	test r14b, r14b
0x1d634:   74 20                                 	je 0x1d656 <smi_interrupt_handler+0x2cb>
0x1d636:   f6 83 ed 58 00 00 01                  	test byte ptr [rbx + 0x58ed], 1
0x1d63d:   74 17                                 	je 0x1d656 <smi_interrupt_handler+0x2cb>
0x1d63f:   41 83 cd 02                           	or r13d, 2
0x1d643:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x1d64a:   48 03 83 00 63 00 00                  	add rax, qword ptr [rbx + 0x6300]
0x1d651:   44 89 28                              	mov dword ptr [rax], r13d
0x1d654:   eb 27                                 	jmp 0x1d67d
0x1d656:   41 80 fc 01                           	cmp r12b, 1
0x1d65a:   75 21                                 	jne 0x1d67d
0x1d65c:   f6 83 ed 58 00 00 02                  	test byte ptr [rbx + 0x58ed], 2
0x1d663:   74 18                                 	je 0x1d67d
0x1d665:   41 81 cd 00 00 02 00                  	or r13d, 0x20000
; data inside code section at 0x1d66c -- 0x1d670
0x1d66c:   48 8b 83 f8                                        |H...            |
; function: private_data at 0x1d670 -- 0x1d691
0x1d670:   57                                    	push rdi
0x1d671:   00 00                                 	add byte ptr [rax], al
0x1d673:   48 03 83 00 63 00 00                  	add rax, qword ptr [rbx + 0x6300]
0x1d67a:   44 89 28                              	mov dword ptr [rax], r13d
0x1d67d:   c6 03 00                              	mov byte ptr [rbx], 0
0x1d680:   b8 01 00 00 00                        	mov eax, 1
0x1d685:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x1d689:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x1d68d:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
; data inside code section at 0x1d691 -- 0x1d694
0x1d691:   4c 8b 75                                           |L.u             |
; function: load_be_uint16 at 0x1d694 -- 0x1d695
; function: function_1d695 at 0x1d695 -- 0x1d69b
0x1d695:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x1d699:   c9                                    	leave 
0x1d69a:   c3                                    	ret 
; data inside code section at 0x1d69b -- 0x1d6a0
0x1d69b:   90 90 90 90 90                                     |.....           |
; function: private_data at 0x1d6a0 -- 0x1d6a9
0x1d6a0:   55                                    	push rbp
0x1d6a1:   48 89 e5                              	mov rbp, rsp
0x1d6a4:   e8 47 15 02 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x1d6a9 -- 0x1d6ab
0x1d6a9:   48 85                                              |H.              |
; function: connect_card at 0x1d6ab -- 0x1d6c4
0x1d6ab:   ff 74 0f 48                           	push qword ptr [rdi + rcx + 0x48]
0x1d6af:   8b 07                                 	mov eax, dword ptr [rdi]
0x1d6b1:   48 8d 90 68 04 00 00                  	lea rdx, [rax + 0x468]
0x1d6b8:   48 39 d7                              	cmp rdi, rdx
0x1d6bb:   74 05                                 	je 0x1d6c2 <connect_card+0x17>
0x1d6bd:   b8 00 00 00 00                        	mov eax, 0
0x1d6c2:   c9                                    	leave 
0x1d6c3:   c3                                    	ret 
; function: load_be_uint16 at 0x1d6c4 -- 0x1d6db
0x1d6c4:   55                                    	push rbp
0x1d6c5:   48 89 e5                              	mov rbp, rsp
0x1d6c8:   e8 23 15 02 00                        	call 0x3ebf0 <mcount>
0x1d6cd:   0f b6 57 01                           	movzx edx, byte ptr [rdi + 1]
0x1d6d1:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x1d6d4:   c1 e0 08                              	shl eax, 8
0x1d6d7:   09 d0                                 	or eax, edx
0x1d6d9:   c9                                    	leave 
0x1d6da:   c3                                    	ret 
; function: connect_card at 0x1d6db -- 0x1d7d8
0x1d6db:   55                                    	push rbp
0x1d6dc:   48 89 e5                              	mov rbp, rsp
0x1d6df:   48 83 ec 20                           	sub rsp, 0x20
0x1d6e3:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x1d6e7:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x1d6ec:   4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x1d6f1:   4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x1d6f6:   e8 f5 14 02 00                        	call 0x3ebf0 <mcount>
0x1d6fb:   48 89 fb                              	mov rbx, rdi
0x1d6fe:   49 89 f1                              	mov r9, rsi
0x1d701:   b8 01 00 00 00                        	mov eax, 1
0x1d706:   80 7f 54 00                           	cmp byte ptr [rdi + 0x54], 0
0x1d70a:   0f 85 e4 00 00 00                     	jne 0x1d7f4
0x1d710:   4c 8d 67 28                           	lea r12, [rdi + 0x28]
0x1d714:   49 c7 04 24 00 00 00 00               	mov qword ptr [r12], 0
0x1d71c:   49 c7 44 24 08 00 00 00 00            	mov qword ptr [r12 + 8], 0
0x1d725:   49 c7 44 24 10 00 00 00 00            	mov qword ptr [r12 + 0x10], 0
0x1d72e:   49 c7 44 24 18 00 00 00 00            	mov qword ptr [r12 + 0x18], 0
0x1d737:   4c 8d 6f 48                           	lea r13, [rdi + 0x48]
0x1d73b:   49 c7 45 00 00 00 00 00               	mov qword ptr [r13], 0
0x1d743:   c7 47 50 00 00 00 00                  	mov dword ptr [rdi + 0x50], 0
0x1d74a:   48 8b 47 18                           	mov rax, qword ptr [rdi + 0x18]
0x1d74e:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x1d755:   8b 0a                                 	mov ecx, dword ptr [rdx]
0x1d757:   89 08                                 	mov dword ptr [rax], ecx
0x1d759:   0f b6 52 04                           	movzx edx, byte ptr [rdx + 4]
0x1d75d:   88 50 04                              	mov byte ptr [rax + 4], dl
0x1d760:   0f b6 8e 7c 01 00 00                  	movzx ecx, byte ptr [rsi + 0x17c]
0x1d767:   83 e1 07                              	and ecx, 7
0x1d76a:   01 c9                                 	add ecx, ecx
0x1d76c:   83 c9 01                              	or ecx, 1
0x1d76f:   48 8b 77 18                           	mov rsi, qword ptr [rdi + 0x18]
0x1d773:   4d 89 c8                              	mov r8, r9
0x1d776:   ba 05 00 00 00                        	mov edx, 5
0x1d77b:   48 8b 3f                              	mov rdi, qword ptr [rdi]
0x1d77e:   41 ff 51 30                           	call qword ptr [r9 + 0x30]
0x1d782:   83 f8 05                              	cmp eax, 5
0x1d785:   75 68                                 	jne 0x1d7ef
0x1d787:   80 7b 54 00                           	cmp byte ptr [rbx + 0x54], 0
0x1d78b:   74 62                                 	je 0x1d7ef
0x1d78d:   48 63 83 58 02 00 00                  	movsxd rax, dword ptr [rbx + 0x258]
0x1d794:   48 83 f8 38                           	cmp rax, 0x38
0x1d798:   76 55                                 	jbe 0x1d7ef
0x1d79a:   4c 8d 73 56                           	lea r14, [rbx + 0x56]
0x1d79e:   48 8d 7b 5a                           	lea rdi, [rbx + 0x5a]
0x1d7a2:   e8 1d ff ff ff                        	call 0x1d6c4 <load_be_uint16>
0x1d7a7:   3d 00 21 00 00                        	cmp eax, 0x2100
0x1d7ac:   75 41                                 	jne 0x1d7ef
0x1d7ae:   49 8d 46 10                           	lea rax, [r14 + 0x10]
0x1d7b2:   48 8b 10                              	mov rdx, qword ptr [rax]
0x1d7b5:   49 89 14 24                           	mov qword ptr [r12], rdx
0x1d7b9:   48 8b 50 08                           	mov rdx, qword ptr [rax + 8]
0x1d7bd:   49 89 54 24 08                        	mov qword ptr [r12 + 8], rdx
0x1d7c2:   48 8b 50 10                           	mov rdx, qword ptr [rax + 0x10]
0x1d7c6:   49 89 54 24 10                        	mov qword ptr [r12 + 0x10], rdx
0x1d7cb:   48 8b 40 18                           	mov rax, qword ptr [rax + 0x18]
0x1d7cf:   49 89 44 24 18                        	mov qword ptr [r12 + 0x18], rax
0x1d7d4:   49 8b 46 30                           	mov rax, qword ptr [r14 + 0x30]
; data inside code section at 0x1d7d8 -- 0x1d7d9
0x1d7d8:   49                                                 |I               |
; function: proc_emm_b_cas_card at 0x1d7d9 -- 0x1d809
0x1d7d9:   89 45 00                              	mov dword ptr [rbp], eax
0x1d7dc:   49 8d 7e 02                           	lea rdi, [r14 + 2]
0x1d7e0:   e8 df fe ff ff                        	call 0x1d6c4 <load_be_uint16>
0x1d7e5:   89 43 50                              	mov dword ptr [rbx + 0x50], eax
0x1d7e8:   b8 01 00 00 00                        	mov eax, 1
0x1d7ed:   eb 05                                 	jmp 0x1d7f4 <proc_emm_b_cas_card+0x1b>
0x1d7ef:   b8 00 00 00 00                        	mov eax, 0
0x1d7f4:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x1d7f8:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x1d7fd:   4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x1d802:   4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x1d807:   c9                                    	leave 
0x1d808:   c3                                    	ret 
; function: proc_emm_b_cas_card at 0x1d809 -- 0x1d917
0x1d809:   55                                    	push rbp
0x1d80a:   48 89 e5                              	mov rbp, rsp
0x1d80d:   48 83 ec 30                           	sub rsp, 0x30
0x1d811:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x1d815:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x1d819:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x1d81d:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1d821:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1d825:   e8 c6 13 02 00                        	call 0x3ebf0 <mcount>
0x1d82a:   49 89 fc                              	mov r12, rdi
0x1d82d:   49 89 f6                              	mov r14, rsi
0x1d830:   41 89 d5                              	mov r13d, edx
0x1d833:   e8 68 fe ff ff                        	call 0x1d6a0 <private_data>
0x1d838:   48 89 c3                              	mov rbx, rax
0x1d83b:   48 85 c0                              	test rax, rax
0x1d83e:   0f 84 bf 00 00 00                     	je 0x1d903 <proc_emm_b_cas_card+0xfa>
0x1d844:   4d 85 f6                              	test r14, r14
0x1d847:   0f 84 b6 00 00 00                     	je 0x1d903 <proc_emm_b_cas_card+0xfa>
0x1d84d:   45 85 ed                              	test r13d, r13d
0x1d850:   0f 8e ad 00 00 00                     	jle 0x1d903 <proc_emm_b_cas_card+0xfa>
0x1d856:   4d 89 e7                              	mov r15, r12
0x1d859:   4c 89 e6                              	mov rsi, r12
0x1d85c:   48 89 c7                              	mov rdi, rax
0x1d85f:   e8 77 fe ff ff                        	call 0x1d6db <connect_card>
0x1d864:   48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0x1d868:   8b 15 32 02 01 00                     	mov edx, dword ptr [rip + 0x10232]
0x1d86e:   89 10                                 	mov dword ptr [rax], edx
0x1d870:   48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0x1d874:   44 88 68 04                           	mov byte ptr [rax + 4], r13b
0x1d878:   48 8b 7b 18                           	mov rdi, qword ptr [rbx + 0x18]
0x1d87c:   48 83 c7 05                           	add rdi, 5
0x1d880:   49 63 d5                              	movsxd rdx, r13d
0x1d883:   4c 89 f6                              	mov rsi, r14
0x1d886:   e8 dd 12 02 00                        	call 0x3eb68 <memcpy>
0x1d88b:   41 8d 45 05                           	lea eax, [r13 + 5]
0x1d88f:   48 8b 53 18                           	mov rdx, qword ptr [rbx + 0x18]
0x1d893:   c6 04 02 00                           	mov byte ptr [rdx + rax], 0
0x1d897:   41 83 c5 06                           	add r13d, 6
0x1d89b:   45 0f b6 f5                           	movzx r14d, r13b
0x1d89f:   45 39 b4 24 78 01 00 00               	cmp dword ptr [r12 + 0x178], r14d
0x1d8a7:   75 7c                                 	jne 0x1d925
0x1d8a9:   45 85 ed                              	test r13d, r13d
0x1d8ac:   74 5c                                 	je 0x1d90a <proc_emm_b_cas_card+0x101>
0x1d8ae:   48 8b 53 18                           	mov rdx, qword ptr [rbx + 0x18]
0x1d8b2:   41 0f b6 44 24 38                     	movzx eax, byte ptr [r12 + 0x38]
0x1d8b8:   3a 02                                 	cmp al, byte ptr [rdx]
0x1d8ba:   75 69                                 	jne 0x1d925
0x1d8bc:   4c 89 e1                              	mov rcx, r12
0x1d8bf:   b8 00 00 00 00                        	mov eax, 0
0x1d8c4:   eb 15                                 	jmp 0x1d8db <proc_emm_b_cas_card+0xd2>
0x1d8c6:   0f b6 79 39                           	movzx edi, byte ptr [rcx + 0x39]
0x1d8ca:   0f b6 72 01                           	movzx esi, byte ptr [rdx + 1]
0x1d8ce:   48 83 c1 01                           	add rcx, 1
0x1d8d2:   48 83 c2 01                           	add rdx, 1
0x1d8d6:   40 38 f7                              	cmp dil, sil
0x1d8d9:   75 4a                                 	jne 0x1d925
0x1d8db:   83 c0 01                              	add eax, 1
0x1d8de:   41 39 c5                              	cmp r13d, eax
0x1d8e1:   77 e3                                 	ja 0x1d8c6 <proc_emm_b_cas_card+0xbd>
0x1d8e3:   eb 25                                 	jmp 0x1d90a <proc_emm_b_cas_card+0x101>
0x1d8e5:   45 89 b7 78 01 00 00                  	mov dword ptr [r15 + 0x178], r14d
0x1d8ec:   49 8d 7f 38                           	lea rdi, [r15 + 0x38]
0x1d8f0:   44 89 ea                              	mov edx, r13d
0x1d8f3:   48 8b 73 18                           	mov rsi, qword ptr [rbx + 0x18]
0x1d8f7:   e8 6c 12 02 00                        	call 0x3eb68 <memcpy>
0x1d8fc:   b8 00 00 00 00                        	mov eax, 0
0x1d901:   eb 0c                                 	jmp 0x1d90f <proc_emm_b_cas_card+0x106>
0x1d903:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x1d908:   eb 05                                 	jmp 0x1d90f <proc_emm_b_cas_card+0x106>
0x1d90a:   b8 00 00 00 00                        	mov eax, 0
0x1d90f:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x1d913:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
; data inside code section at 0x1d917 -- 0x1d919
0x1d917:   4c 8b                                              |L.              |
; function: proc_ecm_b_cas_card at 0x1d919 -- 0x1d949
0x1d919:   6d                                    	insd dword ptr [rdi], dx
0x1d91a:   e8 4c 8b 75 f0                        	call 0xfffffffff077646b <unknown_fffffffff077646b>
0x1d91f:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x1d923:   c9                                    	leave 
0x1d924:   c3                                    	ret 
0x1d925:   41 8b 8f 7c 01 00 00                  	mov ecx, dword ptr [r15 + 0x17c]
0x1d92c:   01 c9                                 	add ecx, ecx
0x1d92e:   83 e1 0e                              	and ecx, 0xe
0x1d931:   48 8b 73 18                           	mov rsi, qword ptr [rbx + 0x18]
0x1d935:   4d 89 e0                              	mov r8, r12
0x1d938:   44 89 ea                              	mov edx, r13d
0x1d93b:   48 8b 3b                              	mov rdi, qword ptr [rbx]
0x1d93e:   41 ff 57 30                           	call qword ptr [r15 + 0x30]
0x1d942:   83 f8 05                              	cmp eax, 5
0x1d945:   75 bc                                 	jne 0x1d903
0x1d947:   eb 9c                                 	jmp 0x1d8e5
; function: proc_ecm_b_cas_card at 0x1d949 -- 0x1da63
0x1d949:   55                                    	push rbp
0x1d94a:   48 89 e5                              	mov rbp, rsp
0x1d94d:   48 83 ec 30                           	sub rsp, 0x30
0x1d951:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x1d955:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x1d959:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x1d95d:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1d961:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1d965:   e8 86 12 02 00                        	call 0x3ebf0 <mcount>
0x1d96a:   49 89 fc                              	mov r12, rdi
0x1d96d:   49 89 f7                              	mov r15, rsi
0x1d970:   49 89 d6                              	mov r14, rdx
0x1d973:   41 89 cd                              	mov r13d, ecx
0x1d976:   e8 25 fd ff ff                        	call 0x1d6a0 <private_data>
0x1d97b:   48 89 c3                              	mov rbx, rax
0x1d97e:   48 85 c0                              	test rax, rax
0x1d981:   0f 84 c8 00 00 00                     	je 0x1da4f <proc_ecm_b_cas_card+0x106>
0x1d987:   4d 85 ff                              	test r15, r15
0x1d98a:   0f 84 bf 00 00 00                     	je 0x1da4f <proc_ecm_b_cas_card+0x106>
0x1d990:   4d 85 f6                              	test r14, r14
0x1d993:   0f 84 b6 00 00 00                     	je 0x1da4f <proc_ecm_b_cas_card+0x106>
0x1d999:   45 85 ed                              	test r13d, r13d
0x1d99c:   0f 8e ad 00 00 00                     	jle 0x1da4f <proc_ecm_b_cas_card+0x106>
0x1d9a2:   4d 89 e7                              	mov r15, r12
0x1d9a5:   4c 89 e6                              	mov rsi, r12
0x1d9a8:   48 89 c7                              	mov rdi, rax
0x1d9ab:   e8 2b fd ff ff                        	call 0x1d6db <connect_card>
0x1d9b0:   48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0x1d9b4:   8b 15 ef 00 01 00                     	mov edx, dword ptr [rip + 0x100ef]
0x1d9ba:   89 10                                 	mov dword ptr [rax], edx
0x1d9bc:   48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0x1d9c0:   44 88 68 04                           	mov byte ptr [rax + 4], r13b
0x1d9c4:   48 8b 7b 18                           	mov rdi, qword ptr [rbx + 0x18]
0x1d9c8:   48 83 c7 05                           	add rdi, 5
0x1d9cc:   49 63 d5                              	movsxd rdx, r13d
0x1d9cf:   4c 89 f6                              	mov rsi, r14
0x1d9d2:   e8 91 11 02 00                        	call 0x3eb68 <memcpy>
0x1d9d7:   41 8d 45 05                           	lea eax, [r13 + 5]
0x1d9db:   48 8b 53 18                           	mov rdx, qword ptr [rbx + 0x18]
0x1d9df:   c6 04 02 00                           	mov byte ptr [rdx + rax], 0
0x1d9e3:   41 83 c5 06                           	add r13d, 6
0x1d9e7:   45 0f b6 f5                           	movzx r14d, r13b
0x1d9eb:   45 39 b4 24 78 01 00 00               	cmp dword ptr [r12 + 0x178], r14d
0x1d9f3:   75 7c                                 	jne 0x1da71
0x1d9f5:   45 85 ed                              	test r13d, r13d
0x1d9f8:   74 5c                                 	je 0x1da56 <proc_ecm_b_cas_card+0x10d>
0x1d9fa:   48 8b 53 18                           	mov rdx, qword ptr [rbx + 0x18]
0x1d9fe:   41 0f b6 44 24 38                     	movzx eax, byte ptr [r12 + 0x38]
0x1da04:   3a 02                                 	cmp al, byte ptr [rdx]
0x1da06:   75 69                                 	jne 0x1da71
0x1da08:   4c 89 e1                              	mov rcx, r12
0x1da0b:   b8 00 00 00 00                        	mov eax, 0
0x1da10:   eb 15                                 	jmp 0x1da27 <proc_ecm_b_cas_card+0xde>
0x1da12:   0f b6 79 39                           	movzx edi, byte ptr [rcx + 0x39]
0x1da16:   0f b6 72 01                           	movzx esi, byte ptr [rdx + 1]
0x1da1a:   48 83 c1 01                           	add rcx, 1
0x1da1e:   48 83 c2 01                           	add rdx, 1
0x1da22:   40 38 f7                              	cmp dil, sil
0x1da25:   75 4a                                 	jne 0x1da71
0x1da27:   83 c0 01                              	add eax, 1
0x1da2a:   41 39 c5                              	cmp r13d, eax
0x1da2d:   77 e3                                 	ja 0x1da12 <proc_ecm_b_cas_card+0xc9>
0x1da2f:   eb 25                                 	jmp 0x1da56 <proc_ecm_b_cas_card+0x10d>
0x1da31:   45 89 b7 78 01 00 00                  	mov dword ptr [r15 + 0x178], r14d
0x1da38:   49 8d 7f 38                           	lea rdi, [r15 + 0x38]
0x1da3c:   44 89 ea                              	mov edx, r13d
0x1da3f:   48 8b 73 18                           	mov rsi, qword ptr [rbx + 0x18]
0x1da43:   e8 20 11 02 00                        	call 0x3eb68 <memcpy>
0x1da48:   b8 00 00 00 00                        	mov eax, 0
0x1da4d:   eb 0c                                 	jmp 0x1da5b <proc_ecm_b_cas_card+0x112>
0x1da4f:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x1da54:   eb 05                                 	jmp 0x1da5b <proc_ecm_b_cas_card+0x112>
0x1da56:   b8 00 00 00 00                        	mov eax, 0
0x1da5b:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x1da5f:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
; data inside code section at 0x1da63 -- 0x1da65
0x1da63:   4c 8b                                              |L.              |
; function: get_init_status_b_cas_card at 0x1da65 -- 0x1da95
0x1da65:   6d                                    	insd dword ptr [rdi], dx
0x1da66:   e8 4c 8b 75 f0                        	call 0xfffffffff07765b7 <unknown_fffffffff07765b7>
0x1da6b:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x1da6f:   c9                                    	leave 
0x1da70:   c3                                    	ret 
0x1da71:   41 8b 8f 7c 01 00 00                  	mov ecx, dword ptr [r15 + 0x17c]
0x1da78:   01 c9                                 	add ecx, ecx
0x1da7a:   83 e1 0e                              	and ecx, 0xe
0x1da7d:   48 8b 73 18                           	mov rsi, qword ptr [rbx + 0x18]
0x1da81:   4d 89 e0                              	mov r8, r12
0x1da84:   44 89 ea                              	mov edx, r13d
0x1da87:   48 8b 3b                              	mov rdi, qword ptr [rbx]
0x1da8a:   41 ff 57 30                           	call qword ptr [r15 + 0x30]
0x1da8e:   83 f8 05                              	cmp eax, 5
0x1da91:   75 c3                                 	jne 0x1da56
0x1da93:   eb 9c                                 	jmp 0x1da31
; function: get_init_status_b_cas_card at 0x1da95 -- 0x1dafa
0x1da95:   55                                    	push rbp
0x1da96:   48 89 e5                              	mov rbp, rsp
0x1da99:   53                                    	push rbx
0x1da9a:   e8 51 11 02 00                        	call 0x3ebf0 <mcount>
0x1da9f:   48 89 f3                              	mov rbx, rsi
0x1daa2:   e8 f9 fb ff ff                        	call 0x1d6a0 <private_data>
0x1daa7:   48 85 c0                              	test rax, rax
0x1daaa:   74 05                                 	je 0x1dab1 <get_init_status_b_cas_card+0x1c>
0x1daac:   48 85 db                              	test rbx, rbx
0x1daaf:   75 07                                 	jne 0x1dab8 <get_init_status_b_cas_card+0x23>
0x1dab1:   ba ff ff ff ff                        	mov edx, 0xffffffff
0x1dab6:   eb 6e                                 	jmp 0x1db26
0x1dab8:   ba fe ff ff ff                        	mov edx, 0xfffffffe
0x1dabd:   80 78 54 00                           	cmp byte ptr [rax + 0x54], 0
0x1dac1:   74 63                                 	je 0x1db26
0x1dac3:   48 89 df                              	mov rdi, rbx
0x1dac6:   48 8d 70 28                           	lea rsi, [rax + 0x28]
0x1daca:   b8 3c 04 00 00                        	mov eax, 0x43c
0x1dacf:   f6 c3 04                              	test bl, 4
0x1dad2:   74 0f                                 	je 0x1dae3 <get_init_status_b_cas_card+0x4e>
0x1dad4:   8b 16                                 	mov edx, dword ptr [rsi]
0x1dad6:   89 13                                 	mov dword ptr [rbx], edx
0x1dad8:   48 83 c7 04                           	add rdi, 4
0x1dadc:   48 83 c6 04                           	add rsi, 4
0x1dae0:   83 e8 04                              	sub eax, 4
0x1dae3:   89 c1                                 	mov ecx, eax
0x1dae5:   c1 e9 03                              	shr ecx, 3
0x1dae8:   89 c9                                 	mov ecx, ecx
0x1daea:   f3 48 a5                              	rep movsq qword ptr [rdi], qword ptr [rsi]
0x1daed:   ba 00 00 00 00                        	mov edx, 0
0x1daf2:   a8 04                                 	test al, 4
0x1daf4:   74 08                                 	je 0x1dafe
0x1daf6:   8b 0e                                 	mov ecx, dword ptr [rsi]
0x1daf8:   89 0f                                 	mov dword ptr [rdi], ecx
; data inside code section at 0x1dafa -- 0x1dafb
0x1dafa:   48                                                 |H               |
; function: teardown at 0x1dafb -- 0x1db2b
0x1dafb:   83 c2 04                              	add edx, 4
0x1dafe:   89 c1                                 	mov ecx, eax
0x1db00:   83 e1 02                              	and ecx, 2
0x1db03:   85 c9                                 	test ecx, ecx
0x1db05:   74 0c                                 	je 0x1db13 <teardown+0x18>
0x1db07:   0f b7 0c 16                           	movzx ecx, word ptr [rsi + rdx]
0x1db0b:   66 89 0c 17                           	mov word ptr [rdi + rdx], cx
0x1db0f:   48 83 c2 02                           	add rdx, 2
0x1db13:   83 e0 01                              	and eax, 1
0x1db16:   85 c0                                 	test eax, eax
0x1db18:   74 07                                 	je 0x1db21 <teardown+0x26>
0x1db1a:   0f b6 04 16                           	movzx eax, byte ptr [rsi + rdx]
0x1db1e:   88 04 17                              	mov byte ptr [rdi + rdx], al
0x1db21:   ba 00 00 00 00                        	mov edx, 0
0x1db26:   89 d0                                 	mov eax, edx
0x1db28:   5b                                    	pop rbx
0x1db29:   c9                                    	leave 
0x1db2a:   c3                                    	ret 
; function: teardown at 0x1db2b -- 0x1db40
0x1db2b:   55                                    	push rbp
0x1db2c:   48 89 e5                              	mov rbp, rsp
0x1db2f:   53                                    	push rbx
0x1db30:   48 83 ec 08                           	sub rsp, 8
0x1db34:   e8 b7 10 02 00                        	call 0x3ebf0 <mcount>
0x1db39:   48 89 fb                              	mov rbx, rdi
0x1db3c:   48 8b 7f 08                           	mov rdi, qword ptr [rdi + 8]
; data inside code section at 0x1db40 -- 0x1db41
0x1db40:   48                                                 |H               |
; function: init_b_cas_card at 0x1db41 -- 0x1db71
0x1db41:   85 ff                                 	test edi, edi
0x1db43:   74 0d                                 	je 0x1db52 <init_b_cas_card+0x11>
0x1db45:   e8 2e 10 02 00                        	call 0x3eb78 <kfree>
0x1db4a:   48 c7 43 08 00 00 00 00               	mov qword ptr [rbx + 8], 0
0x1db52:   48 c7 43 10 00 00 00 00               	mov qword ptr [rbx + 0x10], 0
0x1db5a:   48 c7 43 18 00 00 00 00               	mov qword ptr [rbx + 0x18], 0
0x1db62:   48 c7 43 20 00 00 00 00               	mov qword ptr [rbx + 0x20], 0
0x1db6a:   48 83 c4 08                           	add rsp, 8
0x1db6e:   5b                                    	pop rbx
0x1db6f:   c9                                    	leave 
0x1db70:   c3                                    	ret 
; function: init_b_cas_card at 0x1db71 -- 0x1dc51
0x1db71:   55                                    	push rbp
0x1db72:   48 89 e5                              	mov rbp, rsp
0x1db75:   48 83 ec 40                           	sub rsp, 0x40
0x1db79:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x1db7d:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x1db81:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x1db85:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1db89:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1db8d:   e8 5e 10 02 00                        	call 0x3ebf0 <mcount>
0x1db92:   49 89 fc                              	mov r12, rdi
0x1db95:   e8 06 fb ff ff                        	call 0x1d6a0 <private_data>
0x1db9a:   48 89 c3                              	mov rbx, rax
0x1db9d:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x1dba2:   48 85 db                              	test rbx, rbx
0x1dba5:   0f 84 c0 00 00 00                     	je 0x1dc6b
0x1dbab:   48 89 df                              	mov rdi, rbx
0x1dbae:   e8 78 ff ff ff                        	call 0x1db2b <teardown>
0x1dbb3:   4c 8b 2d fe 11 02 00                  	mov r13, qword ptr [rip + 0x211fe]
0x1dbba:   be 20 00 00 00                        	mov esi, 0x20
0x1dbbf:   4c 89 ef                              	mov rdi, r13
0x1dbc2:   e8 69 10 02 00                        	call 0x3ec30 <kmem_cache_alloc_notrace>
0x1dbc7:   49 89 c6                              	mov r14, rax
0x1dbca:   4c 89 ef                              	mov rdi, r13
0x1dbcd:   e8 f6 10 02 00                        	call 0x3ecc8 <slab_buffer_size>
0x1dbd2:   49 89 c5                              	mov r13, rax
0x1dbd5:   49 c7 c7 00 00 00 00                  	mov r15, 0
0x1dbdc:   83 3d cd 10 02 00 00                  	cmp dword ptr [rip + 0x210cd], 0
0x1dbe3:   74 39                                 	je 0x1dc1e <init_b_cas_card+0xad>
0x1dbe5:   48 8b 05 dc 10 02 00                  	mov rax, qword ptr [rip + 0x210dc]
0x1dbec:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x1dbf0:   48 85 c0                              	test rax, rax
0x1dbf3:   74 29                                 	je 0x1dc1e <init_b_cas_card+0xad>
0x1dbf5:   41 b8 20 00 00 00                     	mov r8d, 0x20
0x1dbfb:   4c 89 e9                              	mov rcx, r13
0x1dbfe:   ba 00 21 00 00                        	mov edx, 0x2100
0x1dc03:   4c 89 f6                              	mov rsi, r14
0x1dc06:   4c 89 ff                              	mov rdi, r15
0x1dc09:   48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x1dc0d:   ff 10                                 	call qword ptr [rax]
0x1dc0f:   48 83 45 c8 08                        	add qword ptr [rbp - 0x38], 8
0x1dc14:   48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x1dc18:   48 83 38 00                           	cmp qword ptr [rax], 0
0x1dc1c:   75 d7                                 	jne 0x1dbf5 <init_b_cas_card+0x84>
0x1dc1e:   4c 89 f7                              	mov rdi, r14
0x1dc21:   4c 89 73 08                           	mov qword ptr [rbx + 8], r14
0x1dc25:   b8 fb ff ff ff                        	mov eax, 0xfffffffb
0x1dc2a:   4d 85 f6                              	test r14, r14
0x1dc2d:   74 3c                                 	je 0x1dc6b
0x1dc2f:   ba 00 21 00 00                        	mov edx, 0x2100
0x1dc34:   be 00 00 00 00                        	mov esi, 0
0x1dc39:   e8 02 10 02 00                        	call 0x3ec40 <memset>
0x1dc3e:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x1dc42:   48 89 43 10                           	mov qword ptr [rbx + 0x10], rax
0x1dc46:   48 8d 90 00 01 00 00                  	lea rdx, [rax + 0x100]
0x1dc4d:   48 89 53 18                           	mov qword ptr [rbx + 0x18], rdx
; function: release_b_cas_card at 0x1dc51 -- 0x1dc81
0x1dc51:   48 05 00 11 00 00                     	add rax, 0x1100
0x1dc57:   48 89 43 20                           	mov qword ptr [rbx + 0x20], rax
0x1dc5b:   4c 89 e6                              	mov rsi, r12
0x1dc5e:   48 89 df                              	mov rdi, rbx
0x1dc61:   e8 75 fa ff ff                        	call 0x1d6db <connect_card>
0x1dc66:   b8 00 00 00 00                        	mov eax, 0
0x1dc6b:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x1dc6f:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x1dc73:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x1dc77:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x1dc7b:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x1dc7f:   c9                                    	leave 
0x1dc80:   c3                                    	ret 
; function: release_b_cas_card at 0x1dc81 -- 0x1dc82
0x1dc81:   55                                    	push rbp
; data inside code section at 0x1dc82 -- 0x1dc83
0x1dc82:   48                                                 |H               |
; function: create_b_cas_card at 0x1dc83 -- 0x1dcb3
0x1dc83:   89 e5                                 	mov ebp, esp
0x1dc85:   53                                    	push rbx
0x1dc86:   48 83 ec 08                           	sub rsp, 8
0x1dc8a:   e8 61 0f 02 00                        	call 0x3ebf0 <mcount>
0x1dc8f:   e8 0c fa ff ff                        	call 0x1d6a0 <private_data>
0x1dc94:   48 89 c3                              	mov rbx, rax
0x1dc97:   48 85 c0                              	test rax, rax
0x1dc9a:   74 10                                 	je 0x1dcac <create_b_cas_card+0x29>
0x1dc9c:   48 89 c7                              	mov rdi, rax
0x1dc9f:   e8 87 fe ff ff                        	call 0x1db2b <teardown>
0x1dca4:   48 89 df                              	mov rdi, rbx
0x1dca7:   e8 cc 0e 02 00                        	call 0x3eb78 <kfree>
0x1dcac:   48 83 c4 08                           	add rsp, 8
0x1dcb0:   5b                                    	pop rbx
0x1dcb1:   c9                                    	leave 
0x1dcb2:   c3                                    	ret 
; function: create_b_cas_card at 0x1dcb3 -- 0x1dd77
0x1dcb3:   55                                    	push rbp
0x1dcb4:   48 89 e5                              	mov rbp, rsp
0x1dcb7:   48 83 ec 40                           	sub rsp, 0x40
0x1dcbb:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x1dcbf:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x1dcc3:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x1dcc7:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1dccb:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1dccf:   e8 1c 0f 02 00                        	call 0x3ebf0 <mcount>
0x1dcd4:   49 89 fc                              	mov r12, rdi
0x1dcd7:   49 89 f5                              	mov r13, rsi
0x1dcda:   48 8b 1d 8f 10 02 00                  	mov rbx, qword ptr [rip + 0x2108f]
0x1dce1:   be 20 00 00 00                        	mov esi, 0x20
0x1dce6:   48 89 df                              	mov rdi, rbx
0x1dce9:   e8 42 0f 02 00                        	call 0x3ec30 <kmem_cache_alloc_notrace>
0x1dcee:   49 89 c6                              	mov r14, rax
0x1dcf1:   48 89 df                              	mov rdi, rbx
0x1dcf4:   e8 cf 0f 02 00                        	call 0x3ecc8 <slab_buffer_size>
0x1dcf9:   48 89 c3                              	mov rbx, rax
0x1dcfc:   49 c7 c7 00 00 00 00                  	mov r15, 0
0x1dd03:   83 3d a6 0f 02 00 00                  	cmp dword ptr [rip + 0x20fa6], 0
0x1dd0a:   74 39                                 	je 0x1dd45 <create_b_cas_card+0x92>
0x1dd0c:   48 8b 05 b5 0f 02 00                  	mov rax, qword ptr [rip + 0x20fb5]
0x1dd13:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x1dd17:   48 85 c0                              	test rax, rax
0x1dd1a:   74 29                                 	je 0x1dd45 <create_b_cas_card+0x92>
0x1dd1c:   41 b8 20 00 00 00                     	mov r8d, 0x20
0x1dd22:   48 89 d9                              	mov rcx, rbx
0x1dd25:   ba e8 05 00 00                        	mov edx, 0x5e8
0x1dd2a:   4c 89 f6                              	mov rsi, r14
0x1dd2d:   4c 89 ff                              	mov rdi, r15
0x1dd30:   48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x1dd34:   ff 10                                 	call qword ptr [rax]
0x1dd36:   48 83 45 c8 08                        	add qword ptr [rbp - 0x38], 8
0x1dd3b:   48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x1dd3f:   48 83 38 00                           	cmp qword ptr [rax], 0
0x1dd43:   75 d7                                 	jne 0x1dd1c <create_b_cas_card+0x69>
0x1dd45:   b8 00 00 00 00                        	mov eax, 0
0x1dd4a:   4d 85 f6                              	test r14, r14
0x1dd4d:   74 44                                 	je 0x1dd93
0x1dd4f:   b9 bd 00 00 00                        	mov ecx, 0xbd
0x1dd54:   4c 89 f7                              	mov rdi, r14
0x1dd57:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x1dd5a:   4d 89 26                              	mov qword ptr [r14], r12
0x1dd5d:   49 8d 86 68 04 00 00                  	lea rax, [r14 + 0x468]
0x1dd64:   4c 89 30                              	mov qword ptr [rax], r14
0x1dd67:   48 c7 40 08 00 00 00 00               	mov qword ptr [rax + 8], 0
0x1dd6f:   48 c7 40 10 00 00 00 00               	mov qword ptr [rax + 0x10], 0
; data inside code section at 0x1dd77 -- 0x1dd7c
0x1dd77:   48 c7 40 18 00                                     |H.@..           |
; function: FUSB_ProcessSysControlIrp at 0x1dd7c -- 0x1dd8c
0x1dd7c:   00 00                                 	add byte ptr [rax], al
0x1dd7e:   00 48 c7                              	add byte ptr [rax - 0x39], cl
0x1dd81:   40 20 00                              	and byte ptr [rax], al
0x1dd84:   00 00                                 	add byte ptr [rax], al
0x1dd86:   00 48 c7                              	add byte ptr [rax - 0x39], cl
0x1dd89:   40 28 00                              	sub byte ptr [rax], al
; function: FUSB_Unload at 0x1dd8c -- 0x1dd96
0x1dd8c:   00 00                                 	add byte ptr [rax], al
0x1dd8e:   00 4c 89 68                           	add byte ptr [rcx + rcx*4 + 0x68], cl
0x1dd92:   30 48 8b                              	xor byte ptr [rax - 0x75], cl
0x1dd95:   5d                                    	pop rbp
; data inside code section at 0x1dd96 -- 0x1dd97
0x1dd96:   d8                                                 |.               |
; function: FUSB_CallUSBD at 0x1dd97 -- 0x1dda7
0x1dd97:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x1dd9b:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x1dd9f:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x1dda3:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
; function: FUSB_ConfigureDevice at 0x1dda7 -- 0x1dda9
0x1dda7:   c9                                    	leave 
0x1dda8:   c3                                    	ret 
; data inside code section at 0x1dda9 -- 0x1ddac
0x1dda9:   90 90 90                                           |...             |
; function: FUSB_ProcessSysControlIrp at 0x1ddac -- 0x1ddb5
0x1ddac:   55                                    	push rbp
0x1ddad:   48 89 e5                              	mov rbp, rsp
0x1ddb0:   e8 3b 0e 02 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x1ddb5 -- 0x1ddb7
0x1ddb5:   b8 01                                              |..              |
; function: FUSB_SelectInterface at 0x1ddb7 -- 0x1ddbc
0x1ddb7:   00 00                                 	add byte ptr [rax], al
0x1ddb9:   00 c9                                 	add cl, cl
0x1ddbb:   c3                                    	ret 
; function: FUSB_Unload at 0x1ddbc -- 0x1ddc7
0x1ddbc:   55                                    	push rbp
0x1ddbd:   48 89 e5                              	mov rbp, rsp
0x1ddc0:   e8 2b 0e 02 00                        	call 0x3ebf0 <mcount>
0x1ddc5:   c9                                    	leave 
0x1ddc6:   c3                                    	ret 
; function: FUSB_ResetPipe at 0x1ddc7 -- 0x1ddd7
0x1ddc7:   55                                    	push rbp
0x1ddc8:   48 89 e5                              	mov rbp, rsp
0x1ddcb:   e8 20 0e 02 00                        	call 0x3ebf0 <mcount>
0x1ddd0:   b8 01 00 00 00                        	mov eax, 1
0x1ddd5:   c9                                    	leave 
0x1ddd6:   c3                                    	ret 
; function: FUSB_DecrementIoCount at 0x1ddd7 -- 0x1dde7
0x1ddd7:   55                                    	push rbp
0x1ddd8:   48 89 e5                              	mov rbp, rsp
0x1dddb:   e8 10 0e 02 00                        	call 0x3ebf0 <mcount>
0x1dde0:   b8 00 00 00 00                        	mov eax, 0
0x1dde5:   c9                                    	leave 
0x1dde6:   c3                                    	ret 
; function: FUSB_IncrementIoCount at 0x1dde7 -- 0x1ddf0
0x1dde7:   55                                    	push rbp
0x1dde8:   48 89 e5                              	mov rbp, rsp
0x1ddeb:   e8 00 0e 02 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x1ddf0 -- 0x1ddf2
0x1ddf0:   b8 00                                              |..              |
; function: FUSB_CreateDeviceObject at 0x1ddf2 -- 0x1ddf7
0x1ddf2:   00 00                                 	add byte ptr [rax], al
0x1ddf4:   00 c9                                 	add cl, cl
0x1ddf6:   c3                                    	ret 
; function: FUSB_ResetPipe at 0x1ddf7 -- 0x1de07
0x1ddf7:   55                                    	push rbp
0x1ddf8:   48 89 e5                              	mov rbp, rsp
0x1ddfb:   e8 f0 0d 02 00                        	call 0x3ebf0 <mcount>
0x1de00:   b8 00 00 00 00                        	mov eax, 0
0x1de05:   c9                                    	leave 
0x1de06:   c3                                    	ret 
; function: FUSB_DecrementIoCount at 0x1de07 -- 0x1de17
0x1de07:   55                                    	push rbp
0x1de08:   48 89 e5                              	mov rbp, rsp
0x1de0b:   e8 e0 0d 02 00                        	call 0x3ebf0 <mcount>
0x1de10:   b8 00 00 00 00                        	mov eax, 0
0x1de15:   c9                                    	leave 
0x1de16:   c3                                    	ret 
; function: FUSB_IncrementIoCount at 0x1de17 -- 0x1de22
0x1de17:   55                                    	push rbp
0x1de18:   48 89 e5                              	mov rbp, rsp
0x1de1b:   e8 d0 0d 02 00                        	call 0x3ebf0 <mcount>
0x1de20:   c9                                    	leave 
0x1de21:   c3                                    	ret 
; function: FUSB_CreateDeviceObject at 0x1de22 -- 0x1e121
0x1de22:   55                                    	push rbp
0x1de23:   48 89 e5                              	mov rbp, rsp
0x1de26:   41 54                                 	push r12
0x1de28:   53                                    	push rbx
0x1de29:   e8 c2 0d 02 00                        	call 0x3ebf0 <mcount>
0x1de2e:   49 89 cc                              	mov r12, rcx
0x1de31:   44 89 c3                              	mov ebx, r8d
0x1de34:   bf 01 00 00 00                        	mov edi, 1
0x1de39:   e8 42 37 fe ff                        	call 0x1580 <NT_SUCCESS>
0x1de3e:   84 c0                                 	test al, al
0x1de40:   0f 84 04 03 00 00                     	je 0x1e14a
0x1de46:   84 db                                 	test bl, bl
0x1de48:   bb 00 00 00 00                        	mov ebx, 0
0x1de4d:   49 0f 45 dc                           	cmovne rbx, r12
0x1de51:   bf 01 00 00 00                        	mov edi, 1
0x1de56:   e8 25 37 fe ff                        	call 0x1580 <NT_SUCCESS>
0x1de5b:   84 c0                                 	test al, al
0x1de5d:   0f 84 e7 02 00 00                     	je 0x1e14a
0x1de63:   48 c7 83 d8 00 00 00 00 00 50 00      	mov qword ptr [rbx + 0xd8], 0x500000
0x1de6e:   48 89 da                              	mov rdx, rbx
0x1de71:   b8 00 00 00 00                        	mov eax, 0
0x1de76:   c6 82 80 04 00 00 00                  	mov byte ptr [rdx + 0x480], 0
0x1de7d:   c6 82 78 03 00 00 00                  	mov byte ptr [rdx + 0x378], 0
0x1de84:   48 c7 84 03 80 03 00 00 00 00 00 00   	mov qword ptr [rbx + rax + 0x380], 0
0x1de90:   48 c7 84 03 00 04 00 00 00 00 00 00   	mov qword ptr [rbx + rax + 0x400], 0
0x1de9c:   48 c7 84 03 c0 03 00 00 00 00 00 00   	mov qword ptr [rbx + rax + 0x3c0], 0
0x1dea8:   48 c7 84 03 40 04 00 00 00 00 00 00   	mov qword ptr [rbx + rax + 0x440], 0
0x1deb4:   48 83 c2 01                           	add rdx, 1
0x1deb8:   48 83 c0 08                           	add rax, 8
0x1debc:   48 83 f8 40                           	cmp rax, 0x40
0x1dec0:   75 b4                                 	jne 0x1de76 <FUSB_CreateDeviceObject+0x54>
0x1dec2:   c6 83 af 4f 00 00 00                  	mov byte ptr [rbx + 0x4faf], 0
0x1dec9:   c6 83 b0 4f 00 00 00                  	mov byte ptr [rbx + 0x4fb0], 0
0x1ded0:   c6 83 b1 4f 00 00 00                  	mov byte ptr [rbx + 0x4fb1], 0
0x1ded7:   c6 83 b2 4f 00 00 00                  	mov byte ptr [rbx + 0x4fb2], 0
0x1dede:   c7 43 18 00 00 00 00                  	mov dword ptr [rbx + 0x18], 0
0x1dee5:   48 8d 7b 20                           	lea rdi, [rbx + 0x20]
0x1dee9:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x1def0:   e8 63 0d 02 00                        	call 0x3ec58 <__init_waitqueue_head>
0x1def5:   c7 43 78 00 00 00 00                  	mov dword ptr [rbx + 0x78], 0
0x1defc:   48 8d bb 80 00 00 00                  	lea rdi, [rbx + 0x80]
0x1df03:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x1df0a:   e8 49 0d 02 00                        	call 0x3ec58 <__init_waitqueue_head>
0x1df0f:   c7 43 38 00 00 00 00                  	mov dword ptr [rbx + 0x38], 0
0x1df16:   48 8d 7b 40                           	lea rdi, [rbx + 0x40]
0x1df1a:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x1df21:   e8 32 0d 02 00                        	call 0x3ec58 <__init_waitqueue_head>
0x1df26:   c7 43 58 00 00 00 00                  	mov dword ptr [rbx + 0x58], 0
0x1df2d:   48 8d 7b 60                           	lea rdi, [rbx + 0x60]
0x1df31:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x1df38:   e8 1b 0d 02 00                        	call 0x3ec58 <__init_waitqueue_head>
0x1df3d:   48 8d 83 a0 00 00 00                  	lea rax, [rbx + 0xa0]
0x1df44:   c7 83 98 00 00 00 00 00 00 00         	mov dword ptr [rbx + 0x98], 0
0x1df4e:   c7 83 9c 00 00 00 01 00 00 00         	mov dword ptr [rbx + 0x9c], 1
0x1df58:   48 89 83 a0 00 00 00                  	mov qword ptr [rbx + 0xa0], rax
0x1df5f:   48 89 83 a8 00 00 00                  	mov qword ptr [rbx + 0xa8], rax
0x1df66:   48 8d 83 e8 00 00 00                  	lea rax, [rbx + 0xe8]
0x1df6d:   c7 83 e0 00 00 00 00 00 00 00         	mov dword ptr [rbx + 0xe0], 0
0x1df77:   c7 83 e4 00 00 00 01 00 00 00         	mov dword ptr [rbx + 0xe4], 1
0x1df81:   48 89 83 e8 00 00 00                  	mov qword ptr [rbx + 0xe8], rax
0x1df88:   48 89 83 f0 00 00 00                  	mov qword ptr [rbx + 0xf0], rax
0x1df8f:   48 8d 83 00 01 00 00                  	lea rax, [rbx + 0x100]
0x1df96:   c7 83 f8 00 00 00 00 00 00 00         	mov dword ptr [rbx + 0xf8], 0
0x1dfa0:   c7 83 fc 00 00 00 01 00 00 00         	mov dword ptr [rbx + 0xfc], 1
0x1dfaa:   48 89 83 00 01 00 00                  	mov qword ptr [rbx + 0x100], rax
0x1dfb1:   48 89 83 08 01 00 00                  	mov qword ptr [rbx + 0x108], rax
0x1dfb8:   48 8d 83 18 01 00 00                  	lea rax, [rbx + 0x118]
0x1dfbf:   c7 83 10 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x110], 0
0x1dfc9:   c7 83 14 01 00 00 01 00 00 00         	mov dword ptr [rbx + 0x114], 1
0x1dfd3:   48 89 83 18 01 00 00                  	mov qword ptr [rbx + 0x118], rax
0x1dfda:   48 89 83 20 01 00 00                  	mov qword ptr [rbx + 0x120], rax
0x1dfe1:   48 8d 83 48 01 00 00                  	lea rax, [rbx + 0x148]
0x1dfe8:   c7 83 40 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x140], 0
0x1dff2:   c7 83 44 01 00 00 01 00 00 00         	mov dword ptr [rbx + 0x144], 1
0x1dffc:   48 89 83 48 01 00 00                  	mov qword ptr [rbx + 0x148], rax
0x1e003:   48 89 83 50 01 00 00                  	mov qword ptr [rbx + 0x150], rax
0x1e00a:   48 8d 83 60 01 00 00                  	lea rax, [rbx + 0x160]
0x1e011:   c7 83 58 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x158], 0
0x1e01b:   c7 83 5c 01 00 00 01 00 00 00         	mov dword ptr [rbx + 0x15c], 1
0x1e025:   48 89 83 60 01 00 00                  	mov qword ptr [rbx + 0x160], rax
0x1e02c:   48 89 83 68 01 00 00                  	mov qword ptr [rbx + 0x168], rax
0x1e033:   48 8d 83 90 01 00 00                  	lea rax, [rbx + 0x190]
0x1e03a:   48 8d 93 a8 01 00 00                  	lea rdx, [rbx + 0x1a8]
0x1e041:   c7 83 a0 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1a0], 0
0x1e04b:   c7 83 a4 01 00 00 01 00 00 00         	mov dword ptr [rbx + 0x1a4], 1
0x1e055:   48 89 93 a8 01 00 00                  	mov qword ptr [rbx + 0x1a8], rdx
0x1e05c:   48 89 93 b0 01 00 00                  	mov qword ptr [rbx + 0x1b0], rdx
0x1e063:   48 8d 93 c0 01 00 00                  	lea rdx, [rbx + 0x1c0]
0x1e06a:   c7 83 b8 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x1b8], 0
0x1e074:   c7 83 bc 01 00 00 01 00 00 00         	mov dword ptr [rbx + 0x1bc], 1
0x1e07e:   48 89 93 c0 01 00 00                  	mov qword ptr [rbx + 0x1c0], rdx
0x1e085:   48 89 93 c8 01 00 00                  	mov qword ptr [rbx + 0x1c8], rdx
0x1e08c:   48 8d 93 78 01 00 00                  	lea rdx, [rbx + 0x178]
0x1e093:   c7 83 70 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x170], 0
0x1e09d:   c7 83 74 01 00 00 01 00 00 00         	mov dword ptr [rbx + 0x174], 1
0x1e0a7:   48 89 93 78 01 00 00                  	mov qword ptr [rbx + 0x178], rdx
0x1e0ae:   48 89 93 80 01 00 00                  	mov qword ptr [rbx + 0x180], rdx
0x1e0b5:   c7 83 88 01 00 00 00 00 00 00         	mov dword ptr [rbx + 0x188], 0
0x1e0bf:   c7 83 8c 01 00 00 01 00 00 00         	mov dword ptr [rbx + 0x18c], 1
0x1e0c9:   48 89 83 90 01 00 00                  	mov qword ptr [rbx + 0x190], rax
0x1e0d0:   48 89 83 98 01 00 00                  	mov qword ptr [rbx + 0x198], rax
0x1e0d7:   48 c7 83 78 56 00 00 00 00 00 00      	mov qword ptr [rbx + 0x5678], 0
0x1e0e2:   48 c7 83 90 56 00 00 00 00 00 00      	mov qword ptr [rbx + 0x5690], 0
0x1e0ed:   48 c7 83 80 56 00 00 00 00 00 00      	mov qword ptr [rbx + 0x5680], 0
0x1e0f8:   48 8d 83 20 59 00 00                  	lea rax, [rbx + 0x5920]
0x1e0ff:   c7 83 18 59 00 00 00 00 00 00         	mov dword ptr [rbx + 0x5918], 0
0x1e109:   c7 83 1c 59 00 00 01 00 00 00         	mov dword ptr [rbx + 0x591c], 1
0x1e113:   48 89 83 20 59 00 00                  	mov qword ptr [rbx + 0x5920], rax
0x1e11a:   48 89 83 28 59 00 00                  	mov qword ptr [rbx + 0x5928], rax
; data inside code section at 0x1e121 -- 0x1e124
0x1e121:   48 8d 83                                           |H..             |
; function: DriverEntry at 0x1e124 -- 0x1e154
0x1e124:   38 59 00                              	cmp byte ptr [rcx], bl
0x1e127:   00 c7                                 	add bh, al
0x1e129:   83 30 59                              	xor dword ptr [rax], 0x59
0x1e12c:   00 00                                 	add byte ptr [rax], al
0x1e12e:   00 00                                 	add byte ptr [rax], al
0x1e130:   00 00                                 	add byte ptr [rax], al
0x1e132:   c7 83 34 59 00 00 01 00 00 00         	mov dword ptr [rbx + 0x5934], 1
0x1e13c:   48 89 83 38 59 00 00                  	mov qword ptr [rbx + 0x5938], rax
0x1e143:   48 89 83 40 59 00 00                  	mov qword ptr [rbx + 0x5940], rax
0x1e14a:   b8 01 00 00 00                        	mov eax, 1
0x1e14f:   5b                                    	pop rbx
0x1e150:   41 5c                                 	pop r12
0x1e152:   c9                                    	leave 
0x1e153:   c3                                    	ret 
; function: DriverEntry at 0x1e154 -- 0x1e160
0x1e154:   55                                    	push rbp
0x1e155:   48 89 e5                              	mov rbp, rsp
0x1e158:   e8 93 0a 02 00                        	call 0x3ebf0 <mcount>
0x1e15d:   48 85 ff                              	test rdi, rdi
; function: nmi_delay at 0x1e160 -- 0x1e184
0x1e160:   74 05                                 	je 0x1e167 <nmi_delay+0x7>
0x1e162:   48 85 f6                              	test rsi, rsi
0x1e165:   75 07                                 	jne 0x1e16e <nmi_delay+0xe>
0x1e167:   b8 00 00 00 00                        	mov eax, 0
0x1e16c:   eb 20                                 	jmp 0x1e18e
0x1e16e:   48 c7 05 47 8e 01 00 00 00 00 00      	mov qword ptr [rip + 0x18e47], 0
0x1e179:   48 c7 05 44 8e 01 00 00 00 00 00      	mov qword ptr [rip + 0x18e44], 0
; data inside code section at 0x1e184 -- 0x1e185
0x1e184:   e8                                                 |.               |
; function: nmi_get_tick at 0x1e185 -- 0x1e190
; function: nmi_delay at 0x1e190 -- 0x1e1ad
0x1e190:   55                                    	push rbp
0x1e191:   48 89 e5                              	mov rbp, rsp
0x1e194:   e8 57 0a 02 00                        	call 0x3ebf0 <mcount>
0x1e199:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x1e19c:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x1e1a3:   48 8b 80 00 00 00 00                  	mov rax, qword ptr [rax]
0x1e1aa:   48 85 c0                              	test rax, rax
; function: nmi_log10 at 0x1e1ad -- 0x1e1b5
0x1e1ad:   74 04                                 	je 0x1e1b3 <nmi_log10+0x6>
0x1e1af:   89 f7                                 	mov edi, esi
0x1e1b1:   ff d0                                 	call rax
0x1e1b3:   c9                                    	leave 
0x1e1b4:   c3                                    	ret 
; function: nmi_get_tick at 0x1e1b5 -- 0x1e1dd
0x1e1b5:   55                                    	push rbp
0x1e1b6:   48 89 e5                              	mov rbp, rsp
0x1e1b9:   e8 32 0a 02 00                        	call 0x3ebf0 <mcount>
0x1e1be:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x1e1c1:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x1e1c8:   48 8b 90 00 00 00 00                  	mov rdx, qword ptr [rax]
0x1e1cf:   b8 00 00 00 00                        	mov eax, 0
0x1e1d4:   48 85 d2                              	test rdx, rdx
0x1e1d7:   74 02                                 	je 0x1e1db <nmi_get_tick+0x26>
0x1e1d9:   ff d2                                 	call rdx
0x1e1db:   c9                                    	leave 
0x1e1dc:   c3                                    	ret 
; function: nmi_log10 at 0x1e1dd -- 0x1e467
0x1e1dd:   55                                    	push rbp
0x1e1de:   48 89 e5                              	mov rbp, rsp
0x1e1e1:   e8 0a 0a 02 00                        	call 0x3ebf0 <mcount>
0x1e1e6:   48 81 ff ff 00 00 00                  	cmp rdi, 0xff
0x1e1ed:   77 11                                 	ja 0x1e200 <nmi_log10+0x23>
0x1e1ef:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e1f6:   2d 68 01 00 00                        	sub eax, 0x168
0x1e1fb:   e9 99 02 00 00                        	jmp 0x1e499
0x1e200:   48 81 ff ff 01 00 00                  	cmp rdi, 0x1ff
0x1e207:   77 14                                 	ja 0x1e21d <nmi_log10+0x40>
0x1e209:   48 d1 ef                              	shr rdi, 1
0x1e20c:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e213:   2d 50 01 00 00                        	sub eax, 0x150
0x1e218:   e9 7c 02 00 00                        	jmp 0x1e499
0x1e21d:   48 81 ff ff 03 00 00                  	cmp rdi, 0x3ff
0x1e224:   77 15                                 	ja 0x1e23b <nmi_log10+0x5e>
0x1e226:   48 c1 ef 02                           	shr rdi, 2
0x1e22a:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e231:   2d 38 01 00 00                        	sub eax, 0x138
0x1e236:   e9 5e 02 00 00                        	jmp 0x1e499
0x1e23b:   48 81 ff ff 07 00 00                  	cmp rdi, 0x7ff
0x1e242:   77 15                                 	ja 0x1e259 <nmi_log10+0x7c>
0x1e244:   48 c1 ef 03                           	shr rdi, 3
0x1e248:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e24f:   2d 20 01 00 00                        	sub eax, 0x120
0x1e254:   e9 40 02 00 00                        	jmp 0x1e499
0x1e259:   48 81 ff ff 0f 00 00                  	cmp rdi, 0xfff
0x1e260:   77 15                                 	ja 0x1e277 <nmi_log10+0x9a>
0x1e262:   48 c1 ef 04                           	shr rdi, 4
0x1e266:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e26d:   2d 08 01 00 00                        	sub eax, 0x108
0x1e272:   e9 22 02 00 00                        	jmp 0x1e499
0x1e277:   48 81 ff ff 1f 00 00                  	cmp rdi, 0x1fff
0x1e27e:   77 15                                 	ja 0x1e295 <nmi_log10+0xb8>
0x1e280:   48 c1 ef 05                           	shr rdi, 5
0x1e284:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e28b:   2d f0 00 00 00                        	sub eax, 0xf0
0x1e290:   e9 04 02 00 00                        	jmp 0x1e499
0x1e295:   48 81 ff ff 3f 00 00                  	cmp rdi, 0x3fff
0x1e29c:   77 15                                 	ja 0x1e2b3 <nmi_log10+0xd6>
0x1e29e:   48 c1 ef 06                           	shr rdi, 6
0x1e2a2:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e2a9:   2d d8 00 00 00                        	sub eax, 0xd8
0x1e2ae:   e9 e6 01 00 00                        	jmp 0x1e499
0x1e2b3:   48 81 ff ff 7f 00 00                  	cmp rdi, 0x7fff
0x1e2ba:   77 15                                 	ja 0x1e2d1 <nmi_log10+0xf4>
0x1e2bc:   48 c1 ef 07                           	shr rdi, 7
0x1e2c0:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e2c7:   2d c0 00 00 00                        	sub eax, 0xc0
0x1e2cc:   e9 c8 01 00 00                        	jmp 0x1e499
0x1e2d1:   48 81 ff ff ff 00 00                  	cmp rdi, 0xffff
0x1e2d8:   77 15                                 	ja 0x1e2ef <nmi_log10+0x112>
0x1e2da:   48 c1 ef 08                           	shr rdi, 8
0x1e2de:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e2e5:   2d a8 00 00 00                        	sub eax, 0xa8
0x1e2ea:   e9 aa 01 00 00                        	jmp 0x1e499
0x1e2ef:   48 81 ff ff ff 01 00                  	cmp rdi, 0x1ffff
0x1e2f6:   77 15                                 	ja 0x1e30d <nmi_log10+0x130>
0x1e2f8:   48 c1 ef 09                           	shr rdi, 9
0x1e2fc:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e303:   2d 90 00 00 00                        	sub eax, 0x90
0x1e308:   e9 8c 01 00 00                        	jmp 0x1e499
0x1e30d:   48 81 ff ff ff 03 00                  	cmp rdi, 0x3ffff
0x1e314:   77 13                                 	ja 0x1e329 <nmi_log10+0x14c>
0x1e316:   48 c1 ef 0a                           	shr rdi, 0xa
0x1e31a:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e321:   83 e8 78                              	sub eax, 0x78
0x1e324:   e9 70 01 00 00                        	jmp 0x1e499
0x1e329:   48 81 ff ff ff 07 00                  	cmp rdi, 0x7ffff
0x1e330:   77 13                                 	ja 0x1e345 <nmi_log10+0x168>
0x1e332:   48 c1 ef 0b                           	shr rdi, 0xb
0x1e336:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e33d:   83 e8 60                              	sub eax, 0x60
0x1e340:   e9 54 01 00 00                        	jmp 0x1e499
0x1e345:   48 81 ff ff ff 0f 00                  	cmp rdi, 0xfffff
0x1e34c:   77 13                                 	ja 0x1e361 <nmi_log10+0x184>
0x1e34e:   48 c1 ef 0c                           	shr rdi, 0xc ; "GNU"
0x1e352:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e359:   83 e8 48                              	sub eax, 0x48
0x1e35c:   e9 38 01 00 00                        	jmp 0x1e499
0x1e361:   48 81 ff ff ff 1f 00                  	cmp rdi, 0x1fffff
0x1e368:   77 13                                 	ja 0x1e37d <nmi_log10+0x1a0>
0x1e36a:   48 c1 ef 0d                           	shr rdi, 0xd ; "NU"
0x1e36e:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e375:   83 e8 30                              	sub eax, 0x30
0x1e378:   e9 1c 01 00 00                        	jmp 0x1e499
0x1e37d:   48 81 ff ff ff 3f 00                  	cmp rdi, 0x3fffff
0x1e384:   77 13                                 	ja 0x1e399 <nmi_log10+0x1bc>
0x1e386:   48 c1 ef 0e                           	shr rdi, 0xe
0x1e38a:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e391:   83 e8 18                              	sub eax, 0x18
0x1e394:   e9 00 01 00 00                        	jmp 0x1e499
0x1e399:   48 81 ff ff ff 7f 00                  	cmp rdi, 0x7fffff
0x1e3a0:   77 10                                 	ja 0x1e3b2 <nmi_log10+0x1d5>
0x1e3a2:   48 c1 ef 0f                           	shr rdi, 0xf
0x1e3a6:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e3ad:   e9 e7 00 00 00                        	jmp 0x1e499
0x1e3b2:   48 81 ff ff ff ff 00                  	cmp rdi, 0xffffff
0x1e3b9:   77 13                                 	ja 0x1e3ce <nmi_log10+0x1f1>
0x1e3bb:   48 c1 ef 10                           	shr rdi, 0x10
0x1e3bf:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e3c6:   83 c0 18                              	add eax, 0x18
0x1e3c9:   e9 cb 00 00 00                        	jmp 0x1e499
0x1e3ce:   48 81 ff ff ff ff 01                  	cmp rdi, 0x1ffffff
0x1e3d5:   77 13                                 	ja 0x1e3ea <nmi_log10+0x20d>
0x1e3d7:   48 c1 ef 11                           	shr rdi, 0x11
0x1e3db:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e3e2:   83 c0 30                              	add eax, 0x30
0x1e3e5:   e9 af 00 00 00                        	jmp 0x1e499
0x1e3ea:   48 81 ff ff ff ff 03                  	cmp rdi, 0x3ffffff
0x1e3f1:   77 13                                 	ja 0x1e406 <nmi_log10+0x229>
0x1e3f3:   48 c1 ef 12                           	shr rdi, 0x12
0x1e3f7:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e3fe:   83 c0 48                              	add eax, 0x48
0x1e401:   e9 93 00 00 00                        	jmp 0x1e499
0x1e406:   48 81 ff ff ff ff 07                  	cmp rdi, 0x7ffffff
0x1e40d:   77 10                                 	ja 0x1e41f <nmi_log10+0x242>
0x1e40f:   48 c1 ef 13                           	shr rdi, 0x13
0x1e413:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e41a:   83 c0 60                              	add eax, 0x60
0x1e41d:   eb 7a                                 	jmp 0x1e499
0x1e41f:   48 81 ff ff ff ff 0f                  	cmp rdi, 0xfffffff
0x1e426:   77 10                                 	ja 0x1e438 <nmi_log10+0x25b>
0x1e428:   48 c1 ef 14                           	shr rdi, 0x14
0x1e42c:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e433:   83 c0 78                              	add eax, 0x78
0x1e436:   eb 61                                 	jmp 0x1e499
0x1e438:   48 81 ff ff ff ff 1f                  	cmp rdi, 0x1fffffff
0x1e43f:   77 12                                 	ja 0x1e453 <nmi_log10+0x276>
0x1e441:   48 c1 ef 15                           	shr rdi, 0x15
0x1e445:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
0x1e44c:   05 90 00 00 00                        	add eax, 0x90
0x1e451:   eb 46                                 	jmp 0x1e499
0x1e453:   48 81 ff ff ff ff 3f                  	cmp rdi, 0x3fffffff
0x1e45a:   77 12                                 	ja 0x1e46e
0x1e45c:   48 c1 ef 16                           	shr rdi, 0x16
0x1e460:   0f b6 87 00 00 00 00                  	movzx eax, byte ptr [rdi]
; data inside code section at 0x1e467 -- 0x1e46b
0x1e467:   05 a8 00 00                                        |....            |
; function: nm131_fm_set_scan_level at 0x1e46b -- 0x1e470
0x1e46b:   00 eb                                 	add bl, ch
0x1e46d:   2b 48 81                              	sub ecx, dword ptr [rax - 0x7f]
; data inside code section at 0x1e470 -- 0x1e486
0x1e470:   ff ff ff ff 7f 77 12 48  c1 ef 17 0f b6 87 00 00   |.....w.H........|
0x1e480:   00 00 05 c0 00 00                                  |......          |
; function: nm131_fm_get_window_rssi at 0x1e486 -- 0x1e49b
0x1e486:   00 eb                                 	add bl, ch
0x1e488:   10 48 c1                              	adc byte ptr [rax - 0x3f], cl
0x1e48b:   ef                                    	out dx, eax
0x1e48c:   18 0f                                 	sbb byte ptr [rdi], cl
0x1e48e:   b6 87                                 	mov dh, 0x87
0x1e490:   00 00                                 	add byte ptr [rax], al
0x1e492:   00 00                                 	add byte ptr [rax], al
0x1e494:   05 d8 00 00 00                        	add eax, 0xd8
0x1e499:   c9                                    	leave 
0x1e49a:   c3                                    	ret 
; function: nm131_fm_set_scan_level at 0x1e49b -- 0x1e4b6
0x1e49b:   55                                    	push rbp
0x1e49c:   48 89 e5                              	mov rbp, rsp
0x1e49f:   e8 4c 07 02 00                        	call 0x3ebf0 <mcount>
0x1e4a4:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x1e4a7:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x1e4ae:   89 b0 00 00 00 00                     	mov dword ptr [rax], esi
0x1e4b4:   c9                                    	leave 
0x1e4b5:   c3                                    	ret 
; function: nm131_fm_get_window_rssi at 0x1e4b6 -- 0x1e552
0x1e4b6:   55                                    	push rbp
0x1e4b7:   48 89 e5                              	mov rbp, rsp
0x1e4ba:   41 56                                 	push r14
0x1e4bc:   41 55                                 	push r13
0x1e4be:   41 54                                 	push r12
0x1e4c0:   53                                    	push rbx
0x1e4c1:   e8 2a 07 02 00                        	call 0x3ebf0 <mcount>
0x1e4c6:   49 89 d0                              	mov r8, rdx
0x1e4c9:   85 f6                                 	test esi, esi
0x1e4cb:   0f 8e ab 00 00 00                     	jle 0x1e57c
0x1e4d1:   8d 46 ff                              	lea eax, [rsi - 1]
0x1e4d4:   48 8d 1c 85 04 00 00 00               	lea rbx, [rax*4 + 4]
0x1e4dc:   b8 00 00 00 00                        	mov eax, 0
0x1e4e1:   8b 14 07                              	mov edx, dword ptr [rdi + rax]
0x1e4e4:   c1 fa 08                              	sar edx, 8
0x1e4e7:   89 14 01                              	mov dword ptr [rcx + rax], edx
0x1e4ea:   81 24 07 ff 00 00 00                  	and dword ptr [rdi + rax], 0xff
0x1e4f1:   48 83 c0 04                           	add rax, 4
0x1e4f5:   48 39 d8                              	cmp rax, rbx
0x1e4f8:   75 e7                                 	jne 0x1e4e1 <nm131_fm_get_window_rssi+0x2b>
0x1e4fa:   8d 5e ff                              	lea ebx, [rsi - 1]
0x1e4fd:   48 63 c3                              	movsxd rax, ebx
0x1e500:   4c 8d 24 85 00 00 00 00               	lea r12, [rax*4]
0x1e508:   4f 8d 2c 20                           	lea r13, [r8 + r12]
0x1e50c:   4c 8d 74 87 fc                        	lea r14, [rdi + rax*4 - 4]
0x1e511:   4e 8d 24 27                           	lea r12, [rdi + r12]
0x1e515:   b9 00 00 00 00                        	mov ecx, 0
0x1e51a:   41 b9 00 00 00 00                     	mov r9d, 0
0x1e520:   41 bb 56 55 55 55                     	mov r11d, 0x55555556
0x1e526:   45 85 c9                              	test r9d, r9d
0x1e529:   75 0c                                 	jne 0x1e537 <nm131_fm_get_window_rssi+0x81>
0x1e52b:   8b 07                                 	mov eax, dword ptr [rdi]
0x1e52d:   01 c0                                 	add eax, eax
0x1e52f:   03 47 04                              	add eax, dword ptr [rdi + 4]
0x1e532:   41 89 00                              	mov dword ptr [r8], eax
0x1e535:   eb 23                                 	jmp 0x1e55a
0x1e537:   44 39 cb                              	cmp ebx, r9d
0x1e53a:   75 0f                                 	jne 0x1e54b <nm131_fm_get_window_rssi+0x95>
0x1e53c:   41 8b 04 24                           	mov eax, dword ptr [r12]
0x1e540:   01 c0                                 	add eax, eax
0x1e542:   41 03 06                              	add eax, dword ptr [r14]
0x1e545:   41 89 45 00                           	mov dword ptr [r13], eax
0x1e549:   eb 0f                                 	jmp 0x1e55a
0x1e54b:   8b 04 0f                              	mov eax, dword ptr [rdi + rcx]
0x1e54e:   03 44 0f fc                           	add eax, dword ptr [rdi + rcx - 4]
; data inside code section at 0x1e552 -- 0x1e555
0x1e552:   03 44 0f                                           |.D.             |
; function: nm131_fm_select_channel_list at 0x1e555 -- 0x1e585
0x1e555:   04 41                                 	add al, 0x41
0x1e557:   89 04 08                              	mov dword ptr [rax + rcx], eax
0x1e55a:   45 8b 14 08                           	mov r10d, dword ptr [r8 + rcx]
0x1e55e:   44 89 d0                              	mov eax, r10d
0x1e561:   41 f7 eb                              	imul r11d
0x1e564:   41 c1 fa 1f                           	sar r10d, 0x1f
0x1e568:   44 29 d2                              	sub edx, r10d
0x1e56b:   41 89 14 08                           	mov dword ptr [r8 + rcx], edx
0x1e56f:   41 83 c1 01                           	add r9d, 1
0x1e573:   48 83 c1 04                           	add rcx, 4
0x1e577:   41 39 f1                              	cmp r9d, esi
0x1e57a:   75 aa                                 	jne 0x1e526
0x1e57c:   5b                                    	pop rbx
0x1e57d:   41 5c                                 	pop r12
0x1e57f:   41 5d                                 	pop r13
0x1e581:   41 5e                                 	pop r14
0x1e583:   c9                                    	leave 
0x1e584:   c3                                    	ret 
; function: nm131_fm_select_channel_list at 0x1e585 -- 0x1e7cf
0x1e585:   55                                    	push rbp
0x1e586:   48 89 e5                              	mov rbp, rsp
0x1e589:   41 57                                 	push r15
0x1e58b:   41 56                                 	push r14
0x1e58d:   41 55                                 	push r13
0x1e58f:   41 54                                 	push r12
0x1e591:   53                                    	push rbx
0x1e592:   48 83 ec 50                           	sub rsp, 0x50
0x1e596:   e8 55 06 02 00                        	call 0x3ebf0 <mcount>
0x1e59b:   48 89 55 b0                           	mov qword ptr [rbp - 0x50], rdx
0x1e59f:   48 89 4d 98                           	mov qword ptr [rbp - 0x68], rcx
0x1e5a3:   4c 89 45 a0                           	mov qword ptr [rbp - 0x60], r8
0x1e5a7:   44 89 4d 94                           	mov dword ptr [rbp - 0x6c], r9d
0x1e5ab:   8b 45 10                              	mov eax, dword ptr [rbp + 0x10]
0x1e5ae:   0f b6 17                              	movzx edx, byte ptr [rdi]
0x1e5b1:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x1e5b8:   8b 92 00 00 00 00                     	mov edx, dword ptr [rdx]
0x1e5be:   89 55 c4                              	mov dword ptr [rbp - 0x3c], edx
0x1e5c1:   3d ce 00 00 00                        	cmp eax, 0xce
0x1e5c6:   0f 95 c3                              	setne bl
0x1e5c9:   0f b6 db                              	movzx ebx, bl
0x1e5cc:   8d 5c 1b 02                           	lea ebx, [rbx + rbx + 2]
0x1e5d0:   41 89 de                              	mov r14d, ebx
0x1e5d3:   41 d1 ee                              	shr r14d, 1
0x1e5d6:   c7 45 a8 00 00 00 00                  	mov dword ptr [rbp - 0x58], 0
0x1e5dd:   85 c0                                 	test eax, eax
0x1e5df:   0f 8e 01 02 00 00                     	jle 0x1e7e6
0x1e5e5:   4c 8b 45 b0                           	mov r8, qword ptr [rbp - 0x50]
0x1e5e9:   bf ff ff ff ff                        	mov edi, 0xffffffff
0x1e5ee:   b9 00 00 00 00                        	mov ecx, 0
0x1e5f3:   8d 14 38                              	lea edx, [rax + rdi]
0x1e5f6:   89 55 cc                              	mov dword ptr [rbp - 0x34], edx
0x1e5f9:   e9 d8 01 00 00                        	jmp 0x1e7d6
0x1e5fe:   45 89 d4                              	mov r12d, r10d
0x1e601:   45 8b 13                              	mov r10d, dword ptr [r11]
0x1e604:   45 39 d4                              	cmp r12d, r10d
0x1e607:   7d 05                                 	jge 0x1e60e <nm131_fm_select_channel_list+0x89>
0x1e609:   44 89 ca                              	mov edx, r9d
0x1e60c:   eb 03                                 	jmp 0x1e611 <nm131_fm_select_channel_list+0x8c>
0x1e60e:   45 89 e2                              	mov r10d, r12d
0x1e611:   41 83 c1 01                           	add r9d, 1
0x1e615:   49 83 c3 04                           	add r11, 4
0x1e619:   41 39 c1                              	cmp r9d, eax
0x1e61c:   75 e0                                 	jne 0x1e5fe <nm131_fm_select_channel_list+0x79>
0x1e61e:   83 fa ff                              	cmp edx, -1
0x1e621:   0f 84 bf 01 00 00                     	je 0x1e7e6
0x1e627:   44 8d 2c 1a                           	lea r13d, [rdx + rbx]
0x1e62b:   41 89 d1                              	mov r9d, edx
0x1e62e:   41 29 d9                              	sub r9d, ebx
0x1e631:   45 0f 49 e9                           	cmovns r13d, r9d
0x1e635:   41 39 c5                              	cmp r13d, eax
0x1e638:   44 0f 4d 6d cc                        	cmovge r13d, dword ptr [rbp - 0x34]
0x1e63d:   44 8d 1c 1a                           	lea r11d, [rdx + rbx]
0x1e641:   44 39 d8                              	cmp eax, r11d
0x1e644:   45 0f 4e d9                           	cmovle r11d, r9d
0x1e648:   46 8d 24 32                           	lea r12d, [rdx + r14]
0x1e64c:   41 89 d1                              	mov r9d, edx
0x1e64f:   45 29 f1                              	sub r9d, r14d
0x1e652:   45 0f 49 e1                           	cmovns r12d, r9d
0x1e656:   41 39 c4                              	cmp r12d, eax
0x1e659:   44 0f 4d 65 cc                        	cmovge r12d, dword ptr [rbp - 0x34]
0x1e65e:   46 8d 14 32                           	lea r10d, [rdx + r14]
0x1e662:   44 39 d0                              	cmp eax, r10d
0x1e665:   45 0f 4e d1                           	cmovle r10d, r9d
0x1e669:   44 8d 7a 01                           	lea r15d, [rdx + 1]
0x1e66d:   44 8d 4a ff                           	lea r9d, [rdx - 1]
0x1e671:   44 39 f8                              	cmp eax, r15d
0x1e674:   45 0f 4f cf                           	cmovg r9d, r15d
0x1e678:   44 89 4d bc                           	mov dword ptr [rbp - 0x44], r9d
0x1e67c:   41 89 d1                              	mov r9d, edx
0x1e67f:   41 83 e9 01                           	sub r9d, 1
0x1e683:   45 0f 48 cf                           	cmovs r9d, r15d
0x1e687:   41 39 c1                              	cmp r9d, eax
0x1e68a:   44 0f 4d 4d cc                        	cmovge r9d, dword ptr [rbp - 0x34]
0x1e68f:   4c 63 fa                              	movsxd r15, edx
0x1e692:   49 c1 e7 02                           	shl r15, 2
0x1e696:   4c 89 7d d0                           	mov qword ptr [rbp - 0x30], r15
0x1e69a:   4c 8b 7d b0                           	mov r15, qword ptr [rbp - 0x50]
0x1e69e:   4c 03 7d d0                           	add r15, qword ptr [rbp - 0x30]
0x1e6a2:   4c 89 7d 88                           	mov qword ptr [rbp - 0x78], r15
0x1e6a6:   45 8b 3f                              	mov r15d, dword ptr [r15]
0x1e6a9:   44 89 7d c8                           	mov dword ptr [rbp - 0x38], r15d
0x1e6ad:   4d 63 ed                              	movsxd r13, r13d
0x1e6b0:   46 8b 2c ae                           	mov r13d, dword ptr [rsi + r13*4]
0x1e6b4:   44 89 6d c0                           	mov dword ptr [rbp - 0x40], r13d
0x1e6b8:   45 85 db                              	test r11d, r11d
0x1e6bb:   44 0f 48 d9                           	cmovs r11d, ecx
0x1e6bf:   4d 63 db                              	movsxd r11, r11d
0x1e6c2:   46 8b 1c 9e                           	mov r11d, dword ptr [rsi + r11*4]
0x1e6c6:   44 89 5d ac                           	mov dword ptr [rbp - 0x54], r11d
0x1e6ca:   4c 8b 6d d0                           	mov r13, qword ptr [rbp - 0x30]
0x1e6ce:   46 8b 1c 2e                           	mov r11d, dword ptr [rsi + r13]
0x1e6d2:   4d 63 e4                              	movsxd r12, r12d
0x1e6d5:   46 8b 3c a6                           	mov r15d, dword ptr [rsi + r12*4]
0x1e6d9:   44 8b 65 c4                           	mov r12d, dword ptr [rbp - 0x3c]
0x1e6dd:   47 8d 24 27                           	lea r12d, [r15 + r12]
0x1e6e1:   45 39 e3                              	cmp r11d, r12d
0x1e6e4:   41 0f 9d c4                           	setge r12b
0x1e6e8:   45 0f b6 e4                           	movzx r12d, r12b
0x1e6ec:   45 85 d2                              	test r10d, r10d
0x1e6ef:   44 0f 48 d1                           	cmovs r10d, ecx
0x1e6f3:   4d 63 d2                              	movsxd r10, r10d
0x1e6f6:   46 8b 2c 96                           	mov r13d, dword ptr [rsi + r10*4]
0x1e6fa:   44 8b 55 c4                           	mov r10d, dword ptr [rbp - 0x3c]
0x1e6fe:   47 8d 54 15 00                        	lea r10d, [r13 + r10]
0x1e703:   45 39 d3                              	cmp r11d, r10d
0x1e706:   41 0f 9d c2                           	setge r10b
0x1e70a:   45 0f b6 d2                           	movzx r10d, r10b
0x1e70e:   3d ce 00 00 00                        	cmp eax, 0xce
0x1e713:   74 3c                                 	je 0x1e751 <nm131_fm_select_channel_list+0x1cc>
0x1e715:   45 85 e4                              	test r12d, r12d
0x1e718:   74 13                                 	je 0x1e72d <nm131_fm_select_channel_list+0x1a8>
0x1e71a:   4d 63 c9                              	movsxd r9, r9d
0x1e71d:   45 8d 67 02                           	lea r12d, [r15 + 2]
0x1e721:   46 39 24 8e                           	cmp dword ptr [rsi + r9*4], r12d
0x1e725:   41 0f 9d c4                           	setge r12b
0x1e729:   45 0f b6 e4                           	movzx r12d, r12b
0x1e72d:   45 85 d2                              	test r10d, r10d
0x1e730:   74 1f                                 	je 0x1e751 <nm131_fm_select_channel_list+0x1cc>
0x1e732:   83 7d bc 00                           	cmp dword ptr [rbp - 0x44], 0
0x1e736:   44 8b 4d bc                           	mov r9d, dword ptr [rbp - 0x44]
0x1e73a:   44 0f 48 c9                           	cmovs r9d, ecx
0x1e73e:   4d 63 c9                              	movsxd r9, r9d
0x1e741:   41 83 c5 02                           	add r13d, 2
0x1e745:   46 39 2c 8e                           	cmp dword ptr [rsi + r9*4], r13d
0x1e749:   41 0f 9d c2                           	setge r10b
0x1e74d:   45 0f b6 d2                           	movzx r10d, r10b
0x1e751:   44 8b 4d c0                           	mov r9d, dword ptr [rbp - 0x40]
0x1e755:   41 83 c1 01                           	add r9d, 1
0x1e759:   44 39 4d c8                           	cmp dword ptr [rbp - 0x38], r9d
0x1e75d:   7c 6c                                 	jl 0x1e7cb <nm131_fm_select_channel_list+0x246>
0x1e75f:   44 8b 4d ac                           	mov r9d, dword ptr [rbp - 0x54]
0x1e763:   41 83 c1 01                           	add r9d, 1
0x1e767:   44 39 4d c8                           	cmp dword ptr [rbp - 0x38], r9d
0x1e76b:   7c 5e                                 	jl 0x1e7cb <nm131_fm_select_channel_list+0x246>
0x1e76d:   41 83 fb 02                           	cmp r11d, 2
0x1e771:   7e 58                                 	jle 0x1e7cb <nm131_fm_select_channel_list+0x246>
0x1e773:   45 85 d2                              	test r10d, r10d
0x1e776:   74 53                                 	je 0x1e7cb <nm131_fm_select_channel_list+0x246>
0x1e778:   45 85 e4                              	test r12d, r12d
0x1e77b:   74 4e                                 	je 0x1e7cb <nm131_fm_select_channel_list+0x246>
0x1e77d:   4c 63 4d a8                           	movsxd r9, dword ptr [rbp - 0x58]
0x1e781:   4c 8b 7d 98                           	mov r15, qword ptr [rbp - 0x68]
0x1e785:   43 89 14 8f                           	mov dword ptr [r15 + r9*4], edx
0x1e789:   41 b9 fe ff ff ff                     	mov r9d, 0xfffffffe
0x1e78f:   4c 8b 5d b0                           	mov r11, qword ptr [rbp - 0x50]
0x1e793:   44 8b 65 cc                           	mov r12d, dword ptr [rbp - 0x34]
0x1e797:   45 89 ca                              	mov r10d, r9d
0x1e79a:   41 01 d2                              	add r10d, edx
0x1e79d:   44 0f 48 d1                           	cmovs r10d, ecx
0x1e7a1:   44 39 d0                              	cmp eax, r10d
0x1e7a4:   45 0f 4e d4                           	cmovle r10d, r12d
0x1e7a8:   4d 63 d2                              	movsxd r10, r10d
0x1e7ab:   43 c7 04 93 ff ff ff ff               	mov dword ptr [r11 + r10*4], 0xffffffff
0x1e7b3:   41 83 c1 01                           	add r9d, 1
0x1e7b7:   41 83 f9 03                           	cmp r9d, 3
0x1e7bb:   75 da                                 	jne 0x1e797 <nm131_fm_select_channel_list+0x212>
0x1e7bd:   83 45 a8 01                           	add dword ptr [rbp - 0x58], 1
0x1e7c1:   8b 55 94                              	mov edx, dword ptr [rbp - 0x6c]
0x1e7c4:   39 55 a8                              	cmp dword ptr [rbp - 0x58], edx
0x1e7c7:   7d 1d                                 	jge 0x1e7e6
0x1e7c9:   eb 0b                                 	jmp 0x1e7d6
0x1e7cb:   4c 8b 55 88                           	mov r10, qword ptr [rbp - 0x78]
; data inside code section at 0x1e7cf -- 0x1e7d1
0x1e7cf:   41 c7                                              |A.              |
; function: nm131_fm_seek_select at 0x1e7d1 -- 0x1e801
0x1e7d1:   02 ff                                 	add bh, bh
; data inside code section at 0x1e7d3 -- 0x1e7d6
0x1e7d3:   ff ff ff                                           |...             |
0x1e7d6:   4d 89 c3                              	mov r11, r8
0x1e7d9:   89 fa                                 	mov edx, edi
0x1e7db:   41 89 cc                              	mov r12d, ecx
0x1e7de:   41 89 c9                              	mov r9d, ecx
0x1e7e1:   e9 1b fe ff ff                        	jmp 0x1e601
0x1e7e6:   44 8b 7d a8                           	mov r15d, dword ptr [rbp - 0x58]
0x1e7ea:   4c 8b 6d a0                           	mov r13, qword ptr [rbp - 0x60]
0x1e7ee:   45 89 7d 00                           	mov dword ptr [r13], r15d
0x1e7f2:   48 83 c4 50                           	add rsp, 0x50
0x1e7f6:   5b                                    	pop rbx
0x1e7f7:   41 5c                                 	pop r12
0x1e7f9:   41 5d                                 	pop r13
0x1e7fb:   41 5e                                 	pop r14
0x1e7fd:   41 5f                                 	pop r15
0x1e7ff:   c9                                    	leave 
0x1e800:   c3                                    	ret 
; function: nm131_fm_seek_select at 0x1e801 -- 0x1e893
0x1e801:   55                                    	push rbp
0x1e802:   48 89 e5                              	mov rbp, rsp
0x1e805:   e8 e6 03 02 00                        	call 0x3ebf0 <mcount>
0x1e80a:   83 fa 07                              	cmp edx, 7
0x1e80d:   75 5a                                 	jne 0x1e869 <nm131_fm_seek_select+0x68>
0x1e80f:   8b 56 0c                              	mov edx, dword ptr [rsi + 0xc]
0x1e812:   01 d2                                 	add edx, edx
0x1e814:   41 b8 00 00 00 00                     	mov r8d, 0
0x1e81a:   3b 56 04                              	cmp edx, dword ptr [rsi + 4]
0x1e81d:   7f 0b                                 	jg 0x1e82a <nm131_fm_seek_select+0x29>
0x1e81f:   3b 56 08                              	cmp edx, dword ptr [rsi + 8]
0x1e822:   41 0f 9e c0                           	setle r8b
0x1e826:   45 0f b6 c0                           	movzx r8d, r8b
0x1e82a:   b8 00 00 00 00                        	mov eax, 0
0x1e82f:   3b 56 14                              	cmp edx, dword ptr [rsi + 0x14]
0x1e832:   7f 09                                 	jg 0x1e83d <nm131_fm_seek_select+0x3c>
0x1e834:   3b 56 10                              	cmp edx, dword ptr [rsi + 0x10]
0x1e837:   0f 9e c0                              	setle al
0x1e83a:   0f b6 c0                              	movzx eax, al
0x1e83d:   8b 57 0c                              	mov edx, dword ptr [rdi + 0xc]
0x1e840:   8b 4f 04                              	mov ecx, dword ptr [rdi + 4]
0x1e843:   83 c1 02                              	add ecx, 2
0x1e846:   39 ca                                 	cmp edx, ecx
0x1e848:   0f 9d c1                              	setge cl
0x1e84b:   0f b6 c9                              	movzx ecx, cl
0x1e84e:   8b 77 14                              	mov esi, dword ptr [rdi + 0x14]
0x1e851:   83 c6 02                              	add esi, 2
0x1e854:   39 f2                                 	cmp edx, esi
0x1e856:   40 0f 9d c6                           	setge sil
0x1e85a:   40 0f b6 f6                           	movzx esi, sil
0x1e85e:   83 fa 02                              	cmp edx, 2
0x1e861:   0f 9f c2                              	setg dl
0x1e864:   0f b6 d2                              	movzx edx, dl
0x1e867:   eb 43                                 	jmp 0x1e8ac
0x1e869:   8b 56 08                              	mov edx, dword ptr [rsi + 8]
0x1e86c:   01 d2                                 	add edx, edx
0x1e86e:   3b 56 04                              	cmp edx, dword ptr [rsi + 4]
0x1e871:   41 0f 9e c0                           	setle r8b
0x1e875:   45 0f b6 c0                           	movzx r8d, r8b
0x1e879:   3b 56 0c                              	cmp edx, dword ptr [rsi + 0xc]
0x1e87c:   0f 9e c0                              	setle al
0x1e87f:   0f b6 c0                              	movzx eax, al
0x1e882:   8b 57 08                              	mov edx, dword ptr [rdi + 8]
0x1e885:   8b 4f 04                              	mov ecx, dword ptr [rdi + 4]
0x1e888:   83 c1 02                              	add ecx, 2
0x1e88b:   39 ca                                 	cmp edx, ecx
0x1e88d:   0f 9d c1                              	setge cl
0x1e890:   0f b6 c9                              	movzx ecx, cl
; data inside code section at 0x1e893 -- 0x1e894
0x1e893:   8b                                                 |.               |
; function: nm131_set_scan_level at 0x1e894 -- 0x1e8c4
0x1e894:   77 0c                                 	ja 0x1e8a2 <nm131_set_scan_level+0xe>
0x1e896:   83 c6 02                              	add esi, 2
0x1e899:   39 f2                                 	cmp edx, esi
0x1e89b:   40 0f 9d c6                           	setge sil
; data inside code section at 0x1e89f -- 0x1e8a2
0x1e89f:   40 0f b6                                           |@..             |
0x1e8a2:   f6 83 fa 02 0f 9f c2                  	test byte ptr [rbx - 0x60f0fd06], 0xc2
0x1e8a9:   0f b6 d2                              	movzx edx, dl
0x1e8ac:   85 c9                                 	test ecx, ecx
0x1e8ae:   74 0d                                 	je 0x1e8bd <nm131_set_scan_level+0x29>
0x1e8b0:   85 f6                                 	test esi, esi
0x1e8b2:   74 09                                 	je 0x1e8bd <nm131_set_scan_level+0x29>
0x1e8b4:   85 d2                                 	test edx, edx
0x1e8b6:   74 05                                 	je 0x1e8bd <nm131_set_scan_level+0x29>
0x1e8b8:   44 21 c0                              	and eax, r8d
0x1e8bb:   eb 05                                 	jmp 0x1e8c2 <nm131_set_scan_level+0x2e>
0x1e8bd:   b8 00 00 00 00                        	mov eax, 0
0x1e8c2:   c9                                    	leave 
0x1e8c3:   c3                                    	ret 
; function: nm131_set_scan_level at 0x1e8c4 -- 0x1e8df
0x1e8c4:   55                                    	push rbp
0x1e8c5:   48 89 e5                              	mov rbp, rsp
0x1e8c8:   e8 23 03 02 00                        	call 0x3ebf0 <mcount>
0x1e8cd:   83 fe 07                              	cmp esi, 7
0x1e8d0:   0f 87 9f 00 00 00                     	ja 0x1e975
0x1e8d6:   89 f6                                 	mov esi, esi
0x1e8d8:   ff 24 f5 00 00 00 00                  	jmp qword ptr [rsi*8]
; function: function_1e8df at 0x1e8df -- 0x1e8f7
0x1e8df:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x1e8e2:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x1e8e9:   66 c7 80 00 00 00 00 41 00            	mov word ptr [rax], 0x41
0x1e8f2:   e9 91 00 00 00                        	jmp 0x1e988
; function: function_1e8f7 at 0x1e8f7 -- 0x1e90c
0x1e8f7:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x1e8fa:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x1e901:   66 c7 80 00 00 00 00 3c 00            	mov word ptr [rax], 0x3c
0x1e90a:   eb 7c                                 	jmp 0x1e988
; function: function_1e90c at 0x1e90c -- 0x1e921
0x1e90c:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x1e90f:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x1e916:   66 c7 80 00 00 00 00 37 00            	mov word ptr [rax], 0x37
0x1e91f:   eb 67                                 	jmp 0x1e988
; function: function_1e921 at 0x1e921 -- 0x1e936
0x1e921:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x1e924:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x1e92b:   66 c7 80 00 00 00 00 32 00            	mov word ptr [rax], 0x32
0x1e934:   eb 52                                 	jmp 0x1e988
; function: function_1e936 at 0x1e936 -- 0x1e94b
0x1e936:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x1e939:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x1e940:   66 c7 80 00 00 00 00 2d 00            	mov word ptr [rax], 0x2d
0x1e949:   eb 3d                                 	jmp 0x1e988
; data inside code section at 0x1e94b -- 0x1e95a
0x1e94b:   0f b6 07 48 69 c0 b8 00  00 00 66 c7 80 00 00      |...Hi.....f.... |
; function: NMI131_GetTime at 0x1e95a -- 0x1e960
0x1e95a:   00 00                                 	add byte ptr [rax], al
0x1e95c:   28 00                                 	sub byte ptr [rax], al
0x1e95e:   eb 28                                 	jmp 0x1e988
; data inside code section at 0x1e960 -- 0x1e96c
0x1e960:   0f b6 07 48 69 c0 b8 00  00 00 66 c7               |...Hi.....f.    |
; function: NMI131_GetReadBlockSize at 0x1e96c -- 0x1e975
0x1e96c:   80 00 00                              	add byte ptr [rax], 0
0x1e96f:   00 00                                 	add byte ptr [rax], al
0x1e971:   23 00                                 	and eax, dword ptr [rax]
0x1e973:   eb 13                                 	jmp 0x1e988
; data inside code section at 0x1e975 -- 0x1e97c
0x1e975:   0f b6 07 48 69 c0 b8                               |...Hi..         |
; function: NMI131_GetWriteBlockSize at 0x1e97c -- 0x1e98a
0x1e97c:   00 00                                 	add byte ptr [rax], al
0x1e97e:   00 66 c7                              	add byte ptr [rsi - 0x39], ah
0x1e981:   80 00 00                              	add byte ptr [rax], 0
0x1e984:   00 00                                 	add byte ptr [rax], al
; data inside code section at 0x1e986 -- 0x1e988
0x1e986:   2d 00                                              |-.              |
0x1e988:   c9                                    	leave 
0x1e989:   c3                                    	ret 
; function: NMI131_GetTime at 0x1e98a -- 0x1e98b
0x1e98a:   55                                    	push rbp
; data inside code section at 0x1e98b -- 0x1e98c
0x1e98b:   48                                                 |H               |
; function: NMI131_Log at 0x1e98c -- 0x1e993
0x1e98c:   89 e5                                 	mov ebp, esp
0x1e98e:   e8 5d 02 02 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x1e993 -- 0x1e997
0x1e993:   48 8b 05 c6                                        |H...            |
; function: BLACKWIDOW_GetChipInfo at 0x1e997 -- 0x1e99c
0x1e997:   02 02                                 	add al, byte ptr [rdx]
0x1e999:   00 c9                                 	add cl, cl
0x1e99b:   c3                                    	ret 
; function: NMI131_GetReadBlockSize at 0x1e99c -- 0x1e9ac
0x1e99c:   55                                    	push rbp
0x1e99d:   48 89 e5                              	mov rbp, rsp
0x1e9a0:   e8 4b 02 02 00                        	call 0x3ebf0 <mcount>
0x1e9a5:   b8 20 00 00 00                        	mov eax, 0x20
0x1e9aa:   c9                                    	leave 
0x1e9ab:   c3                                    	ret 
; function: NMI131_GetWriteBlockSize at 0x1e9ac -- 0x1e9bc
0x1e9ac:   55                                    	push rbp
0x1e9ad:   48 89 e5                              	mov rbp, rsp
0x1e9b0:   e8 3b 02 02 00                        	call 0x3ebf0 <mcount>
0x1e9b5:   b8 20 00 00 00                        	mov eax, 0x20
0x1e9ba:   c9                                    	leave 
0x1e9bb:   c3                                    	ret 
; function: NMI131_Log at 0x1e9bc -- 0x1e9c7
0x1e9bc:   55                                    	push rbp
0x1e9bd:   48 89 e5                              	mov rbp, rsp
0x1e9c0:   e8 2b 02 02 00                        	call 0x3ebf0 <mcount>
0x1e9c5:   c9                                    	leave 
0x1e9c6:   c3                                    	ret 
; function: BLACKWIDOW_GetChipInfo at 0x1e9c7 -- 0x1ea4a
0x1e9c7:   55                                    	push rbp
0x1e9c8:   48 89 e5                              	mov rbp, rsp
0x1e9cb:   48 83 ec 40                           	sub rsp, 0x40
0x1e9cf:   48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x1e9d3:   4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x1e9d7:   4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x1e9db:   4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x1e9df:   e8 0c 02 02 00                        	call 0x3ebf0 <mcount>
0x1e9e4:   48 89 fb                              	mov rbx, rdi
0x1e9e7:   49 89 f4                              	mov r12, rsi
0x1e9ea:   49 89 d5                              	mov r13, rdx
0x1e9ed:   49 89 ce                              	mov r14, rcx
0x1e9f0:   48 c7 45 d8 00 00 00 00               	mov qword ptr [rbp - 0x28], 0
0x1e9f8:   48 8d 45 d8                           	lea rax, [rbp - 0x28]
0x1e9fc:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1ea00:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ea06:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ea0c:   b9 00 00 00 00                        	mov ecx, 0
0x1ea11:   ba 00 00 00 00                        	mov edx, 0
0x1ea16:   be 00 00 00 00                        	mov esi, 0
0x1ea1b:   ff 15 5f 7e 01 00                     	call qword ptr [rip + 0x17e5f]
0x1ea21:   84 c0                                 	test al, al
0x1ea23:   74 3f                                 	je 0x1ea64
0x1ea25:   48 8b 45 d8                           	mov rax, qword ptr [rbp - 0x28]
0x1ea29:   49 89 06                              	mov qword ptr [r14], rax
0x1ea2c:   48 8d 45 d8                           	lea rax, [rbp - 0x28]
0x1ea30:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1ea34:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ea3a:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ea40:   b9 00 00 00 00                        	mov ecx, 0
0x1ea45:   ba 00 00 00 00                        	mov edx, 0
; data inside code section at 0x1ea4a -- 0x1ea4e
0x1ea4a:   be 01 00 00                                        |....            |
; function: BLACKWIDOW_GetSelectedGainMode at 0x1ea4e -- 0x1ea51
0x1ea4e:   00 48 89                              	add byte ptr [rax - 0x77], cl
; data inside code section at 0x1ea51 -- 0x1ea52
0x1ea51:   df                                                 |.               |
; function: function_1ea52 at 0x1ea52 -- 0x1ea64
0x1ea52:   ff 15 28 7e 01 00                     	call qword ptr [rip + 0x17e28]
0x1ea58:   84 c0                                 	test al, al
0x1ea5a:   74 08                                 	je 0x1ea64
0x1ea5c:   48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x1ea60:   49 89 55 00                           	mov qword ptr [r13], rdx
; data inside code section at 0x1ea64 -- 0x1ea72
0x1ea64:   49 c7 04 24 00 00 00 00  48 8b 5d e0 4c 8b         |I..$....H.].L.  |
; function: BLACKWIDOW_GetPLLLockStatus at 0x1ea72 -- 0x1ea7e
0x1ea72:   65 e8 4c 8b 6d f0                     	call 0xfffffffff06f75c4 <unknown_fffffffff06f75c4>
0x1ea78:   4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x1ea7c:   c9                                    	leave 
0x1ea7d:   c3                                    	ret 
; function: BLACKWIDOW_GetSelectedGainMode at 0x1ea7e -- 0x1eaa2
0x1ea7e:   55                                    	push rbp
0x1ea7f:   48 89 e5                              	mov rbp, rsp
0x1ea82:   e8 69 01 02 00                        	call 0x3ebf0 <mcount>
0x1ea87:   48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x1ea8b:   8b 88 a0 00 00 00                     	mov ecx, dword ptr [rax + 0xa0]
0x1ea91:   89 0e                                 	mov dword ptr [rsi], ecx
0x1ea93:   8b 80 a4 00 00 00                     	mov eax, dword ptr [rax + 0xa4]
0x1ea99:   89 02                                 	mov dword ptr [rdx], eax
0x1ea9b:   b8 01 00 00 00                        	mov eax, 1
0x1eaa0:   c9                                    	leave 
0x1eaa1:   c3                                    	ret 
; function: BLACKWIDOW_GetPLLLockStatus at 0x1eaa2 -- 0x1ead5
0x1eaa2:   55                                    	push rbp
0x1eaa3:   48 89 e5                              	mov rbp, rsp
0x1eaa6:   53                                    	push rbx
0x1eaa7:   48 83 ec 28                           	sub rsp, 0x28
0x1eaab:   e8 40 01 02 00                        	call 0x3ebf0 <mcount>
0x1eab0:   48 89 f3                              	mov rbx, rsi
0x1eab3:   48 85 ff                              	test rdi, rdi
0x1eab6:   0f 94 c2                              	sete dl
0x1eab9:   48 85 f6                              	test rsi, rsi
0x1eabc:   0f 94 c0                              	sete al
0x1eabf:   09 d0                                 	or eax, edx
0x1eac1:   34 01                                 	xor al, 1
0x1eac3:   74 3d                                 	je 0x1eb02
0x1eac5:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1eacd:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1ead1:   48 89 04 24                           	mov qword ptr [rsp], rax
; data inside code section at 0x1ead5 -- 0x1ead9
0x1ead5:   41 b9 00 00                                        |A...            |
; function: BLACKWIDOW_GetPowerMode at 0x1ead9 -- 0x1eb09
0x1ead9:   00 00                                 	add byte ptr [rax], al
0x1eadb:   41 b8 01 00 00 00                     	mov r8d, 1
0x1eae1:   b9 04 00 00 00                        	mov ecx, 4
0x1eae6:   ba 00 00 00 00                        	mov edx, 0
0x1eaeb:   be 15 00 00 00                        	mov esi, 0x15
0x1eaf0:   ff 15 8a 7d 01 00                     	call qword ptr [rip + 0x17d8a]
0x1eaf6:   84 c0                                 	test al, al
0x1eaf8:   74 08                                 	je 0x1eb02 <BLACKWIDOW_GetPowerMode+0x29>
0x1eafa:   48 83 7d e8 01                        	cmp qword ptr [rbp - 0x18], 1
0x1eaff:   0f 94 03                              	sete byte ptr [rbx]
0x1eb02:   48 83 c4 28                           	add rsp, 0x28
0x1eb06:   5b                                    	pop rbx
0x1eb07:   c9                                    	leave 
0x1eb08:   c3                                    	ret 
; function: BLACKWIDOW_GetPowerMode at 0x1eb09 -- 0x1ee10
0x1eb09:   55                                    	push rbp
0x1eb0a:   48 89 e5                              	mov rbp, rsp
0x1eb0d:   48 83 c4 80                           	add rsp, -0x80
0x1eb11:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x1eb15:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x1eb19:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x1eb1d:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x1eb21:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x1eb25:   e8 c6 00 02 00                        	call 0x3ebf0 <mcount>
0x1eb2a:   48 89 fb                              	mov rbx, rdi
0x1eb2d:   49 89 f4                              	mov r12, rsi
0x1eb30:   48 c7 45 c8 00 00 00 00               	mov qword ptr [rbp - 0x38], 0
0x1eb38:   c7 06 04 00 00 00                     	mov dword ptr [rsi], 4
0x1eb3e:   48 8d 45 c8                           	lea rax, [rbp - 0x38]
0x1eb42:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1eb46:   41 b9 00 00 00 00                     	mov r9d, 0
0x1eb4c:   41 b8 08 00 00 00                     	mov r8d, 8
0x1eb52:   b9 00 00 00 00                        	mov ecx, 0
0x1eb57:   ba 00 00 00 00                        	mov edx, 0
0x1eb5c:   be 02 00 00 00                        	mov esi, 2
0x1eb61:   ff 15 19 7d 01 00                     	call qword ptr [rip + 0x17d19]
0x1eb67:   44 0f b6 75 c8                        	movzx r14d, byte ptr [rbp - 0x38]
0x1eb6c:   41 bd 00 00 00 00                     	mov r13d, 0
0x1eb72:   84 c0                                 	test al, al
0x1eb74:   0f 84 a4 02 00 00                     	je 0x1ee1e
0x1eb7a:   48 8d 45 c8                           	lea rax, [rbp - 0x38]
0x1eb7e:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1eb82:   41 b9 00 00 00 00                     	mov r9d, 0
0x1eb88:   41 b8 08 00 00 00                     	mov r8d, 8
0x1eb8e:   b9 00 00 00 00                        	mov ecx, 0
0x1eb93:   ba 00 00 00 00                        	mov edx, 0
0x1eb98:   be 06 00 00 00                        	mov esi, 6
0x1eb9d:   48 89 df                              	mov rdi, rbx
0x1eba0:   ff 15 da 7c 01 00                     	call qword ptr [rip + 0x17cda]
0x1eba6:   44 0f b6 6d c8                        	movzx r13d, byte ptr [rbp - 0x38]
0x1ebab:   84 c0                                 	test al, al
0x1ebad:   0f 84 6b 02 00 00                     	je 0x1ee1e
0x1ebb3:   48 8d 45 c8                           	lea rax, [rbp - 0x38]
0x1ebb7:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1ebbb:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ebc1:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ebc7:   b9 00 00 00 00                        	mov ecx, 0
0x1ebcc:   ba 00 00 00 00                        	mov edx, 0
0x1ebd1:   be 07 00 00 00                        	mov esi, 7
0x1ebd6:   48 89 df                              	mov rdi, rbx
0x1ebd9:   ff 15 a1 7c 01 00                     	call qword ptr [rip + 0x17ca1]
0x1ebdf:   44 0f b6 7d c8                        	movzx r15d, byte ptr [rbp - 0x38]
0x1ebe4:   84 c0                                 	test al, al
0x1ebe6:   0f 84 38 02 00 00                     	je 0x1ee24
0x1ebec:   48 8d 45 c8                           	lea rax, [rbp - 0x38]
0x1ebf0:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1ebf4:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ebfa:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ec00:   b9 00 00 00 00                        	mov ecx, 0
0x1ec05:   ba 00 00 00 00                        	mov edx, 0
0x1ec0a:   be 0f 00 00 00                        	mov esi, 0xf
0x1ec0f:   48 89 df                              	mov rdi, rbx
0x1ec12:   ff 15 68 7c 01 00                     	call qword ptr [rip + 0x17c68]
0x1ec18:   0f b6 55 c8                           	movzx edx, byte ptr [rbp - 0x38]
0x1ec1c:   88 55 be                              	mov byte ptr [rbp - 0x42], dl
0x1ec1f:   84 c0                                 	test al, al
0x1ec21:   0f 84 01 02 00 00                     	je 0x1ee28
0x1ec27:   48 8d 45 c8                           	lea rax, [rbp - 0x38]
0x1ec2b:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1ec2f:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ec35:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ec3b:   b9 00 00 00 00                        	mov ecx, 0
0x1ec40:   ba 00 00 00 00                        	mov edx, 0
0x1ec45:   be 18 00 00 00                        	mov esi, 0x18
0x1ec4a:   48 89 df                              	mov rdi, rbx
0x1ec4d:   ff 15 2d 7c 01 00                     	call qword ptr [rip + 0x17c2d]
0x1ec53:   0f b6 55 c8                           	movzx edx, byte ptr [rbp - 0x38]
0x1ec57:   88 55 bf                              	mov byte ptr [rbp - 0x41], dl
0x1ec5a:   84 c0                                 	test al, al
0x1ec5c:   0f 84 ca 01 00 00                     	je 0x1ee2c
0x1ec62:   48 8d 45 c8                           	lea rax, [rbp - 0x38]
0x1ec66:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1ec6a:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ec70:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ec76:   b9 00 00 00 00                        	mov ecx, 0
0x1ec7b:   ba 00 00 00 00                        	mov edx, 0
0x1ec80:   be 1a 00 00 00                        	mov esi, 0x1a
0x1ec85:   48 89 df                              	mov rdi, rbx
0x1ec88:   ff 15 f2 7b 01 00                     	call qword ptr [rip + 0x17bf2]
0x1ec8e:   0f b6 55 c8                           	movzx edx, byte ptr [rbp - 0x38]
0x1ec92:   88 55 a0                              	mov byte ptr [rbp - 0x60], dl
0x1ec95:   84 c0                                 	test al, al
0x1ec97:   0f 84 93 01 00 00                     	je 0x1ee30
0x1ec9d:   48 8d 45 c8                           	lea rax, [rbp - 0x38]
0x1eca1:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1eca5:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ecab:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ecb1:   b9 00 00 00 00                        	mov ecx, 0
0x1ecb6:   ba 00 00 00 00                        	mov edx, 0
0x1ecbb:   be 22 00 00 00                        	mov esi, 0x22
0x1ecc0:   48 89 df                              	mov rdi, rbx
0x1ecc3:   ff 15 b7 7b 01 00                     	call qword ptr [rip + 0x17bb7]
0x1ecc9:   0f b6 55 c8                           	movzx edx, byte ptr [rbp - 0x38]
0x1eccd:   88 55 9e                              	mov byte ptr [rbp - 0x62], dl
0x1ecd0:   84 c0                                 	test al, al
0x1ecd2:   0f 84 5c 01 00 00                     	je 0x1ee34
0x1ecd8:   48 8d 45 c8                           	lea rax, [rbp - 0x38]
0x1ecdc:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1ece0:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ece6:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ecec:   b9 00 00 00 00                        	mov ecx, 0
0x1ecf1:   ba 00 00 00 00                        	mov edx, 0
0x1ecf6:   be 25 00 00 00                        	mov esi, 0x25
0x1ecfb:   48 89 df                              	mov rdi, rbx
0x1ecfe:   ff 15 7c 7b 01 00                     	call qword ptr [rip + 0x17b7c]
0x1ed04:   0f b6 55 c8                           	movzx edx, byte ptr [rbp - 0x38]
0x1ed08:   88 55 9f                              	mov byte ptr [rbp - 0x61], dl
0x1ed0b:   84 c0                                 	test al, al
0x1ed0d:   75 07                                 	jne 0x1ed16 <BLACKWIDOW_GetPowerMode+0x20d>
0x1ed0f:   bb 00 00 00 00                        	mov ebx, 0
0x1ed14:   eb 30                                 	jmp 0x1ed46 <BLACKWIDOW_GetPowerMode+0x23d>
0x1ed16:   48 8d 45 c8                           	lea rax, [rbp - 0x38]
0x1ed1a:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1ed1e:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ed24:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ed2a:   b9 00 00 00 00                        	mov ecx, 0
0x1ed2f:   ba 00 00 00 00                        	mov edx, 0
0x1ed34:   be 27 00 00 00                        	mov esi, 0x27
0x1ed39:   48 89 df                              	mov rdi, rbx
0x1ed3c:   ff 15 3e 7b 01 00                     	call qword ptr [rip + 0x17b3e]
0x1ed42:   0f b6 5d c8                           	movzx ebx, byte ptr [rbp - 0x38]
0x1ed46:   41 0f b6 d6                           	movzx edx, r14b
0x1ed4a:   89 d1                                 	mov ecx, edx
0x1ed4c:   81 e1 81 00 00 00                     	and ecx, 0x81
0x1ed52:   81 f9 81 00 00 00                     	cmp ecx, 0x81
0x1ed58:   75 6a                                 	jne 0x1edc4 <BLACKWIDOW_GetPowerMode+0x2bb>
0x1ed5a:   44 89 e9                              	mov ecx, r13d
0x1ed5d:   81 e1 89 00 00 00                     	and ecx, 0x89
0x1ed63:   81 f9 89 00 00 00                     	cmp ecx, 0x89
0x1ed69:   75 59                                 	jne 0x1edc4 <BLACKWIDOW_GetPowerMode+0x2bb>
0x1ed6b:   44 89 f9                              	mov ecx, r15d
0x1ed6e:   81 e1 ae 00 00 00                     	and ecx, 0xae
0x1ed74:   81 f9 ae 00 00 00                     	cmp ecx, 0xae
0x1ed7a:   75 48                                 	jne 0x1edc4 <BLACKWIDOW_GetPowerMode+0x2bb>
0x1ed7c:   80 7d be 00                           	cmp byte ptr [rbp - 0x42], 0
0x1ed80:   79 42                                 	jns 0x1edc4 <BLACKWIDOW_GetPowerMode+0x2bb>
0x1ed82:   80 7d bf 00                           	cmp byte ptr [rbp - 0x41], 0
0x1ed86:   79 3c                                 	jns 0x1edc4 <BLACKWIDOW_GetPowerMode+0x2bb>
0x1ed88:   0f b6 4d a0                           	movzx ecx, byte ptr [rbp - 0x60]
0x1ed8c:   81 e1 c0 00 00 00                     	and ecx, 0xc0
0x1ed92:   81 f9 c0 00 00 00                     	cmp ecx, 0xc0
0x1ed98:   75 2a                                 	jne 0x1edc4 <BLACKWIDOW_GetPowerMode+0x2bb>
0x1ed9a:   80 7d 9e ff                           	cmp byte ptr [rbp - 0x62], 0xff
0x1ed9e:   75 24                                 	jne 0x1edc4 <BLACKWIDOW_GetPowerMode+0x2bb>
0x1eda0:   f6 45 9f 08                           	test byte ptr [rbp - 0x61], 8
0x1eda4:   74 1e                                 	je 0x1edc4 <BLACKWIDOW_GetPowerMode+0x2bb>
0x1eda6:   89 d9                                 	mov ecx, ebx
0x1eda8:   81 e1 e0 00 00 00                     	and ecx, 0xe0
0x1edae:   81 f9 c0 00 00 00                     	cmp ecx, 0xc0
0x1edb4:   75 0e                                 	jne 0x1edc4 <BLACKWIDOW_GetPowerMode+0x2bb>
0x1edb6:   84 c0                                 	test al, al
0x1edb8:   74 4e                                 	je 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1edba:   41 c7 04 24 00 00 00 00               	mov dword ptr [r12], 0
0x1edc2:   eb 44                                 	jmp 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1edc4:   f6 c2 01                              	test dl, 1
0x1edc7:   75 3f                                 	jne 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1edc9:   41 f6 c5 89                           	test r13b, 0x89
0x1edcd:   75 39                                 	jne 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1edcf:   41 f6 c7 af                           	test r15b, 0xaf
0x1edd3:   75 33                                 	jne 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1edd5:   80 7d be 00                           	cmp byte ptr [rbp - 0x42], 0
0x1edd9:   78 2d                                 	js 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1eddb:   80 7d bf 00                           	cmp byte ptr [rbp - 0x41], 0
0x1eddf:   78 27                                 	js 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1ede1:   f6 45 a0 c0                           	test byte ptr [rbp - 0x60], 0xc0
0x1ede5:   75 21                                 	jne 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1ede7:   80 7d 9e 00                           	cmp byte ptr [rbp - 0x62], 0
0x1edeb:   75 1b                                 	jne 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1eded:   80 7d 9f 00                           	cmp byte ptr [rbp - 0x61], 0
0x1edf1:   75 15                                 	jne 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1edf3:   f6 c3 e0                              	test bl, 0xe0
0x1edf6:   75 10                                 	jne 0x1ee08 <BLACKWIDOW_GetPowerMode+0x2ff>
0x1edf8:   45 0f be f6                           	movsx r14d, r14b
0x1edfc:   41 c1 fe 1f                           	sar r14d, 0x1f
0x1ee00:   41 83 c6 03                           	add r14d, 3
0x1ee04:   45 89 34 24                           	mov dword ptr [r12], r14d
0x1ee08:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x1ee0c:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
; data inside code section at 0x1ee10 -- 0x1ee12
0x1ee10:   4c 8b                                              |L.              |
; function: BLACKWIDOW_EnableLoopThrough at 0x1ee12 -- 0x1ee42
0x1ee12:   6d                                    	insd dword ptr [rdi], dx
0x1ee13:   e8 4c 8b 75 f0                        	call 0xfffffffff0777964 <unknown_fffffffff0777964>
0x1ee18:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x1ee1c:   c9                                    	leave 
0x1ee1d:   c3                                    	ret 
0x1ee1e:   41 bf 00 00 00 00                     	mov r15d, 0
0x1ee24:   c6 45 be 00                           	mov byte ptr [rbp - 0x42], 0
0x1ee28:   c6 45 bf 00                           	mov byte ptr [rbp - 0x41], 0
0x1ee2c:   c6 45 a0 00                           	mov byte ptr [rbp - 0x60], 0
0x1ee30:   c6 45 9e 00                           	mov byte ptr [rbp - 0x62], 0
0x1ee34:   c6 45 9f 00                           	mov byte ptr [rbp - 0x61], 0
0x1ee38:   bb 00 00 00 00                        	mov ebx, 0
0x1ee3d:   e9 04 ff ff ff                        	jmp 0x1ed46
; function: BLACKWIDOW_EnableLoopThrough at 0x1ee42 -- 0x1eec6
0x1ee42:   55                                    	push rbp
0x1ee43:   48 89 e5                              	mov rbp, rsp
0x1ee46:   48 83 ec 40                           	sub rsp, 0x40
0x1ee4a:   48 89 5d f0                           	mov qword ptr [rbp - 0x10], rbx
0x1ee4e:   4c 89 65 f8                           	mov qword ptr [rbp - 8], r12
0x1ee52:   e8 99 fd 01 00                        	call 0x3ebf0 <mcount>
0x1ee57:   48 89 fb                              	mov rbx, rdi
0x1ee5a:   41 89 f4                              	mov r12d, esi
0x1ee5d:   48 85 ff                              	test rdi, rdi
0x1ee60:   0f 95 c0                              	setne al
0x1ee63:   0f 84 88 00 00 00                     	je 0x1eef1 <CheckThresholdValidity>
0x1ee69:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1ee71:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1ee75:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1ee79:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ee7f:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ee85:   b9 00 00 00 00                        	mov ecx, 0
0x1ee8a:   ba 00 00 00 00                        	mov edx, 0
0x1ee8f:   be 06 00 00 00                        	mov esi, 6
0x1ee94:   ff 15 e6 79 01 00                     	call qword ptr [rip + 0x179e6]
0x1ee9a:   84 c0                                 	test al, al
0x1ee9c:   74 53                                 	je 0x1eef1 <CheckThresholdValidity>
0x1ee9e:   41 83 e4 01                           	and r12d, 1
0x1eea2:   41 c1 e4 03                           	shl r12d, 3
0x1eea6:   4d 63 e4                              	movsxd r12, r12d
0x1eea9:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x1eead:   25 f7 00 00 00                        	and eax, 0xf7
0x1eeb2:   49 09 c4                              	or r12, rax
0x1eeb5:   4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x1eeb9:   4c 89 64 24 10                        	mov qword ptr [rsp + 0x10], r12
0x1eebe:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x1eec6 -- 0x1eecb
0x1eec6:   c7 04 24 00 00                                     |..$..           |
; function: BLACKWIDOW_GetXtalFreqHz at 0x1eecb -- 0x1eede
0x1eecb:   00 00                                 	add byte ptr [rax], al
0x1eecd:   41 b9 00 00 00 00                     	mov r9d, 0
0x1eed3:   41 b8 08 00 00 00                     	mov r8d, 8
0x1eed9:   b9 00 00 00 00                        	mov ecx, 0
; function: BLACKWIDOW_SetXtalFreqHz at 0x1eede -- 0x1eef1
0x1eede:   ba 00 00 00 00                        	mov edx, 0
0x1eee3:   be 06 00 00 00                        	mov esi, 6
0x1eee8:   48 89 df                              	mov rdi, rbx
0x1eeeb:   ff 15 97 79 01 00                     	call qword ptr [rip + 0x17997]
; function: CheckThresholdValidity at 0x1eef1 -- 0x1eefb
0x1eef1:   48 8b 5d f0                           	mov rbx, qword ptr [rbp - 0x10]
0x1eef5:   4c 8b 65 f8                           	mov r12, qword ptr [rbp - 8]
0x1eef9:   c9                                    	leave 
0x1eefa:   c3                                    	ret 
; function: BLACKWIDOW_GetXtalFreqHz at 0x1eefb -- 0x1ef0e
0x1eefb:   55                                    	push rbp
0x1eefc:   48 89 e5                              	mov rbp, rsp
0x1eeff:   e8 ec fc 01 00                        	call 0x3ebf0 <mcount>
0x1ef04:   48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x1ef08:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x1ef0c:   c9                                    	leave 
0x1ef0d:   c3                                    	ret 
; function: BLACKWIDOW_SetXtalFreqHz at 0x1ef0e -- 0x1ef17
0x1ef0e:   55                                    	push rbp
0x1ef0f:   48 89 e5                              	mov rbp, rsp
0x1ef12:   e8 d9 fc 01 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x1ef17 -- 0x1ef1a
0x1ef17:   48 8b 47                                           |H.G             |
; function: BLACKWIDOW_ConfigureGainMode at 0x1ef1a -- 0x1ef21
0x1ef1a:   28 48 89                              	sub byte ptr [rax - 0x77], cl
0x1ef1d:   70 08                                 	jo 0x1ef27
0x1ef1f:   c9                                    	leave 
0x1ef20:   c3                                    	ret 
; function: CheckThresholdValidity at 0x1ef21 -- 0x1ef4a
0x1ef21:   55                                    	push rbp
0x1ef22:   48 89 e5                              	mov rbp, rsp
; data inside code section at 0x1ef25 -- 0x1ef27
0x1ef25:   e8 c6                                              |..              |
0x1ef27:   fc                                    	cld 
0x1ef28:   01 00                                 	add dword ptr [rax], eax
0x1ef2a:   8b 17                                 	mov edx, dword ptr [rdi]
0x1ef2c:   8b 47 04                              	mov eax, dword ptr [rdi + 4]
0x1ef2f:   39 c2                                 	cmp edx, eax
0x1ef31:   73 10                                 	jae 0x1ef43 <CheckThresholdValidity+0x22>
0x1ef33:   3b 47 08                              	cmp eax, dword ptr [rdi + 8]
0x1ef36:   73 0b                                 	jae 0x1ef43 <CheckThresholdValidity+0x22>
0x1ef38:   81 fa fe 03 00 00                     	cmp edx, 0x3fe
0x1ef3e:   0f 96 c0                              	setbe al
0x1ef41:   eb 05                                 	jmp 0x1ef48 <CheckThresholdValidity+0x27>
0x1ef43:   b8 00 00 00 00                        	mov eax, 0
0x1ef48:   c9                                    	leave 
0x1ef49:   c3                                    	ret 
; function: BLACKWIDOW_ConfigureGainMode at 0x1ef4a -- 0x1f028
0x1ef4a:   55                                    	push rbp
0x1ef4b:   48 89 e5                              	mov rbp, rsp
0x1ef4e:   48 83 ec 18                           	sub rsp, 0x18
0x1ef52:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x1ef56:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x1ef5b:   4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x1ef60:   e8 8b fc 01 00                        	call 0x3ebf0 <mcount>
0x1ef65:   49 89 f5                              	mov r13, rsi
0x1ef68:   48 89 d3                              	mov rbx, rdx
0x1ef6b:   4c 8b 67 28                           	mov r12, qword ptr [rdi + 0x28]
0x1ef6f:   48 85 f6                              	test rsi, rsi
0x1ef72:   0f 94 c2                              	sete dl
0x1ef75:   48 85 db                              	test rbx, rbx
0x1ef78:   0f 94 c0                              	sete al
0x1ef7b:   09 d0                                 	or eax, edx
0x1ef7d:   34 01                                 	xor al, 1
0x1ef7f:   0f 84 c3 00 00 00                     	je 0x1f048
0x1ef85:   48 89 f7                              	mov rdi, rsi
0x1ef88:   e8 94 ff ff ff                        	call 0x1ef21 <CheckThresholdValidity>
0x1ef8d:   84 c0                                 	test al, al
0x1ef8f:   0f 84 b3 00 00 00                     	je 0x1f048
0x1ef95:   41 8b 55 00                           	mov edx, dword ptr [r13]
0x1ef99:   41 89 54 24 10                        	mov dword ptr [r12 + 0x10], edx
0x1ef9e:   41 8b 55 04                           	mov edx, dword ptr [r13 + 4]
0x1efa2:   41 89 54 24 14                        	mov dword ptr [r12 + 0x14], edx
0x1efa7:   41 8b 55 08                           	mov edx, dword ptr [r13 + 8]
0x1efab:   41 89 54 24 18                        	mov dword ptr [r12 + 0x18], edx
0x1efb0:   48 8b 13                              	mov rdx, qword ptr [rbx]
0x1efb3:   49 89 54 24 1c                        	mov qword ptr [r12 + 0x1c], rdx
0x1efb8:   48 8b 53 08                           	mov rdx, qword ptr [rbx + 8]
0x1efbc:   49 89 54 24 24                        	mov qword ptr [r12 + 0x24], rdx
0x1efc1:   48 8b 53 10                           	mov rdx, qword ptr [rbx + 0x10]
0x1efc5:   49 89 54 24 2c                        	mov qword ptr [r12 + 0x2c], rdx
0x1efca:   48 8b 53 18                           	mov rdx, qword ptr [rbx + 0x18]
0x1efce:   49 89 54 24 34                        	mov qword ptr [r12 + 0x34], rdx
0x1efd3:   48 8b 53 20                           	mov rdx, qword ptr [rbx + 0x20]
0x1efd7:   49 89 54 24 3c                        	mov qword ptr [r12 + 0x3c], rdx
0x1efdc:   48 8b 53 28                           	mov rdx, qword ptr [rbx + 0x28]
0x1efe0:   49 89 54 24 44                        	mov qword ptr [r12 + 0x44], rdx
0x1efe5:   48 8b 53 30                           	mov rdx, qword ptr [rbx + 0x30]
0x1efe9:   49 89 54 24 4c                        	mov qword ptr [r12 + 0x4c], rdx
0x1efee:   48 8b 53 38                           	mov rdx, qword ptr [rbx + 0x38]
0x1eff2:   49 89 54 24 54                        	mov qword ptr [r12 + 0x54], rdx
0x1eff7:   48 8b 53 40                           	mov rdx, qword ptr [rbx + 0x40]
0x1effb:   49 89 54 24 5c                        	mov qword ptr [r12 + 0x5c], rdx
0x1f000:   48 8b 53 48                           	mov rdx, qword ptr [rbx + 0x48]
0x1f004:   49 89 54 24 64                        	mov qword ptr [r12 + 0x64], rdx
0x1f009:   48 8b 53 50                           	mov rdx, qword ptr [rbx + 0x50]
0x1f00d:   49 89 54 24 6c                        	mov qword ptr [r12 + 0x6c], rdx
0x1f012:   48 8b 53 58                           	mov rdx, qword ptr [rbx + 0x58]
0x1f016:   49 89 54 24 74                        	mov qword ptr [r12 + 0x74], rdx
0x1f01b:   48 8b 53 60                           	mov rdx, qword ptr [rbx + 0x60]
0x1f01f:   49 89 54 24 7c                        	mov qword ptr [r12 + 0x7c], rdx
0x1f024:   48 8b 53 68                           	mov rdx, qword ptr [rbx + 0x68]
; function: LeftShift at 0x1f028 -- 0x1f04c
0x1f028:   49 89 94 24 84 00 00 00               	mov qword ptr [r12 + 0x84], rdx
0x1f030:   48 8b 53 70                           	mov rdx, qword ptr [rbx + 0x70]
0x1f034:   49 89 94 24 8c 00 00 00               	mov qword ptr [r12 + 0x8c], rdx
0x1f03c:   48 8b 53 78                           	mov rdx, qword ptr [rbx + 0x78]
0x1f040:   49 89 94 24 94 00 00 00               	mov qword ptr [r12 + 0x94], rdx
0x1f048:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
; data inside code section at 0x1f04c -- 0x1f050
0x1f04c:   4c 8b 64 24                                        |L.d$            |
; function: Add at 0x1f050 -- 0x1f058
0x1f050:   08 4c 8b 6c                           	or byte ptr [rbx + rcx*4 + 0x6c], cl
0x1f054:   24 10                                 	and al, 0x10
0x1f056:   c9                                    	leave 
0x1f057:   c3                                    	ret 
; function: LeftShift at 0x1f058 -- 0x1f080
0x1f058:   55                                    	push rbp
0x1f059:   48 89 e5                              	mov rbp, rsp
0x1f05c:   e8 8f fb 01 00                        	call 0x3ebf0 <mcount>
0x1f061:   48 8b 06                              	mov rax, qword ptr [rsi]
0x1f064:   48 c1 e8 1f                           	shr rax, 0x1f
0x1f068:   48 8b 17                              	mov rdx, qword ptr [rdi]
0x1f06b:   48 8d 04 50                           	lea rax, [rax + rdx*2]
0x1f06f:   48 89 07                              	mov qword ptr [rdi], rax
0x1f072:   48 8b 06                              	mov rax, qword ptr [rsi]
0x1f075:   48 01 c0                              	add rax, rax
0x1f078:   83 e0 ff                              	and eax, 0xffffffff
0x1f07b:   48 89 06                              	mov qword ptr [rsi], rax
0x1f07e:   c9                                    	leave 
0x1f07f:   c3                                    	ret 
; function: Add at 0x1f080 -- 0x1f092
0x1f080:   55                                    	push rbp
0x1f081:   48 89 e5                              	mov rbp, rsp
0x1f084:   e8 67 fb 01 00                        	call 0x3ebf0 <mcount>
0x1f089:   48 8b 06                              	mov rax, qword ptr [rsi]
0x1f08c:   41 b9 ff ff ff ff                     	mov r9d, 0xffffffff
; data inside code section at 0x1f092 -- 0x1f094
0x1f092:   49 29                                              |I)              |
; function: Mult at 0x1f094 -- 0x1f0c4
0x1f094:   c9                                    	leave 
0x1f095:   41 b8 01 00 00 00                     	mov r8d, 1
0x1f09b:   4c 39 c8                              	cmp rax, r9
0x1f09e:   73 14                                 	jae 0x1f0b4 <Mult+0x20>
0x1f0a0:   41 b8 ff ff ff ff                     	mov r8d, 0xffffffff
0x1f0a6:   49 29 c0                              	sub r8, rax
0x1f0a9:   4c 39 c1                              	cmp rcx, r8
0x1f0ac:   41 0f 93 c0                           	setae r8b
0x1f0b0:   45 0f b6 c0                           	movzx r8d, r8b
0x1f0b4:   48 8d 04 01                           	lea rax, [rcx + rax]
0x1f0b8:   48 89 06                              	mov qword ptr [rsi], rax
0x1f0bb:   49 8d 04 10                           	lea rax, [r8 + rdx]
0x1f0bf:   48 01 07                              	add qword ptr [rdi], rax
0x1f0c2:   c9                                    	leave 
0x1f0c3:   c3                                    	ret 
; function: Mult at 0x1f0c4 -- 0x1f123
0x1f0c4:   55                                    	push rbp
0x1f0c5:   48 89 e5                              	mov rbp, rsp
0x1f0c8:   41 57                                 	push r15
0x1f0ca:   41 56                                 	push r14
0x1f0cc:   41 55                                 	push r13
0x1f0ce:   41 54                                 	push r12
0x1f0d0:   53                                    	push rbx
0x1f0d1:   48 83 ec 20                           	sub rsp, 0x20
0x1f0d5:   e8 16 fb 01 00                        	call 0x3ebf0 <mcount>
0x1f0da:   49 89 f5                              	mov r13, rsi
; data inside code section at 0x1f0dd -- 0x1f0df
0x1f0dd:   48 89                                              |H.              |
0x1f0df:   55                                    	push rbp
0x1f0e0:   c0 48 89 4d                           	ror byte ptr [rax - 0x77], 0x4d
0x1f0e4:   b8 48 c7 02 00                        	mov eax, 0x2c748
0x1f0e9:   00 00                                 	add byte ptr [rax], al
0x1f0eb:   00 48 c7                              	add byte ptr [rax - 0x39], cl
0x1f0ee:   01 00                                 	add dword ptr [rax], eax
0x1f0f0:   00 00                                 	add byte ptr [rax], al
0x1f0f2:   00 48 c7                              	add byte ptr [rax - 0x39], cl
0x1f0f5:   45 d0 00                              	rol byte ptr [r8], 1
0x1f0f8:   00 00                                 	add byte ptr [rax], al
0x1f0fa:   00 48 89                              	add byte ptr [rax - 0x77], cl
0x1f0fd:   7d c8                                 	jge 0x1f0c7
0x1f0ff:   41 bc 00 00 00 00                     	mov r12d, 0
0x1f105:   4c 8d 75 c8                           	lea r14, [rbp - 0x38]
0x1f109:   4c 8d 7d d0                           	lea r15, [rbp - 0x30]
0x1f10d:   4c 89 eb                              	mov rbx, r13
0x1f110:   44 89 e1                              	mov ecx, r12d
0x1f113:   48 d3 eb                              	shr rbx, cl
0x1f116:   f6 c3 01                              	test bl, 1
0x1f119:   74 15                                 	je 0x1f130
0x1f11b:   48 8b 4d c8                           	mov rcx, qword ptr [rbp - 0x38]
0x1f11f:   48 8b 55 d0                           	mov rdx, qword ptr [rbp - 0x30]
; data inside code section at 0x1f123 -- 0x1f125
0x1f123:   48 8b                                              |H.              |
; function: IsBigger at 0x1f125 -- 0x1f146
0x1f125:   75 b8                                 	jne 0x1f0df
0x1f127:   48 8b 7d c0                           	mov rdi, qword ptr [rbp - 0x40]
0x1f12b:   e8 50 ff ff ff                        	call 0x1f080 <Add>
0x1f130:   4c 89 f6                              	mov rsi, r14
0x1f133:   4c 89 ff                              	mov rdi, r15
0x1f136:   e8 1d ff ff ff                        	call 0x1f058 <LeftShift>
0x1f13b:   48 85 db                              	test rbx, rbx
0x1f13e:   74 06                                 	je 0x1f146 <IsBigger+0x1f>
0x1f140:   49 83 c4 01                           	add r12, 1
0x1f144:   eb c7                                 	jmp 0x1f10d
; data inside code section at 0x1f146 -- 0x1f147
0x1f146:   48                                                 |H               |
; function: Div at 0x1f147 -- 0x1f155
0x1f147:   83 c4 20                              	add esp, 0x20
0x1f14a:   5b                                    	pop rbx
0x1f14b:   41 5c                                 	pop r12
0x1f14d:   41 5d                                 	pop r13
0x1f14f:   41 5e                                 	pop r14
0x1f151:   41 5f                                 	pop r15
0x1f153:   c9                                    	leave 
0x1f154:   c3                                    	ret 
; function: IsBigger at 0x1f155 -- 0x1f177
0x1f155:   55                                    	push rbp
0x1f156:   48 89 e5                              	mov rbp, rsp
0x1f159:   e8 92 fa 01 00                        	call 0x3ebf0 <mcount>
0x1f15e:   b8 01 00 00 00                        	mov eax, 1
0x1f163:   48 39 d7                              	cmp rdi, rdx
0x1f166:   77 0d                                 	ja 0x1f175 <IsBigger+0x20>
0x1f168:   b8 00 00 00 00                        	mov eax, 0
0x1f16d:   72 06                                 	jb 0x1f175 <IsBigger+0x20>
0x1f16f:   48 39 ce                              	cmp rsi, rcx
0x1f172:   0f 97 c0                              	seta al
0x1f175:   c9                                    	leave 
0x1f176:   c3                                    	ret 
; function: Div at 0x1f177 -- 0x1f2b7
0x1f177:   55                                    	push rbp
0x1f178:   48 89 e5                              	mov rbp, rsp
0x1f17b:   41 57                                 	push r15
0x1f17d:   41 56                                 	push r14
0x1f17f:   41 55                                 	push r13
0x1f181:   41 54                                 	push r12
0x1f183:   53                                    	push rbx
0x1f184:   48 83 ec 40                           	sub rsp, 0x40
0x1f188:   e8 63 fa 01 00                        	call 0x3ebf0 <mcount>
0x1f18d:   49 89 fe                              	mov r14, rdi
0x1f190:   49 89 f5                              	mov r13, rsi
0x1f193:   48 89 55 a8                           	mov qword ptr [rbp - 0x58], rdx
0x1f197:   48 89 4d a0                           	mov qword ptr [rbp - 0x60], rcx
0x1f19b:   4c 89 45 98                           	mov qword ptr [rbp - 0x68], r8
0x1f19f:   48 c7 01 00 00 00 00                  	mov qword ptr [rcx], 0
0x1f1a6:   48 8b 45 98                           	mov rax, qword ptr [rbp - 0x68]
0x1f1aa:   48 c7 00 00 00 00 00                  	mov qword ptr [rax], 0
0x1f1b1:   48 c7 45 d0 00 00 00 00               	mov qword ptr [rbp - 0x30], 0
0x1f1b9:   48 8b 45 a8                           	mov rax, qword ptr [rbp - 0x58]
0x1f1bd:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x1f1c1:   e9 f9 00 00 00                        	jmp 0x1f2bf
0x1f1c6:   48 c7 45 c0 00 00 00 00               	mov qword ptr [rbp - 0x40], 0
0x1f1ce:   48 c7 45 b8 01 00 00 00               	mov qword ptr [rbp - 0x48], 1
0x1f1d6:   4c 8b 7d d0                           	mov r15, qword ptr [rbp - 0x30]
0x1f1da:   48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x1f1de:   48 89 45 b0                           	mov qword ptr [rbp - 0x50], rax
0x1f1e2:   48 8d 75 c8                           	lea rsi, [rbp - 0x38]
0x1f1e6:   48 8d 7d d0                           	lea rdi, [rbp - 0x30]
0x1f1ea:   e8 69 fe ff ff                        	call 0x1f058 <LeftShift>
0x1f1ef:   4c 8b 65 c8                           	mov r12, qword ptr [rbp - 0x38]
0x1f1f3:   48 8b 5d d0                           	mov rbx, qword ptr [rbp - 0x30]
0x1f1f7:   4c 89 e1                              	mov rcx, r12
0x1f1fa:   48 89 da                              	mov rdx, rbx
0x1f1fd:   4c 89 ee                              	mov rsi, r13
0x1f200:   4c 89 f7                              	mov rdi, r14
0x1f203:   e8 4d ff ff ff                        	call 0x1f155 <IsBigger>
0x1f208:   3c 01                                 	cmp al, 1
0x1f20a:   75 2a                                 	jne 0x1f236 <Div+0xbf>
0x1f20c:   48 8d 75 b8                           	lea rsi, [rbp - 0x48]
0x1f210:   48 8d 7d c0                           	lea rdi, [rbp - 0x40]
0x1f214:   e8 3f fe ff ff                        	call 0x1f058 <LeftShift>
0x1f219:   4c 8b 65 c8                           	mov r12, qword ptr [rbp - 0x38]
0x1f21d:   48 8b 5d d0                           	mov rbx, qword ptr [rbp - 0x30]
0x1f221:   4c 89 e1                              	mov rcx, r12
0x1f224:   48 89 da                              	mov rdx, rbx
0x1f227:   4c 89 ee                              	mov rsi, r13
0x1f22a:   4c 89 f7                              	mov rdi, r14
0x1f22d:   e8 23 ff ff ff                        	call 0x1f155 <IsBigger>
0x1f232:   3c 01                                 	cmp al, 1
0x1f234:   74 a0                                 	je 0x1f1d6 <Div+0x5f>
0x1f236:   4c 39 f3                              	cmp rbx, r14
0x1f239:   75 2b                                 	jne 0x1f266 <Div+0xef>
0x1f23b:   4d 39 ec                              	cmp r12, r13
0x1f23e:   66 90                                 	nop 
0x1f240:   75 24                                 	jne 0x1f266 <Div+0xef>
0x1f242:   48 8d 75 b8                           	lea rsi, [rbp - 0x48]
0x1f246:   48 8d 7d c0                           	lea rdi, [rbp - 0x40]
0x1f24a:   e8 09 fe ff ff                        	call 0x1f058 <LeftShift>
0x1f24f:   48 8b 4d b8                           	mov rcx, qword ptr [rbp - 0x48]
0x1f253:   48 8b 55 c0                           	mov rdx, qword ptr [rbp - 0x40]
0x1f257:   48 8b 75 98                           	mov rsi, qword ptr [rbp - 0x68]
0x1f25b:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x1f25f:   e8 1c fe ff ff                        	call 0x1f080 <Add>
0x1f264:   eb 38                                 	jmp 0x1f29e <Div+0x127>
0x1f266:   48 8b 4d b8                           	mov rcx, qword ptr [rbp - 0x48]
0x1f26a:   48 8b 55 c0                           	mov rdx, qword ptr [rbp - 0x40]
0x1f26e:   48 8b 75 98                           	mov rsi, qword ptr [rbp - 0x68]
0x1f272:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x1f276:   e8 05 fe ff ff                        	call 0x1f080 <Add>
0x1f27b:   4c 8b 65 b0                           	mov r12, qword ptr [rbp - 0x50]
0x1f27f:   4c 89 fb                              	mov rbx, r15
0x1f282:   4d 39 e5                              	cmp r13, r12
0x1f285:   73 17                                 	jae 0x1f29e <Div+0x127>
0x1f287:   48 b8 00 00 00 00 01 00 00 00         	movabs rax, 0x100000000
0x1f291:   49 01 c5                              	add r13, rax
0x1f294:   4d 29 e5                              	sub r13, r12
0x1f297:   b8 01 00 00 00                        	mov eax, 1
0x1f29c:   eb 0b                                 	jmp 0x1f2a9 <Div+0x132>
0x1f29e:   4d 29 e5                              	sub r13, r12
0x1f2a1:   49 89 df                              	mov r15, rbx
0x1f2a4:   b8 00 00 00 00                        	mov eax, 0
0x1f2a9:   49 29 c6                              	sub r14, rax
0x1f2ac:   4d 29 fe                              	sub r14, r15
0x1f2af:   48 c7 45 d0 00 00 00 00               	mov qword ptr [rbp - 0x30], 0
; data inside code section at 0x1f2b7 -- 0x1f2b9
0x1f2b7:   48 8b                                              |H.              |
; function: BLACKWIDOW_SetEnableBlocks at 0x1f2b9 -- 0x1f2e9
0x1f2b9:   45 a8 48                              	test al, 0x48
0x1f2bc:   89 45 c8                              	mov dword ptr [rbp - 0x38], eax
0x1f2bf:   48 8b 4d c8                           	mov rcx, qword ptr [rbp - 0x38]
0x1f2c3:   48 8b 55 d0                           	mov rdx, qword ptr [rbp - 0x30]
0x1f2c7:   4c 89 ee                              	mov rsi, r13
0x1f2ca:   4c 89 f7                              	mov rdi, r14
0x1f2cd:   e8 83 fe ff ff                        	call 0x1f155 <IsBigger>
0x1f2d2:   3c 01                                 	cmp al, 1
0x1f2d4:   0f 84 ec fe ff ff                     	je 0x1f1c6
0x1f2da:   48 83 c4 40                           	add rsp, 0x40
0x1f2de:   5b                                    	pop rbx
0x1f2df:   41 5c                                 	pop r12
0x1f2e1:   41 5d                                 	pop r13
0x1f2e3:   41 5e                                 	pop r14
0x1f2e5:   41 5f                                 	pop r15
0x1f2e7:   c9                                    	leave 
0x1f2e8:   c3                                    	ret 
; function: BLACKWIDOW_SetEnableBlocks at 0x1f2e9 -- 0x1f5af
0x1f2e9:   55                                    	push rbp
0x1f2ea:   48 89 e5                              	mov rbp, rsp
0x1f2ed:   41 54                                 	push r12
0x1f2ef:   53                                    	push rbx
0x1f2f0:   48 83 ec 30                           	sub rsp, 0x30
0x1f2f4:   e8 f7 f8 01 00                        	call 0x3ebf0 <mcount>
0x1f2f9:   49 89 fc                              	mov r12, rdi
0x1f2fc:   48 89 f3                              	mov rbx, rsi
0x1f2ff:   48 85 ff                              	test rdi, rdi
0x1f302:   0f 94 c2                              	sete dl
0x1f305:   48 85 f6                              	test rsi, rsi
0x1f308:   0f 94 c0                              	sete al
0x1f30b:   09 d0                                 	or eax, edx
0x1f30d:   34 01                                 	xor al, 1
0x1f30f:   0f 84 c5 02 00 00                     	je 0x1f5da
0x1f315:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1f31d:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1f321:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f325:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f32b:   41 b8 08 00 00 00                     	mov r8d, 8
0x1f331:   b9 00 00 00 00                        	mov ecx, 0
0x1f336:   ba 00 00 00 00                        	mov edx, 0
0x1f33b:   be 06 00 00 00                        	mov esi, 6
0x1f340:   ff 15 3a 75 01 00                     	call qword ptr [rip + 0x1753a]
0x1f346:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x1f34a:   84 c0                                 	test al, al
0x1f34c:   0f 84 88 02 00 00                     	je 0x1f5da
0x1f352:   80 e2 77                              	and dl, 0x77
0x1f355:   0f b6 43 06                           	movzx eax, byte ptr [rbx + 6]
0x1f359:   c1 e0 07                              	shl eax, 7
0x1f35c:   25 80 00 00 00                        	and eax, 0x80
0x1f361:   48 09 d0                              	or rax, rdx
0x1f364:   0f b6 53 07                           	movzx edx, byte ptr [rbx + 7]
0x1f368:   83 e2 01                              	and edx, 1
0x1f36b:   c1 e2 03                              	shl edx, 3
0x1f36e:   48 63 d2                              	movsxd rdx, edx
0x1f371:   48 09 d0                              	or rax, rdx
0x1f374:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x1f378:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1f37d:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1f385:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x1f38c:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f392:   41 b8 08 00 00 00                     	mov r8d, 8
0x1f398:   b9 00 00 00 00                        	mov ecx, 0
0x1f39d:   ba 00 00 00 00                        	mov edx, 0
0x1f3a2:   be 06 00 00 00                        	mov esi, 6
0x1f3a7:   4c 89 e7                              	mov rdi, r12
0x1f3aa:   ff 15 d8 74 01 00                     	call qword ptr [rip + 0x174d8]
0x1f3b0:   84 c0                                 	test al, al
0x1f3b2:   0f 84 22 02 00 00                     	je 0x1f5da
0x1f3b8:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1f3c0:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1f3c4:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f3c8:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f3ce:   41 b8 08 00 00 00                     	mov r8d, 8
0x1f3d4:   b9 00 00 00 00                        	mov ecx, 0
0x1f3d9:   ba 00 00 00 00                        	mov edx, 0
0x1f3de:   be 07 00 00 00                        	mov esi, 7
0x1f3e3:   4c 89 e7                              	mov rdi, r12
0x1f3e6:   ff 15 94 74 01 00                     	call qword ptr [rip + 0x17494]
0x1f3ec:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x1f3f0:   84 c0                                 	test al, al
0x1f3f2:   0f 84 e2 01 00 00                     	je 0x1f5da
0x1f3f8:   80 e2 53                              	and dl, 0x53
0x1f3fb:   0f b6 43 03                           	movzx eax, byte ptr [rbx + 3]
0x1f3ff:   c1 e0 07                              	shl eax, 7
0x1f402:   25 80 00 00 00                        	and eax, 0x80
0x1f407:   48 09 d0                              	or rax, rdx
0x1f40a:   0f b6 53 02                           	movzx edx, byte ptr [rbx + 2]
0x1f40e:   83 e2 01                              	and edx, 1
0x1f411:   c1 e2 05                              	shl edx, 5
0x1f414:   48 63 d2                              	movsxd rdx, edx
0x1f417:   48 09 d0                              	or rax, rdx
0x1f41a:   0f b6 13                              	movzx edx, byte ptr [rbx]
0x1f41d:   83 e2 01                              	and edx, 1
0x1f420:   c1 e2 03                              	shl edx, 3
0x1f423:   48 63 d2                              	movsxd rdx, edx
0x1f426:   48 09 d0                              	or rax, rdx
0x1f429:   0f b6 53 01                           	movzx edx, byte ptr [rbx + 1]
0x1f42d:   83 e2 01                              	and edx, 1
0x1f430:   c1 e2 02                              	shl edx, 2
0x1f433:   48 63 d2                              	movsxd rdx, edx
0x1f436:   48 09 d0                              	or rax, rdx
0x1f439:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x1f43d:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1f442:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1f44a:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x1f451:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f457:   41 b8 08 00 00 00                     	mov r8d, 8
0x1f45d:   b9 00 00 00 00                        	mov ecx, 0
0x1f462:   ba 00 00 00 00                        	mov edx, 0
0x1f467:   be 07 00 00 00                        	mov esi, 7
0x1f46c:   4c 89 e7                              	mov rdi, r12
0x1f46f:   ff 15 13 74 01 00                     	call qword ptr [rip + 0x17413]
0x1f475:   84 c0                                 	test al, al
0x1f477:   0f 84 5d 01 00 00                     	je 0x1f5da
0x1f47d:   0f b6 43 04                           	movzx eax, byte ptr [rbx + 4]
0x1f481:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1f486:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1f48e:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x1f495:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f49b:   41 b8 01 00 00 00                     	mov r8d, 1
0x1f4a1:   b9 07 00 00 00                        	mov ecx, 7
0x1f4a6:   ba 00 00 00 00                        	mov edx, 0
0x1f4ab:   be 18 00 00 00                        	mov esi, 0x18
0x1f4b0:   4c 89 e7                              	mov rdi, r12
0x1f4b3:   ff 15 cf 73 01 00                     	call qword ptr [rip + 0x173cf]
0x1f4b9:   84 c0                                 	test al, al
0x1f4bb:   0f 84 19 01 00 00                     	je 0x1f5da
0x1f4c1:   0f b6 43 05                           	movzx eax, byte ptr [rbx + 5]
0x1f4c5:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1f4ca:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1f4d2:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x1f4d9:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f4df:   41 b8 01 00 00 00                     	mov r8d, 1
0x1f4e5:   b9 07 00 00 00                        	mov ecx, 7
0x1f4ea:   ba 00 00 00 00                        	mov edx, 0
0x1f4ef:   be 0d 00 00 00                        	mov esi, 0xd ; "NU"
0x1f4f4:   4c 89 e7                              	mov rdi, r12
0x1f4f7:   ff 15 8b 73 01 00                     	call qword ptr [rip + 0x1738b]
0x1f4fd:   84 c0                                 	test al, al
0x1f4ff:   0f 84 d5 00 00 00                     	je 0x1f5da
0x1f505:   0f b6 43 08                           	movzx eax, byte ptr [rbx + 8]
0x1f509:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1f50e:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1f516:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x1f51d:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f523:   41 b8 01 00 00 00                     	mov r8d, 1
0x1f529:   b9 07 00 00 00                        	mov ecx, 7
0x1f52e:   ba 00 00 00 00                        	mov edx, 0
0x1f533:   be 0f 00 00 00                        	mov esi, 0xf
0x1f538:   4c 89 e7                              	mov rdi, r12
0x1f53b:   ff 15 47 73 01 00                     	call qword ptr [rip + 0x17347]
0x1f541:   84 c0                                 	test al, al
0x1f543:   0f 84 91 00 00 00                     	je 0x1f5da
0x1f549:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1f54d:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f551:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f557:   41 b8 08 00 00 00                     	mov r8d, 8
0x1f55d:   b9 00 00 00 00                        	mov ecx, 0
0x1f562:   ba 00 00 00 00                        	mov edx, 0
0x1f567:   be 1a 00 00 00                        	mov esi, 0x1a
0x1f56c:   4c 89 e7                              	mov rdi, r12
0x1f56f:   ff 15 0b 73 01 00                     	call qword ptr [rip + 0x1730b]
0x1f575:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x1f579:   84 c0                                 	test al, al
0x1f57b:   74 5d                                 	je 0x1f5da
0x1f57d:   80 e2 3f                              	and dl, 0x3f
0x1f580:   0f b6 43 09                           	movzx eax, byte ptr [rbx + 9]
0x1f584:   48 c1 e0 07                           	shl rax, 7
0x1f588:   25 ff 00 00 00                        	and eax, 0xff
0x1f58d:   48 09 d0                              	or rax, rdx
0x1f590:   0f b6 53 0a                           	movzx edx, byte ptr [rbx + 0xa]
0x1f594:   83 e2 01                              	and edx, 1
0x1f597:   48 c1 e2 06                           	shl rdx, 6
0x1f59b:   48 09 d0                              	or rax, rdx
0x1f59e:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x1f5a2:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1f5a7:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x1f5af -- 0x1f5b3
0x1f5af:   c7 04 24 00                                        |..$.            |
; function: BLACKWIDOW_GetEnableBlocks at 0x1f5b3 -- 0x1f5e3
0x1f5b3:   00 00                                 	add byte ptr [rax], al
0x1f5b5:   00 41 b9                              	add byte ptr [rcx - 0x47], al
0x1f5b8:   00 00                                 	add byte ptr [rax], al
0x1f5ba:   00 00                                 	add byte ptr [rax], al
0x1f5bc:   41 b8 08 00 00 00                     	mov r8d, 8
0x1f5c2:   b9 00 00 00 00                        	mov ecx, 0
0x1f5c7:   ba 00 00 00 00                        	mov edx, 0
0x1f5cc:   be 1a 00 00 00                        	mov esi, 0x1a
0x1f5d1:   4c 89 e7                              	mov rdi, r12
0x1f5d4:   ff 15 ae 72 01 00                     	call qword ptr [rip + 0x172ae]
0x1f5da:   48 83 c4 30                           	add rsp, 0x30
0x1f5de:   5b                                    	pop rbx
0x1f5df:   41 5c                                 	pop r12
0x1f5e1:   c9                                    	leave 
0x1f5e2:   c3                                    	ret 
; function: BLACKWIDOW_GetEnableBlocks at 0x1f5e3 -- 0x1f7a3
0x1f5e3:   55                                    	push rbp
0x1f5e4:   48 89 e5                              	mov rbp, rsp
0x1f5e7:   41 54                                 	push r12
0x1f5e9:   53                                    	push rbx
0x1f5ea:   48 83 ec 20                           	sub rsp, 0x20
0x1f5ee:   e8 fd f5 01 00                        	call 0x3ebf0 <mcount>
0x1f5f3:   49 89 fc                              	mov r12, rdi
0x1f5f6:   48 89 f3                              	mov rbx, rsi
0x1f5f9:   48 85 ff                              	test rdi, rdi
0x1f5fc:   0f 94 c2                              	sete dl
0x1f5ff:   48 85 f6                              	test rsi, rsi
0x1f602:   0f 94 c0                              	sete al
0x1f605:   09 d0                                 	or eax, edx
0x1f607:   34 01                                 	xor al, 1
0x1f609:   0f 84 bc 01 00 00                     	je 0x1f7cb
0x1f60f:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1f617:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1f61b:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f61f:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f625:   41 b8 08 00 00 00                     	mov r8d, 8
0x1f62b:   b9 00 00 00 00                        	mov ecx, 0
0x1f630:   ba 00 00 00 00                        	mov edx, 0
0x1f635:   be 06 00 00 00                        	mov esi, 6
0x1f63a:   ff 15 40 72 01 00                     	call qword ptr [rip + 0x17240]
0x1f640:   84 c0                                 	test al, al
0x1f642:   0f 84 83 01 00 00                     	je 0x1f7cb
0x1f648:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x1f64c:   48 89 c2                              	mov rdx, rax
0x1f64f:   48 c1 ea 07                           	shr rdx, 7
0x1f653:   83 e2 01                              	and edx, 1
0x1f656:   88 53 06                              	mov byte ptr [rbx + 6], dl
0x1f659:   48 c1 e8 03                           	shr rax, 3
0x1f65d:   83 e0 01                              	and eax, 1
0x1f660:   88 43 07                              	mov byte ptr [rbx + 7], al
0x1f663:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1f66b:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1f66f:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f673:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f679:   41 b8 08 00 00 00                     	mov r8d, 8
0x1f67f:   b9 00 00 00 00                        	mov ecx, 0
0x1f684:   ba 00 00 00 00                        	mov edx, 0
0x1f689:   be 07 00 00 00                        	mov esi, 7
0x1f68e:   4c 89 e7                              	mov rdi, r12
0x1f691:   ff 15 e9 71 01 00                     	call qword ptr [rip + 0x171e9]
0x1f697:   84 c0                                 	test al, al
0x1f699:   0f 84 2c 01 00 00                     	je 0x1f7cb
0x1f69f:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x1f6a3:   48 89 c2                              	mov rdx, rax
0x1f6a6:   48 c1 ea 07                           	shr rdx, 7
0x1f6aa:   83 e2 01                              	and edx, 1
0x1f6ad:   88 53 03                              	mov byte ptr [rbx + 3], dl
0x1f6b0:   48 89 c2                              	mov rdx, rax
0x1f6b3:   48 c1 ea 05                           	shr rdx, 5
0x1f6b7:   83 e2 01                              	and edx, 1
0x1f6ba:   88 53 02                              	mov byte ptr [rbx + 2], dl
0x1f6bd:   48 89 c2                              	mov rdx, rax
0x1f6c0:   48 c1 ea 03                           	shr rdx, 3
0x1f6c4:   83 e2 01                              	and edx, 1
0x1f6c7:   88 13                                 	mov byte ptr [rbx], dl
0x1f6c9:   48 c1 e8 02                           	shr rax, 2
0x1f6cd:   83 e0 01                              	and eax, 1
0x1f6d0:   88 43 01                              	mov byte ptr [rbx + 1], al
0x1f6d3:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1f6d7:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f6db:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f6e1:   41 b8 01 00 00 00                     	mov r8d, 1
0x1f6e7:   b9 07 00 00 00                        	mov ecx, 7
0x1f6ec:   ba 00 00 00 00                        	mov edx, 0
0x1f6f1:   be 18 00 00 00                        	mov esi, 0x18
0x1f6f6:   4c 89 e7                              	mov rdi, r12
0x1f6f9:   ff 15 81 71 01 00                     	call qword ptr [rip + 0x17181]
0x1f6ff:   84 c0                                 	test al, al
0x1f701:   0f 84 c4 00 00 00                     	je 0x1f7cb
0x1f707:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x1f70b:   88 43 04                              	mov byte ptr [rbx + 4], al
0x1f70e:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1f712:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f716:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f71c:   41 b8 01 00 00 00                     	mov r8d, 1
0x1f722:   b9 07 00 00 00                        	mov ecx, 7
0x1f727:   ba 00 00 00 00                        	mov edx, 0
0x1f72c:   be 0d 00 00 00                        	mov esi, 0xd ; "NU"
0x1f731:   4c 89 e7                              	mov rdi, r12
0x1f734:   ff 15 46 71 01 00                     	call qword ptr [rip + 0x17146]
0x1f73a:   84 c0                                 	test al, al
0x1f73c:   0f 84 89 00 00 00                     	je 0x1f7cb
0x1f742:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x1f746:   88 43 05                              	mov byte ptr [rbx + 5], al
0x1f749:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1f74d:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f751:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f757:   41 b8 01 00 00 00                     	mov r8d, 1
0x1f75d:   b9 07 00 00 00                        	mov ecx, 7
0x1f762:   ba 00 00 00 00                        	mov edx, 0
0x1f767:   be 0f 00 00 00                        	mov esi, 0xf
0x1f76c:   4c 89 e7                              	mov rdi, r12
0x1f76f:   ff 15 0b 71 01 00                     	call qword ptr [rip + 0x1710b]
0x1f775:   84 c0                                 	test al, al
0x1f777:   74 52                                 	je 0x1f7cb
0x1f779:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x1f77d:   88 43 08                              	mov byte ptr [rbx + 8], al
0x1f780:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1f784:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f788:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f78e:   41 b8 08 00 00 00                     	mov r8d, 8
0x1f794:   b9 00 00 00 00                        	mov ecx, 0
0x1f799:   ba 00 00 00 00                        	mov edx, 0
0x1f79e:   be 1a 00 00 00                        	mov esi, 0x1a
; data inside code section at 0x1f7a3 -- 0x1f7a4
0x1f7a3:   4c                                                 |L               |
; function: BLACKWIDOW_SetPowerDetectorConfig at 0x1f7a4 -- 0x1f7d4
0x1f7a4:   89 e7                                 	mov edi, esp
0x1f7a6:   ff 15 d4 70 01 00                     	call qword ptr [rip + 0x170d4]
0x1f7ac:   84 c0                                 	test al, al
0x1f7ae:   74 1b                                 	je 0x1f7cb <BLACKWIDOW_SetPowerDetectorConfig+0x27>
0x1f7b0:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x1f7b4:   48 89 d1                              	mov rcx, rdx
0x1f7b7:   48 c1 e9 07                           	shr rcx, 7
0x1f7bb:   83 e1 01                              	and ecx, 1
0x1f7be:   88 4b 09                              	mov byte ptr [rbx + 9], cl
0x1f7c1:   48 c1 ea 06                           	shr rdx, 6
0x1f7c5:   83 e2 01                              	and edx, 1
0x1f7c8:   88 53 0a                              	mov byte ptr [rbx + 0xa], dl
0x1f7cb:   48 83 c4 20                           	add rsp, 0x20
0x1f7cf:   5b                                    	pop rbx
0x1f7d0:   41 5c                                 	pop r12
0x1f7d2:   c9                                    	leave 
0x1f7d3:   c3                                    	ret 
; function: BLACKWIDOW_SetPowerDetectorConfig at 0x1f7d4 -- 0x1f7f2
0x1f7d4:   55                                    	push rbp
0x1f7d5:   48 89 e5                              	mov rbp, rsp
0x1f7d8:   48 83 ec 20                           	sub rsp, 0x20
0x1f7dc:   e8 0f f4 01 00                        	call 0x3ebf0 <mcount>
0x1f7e1:   b8 00 00 00 00                        	mov eax, 0
0x1f7e6:   83 fe 03                              	cmp esi, 3
0x1f7e9:   77 37                                 	ja 0x1f822
0x1f7eb:   89 f6                                 	mov esi, esi
0x1f7ed:   48 89 74 24 10                        	mov qword ptr [rsp + 0x10], rsi
; data inside code section at 0x1f7f2 -- 0x1f7f4
0x1f7f2:   c7 44                                              |.D              |
; function: BLACKWIDOW_GetPowerDetect at 0x1f7f4 -- 0x1f824
0x1f7f4:   24 08                                 	and al, 8
; data inside code section at 0x1f7f6 -- 0x1f822
0x1f7f6:   06 00 00 00 c7 04 24 01  00 00 00 41 b9 00 00 00   |......$....A....|
0x1f806:   00 41 b8 02 00 00 00 b9  05 00 00 00 ba 00 00 00   |.A..............|
0x1f816:   00 be 0d 00 00 00 ff 15  66 70 01 00               |........fp..    |
0x1f822:   c9                                    	leave 
0x1f823:   c3                                    	ret 
; function: BLACKWIDOW_GetPowerDetect at 0x1f824 -- 0x1f91c
0x1f824:   55                                    	push rbp
0x1f825:   48 89 e5                              	mov rbp, rsp
0x1f828:   41 54                                 	push r12
0x1f82a:   53                                    	push rbx
0x1f82b:   48 83 ec 30                           	sub rsp, 0x30
0x1f82f:   e8 bc f3 01 00                        	call 0x3ebf0 <mcount>
0x1f834:   48 89 fb                              	mov rbx, rdi
0x1f837:   49 89 f4                              	mov r12, rsi
0x1f83a:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1f842:   48 c7 45 e0 00 00 00 00               	mov qword ptr [rbp - 0x20], 0
0x1f84a:   48 8d 45 e0                           	lea rax, [rbp - 0x20]
0x1f84e:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f852:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f858:   41 b8 01 00 00 00                     	mov r8d, 1
0x1f85e:   b9 07 00 00 00                        	mov ecx, 7
0x1f863:   ba 00 00 00 00                        	mov edx, 0
0x1f868:   be 0d 00 00 00                        	mov esi, 0xd ; "NU"
0x1f86d:   ff 15 0d 70 01 00                     	call qword ptr [rip + 0x1700d]
0x1f873:   84 c0                                 	test al, al
0x1f875:   74 43                                 	je 0x1f8ba <BLACKWIDOW_GetPowerDetect+0x96>
0x1f877:   48 83 7d e0 00                        	cmp qword ptr [rbp - 0x20], 0
0x1f87c:   75 3c                                 	jne 0x1f8ba <BLACKWIDOW_GetPowerDetect+0x96>
0x1f87e:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x1f887:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1f88f:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x1f896:   41 b9 00 00 00 00                     	mov r9d, 0
0x1f89c:   41 b8 01 00 00 00                     	mov r8d, 1
0x1f8a2:   b9 07 00 00 00                        	mov ecx, 7
0x1f8a7:   ba 00 00 00 00                        	mov edx, 0
0x1f8ac:   be 0d 00 00 00                        	mov esi, 0xd ; "NU"
0x1f8b1:   48 89 df                              	mov rdi, rbx
0x1f8b4:   ff 15 ce 6f 01 00                     	call qword ptr [rip + 0x16fce]
0x1f8ba:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1f8be:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1f8c2:   41 b9 02 00 00 00                     	mov r9d, 2
0x1f8c8:   41 b8 09 00 00 00                     	mov r8d, 9
0x1f8ce:   b9 00 00 00 00                        	mov ecx, 0
0x1f8d3:   ba 00 00 00 00                        	mov edx, 0
0x1f8d8:   be 0d 00 00 00                        	mov esi, 0xd ; "NU"
0x1f8dd:   48 89 df                              	mov rdi, rbx
0x1f8e0:   ff 15 9a 6f 01 00                     	call qword ptr [rip + 0x16f9a]
0x1f8e6:   84 c0                                 	test al, al
0x1f8e8:   74 5d                                 	je 0x1f947
0x1f8ea:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x1f8ee:   48 81 fa fe 03 00 00                  	cmp rdx, 0x3fe
0x1f8f5:   77 0d                                 	ja 0x1f904 <BLACKWIDOW_GetPowerDetect+0xe0>
0x1f8f7:   41 89 14 24                           	mov dword ptr [r12], edx
0x1f8fb:   48 83 7d e0 00                        	cmp qword ptr [rbp - 0x20], 0
0x1f900:   75 45                                 	jne 0x1f947
0x1f902:   eb 07                                 	jmp 0x1f90b <BLACKWIDOW_GetPowerDetect+0xe7>
0x1f904:   b8 00 00 00 00                        	mov eax, 0
0x1f909:   eb 3c                                 	jmp 0x1f947
0x1f90b:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x1f914:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x1f91c -- 0x1f920
0x1f91c:   c7 04 24 01                                        |..$.            |
; function: BLACKWIDOW_GetGainMode at 0x1f920 -- 0x1f950
0x1f920:   00 00                                 	add byte ptr [rax], al
0x1f922:   00 41 b9                              	add byte ptr [rcx - 0x47], al
0x1f925:   00 00                                 	add byte ptr [rax], al
0x1f927:   00 00                                 	add byte ptr [rax], al
0x1f929:   41 b8 01 00 00 00                     	mov r8d, 1
0x1f92f:   b9 07 00 00 00                        	mov ecx, 7
0x1f934:   ba 00 00 00 00                        	mov edx, 0
0x1f939:   be 0d 00 00 00                        	mov esi, 0xd ; "NU"
0x1f93e:   48 89 df                              	mov rdi, rbx
0x1f941:   ff 15 41 6f 01 00                     	call qword ptr [rip + 0x16f41]
0x1f947:   48 83 c4 30                           	add rsp, 0x30
0x1f94b:   5b                                    	pop rbx
0x1f94c:   41 5c                                 	pop r12
0x1f94e:   c9                                    	leave 
0x1f94f:   c3                                    	ret 
; function: BLACKWIDOW_GetGainMode at 0x1f950 -- 0x1f9d0
0x1f950:   55                                    	push rbp
0x1f951:   48 89 e5                              	mov rbp, rsp
0x1f954:   48 83 ec 30                           	sub rsp, 0x30
0x1f958:   48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x1f95c:   4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x1f960:   4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x1f964:   4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x1f968:   e8 83 f2 01 00                        	call 0x3ebf0 <mcount>
0x1f96d:   48 89 fb                              	mov rbx, rdi
0x1f970:   49 89 f4                              	mov r12, rsi
0x1f973:   49 89 d5                              	mov r13, rdx
0x1f976:   4c 8b 77 28                           	mov r14, qword ptr [rdi + 0x28]
0x1f97a:   48 85 ff                              	test rdi, rdi
0x1f97d:   74 7d                                 	je 0x1f9fc
0x1f97f:   48 85 f6                              	test rsi, rsi
0x1f982:   74 78                                 	je 0x1f9fc
0x1f984:   48 85 d2                              	test rdx, rdx
0x1f987:   74 73                                 	je 0x1f9fc
0x1f989:   c7 45 dc ff 03 00 00                  	mov dword ptr [rbp - 0x24], 0x3ff
0x1f990:   48 89 f7                              	mov rdi, rsi
0x1f993:   e8 89 f5 ff ff                        	call 0x1ef21 <CheckThresholdValidity>
0x1f998:   84 c0                                 	test al, al
0x1f99a:   74 4e                                 	je 0x1f9ea
0x1f99c:   48 8d 75 dc                           	lea rsi, [rbp - 0x24]
0x1f9a0:   48 89 df                              	mov rdi, rbx
0x1f9a3:   e8 7c fe ff ff                        	call 0x1f824 <BLACKWIDOW_GetPowerDetect>
0x1f9a8:   84 c0                                 	test al, al
0x1f9aa:   74 3e                                 	je 0x1f9ea
0x1f9ac:   8b 55 dc                              	mov edx, dword ptr [rbp - 0x24]
0x1f9af:   41 89 96 a4 00 00 00                  	mov dword ptr [r14 + 0xa4], edx
0x1f9b6:   8b 55 dc                              	mov edx, dword ptr [rbp - 0x24]
0x1f9b9:   41 39 14 24                           	cmp dword ptr [r12], edx
0x1f9bd:   72 0a                                 	jb 0x1f9c9 <BLACKWIDOW_GetGainMode+0x79>
0x1f9bf:   41 c7 45 00 00 00 00 00               	mov dword ptr [r13], 0
0x1f9c7:   eb 21                                 	jmp 0x1f9ea
0x1f9c9:   41 3b 54 24 04                        	cmp edx, dword ptr [r12 + 4]
0x1f9ce:   77 0a                                 	ja 0x1f9da
; data inside code section at 0x1f9d0 -- 0x1f9d3
0x1f9d0:   41 c7 45                                           |A.E             |
; function: BLACKWIDOW_SetGainLowCurrentConfig at 0x1f9d3 -- 0x1fa03
0x1f9d3:   00 01                                 	add byte ptr [rcx], al
0x1f9d5:   00 00                                 	add byte ptr [rax], al
0x1f9d7:   00 eb                                 	add bl, ch
0x1f9d9:   10 41 39                              	adc byte ptr [rcx + 0x39], al
0x1f9dc:   54                                    	push rsp
0x1f9dd:   24 08                                 	and al, 8
0x1f9df:   19 d2                                 	sbb edx, edx
0x1f9e1:   f7 d2                                 	not edx
0x1f9e3:   83 c2 03                              	add edx, 3
0x1f9e6:   41 89 55 00                           	mov dword ptr [r13], edx
0x1f9ea:   48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0x1f9ee:   4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0x1f9f2:   4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0x1f9f6:   4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x1f9fa:   c9                                    	leave 
0x1f9fb:   c3                                    	ret 
0x1f9fc:   b8 00 00 00 00                        	mov eax, 0
0x1fa01:   eb e7                                 	jmp 0x1f9ea <BLACKWIDOW_SetGainLowCurrentConfig+0x17>
; function: BLACKWIDOW_SetGainLowCurrentConfig at 0x1fa03 -- 0x1fccc
0x1fa03:   55                                    	push rbp
0x1fa04:   48 89 e5                              	mov rbp, rsp
0x1fa07:   41 54                                 	push r12
0x1fa09:   53                                    	push rbx
0x1fa0a:   48 83 ec 30                           	sub rsp, 0x30
0x1fa0e:   e8 dd f1 01 00                        	call 0x3ebf0 <mcount>
0x1fa13:   49 89 fc                              	mov r12, rdi
0x1fa16:   48 89 f3                              	mov rbx, rsi
0x1fa19:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1fa21:   48 85 ff                              	test rdi, rdi
0x1fa24:   0f 94 c2                              	sete dl
0x1fa27:   48 85 f6                              	test rsi, rsi
0x1fa2a:   0f 94 c0                              	sete al
0x1fa2d:   09 d0                                 	or eax, edx
0x1fa2f:   34 01                                 	xor al, 1
0x1fa31:   74 5d                                 	je 0x1fa90 <BLACKWIDOW_SetGainLowCurrentConfig+0x8d>
0x1fa33:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1fa37:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1fa3b:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fa41:   41 b8 08 00 00 00                     	mov r8d, 8
0x1fa47:   b9 00 00 00 00                        	mov ecx, 0
0x1fa4c:   ba 00 00 00 00                        	mov edx, 0
0x1fa51:   be 07 00 00 00                        	mov esi, 7
0x1fa56:   ff 15 24 6e 01 00                     	call qword ptr [rip + 0x16e24]
0x1fa5c:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x1fa60:   48 83 e2 ac                           	and rdx, 0xffffffffffffffac
0x1fa64:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x1fa68:   84 c0                                 	test al, al
0x1fa6a:   74 24                                 	je 0x1fa90 <BLACKWIDOW_SetGainLowCurrentConfig+0x8d>
0x1fa6c:   80 7b 04 01                           	cmp byte ptr [rbx + 4], 1
0x1fa70:   75 08                                 	jne 0x1fa7a <BLACKWIDOW_SetGainLowCurrentConfig+0x77>
0x1fa72:   48 83 ca 40                           	or rdx, 0x40
0x1fa76:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x1fa7a:   80 7b 05 01                           	cmp byte ptr [rbx + 5], 1
0x1fa7e:   74 05                                 	je 0x1fa85 <BLACKWIDOW_SetGainLowCurrentConfig+0x82>
0x1fa80:   48 83 4d e8 02                        	or qword ptr [rbp - 0x18], 2
0x1fa85:   80 7b 06 01                           	cmp byte ptr [rbx + 6], 1
0x1fa89:   75 05                                 	jne 0x1fa90 <BLACKWIDOW_SetGainLowCurrentConfig+0x8d>
0x1fa8b:   48 83 4d e8 10                        	or qword ptr [rbp - 0x18], 0x10
0x1fa90:   8b 13                                 	mov edx, dword ptr [rbx]
0x1fa92:   83 fa 01                              	cmp edx, 1
0x1fa95:   0f 84 ae 00 00 00                     	je 0x1fb49 <BLACKWIDOW_SetGainLowCurrentConfig+0x146>
0x1fa9b:   83 fa 01                              	cmp edx, 1
0x1fa9e:   72 1c                                 	jb 0x1fabc <BLACKWIDOW_SetGainLowCurrentConfig+0xb9>
0x1faa0:   83 fa 02                              	cmp edx, 2
0x1faa3:   0f 84 2d 01 00 00                     	je 0x1fbd6 <BLACKWIDOW_SetGainLowCurrentConfig+0x1d3>
0x1faa9:   83 fa 03                              	cmp edx, 3
0x1faac:   0f 84 b9 01 00 00                     	je 0x1fc6b <BLACKWIDOW_SetGainLowCurrentConfig+0x268>
0x1fab2:   b8 00 00 00 00                        	mov eax, 0
0x1fab7:   e9 3b 02 00 00                        	jmp 0x1fcf7
0x1fabc:   84 c0                                 	test al, al
0x1fabe:   0f 84 33 02 00 00                     	je 0x1fcf7
0x1fac4:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x1facd:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1fad5:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x1fadc:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fae2:   41 b8 01 00 00 00                     	mov r8d, 1
0x1fae8:   b9 06 00 00 00                        	mov ecx, 6
0x1faed:   ba 00 00 00 00                        	mov edx, 0
0x1faf2:   be 06 00 00 00                        	mov esi, 6
0x1faf7:   4c 89 e7                              	mov rdi, r12
0x1fafa:   ff 15 88 6d 01 00                     	call qword ptr [rip + 0x16d88]
0x1fb00:   84 c0                                 	test al, al
0x1fb02:   0f 84 ef 01 00 00                     	je 0x1fcf7
0x1fb08:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x1fb0c:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1fb11:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1fb19:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x1fb20:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fb26:   41 b8 08 00 00 00                     	mov r8d, 8
0x1fb2c:   b9 00 00 00 00                        	mov ecx, 0
0x1fb31:   ba 00 00 00 00                        	mov edx, 0
0x1fb36:   be 07 00 00 00                        	mov esi, 7
0x1fb3b:   4c 89 e7                              	mov rdi, r12
0x1fb3e:   ff 15 44 6d 01 00                     	call qword ptr [rip + 0x16d44]
0x1fb44:   e9 ae 01 00 00                        	jmp 0x1fcf7
0x1fb49:   84 c0                                 	test al, al
0x1fb4b:   0f 84 a6 01 00 00                     	je 0x1fcf7
0x1fb51:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x1fb5a:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1fb62:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x1fb69:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fb6f:   41 b8 01 00 00 00                     	mov r8d, 1
0x1fb75:   b9 06 00 00 00                        	mov ecx, 6
0x1fb7a:   ba 00 00 00 00                        	mov edx, 0
0x1fb7f:   be 06 00 00 00                        	mov esi, 6
0x1fb84:   4c 89 e7                              	mov rdi, r12
0x1fb87:   ff 15 fb 6c 01 00                     	call qword ptr [rip + 0x16cfb]
0x1fb8d:   84 c0                                 	test al, al
0x1fb8f:   0f 84 62 01 00 00                     	je 0x1fcf7
0x1fb95:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x1fb99:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1fb9e:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1fba6:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x1fbad:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fbb3:   41 b8 08 00 00 00                     	mov r8d, 8
0x1fbb9:   b9 00 00 00 00                        	mov ecx, 0
0x1fbbe:   ba 00 00 00 00                        	mov edx, 0
0x1fbc3:   be 07 00 00 00                        	mov esi, 7
0x1fbc8:   4c 89 e7                              	mov rdi, r12
0x1fbcb:   ff 15 b7 6c 01 00                     	call qword ptr [rip + 0x16cb7]
0x1fbd1:   e9 21 01 00 00                        	jmp 0x1fcf7
0x1fbd6:   84 c0                                 	test al, al
0x1fbd8:   0f 84 19 01 00 00                     	je 0x1fcf7
0x1fbde:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x1fbe7:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1fbef:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x1fbf6:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fbfc:   41 b8 01 00 00 00                     	mov r8d, 1
0x1fc02:   b9 06 00 00 00                        	mov ecx, 6
0x1fc07:   ba 00 00 00 00                        	mov edx, 0
0x1fc0c:   be 06 00 00 00                        	mov esi, 6
0x1fc11:   4c 89 e7                              	mov rdi, r12
0x1fc14:   ff 15 6e 6c 01 00                     	call qword ptr [rip + 0x16c6e]
0x1fc1a:   84 c0                                 	test al, al
0x1fc1c:   0f 84 d5 00 00 00                     	je 0x1fcf7
0x1fc22:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x1fc26:   48 83 c8 01                           	or rax, 1
0x1fc2a:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x1fc2e:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1fc33:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1fc3b:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x1fc42:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fc48:   41 b8 08 00 00 00                     	mov r8d, 8
0x1fc4e:   b9 00 00 00 00                        	mov ecx, 0
0x1fc53:   ba 00 00 00 00                        	mov edx, 0
0x1fc58:   be 07 00 00 00                        	mov esi, 7
0x1fc5d:   4c 89 e7                              	mov rdi, r12
0x1fc60:   ff 15 22 6c 01 00                     	call qword ptr [rip + 0x16c22]
0x1fc66:   e9 8c 00 00 00                        	jmp 0x1fcf7
0x1fc6b:   84 c0                                 	test al, al
0x1fc6d:   0f 84 84 00 00 00                     	je 0x1fcf7
0x1fc73:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x1fc7c:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1fc84:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x1fc8b:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fc91:   41 b8 01 00 00 00                     	mov r8d, 1
0x1fc97:   b9 06 00 00 00                        	mov ecx, 6
0x1fc9c:   ba 00 00 00 00                        	mov edx, 0
0x1fca1:   be 06 00 00 00                        	mov esi, 6
0x1fca6:   4c 89 e7                              	mov rdi, r12
0x1fca9:   ff 15 d9 6b 01 00                     	call qword ptr [rip + 0x16bd9]
0x1fcaf:   84 c0                                 	test al, al
0x1fcb1:   74 44                                 	je 0x1fcf7
0x1fcb3:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x1fcb7:   48 83 c8 01                           	or rax, 1
0x1fcbb:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x1fcbf:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1fcc4:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x1fccc -- 0x1fcd0
0x1fccc:   c7 04 24 00                                        |..$.            |
; function: BLACKWIDOW_GetGainLowCurrentConfig at 0x1fcd0 -- 0x1fd00
0x1fcd0:   00 00                                 	add byte ptr [rax], al
0x1fcd2:   00 41 b9                              	add byte ptr [rcx - 0x47], al
0x1fcd5:   00 00                                 	add byte ptr [rax], al
0x1fcd7:   00 00                                 	add byte ptr [rax], al
0x1fcd9:   41 b8 08 00 00 00                     	mov r8d, 8
0x1fcdf:   b9 00 00 00 00                        	mov ecx, 0
0x1fce4:   ba 00 00 00 00                        	mov edx, 0
0x1fce9:   be 07 00 00 00                        	mov esi, 7
0x1fcee:   4c 89 e7                              	mov rdi, r12
0x1fcf1:   ff 15 91 6b 01 00                     	call qword ptr [rip + 0x16b91]
0x1fcf7:   48 83 c4 30                           	add rsp, 0x30
0x1fcfb:   5b                                    	pop rbx
0x1fcfc:   41 5c                                 	pop r12
0x1fcfe:   c9                                    	leave 
0x1fcff:   c3                                    	ret 
; function: BLACKWIDOW_GetGainLowCurrentConfig at 0x1fd00 -- 0x1fdd2
0x1fd00:   55                                    	push rbp
0x1fd01:   48 89 e5                              	mov rbp, rsp
0x1fd04:   41 54                                 	push r12
0x1fd06:   53                                    	push rbx
0x1fd07:   48 83 ec 20                           	sub rsp, 0x20
0x1fd0b:   e8 e0 ee 01 00                        	call 0x3ebf0 <mcount>
0x1fd10:   48 89 fb                              	mov rbx, rdi
0x1fd13:   49 89 f4                              	mov r12, rsi
0x1fd16:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1fd1e:   48 85 ff                              	test rdi, rdi
0x1fd21:   74 56                                 	je 0x1fd79 <BLACKWIDOW_GetGainLowCurrentConfig+0x79>
0x1fd23:   48 85 f6                              	test rsi, rsi
0x1fd26:   74 51                                 	je 0x1fd79 <BLACKWIDOW_GetGainLowCurrentConfig+0x79>
0x1fd28:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1fd2c:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1fd30:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fd36:   41 b8 08 00 00 00                     	mov r8d, 8
0x1fd3c:   b9 00 00 00 00                        	mov ecx, 0
0x1fd41:   ba 00 00 00 00                        	mov edx, 0
0x1fd46:   be 07 00 00 00                        	mov esi, 7
0x1fd4b:   ff 15 2f 6b 01 00                     	call qword ptr [rip + 0x16b2f]
0x1fd51:   84 c0                                 	test al, al
0x1fd53:   74 1e                                 	je 0x1fd73 <BLACKWIDOW_GetGainLowCurrentConfig+0x73>
0x1fd55:   f6 45 e8 40                           	test byte ptr [rbp - 0x18], 0x40
0x1fd59:   41 0f 95 44 24 04                     	setne byte ptr [r12 + 4]
0x1fd5f:   f6 45 e8 02                           	test byte ptr [rbp - 0x18], 2
0x1fd63:   41 0f 94 44 24 05                     	sete byte ptr [r12 + 5]
0x1fd69:   f6 45 e8 10                           	test byte ptr [rbp - 0x18], 0x10
0x1fd6d:   41 0f 95 44 24 06                     	setne byte ptr [r12 + 6]
0x1fd73:   f6 45 e8 01                           	test byte ptr [rbp - 0x18], 1
0x1fd77:   75 40                                 	jne 0x1fdb9 <BLACKWIDOW_GetGainLowCurrentConfig+0xb9>
0x1fd79:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1fd7d:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1fd81:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fd87:   41 b8 08 00 00 00                     	mov r8d, 8
0x1fd8d:   b9 00 00 00 00                        	mov ecx, 0
0x1fd92:   ba 00 00 00 00                        	mov edx, 0
0x1fd97:   be 06 00 00 00                        	mov esi, 6
0x1fd9c:   48 89 df                              	mov rdi, rbx
0x1fd9f:   ff 15 db 6a 01 00                     	call qword ptr [rip + 0x16adb]
0x1fda5:   84 c0                                 	test al, al
0x1fda7:   74 54                                 	je 0x1fdfd
0x1fda9:   f6 45 e8 40                           	test byte ptr [rbp - 0x18], 0x40
0x1fdad:   0f 95 c2                              	setne dl
0x1fdb0:   0f b6 d2                              	movzx edx, dl
0x1fdb3:   41 89 14 24                           	mov dword ptr [r12], edx
0x1fdb7:   eb 44                                 	jmp 0x1fdfd
0x1fdb9:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1fdbd:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1fdc1:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fdc7:   41 b8 08 00 00 00                     	mov r8d, 8
0x1fdcd:   b9 00 00 00 00                        	mov ecx, 0
; data inside code section at 0x1fdd2 -- 0x1fdd6
0x1fdd2:   ba 00 00 00                                        |....            |
; function: BLACKWIDOW_SetGainConfig at 0x1fdd6 -- 0x1fe06
0x1fdd6:   00 be 06 00 00 00                     	add byte ptr [rsi + 6], bh
0x1fddc:   48 89 df                              	mov rdi, rbx
0x1fddf:   ff 15 9b 6a 01 00                     	call qword ptr [rip + 0x16a9b]
0x1fde5:   84 c0                                 	test al, al
0x1fde7:   74 14                                 	je 0x1fdfd <BLACKWIDOW_SetGainConfig+0x27>
0x1fde9:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x1fded:   83 e2 40                              	and edx, 0x40
0x1fdf0:   48 83 fa 01                           	cmp rdx, 1
0x1fdf4:   19 d2                                 	sbb edx, edx
0x1fdf6:   83 c2 03                              	add edx, 3
0x1fdf9:   41 89 14 24                           	mov dword ptr [r12], edx
0x1fdfd:   48 83 c4 20                           	add rsp, 0x20
0x1fe01:   5b                                    	pop rbx
0x1fe02:   41 5c                                 	pop r12
0x1fe04:   c9                                    	leave 
0x1fe05:   c3                                    	ret 
; function: BLACKWIDOW_SetGainConfig at 0x1fe06 -- 0x2004c
0x1fe06:   55                                    	push rbp
0x1fe07:   48 89 e5                              	mov rbp, rsp
0x1fe0a:   41 54                                 	push r12
0x1fe0c:   53                                    	push rbx
0x1fe0d:   48 83 ec 30                           	sub rsp, 0x30
0x1fe11:   e8 da ed 01 00                        	call 0x3ebf0 <mcount>
0x1fe16:   49 89 fc                              	mov r12, rdi
0x1fe19:   48 89 f3                              	mov rbx, rsi
0x1fe1c:   48 85 ff                              	test rdi, rdi
0x1fe1f:   0f 94 c2                              	sete dl
0x1fe22:   48 85 f6                              	test rsi, rsi
0x1fe25:   0f 94 c0                              	sete al
0x1fe28:   09 d0                                 	or eax, edx
0x1fe2a:   34 01                                 	xor al, 1
0x1fe2c:   0f 84 45 02 00 00                     	je 0x20077
0x1fe32:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1fe3a:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1fe3e:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1fe42:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fe48:   41 b8 08 00 00 00                     	mov r8d, 8
0x1fe4e:   b9 00 00 00 00                        	mov ecx, 0
0x1fe53:   ba 00 00 00 00                        	mov edx, 0
0x1fe58:   be 06 00 00 00                        	mov esi, 6
0x1fe5d:   ff 15 1d 6a 01 00                     	call qword ptr [rip + 0x16a1d]
0x1fe63:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x1fe67:   84 c0                                 	test al, al
0x1fe69:   0f 84 08 02 00 00                     	je 0x20077
0x1fe6f:   48 89 d0                              	mov rax, rdx
0x1fe72:   24 48                                 	and al, 0x48
0x1fe74:   83 3b 04                              	cmp dword ptr [rbx], 4
0x1fe77:   75 0a                                 	jne 0x1fe83 <BLACKWIDOW_SetGainConfig+0x7d>
0x1fe79:   48 83 c8 01                           	or rax, 1
0x1fe7d:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x1fe81:   eb 25                                 	jmp 0x1fea8 <BLACKWIDOW_SetGainConfig+0xa2>
0x1fe83:   0c 80                                 	or al, 0x80
0x1fe85:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x1fe89:   83 3b 03                              	cmp dword ptr [rbx], 3
0x1fe8c:   75 08                                 	jne 0x1fe96 <BLACKWIDOW_SetGainConfig+0x90>
0x1fe8e:   48 83 c8 01                           	or rax, 1
0x1fe92:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x1fe96:   8b 03                                 	mov eax, dword ptr [rbx]
0x1fe98:   83 f8 04                              	cmp eax, 4
0x1fe9b:   77 0b                                 	ja 0x1fea8 <BLACKWIDOW_SetGainConfig+0xa2>
0x1fe9d:   83 e0 03                              	and eax, 3
0x1fea0:   48 c1 e0 04                           	shl rax, 4
0x1fea4:   48 09 45 e8                           	or qword ptr [rbp - 0x18], rax
0x1fea8:   8b 53 04                              	mov edx, dword ptr [rbx + 4]
0x1feab:   b8 00 00 00 00                        	mov eax, 0
0x1feb0:   83 fa 03                              	cmp edx, 3
0x1feb3:   0f 87 be 01 00 00                     	ja 0x20077
0x1feb9:   83 e2 03                              	and edx, 3
0x1febc:   48 01 d2                              	add rdx, rdx
0x1febf:   48 0b 55 e8                           	or rdx, qword ptr [rbp - 0x18]
0x1fec3:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x1fec7:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x1fecc:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1fed4:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x1fedb:   41 b9 00 00 00 00                     	mov r9d, 0
0x1fee1:   41 b8 08 00 00 00                     	mov r8d, 8
0x1fee7:   b9 00 00 00 00                        	mov ecx, 0
0x1feec:   ba 00 00 00 00                        	mov edx, 0
0x1fef1:   be 06 00 00 00                        	mov esi, 6
0x1fef6:   4c 89 e7                              	mov rdi, r12
0x1fef9:   ff 15 89 69 01 00                     	call qword ptr [rip + 0x16989]
0x1feff:   84 c0                                 	test al, al
0x1ff01:   0f 84 70 01 00 00                     	je 0x20077
0x1ff07:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x1ff0f:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x1ff13:   48 89 04 24                           	mov qword ptr [rsp], rax
0x1ff17:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ff1d:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ff23:   b9 00 00 00 00                        	mov ecx, 0
0x1ff28:   ba 00 00 00 00                        	mov edx, 0
0x1ff2d:   be 09 00 00 00                        	mov esi, 9
0x1ff32:   4c 89 e7                              	mov rdi, r12
0x1ff35:   ff 15 45 69 01 00                     	call qword ptr [rip + 0x16945]
0x1ff3b:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x1ff3f:   84 c0                                 	test al, al
0x1ff41:   0f 84 30 01 00 00                     	je 0x20077
0x1ff47:   80 e2 03                              	and dl, 3
0x1ff4a:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x1ff4e:   8b 4b 08                              	mov ecx, dword ptr [rbx + 8]
0x1ff51:   83 f9 07                              	cmp ecx, 7
0x1ff54:   76 07                                 	jbe 0x1ff5d <BLACKWIDOW_SetGainConfig+0x157>
0x1ff56:   b8 00 00 00 00                        	mov eax, 0
0x1ff5b:   eb 11                                 	jmp 0x1ff6e <BLACKWIDOW_SetGainConfig+0x168>
0x1ff5d:   48 c1 e1 05                           	shl rcx, 5
0x1ff61:   81 e1 e0 00 00 00                     	and ecx, 0xe0
0x1ff67:   48 09 ca                              	or rdx, rcx
0x1ff6a:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x1ff6e:   8b 53 0c                              	mov edx, dword ptr [rbx + 0xc]
0x1ff71:   83 fa 07                              	cmp edx, 7
0x1ff74:   76 0a                                 	jbe 0x1ff80 <BLACKWIDOW_SetGainConfig+0x17a>
0x1ff76:   b8 00 00 00 00                        	mov eax, 0
0x1ff7b:   e9 f7 00 00 00                        	jmp 0x20077
0x1ff80:   48 8b 4d e8                           	mov rcx, qword ptr [rbp - 0x18]
0x1ff84:   84 c0                                 	test al, al
0x1ff86:   0f 84 eb 00 00 00                     	je 0x20077
0x1ff8c:   48 89 d0                              	mov rax, rdx
0x1ff8f:   83 e0 07                              	and eax, 7
0x1ff92:   48 8d 14 85 00 00 00 00               	lea rdx, [rax*4]
0x1ff9a:   48 09 ca                              	or rdx, rcx
0x1ff9d:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x1ffa1:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x1ffa6:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x1ffae:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x1ffb5:   41 b9 00 00 00 00                     	mov r9d, 0
0x1ffbb:   41 b8 08 00 00 00                     	mov r8d, 8
0x1ffc1:   b9 00 00 00 00                        	mov ecx, 0
0x1ffc6:   ba 00 00 00 00                        	mov edx, 0
0x1ffcb:   be 09 00 00 00                        	mov esi, 9
0x1ffd0:   4c 89 e7                              	mov rdi, r12
0x1ffd3:   ff 15 af 68 01 00                     	call qword ptr [rip + 0x168af]
0x1ffd9:   84 c0                                 	test al, al
0x1ffdb:   0f 84 96 00 00 00                     	je 0x20077
0x1ffe1:   8b 53 10                              	mov edx, dword ptr [rbx + 0x10]
0x1ffe4:   b8 00 00 00 00                        	mov eax, 0
0x1ffe9:   83 fa 07                              	cmp edx, 7
0x1ffec:   0f 87 85 00 00 00                     	ja 0x20077
0x1fff2:   89 d2                                 	mov edx, edx
0x1fff4:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x1fff9:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x20001:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x20008:   41 b9 00 00 00 00                     	mov r9d, 0
0x2000e:   41 b8 03 00 00 00                     	mov r8d, 3
0x20014:   b9 05 00 00 00                        	mov ecx, 5
0x20019:   ba 00 00 00 00                        	mov edx, 0
0x2001e:   be 0a 00 00 00                        	mov esi, 0xa
0x20023:   4c 89 e7                              	mov rdi, r12
0x20026:   ff 15 5c 68 01 00                     	call qword ptr [rip + 0x1685c]
0x2002c:   84 c0                                 	test al, al
0x2002e:   74 47                                 	je 0x20077
0x20030:   8b 53 14                              	mov edx, dword ptr [rbx + 0x14]
0x20033:   b8 00 00 00 00                        	mov eax, 0
0x20038:   83 fa 0f                              	cmp edx, 0xf
0x2003b:   77 3a                                 	ja 0x20077
0x2003d:   89 d2                                 	mov edx, edx
0x2003f:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x20044:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x2004c -- 0x20050
0x2004c:   c7 04 24 01                                        |..$.            |
; function: BLACKWIDOW_SetGainMode at 0x20050 -- 0x20080
0x20050:   00 00                                 	add byte ptr [rax], al
0x20052:   00 41 b9                              	add byte ptr [rcx - 0x47], al
0x20055:   00 00                                 	add byte ptr [rax], al
0x20057:   00 00                                 	add byte ptr [rax], al
0x20059:   41 b8 04 00 00 00                     	mov r8d, 4
0x2005f:   b9 04 00 00 00                        	mov ecx, 4
0x20064:   ba 00 00 00 00                        	mov edx, 0
0x20069:   be 0c 00 00 00                        	mov esi, 0xc ; "GNU"
0x2006e:   4c 89 e7                              	mov rdi, r12
0x20071:   ff 15 11 68 01 00                     	call qword ptr [rip + 0x16811]
0x20077:   48 83 c4 30                           	add rsp, 0x30
0x2007b:   5b                                    	pop rbx
0x2007c:   41 5c                                 	pop r12
0x2007e:   c9                                    	leave 
0x2007f:   c3                                    	ret 
; function: BLACKWIDOW_SetGainMode at 0x20080 -- 0x20162
0x20080:   55                                    	push rbp
0x20081:   48 89 e5                              	mov rbp, rsp
0x20084:   48 83 ec 50                           	sub rsp, 0x50
0x20088:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x2008c:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x20090:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x20094:   e8 57 eb 01 00                        	call 0x3ebf0 <mcount>
0x20099:   49 89 fc                              	mov r12, rdi
0x2009c:   41 89 f5                              	mov r13d, esi
0x2009f:   48 8b 5f 28                           	mov rbx, qword ptr [rdi + 0x28]
0x200a3:   48 85 ff                              	test rdi, rdi
0x200a6:   0f 95 c0                              	setne al
0x200a9:   0f 84 ca 00 00 00                     	je 0x20179
0x200af:   83 fe 01                              	cmp esi, 1
0x200b2:   74 3f                                 	je 0x200f3 <BLACKWIDOW_SetGainMode+0x73>
0x200b4:   83 fe 01                              	cmp esi, 1
0x200b7:   72 15                                 	jb 0x200ce <BLACKWIDOW_SetGainMode+0x4e>
0x200b9:   83 fe 02                              	cmp esi, 2
0x200bc:   74 57                                 	je 0x20115 <BLACKWIDOW_SetGainMode+0x95>
0x200be:   b8 00 00 00 00                        	mov eax, 0
0x200c3:   83 fe 03                              	cmp esi, 3
0x200c6:   0f 85 ad 00 00 00                     	jne 0x20179
0x200cc:   eb 69                                 	jmp 0x20137 <BLACKWIDOW_SetGainMode+0xb7>
0x200ce:   48 8b 43 1c                           	mov rax, qword ptr [rbx + 0x1c]
0x200d2:   48 89 45 d0                           	mov qword ptr [rbp - 0x30], rax
0x200d6:   48 8b 43 24                           	mov rax, qword ptr [rbx + 0x24]
0x200da:   48 89 45 b0                           	mov qword ptr [rbp - 0x50], rax
0x200de:   48 8b 43 2c                           	mov rax, qword ptr [rbx + 0x2c]
0x200e2:   48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0x200e6:   48 8b 43 34                           	mov rax, qword ptr [rbx + 0x34]
0x200ea:   48 89 45 c0                           	mov qword ptr [rbp - 0x40], rax
0x200ee:   e9 94 00 00 00                        	jmp 0x20187
0x200f3:   48 8b 43 3c                           	mov rax, qword ptr [rbx + 0x3c]
0x200f7:   48 89 45 d0                           	mov qword ptr [rbp - 0x30], rax
0x200fb:   48 8b 43 44                           	mov rax, qword ptr [rbx + 0x44]
0x200ff:   48 89 45 b0                           	mov qword ptr [rbp - 0x50], rax
0x20103:   48 8b 43 4c                           	mov rax, qword ptr [rbx + 0x4c]
0x20107:   48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0x2010b:   48 8b 43 54                           	mov rax, qword ptr [rbx + 0x54]
0x2010f:   48 89 45 c0                           	mov qword ptr [rbp - 0x40], rax
0x20113:   eb 72                                 	jmp 0x20187
0x20115:   48 8b 43 5c                           	mov rax, qword ptr [rbx + 0x5c]
0x20119:   48 89 45 d0                           	mov qword ptr [rbp - 0x30], rax
0x2011d:   48 8b 43 64                           	mov rax, qword ptr [rbx + 0x64]
0x20121:   48 89 45 b0                           	mov qword ptr [rbp - 0x50], rax
0x20125:   48 8b 43 6c                           	mov rax, qword ptr [rbx + 0x6c]
0x20129:   48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0x2012d:   48 8b 43 74                           	mov rax, qword ptr [rbx + 0x74]
0x20131:   48 89 45 c0                           	mov qword ptr [rbp - 0x40], rax
0x20135:   eb 50                                 	jmp 0x20187
0x20137:   48 8b 43 7c                           	mov rax, qword ptr [rbx + 0x7c]
0x2013b:   48 89 45 d0                           	mov qword ptr [rbp - 0x30], rax
0x2013f:   48 8b 83 84 00 00 00                  	mov rax, qword ptr [rbx + 0x84]
0x20146:   48 89 45 b0                           	mov qword ptr [rbp - 0x50], rax
; data inside code section at 0x2014a -- 0x2014f
0x2014a:   48 8b 83 8c 00                                     |H....           |
0x2014f:   00 00                                 	add byte ptr [rax], al
0x20151:   48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0x20155:   48 8b 83 94 00 00 00                  	mov rax, qword ptr [rbx + 0x94]
0x2015c:   48 89 45 c0                           	mov qword ptr [rbp - 0x40], rax
0x20160:   eb 25                                 	jmp 0x20187
; data inside code section at 0x20162 -- 0x20169
0x20162:   48 8d 75 b0 4c 89 e7                               |H.u.L..         |
; function: BLACKWIDOW_SetGain at 0x20169 -- 0x20199
0x20169:   e8 98 fc ff ff                        	call 0x1fe06 <BLACKWIDOW_SetGainConfig>
0x2016e:   84 c0                                 	test al, al
0x20170:   74 07                                 	je 0x20179 <BLACKWIDOW_SetGain+0x10>
0x20172:   44 89 ab a0 00 00 00                  	mov dword ptr [rbx + 0xa0], r13d
0x20179:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x2017d:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x20181:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x20185:   c9                                    	leave 
0x20186:   c3                                    	ret 
0x20187:   48 8d 75 d0                           	lea rsi, [rbp - 0x30]
0x2018b:   4c 89 e7                              	mov rdi, r12
0x2018e:   e8 70 f8 ff ff                        	call 0x1fa03 <BLACKWIDOW_SetGainLowCurrentConfig>
0x20193:   84 c0                                 	test al, al
0x20195:   75 cb                                 	jne 0x20162
0x20197:   eb e0                                 	jmp 0x20179 <BLACKWIDOW_SetGain+0x10>
; function: BLACKWIDOW_SetGain at 0x20199 -- 0x201c0
0x20199:   55                                    	push rbp
0x2019a:   48 89 e5                              	mov rbp, rsp
0x2019d:   53                                    	push rbx
0x2019e:   48 83 ec 18                           	sub rsp, 0x18
0x201a2:   e8 49 ea 01 00                        	call 0x3ebf0 <mcount>
0x201a7:   48 89 fb                              	mov rbx, rdi
0x201aa:   48 8b 57 28                           	mov rdx, qword ptr [rdi + 0x28]
0x201ae:   48 85 ff                              	test rdi, rdi
0x201b1:   0f 95 c0                              	setne al
0x201b4:   74 35                                 	je 0x201eb
0x201b6:   c7 45 ec 04 00 00 00                  	mov dword ptr [rbp - 0x14], 4
0x201bd:   8b 42 10                              	mov eax, dword ptr [rdx + 0x10]
; data inside code section at 0x201c0 -- 0x201c2
0x201c0:   89 45                                              |.E              |
; function: BLACKWIDOW_SetXtalSettings at 0x201c2 -- 0x201f2
0x201c2:   e0 8b                                 	loopne 0x2014f
0x201c4:   42 14 89                              	adc al, 0x89
0x201c7:   45 e4 8b                              	in al, 0x8b
0x201ca:   42 18 89 45 e8 48 8d                  	sbb byte ptr [rcx - 0x72b717bb], cl
0x201d1:   55                                    	push rbp
0x201d2:   ec                                    	in al, dx
0x201d3:   48 8d 75 e0                           	lea rsi, [rbp - 0x20]
0x201d7:   e8 74 f7 ff ff                        	call 0x1f950 <BLACKWIDOW_GetGainMode>
0x201dc:   84 c0                                 	test al, al
0x201de:   74 0b                                 	je 0x201eb <BLACKWIDOW_SetXtalSettings+0x29>
0x201e0:   8b 75 ec                              	mov esi, dword ptr [rbp - 0x14]
0x201e3:   48 89 df                              	mov rdi, rbx
0x201e6:   e8 95 fe ff ff                        	call 0x20080 <BLACKWIDOW_SetGainMode>
0x201eb:   48 83 c4 18                           	add rsp, 0x18
0x201ef:   5b                                    	pop rbx
0x201f0:   c9                                    	leave 
0x201f1:   c3                                    	ret 
; function: BLACKWIDOW_SetXtalSettings at 0x201f2 -- 0x20419
0x201f2:   55                                    	push rbp
0x201f3:   48 89 e5                              	mov rbp, rsp
0x201f6:   41 54                                 	push r12
0x201f8:   53                                    	push rbx
0x201f9:   48 83 ec 30                           	sub rsp, 0x30
0x201fd:   e8 ee e9 01 00                        	call 0x3ebf0 <mcount>
0x20202:   49 89 fc                              	mov r12, rdi
0x20205:   48 89 f3                              	mov rbx, rsi
0x20208:   48 85 f6                              	test rsi, rsi
0x2020b:   0f 94 c2                              	sete dl
0x2020e:   48 85 ff                              	test rdi, rdi
0x20211:   0f 94 c0                              	sete al
0x20214:   09 d0                                 	or eax, edx
0x20216:   34 01                                 	xor al, 1
0x20218:   0f 84 26 02 00 00                     	je 0x20444
0x2021e:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x20226:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x2022a:   48 89 04 24                           	mov qword ptr [rsp], rax
0x2022e:   41 b9 00 00 00 00                     	mov r9d, 0
0x20234:   41 b8 08 00 00 00                     	mov r8d, 8
0x2023a:   b9 00 00 00 00                        	mov ecx, 0
0x2023f:   ba 00 00 00 00                        	mov edx, 0
0x20244:   be 02 00 00 00                        	mov esi, 2
0x20249:   ff 15 31 66 01 00                     	call qword ptr [rip + 0x16631]
0x2024f:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x20253:   84 c0                                 	test al, al
0x20255:   0f 84 e9 01 00 00                     	je 0x20444
0x2025b:   b2 00                                 	mov dl, 0
0x2025d:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x20261:   80 3b 01                              	cmp byte ptr [rbx], 1
0x20264:   75 07                                 	jne 0x2026d <BLACKWIDOW_SetXtalSettings+0x7b>
0x20266:   80 ca 80                              	or dl, 0x80
0x20269:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x2026d:   80 7b 01 01                           	cmp byte ptr [rbx + 1], 1
0x20271:   74 05                                 	je 0x20278 <BLACKWIDOW_SetXtalSettings+0x86>
0x20273:   48 83 4d e8 40                        	or qword ptr [rbp - 0x18], 0x40
0x20278:   80 7b 02 01                           	cmp byte ptr [rbx + 2], 1
0x2027c:   74 05                                 	je 0x20283 <BLACKWIDOW_SetXtalSettings+0x91>
0x2027e:   48 83 4d e8 20                        	or qword ptr [rbp - 0x18], 0x20
0x20283:   8b 53 04                              	mov edx, dword ptr [rbx + 4]
0x20286:   83 fa 03                              	cmp edx, 3
0x20289:   76 07                                 	jbe 0x20292 <BLACKWIDOW_SetXtalSettings+0xa0>
0x2028b:   b8 00 00 00 00                        	mov eax, 0
0x20290:   eb 0b                                 	jmp 0x2029d <BLACKWIDOW_SetXtalSettings+0xab>
0x20292:   83 e2 03                              	and edx, 3
0x20295:   48 c1 e2 03                           	shl rdx, 3
0x20299:   48 09 55 e8                           	or qword ptr [rbp - 0x18], rdx
0x2029d:   80 7b 08 01                           	cmp byte ptr [rbx + 8], 1
0x202a1:   75 05                                 	jne 0x202a8 <BLACKWIDOW_SetXtalSettings+0xb6>
0x202a3:   48 83 4d e8 04                        	or qword ptr [rbp - 0x18], 4
0x202a8:   80 7b 09 01                           	cmp byte ptr [rbx + 9], 1
0x202ac:   75 05                                 	jne 0x202b3 <BLACKWIDOW_SetXtalSettings+0xc1>
0x202ae:   48 83 4d e8 02                        	or qword ptr [rbp - 0x18], 2
0x202b3:   80 7b 0a 01                           	cmp byte ptr [rbx + 0xa], 1
0x202b7:   75 05                                 	jne 0x202be <BLACKWIDOW_SetXtalSettings+0xcc>
0x202b9:   48 83 4d e8 01                        	or qword ptr [rbp - 0x18], 1
0x202be:   84 c0                                 	test al, al
0x202c0:   0f 84 7e 01 00 00                     	je 0x20444
0x202c6:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x202ca:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x202cf:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x202d7:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x202de:   41 b9 00 00 00 00                     	mov r9d, 0
0x202e4:   41 b8 08 00 00 00                     	mov r8d, 8
0x202ea:   b9 00 00 00 00                        	mov ecx, 0
0x202ef:   ba 00 00 00 00                        	mov edx, 0
0x202f4:   be 02 00 00 00                        	mov esi, 2
0x202f9:   4c 89 e7                              	mov rdi, r12
0x202fc:   ff 15 86 65 01 00                     	call qword ptr [rip + 0x16586]
0x20302:   84 c0                                 	test al, al
0x20304:   0f 84 3a 01 00 00                     	je 0x20444
0x2030a:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x20312:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20316:   48 89 04 24                           	mov qword ptr [rsp], rax
0x2031a:   41 b9 00 00 00 00                     	mov r9d, 0
0x20320:   41 b8 08 00 00 00                     	mov r8d, 8
0x20326:   b9 00 00 00 00                        	mov ecx, 0
0x2032b:   ba 00 00 00 00                        	mov edx, 0
0x20330:   be 03 00 00 00                        	mov esi, 3
0x20335:   4c 89 e7                              	mov rdi, r12
0x20338:   ff 15 42 65 01 00                     	call qword ptr [rip + 0x16542]
0x2033e:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x20342:   84 c0                                 	test al, al
0x20344:   0f 84 fa 00 00 00                     	je 0x20444
0x2034a:   b2 00                                 	mov dl, 0
0x2034c:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x20350:   8b 4b 0c                              	mov ecx, dword ptr [rbx + 0xc]
0x20353:   83 f9 03                              	cmp ecx, 3
0x20356:   76 07                                 	jbe 0x2035f <BLACKWIDOW_SetXtalSettings+0x16d>
0x20358:   b8 00 00 00 00                        	mov eax, 0
0x2035d:   eb 11                                 	jmp 0x20370 <BLACKWIDOW_SetXtalSettings+0x17e>
0x2035f:   48 c1 e1 06                           	shl rcx, 6
0x20363:   81 e1 c0 00 00 00                     	and ecx, 0xc0
0x20369:   48 09 ca                              	or rdx, rcx
0x2036c:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x20370:   8b 53 10                              	mov edx, dword ptr [rbx + 0x10]
0x20373:   83 fa 03                              	cmp edx, 3
0x20376:   76 07                                 	jbe 0x2037f <BLACKWIDOW_SetXtalSettings+0x18d>
0x20378:   b8 00 00 00 00                        	mov eax, 0
0x2037d:   eb 0b                                 	jmp 0x2038a <BLACKWIDOW_SetXtalSettings+0x198>
0x2037f:   83 e2 03                              	and edx, 3
0x20382:   48 c1 e2 04                           	shl rdx, 4
0x20386:   48 09 55 e8                           	or qword ptr [rbp - 0x18], rdx
0x2038a:   8b 53 14                              	mov edx, dword ptr [rbx + 0x14]
0x2038d:   83 fa 03                              	cmp edx, 3
0x20390:   76 07                                 	jbe 0x20399 <BLACKWIDOW_SetXtalSettings+0x1a7>
0x20392:   b8 00 00 00 00                        	mov eax, 0
0x20397:   eb 0b                                 	jmp 0x203a4 <BLACKWIDOW_SetXtalSettings+0x1b2>
0x20399:   83 e2 03                              	and edx, 3
0x2039c:   48 c1 e2 02                           	shl rdx, 2
0x203a0:   48 09 55 e8                           	or qword ptr [rbp - 0x18], rdx
0x203a4:   80 7b 18 01                           	cmp byte ptr [rbx + 0x18], 1
0x203a8:   75 05                                 	jne 0x203af <BLACKWIDOW_SetXtalSettings+0x1bd>
0x203aa:   48 83 4d e8 02                        	or qword ptr [rbp - 0x18], 2
0x203af:   80 7b 19 01                           	cmp byte ptr [rbx + 0x19], 1
0x203b3:   75 05                                 	jne 0x203ba <BLACKWIDOW_SetXtalSettings+0x1c8>
0x203b5:   48 83 4d e8 01                        	or qword ptr [rbp - 0x18], 1
0x203ba:   84 c0                                 	test al, al
0x203bc:   0f 84 82 00 00 00                     	je 0x20444
0x203c2:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x203c6:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x203cb:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x203d3:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x203da:   41 b9 00 00 00 00                     	mov r9d, 0
0x203e0:   41 b8 08 00 00 00                     	mov r8d, 8
0x203e6:   b9 00 00 00 00                        	mov ecx, 0
0x203eb:   ba 00 00 00 00                        	mov edx, 0
0x203f0:   be 03 00 00 00                        	mov esi, 3
0x203f5:   4c 89 e7                              	mov rdi, r12
0x203f8:   ff 15 8a 64 01 00                     	call qword ptr [rip + 0x1648a]
0x203fe:   84 c0                                 	test al, al
0x20400:   74 42                                 	je 0x20444
0x20402:   8b 53 1c                              	mov edx, dword ptr [rbx + 0x1c]
0x20405:   83 fa 01                              	cmp edx, 1
0x20408:   77 3a                                 	ja 0x20444
0x2040a:   89 d2                                 	mov edx, edx
0x2040c:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x20411:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x20419 -- 0x2041d
0x20419:   c7 04 24 01                                        |..$.            |
; function: BLACKWIDOW_GetXtalSettings at 0x2041d -- 0x2044d
0x2041d:   00 00                                 	add byte ptr [rax], al
0x2041f:   00 41 b9                              	add byte ptr [rcx - 0x47], al
0x20422:   00 00                                 	add byte ptr [rax], al
0x20424:   00 00                                 	add byte ptr [rax], al
0x20426:   41 b8 01 00 00 00                     	mov r8d, 1
0x2042c:   b9 06 00 00 00                        	mov ecx, 6
0x20431:   ba 00 00 00 00                        	mov edx, 0
0x20436:   be 05 00 00 00                        	mov esi, 5
0x2043b:   4c 89 e7                              	mov rdi, r12
0x2043e:   ff 15 44 64 01 00                     	call qword ptr [rip + 0x16444]
0x20444:   48 83 c4 30                           	add rsp, 0x30
0x20448:   5b                                    	pop rbx
0x20449:   41 5c                                 	pop r12
0x2044b:   c9                                    	leave 
0x2044c:   c3                                    	ret 
; function: BLACKWIDOW_GetXtalSettings at 0x2044d -- 0x2055f
0x2044d:   55                                    	push rbp
0x2044e:   48 89 e5                              	mov rbp, rsp
0x20451:   41 54                                 	push r12
0x20453:   53                                    	push rbx
0x20454:   48 83 ec 20                           	sub rsp, 0x20
0x20458:   e8 93 e7 01 00                        	call 0x3ebf0 <mcount>
0x2045d:   49 89 fc                              	mov r12, rdi
0x20460:   48 89 f3                              	mov rbx, rsi
0x20463:   48 85 f6                              	test rsi, rsi
0x20466:   0f 95 c0                              	setne al
0x20469:   0f 84 1b 01 00 00                     	je 0x2058a
0x2046f:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x20477:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x2047b:   48 89 04 24                           	mov qword ptr [rsp], rax
0x2047f:   41 b9 00 00 00 00                     	mov r9d, 0
0x20485:   41 b8 08 00 00 00                     	mov r8d, 8
0x2048b:   b9 00 00 00 00                        	mov ecx, 0
0x20490:   ba 00 00 00 00                        	mov edx, 0
0x20495:   be 02 00 00 00                        	mov esi, 2
0x2049a:   ff 15 e0 63 01 00                     	call qword ptr [rip + 0x163e0]
0x204a0:   84 c0                                 	test al, al
0x204a2:   0f 84 e2 00 00 00                     	je 0x2058a
0x204a8:   80 7d e8 00                           	cmp byte ptr [rbp - 0x18], 0
0x204ac:   0f 98 03                              	sets byte ptr [rbx]
0x204af:   f6 45 e8 40                           	test byte ptr [rbp - 0x18], 0x40
0x204b3:   0f 94 43 01                           	sete byte ptr [rbx + 1]
0x204b7:   f6 45 e8 20                           	test byte ptr [rbp - 0x18], 0x20
0x204bb:   0f 94 43 02                           	sete byte ptr [rbx + 2]
0x204bf:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x204c3:   48 89 c2                              	mov rdx, rax
0x204c6:   48 c1 ea 03                           	shr rdx, 3
0x204ca:   83 e2 03                              	and edx, 3
0x204cd:   89 53 04                              	mov dword ptr [rbx + 4], edx
0x204d0:   a8 04                                 	test al, 4
0x204d2:   0f 95 43 08                           	setne byte ptr [rbx + 8]
0x204d6:   f6 45 e8 02                           	test byte ptr [rbp - 0x18], 2
0x204da:   0f 95 43 09                           	setne byte ptr [rbx + 9]
0x204de:   f6 45 e8 01                           	test byte ptr [rbp - 0x18], 1
0x204e2:   0f 95 43 0a                           	setne byte ptr [rbx + 0xa]
0x204e6:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x204ee:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x204f2:   48 89 04 24                           	mov qword ptr [rsp], rax
0x204f6:   41 b9 00 00 00 00                     	mov r9d, 0
0x204fc:   41 b8 08 00 00 00                     	mov r8d, 8
0x20502:   b9 00 00 00 00                        	mov ecx, 0
0x20507:   ba 00 00 00 00                        	mov edx, 0
0x2050c:   be 03 00 00 00                        	mov esi, 3
0x20511:   4c 89 e7                              	mov rdi, r12
0x20514:   ff 15 66 63 01 00                     	call qword ptr [rip + 0x16366]
0x2051a:   84 c0                                 	test al, al
0x2051c:   74 6c                                 	je 0x2058a
0x2051e:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x20522:   48 89 c2                              	mov rdx, rax
0x20525:   48 c1 ea 06                           	shr rdx, 6
0x20529:   83 e2 03                              	and edx, 3
0x2052c:   89 53 0c                              	mov dword ptr [rbx + 0xc], edx
0x2052f:   48 89 c2                              	mov rdx, rax
0x20532:   48 c1 ea 04                           	shr rdx, 4
0x20536:   83 e2 03                              	and edx, 3
0x20539:   89 53 10                              	mov dword ptr [rbx + 0x10], edx
0x2053c:   48 89 c2                              	mov rdx, rax
0x2053f:   48 c1 ea 02                           	shr rdx, 2
0x20543:   83 e2 03                              	and edx, 3
0x20546:   89 53 14                              	mov dword ptr [rbx + 0x14], edx
0x20549:   a8 02                                 	test al, 2
0x2054b:   0f 95 43 18                           	setne byte ptr [rbx + 0x18]
0x2054f:   f6 45 e8 01                           	test byte ptr [rbp - 0x18], 1
0x20553:   0f 95 43 19                           	setne byte ptr [rbx + 0x19]
0x20557:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x2055b:   48 89 04 24                           	mov qword ptr [rsp], rax
; data inside code section at 0x2055f -- 0x20563
0x2055f:   41 b9 00 00                                        |A...            |
; function: BLACKWIDOW_SetXtalExtClkSettings at 0x20563 -- 0x20593
0x20563:   00 00                                 	add byte ptr [rax], al
0x20565:   41 b8 01 00 00 00                     	mov r8d, 1
0x2056b:   b9 06 00 00 00                        	mov ecx, 6
0x20570:   ba 00 00 00 00                        	mov edx, 0
0x20575:   be 05 00 00 00                        	mov esi, 5
0x2057a:   4c 89 e7                              	mov rdi, r12
0x2057d:   ff 15 fd 62 01 00                     	call qword ptr [rip + 0x162fd]
0x20583:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x20587:   89 53 1c                              	mov dword ptr [rbx + 0x1c], edx
0x2058a:   48 83 c4 20                           	add rsp, 0x20
0x2058e:   5b                                    	pop rbx
0x2058f:   41 5c                                 	pop r12
0x20591:   c9                                    	leave 
0x20592:   c3                                    	ret 
; function: BLACKWIDOW_SetXtalExtClkSettings at 0x20593 -- 0x20681
0x20593:   55                                    	push rbp
0x20594:   48 89 e5                              	mov rbp, rsp
0x20597:   48 83 ec 60                           	sub rsp, 0x60
0x2059b:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x2059f:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x205a3:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x205a7:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x205ab:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x205af:   e8 3c e6 01 00                        	call 0x3ebf0 <mcount>
0x205b4:   48 89 fb                              	mov rbx, rdi
0x205b7:   41 89 cd                              	mov r13d, ecx
0x205ba:   45 89 c4                              	mov r12d, r8d
0x205bd:   41 89 f7                              	mov r15d, esi
0x205c0:   41 89 d6                              	mov r14d, edx
0x205c3:   48 85 ff                              	test rdi, rdi
0x205c6:   0f 95 c0                              	setne al
0x205c9:   0f 84 d0 00 00 00                     	je 0x2069f
0x205cf:   48 c7 45 c8 00 00 00 00               	mov qword ptr [rbp - 0x38], 0
0x205d7:   48 8d 45 c8                           	lea rax, [rbp - 0x38]
0x205db:   48 89 04 24                           	mov qword ptr [rsp], rax
0x205df:   41 b9 00 00 00 00                     	mov r9d, 0
0x205e5:   41 b8 08 00 00 00                     	mov r8d, 8
0x205eb:   b9 00 00 00 00                        	mov ecx, 0
0x205f0:   ba 00 00 00 00                        	mov edx, 0
0x205f5:   be 03 00 00 00                        	mov esi, 3
0x205fa:   ff 15 80 62 01 00                     	call qword ptr [rip + 0x16280]
0x20600:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x20604:   84 c0                                 	test al, al
0x20606:   0f 84 93 00 00 00                     	je 0x2069f
0x2060c:   48 83 e2 c0                           	and rdx, 0xffffffffffffffc0
0x20610:   48 89 55 c8                           	mov qword ptr [rbp - 0x38], rdx
0x20614:   41 83 fd 03                           	cmp r13d, 3
0x20618:   76 07                                 	jbe 0x20621 <BLACKWIDOW_SetXtalExtClkSettings+0x8e>
0x2061a:   b8 00 00 00 00                        	mov eax, 0
0x2061f:   eb 0f                                 	jmp 0x20630 <BLACKWIDOW_SetXtalExtClkSettings+0x9d>
0x20621:   41 83 e5 03                           	and r13d, 3
0x20625:   49 c1 e5 04                           	shl r13, 4
0x20629:   4c 09 ea                              	or rdx, r13
0x2062c:   48 89 55 c8                           	mov qword ptr [rbp - 0x38], rdx
0x20630:   41 83 fc 03                           	cmp r12d, 3
0x20634:   76 07                                 	jbe 0x2063d <BLACKWIDOW_SetXtalExtClkSettings+0xaa>
0x20636:   b8 00 00 00 00                        	mov eax, 0
0x2063b:   eb 0c                                 	jmp 0x20649 <BLACKWIDOW_SetXtalExtClkSettings+0xb6>
0x2063d:   41 83 e4 03                           	and r12d, 3
0x20641:   49 c1 e4 02                           	shl r12, 2
0x20645:   4c 09 65 c8                           	or qword ptr [rbp - 0x38], r12
0x20649:   41 80 fe 01                           	cmp r14b, 1
0x2064d:   75 05                                 	jne 0x20654 <BLACKWIDOW_SetXtalExtClkSettings+0xc1>
0x2064f:   48 83 4d c8 02                        	or qword ptr [rbp - 0x38], 2
0x20654:   41 80 ff 01                           	cmp r15b, 1
0x20658:   75 05                                 	jne 0x2065f <BLACKWIDOW_SetXtalExtClkSettings+0xcc>
0x2065a:   48 83 4d c8 01                        	or qword ptr [rbp - 0x38], 1
0x2065f:   84 c0                                 	test al, al
0x20661:   74 3c                                 	je 0x2069f
0x20663:   48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
0x20667:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x2066c:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x20674:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x2067b:   41 b9 00 00 00 00                     	mov r9d, 0
; data inside code section at 0x20681 -- 0x20685
0x20681:   41 b8 08 00                                        |A...            |
; function: BLACKWIDOW_GetXtalExtClkSettings at 0x20685 -- 0x206b5
0x20685:   00 00                                 	add byte ptr [rax], al
0x20687:   b9 00 00 00 00                        	mov ecx, 0
0x2068c:   ba 00 00 00 00                        	mov edx, 0
0x20691:   be 03 00 00 00                        	mov esi, 3
0x20696:   48 89 df                              	mov rdi, rbx
0x20699:   ff 15 e9 61 01 00                     	call qword ptr [rip + 0x161e9]
0x2069f:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x206a3:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x206a7:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x206ab:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x206af:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x206b3:   c9                                    	leave 
0x206b4:   c3                                    	ret 
; function: BLACKWIDOW_GetXtalExtClkSettings at 0x206b5 -- 0x2072d
0x206b5:   55                                    	push rbp
0x206b6:   48 89 e5                              	mov rbp, rsp
0x206b9:   48 83 ec 40                           	sub rsp, 0x40
0x206bd:   48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x206c1:   4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x206c5:   4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x206c9:   4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x206cd:   e8 1e e5 01 00                        	call 0x3ebf0 <mcount>
0x206d2:   49 89 f6                              	mov r14, rsi
0x206d5:   49 89 d5                              	mov r13, rdx
0x206d8:   49 89 cc                              	mov r12, rcx
0x206db:   4c 89 c3                              	mov rbx, r8
0x206de:   48 85 ff                              	test rdi, rdi
0x206e1:   0f 95 c0                              	setne al
0x206e4:   74 65                                 	je 0x2074b
0x206e6:   48 c7 45 d8 00 00 00 00               	mov qword ptr [rbp - 0x28], 0
0x206ee:   48 8d 45 d8                           	lea rax, [rbp - 0x28]
0x206f2:   48 89 04 24                           	mov qword ptr [rsp], rax
0x206f6:   41 b9 00 00 00 00                     	mov r9d, 0
0x206fc:   41 b8 08 00 00 00                     	mov r8d, 8
0x20702:   b9 00 00 00 00                        	mov ecx, 0
0x20707:   ba 00 00 00 00                        	mov edx, 0
0x2070c:   be 03 00 00 00                        	mov esi, 3
0x20711:   ff 15 69 61 01 00                     	call qword ptr [rip + 0x16169]
0x20717:   84 c0                                 	test al, al
0x20719:   74 30                                 	je 0x2074b
0x2071b:   48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x2071f:   48 89 d1                              	mov rcx, rdx
0x20722:   48 c1 e9 04                           	shr rcx, 4
0x20726:   83 e1 03                              	and ecx, 3
0x20729:   41 89 0c 24                           	mov dword ptr [r12], ecx
; function: BLACKWIDOW_SetLoConfig at 0x2072d -- 0x2075d
0x2072d:   48 89 d1                              	mov rcx, rdx
0x20730:   48 c1 e9 02                           	shr rcx, 2
0x20734:   83 e1 03                              	and ecx, 3
0x20737:   89 0b                                 	mov dword ptr [rbx], ecx
0x20739:   83 e2 02                              	and edx, 2
0x2073c:   41 0f 95 45 00                        	setne byte ptr [r13]
0x20741:   48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x20745:   83 e2 01                              	and edx, 1
0x20748:   41 88 16                              	mov byte ptr [r14], dl
0x2074b:   48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0x2074f:   4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0x20753:   4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0x20757:   4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x2075b:   c9                                    	leave 
0x2075c:   c3                                    	ret 
; function: BLACKWIDOW_SetLoConfig at 0x2075d -- 0x20919
0x2075d:   55                                    	push rbp
0x2075e:   48 89 e5                              	mov rbp, rsp
0x20761:   41 54                                 	push r12
0x20763:   53                                    	push rbx
0x20764:   48 83 ec 30                           	sub rsp, 0x30
0x20768:   e8 83 e4 01 00                        	call 0x3ebf0 <mcount>
0x2076d:   49 89 fc                              	mov r12, rdi
0x20770:   48 89 f3                              	mov rbx, rsi
0x20773:   48 85 ff                              	test rdi, rdi
0x20776:   0f 94 c2                              	sete dl
0x20779:   48 85 f6                              	test rsi, rsi
0x2077c:   0f 94 c0                              	sete al
0x2077f:   09 d0                                 	or eax, edx
0x20781:   44 0f b6 1e                           	movzx r11d, byte ptr [rsi]
0x20785:   44 0f b6 56 01                        	movzx r10d, byte ptr [rsi + 1]
0x2078a:   44 0f b6 46 02                        	movzx r8d, byte ptr [rsi + 2]
0x2078f:   0f b6 7e 03                           	movzx edi, byte ptr [rsi + 3]
0x20793:   0f b6 76 04                           	movzx esi, byte ptr [rsi + 4]
0x20797:   0f b6 4b 05                           	movzx ecx, byte ptr [rbx + 5]
0x2079b:   0f b6 53 08                           	movzx edx, byte ptr [rbx + 8]
0x2079f:   44 0f b6 4b 06                        	movzx r9d, byte ptr [rbx + 6]
0x207a4:   34 01                                 	xor al, 1
0x207a6:   0f 84 98 01 00 00                     	je 0x20944
0x207ac:   41 c1 e3 07                           	shl r11d, 7
0x207b0:   41 81 e3 80 00 00 00                  	and r11d, 0x80
0x207b7:   41 83 e2 01                           	and r10d, 1
0x207bb:   41 c1 e2 06                           	shl r10d, 6
0x207bf:   45 09 da                              	or r10d, r11d
0x207c2:   44 89 c8                              	mov eax, r9d
0x207c5:   83 e0 01                              	and eax, 1
0x207c8:   45 89 d1                              	mov r9d, r10d
0x207cb:   41 09 c1                              	or r9d, eax
0x207ce:   41 83 e0 01                           	and r8d, 1
0x207d2:   41 c1 e0 05                           	shl r8d, 5
0x207d6:   45 09 c1                              	or r9d, r8d
0x207d9:   83 e7 01                              	and edi, 1
0x207dc:   89 f8                                 	mov eax, edi
0x207de:   c1 e0 04                              	shl eax, 4
0x207e1:   44 89 cf                              	mov edi, r9d
0x207e4:   09 c7                                 	or edi, eax
0x207e6:   83 e6 01                              	and esi, 1
0x207e9:   8d 04 f5 00 00 00 00                  	lea eax, [rsi*8]
0x207f0:   89 fe                                 	mov esi, edi
0x207f2:   09 c6                                 	or esi, eax
0x207f4:   83 e1 01                              	and ecx, 1
0x207f7:   8d 04 8d 00 00 00 00                  	lea eax, [rcx*4]
0x207fe:   89 f1                                 	mov ecx, esi
0x20800:   09 c1                                 	or ecx, eax
0x20802:   83 e2 01                              	and edx, 1
0x20805:   8d 04 12                              	lea eax, [rdx + rdx]
0x20808:   89 ca                                 	mov edx, ecx
0x2080a:   09 c2                                 	or edx, eax
0x2080c:   48 63 d2                              	movsxd rdx, edx
0x2080f:   48 89 55 e8                           	mov qword ptr [rbp - 0x18], rdx
0x20813:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x20818:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x20820:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x20827:   41 b9 00 00 00 00                     	mov r9d, 0
0x2082d:   41 b8 08 00 00 00                     	mov r8d, 8
0x20833:   b9 00 00 00 00                        	mov ecx, 0
0x20838:   ba 00 00 00 00                        	mov edx, 0
0x2083d:   be 22 00 00 00                        	mov esi, 0x22
0x20842:   4c 89 e7                              	mov rdi, r12
0x20845:   ff 15 3d 60 01 00                     	call qword ptr [rip + 0x1603d]
0x2084b:   84 c0                                 	test al, al
0x2084d:   0f 84 f1 00 00 00                     	je 0x20944
0x20853:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20857:   48 89 04 24                           	mov qword ptr [rsp], rax
0x2085b:   41 b9 00 00 00 00                     	mov r9d, 0
0x20861:   41 b8 08 00 00 00                     	mov r8d, 8
0x20867:   b9 00 00 00 00                        	mov ecx, 0
0x2086c:   ba 00 00 00 00                        	mov edx, 0
0x20871:   be 23 00 00 00                        	mov esi, 0x23
0x20876:   4c 89 e7                              	mov rdi, r12
0x20879:   ff 15 01 60 01 00                     	call qword ptr [rip + 0x16001]
0x2087f:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x20883:   84 c0                                 	test al, al
0x20885:   0f 84 b9 00 00 00                     	je 0x20944
0x2088b:   80 e2 53                              	and dl, 0x53
0x2088e:   0f b6 43 09                           	movzx eax, byte ptr [rbx + 9]
0x20892:   48 c1 e0 07                           	shl rax, 7
0x20896:   25 ff 00 00 00                        	and eax, 0xff
0x2089b:   48 09 d0                              	or rax, rdx
0x2089e:   0f b6 53 0a                           	movzx edx, byte ptr [rbx + 0xa]
0x208a2:   83 e2 01                              	and edx, 1
0x208a5:   48 c1 e2 05                           	shl rdx, 5
0x208a9:   48 09 d0                              	or rax, rdx
0x208ac:   0f b6 53 0b                           	movzx edx, byte ptr [rbx + 0xb]
0x208b0:   83 e2 01                              	and edx, 1
0x208b3:   48 c1 e2 03                           	shl rdx, 3
0x208b7:   48 09 d0                              	or rax, rdx
0x208ba:   0f b6 53 0c                           	movzx edx, byte ptr [rbx + 0xc]
0x208be:   83 e2 01                              	and edx, 1
0x208c1:   48 c1 e2 02                           	shl rdx, 2
0x208c5:   48 09 d0                              	or rax, rdx
0x208c8:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x208cc:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x208d1:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x208d9:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x208e0:   41 b9 00 00 00 00                     	mov r9d, 0
0x208e6:   41 b8 08 00 00 00                     	mov r8d, 8
0x208ec:   b9 00 00 00 00                        	mov ecx, 0
0x208f1:   ba 00 00 00 00                        	mov edx, 0
0x208f6:   be 23 00 00 00                        	mov esi, 0x23
0x208fb:   4c 89 e7                              	mov rdi, r12
0x208fe:   ff 15 84 5f 01 00                     	call qword ptr [rip + 0x15f84]
0x20904:   84 c0                                 	test al, al
0x20906:   74 3c                                 	je 0x20944
0x20908:   0f b6 43 07                           	movzx eax, byte ptr [rbx + 7]
0x2090c:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x20911:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x20919 -- 0x2091d
0x20919:   c7 04 24 01                                        |..$.            |
; function: BLACKWIDOW_GetLoConfig at 0x2091d -- 0x2094d
0x2091d:   00 00                                 	add byte ptr [rax], al
0x2091f:   00 41 b9                              	add byte ptr [rcx - 0x47], al
0x20922:   00 00                                 	add byte ptr [rax], al
0x20924:   00 00                                 	add byte ptr [rax], al
0x20926:   41 b8 01 00 00 00                     	mov r8d, 1
0x2092c:   b9 03 00 00 00                        	mov ecx, 3
0x20931:   ba 00 00 00 00                        	mov edx, 0
0x20936:   be 25 00 00 00                        	mov esi, 0x25
0x2093b:   4c 89 e7                              	mov rdi, r12
0x2093e:   ff 15 44 5f 01 00                     	call qword ptr [rip + 0x15f44]
0x20944:   48 83 c4 30                           	add rsp, 0x30
0x20948:   5b                                    	pop rbx
0x20949:   41 5c                                 	pop r12
0x2094b:   c9                                    	leave 
0x2094c:   c3                                    	ret 
; function: BLACKWIDOW_GetLoConfig at 0x2094d -- 0x20a82
0x2094d:   55                                    	push rbp
0x2094e:   48 89 e5                              	mov rbp, rsp
0x20951:   41 54                                 	push r12
0x20953:   53                                    	push rbx
0x20954:   48 83 ec 20                           	sub rsp, 0x20
0x20958:   e8 93 e2 01 00                        	call 0x3ebf0 <mcount>
0x2095d:   49 89 fc                              	mov r12, rdi
0x20960:   48 89 f3                              	mov rbx, rsi
0x20963:   48 85 ff                              	test rdi, rdi
0x20966:   0f 94 c2                              	sete dl
0x20969:   48 85 f6                              	test rsi, rsi
0x2096c:   0f 94 c0                              	sete al
0x2096f:   09 d0                                 	or eax, edx
0x20971:   34 01                                 	xor al, 1
0x20973:   0f 84 34 01 00 00                     	je 0x20aad
0x20979:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x20981:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20985:   48 89 04 24                           	mov qword ptr [rsp], rax
0x20989:   41 b9 00 00 00 00                     	mov r9d, 0
0x2098f:   41 b8 08 00 00 00                     	mov r8d, 8
0x20995:   b9 00 00 00 00                        	mov ecx, 0
0x2099a:   ba 00 00 00 00                        	mov edx, 0
0x2099f:   be 22 00 00 00                        	mov esi, 0x22
0x209a4:   ff 15 d6 5e 01 00                     	call qword ptr [rip + 0x15ed6]
0x209aa:   84 c0                                 	test al, al
0x209ac:   0f 84 fb 00 00 00                     	je 0x20aad
0x209b2:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x209b6:   48 89 c2                              	mov rdx, rax
0x209b9:   48 c1 ea 07                           	shr rdx, 7
0x209bd:   83 e2 01                              	and edx, 1
0x209c0:   88 13                                 	mov byte ptr [rbx], dl
0x209c2:   48 89 c2                              	mov rdx, rax
0x209c5:   48 c1 ea 06                           	shr rdx, 6
0x209c9:   83 e2 01                              	and edx, 1
0x209cc:   88 53 01                              	mov byte ptr [rbx + 1], dl
0x209cf:   48 89 c2                              	mov rdx, rax
0x209d2:   48 c1 ea 05                           	shr rdx, 5
0x209d6:   83 e2 01                              	and edx, 1
0x209d9:   88 53 02                              	mov byte ptr [rbx + 2], dl
0x209dc:   48 89 c2                              	mov rdx, rax
0x209df:   48 c1 ea 04                           	shr rdx, 4
0x209e3:   83 e2 01                              	and edx, 1
0x209e6:   88 53 03                              	mov byte ptr [rbx + 3], dl
0x209e9:   48 89 c2                              	mov rdx, rax
0x209ec:   48 c1 ea 03                           	shr rdx, 3
0x209f0:   83 e2 01                              	and edx, 1
0x209f3:   88 53 04                              	mov byte ptr [rbx + 4], dl
0x209f6:   48 89 c2                              	mov rdx, rax
0x209f9:   48 c1 ea 02                           	shr rdx, 2
0x209fd:   83 e2 01                              	and edx, 1
0x20a00:   88 53 05                              	mov byte ptr [rbx + 5], dl
0x20a03:   48 89 c2                              	mov rdx, rax
0x20a06:   48 d1 ea                              	shr rdx, 1
0x20a09:   83 e2 01                              	and edx, 1
0x20a0c:   88 53 08                              	mov byte ptr [rbx + 8], dl
0x20a0f:   83 e0 01                              	and eax, 1
0x20a12:   88 43 06                              	mov byte ptr [rbx + 6], al
0x20a15:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20a19:   48 89 04 24                           	mov qword ptr [rsp], rax
0x20a1d:   41 b9 00 00 00 00                     	mov r9d, 0
0x20a23:   41 b8 08 00 00 00                     	mov r8d, 8
0x20a29:   b9 00 00 00 00                        	mov ecx, 0
0x20a2e:   ba 00 00 00 00                        	mov edx, 0
0x20a33:   be 23 00 00 00                        	mov esi, 0x23
0x20a38:   4c 89 e7                              	mov rdi, r12
0x20a3b:   ff 15 3f 5e 01 00                     	call qword ptr [rip + 0x15e3f]
0x20a41:   84 c0                                 	test al, al
0x20a43:   74 68                                 	je 0x20aad
0x20a45:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x20a49:   48 89 c2                              	mov rdx, rax
0x20a4c:   48 c1 ea 07                           	shr rdx, 7
0x20a50:   83 e2 01                              	and edx, 1
0x20a53:   88 53 09                              	mov byte ptr [rbx + 9], dl
0x20a56:   48 89 c2                              	mov rdx, rax
0x20a59:   48 c1 ea 05                           	shr rdx, 5
0x20a5d:   83 e2 01                              	and edx, 1
0x20a60:   88 53 0a                              	mov byte ptr [rbx + 0xa], dl
0x20a63:   48 89 c2                              	mov rdx, rax
0x20a66:   48 c1 ea 03                           	shr rdx, 3
0x20a6a:   83 e2 01                              	and edx, 1
0x20a6d:   88 53 0b                              	mov byte ptr [rbx + 0xb], dl
0x20a70:   48 c1 e8 02                           	shr rax, 2
0x20a74:   83 e0 01                              	and eax, 1
0x20a77:   88 43 0c                              	mov byte ptr [rbx + 0xc], al
0x20a7a:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20a7e:   48 89 04 24                           	mov qword ptr [rsp], rax
; data inside code section at 0x20a82 -- 0x20a86
0x20a82:   41 b9 00 00                                        |A...            |
; function: BLACKWIDOW_GetVcoStatus at 0x20a86 -- 0x20ab6
0x20a86:   00 00                                 	add byte ptr [rax], al
0x20a88:   41 b8 01 00 00 00                     	mov r8d, 1
0x20a8e:   b9 03 00 00 00                        	mov ecx, 3
0x20a93:   ba 00 00 00 00                        	mov edx, 0
0x20a98:   be 25 00 00 00                        	mov esi, 0x25
0x20a9d:   4c 89 e7                              	mov rdi, r12
0x20aa0:   ff 15 da 5d 01 00                     	call qword ptr [rip + 0x15dda]
0x20aa6:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x20aaa:   88 53 07                              	mov byte ptr [rbx + 7], dl
0x20aad:   48 83 c4 20                           	add rsp, 0x20
0x20ab1:   5b                                    	pop rbx
0x20ab2:   41 5c                                 	pop r12
0x20ab4:   c9                                    	leave 
0x20ab5:   c3                                    	ret 
; function: BLACKWIDOW_GetVcoStatus at 0x20ab6 -- 0x20c67
0x20ab6:   55                                    	push rbp
0x20ab7:   48 89 e5                              	mov rbp, rsp
0x20aba:   41 54                                 	push r12
0x20abc:   53                                    	push rbx
0x20abd:   48 83 ec 20                           	sub rsp, 0x20
0x20ac1:   e8 2a e1 01 00                        	call 0x3ebf0 <mcount>
0x20ac6:   49 89 fc                              	mov r12, rdi
0x20ac9:   48 89 f3                              	mov rbx, rsi
0x20acc:   48 85 ff                              	test rdi, rdi
0x20acf:   0f 94 c2                              	sete dl
0x20ad2:   48 85 f6                              	test rsi, rsi
0x20ad5:   0f 94 c0                              	sete al
0x20ad8:   09 d0                                 	or eax, edx
0x20ada:   34 01                                 	xor al, 1
0x20adc:   0f 84 ad 01 00 00                     	je 0x20c8f
0x20ae2:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x20aea:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20aee:   48 89 04 24                           	mov qword ptr [rsp], rax
0x20af2:   41 b9 00 00 00 00                     	mov r9d, 0
0x20af8:   41 b8 04 00 00 00                     	mov r8d, 4
0x20afe:   b9 00 00 00 00                        	mov ecx, 0
0x20b03:   ba 00 00 00 00                        	mov edx, 0
0x20b08:   be 10 00 00 00                        	mov esi, 0x10
0x20b0d:   ff 15 6d 5d 01 00                     	call qword ptr [rip + 0x15d6d]
0x20b13:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x20b17:   89 13                                 	mov dword ptr [rbx], edx
0x20b19:   84 c0                                 	test al, al
0x20b1b:   0f 84 6e 01 00 00                     	je 0x20c8f
0x20b21:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20b25:   48 89 04 24                           	mov qword ptr [rsp], rax
0x20b29:   41 b9 00 00 00 00                     	mov r9d, 0
0x20b2f:   41 b8 08 00 00 00                     	mov r8d, 8
0x20b35:   b9 00 00 00 00                        	mov ecx, 0
0x20b3a:   ba 00 00 00 00                        	mov edx, 0
0x20b3f:   be 11 00 00 00                        	mov esi, 0x11
0x20b44:   4c 89 e7                              	mov rdi, r12
0x20b47:   ff 15 33 5d 01 00                     	call qword ptr [rip + 0x15d33]
0x20b4d:   84 c0                                 	test al, al
0x20b4f:   0f 84 3a 01 00 00                     	je 0x20c8f
0x20b55:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x20b59:   48 89 c2                              	mov rdx, rax
0x20b5c:   48 c1 ea 07                           	shr rdx, 7
0x20b60:   83 e2 01                              	and edx, 1
0x20b63:   88 53 04                              	mov byte ptr [rbx + 4], dl
0x20b66:   48 89 c2                              	mov rdx, rax
0x20b69:   48 c1 ea 06                           	shr rdx, 6
0x20b6d:   83 e2 01                              	and edx, 1
0x20b70:   88 53 05                              	mov byte ptr [rbx + 5], dl
0x20b73:   48 89 c2                              	mov rdx, rax
0x20b76:   48 c1 ea 05                           	shr rdx, 5
0x20b7a:   83 e2 01                              	and edx, 1
0x20b7d:   89 53 08                              	mov dword ptr [rbx + 8], edx
0x20b80:   48 89 c2                              	mov rdx, rax
0x20b83:   48 c1 ea 04                           	shr rdx, 4
0x20b87:   83 e2 01                              	and edx, 1
0x20b8a:   88 53 0c                              	mov byte ptr [rbx + 0xc], dl
0x20b8d:   48 c1 e8 03                           	shr rax, 3
0x20b91:   83 e0 01                              	and eax, 1
0x20b94:   88 43 0d                              	mov byte ptr [rbx + 0xd], al
0x20b97:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20b9b:   48 89 04 24                           	mov qword ptr [rsp], rax
0x20b9f:   41 b9 00 00 00 00                     	mov r9d, 0
0x20ba5:   41 b8 08 00 00 00                     	mov r8d, 8
0x20bab:   b9 00 00 00 00                        	mov ecx, 0
0x20bb0:   ba 00 00 00 00                        	mov edx, 0
0x20bb5:   be 15 00 00 00                        	mov esi, 0x15
0x20bba:   4c 89 e7                              	mov rdi, r12
0x20bbd:   ff 15 bd 5c 01 00                     	call qword ptr [rip + 0x15cbd]
0x20bc3:   84 c0                                 	test al, al
0x20bc5:   0f 84 c4 00 00 00                     	je 0x20c8f
0x20bcb:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x20bcf:   48 89 c2                              	mov rdx, rax
0x20bd2:   48 c1 ea 07                           	shr rdx, 7
0x20bd6:   83 e2 01                              	and edx, 1
0x20bd9:   88 53 0e                              	mov byte ptr [rbx + 0xe], dl
0x20bdc:   48 89 c2                              	mov rdx, rax
0x20bdf:   48 c1 ea 06                           	shr rdx, 6
0x20be3:   83 e2 01                              	and edx, 1
0x20be6:   88 53 0f                              	mov byte ptr [rbx + 0xf], dl
0x20be9:   48 89 c2                              	mov rdx, rax
0x20bec:   48 c1 ea 05                           	shr rdx, 5
0x20bf0:   83 e2 01                              	and edx, 1
0x20bf3:   89 53 10                              	mov dword ptr [rbx + 0x10], edx
0x20bf6:   48 c1 e8 04                           	shr rax, 4
0x20bfa:   83 e0 01                              	and eax, 1
0x20bfd:   88 43 14                              	mov byte ptr [rbx + 0x14], al
0x20c00:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20c04:   48 89 04 24                           	mov qword ptr [rsp], rax
0x20c08:   41 b9 00 00 00 00                     	mov r9d, 0
0x20c0e:   41 b8 01 00 00 00                     	mov r8d, 1
0x20c14:   b9 06 00 00 00                        	mov ecx, 6
0x20c19:   ba 00 00 00 00                        	mov edx, 0
0x20c1e:   be 0f 00 00 00                        	mov esi, 0xf
0x20c23:   4c 89 e7                              	mov rdi, r12
0x20c26:   ff 15 54 5c 01 00                     	call qword ptr [rip + 0x15c54]
0x20c2c:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x20c30:   88 53 15                              	mov byte ptr [rbx + 0x15], dl
0x20c33:   84 c0                                 	test al, al
0x20c35:   74 58                                 	je 0x20c8f
0x20c37:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20c3b:   48 89 04 24                           	mov qword ptr [rsp], rax
0x20c3f:   41 b9 00 00 00 00                     	mov r9d, 0
0x20c45:   41 b8 08 00 00 00                     	mov r8d, 8
0x20c4b:   b9 00 00 00 00                        	mov ecx, 0
0x20c50:   ba 00 00 00 00                        	mov edx, 0
0x20c55:   be 13 00 00 00                        	mov esi, 0x13
0x20c5a:   4c 89 e7                              	mov rdi, r12
0x20c5d:   ff 15 1d 5c 01 00                     	call qword ptr [rip + 0x15c1d]
0x20c63:   84 c0                                 	test al, al
0x20c65:   74 28                                 	je 0x20c8f
; data inside code section at 0x20c67 -- 0x20c68
0x20c67:   48                                                 |H               |
; function: BLACKWIDOW_GetStatus at 0x20c68 -- 0x20c98
0x20c68:   8b 55 e8                              	mov edx, dword ptr [rbp - 0x18]
0x20c6b:   48 89 d1                              	mov rcx, rdx
0x20c6e:   48 c1 e9 07                           	shr rcx, 7
0x20c72:   83 e1 01                              	and ecx, 1
0x20c75:   88 4b 16                              	mov byte ptr [rbx + 0x16], cl
0x20c78:   48 89 d1                              	mov rcx, rdx
0x20c7b:   48 c1 e9 05                           	shr rcx, 5
0x20c7f:   83 e1 01                              	and ecx, 1
0x20c82:   88 4b 17                              	mov byte ptr [rbx + 0x17], cl
0x20c85:   48 c1 ea 04                           	shr rdx, 4
0x20c89:   83 e2 01                              	and edx, 1
0x20c8c:   88 53 18                              	mov byte ptr [rbx + 0x18], dl
0x20c8f:   48 83 c4 20                           	add rsp, 0x20
0x20c93:   5b                                    	pop rbx
0x20c94:   41 5c                                 	pop r12
0x20c96:   c9                                    	leave 
0x20c97:   c3                                    	ret 
; function: BLACKWIDOW_GetStatus at 0x20c98 -- 0x20dcd
0x20c98:   55                                    	push rbp
0x20c99:   48 89 e5                              	mov rbp, rsp
0x20c9c:   41 54                                 	push r12
0x20c9e:   53                                    	push rbx
0x20c9f:   48 83 ec 50                           	sub rsp, 0x50
0x20ca3:   e8 48 df 01 00                        	call 0x3ebf0 <mcount>
0x20ca8:   49 89 fc                              	mov r12, rdi
0x20cab:   48 89 f3                              	mov rbx, rsi
0x20cae:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x20cb6:   48 85 ff                              	test rdi, rdi
0x20cb9:   0f 94 c2                              	sete dl
0x20cbc:   48 85 f6                              	test rsi, rsi
0x20cbf:   0f 94 c0                              	sete al
0x20cc2:   09 d0                                 	or eax, edx
0x20cc4:   34 01                                 	xor al, 1
0x20cc6:   0f 84 55 01 00 00                     	je 0x20e21
0x20ccc:   c7 45 b0 00 00 00 00                  	mov dword ptr [rbp - 0x50], 0
0x20cd3:   c6 45 b4 00                           	mov byte ptr [rbp - 0x4c], 0
0x20cd7:   c6 45 b5 00                           	mov byte ptr [rbp - 0x4b], 0
0x20cdb:   c7 45 b8 02 00 00 00                  	mov dword ptr [rbp - 0x48], 2
0x20ce2:   c6 45 bc 00                           	mov byte ptr [rbp - 0x44], 0
0x20ce6:   c6 45 bd 00                           	mov byte ptr [rbp - 0x43], 0
0x20cea:   c6 45 be 00                           	mov byte ptr [rbp - 0x42], 0
0x20cee:   c6 45 bf 00                           	mov byte ptr [rbp - 0x41], 0
0x20cf2:   c7 45 c0 02 00 00 00                  	mov dword ptr [rbp - 0x40], 2
0x20cf9:   c6 45 c4 00                           	mov byte ptr [rbp - 0x3c], 0
0x20cfd:   c6 45 c5 00                           	mov byte ptr [rbp - 0x3b], 0
0x20d01:   c6 45 c6 00                           	mov byte ptr [rbp - 0x3a], 0
0x20d05:   c6 45 c7 00                           	mov byte ptr [rbp - 0x39], 0
0x20d09:   c6 45 c8 00                           	mov byte ptr [rbp - 0x38], 0
0x20d0d:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20d11:   48 89 04 24                           	mov qword ptr [rsp], rax
0x20d15:   41 b9 00 00 00 00                     	mov r9d, 0
0x20d1b:   41 b8 01 00 00 00                     	mov r8d, 1
0x20d21:   b9 07 00 00 00                        	mov ecx, 7
0x20d26:   ba 00 00 00 00                        	mov edx, 0
0x20d2b:   be 1c 00 00 00                        	mov esi, 0x1c
0x20d30:   ff 15 4a 5b 01 00                     	call qword ptr [rip + 0x15b4a]
0x20d36:   84 c0                                 	test al, al
0x20d38:   0f 84 e3 00 00 00                     	je 0x20e21
0x20d3e:   48 83 7d e8 01                        	cmp qword ptr [rbp - 0x18], 1
0x20d43:   0f 94 43 11                           	sete byte ptr [rbx + 0x11]
0x20d47:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x20d4b:   4c 89 e7                              	mov rdi, r12
0x20d4e:   e8 63 fd ff ff                        	call 0x20ab6 <BLACKWIDOW_GetVcoStatus>
0x20d53:   0f b6 45 b4                           	movzx eax, byte ptr [rbp - 0x4c]
0x20d57:   88 03                                 	mov byte ptr [rbx], al
0x20d59:   0f b6 45 b5                           	movzx eax, byte ptr [rbp - 0x4b]
0x20d5d:   88 43 01                              	mov byte ptr [rbx + 1], al
0x20d60:   8b 45 b8                              	mov eax, dword ptr [rbp - 0x48]
0x20d63:   89 43 04                              	mov dword ptr [rbx + 4], eax
0x20d66:   0f b6 45 bc                           	movzx eax, byte ptr [rbp - 0x44]
0x20d6a:   88 43 08                              	mov byte ptr [rbx + 8], al
0x20d6d:   0f b6 45 bd                           	movzx eax, byte ptr [rbp - 0x43]
0x20d71:   88 43 09                              	mov byte ptr [rbx + 9], al
0x20d74:   0f b6 45 be                           	movzx eax, byte ptr [rbp - 0x42]
0x20d78:   88 43 0a                              	mov byte ptr [rbx + 0xa], al
0x20d7b:   0f b6 45 bf                           	movzx eax, byte ptr [rbp - 0x41]
0x20d7f:   88 43 0b                              	mov byte ptr [rbx + 0xb], al
0x20d82:   8b 45 c0                              	mov eax, dword ptr [rbp - 0x40]
0x20d85:   89 43 0c                              	mov dword ptr [rbx + 0xc], eax
0x20d88:   0f b6 45 c4                           	movzx eax, byte ptr [rbp - 0x3c]
0x20d8c:   88 43 10                              	mov byte ptr [rbx + 0x10], al
0x20d8f:   c7 43 14 05 00 00 00                  	mov dword ptr [rbx + 0x14], 5
0x20d96:   48 8d 75 d0                           	lea rsi, [rbp - 0x30]
0x20d9a:   4c 89 e7                              	mov rdi, r12
0x20d9d:   e8 ab fb ff ff                        	call 0x2094d <BLACKWIDOW_GetLoConfig>
0x20da2:   84 c0                                 	test al, al
0x20da4:   74 7b                                 	je 0x20e21
0x20da6:   0f b6 55 dc                           	movzx edx, byte ptr [rbp - 0x24]
0x20daa:   80 fa 01                              	cmp dl, 1
0x20dad:   75 0d                                 	jne 0x20dbc <BLACKWIDOW_GetStatus+0x124>
0x20daf:   80 7d db 01                           	cmp byte ptr [rbp - 0x25], 1
0x20db3:   75 07                                 	jne 0x20dbc <BLACKWIDOW_GetStatus+0x124>
0x20db5:   b8 00 00 00 00                        	mov eax, 0
0x20dba:   eb 65                                 	jmp 0x20e21
0x20dbc:   84 d2                                 	test dl, dl
0x20dbe:   75 6a                                 	jne 0x20e2a
0x20dc0:   80 7d db 00                           	cmp byte ptr [rbp - 0x25], 0
0x20dc4:   75 64                                 	jne 0x20e2a
0x20dc6:   b8 00 00 00 00                        	mov eax, 0
0x20dcb:   eb 54                                 	jmp 0x20e21
; function: function_20dcd at 0x20dcd -- 0x20dd6
0x20dcd:   c7 43 14 04 00 00 00                  	mov dword ptr [rbx + 0x14], 4
0x20dd4:   eb 4b                                 	jmp 0x20e21
; function: function_20dd6 at 0x20dd6 -- 0x20e01
0x20dd6:   0f b6 55 d9                           	movzx edx, byte ptr [rbp - 0x27]
0x20dda:   80 fa 01                              	cmp dl, 1
0x20ddd:   75 0f                                 	jne 0x20dee <function_20dd6+0x18>
0x20ddf:   80 7d da 01                           	cmp byte ptr [rbp - 0x26], 1
0x20de3:   75 1c                                 	jne 0x20e01 <BLACKWIDOW_SetPllDividerConfig>
0x20de5:   c7 43 14 03 00 00 00                  	mov dword ptr [rbx + 0x14], 3
0x20dec:   eb 33                                 	jmp 0x20e21
0x20dee:   84 d2                                 	test dl, dl
0x20df0:   75 1e                                 	jne 0x20e10
0x20df2:   80 7d da 01                           	cmp byte ptr [rbp - 0x26], 1
0x20df6:   75 1c                                 	jne 0x20e14
0x20df8:   c7 43 14 02 00 00 00                  	mov dword ptr [rbx + 0x14], 2
0x20dff:   eb 20                                 	jmp 0x20e21
; function: BLACKWIDOW_SetPllDividerConfig at 0x20e01 -- 0x20e31
0x20e01:   80 7d da 00                           	cmp byte ptr [rbp - 0x26], 0
0x20e05:   75 1a                                 	jne 0x20e21 <BLACKWIDOW_SetPllDividerConfig+0x20>
0x20e07:   c7 43 14 01 00 00 00                  	mov dword ptr [rbx + 0x14], 1
0x20e0e:   eb 11                                 	jmp 0x20e21 <BLACKWIDOW_SetPllDividerConfig+0x20>
0x20e10:   84 d2                                 	test dl, dl
0x20e12:   75 0d                                 	jne 0x20e21 <BLACKWIDOW_SetPllDividerConfig+0x20>
0x20e14:   80 7d da 00                           	cmp byte ptr [rbp - 0x26], 0
0x20e18:   75 07                                 	jne 0x20e21 <BLACKWIDOW_SetPllDividerConfig+0x20>
0x20e1a:   c7 43 14 00 00 00 00                  	mov dword ptr [rbx + 0x14], 0
0x20e21:   48 83 c4 50                           	add rsp, 0x50
0x20e25:   5b                                    	pop rbx
0x20e26:   41 5c                                 	pop r12
0x20e28:   c9                                    	leave 
0x20e29:   c3                                    	ret 
0x20e2a:   80 fa 01                              	cmp dl, 1
0x20e2d:   75 a7                                 	jne 0x20dd6 <function_20dd6>
0x20e2f:   eb 9c                                 	jmp 0x20dcd <function_20dcd>
; function: BLACKWIDOW_SetPllDividerConfig at 0x20e31 -- 0x20f1d
0x20e31:   55                                    	push rbp
0x20e32:   48 89 e5                              	mov rbp, rsp
0x20e35:   41 54                                 	push r12
0x20e37:   53                                    	push rbx
0x20e38:   48 83 ec 20                           	sub rsp, 0x20
0x20e3c:   e8 af dd 01 00                        	call 0x3ebf0 <mcount>
0x20e41:   49 89 fc                              	mov r12, rdi
0x20e44:   48 89 f3                              	mov rbx, rsi
0x20e47:   48 85 ff                              	test rdi, rdi
0x20e4a:   0f 94 c2                              	sete dl
0x20e4d:   48 85 f6                              	test rsi, rsi
0x20e50:   0f 94 c0                              	sete al
0x20e53:   09 d0                                 	or eax, edx
0x20e55:   34 01                                 	xor al, 1
0x20e57:   0f 84 eb 00 00 00                     	je 0x20f48
0x20e5d:   8b 16                                 	mov edx, dword ptr [rsi]
0x20e5f:   b8 00 00 00 00                        	mov eax, 0
0x20e64:   83 fa 01                              	cmp edx, 1
0x20e67:   0f 87 db 00 00 00                     	ja 0x20f48
0x20e6d:   89 d2                                 	mov edx, edx
0x20e6f:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x20e74:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x20e7c:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x20e83:   41 b9 00 00 00 00                     	mov r9d, 0
0x20e89:   41 b8 01 00 00 00                     	mov r8d, 1
0x20e8f:   b9 05 00 00 00                        	mov ecx, 5
0x20e94:   ba 00 00 00 00                        	mov edx, 0
0x20e99:   be 1a 00 00 00                        	mov esi, 0x1a
0x20e9e:   ff 15 e4 59 01 00                     	call qword ptr [rip + 0x159e4]
0x20ea4:   84 c0                                 	test al, al
0x20ea6:   0f 84 9c 00 00 00                     	je 0x20f48
0x20eac:   48 8b 53 08                           	mov rdx, qword ptr [rbx + 8]
0x20eb0:   b8 00 00 00 00                        	mov eax, 0
0x20eb5:   48 81 fa ff 00 00 00                  	cmp rdx, 0xff
0x20ebc:   0f 87 86 00 00 00                     	ja 0x20f48
0x20ec2:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x20ec7:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x20ecf:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x20ed6:   41 b9 00 00 00 00                     	mov r9d, 0
0x20edc:   41 b8 08 00 00 00                     	mov r8d, 8
0x20ee2:   b9 00 00 00 00                        	mov ecx, 0
0x20ee7:   ba 00 00 00 00                        	mov edx, 0
0x20eec:   be 1e 00 00 00                        	mov esi, 0x1e
0x20ef1:   4c 89 e7                              	mov rdi, r12
0x20ef4:   ff 15 8e 59 01 00                     	call qword ptr [rip + 0x1598e]
0x20efa:   84 c0                                 	test al, al
0x20efc:   74 4a                                 	je 0x20f48
0x20efe:   48 8b 53 10                           	mov rdx, qword ptr [rbx + 0x10]
0x20f02:   b8 00 00 00 00                        	mov eax, 0
0x20f07:   48 81 fa ff ff 00 00                  	cmp rdx, 0xffff
0x20f0e:   77 38                                 	ja 0x20f48
0x20f10:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x20f15:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x20f1d -- 0x20f21
0x20f1d:   c7 04 24 00                                        |..$.            |
; function: BLACKWIDOW_GetPllDividerConfig at 0x20f21 -- 0x20f51
0x20f21:   00 00                                 	add byte ptr [rax], al
0x20f23:   00 41 b9                              	add byte ptr [rcx - 0x47], al
0x20f26:   02 00                                 	add al, byte ptr [rax]
0x20f28:   00 00                                 	add byte ptr [rax], al
0x20f2a:   41 b8 10 00 00 00                     	mov r8d, 0x10
0x20f30:   b9 00 00 00 00                        	mov ecx, 0
0x20f35:   ba 00 00 00 00                        	mov edx, 0
0x20f3a:   be 1f 00 00 00                        	mov esi, 0x1f
0x20f3f:   4c 89 e7                              	mov rdi, r12
0x20f42:   ff 15 40 59 01 00                     	call qword ptr [rip + 0x15940]
0x20f48:   48 83 c4 20                           	add rsp, 0x20
0x20f4c:   5b                                    	pop rbx
0x20f4d:   41 5c                                 	pop r12
0x20f4f:   c9                                    	leave 
0x20f50:   c3                                    	ret 
; function: BLACKWIDOW_GetPllDividerConfig at 0x20f51 -- 0x20ff8
0x20f51:   55                                    	push rbp
0x20f52:   48 89 e5                              	mov rbp, rsp
0x20f55:   41 54                                 	push r12
0x20f57:   53                                    	push rbx
0x20f58:   48 83 ec 20                           	sub rsp, 0x20
0x20f5c:   e8 8f dc 01 00                        	call 0x3ebf0 <mcount>
0x20f61:   49 89 fc                              	mov r12, rdi
0x20f64:   48 89 f3                              	mov rbx, rsi
0x20f67:   48 85 ff                              	test rdi, rdi
0x20f6a:   0f 94 c2                              	sete dl
0x20f6d:   48 85 f6                              	test rsi, rsi
0x20f70:   0f 94 c0                              	sete al
0x20f73:   09 d0                                 	or eax, edx
0x20f75:   34 01                                 	xor al, 1
0x20f77:   0f 84 a7 00 00 00                     	je 0x21024
0x20f7d:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x20f85:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20f89:   48 89 04 24                           	mov qword ptr [rsp], rax
0x20f8d:   41 b9 00 00 00 00                     	mov r9d, 0
0x20f93:   41 b8 01 00 00 00                     	mov r8d, 1
0x20f99:   b9 05 00 00 00                        	mov ecx, 5
0x20f9e:   ba 00 00 00 00                        	mov edx, 0
0x20fa3:   be 1a 00 00 00                        	mov esi, 0x1a
0x20fa8:   ff 15 d2 58 01 00                     	call qword ptr [rip + 0x158d2]
0x20fae:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x20fb2:   89 13                                 	mov dword ptr [rbx], edx
0x20fb4:   84 c0                                 	test al, al
0x20fb6:   74 6c                                 	je 0x21024
0x20fb8:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20fbc:   48 89 04 24                           	mov qword ptr [rsp], rax
0x20fc0:   41 b9 00 00 00 00                     	mov r9d, 0
0x20fc6:   41 b8 08 00 00 00                     	mov r8d, 8
0x20fcc:   b9 00 00 00 00                        	mov ecx, 0
0x20fd1:   ba 00 00 00 00                        	mov edx, 0
0x20fd6:   be 1e 00 00 00                        	mov esi, 0x1e
0x20fdb:   4c 89 e7                              	mov rdi, r12
0x20fde:   ff 15 9c 58 01 00                     	call qword ptr [rip + 0x1589c]
0x20fe4:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x20fe8:   48 89 53 08                           	mov qword ptr [rbx + 8], rdx
0x20fec:   84 c0                                 	test al, al
0x20fee:   74 34                                 	je 0x21024
0x20ff0:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x20ff4:   48 89 04 24                           	mov qword ptr [rsp], rax
; data inside code section at 0x20ff8 -- 0x20ffd
0x20ff8:   41 b9 02 00 00                                     |A....           |
; function: BLACKWIDOW_GetPllDsmOrderAndFractCorrect at 0x20ffd -- 0x2102d
0x20ffd:   00 41 b8                              	add byte ptr [rcx - 0x48], al
0x21000:   10 00                                 	adc byte ptr [rax], al
0x21002:   00 00                                 	add byte ptr [rax], al
0x21004:   b9 00 00 00 00                        	mov ecx, 0
0x21009:   ba 00 00 00 00                        	mov edx, 0
0x2100e:   be 1f 00 00 00                        	mov esi, 0x1f
0x21013:   4c 89 e7                              	mov rdi, r12
0x21016:   ff 15 64 58 01 00                     	call qword ptr [rip + 0x15864]
0x2101c:   48 8b 55 e8                           	mov rdx, qword ptr [rbp - 0x18]
0x21020:   48 89 53 10                           	mov qword ptr [rbx + 0x10], rdx
0x21024:   48 83 c4 20                           	add rsp, 0x20
0x21028:   5b                                    	pop rbx
0x21029:   41 5c                                 	pop r12
0x2102b:   c9                                    	leave 
0x2102c:   c3                                    	ret 
; function: BLACKWIDOW_GetPllDsmOrderAndFractCorrect at 0x2102d -- 0x210a2
0x2102d:   55                                    	push rbp
0x2102e:   48 89 e5                              	mov rbp, rsp
0x21031:   48 83 ec 40                           	sub rsp, 0x40
0x21035:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x21039:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x2103d:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x21041:   e8 aa db 01 00                        	call 0x3ebf0 <mcount>
0x21046:   48 89 fb                              	mov rbx, rdi
0x21049:   49 89 f5                              	mov r13, rsi
0x2104c:   49 89 d4                              	mov r12, rdx
0x2104f:   48 85 ff                              	test rdi, rdi
0x21052:   0f 95 c0                              	setne al
0x21055:   74 71                                 	je 0x210c8
0x21057:   48 c7 45 d8 00 00 00 00               	mov qword ptr [rbp - 0x28], 0
0x2105f:   48 8d 45 d8                           	lea rax, [rbp - 0x28]
0x21063:   48 89 04 24                           	mov qword ptr [rsp], rax
0x21067:   41 b9 00 00 00 00                     	mov r9d, 0
0x2106d:   41 b8 01 00 00 00                     	mov r8d, 1
0x21073:   b9 06 00 00 00                        	mov ecx, 6
0x21078:   ba 00 00 00 00                        	mov edx, 0
0x2107d:   be 21 00 00 00                        	mov esi, 0x21
0x21082:   ff 15 f8 57 01 00                     	call qword ptr [rip + 0x157f8]
0x21088:   48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x2108c:   41 89 14 24                           	mov dword ptr [r12], edx
0x21090:   84 c0                                 	test al, al
0x21092:   74 34                                 	je 0x210c8
0x21094:   48 8d 45 d8                           	lea rax, [rbp - 0x28]
0x21098:   48 89 04 24                           	mov qword ptr [rsp], rax
0x2109c:   41 b9 00 00 00 00                     	mov r9d, 0
; data inside code section at 0x210a2 -- 0x210a6
0x210a2:   41 b8 01 00                                        |A...            |
; function: BLACKWIDOW_GetPLLFrequency at 0x210a6 -- 0x210d6
0x210a6:   00 00                                 	add byte ptr [rax], al
0x210a8:   b9 00 00 00 00                        	mov ecx, 0
0x210ad:   ba 00 00 00 00                        	mov edx, 0
0x210b2:   be 1b 00 00 00                        	mov esi, 0x1b
0x210b7:   48 89 df                              	mov rdi, rbx
0x210ba:   ff 15 c0 57 01 00                     	call qword ptr [rip + 0x157c0]
0x210c0:   48 8b 55 d8                           	mov rdx, qword ptr [rbp - 0x28]
0x210c4:   41 89 55 00                           	mov dword ptr [r13], edx
0x210c8:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x210cc:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x210d0:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x210d4:   c9                                    	leave 
0x210d5:   c3                                    	ret 
; function: BLACKWIDOW_GetPLLFrequency at 0x210d6 -- 0x21370
0x210d6:   55                                    	push rbp
0x210d7:   48 89 e5                              	mov rbp, rsp
0x210da:   41 57                                 	push r15
0x210dc:   41 56                                 	push r14
0x210de:   41 55                                 	push r13
0x210e0:   41 54                                 	push r12
0x210e2:   53                                    	push rbx
0x210e3:   48 81 ec 88 00 00 00                  	sub rsp, 0x88
0x210ea:   e8 01 db 01 00                        	call 0x3ebf0 <mcount>
0x210ef:   48 89 fb                              	mov rbx, rdi
0x210f2:   49 89 f5                              	mov r13, rsi
0x210f5:   48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x210f9:   48 89 85 68 ff ff ff                  	mov qword ptr [rbp - 0x98], rax
0x21100:   48 85 ff                              	test rdi, rdi
0x21103:   41 0f 94 c4                           	sete r12b
0x21107:   48 85 f6                              	test rsi, rsi
0x2110a:   0f 94 c0                              	sete al
0x2110d:   41 09 c4                              	or r12d, eax
0x21110:   41 80 f4 01                           	xor r12b, 1
0x21114:   0f 84 72 02 00 00                     	je 0x2138c
0x2111a:   c7 85 70 ff ff ff 02 00 00 00         	mov dword ptr [rbp - 0x90], 2
0x21124:   48 c7 45 80 00 00 00 00               	mov qword ptr [rbp - 0x80], 0
0x2112c:   48 c7 85 78 ff ff ff 00 00 00 00      	mov qword ptr [rbp - 0x88], 0
0x21137:   48 c7 45 a0 00 00 00 00               	mov qword ptr [rbp - 0x60], 0
0x2113f:   48 c7 45 a8 00 00 00 00               	mov qword ptr [rbp - 0x58], 0
0x21147:   48 c7 45 b0 00 00 00 00               	mov qword ptr [rbp - 0x50], 0
0x2114f:   48 c7 45 b8 00 00 00 00               	mov qword ptr [rbp - 0x48], 0
0x21157:   48 c7 45 c0 00 00 00 00               	mov qword ptr [rbp - 0x40], 0
0x2115f:   c7 45 c8 02 00 00 00                  	mov dword ptr [rbp - 0x38], 2
0x21166:   48 8d 75 90                           	lea rsi, [rbp - 0x70]
0x2116a:   e8 de f7 ff ff                        	call 0x2094d <BLACKWIDOW_GetLoConfig>
0x2116f:   41 89 c4                              	mov r12d, eax
0x21172:   80 7d 99 01                           	cmp byte ptr [rbp - 0x67], 1
0x21176:   19 d2                                 	sbb edx, edx
0x21178:   83 c2 05                              	add edx, 5
0x2117b:   89 95 64 ff ff ff                     	mov dword ptr [rbp - 0x9c], edx
0x21181:   80 7d 9a 01                           	cmp byte ptr [rbp - 0x66], 1
0x21185:   45 19 f6                              	sbb r14d, r14d
0x21188:   41 f7 d6                              	not r14d
0x2118b:   41 83 e6 02                           	and r14d, 2
0x2118f:   80 7d 9c 01                           	cmp byte ptr [rbp - 0x64], 1
0x21193:   45 19 ff                              	sbb r15d, r15d
0x21196:   41 f7 d7                              	not r15d
0x21199:   41 83 e7 04                           	and r15d, 4
0x2119d:   84 c0                                 	test al, al
0x2119f:   0f 84 e7 01 00 00                     	je 0x2138c
0x211a5:   48 8d 55 c8                           	lea rdx, [rbp - 0x38]
0x211a9:   48 8d 75 cc                           	lea rsi, [rbp - 0x34]
0x211ad:   48 89 df                              	mov rdi, rbx
0x211b0:   e8 78 fe ff ff                        	call 0x2102d <BLACKWIDOW_GetPllDsmOrderAndFractCorrect>
0x211b5:   41 89 c4                              	mov r12d, eax
0x211b8:   84 c0                                 	test al, al
0x211ba:   0f 84 cc 01 00 00                     	je 0x2138c
0x211c0:   48 8d b5 70 ff ff ff                  	lea rsi, [rbp - 0x90]
0x211c7:   48 89 df                              	mov rdi, rbx
0x211ca:   e8 82 fd ff ff                        	call 0x20f51 <BLACKWIDOW_GetPllDividerConfig>
0x211cf:   41 89 c4                              	mov r12d, eax
0x211d2:   84 c0                                 	test al, al
0x211d4:   0f 84 b2 01 00 00                     	je 0x2138c
0x211da:   48 8d 45 c0                           	lea rax, [rbp - 0x40]
0x211de:   48 89 04 24                           	mov qword ptr [rsp], rax
0x211e2:   41 b9 00 00 00 00                     	mov r9d, 0
0x211e8:   41 b8 02 00 00 00                     	mov r8d, 2
0x211ee:   b9 06 00 00 00                        	mov ecx, 6
0x211f3:   ba 00 00 00 00                        	mov edx, 0
0x211f8:   be 03 00 00 00                        	mov esi, 3
0x211fd:   48 89 df                              	mov rdi, rbx
0x21200:   ff 15 7a 56 01 00                     	call qword ptr [rip + 0x1567a]
0x21206:   41 89 c4                              	mov r12d, eax
0x21209:   4c 8b 45 c0                           	mov r8, qword ptr [rbp - 0x40]
0x2120d:   84 c0                                 	test al, al
0x2120f:   0f 84 77 01 00 00                     	je 0x2138c
0x21215:   48 8b b5 78 ff ff ff                  	mov rsi, qword ptr [rbp - 0x88]
0x2121c:   48 83 ee 80                           	sub rsi, -0x80
0x21220:   ba 01 00 00 00                        	mov edx, 1
0x21225:   48 81 fe 99 99 99 19                  	cmp rsi, 0x19999999
0x2122c:   77 1d                                 	ja 0x2124b <BLACKWIDOW_GetPLLFrequency+0x175>
0x2122e:   48 8d 14 92                           	lea rdx, [rdx + rdx*4]
0x21232:   48 01 d2                              	add rdx, rdx
0x21235:   48 8d 34 b6                           	lea rsi, [rsi + rsi*4]
0x21239:   48 01 f6                              	add rsi, rsi
0x2123c:   48 89 f0                              	mov rax, rsi
0x2123f:   48 0f af c2                           	imul rax, rdx
0x21243:   48 3d 99 99 99 19                     	cmp rax, 0x19999999
0x21249:   76 e3                                 	jbe 0x2122e <BLACKWIDOW_GetPLLFrequency+0x158>
0x2124b:   48 8b 45 80                           	mov rax, qword ptr [rbp - 0x80]
0x2124f:   bb 01 00 00 00                        	mov ebx, 1
0x21254:   48 8d 04 80                           	lea rax, [rax + rax*4]
0x21258:   48 01 c0                              	add rax, rax
0x2125b:   48 8d 1c 9b                           	lea rbx, [rbx + rbx*4]
0x2125f:   48 01 db                              	add rbx, rbx
0x21262:   48 3d 98 99 99 19                     	cmp rax, 0x19999998
0x21268:   77 05                                 	ja 0x2126f <BLACKWIDOW_GetPLLFrequency+0x199>
0x2126a:   48 39 d3                              	cmp rbx, rdx
0x2126d:   72 e5                                 	jb 0x21254 <BLACKWIDOW_GetPLLFrequency+0x17e>
0x2126f:   b9 00 00 00 00                        	mov ecx, 0
0x21274:   48 d1 e8                              	shr rax, 1
0x21277:   48 3d 98 99 99 19                     	cmp rax, 0x19999998
0x2127d:   77 13                                 	ja 0x21292 <BLACKWIDOW_GetPLLFrequency+0x1bc>
0x2127f:   48 39 d3                              	cmp rbx, rdx
0x21282:   73 0e                                 	jae 0x21292 <BLACKWIDOW_GetPLLFrequency+0x1bc>
0x21284:   48 8d 04 80                           	lea rax, [rax + rax*4]
0x21288:   48 01 c0                              	add rax, rax
0x2128b:   48 8d 1c 9b                           	lea rbx, [rbx + rbx*4]
0x2128f:   48 01 db                              	add rbx, rbx
0x21292:   48 83 c1 01                           	add rcx, 1
0x21296:   48 83 f9 10                           	cmp rcx, 0x10
0x2129a:   75 d8                                 	jne 0x21274 <BLACKWIDOW_GetPLLFrequency+0x19e>
0x2129c:   48 8d 14 46                           	lea rdx, [rsi + rax*2]
0x212a0:   48 01 f0                              	add rax, rsi
0x212a3:   83 7d c8 00                           	cmp dword ptr [rbp - 0x38], 0
0x212a7:   48 0f 44 c2                           	cmove rax, rdx
0x212ab:   83 bd 70 ff ff ff 00                  	cmp dword ptr [rbp - 0x90], 0
0x212b2:   75 36                                 	jne 0x212ea <BLACKWIDOW_GetPLLFrequency+0x214>
0x212b4:   41 83 f8 02                           	cmp r8d, 2
0x212b8:   74 13                                 	je 0x212cd <BLACKWIDOW_GetPLLFrequency+0x1f7>
0x212ba:   41 83 f8 03                           	cmp r8d, 3
0x212be:   74 25                                 	je 0x212e5 <BLACKWIDOW_GetPLLFrequency+0x20f>
0x212c0:   48 8d 14 00                           	lea rdx, [rax + rax]
0x212c4:   45 85 c0                              	test r8d, r8d
0x212c7:   48 0f 44 c2                           	cmove rax, rdx
0x212cb:   eb 53                                 	jmp 0x21320 <BLACKWIDOW_GetPLLFrequency+0x24a>
0x212cd:   48 01 c0                              	add rax, rax
0x212d0:   48 ba ab aa aa aa aa aa aa aa         	movabs rdx, 0xaaaaaaaaaaaaaaab
0x212da:   48 f7 e2                              	mul rdx
0x212dd:   48 89 d0                              	mov rax, rdx
0x212e0:   48 d1 e8                              	shr rax, 1
0x212e3:   eb 3b                                 	jmp 0x21320 <BLACKWIDOW_GetPLLFrequency+0x24a>
0x212e5:   48 d1 e8                              	shr rax, 1
0x212e8:   eb 36                                 	jmp 0x21320 <BLACKWIDOW_GetPLLFrequency+0x24a>
0x212ea:   41 83 f8 01                           	cmp r8d, 1
0x212ee:   74 14                                 	je 0x21304 <BLACKWIDOW_GetPLLFrequency+0x22e>
0x212f0:   41 83 f8 01                           	cmp r8d, 1
0x212f4:   72 08                                 	jb 0x212fe <BLACKWIDOW_GetPLLFrequency+0x228>
0x212f6:   41 83 f8 02                           	cmp r8d, 2
0x212fa:   75 24                                 	jne 0x21320 <BLACKWIDOW_GetPLLFrequency+0x24a>
0x212fc:   eb 0b                                 	jmp 0x21309 <BLACKWIDOW_GetPLLFrequency+0x233>
0x212fe:   48 c1 e0 02                           	shl rax, 2
0x21302:   eb 1c                                 	jmp 0x21320 <BLACKWIDOW_GetPLLFrequency+0x24a>
0x21304:   48 01 c0                              	add rax, rax
0x21307:   eb 17                                 	jmp 0x21320 <BLACKWIDOW_GetPLLFrequency+0x24a>
0x21309:   48 c1 e0 02                           	shl rax, 2
0x2130d:   48 ba ab aa aa aa aa aa aa aa         	movabs rdx, 0xaaaaaaaaaaaaaaab
0x21317:   48 f7 e2                              	mul rdx
0x2131a:   48 89 d0                              	mov rax, rdx
0x2131d:   48 d1 e8                              	shr rax, 1
0x21320:   48 8d 4d b0                           	lea rcx, [rbp - 0x50]
0x21324:   4c 8d 45 a0                           	lea r8, [rbp - 0x60]
0x21328:   48 8b 95 68 ff ff ff                  	mov rdx, qword ptr [rbp - 0x98]
0x2132f:   48 8b 72 08                           	mov rsi, qword ptr [rdx + 8]
0x21333:   44 03 b5 64 ff ff ff                  	add r14d, dword ptr [rbp - 0x9c]
0x2133a:   47 8d 3c 3e                           	lea r15d, [r14 + r15]
0x2133e:   4d 63 ff                              	movsxd r15, r15d
0x21341:   ba 00 00 00 00                        	mov edx, 0
0x21346:   49 f7 f7                              	div r15
0x21349:   48 89 c7                              	mov rdi, rax
0x2134c:   4c 89 c2                              	mov rdx, r8
0x2134f:   e8 70 dd ff ff                        	call 0x1f0c4 <Mult>
0x21354:   48 8d 4d a8                           	lea rcx, [rbp - 0x58]
0x21358:   4c 8d 45 b8                           	lea r8, [rbp - 0x48]
0x2135c:   48 89 da                              	mov rdx, rbx
0x2135f:   48 8b 75 b0                           	mov rsi, qword ptr [rbp - 0x50]
0x21363:   48 8b 7d a0                           	mov rdi, qword ptr [rbp - 0x60]
0x21367:   e8 0b de ff ff                        	call 0x1f177 <Div>
0x2136c:   48 8b 55 b8                           	mov rdx, qword ptr [rbp - 0x48]
; data inside code section at 0x21370 -- 0x21371
0x21370:   48                                                 |H               |
; function: BLACKWIDOW_SetFreq at 0x21371 -- 0x213a1
0x21371:   c1 ea 03                              	shr edx, 3
0x21374:   48 b9 cf f7 53 e3 a5 9b c4 20         	movabs rcx, 0x20c49ba5e353f7cf
0x2137e:   48 89 d0                              	mov rax, rdx
0x21381:   48 f7 e1                              	mul rcx
0x21384:   48 c1 ea 04                           	shr rdx, 4
0x21388:   49 89 55 00                           	mov qword ptr [r13], rdx
0x2138c:   44 89 e0                              	mov eax, r12d
0x2138f:   48 81 c4 88 00 00 00                  	add rsp, 0x88
0x21396:   5b                                    	pop rbx
0x21397:   41 5c                                 	pop r12
0x21399:   41 5d                                 	pop r13
0x2139b:   41 5e                                 	pop r14
0x2139d:   41 5f                                 	pop r15
0x2139f:   c9                                    	leave 
0x213a0:   c3                                    	ret 
; function: BLACKWIDOW_SetFreq at 0x213a1 -- 0x219e6
0x213a1:   55                                    	push rbp
0x213a2:   48 89 e5                              	mov rbp, rsp
0x213a5:   41 57                                 	push r15
0x213a7:   41 56                                 	push r14
0x213a9:   41 55                                 	push r13
0x213ab:   41 54                                 	push r12
0x213ad:   53                                    	push rbx
0x213ae:   48 81 ec 98 00 00 00                  	sub rsp, 0x98
0x213b5:   e8 36 d8 01 00                        	call 0x3ebf0 <mcount>
0x213ba:   49 89 fc                              	mov r12, rdi
0x213bd:   48 89 f3                              	mov rbx, rsi
0x213c0:   41 89 d6                              	mov r14d, edx
0x213c3:   4c 8b 6f 28                           	mov r13, qword ptr [rdi + 0x28]
0x213c7:   c7 45 cc 02 00 00 00                  	mov dword ptr [rbp - 0x34], 2
0x213ce:   c7 45 c8 02 00 00 00                  	mov dword ptr [rbp - 0x38], 2
0x213d5:   be 00 00 00 00                        	mov esi, 0
0x213da:   49 83 7d 08 00                        	cmp qword ptr [r13 + 8], 0
0x213df:   74 07                                 	je 0x213e8 <BLACKWIDOW_SetFreq+0x47>
0x213e1:   48 85 ff                              	test rdi, rdi
0x213e4:   40 0f 95 c6                           	setne sil
0x213e8:   48 8d 83 20 6c fb ff                  	lea rax, [rbx - 0x493e0]
0x213ef:   48 3d e0 32 29 00                     	cmp rax, 0x2932e0
0x213f5:   0f 87 0c 05 00 00                     	ja 0x21907 <BLACKWIDOW_SetFreq+0x566>
0x213fb:   40 84 f6                              	test sil, sil
0x213fe:   0f 84 ef 04 00 00                     	je 0x218f3 <BLACKWIDOW_SetFreq+0x552>
0x21404:   48 8d 55 c8                           	lea rdx, [rbp - 0x38]
0x21408:   48 8d 75 cc                           	lea rsi, [rbp - 0x34]
0x2140c:   4c 89 e7                              	mov rdi, r12
0x2140f:   e8 19 fc ff ff                        	call 0x2102d <BLACKWIDOW_GetPllDsmOrderAndFractCorrect>
0x21414:   89 c6                                 	mov esi, eax
0x21416:   84 c0                                 	test al, al
0x21418:   0f 84 d5 04 00 00                     	je 0x218f3 <BLACKWIDOW_SetFreq+0x552>
0x2141e:   48 8d 75 90                           	lea rsi, [rbp - 0x70]
0x21422:   4c 89 e7                              	mov rdi, r12
0x21425:   e8 23 f5 ff ff                        	call 0x2094d <BLACKWIDOW_GetLoConfig>
0x2142a:   45 85 f6                              	test r14d, r14d
0x2142d:   74 5c                                 	je 0x2148b <BLACKWIDOW_SetFreq+0xea>
0x2142f:   41 83 fe 01                           	cmp r14d, 1
0x21433:   0f 84 55 05 00 00                     	je 0x2198e <BLACKWIDOW_SetFreq+0x5ed>
0x21439:   41 83 fe 02                           	cmp r14d, 2
0x2143d:   0f 84 0b 05 00 00                     	je 0x2194e <BLACKWIDOW_SetFreq+0x5ad>
0x21443:   41 83 fe 03                           	cmp r14d, 3
0x21447:   0f 84 c1 04 00 00                     	je 0x2190e <BLACKWIDOW_SetFreq+0x56d>
0x2144d:   41 83 fe 04                           	cmp r14d, 4
0x21451:   0f 84 77 05 00 00                     	je 0x219ce <BLACKWIDOW_SetFreq+0x62d>
0x21457:   48 81 fb 38 67 10 00                  	cmp rbx, 0x106738
0x2145e:   0f 86 6a 05 00 00                     	jbe 0x219ce <BLACKWIDOW_SetFreq+0x62d>
0x21464:   48 81 fb e0 bc 12 00                  	cmp rbx, 0x12bce0
0x2146b:   0f 86 9d 04 00 00                     	jbe 0x2190e <BLACKWIDOW_SetFreq+0x56d>
0x21471:   48 81 fb a8 dd 15 00                  	cmp rbx, 0x15dda8
0x21478:   0f 86 d0 04 00 00                     	jbe 0x2194e <BLACKWIDOW_SetFreq+0x5ad>
0x2147e:   48 81 fb c0 3e 1a 00                  	cmp rbx, 0x1a3ec0
0x21485:   0f 86 03 05 00 00                     	jbe 0x2198e <BLACKWIDOW_SetFreq+0x5ed>
0x2148b:   c6 45 90 01                           	mov byte ptr [rbp - 0x70], 1
0x2148f:   c6 45 91 01                           	mov byte ptr [rbp - 0x6f], 1
0x21493:   c6 45 92 01                           	mov byte ptr [rbp - 0x6e], 1
0x21497:   c6 45 93 01                           	mov byte ptr [rbp - 0x6d], 1
0x2149b:   c6 45 94 01                           	mov byte ptr [rbp - 0x6c], 1
0x2149f:   c6 45 95 01                           	mov byte ptr [rbp - 0x6b], 1
0x214a3:   c6 45 98 01                           	mov byte ptr [rbp - 0x68], 1
0x214a7:   c6 45 96 01                           	mov byte ptr [rbp - 0x6a], 1
0x214ab:   c6 45 99 00                           	mov byte ptr [rbp - 0x67], 0
0x214af:   c6 45 9a 00                           	mov byte ptr [rbp - 0x66], 0
0x214b3:   c6 45 9b 01                           	mov byte ptr [rbp - 0x65], 1
0x214b7:   c6 45 9c 00                           	mov byte ptr [rbp - 0x64], 0
0x214bb:   48 c7 85 68 ff ff ff 04 00 00 00      	mov qword ptr [rbp - 0x98], 4
0x214c6:   84 c0                                 	test al, al
0x214c8:   74 0c                                 	je 0x214d6 <BLACKWIDOW_SetFreq+0x135>
0x214ca:   48 8d 75 90                           	lea rsi, [rbp - 0x70]
0x214ce:   4c 89 e7                              	mov rdi, r12
0x214d1:   e8 87 f2 ff ff                        	call 0x2075d <BLACKWIDOW_SetLoConfig>
0x214d6:   83 7d cc 01                           	cmp dword ptr [rbp - 0x34], 1
0x214da:   75 26                                 	jne 0x21502 <BLACKWIDOW_SetFreq+0x161>
0x214dc:   83 7d c8 01                           	cmp dword ptr [rbp - 0x38], 1
0x214e0:   4d 19 f6                              	sbb r14, r14
0x214e3:   49 83 e6 fb                           	and r14, 0xfffffffffffffffb
0x214e7:   49 81 c6 e2 09 00 00                  	add r14, 0x9e2
0x214ee:   83 7d c8 01                           	cmp dword ptr [rbp - 0x38], 1
0x214f2:   4d 19 ff                              	sbb r15, r15
0x214f5:   41 83 e7 0f                           	and r15d, 0xf
0x214f9:   49 81 c7 0a 05 00 00                  	add r15, 0x50a
0x21500:   eb 24                                 	jmp 0x21526 <BLACKWIDOW_SetFreq+0x185>
0x21502:   83 7d c8 01                           	cmp dword ptr [rbp - 0x38], 1
0x21506:   4d 19 f6                              	sbb r14, r14
0x21509:   49 83 e6 e7                           	and r14, 0xffffffffffffffe7
0x2150d:   49 81 c6 ce 09 00 00                  	add r14, 0x9ce
0x21514:   83 7d c8 01                           	cmp dword ptr [rbp - 0x38], 1
0x21518:   4d 19 ff                              	sbb r15, r15
0x2151b:   41 83 e7 23                           	and r15d, 0x23
0x2151f:   49 81 c7 1e 05 00 00                  	add r15, 0x51e
0x21526:   48 ba cd cc cc cc cc cc cc cc         	movabs rdx, 0xcccccccccccccccd
0x21530:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0x21534:   48 f7 e2                              	mul rdx
0x21537:   49 89 d5                              	mov r13, rdx
0x2153a:   49 c1 ed 03                           	shr r13, 3
0x2153e:   48 8d 4d b8                           	lea rcx, [rbp - 0x48]
0x21542:   48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x21546:   48 8d 04 9b                           	lea rax, [rbx + rbx*4]
0x2154a:   48 8d 3c 80                           	lea rdi, [rax + rax*4]
0x2154e:   48 c1 e7 02                           	shl rdi, 2
0x21552:   48 0f af bd 68 ff ff ff               	imul rdi, qword ptr [rbp - 0x98]
0x2155a:   be 40 42 0f 00                        	mov esi, 0xf4240
0x2155f:   e8 60 db ff ff                        	call 0x1f0c4 <Mult>
0x21564:   48 8d 4d b0                           	lea rcx, [rbp - 0x50]
0x21568:   4c 8d 45 a8                           	lea r8, [rbp - 0x58]
0x2156c:   4c 89 ea                              	mov rdx, r13
0x2156f:   48 8b 75 b8                           	mov rsi, qword ptr [rbp - 0x48]
0x21573:   48 8b 7d c0                           	mov rdi, qword ptr [rbp - 0x40]
0x21577:   e8 fb db ff ff                        	call 0x1f177 <Div>
0x2157c:   48 8b 5d a8                           	mov rbx, qword ptr [rbp - 0x58]
0x21580:   48 8d 94 1b a0 86 01 00               	lea rdx, [rbx + rbx + 0x186a0]
0x21588:   48 c1 ea 06                           	shr rdx, 6
0x2158c:   48 b9 43 78 b4 71 c4 5a 7c 0a         	movabs rcx, 0xa7c5ac471b47843
0x21596:   48 89 d0                              	mov rax, rdx
0x21599:   48 f7 e1                              	mul rcx
0x2159c:   48 c1 ea 07                           	shr rdx, 7
0x215a0:   49 8b 44 24 28                        	mov rax, qword ptr [r12 + 0x28]
0x215a5:   48 81 78 08 c0 fc 9b 01               	cmp qword ptr [rax + 8], 0x19bfcc0
0x215ad:   77 76                                 	ja 0x21625 <BLACKWIDOW_SetFreq+0x284>
0x215af:   48 89 d0                              	mov rax, rdx
0x215b2:   48 d1 e8                              	shr rax, 1
0x215b5:   49 39 c6                              	cmp r14, rax
0x215b8:   73 29                                 	jae 0x215e3 <BLACKWIDOW_SetFreq+0x242>
0x215ba:   48 89 d0                              	mov rax, rdx
0x215bd:   48 c1 e8 02                           	shr rax, 2
0x215c1:   bf 04 00 00 00                        	mov edi, 4
0x215c6:   b9 01 00 00 00                        	mov ecx, 1
0x215cb:   49 39 c6                              	cmp r14, rax
0x215ce:   0f 83 ac 00 00 00                     	jae 0x21680 <BLACKWIDOW_SetFreq+0x2df>
0x215d4:   48 8d 04 52                           	lea rax, [rdx + rdx*2]
0x215d8:   48 c1 e8 02                           	shr rax, 2
0x215dc:   b1 03                                 	mov cl, 3
0x215de:   e9 9d 00 00 00                        	jmp 0x21680 <BLACKWIDOW_SetFreq+0x2df>
0x215e3:   b9 01 00 00 00                        	mov ecx, 1
0x215e8:   49 39 c7                              	cmp r15, rax
0x215eb:   0f 86 1d 04 00 00                     	jbe 0x21a0e
0x215f1:   49 39 d6                              	cmp r14, rdx
0x215f4:   73 11                                 	jae 0x21607 <BLACKWIDOW_SetFreq+0x266>
0x215f6:   48 8d 04 52                           	lea rax, [rdx + rdx*2]
0x215fa:   48 c1 e8 02                           	shr rax, 2
0x215fe:   bf 04 00 00 00                        	mov edi, 4
0x21603:   b1 03                                 	mov cl, 3
0x21605:   eb 79                                 	jmp 0x21680 <BLACKWIDOW_SetFreq+0x2df>
0x21607:   b9 02 00 00 00                        	mov ecx, 2
0x2160c:   49 39 d7                              	cmp r15, rdx
0x2160f:   0f 86 f9 03 00 00                     	jbe 0x21a0e
0x21615:   48 8d 04 52                           	lea rax, [rdx + rdx*2]
0x21619:   48 d1 e8                              	shr rax, 1
0x2161c:   bf 02 00 00 00                        	mov edi, 2
0x21621:   b1 03                                 	mov cl, 3
0x21623:   eb 5b                                 	jmp 0x21680 <BLACKWIDOW_SetFreq+0x2df>
0x21625:   48 8d 0c 12                           	lea rcx, [rdx + rdx]
0x21629:   48 89 c8                              	mov rax, rcx
0x2162c:   48 d1 e8                              	shr rax, 1
0x2162f:   49 39 c6                              	cmp r14, rax
0x21632:   77 22                                 	ja 0x21656 <BLACKWIDOW_SetFreq+0x2b5>
0x21634:   48 89 c8                              	mov rax, rcx
0x21637:   48 c1 e8 02                           	shr rax, 2
0x2163b:   bf 04 00 00 00                        	mov edi, 4
0x21640:   b9 02 00 00 00                        	mov ecx, 2
0x21645:   49 39 c7                              	cmp r15, rax
0x21648:   76 36                                 	jbe 0x21680 <BLACKWIDOW_SetFreq+0x2df>
0x2164a:   48 8d 04 52                           	lea rax, [rdx + rdx*2]
0x2164e:   48 c1 e8 02                           	shr rax, 2
0x21652:   b1 03                                 	mov cl, 3
0x21654:   eb 2a                                 	jmp 0x21680 <BLACKWIDOW_SetFreq+0x2df>
0x21656:   bf 02 00 00 00                        	mov edi, 2
0x2165b:   b9 02 00 00 00                        	mov ecx, 2
0x21660:   49 39 c7                              	cmp r15, rax
0x21663:   76 1b                                 	jbe 0x21680 <BLACKWIDOW_SetFreq+0x2df>
0x21665:   48 8d 14 52                           	lea rdx, [rdx + rdx*2]
0x21669:   48 89 d0                              	mov rax, rdx
0x2166c:   48 d1 e8                              	shr rax, 1
0x2166f:   b1 03                                 	mov cl, 3
0x21671:   49 39 c6                              	cmp r14, rax
0x21674:   73 0a                                 	jae 0x21680 <BLACKWIDOW_SetFreq+0x2df>
0x21676:   48 89 d0                              	mov rax, rdx
0x21679:   48 c1 e8 02                           	shr rax, 2
0x2167d:   40 b7 04                              	mov dil, 4
0x21680:   49 39 c7                              	cmp r15, rax
0x21683:   77 05                                 	ja 0x2168a <BLACKWIDOW_SetFreq+0x2e9>
0x21685:   49 39 c6                              	cmp r14, rax
0x21688:   73 0a                                 	jae 0x21694 <BLACKWIDOW_SetFreq+0x2f3>
0x2168a:   be 00 00 00 00                        	mov esi, 0
0x2168f:   e9 9c 00 00 00                        	jmp 0x21730 <BLACKWIDOW_SetFreq+0x38f>
0x21694:   48 8d 04 89                           	lea rax, [rcx + rcx*4]
0x21698:   48 8d 04 80                           	lea rax, [rax + rax*4]
0x2169c:   48 c1 e0 02                           	shl rax, 2
0x216a0:   ba 00 00 00 00                        	mov edx, 0
0x216a5:   48 f7 f7                              	div rdi
0x216a8:   48 83 f8 4b                           	cmp rax, 0x4b
0x216ac:   74 43                                 	je 0x216f1 <BLACKWIDOW_SetFreq+0x350>
0x216ae:   48 83 f8 4b                           	cmp rax, 0x4b
0x216b2:   77 0e                                 	ja 0x216c2 <BLACKWIDOW_SetFreq+0x321>
0x216b4:   48 83 f8 19                           	cmp rax, 0x19
0x216b8:   74 22                                 	je 0x216dc <BLACKWIDOW_SetFreq+0x33b>
0x216ba:   48 83 f8 32                           	cmp rax, 0x32
0x216be:   75 15                                 	jne 0x216d5 <BLACKWIDOW_SetFreq+0x334>
0x216c0:   eb 25                                 	jmp 0x216e7 <BLACKWIDOW_SetFreq+0x346>
0x216c2:   be 01 00 00 00                        	mov esi, 1
0x216c7:   48 83 f8 64                           	cmp rax, 0x64
0x216cb:   74 46                                 	je 0x21713 <BLACKWIDOW_SetFreq+0x372>
0x216cd:   48 3d 96 00 00 00                     	cmp rax, 0x96
0x216d3:   74 30                                 	je 0x21705 <BLACKWIDOW_SetFreq+0x364>
0x216d5:   be 00 00 00 00                        	mov esi, 0
0x216da:   eb 37                                 	jmp 0x21713 <BLACKWIDOW_SetFreq+0x372>
0x216dc:   48 c1 eb 02                           	shr rbx, 2
0x216e0:   be 01 00 00 00                        	mov esi, 1
0x216e5:   eb 2c                                 	jmp 0x21713 <BLACKWIDOW_SetFreq+0x372>
0x216e7:   48 d1 eb                              	shr rbx, 1
0x216ea:   be 01 00 00 00                        	mov esi, 1
0x216ef:   eb 22                                 	jmp 0x21713 <BLACKWIDOW_SetFreq+0x372>
0x216f1:   48 89 d8                              	mov rax, rbx
0x216f4:   48 d1 e8                              	shr rax, 1
0x216f7:   48 c1 eb 02                           	shr rbx, 2
0x216fb:   48 01 c3                              	add rbx, rax
0x216fe:   be 01 00 00 00                        	mov esi, 1
0x21703:   eb 0e                                 	jmp 0x21713 <BLACKWIDOW_SetFreq+0x372>
0x21705:   48 89 d8                              	mov rax, rbx
0x21708:   48 d1 e8                              	shr rax, 1
0x2170b:   48 01 c3                              	add rbx, rax
0x2170e:   be 01 00 00 00                        	mov esi, 1
0x21713:   48 8d 44 1b 0a                        	lea rax, [rbx + rbx + 0xa]
0x21718:   48 ba cd cc cc cc cc cc cc cc         	movabs rdx, 0xcccccccccccccccd
0x21722:   48 f7 e2                              	mul rdx
0x21725:   48 c1 ea 04                           	shr rdx, 4
0x21729:   48 8d 1c 92                           	lea rbx, [rdx + rdx*4]
0x2172d:   48 01 db                              	add rbx, rbx
0x21730:   41 b8 01 00 00 00                     	mov r8d, 1
0x21736:   48 83 f9 02                           	cmp rcx, 2
0x2173a:   74 25                                 	je 0x21761 <BLACKWIDOW_SetFreq+0x3c0>
0x2173c:   41 b0 02                              	mov r8b, 2
0x2173f:   48 83 f9 03                           	cmp rcx, 3
0x21743:   74 1c                                 	je 0x21761 <BLACKWIDOW_SetFreq+0x3c0>
0x21745:   48 83 f9 01                           	cmp rcx, 1
0x21749:   41 0f 95 c0                           	setne r8b
0x2174d:   45 0f b6 c0                           	movzx r8d, r8b
0x21751:   41 c1 e0 02                           	shl r8d, 2
0x21755:   48 83 f9 01                           	cmp rcx, 1
0x21759:   b8 00 00 00 00                        	mov eax, 0
0x2175e:   0f 45 f0                              	cmovne esi, eax
0x21761:   48 83 ff 02                           	cmp rdi, 2
0x21765:   74 0d                                 	je 0x21774 <BLACKWIDOW_SetFreq+0x3d3>
0x21767:   48 83 ff 04                           	cmp rdi, 4
0x2176b:   74 13                                 	je 0x21780 <BLACKWIDOW_SetFreq+0x3df>
0x2176d:   be 00 00 00 00                        	mov esi, 0
0x21772:   eb 16                                 	jmp 0x2178a <BLACKWIDOW_SetFreq+0x3e9>
0x21774:   c7 85 70 ff ff ff 00 00 00 00         	mov dword ptr [rbp - 0x90], 0
0x2177e:   eb 0a                                 	jmp 0x2178a <BLACKWIDOW_SetFreq+0x3e9>
0x21780:   c7 85 70 ff ff ff 01 00 00 00         	mov dword ptr [rbp - 0x90], 1
0x2178a:   83 7d c8 00                           	cmp dword ptr [rbp - 0x38], 0
0x2178e:   0f 85 85 00 00 00                     	jne 0x21819 <BLACKWIDOW_SetFreq+0x478>
0x21794:   48 d1 eb                              	shr rbx, 1
0x21797:   48 ba db 34 b6 d7 82 de 1b 43         	movabs rdx, 0x431bde82d7b634db
0x217a1:   48 89 d8                              	mov rax, rbx
0x217a4:   48 f7 e2                              	mul rdx
0x217a7:   48 89 d1                              	mov rcx, rdx
0x217aa:   48 c1 e9 12                           	shr rcx, 0x12
0x217ae:   48 69 c1 40 42 0f 00                  	imul rax, rcx, 0xf4240
0x217b5:   48 29 c3                              	sub rbx, rax
0x217b8:   48 8d 44 1b 0a                        	lea rax, [rbx + rbx + 0xa]
0x217bd:   48 ba cd cc cc cc cc cc cc cc         	movabs rdx, 0xcccccccccccccccd
0x217c7:   48 f7 e2                              	mul rdx
0x217ca:   48 c1 ea 04                           	shr rdx, 4
0x217ce:   48 8d 1c 92                           	lea rbx, [rdx + rdx*4]
0x217d2:   48 01 db                              	add rbx, rbx
0x217d5:   48 81 fb b0 71 0b 00                  	cmp rbx, 0xb71b0
0x217dc:   76 0e                                 	jbe 0x217ec <BLACKWIDOW_SetFreq+0x44b>
0x217de:   48 81 eb 20 a1 07 00                  	sub rbx, 0x7a120
0x217e5:   b8 01 00 00 00                        	mov eax, 1
0x217ea:   eb 1b                                 	jmp 0x21807 <BLACKWIDOW_SetFreq+0x466>
0x217ec:   b8 00 00 00 00                        	mov eax, 0
0x217f1:   48 81 fb 8f d0 03 00                  	cmp rbx, 0x3d08f
0x217f8:   77 0d                                 	ja 0x21807 <BLACKWIDOW_SetFreq+0x466>
0x217fa:   48 83 e9 01                           	sub rcx, 1
0x217fe:   48 81 c3 20 a1 07 00                  	add rbx, 0x7a120
0x21805:   b0 01                                 	mov al, 1
0x21807:   4c 8d 34 48                           	lea r14, [rax + rcx*2]
0x2180b:   49 83 fe 7f                           	cmp r14, 0x7f
0x2180f:   b8 00 00 00 00                        	mov eax, 0
0x21814:   0f 46 f0                              	cmovbe esi, eax
0x21817:   eb 21                                 	jmp 0x2183a <BLACKWIDOW_SetFreq+0x499>
0x21819:   48 ba db 34 b6 d7 82 de 1b 43         	movabs rdx, 0x431bde82d7b634db
0x21823:   48 89 d8                              	mov rax, rbx
0x21826:   48 f7 e2                              	mul rdx
0x21829:   49 89 d6                              	mov r14, rdx
0x2182c:   49 c1 ee 12                           	shr r14, 0x12
0x21830:   49 69 c6 40 42 0f 00                  	imul rax, r14, 0xf4240
0x21837:   48 29 c3                              	sub rbx, rax
0x2183a:   41 bd 40 42 0f 00                     	mov r13d, 0xf4240
0x21840:   b9 00 00 00 00                        	mov ecx, 0
0x21845:   48 bf cd cc cc cc cc cc cc cc         	movabs rdi, 0xcccccccccccccccd
0x2184f:   48 01 db                              	add rbx, rbx
0x21852:   48 81 fb ff ff ff 0f                  	cmp rbx, 0xfffffff
0x21859:   76 20                                 	jbe 0x2187b <BLACKWIDOW_SetFreq+0x4da>
0x2185b:   48 83 f9 0f                           	cmp rcx, 0xf
0x2185f:   74 1a                                 	je 0x2187b <BLACKWIDOW_SetFreq+0x4da>
0x21861:   48 89 d8                              	mov rax, rbx
0x21864:   48 f7 e7                              	mul rdi
0x21867:   48 89 d3                              	mov rbx, rdx
0x2186a:   48 c1 eb 03                           	shr rbx, 3
0x2186e:   4c 89 e8                              	mov rax, r13
0x21871:   48 f7 e7                              	mul rdi
0x21874:   49 89 d5                              	mov r13, rdx
0x21877:   49 c1 ed 03                           	shr r13, 3
0x2187b:   48 83 c1 01                           	add rcx, 1
0x2187f:   48 83 f9 10                           	cmp rcx, 0x10
0x21883:   75 ca                                 	jne 0x2184f <BLACKWIDOW_SetFreq+0x4ae>
0x21885:   40 84 f6                              	test sil, sil
0x21888:   74 69                                 	je 0x218f3 <BLACKWIDOW_SetFreq+0x552>
0x2188a:   45 89 c0                              	mov r8d, r8d
0x2188d:   4c 89 44 24 10                        	mov qword ptr [rsp + 0x10], r8
0x21892:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2189a:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x218a1:   41 b9 00 00 00 00                     	mov r9d, 0
0x218a7:   41 b8 02 00 00 00                     	mov r8d, 2
0x218ad:   b1 06                                 	mov cl, 6
0x218af:   ba 00 00 00 00                        	mov edx, 0
0x218b4:   be 03 00 00 00                        	mov esi, 3
0x218b9:   4c 89 e7                              	mov rdi, r12
0x218bc:   ff 15 c6 4f 01 00                     	call qword ptr [rip + 0x14fc6]
0x218c2:   89 c6                                 	mov esi, eax
0x218c4:   84 c0                                 	test al, al
0x218c6:   74 2b                                 	je 0x218f3 <BLACKWIDOW_SetFreq+0x552>
0x218c8:   49 83 c6 80                           	add r14, -0x80
0x218cc:   4c 89 b5 78 ff ff ff                  	mov qword ptr [rbp - 0x88], r14
0x218d3:   48 89 d8                              	mov rax, rbx
0x218d6:   ba 00 00 00 00                        	mov edx, 0
0x218db:   49 f7 f5                              	div r13
0x218de:   48 89 45 80                           	mov qword ptr [rbp - 0x80], rax
0x218e2:   48 8d b5 70 ff ff ff                  	lea rsi, [rbp - 0x90]
0x218e9:   4c 89 e7                              	mov rdi, r12
0x218ec:   e8 40 f5 ff ff                        	call 0x20e31 <BLACKWIDOW_SetPllDividerConfig>
0x218f1:   89 c6                                 	mov esi, eax
0x218f3:   89 f0                                 	mov eax, esi
0x218f5:   48 81 c4 98 00 00 00                  	add rsp, 0x98
0x218fc:   5b                                    	pop rbx
0x218fd:   41 5c                                 	pop r12
0x218ff:   41 5d                                 	pop r13
0x21901:   41 5e                                 	pop r14
0x21903:   41 5f                                 	pop r15
0x21905:   c9                                    	leave 
0x21906:   c3                                    	ret 
0x21907:   be 00 00 00 00                        	mov esi, 0
0x2190c:   eb e5                                 	jmp 0x218f3 <BLACKWIDOW_SetFreq+0x552>
0x2190e:   c6 45 90 01                           	mov byte ptr [rbp - 0x70], 1
0x21912:   c6 45 91 01                           	mov byte ptr [rbp - 0x6f], 1
0x21916:   c6 45 92 01                           	mov byte ptr [rbp - 0x6e], 1
0x2191a:   c6 45 93 01                           	mov byte ptr [rbp - 0x6d], 1
0x2191e:   c6 45 94 01                           	mov byte ptr [rbp - 0x6c], 1
0x21922:   c6 45 95 01                           	mov byte ptr [rbp - 0x6b], 1
0x21926:   c6 45 98 01                           	mov byte ptr [rbp - 0x68], 1
0x2192a:   c6 45 96 01                           	mov byte ptr [rbp - 0x6a], 1
0x2192e:   c6 45 99 01                           	mov byte ptr [rbp - 0x67], 1
0x21932:   c6 45 9a 01                           	mov byte ptr [rbp - 0x66], 1
0x21936:   c6 45 9b 01                           	mov byte ptr [rbp - 0x65], 1
0x2193a:   c6 45 9c 00                           	mov byte ptr [rbp - 0x64], 0
0x2193e:   48 c7 85 68 ff ff ff 07 00 00 00      	mov qword ptr [rbp - 0x98], 7
0x21949:   e9 78 fb ff ff                        	jmp 0x214c6 <BLACKWIDOW_SetFreq+0x125>
0x2194e:   c6 45 90 01                           	mov byte ptr [rbp - 0x70], 1
0x21952:   c6 45 91 01                           	mov byte ptr [rbp - 0x6f], 1
0x21956:   c6 45 92 01                           	mov byte ptr [rbp - 0x6e], 1
0x2195a:   c6 45 93 01                           	mov byte ptr [rbp - 0x6d], 1
0x2195e:   c6 45 94 01                           	mov byte ptr [rbp - 0x6c], 1
0x21962:   c6 45 95 01                           	mov byte ptr [rbp - 0x6b], 1
0x21966:   c6 45 98 01                           	mov byte ptr [rbp - 0x68], 1
0x2196a:   c6 45 96 01                           	mov byte ptr [rbp - 0x6a], 1
0x2196e:   c6 45 99 00                           	mov byte ptr [rbp - 0x67], 0
0x21972:   c6 45 9a 01                           	mov byte ptr [rbp - 0x66], 1
0x21976:   c6 45 9b 01                           	mov byte ptr [rbp - 0x65], 1
0x2197a:   c6 45 9c 00                           	mov byte ptr [rbp - 0x64], 0
0x2197e:   48 c7 85 68 ff ff ff 06 00 00 00      	mov qword ptr [rbp - 0x98], 6
0x21989:   e9 38 fb ff ff                        	jmp 0x214c6 <BLACKWIDOW_SetFreq+0x125>
0x2198e:   c6 45 90 01                           	mov byte ptr [rbp - 0x70], 1
0x21992:   c6 45 91 01                           	mov byte ptr [rbp - 0x6f], 1
0x21996:   c6 45 92 01                           	mov byte ptr [rbp - 0x6e], 1
0x2199a:   c6 45 93 01                           	mov byte ptr [rbp - 0x6d], 1
0x2199e:   c6 45 94 01                           	mov byte ptr [rbp - 0x6c], 1
0x219a2:   c6 45 95 01                           	mov byte ptr [rbp - 0x6b], 1
0x219a6:   c6 45 98 01                           	mov byte ptr [rbp - 0x68], 1
0x219aa:   c6 45 96 01                           	mov byte ptr [rbp - 0x6a], 1
0x219ae:   c6 45 99 01                           	mov byte ptr [rbp - 0x67], 1
0x219b2:   c6 45 9a 00                           	mov byte ptr [rbp - 0x66], 0
0x219b6:   c6 45 9b 01                           	mov byte ptr [rbp - 0x65], 1
0x219ba:   c6 45 9c 00                           	mov byte ptr [rbp - 0x64], 0
0x219be:   48 c7 85 68 ff ff ff 05 00 00 00      	mov qword ptr [rbp - 0x98], 5
0x219c9:   e9 f8 fa ff ff                        	jmp 0x214c6 <BLACKWIDOW_SetFreq+0x125>
0x219ce:   c6 45 93 01                           	mov byte ptr [rbp - 0x6d], 1
0x219d2:   c6 45 94 01                           	mov byte ptr [rbp - 0x6c], 1
0x219d6:   c6 45 95 01                           	mov byte ptr [rbp - 0x6b], 1
0x219da:   c6 45 98 01                           	mov byte ptr [rbp - 0x68], 1
0x219de:   c6 45 99 00                           	mov byte ptr [rbp - 0x67], 0
0x219e2:   c6 45 9a 00                           	mov byte ptr [rbp - 0x66], 0
; data inside code section at 0x219e6 -- 0x219e8
0x219e6:   c6 45                                              |.E              |
; function: BLACKWIDOW_ProgramVcoPor at 0x219e8 -- 0x21a18
0x219e8:   9b                                    	wait 
0x219e9:   00 c6                                 	add dh, al
0x219eb:   45 9c                                 	pushfq 
0x219ed:   01 c6                                 	add esi, eax
0x219ef:   45 90                                 	xchg eax, r8d
0x219f1:   00 c6                                 	add dh, al
0x219f3:   45 91                                 	xchg eax, r9d
0x219f5:   00 c6                                 	add dh, al
0x219f7:   45 92                                 	xchg eax, r10d
0x219f9:   00 c6                                 	add dh, al
0x219fb:   45 96                                 	xchg eax, r14d
0x219fd:   00 48 c7                              	add byte ptr [rax - 0x39], cl
0x21a00:   85 68 ff                              	test dword ptr [rax - 1], ebp
; data inside code section at 0x21a03 -- 0x21a0e
0x21a03:   ff ff 08 00 00 00 e9 b8  fa ff ff                  |...........     |
0x21a0e:   bf 02 00 00 00                        	mov edi, 2
0x21a13:   e9 7c fc ff ff                        	jmp 0x21694
; function: BLACKWIDOW_ProgramVcoPor at 0x21a18 -- 0x21ede
0x21a18:   55                                    	push rbp
0x21a19:   48 89 e5                              	mov rbp, rsp
0x21a1c:   53                                    	push rbx
0x21a1d:   48 83 ec 38                           	sub rsp, 0x38
0x21a21:   e8 ca d1 01 00                        	call 0x3ebf0 <mcount>
0x21a26:   48 89 fb                              	mov rbx, rdi
0x21a29:   48 85 ff                              	test rdi, rdi
0x21a2c:   0f 95 c0                              	setne al
0x21a2f:   0f 84 4f 04 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21a35:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x21a3d:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x21a41:   48 89 04 24                           	mov qword ptr [rsp], rax
0x21a45:   41 b9 00 00 00 00                     	mov r9d, 0
0x21a4b:   41 b8 08 00 00 00                     	mov r8d, 8
0x21a51:   b9 00 00 00 00                        	mov ecx, 0
0x21a56:   ba 00 00 00 00                        	mov edx, 0
0x21a5b:   be 0f 00 00 00                        	mov esi, 0xf
0x21a60:   ff 15 1a 4e 01 00                     	call qword ptr [rip + 0x14e1a]
0x21a66:   84 c0                                 	test al, al
0x21a68:   0f 84 16 04 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21a6e:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x21a72:   24 1f                                 	and al, 0x1f
0x21a74:   0c 80                                 	or al, 0x80
0x21a76:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x21a7a:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x21a7f:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21a87:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x21a8e:   41 b9 00 00 00 00                     	mov r9d, 0
0x21a94:   41 b8 08 00 00 00                     	mov r8d, 8
0x21a9a:   b9 00 00 00 00                        	mov ecx, 0
0x21a9f:   ba 00 00 00 00                        	mov edx, 0
0x21aa4:   be 0f 00 00 00                        	mov esi, 0xf
0x21aa9:   48 89 df                              	mov rdi, rbx
0x21aac:   ff 15 d6 4d 01 00                     	call qword ptr [rip + 0x14dd6]
0x21ab2:   84 c0                                 	test al, al
0x21ab4:   0f 84 ca 03 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21aba:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x21abe:   48 89 04 24                           	mov qword ptr [rsp], rax
0x21ac2:   41 b9 00 00 00 00                     	mov r9d, 0
0x21ac8:   41 b8 08 00 00 00                     	mov r8d, 8
0x21ace:   b9 00 00 00 00                        	mov ecx, 0
0x21ad3:   ba 00 00 00 00                        	mov edx, 0
0x21ad8:   be 13 00 00 00                        	mov esi, 0x13
0x21add:   48 89 df                              	mov rdi, rbx
0x21ae0:   ff 15 9a 4d 01 00                     	call qword ptr [rip + 0x14d9a]
0x21ae6:   84 c0                                 	test al, al
0x21ae8:   0f 84 96 03 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21aee:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x21af2:   48 83 e0 cf                           	and rax, 0xffffffffffffffcf
0x21af6:   48 83 c8 20                           	or rax, 0x20
0x21afa:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x21afe:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x21b03:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21b0b:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x21b12:   41 b9 00 00 00 00                     	mov r9d, 0
0x21b18:   41 b8 08 00 00 00                     	mov r8d, 8
0x21b1e:   b9 00 00 00 00                        	mov ecx, 0
0x21b23:   ba 00 00 00 00                        	mov edx, 0
0x21b28:   be 13 00 00 00                        	mov esi, 0x13
0x21b2d:   48 89 df                              	mov rdi, rbx
0x21b30:   ff 15 52 4d 01 00                     	call qword ptr [rip + 0x14d52]
0x21b36:   84 c0                                 	test al, al
0x21b38:   0f 84 46 03 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21b3e:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x21b42:   48 89 04 24                           	mov qword ptr [rsp], rax
0x21b46:   41 b9 00 00 00 00                     	mov r9d, 0
0x21b4c:   41 b8 08 00 00 00                     	mov r8d, 8
0x21b52:   b9 00 00 00 00                        	mov ecx, 0
0x21b57:   ba 00 00 00 00                        	mov edx, 0
0x21b5c:   be 12 00 00 00                        	mov esi, 0x12
0x21b61:   48 89 df                              	mov rdi, rbx
0x21b64:   ff 15 16 4d 01 00                     	call qword ptr [rip + 0x14d16]
0x21b6a:   84 c0                                 	test al, al
0x21b6c:   0f 84 12 03 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21b72:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x21b76:   0c c0                                 	or al, 0xc0
0x21b78:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x21b7c:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x21b81:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21b89:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x21b90:   41 b9 00 00 00 00                     	mov r9d, 0
0x21b96:   41 b8 08 00 00 00                     	mov r8d, 8
0x21b9c:   b9 00 00 00 00                        	mov ecx, 0
0x21ba1:   ba 00 00 00 00                        	mov edx, 0
0x21ba6:   be 12 00 00 00                        	mov esi, 0x12
0x21bab:   48 89 df                              	mov rdi, rbx
0x21bae:   ff 15 d4 4c 01 00                     	call qword ptr [rip + 0x14cd4]
0x21bb4:   84 c0                                 	test al, al
0x21bb6:   0f 84 c8 02 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21bbc:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x21bc5:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21bcd:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x21bd4:   41 b9 00 00 00 00                     	mov r9d, 0
0x21bda:   41 b8 01 00 00 00                     	mov r8d, 1
0x21be0:   b9 05 00 00 00                        	mov ecx, 5
0x21be5:   ba 00 00 00 00                        	mov edx, 0
0x21bea:   be 10 00 00 00                        	mov esi, 0x10
0x21bef:   48 89 df                              	mov rdi, rbx
0x21bf2:   ff 15 90 4c 01 00                     	call qword ptr [rip + 0x14c90]
0x21bf8:   84 c0                                 	test al, al
0x21bfa:   0f 84 84 02 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21c00:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x21c09:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21c11:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x21c18:   41 b9 00 00 00 00                     	mov r9d, 0
0x21c1e:   41 b8 01 00 00 00                     	mov r8d, 1
0x21c24:   b9 05 00 00 00                        	mov ecx, 5
0x21c29:   ba 00 00 00 00                        	mov edx, 0
0x21c2e:   be 10 00 00 00                        	mov esi, 0x10
0x21c33:   48 89 df                              	mov rdi, rbx
0x21c36:   ff 15 4c 4c 01 00                     	call qword ptr [rip + 0x14c4c]
0x21c3c:   84 c0                                 	test al, al
0x21c3e:   0f 84 40 02 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21c44:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x21c4d:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21c55:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x21c5c:   41 b9 00 00 00 00                     	mov r9d, 0
0x21c62:   41 b8 01 00 00 00                     	mov r8d, 1
0x21c68:   b9 05 00 00 00                        	mov ecx, 5
0x21c6d:   ba 00 00 00 00                        	mov edx, 0
0x21c72:   be 0f 00 00 00                        	mov esi, 0xf
0x21c77:   48 89 df                              	mov rdi, rbx
0x21c7a:   ff 15 08 4c 01 00                     	call qword ptr [rip + 0x14c08]
0x21c80:   84 c0                                 	test al, al
0x21c82:   0f 85 03 02 00 00                     	jne 0x21e8b <BLACKWIDOW_ProgramVcoPor+0x473>
0x21c88:   e9 f7 01 00 00                        	jmp 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21c8d:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x21c91:   48 89 04 24                           	mov qword ptr [rsp], rax
0x21c95:   41 b9 00 00 00 00                     	mov r9d, 0
0x21c9b:   41 b8 01 00 00 00                     	mov r8d, 1
0x21ca1:   b9 04 00 00 00                        	mov ecx, 4
0x21ca6:   ba 00 00 00 00                        	mov edx, 0
0x21cab:   be 11 00 00 00                        	mov esi, 0x11
0x21cb0:   48 89 df                              	mov rdi, rbx
0x21cb3:   ff 15 c7 4b 01 00                     	call qword ptr [rip + 0x14bc7]
0x21cb9:   48 83 7d e8 00                        	cmp qword ptr [rbp - 0x18], 0
0x21cbe:   ba 00 00 00 00                        	mov edx, 0
0x21cc3:   0f 44 c2                              	cmove eax, edx
0x21cc6:   84 c0                                 	test al, al
0x21cc8:   0f 84 b6 01 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21cce:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x21cd2:   48 89 04 24                           	mov qword ptr [rsp], rax
0x21cd6:   41 b9 00 00 00 00                     	mov r9d, 0
0x21cdc:   41 b8 04 00 00 00                     	mov r8d, 4
0x21ce2:   b9 00 00 00 00                        	mov ecx, 0
0x21ce7:   ba 00 00 00 00                        	mov edx, 0
0x21cec:   be 10 00 00 00                        	mov esi, 0x10
0x21cf1:   48 89 df                              	mov rdi, rbx
0x21cf4:   ff 15 86 4b 01 00                     	call qword ptr [rip + 0x14b86]
0x21cfa:   84 c0                                 	test al, al
0x21cfc:   0f 84 82 01 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21d02:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x21d06:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x21d0b:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21d13:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x21d1a:   41 b9 00 00 00 00                     	mov r9d, 0
0x21d20:   41 b8 04 00 00 00                     	mov r8d, 4
0x21d26:   b9 00 00 00 00                        	mov ecx, 0
0x21d2b:   ba 00 00 00 00                        	mov edx, 0
0x21d30:   be 0f 00 00 00                        	mov esi, 0xf
0x21d35:   48 89 df                              	mov rdi, rbx
0x21d38:   ff 15 4a 4b 01 00                     	call qword ptr [rip + 0x14b4a]
0x21d3e:   84 c0                                 	test al, al
0x21d40:   0f 84 3e 01 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21d46:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x21d4f:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21d57:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x21d5e:   41 b9 00 00 00 00                     	mov r9d, 0
0x21d64:   41 b8 01 00 00 00                     	mov r8d, 1
0x21d6a:   b9 06 00 00 00                        	mov ecx, 6
0x21d6f:   ba 00 00 00 00                        	mov edx, 0
0x21d74:   be 0f 00 00 00                        	mov esi, 0xf
0x21d79:   48 89 df                              	mov rdi, rbx
0x21d7c:   ff 15 06 4b 01 00                     	call qword ptr [rip + 0x14b06]
0x21d82:   84 c0                                 	test al, al
0x21d84:   0f 84 fa 00 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21d8a:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x21d93:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21d9b:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x21da2:   41 b9 00 00 00 00                     	mov r9d, 0
0x21da8:   41 b8 01 00 00 00                     	mov r8d, 1
0x21dae:   b9 05 00 00 00                        	mov ecx, 5
0x21db3:   ba 00 00 00 00                        	mov edx, 0
0x21db8:   be 0f 00 00 00                        	mov esi, 0xf
0x21dbd:   48 89 df                              	mov rdi, rbx
0x21dc0:   ff 15 c2 4a 01 00                     	call qword ptr [rip + 0x14ac2]
0x21dc6:   84 c0                                 	test al, al
0x21dc8:   0f 84 b6 00 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21dce:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x21dd2:   48 89 04 24                           	mov qword ptr [rsp], rax
0x21dd6:   41 b9 00 00 00 00                     	mov r9d, 0
0x21ddc:   41 b8 08 00 00 00                     	mov r8d, 8
0x21de2:   b9 00 00 00 00                        	mov ecx, 0
0x21de7:   ba 00 00 00 00                        	mov edx, 0
0x21dec:   be 12 00 00 00                        	mov esi, 0x12
0x21df1:   48 89 df                              	mov rdi, rbx
0x21df4:   ff 15 86 4a 01 00                     	call qword ptr [rip + 0x14a86]
0x21dfa:   84 c0                                 	test al, al
0x21dfc:   0f 84 82 00 00 00                     	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21e02:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x21e06:   24 7f                                 	and al, 0x7f
0x21e08:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x21e0c:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x21e11:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21e19:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x21e20:   41 b9 00 00 00 00                     	mov r9d, 0
0x21e26:   41 b8 08 00 00 00                     	mov r8d, 8
0x21e2c:   b9 00 00 00 00                        	mov ecx, 0
0x21e31:   ba 00 00 00 00                        	mov edx, 0
0x21e36:   be 12 00 00 00                        	mov esi, 0x12
0x21e3b:   48 89 df                              	mov rdi, rbx
0x21e3e:   ff 15 44 4a 01 00                     	call qword ptr [rip + 0x14a44]
0x21e44:   84 c0                                 	test al, al
0x21e46:   74 3c                                 	je 0x21e84 <BLACKWIDOW_ProgramVcoPor+0x46c>
0x21e48:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x21e51:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21e59:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x21e60:   41 b9 00 00 00 00                     	mov r9d, 0
0x21e66:   41 b8 02 00 00 00                     	mov r8d, 2
0x21e6c:   b9 05 00 00 00                        	mov ecx, 5
0x21e71:   ba 00 00 00 00                        	mov edx, 0
0x21e76:   be 0d 00 00 00                        	mov esi, 0xd ; "NU"
0x21e7b:   48 89 df                              	mov rdi, rbx
0x21e7e:   ff 15 04 4a 01 00                     	call qword ptr [rip + 0x14a04]
0x21e84:   48 83 c4 38                           	add rsp, 0x38
0x21e88:   5b                                    	pop rbx
0x21e89:   c9                                    	leave 
0x21e8a:   c3                                    	ret 
0x21e8b:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x21e8f:   48 89 04 24                           	mov qword ptr [rsp], rax
0x21e93:   41 b9 00 00 00 00                     	mov r9d, 0
0x21e99:   41 b8 01 00 00 00                     	mov r8d, 1
0x21e9f:   b9 04 00 00 00                        	mov ecx, 4
0x21ea4:   ba 00 00 00 00                        	mov edx, 0
0x21ea9:   be 11 00 00 00                        	mov esi, 0x11
0x21eae:   48 89 df                              	mov rdi, rbx
0x21eb1:   ff 15 c9 49 01 00                     	call qword ptr [rip + 0x149c9]
0x21eb7:   48 83 7d e8 00                        	cmp qword ptr [rbp - 0x18], 0
0x21ebc:   0f 85 04 fe ff ff                     	jne 0x21cc6 <BLACKWIDOW_ProgramVcoPor+0x2ae>
0x21ec2:   84 c0                                 	test al, al
0x21ec4:   0f 84 fc fd ff ff                     	je 0x21cc6 <BLACKWIDOW_ProgramVcoPor+0x2ae>
0x21eca:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x21ece:   48 89 04 24                           	mov qword ptr [rsp], rax
0x21ed2:   41 b9 00 00 00 00                     	mov r9d, 0
0x21ed8:   41 b8 01 00 00 00                     	mov r8d, 1
; function: BLACKWIDOW_ProgramVcoChannelChange at 0x21ede -- 0x21f0e
0x21ede:   b9 04 00 00 00                        	mov ecx, 4
0x21ee3:   ba 00 00 00 00                        	mov edx, 0
0x21ee8:   be 11 00 00 00                        	mov esi, 0x11
0x21eed:   48 89 df                              	mov rdi, rbx
0x21ef0:   ff 15 8a 49 01 00                     	call qword ptr [rip + 0x1498a]
0x21ef6:   48 83 7d e8 00                        	cmp qword ptr [rbp - 0x18], 0
0x21efb:   0f 85 c5 fd ff ff                     	jne 0x21cc6
0x21f01:   84 c0                                 	test al, al
0x21f03:   0f 85 84 fd ff ff                     	jne 0x21c8d
0x21f09:   e9 b8 fd ff ff                        	jmp 0x21cc6
; function: BLACKWIDOW_ProgramVcoChannelChange at 0x21f0e -- 0x22225
0x21f0e:   55                                    	push rbp
0x21f0f:   48 89 e5                              	mov rbp, rsp
0x21f12:   41 55                                 	push r13
0x21f14:   41 54                                 	push r12
0x21f16:   53                                    	push rbx
0x21f17:   48 83 ec 38                           	sub rsp, 0x38
0x21f1b:   e8 d0 cc 01 00                        	call 0x3ebf0 <mcount>
0x21f20:   49 89 fc                              	mov r12, rdi
0x21f23:   48 c7 45 d8 00 00 00 00               	mov qword ptr [rbp - 0x28], 0
0x21f2b:   48 85 ff                              	test rdi, rdi
0x21f2e:   0f 95 c0                              	setne al
0x21f31:   0f 84 54 02 00 00                     	je 0x2218b <BLACKWIDOW_ProgramVcoChannelChange+0x27d>
0x21f37:   48 8d 45 d8                           	lea rax, [rbp - 0x28]
0x21f3b:   48 89 04 24                           	mov qword ptr [rsp], rax
0x21f3f:   41 b9 00 00 00 00                     	mov r9d, 0
0x21f45:   41 b8 08 00 00 00                     	mov r8d, 8
0x21f4b:   b9 00 00 00 00                        	mov ecx, 0
0x21f50:   ba 00 00 00 00                        	mov edx, 0
0x21f55:   be 12 00 00 00                        	mov esi, 0x12
0x21f5a:   ff 15 20 49 01 00                     	call qword ptr [rip + 0x14920]
0x21f60:   84 c0                                 	test al, al
0x21f62:   0f 84 23 02 00 00                     	je 0x2218b <BLACKWIDOW_ProgramVcoChannelChange+0x27d>
0x21f68:   48 8b 45 d8                           	mov rax, qword ptr [rbp - 0x28]
0x21f6c:   24 7f                                 	and al, 0x7f
0x21f6e:   48 83 c8 40                           	or rax, 0x40
0x21f72:   48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x21f76:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x21f7b:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21f83:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x21f8a:   41 b9 00 00 00 00                     	mov r9d, 0
0x21f90:   41 b8 08 00 00 00                     	mov r8d, 8
0x21f96:   b9 00 00 00 00                        	mov ecx, 0
0x21f9b:   ba 00 00 00 00                        	mov edx, 0
0x21fa0:   be 12 00 00 00                        	mov esi, 0x12
0x21fa5:   4c 89 e7                              	mov rdi, r12
0x21fa8:   ff 15 da 48 01 00                     	call qword ptr [rip + 0x148da]
0x21fae:   84 c0                                 	test al, al
0x21fb0:   0f 84 d5 01 00 00                     	je 0x2218b <BLACKWIDOW_ProgramVcoChannelChange+0x27d>
0x21fb6:   48 c7 44 24 10 02 00 00 00            	mov qword ptr [rsp + 0x10], 2
0x21fbf:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x21fc7:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x21fce:   41 b9 00 00 00 00                     	mov r9d, 0
0x21fd4:   41 b8 02 00 00 00                     	mov r8d, 2
0x21fda:   b9 00 00 00 00                        	mov ecx, 0
0x21fdf:   ba 00 00 00 00                        	mov edx, 0
0x21fe4:   be 13 00 00 00                        	mov esi, 0x13
0x21fe9:   4c 89 e7                              	mov rdi, r12
0x21fec:   ff 15 96 48 01 00                     	call qword ptr [rip + 0x14896]
0x21ff2:   84 c0                                 	test al, al
0x21ff4:   0f 84 91 01 00 00                     	je 0x2218b <BLACKWIDOW_ProgramVcoChannelChange+0x27d>
0x21ffa:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x22003:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2200b:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x22012:   41 b9 00 00 00 00                     	mov r9d, 0
0x22018:   41 b8 01 00 00 00                     	mov r8d, 1
0x2201e:   b9 07 00 00 00                        	mov ecx, 7
0x22023:   ba 00 00 00 00                        	mov edx, 0
0x22028:   be 13 00 00 00                        	mov esi, 0x13
0x2202d:   4c 89 e7                              	mov rdi, r12
0x22030:   ff 15 52 48 01 00                     	call qword ptr [rip + 0x14852]
0x22036:   84 c0                                 	test al, al
0x22038:   0f 84 4d 01 00 00                     	je 0x2218b <BLACKWIDOW_ProgramVcoChannelChange+0x27d>
0x2203e:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x22047:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2204f:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x22056:   41 b9 00 00 00 00                     	mov r9d, 0
0x2205c:   41 b8 01 00 00 00                     	mov r8d, 1
0x22062:   b9 05 00 00 00                        	mov ecx, 5
0x22067:   ba 00 00 00 00                        	mov edx, 0
0x2206c:   be 13 00 00 00                        	mov esi, 0x13
0x22071:   4c 89 e7                              	mov rdi, r12
0x22074:   ff 15 0e 48 01 00                     	call qword ptr [rip + 0x1480e]
0x2207a:   84 c0                                 	test al, al
0x2207c:   0f 84 09 01 00 00                     	je 0x2218b <BLACKWIDOW_ProgramVcoChannelChange+0x27d>
0x22082:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x2208b:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22093:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x2209a:   41 b9 00 00 00 00                     	mov r9d, 0
0x220a0:   41 b8 01 00 00 00                     	mov r8d, 1
0x220a6:   b9 05 00 00 00                        	mov ecx, 5
0x220ab:   ba 00 00 00 00                        	mov edx, 0
0x220b0:   be 13 00 00 00                        	mov esi, 0x13
0x220b5:   4c 89 e7                              	mov rdi, r12
0x220b8:   ff 15 ca 47 01 00                     	call qword ptr [rip + 0x147ca]
0x220be:   84 c0                                 	test al, al
0x220c0:   0f 84 c5 00 00 00                     	je 0x2218b <BLACKWIDOW_ProgramVcoChannelChange+0x27d>
0x220c6:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x220cf:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x220d7:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x220de:   41 b9 00 00 00 00                     	mov r9d, 0
0x220e4:   41 b8 01 00 00 00                     	mov r8d, 1
0x220ea:   b9 07 00 00 00                        	mov ecx, 7
0x220ef:   ba 00 00 00 00                        	mov edx, 0
0x220f4:   be 13 00 00 00                        	mov esi, 0x13
0x220f9:   4c 89 e7                              	mov rdi, r12
0x220fc:   ff 15 86 47 01 00                     	call qword ptr [rip + 0x14786]
0x22102:   84 c0                                 	test al, al
0x22104:   0f 84 81 00 00 00                     	je 0x2218b <BLACKWIDOW_ProgramVcoChannelChange+0x27d>
0x2210a:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x22113:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2211b:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x22122:   41 b9 00 00 00 00                     	mov r9d, 0
0x22128:   41 b8 01 00 00 00                     	mov r8d, 1
0x2212e:   b9 04 00 00 00                        	mov ecx, 4
0x22133:   ba 00 00 00 00                        	mov edx, 0
0x22138:   be 13 00 00 00                        	mov esi, 0x13
0x2213d:   4c 89 e7                              	mov rdi, r12
0x22140:   ff 15 42 47 01 00                     	call qword ptr [rip + 0x14742]
0x22146:   84 c0                                 	test al, al
0x22148:   74 41                                 	je 0x2218b <BLACKWIDOW_ProgramVcoChannelChange+0x27d>
0x2214a:   bb 02 00 00 00                        	mov ebx, 2
0x2214f:   4c 8d 6d d8                           	lea r13, [rbp - 0x28]
0x22153:   4c 89 2c 24                           	mov qword ptr [rsp], r13
0x22157:   41 b9 00 00 00 00                     	mov r9d, 0
0x2215d:   41 b8 01 00 00 00                     	mov r8d, 1
0x22163:   b9 04 00 00 00                        	mov ecx, 4
0x22168:   ba 00 00 00 00                        	mov edx, 0
0x2216d:   be 15 00 00 00                        	mov esi, 0x15
0x22172:   4c 89 e7                              	mov rdi, r12
0x22175:   ff 15 05 47 01 00                     	call qword ptr [rip + 0x14705]
0x2217b:   48 83 eb 01                           	sub rbx, 1
0x2217f:   48 83 7d d8 01                        	cmp qword ptr [rbp - 0x28], 1
0x22184:   74 05                                 	je 0x2218b <BLACKWIDOW_ProgramVcoChannelChange+0x27d>
0x22186:   48 85 db                              	test rbx, rbx
0x22189:   75 c8                                 	jne 0x22153 <BLACKWIDOW_ProgramVcoChannelChange+0x245>
0x2218b:   48 83 7d d8 01                        	cmp qword ptr [rbp - 0x28], 1
0x22190:   0f 85 ba 00 00 00                     	jne 0x22250
0x22196:   84 c0                                 	test al, al
0x22198:   0f 84 b2 00 00 00                     	je 0x22250
0x2219e:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x221a7:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x221af:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x221b6:   41 b9 00 00 00 00                     	mov r9d, 0
0x221bc:   41 b8 01 00 00 00                     	mov r8d, 1
0x221c2:   b9 04 00 00 00                        	mov ecx, 4
0x221c7:   ba 00 00 00 00                        	mov edx, 0
0x221cc:   be 13 00 00 00                        	mov esi, 0x13
0x221d1:   4c 89 e7                              	mov rdi, r12
0x221d4:   ff 15 ae 46 01 00                     	call qword ptr [rip + 0x146ae]
0x221da:   84 c0                                 	test al, al
0x221dc:   74 72                                 	je 0x22250
0x221de:   48 8d 45 d8                           	lea rax, [rbp - 0x28]
0x221e2:   48 89 04 24                           	mov qword ptr [rsp], rax
0x221e6:   41 b9 00 00 00 00                     	mov r9d, 0
0x221ec:   41 b8 08 00 00 00                     	mov r8d, 8
0x221f2:   b9 00 00 00 00                        	mov ecx, 0
0x221f7:   ba 00 00 00 00                        	mov edx, 0
0x221fc:   be 12 00 00 00                        	mov esi, 0x12
0x22201:   4c 89 e7                              	mov rdi, r12
0x22204:   ff 15 76 46 01 00                     	call qword ptr [rip + 0x14676]
0x2220a:   84 c0                                 	test al, al
0x2220c:   74 42                                 	je 0x22250
0x2220e:   48 8b 45 d8                           	mov rax, qword ptr [rbp - 0x28]
0x22212:   24 7f                                 	and al, 0x7f
0x22214:   48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0x22218:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x2221d:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x22225 -- 0x2222b
0x22225:   c7 04 24 00 00 00                                  |..$...          |
; function: BLACKWIDOW_SetBandwidthConfig at 0x2222b -- 0x2225b
0x2222b:   00 41 b9                              	add byte ptr [rcx - 0x47], al
0x2222e:   00 00                                 	add byte ptr [rax], al
0x22230:   00 00                                 	add byte ptr [rax], al
0x22232:   41 b8 08 00 00 00                     	mov r8d, 8
0x22238:   b9 00 00 00 00                        	mov ecx, 0
0x2223d:   ba 00 00 00 00                        	mov edx, 0
0x22242:   be 12 00 00 00                        	mov esi, 0x12
0x22247:   4c 89 e7                              	mov rdi, r12
0x2224a:   ff 15 38 46 01 00                     	call qword ptr [rip + 0x14638]
0x22250:   48 83 c4 38                           	add rsp, 0x38
0x22254:   5b                                    	pop rbx
0x22255:   41 5c                                 	pop r12
0x22257:   41 5d                                 	pop r13
0x22259:   c9                                    	leave 
0x2225a:   c3                                    	ret 
; function: BLACKWIDOW_SetBandwidthConfig at 0x2225b -- 0x222c9
0x2225b:   55                                    	push rbp
0x2225c:   48 89 e5                              	mov rbp, rsp
0x2225f:   48 83 ec 30                           	sub rsp, 0x30
0x22263:   48 89 5d f0                           	mov qword ptr [rbp - 0x10], rbx
0x22267:   4c 89 65 f8                           	mov qword ptr [rbp - 8], r12
0x2226b:   e8 80 c9 01 00                        	call 0x3ebf0 <mcount>
0x22270:   48 89 fb                              	mov rbx, rdi
0x22273:   41 89 d4                              	mov r12d, edx
0x22276:   48 85 ff                              	test rdi, rdi
0x22279:   0f 95 c0                              	setne al
0x2227c:   74 76                                 	je 0x222f4
0x2227e:   89 f6                                 	mov esi, esi
0x22280:   48 89 74 24 10                        	mov qword ptr [rsp + 0x10], rsi
0x22285:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2228d:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x22294:   41 b9 00 00 00 00                     	mov r9d, 0
0x2229a:   41 b8 04 00 00 00                     	mov r8d, 4
0x222a0:   b9 00 00 00 00                        	mov ecx, 0
0x222a5:   ba 00 00 00 00                        	mov edx, 0
0x222aa:   be 0a 00 00 00                        	mov esi, 0xa
0x222af:   ff 15 d3 45 01 00                     	call qword ptr [rip + 0x145d3]
0x222b5:   84 c0                                 	test al, al
0x222b7:   74 3b                                 	je 0x222f4
0x222b9:   45 89 e4                              	mov r12d, r12d
0x222bc:   4c 89 64 24 10                        	mov qword ptr [rsp + 0x10], r12
0x222c1:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x222c9 -- 0x222ce
0x222c9:   c7 04 24 01 00                                     |..$..           |
; function: BLACKWIDOW_SetFilterBandwidth at 0x222ce -- 0x222fe
0x222ce:   00 00                                 	add byte ptr [rax], al
0x222d0:   41 b9 00 00 00 00                     	mov r9d, 0
0x222d6:   41 b8 07 00 00 00                     	mov r8d, 7
0x222dc:   b9 01 00 00 00                        	mov ecx, 1
0x222e1:   ba 00 00 00 00                        	mov edx, 0
0x222e6:   be 0b 00 00 00                        	mov esi, 0xb
0x222eb:   48 89 df                              	mov rdi, rbx
0x222ee:   ff 15 94 45 01 00                     	call qword ptr [rip + 0x14594]
0x222f4:   48 8b 5d f0                           	mov rbx, qword ptr [rbp - 0x10]
0x222f8:   4c 8b 65 f8                           	mov r12, qword ptr [rbp - 8]
0x222fc:   c9                                    	leave 
0x222fd:   c3                                    	ret 
; function: BLACKWIDOW_SetFilterBandwidth at 0x222fe -- 0x22346
0x222fe:   55                                    	push rbp
0x222ff:   48 89 e5                              	mov rbp, rsp
0x22302:   e8 e9 c8 01 00                        	call 0x3ebf0 <mcount>
0x22307:   48 89 f1                              	mov rcx, rsi
0x2230a:   be 08 00 00 00                        	mov esi, 8
0x2230f:   48 81 f9 c7 af 00 00                  	cmp rcx, 0xafc7
0x22316:   77 1b                                 	ja 0x22333 <BLACKWIDOW_SetFilterBandwidth+0x35>
0x22318:   40 b6 0a                              	mov sil, 0xa
0x2231b:   48 81 f9 b7 88 00 00                  	cmp rcx, 0x88b7
0x22322:   77 0f                                 	ja 0x22333 <BLACKWIDOW_SetFilterBandwidth+0x35>
0x22324:   48 81 f9 a8 61 00 00                  	cmp rcx, 0x61a8
0x2232b:   19 f6                                 	sbb esi, esi
0x2232d:   83 e6 03                              	and esi, 3
0x22330:   83 c6 0c                              	add esi, 0xc ; "GNU"
0x22333:   48 81 e9 d0 07 00 00                  	sub rcx, 0x7d0
0x2233a:   b8 00 00 00 00                        	mov eax, 0
0x2233f:   49 c7 c0 00 00 00 00                  	mov r8, 0
; data inside code section at 0x22346 -- 0x22347
0x22346:   48                                                 |H               |
; function: BLACKWIDOW_Sleep at 0x22347 -- 0x2234f
0x22347:   3b 0d b3 b9 00 00                     	cmp ecx, dword ptr [rip + 0xb9b3]
0x2234d:   72 17                                 	jb 0x22366
; data inside code section at 0x2234f -- 0x22352
0x2234f:   48 83 c0                                           |H..             |
; function: BLACKWIDOW_ProgramPllPor at 0x22352 -- 0x22377
0x22352:   01 48 89                              	add dword ptr [rax - 0x77], ecx
0x22355:   c2 48 c1                              	ret 0xc148
; data inside code section at 0x22358 -- 0x22366
0x22358:   e2 04 49 39 0c 10 77 06  48 83 f8 23 76 e9         |..I9..w.H..#v.  |
0x22366:   48 c1 e0 04                           	shl rax, 4
0x2236a:   8b 90 00 00 00 00                     	mov edx, dword ptr [rax]
0x22370:   e8 e6 fe ff ff                        	call 0x2225b <BLACKWIDOW_SetBandwidthConfig>
0x22375:   c9                                    	leave 
0x22376:   c3                                    	ret 
; function: BLACKWIDOW_Sleep at 0x22377 -- 0x22382
0x22377:   55                                    	push rbp
0x22378:   48 89 e5                              	mov rbp, rsp
0x2237b:   e8 70 c8 01 00                        	call 0x3ebf0 <mcount>
0x22380:   c9                                    	leave 
0x22381:   c3                                    	ret 
; function: BLACKWIDOW_ProgramPllPor at 0x22382 -- 0x224b5
0x22382:   55                                    	push rbp
0x22383:   48 89 e5                              	mov rbp, rsp
0x22386:   53                                    	push rbx
0x22387:   48 83 ec 28                           	sub rsp, 0x28
0x2238b:   e8 60 c8 01 00                        	call 0x3ebf0 <mcount>
0x22390:   48 89 fb                              	mov rbx, rdi
0x22393:   48 85 ff                              	test rdi, rdi
0x22396:   0f 95 c0                              	setne al
0x22399:   0f 84 41 01 00 00                     	je 0x224e0
0x2239f:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x223a8:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x223b0:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x223b7:   41 b9 00 00 00 00                     	mov r9d, 0
0x223bd:   41 b8 01 00 00 00                     	mov r8d, 1
0x223c3:   b9 06 00 00 00                        	mov ecx, 6
0x223c8:   ba 00 00 00 00                        	mov edx, 0
0x223cd:   be 1a 00 00 00                        	mov esi, 0x1a
0x223d2:   ff 15 b0 44 01 00                     	call qword ptr [rip + 0x144b0]
0x223d8:   84 c0                                 	test al, al
0x223da:   0f 84 00 01 00 00                     	je 0x224e0
0x223e0:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x223e9:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x223f1:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x223f8:   41 b9 00 00 00 00                     	mov r9d, 0
0x223fe:   41 b8 01 00 00 00                     	mov r8d, 1
0x22404:   b9 00 00 00 00                        	mov ecx, 0
0x22409:   ba 00 00 00 00                        	mov edx, 0
0x2240e:   be 18 00 00 00                        	mov esi, 0x18
0x22413:   48 89 df                              	mov rdi, rbx
0x22416:   ff 15 6c 44 01 00                     	call qword ptr [rip + 0x1446c]
0x2241c:   84 c0                                 	test al, al
0x2241e:   0f 84 bc 00 00 00                     	je 0x224e0
0x22424:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x2242d:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22435:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x2243c:   41 b9 00 00 00 00                     	mov r9d, 0
0x22442:   41 b8 01 00 00 00                     	mov r8d, 1
0x22448:   b9 07 00 00 00                        	mov ecx, 7
0x2244d:   ba 00 00 00 00                        	mov edx, 0
0x22452:   be 18 00 00 00                        	mov esi, 0x18
0x22457:   48 89 df                              	mov rdi, rbx
0x2245a:   ff 15 28 44 01 00                     	call qword ptr [rip + 0x14428]
0x22460:   84 c0                                 	test al, al
0x22462:   74 7c                                 	je 0x224e0
0x22464:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x2246d:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22475:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x2247c:   41 b9 00 00 00 00                     	mov r9d, 0
0x22482:   41 b8 01 00 00 00                     	mov r8d, 1
0x22488:   b9 07 00 00 00                        	mov ecx, 7
0x2248d:   ba 00 00 00 00                        	mov edx, 0
0x22492:   be 1b 00 00 00                        	mov esi, 0x1b
0x22497:   48 89 df                              	mov rdi, rbx
0x2249a:   ff 15 e8 43 01 00                     	call qword ptr [rip + 0x143e8]
0x224a0:   84 c0                                 	test al, al
0x224a2:   74 3c                                 	je 0x224e0
0x224a4:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x224ad:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x224b5 -- 0x224b7
0x224b5:   c7 04                                              |..              |
; function: BLACKWIDOW_SetPowerMode at 0x224b7 -- 0x224e7
0x224b7:   24 01                                 	and al, 1
0x224b9:   00 00                                 	add byte ptr [rax], al
0x224bb:   00 41 b9                              	add byte ptr [rcx - 0x47], al
0x224be:   00 00                                 	add byte ptr [rax], al
0x224c0:   00 00                                 	add byte ptr [rax], al
0x224c2:   41 b8 01 00 00 00                     	mov r8d, 1
0x224c8:   b9 00 00 00 00                        	mov ecx, 0
0x224cd:   ba 00 00 00 00                        	mov edx, 0
0x224d2:   be 18 00 00 00                        	mov esi, 0x18
0x224d7:   48 89 df                              	mov rdi, rbx
0x224da:   ff 15 a8 43 01 00                     	call qword ptr [rip + 0x143a8]
0x224e0:   48 83 c4 28                           	add rsp, 0x28
0x224e4:   5b                                    	pop rbx
0x224e5:   c9                                    	leave 
0x224e6:   c3                                    	ret 
; function: BLACKWIDOW_SetPowerMode at 0x224e7 -- 0x23428
0x224e7:   55                                    	push rbp
0x224e8:   48 89 e5                              	mov rbp, rsp
0x224eb:   41 54                                 	push r12
0x224ed:   53                                    	push rbx
0x224ee:   48 83 ec 30                           	sub rsp, 0x30
0x224f2:   e8 f9 c6 01 00                        	call 0x3ebf0 <mcount>
0x224f7:   48 89 fb                              	mov rbx, rdi
0x224fa:   41 89 f4                              	mov r12d, esi
0x224fd:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x22505:   85 f6                                 	test esi, esi
0x22507:   74 18                                 	je 0x22521 <BLACKWIDOW_SetPowerMode+0x3a>
0x22509:   41 8d 54 24 fe                        	lea edx, [r12 - 2]
0x2250e:   b8 00 00 00 00                        	mov eax, 0
0x22513:   83 fa 01                              	cmp edx, 1
0x22516:   0f 87 37 0f 00 00                     	ja 0x23453
0x2251c:   e9 fa 09 00 00                        	jmp 0x22f1b <BLACKWIDOW_SetPowerMode+0xa34>
0x22521:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22525:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22529:   41 b9 00 00 00 00                     	mov r9d, 0
0x2252f:   41 b8 08 00 00 00                     	mov r8d, 8
0x22535:   b9 00 00 00 00                        	mov ecx, 0
0x2253a:   ba 00 00 00 00                        	mov edx, 0
0x2253f:   be 02 00 00 00                        	mov esi, 2
0x22544:   ff 15 36 43 01 00                     	call qword ptr [rip + 0x14336]
0x2254a:   84 c0                                 	test al, al
0x2254c:   0f 84 01 0f 00 00                     	je 0x23453
0x22552:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22556:   0c 81                                 	or al, 0x81
0x22558:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x2255c:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22561:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22569:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22570:   41 b9 00 00 00 00                     	mov r9d, 0
0x22576:   41 b8 08 00 00 00                     	mov r8d, 8
0x2257c:   b9 00 00 00 00                        	mov ecx, 0
0x22581:   ba 00 00 00 00                        	mov edx, 0
0x22586:   be 02 00 00 00                        	mov esi, 2
0x2258b:   48 89 df                              	mov rdi, rbx
0x2258e:   ff 15 f4 42 01 00                     	call qword ptr [rip + 0x142f4]
0x22594:   84 c0                                 	test al, al
0x22596:   0f 84 b7 0e 00 00                     	je 0x23453
0x2259c:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x225a0:   48 89 04 24                           	mov qword ptr [rsp], rax
0x225a4:   41 b9 00 00 00 00                     	mov r9d, 0
0x225aa:   41 b8 08 00 00 00                     	mov r8d, 8
0x225b0:   b9 00 00 00 00                        	mov ecx, 0
0x225b5:   ba 00 00 00 00                        	mov edx, 0
0x225ba:   be 06 00 00 00                        	mov esi, 6
0x225bf:   48 89 df                              	mov rdi, rbx
0x225c2:   ff 15 b8 42 01 00                     	call qword ptr [rip + 0x142b8]
0x225c8:   84 c0                                 	test al, al
0x225ca:   0f 84 83 0e 00 00                     	je 0x23453
0x225d0:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x225d4:   48 83 c8 39                           	or rax, 0x39
0x225d8:   83 e0 7f                              	and eax, 0x7f
0x225db:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x225df:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x225e4:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x225ec:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x225f3:   41 b9 00 00 00 00                     	mov r9d, 0
0x225f9:   41 b8 08 00 00 00                     	mov r8d, 8
0x225ff:   b9 00 00 00 00                        	mov ecx, 0
0x22604:   ba 00 00 00 00                        	mov edx, 0
0x22609:   be 06 00 00 00                        	mov esi, 6
0x2260e:   48 89 df                              	mov rdi, rbx
0x22611:   ff 15 71 42 01 00                     	call qword ptr [rip + 0x14271]
0x22617:   84 c0                                 	test al, al
0x22619:   0f 84 34 0e 00 00                     	je 0x23453
0x2261f:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22623:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22627:   41 b9 00 00 00 00                     	mov r9d, 0
0x2262d:   41 b8 08 00 00 00                     	mov r8d, 8
0x22633:   b9 00 00 00 00                        	mov ecx, 0
0x22638:   ba 00 00 00 00                        	mov edx, 0
0x2263d:   be 07 00 00 00                        	mov esi, 7
0x22642:   48 89 df                              	mov rdi, rbx
0x22645:   ff 15 35 42 01 00                     	call qword ptr [rip + 0x14235]
0x2264b:   84 c0                                 	test al, al
0x2264d:   0f 84 00 0e 00 00                     	je 0x23453
0x22653:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22657:   0c ae                                 	or al, 0xae
0x22659:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x2265d:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22662:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2266a:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22671:   41 b9 00 00 00 00                     	mov r9d, 0
0x22677:   41 b8 08 00 00 00                     	mov r8d, 8
0x2267d:   b9 00 00 00 00                        	mov ecx, 0
0x22682:   ba 00 00 00 00                        	mov edx, 0
0x22687:   be 07 00 00 00                        	mov esi, 7
0x2268c:   48 89 df                              	mov rdi, rbx
0x2268f:   ff 15 f3 41 01 00                     	call qword ptr [rip + 0x141f3]
0x22695:   84 c0                                 	test al, al
0x22697:   0f 84 b6 0d 00 00                     	je 0x23453
0x2269d:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x226a1:   48 89 04 24                           	mov qword ptr [rsp], rax
0x226a5:   41 b9 00 00 00 00                     	mov r9d, 0
0x226ab:   41 b8 08 00 00 00                     	mov r8d, 8
0x226b1:   b9 00 00 00 00                        	mov ecx, 0
0x226b6:   ba 00 00 00 00                        	mov edx, 0
0x226bb:   be 0f 00 00 00                        	mov esi, 0xf
0x226c0:   48 89 df                              	mov rdi, rbx
0x226c3:   ff 15 b7 41 01 00                     	call qword ptr [rip + 0x141b7]
0x226c9:   84 c0                                 	test al, al
0x226cb:   0f 84 82 0d 00 00                     	je 0x23453
0x226d1:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x226d5:   0c 80                                 	or al, 0x80
0x226d7:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x226db:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x226e0:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x226e8:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x226ef:   41 b9 00 00 00 00                     	mov r9d, 0
0x226f5:   41 b8 08 00 00 00                     	mov r8d, 8
0x226fb:   b9 00 00 00 00                        	mov ecx, 0
0x22700:   ba 00 00 00 00                        	mov edx, 0
0x22705:   be 0f 00 00 00                        	mov esi, 0xf
0x2270a:   48 89 df                              	mov rdi, rbx
0x2270d:   ff 15 75 41 01 00                     	call qword ptr [rip + 0x14175]
0x22713:   84 c0                                 	test al, al
0x22715:   0f 84 38 0d 00 00                     	je 0x23453
0x2271b:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x2271f:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22723:   41 b9 00 00 00 00                     	mov r9d, 0
0x22729:   41 b8 08 00 00 00                     	mov r8d, 8
0x2272f:   b9 00 00 00 00                        	mov ecx, 0
0x22734:   ba 00 00 00 00                        	mov edx, 0
0x22739:   be 18 00 00 00                        	mov esi, 0x18
0x2273e:   48 89 df                              	mov rdi, rbx
0x22741:   ff 15 39 41 01 00                     	call qword ptr [rip + 0x14139]
0x22747:   84 c0                                 	test al, al
0x22749:   0f 84 04 0d 00 00                     	je 0x23453
0x2274f:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22753:   83 e0 7f                              	and eax, 0x7f
0x22756:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x2275a:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x2275f:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22767:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x2276e:   41 b9 00 00 00 00                     	mov r9d, 0
0x22774:   41 b8 08 00 00 00                     	mov r8d, 8
0x2277a:   b9 00 00 00 00                        	mov ecx, 0
0x2277f:   ba 00 00 00 00                        	mov edx, 0
0x22784:   be 18 00 00 00                        	mov esi, 0x18
0x22789:   48 89 df                              	mov rdi, rbx
0x2278c:   ff 15 f6 40 01 00                     	call qword ptr [rip + 0x140f6]
0x22792:   84 c0                                 	test al, al
0x22794:   0f 84 b9 0c 00 00                     	je 0x23453
0x2279a:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x2279e:   48 89 04 24                           	mov qword ptr [rsp], rax
0x227a2:   41 b9 00 00 00 00                     	mov r9d, 0
0x227a8:   41 b8 08 00 00 00                     	mov r8d, 8
0x227ae:   b9 00 00 00 00                        	mov ecx, 0
0x227b3:   ba 00 00 00 00                        	mov edx, 0
0x227b8:   be 1a 00 00 00                        	mov esi, 0x1a
0x227bd:   48 89 df                              	mov rdi, rbx
0x227c0:   ff 15 ba 40 01 00                     	call qword ptr [rip + 0x140ba]
0x227c6:   84 c0                                 	test al, al
0x227c8:   0f 84 85 0c 00 00                     	je 0x23453
0x227ce:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x227d2:   0c c0                                 	or al, 0xc0
0x227d4:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x227d8:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x227dd:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x227e5:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x227ec:   41 b9 00 00 00 00                     	mov r9d, 0
0x227f2:   41 b8 08 00 00 00                     	mov r8d, 8
0x227f8:   b9 00 00 00 00                        	mov ecx, 0
0x227fd:   ba 00 00 00 00                        	mov edx, 0
0x22802:   be 1a 00 00 00                        	mov esi, 0x1a
0x22807:   48 89 df                              	mov rdi, rbx
0x2280a:   ff 15 78 40 01 00                     	call qword ptr [rip + 0x14078]
0x22810:   84 c0                                 	test al, al
0x22812:   0f 84 3b 0c 00 00                     	je 0x23453
0x22818:   48 c7 44 24 10 ff 00 00 00            	mov qword ptr [rsp + 0x10], 0xff
0x22821:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22829:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22830:   41 b9 00 00 00 00                     	mov r9d, 0
0x22836:   41 b8 08 00 00 00                     	mov r8d, 8
0x2283c:   b9 00 00 00 00                        	mov ecx, 0
0x22841:   ba 00 00 00 00                        	mov edx, 0
0x22846:   be 22 00 00 00                        	mov esi, 0x22
0x2284b:   48 89 df                              	mov rdi, rbx
0x2284e:   ff 15 34 40 01 00                     	call qword ptr [rip + 0x14034]
0x22854:   84 c0                                 	test al, al
0x22856:   0f 84 f7 0b 00 00                     	je 0x23453
0x2285c:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22860:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22864:   41 b9 00 00 00 00                     	mov r9d, 0
0x2286a:   41 b8 08 00 00 00                     	mov r8d, 8
0x22870:   b9 00 00 00 00                        	mov ecx, 0
0x22875:   ba 00 00 00 00                        	mov edx, 0
0x2287a:   be 23 00 00 00                        	mov esi, 0x23
0x2287f:   48 89 df                              	mov rdi, rbx
0x22882:   ff 15 f8 3f 01 00                     	call qword ptr [rip + 0x13ff8]
0x22888:   84 c0                                 	test al, al
0x2288a:   0f 84 c3 0b 00 00                     	je 0x23453
0x22890:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22894:   25 fe 00 00 00                        	and eax, 0xfe
0x22899:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x2289d:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x228a2:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x228aa:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x228b1:   41 b9 00 00 00 00                     	mov r9d, 0
0x228b7:   41 b8 08 00 00 00                     	mov r8d, 8
0x228bd:   b9 00 00 00 00                        	mov ecx, 0
0x228c2:   ba 00 00 00 00                        	mov edx, 0
0x228c7:   be 23 00 00 00                        	mov esi, 0x23
0x228cc:   48 89 df                              	mov rdi, rbx
0x228cf:   ff 15 b3 3f 01 00                     	call qword ptr [rip + 0x13fb3]
0x228d5:   84 c0                                 	test al, al
0x228d7:   0f 84 76 0b 00 00                     	je 0x23453
0x228dd:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x228e1:   48 89 04 24                           	mov qword ptr [rsp], rax
0x228e5:   41 b9 00 00 00 00                     	mov r9d, 0
0x228eb:   41 b8 08 00 00 00                     	mov r8d, 8
0x228f1:   b9 00 00 00 00                        	mov ecx, 0
0x228f6:   ba 00 00 00 00                        	mov edx, 0
0x228fb:   be 25 00 00 00                        	mov esi, 0x25
0x22900:   48 89 df                              	mov rdi, rbx
0x22903:   ff 15 77 3f 01 00                     	call qword ptr [rip + 0x13f77]
0x22909:   84 c0                                 	test al, al
0x2290b:   0f 84 42 0b 00 00                     	je 0x23453
0x22911:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22915:   48 83 c8 08                           	or rax, 8
0x22919:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x2291d:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22922:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2292a:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22931:   41 b9 00 00 00 00                     	mov r9d, 0
0x22937:   41 b8 08 00 00 00                     	mov r8d, 8
0x2293d:   b9 00 00 00 00                        	mov ecx, 0
0x22942:   ba 00 00 00 00                        	mov edx, 0
0x22947:   be 25 00 00 00                        	mov esi, 0x25
0x2294c:   48 89 df                              	mov rdi, rbx
0x2294f:   ff 15 33 3f 01 00                     	call qword ptr [rip + 0x13f33]
0x22955:   84 c0                                 	test al, al
0x22957:   0f 84 f6 0a 00 00                     	je 0x23453
0x2295d:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22961:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22965:   41 b9 00 00 00 00                     	mov r9d, 0
0x2296b:   41 b8 08 00 00 00                     	mov r8d, 8
0x22971:   b9 00 00 00 00                        	mov ecx, 0
0x22976:   ba 00 00 00 00                        	mov edx, 0
0x2297b:   be 27 00 00 00                        	mov esi, 0x27
0x22980:   48 89 df                              	mov rdi, rbx
0x22983:   ff 15 f7 3e 01 00                     	call qword ptr [rip + 0x13ef7]
0x22989:   84 c0                                 	test al, al
0x2298b:   0f 84 c2 0a 00 00                     	je 0x23453
0x22991:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22995:   0c c0                                 	or al, 0xc0
0x22997:   25 df 00 00 00                        	and eax, 0xdf
0x2299c:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x229a0:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x229a5:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x229ad:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x229b4:   41 b9 00 00 00 00                     	mov r9d, 0
0x229ba:   41 b8 08 00 00 00                     	mov r8d, 8
0x229c0:   b9 00 00 00 00                        	mov ecx, 0
0x229c5:   ba 00 00 00 00                        	mov edx, 0
0x229ca:   be 27 00 00 00                        	mov esi, 0x27
0x229cf:   48 89 df                              	mov rdi, rbx
0x229d2:   ff 15 b0 3e 01 00                     	call qword ptr [rip + 0x13eb0]
0x229d8:   84 c0                                 	test al, al
0x229da:   0f 84 73 0a 00 00                     	je 0x23453
0x229e0:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x229e4:   48 89 04 24                           	mov qword ptr [rsp], rax
0x229e8:   41 b9 00 00 00 00                     	mov r9d, 0
0x229ee:   41 b8 08 00 00 00                     	mov r8d, 8
0x229f4:   b9 00 00 00 00                        	mov ecx, 0
0x229f9:   ba 00 00 00 00                        	mov edx, 0
0x229fe:   be 24 00 00 00                        	mov esi, 0x24
0x22a03:   48 89 df                              	mov rdi, rbx
0x22a06:   ff 15 74 3e 01 00                     	call qword ptr [rip + 0x13e74]
0x22a0c:   84 c0                                 	test al, al
0x22a0e:   0f 84 3f 0a 00 00                     	je 0x23453
0x22a14:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22a18:   48 83 c8 04                           	or rax, 4
0x22a1c:   25 cf 00 00 00                        	and eax, 0xcf
0x22a21:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22a25:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22a2a:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22a32:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22a39:   41 b9 00 00 00 00                     	mov r9d, 0
0x22a3f:   41 b8 08 00 00 00                     	mov r8d, 8
0x22a45:   b9 00 00 00 00                        	mov ecx, 0
0x22a4a:   ba 00 00 00 00                        	mov edx, 0
0x22a4f:   be 24 00 00 00                        	mov esi, 0x24
0x22a54:   48 89 df                              	mov rdi, rbx
0x22a57:   ff 15 2b 3e 01 00                     	call qword ptr [rip + 0x13e2b]
0x22a5d:   84 c0                                 	test al, al
0x22a5f:   0f 84 ee 09 00 00                     	je 0x23453
0x22a65:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22a69:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22a6d:   41 b9 00 00 00 00                     	mov r9d, 0
0x22a73:   41 b8 08 00 00 00                     	mov r8d, 8
0x22a79:   b9 00 00 00 00                        	mov ecx, 0
0x22a7e:   ba 00 00 00 00                        	mov edx, 0
0x22a83:   be 0d 00 00 00                        	mov esi, 0xd ; "NU"
0x22a88:   48 89 df                              	mov rdi, rbx
0x22a8b:   ff 15 ef 3d 01 00                     	call qword ptr [rip + 0x13def]
0x22a91:   84 c0                                 	test al, al
0x22a93:   0f 84 ba 09 00 00                     	je 0x23453
0x22a99:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22a9d:   25 df 00 00 00                        	and eax, 0xdf
0x22aa2:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22aa6:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22aab:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22ab3:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22aba:   41 b9 00 00 00 00                     	mov r9d, 0
0x22ac0:   41 b8 08 00 00 00                     	mov r8d, 8
0x22ac6:   b9 00 00 00 00                        	mov ecx, 0
0x22acb:   ba 00 00 00 00                        	mov edx, 0
0x22ad0:   be 0d 00 00 00                        	mov esi, 0xd ; "NU"
0x22ad5:   48 89 df                              	mov rdi, rbx
0x22ad8:   ff 15 aa 3d 01 00                     	call qword ptr [rip + 0x13daa]
0x22ade:   84 c0                                 	test al, al
0x22ae0:   0f 84 6d 09 00 00                     	je 0x23453
0x22ae6:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22aea:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22aee:   41 b9 00 00 00 00                     	mov r9d, 0
0x22af4:   41 b8 08 00 00 00                     	mov r8d, 8
0x22afa:   b9 00 00 00 00                        	mov ecx, 0
0x22aff:   ba 00 00 00 00                        	mov edx, 0
0x22b04:   be 09 00 00 00                        	mov esi, 9
0x22b09:   48 89 df                              	mov rdi, rbx
0x22b0c:   ff 15 6e 3d 01 00                     	call qword ptr [rip + 0x13d6e]
0x22b12:   84 c0                                 	test al, al
0x22b14:   0f 84 39 09 00 00                     	je 0x23453
0x22b1a:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22b1e:   0c b0                                 	or al, 0xb0
0x22b20:   25 b1 00 00 00                        	and eax, 0xb1
0x22b25:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22b29:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22b2e:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22b36:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22b3d:   41 b9 00 00 00 00                     	mov r9d, 0
0x22b43:   41 b8 08 00 00 00                     	mov r8d, 8
0x22b49:   b9 00 00 00 00                        	mov ecx, 0
0x22b4e:   ba 00 00 00 00                        	mov edx, 0
0x22b53:   be 09 00 00 00                        	mov esi, 9
0x22b58:   48 89 df                              	mov rdi, rbx
0x22b5b:   ff 15 27 3d 01 00                     	call qword ptr [rip + 0x13d27]
0x22b61:   84 c0                                 	test al, al
0x22b63:   0f 84 ea 08 00 00                     	je 0x23453
0x22b69:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22b6d:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22b71:   41 b9 00 00 00 00                     	mov r9d, 0
0x22b77:   41 b8 08 00 00 00                     	mov r8d, 8
0x22b7d:   b9 00 00 00 00                        	mov ecx, 0
0x22b82:   ba 00 00 00 00                        	mov edx, 0
0x22b87:   be 0a 00 00 00                        	mov esi, 0xa
0x22b8c:   48 89 df                              	mov rdi, rbx
0x22b8f:   ff 15 eb 3c 01 00                     	call qword ptr [rip + 0x13ceb]
0x22b95:   84 c0                                 	test al, al
0x22b97:   0f 84 b6 08 00 00                     	je 0x23453
0x22b9d:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22ba1:   48 83 c8 6f                           	or rax, 0x6f
0x22ba5:   83 e0 7f                              	and eax, 0x7f
0x22ba8:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22bac:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22bb1:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22bb9:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22bc0:   41 b9 00 00 00 00                     	mov r9d, 0
0x22bc6:   41 b8 08 00 00 00                     	mov r8d, 8
0x22bcc:   b9 00 00 00 00                        	mov ecx, 0
0x22bd1:   ba 00 00 00 00                        	mov edx, 0
0x22bd6:   be 0a 00 00 00                        	mov esi, 0xa
0x22bdb:   48 89 df                              	mov rdi, rbx
0x22bde:   ff 15 a4 3c 01 00                     	call qword ptr [rip + 0x13ca4]
0x22be4:   84 c0                                 	test al, al
0x22be6:   0f 84 67 08 00 00                     	je 0x23453
0x22bec:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22bf0:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22bf4:   41 b9 00 00 00 00                     	mov r9d, 0
0x22bfa:   41 b8 08 00 00 00                     	mov r8d, 8
0x22c00:   b9 00 00 00 00                        	mov ecx, 0
0x22c05:   ba 00 00 00 00                        	mov edx, 0
0x22c0a:   be 0b 00 00 00                        	mov esi, 0xb
0x22c0f:   48 89 df                              	mov rdi, rbx
0x22c12:   ff 15 68 3c 01 00                     	call qword ptr [rip + 0x13c68]
0x22c18:   84 c0                                 	test al, al
0x22c1a:   0f 84 33 08 00 00                     	je 0x23453
0x22c20:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22c24:   48 83 c8 7a                           	or rax, 0x7a
0x22c28:   83 e0 7b                              	and eax, 0x7b
0x22c2b:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22c2f:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22c34:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22c3c:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22c43:   41 b9 00 00 00 00                     	mov r9d, 0
0x22c49:   41 b8 08 00 00 00                     	mov r8d, 8
0x22c4f:   b9 00 00 00 00                        	mov ecx, 0
0x22c54:   ba 00 00 00 00                        	mov edx, 0
0x22c59:   be 0b 00 00 00                        	mov esi, 0xb
0x22c5e:   48 89 df                              	mov rdi, rbx
0x22c61:   ff 15 21 3c 01 00                     	call qword ptr [rip + 0x13c21]
0x22c67:   84 c0                                 	test al, al
0x22c69:   0f 84 e4 07 00 00                     	je 0x23453
0x22c6f:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x22c78:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22c80:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22c87:   41 b9 00 00 00 00                     	mov r9d, 0
0x22c8d:   41 b8 08 00 00 00                     	mov r8d, 8
0x22c93:   b9 00 00 00 00                        	mov ecx, 0
0x22c98:   ba 00 00 00 00                        	mov edx, 0
0x22c9d:   be 0c 00 00 00                        	mov esi, 0xc ; "GNU"
0x22ca2:   48 89 df                              	mov rdi, rbx
0x22ca5:   ff 15 dd 3b 01 00                     	call qword ptr [rip + 0x13bdd]
0x22cab:   84 c0                                 	test al, al
0x22cad:   0f 84 a0 07 00 00                     	je 0x23453
0x22cb3:   48 c7 44 24 10 fa 00 00 00            	mov qword ptr [rsp + 0x10], 0xfa
0x22cbc:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22cc4:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22ccb:   41 b9 00 00 00 00                     	mov r9d, 0
0x22cd1:   41 b8 08 00 00 00                     	mov r8d, 8
0x22cd7:   b9 00 00 00 00                        	mov ecx, 0
0x22cdc:   ba 00 00 00 00                        	mov edx, 0
0x22ce1:   be 19 00 00 00                        	mov esi, 0x19
0x22ce6:   48 89 df                              	mov rdi, rbx
0x22ce9:   ff 15 99 3b 01 00                     	call qword ptr [rip + 0x13b99]
0x22cef:   84 c0                                 	test al, al
0x22cf1:   0f 84 5c 07 00 00                     	je 0x23453
0x22cf7:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22cfb:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22cff:   41 b9 00 00 00 00                     	mov r9d, 0
0x22d05:   41 b8 08 00 00 00                     	mov r8d, 8
0x22d0b:   b9 00 00 00 00                        	mov ecx, 0
0x22d10:   ba 00 00 00 00                        	mov edx, 0
0x22d15:   be 1b 00 00 00                        	mov esi, 0x1b
0x22d1a:   48 89 df                              	mov rdi, rbx
0x22d1d:   ff 15 5d 3b 01 00                     	call qword ptr [rip + 0x13b5d]
0x22d23:   84 c0                                 	test al, al
0x22d25:   0f 84 28 07 00 00                     	je 0x23453
0x22d2b:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22d2f:   83 e0 7f                              	and eax, 0x7f
0x22d32:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22d36:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22d3b:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22d43:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22d4a:   41 b9 00 00 00 00                     	mov r9d, 0
0x22d50:   41 b8 08 00 00 00                     	mov r8d, 8
0x22d56:   b9 00 00 00 00                        	mov ecx, 0
0x22d5b:   ba 00 00 00 00                        	mov edx, 0
0x22d60:   be 1b 00 00 00                        	mov esi, 0x1b
0x22d65:   48 89 df                              	mov rdi, rbx
0x22d68:   ff 15 1a 3b 01 00                     	call qword ptr [rip + 0x13b1a]
0x22d6e:   84 c0                                 	test al, al
0x22d70:   0f 84 dd 06 00 00                     	je 0x23453
0x22d76:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22d7a:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22d7e:   41 b9 00 00 00 00                     	mov r9d, 0
0x22d84:   41 b8 08 00 00 00                     	mov r8d, 8
0x22d8a:   b9 00 00 00 00                        	mov ecx, 0
0x22d8f:   ba 00 00 00 00                        	mov edx, 0
0x22d94:   be 21 00 00 00                        	mov esi, 0x21
0x22d99:   48 89 df                              	mov rdi, rbx
0x22d9c:   ff 15 de 3a 01 00                     	call qword ptr [rip + 0x13ade]
0x22da2:   84 c0                                 	test al, al
0x22da4:   0f 84 a9 06 00 00                     	je 0x23453
0x22daa:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22dae:   48 83 c8 40                           	or rax, 0x40
0x22db2:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22db6:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22dbb:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22dc3:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22dca:   41 b9 00 00 00 00                     	mov r9d, 0
0x22dd0:   41 b8 08 00 00 00                     	mov r8d, 8
0x22dd6:   b9 00 00 00 00                        	mov ecx, 0
0x22ddb:   ba 00 00 00 00                        	mov edx, 0
0x22de0:   be 21 00 00 00                        	mov esi, 0x21
0x22de5:   48 89 df                              	mov rdi, rbx
0x22de8:   ff 15 9a 3a 01 00                     	call qword ptr [rip + 0x13a9a]
0x22dee:   84 c0                                 	test al, al
0x22df0:   0f 84 5d 06 00 00                     	je 0x23453
0x22df6:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22dfa:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22dfe:   41 b9 00 00 00 00                     	mov r9d, 0
0x22e04:   41 b8 08 00 00 00                     	mov r8d, 8
0x22e0a:   b9 00 00 00 00                        	mov ecx, 0
0x22e0f:   ba 00 00 00 00                        	mov edx, 0
0x22e14:   be 10 00 00 00                        	mov esi, 0x10
0x22e19:   48 89 df                              	mov rdi, rbx
0x22e1c:   ff 15 5e 3a 01 00                     	call qword ptr [rip + 0x13a5e]
0x22e22:   84 c0                                 	test al, al
0x22e24:   0f 84 29 06 00 00                     	je 0x23453
0x22e2a:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22e2e:   0c 90                                 	or al, 0x90
0x22e30:   25 bf 00 00 00                        	and eax, 0xbf
0x22e35:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22e39:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22e3e:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22e46:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22e4d:   41 b9 00 00 00 00                     	mov r9d, 0
0x22e53:   41 b8 08 00 00 00                     	mov r8d, 8
0x22e59:   b9 00 00 00 00                        	mov ecx, 0
0x22e5e:   ba 00 00 00 00                        	mov edx, 0
0x22e63:   be 10 00 00 00                        	mov esi, 0x10
0x22e68:   48 89 df                              	mov rdi, rbx
0x22e6b:   ff 15 17 3a 01 00                     	call qword ptr [rip + 0x13a17]
0x22e71:   84 c0                                 	test al, al
0x22e73:   0f 84 da 05 00 00                     	je 0x23453
0x22e79:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22e7d:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22e81:   41 b9 00 00 00 00                     	mov r9d, 0
0x22e87:   41 b8 08 00 00 00                     	mov r8d, 8
0x22e8d:   b9 00 00 00 00                        	mov ecx, 0
0x22e92:   ba 00 00 00 00                        	mov edx, 0
0x22e97:   be 14 00 00 00                        	mov esi, 0x14
0x22e9c:   48 89 df                              	mov rdi, rbx
0x22e9f:   ff 15 db 39 01 00                     	call qword ptr [rip + 0x139db]
0x22ea5:   84 c0                                 	test al, al
0x22ea7:   0f 84 a6 05 00 00                     	je 0x23453
0x22ead:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22eb1:   48 83 c8 20                           	or rax, 0x20
0x22eb5:   25 ef 00 00 00                        	and eax, 0xef
0x22eba:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22ebe:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22ec3:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22ecb:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22ed2:   41 b9 00 00 00 00                     	mov r9d, 0
0x22ed8:   41 b8 08 00 00 00                     	mov r8d, 8
0x22ede:   b9 00 00 00 00                        	mov ecx, 0
0x22ee3:   ba 00 00 00 00                        	mov edx, 0
0x22ee8:   be 14 00 00 00                        	mov esi, 0x14
0x22eed:   48 89 df                              	mov rdi, rbx
0x22ef0:   ff 15 92 39 01 00                     	call qword ptr [rip + 0x13992]
0x22ef6:   84 c0                                 	test al, al
0x22ef8:   0f 84 55 05 00 00                     	je 0x23453
0x22efe:   48 89 df                              	mov rdi, rbx
0x22f01:   e8 7c f4 ff ff                        	call 0x22382 <BLACKWIDOW_ProgramPllPor>
0x22f06:   84 c0                                 	test al, al
0x22f08:   0f 84 45 05 00 00                     	je 0x23453
0x22f0e:   48 89 df                              	mov rdi, rbx
0x22f11:   e8 02 eb ff ff                        	call 0x21a18 <BLACKWIDOW_ProgramVcoPor>
0x22f16:   e9 38 05 00 00                        	jmp 0x23453
0x22f1b:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22f1f:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22f23:   41 b9 00 00 00 00                     	mov r9d, 0
0x22f29:   41 b8 08 00 00 00                     	mov r8d, 8
0x22f2f:   b9 00 00 00 00                        	mov ecx, 0
0x22f34:   ba 00 00 00 00                        	mov edx, 0
0x22f39:   be 05 00 00 00                        	mov esi, 5
0x22f3e:   ff 15 3c 39 01 00                     	call qword ptr [rip + 0x1393c]
0x22f44:   84 c0                                 	test al, al
0x22f46:   0f 84 8a 04 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x22f4c:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22f50:   0c 80                                 	or al, 0x80
0x22f52:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22f56:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22f5b:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22f63:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22f6a:   41 b9 00 00 00 00                     	mov r9d, 0
0x22f70:   41 b8 08 00 00 00                     	mov r8d, 8
0x22f76:   b9 00 00 00 00                        	mov ecx, 0
0x22f7b:   ba 00 00 00 00                        	mov edx, 0
0x22f80:   be 05 00 00 00                        	mov esi, 5
0x22f85:   48 89 df                              	mov rdi, rbx
0x22f88:   ff 15 fa 38 01 00                     	call qword ptr [rip + 0x138fa]
0x22f8e:   84 c0                                 	test al, al
0x22f90:   0f 84 40 04 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x22f96:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x22f9a:   83 e0 7f                              	and eax, 0x7f
0x22f9d:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x22fa1:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x22fa6:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x22fae:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x22fb5:   41 b9 00 00 00 00                     	mov r9d, 0
0x22fbb:   41 b8 08 00 00 00                     	mov r8d, 8
0x22fc1:   b9 00 00 00 00                        	mov ecx, 0
0x22fc6:   ba 00 00 00 00                        	mov edx, 0
0x22fcb:   be 05 00 00 00                        	mov esi, 5
0x22fd0:   48 89 df                              	mov rdi, rbx
0x22fd3:   ff 15 af 38 01 00                     	call qword ptr [rip + 0x138af]
0x22fd9:   84 c0                                 	test al, al
0x22fdb:   0f 84 f5 03 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x22fe1:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x22fe5:   48 89 04 24                           	mov qword ptr [rsp], rax
0x22fe9:   41 b9 00 00 00 00                     	mov r9d, 0
0x22fef:   41 b8 08 00 00 00                     	mov r8d, 8
0x22ff5:   b9 00 00 00 00                        	mov ecx, 0
0x22ffa:   ba 00 00 00 00                        	mov edx, 0
0x22fff:   be 02 00 00 00                        	mov esi, 2
0x23004:   48 89 df                              	mov rdi, rbx
0x23007:   ff 15 73 38 01 00                     	call qword ptr [rip + 0x13873]
0x2300d:   84 c0                                 	test al, al
0x2300f:   0f 84 c1 03 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23015:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x23019:   0c 80                                 	or al, 0x80
0x2301b:   25 fe 00 00 00                        	and eax, 0xfe
0x23020:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x23024:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x23029:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23031:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x23038:   41 b9 00 00 00 00                     	mov r9d, 0
0x2303e:   41 b8 08 00 00 00                     	mov r8d, 8
0x23044:   b9 00 00 00 00                        	mov ecx, 0
0x23049:   ba 00 00 00 00                        	mov edx, 0
0x2304e:   be 02 00 00 00                        	mov esi, 2
0x23053:   48 89 df                              	mov rdi, rbx
0x23056:   ff 15 2c 38 01 00                     	call qword ptr [rip + 0x1382c]
0x2305c:   84 c0                                 	test al, al
0x2305e:   0f 84 72 03 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23064:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x23068:   48 89 04 24                           	mov qword ptr [rsp], rax
0x2306c:   41 b9 00 00 00 00                     	mov r9d, 0
0x23072:   41 b8 08 00 00 00                     	mov r8d, 8
0x23078:   b9 00 00 00 00                        	mov ecx, 0
0x2307d:   ba 00 00 00 00                        	mov edx, 0
0x23082:   be 06 00 00 00                        	mov esi, 6
0x23087:   48 89 df                              	mov rdi, rbx
0x2308a:   ff 15 f0 37 01 00                     	call qword ptr [rip + 0x137f0]
0x23090:   84 c0                                 	test al, al
0x23092:   0f 84 3e 03 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23098:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x2309c:   83 e0 76                              	and eax, 0x76
0x2309f:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x230a3:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x230a8:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x230b0:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x230b7:   41 b9 00 00 00 00                     	mov r9d, 0
0x230bd:   41 b8 08 00 00 00                     	mov r8d, 8
0x230c3:   b9 00 00 00 00                        	mov ecx, 0
0x230c8:   ba 00 00 00 00                        	mov edx, 0
0x230cd:   be 06 00 00 00                        	mov esi, 6
0x230d2:   48 89 df                              	mov rdi, rbx
0x230d5:   ff 15 ad 37 01 00                     	call qword ptr [rip + 0x137ad]
0x230db:   84 c0                                 	test al, al
0x230dd:   0f 84 f3 02 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x230e3:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x230e7:   48 89 04 24                           	mov qword ptr [rsp], rax
0x230eb:   41 b9 00 00 00 00                     	mov r9d, 0
0x230f1:   41 b8 08 00 00 00                     	mov r8d, 8
0x230f7:   b9 00 00 00 00                        	mov ecx, 0
0x230fc:   ba 00 00 00 00                        	mov edx, 0
0x23101:   be 07 00 00 00                        	mov esi, 7
0x23106:   48 89 df                              	mov rdi, rbx
0x23109:   ff 15 71 37 01 00                     	call qword ptr [rip + 0x13771]
0x2310f:   84 c0                                 	test al, al
0x23111:   0f 84 bf 02 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23117:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x2311b:   83 e0 50                              	and eax, 0x50
0x2311e:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x23122:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x23127:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2312f:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x23136:   41 b9 00 00 00 00                     	mov r9d, 0
0x2313c:   41 b8 08 00 00 00                     	mov r8d, 8
0x23142:   b9 00 00 00 00                        	mov ecx, 0
0x23147:   ba 00 00 00 00                        	mov edx, 0
0x2314c:   be 07 00 00 00                        	mov esi, 7
0x23151:   48 89 df                              	mov rdi, rbx
0x23154:   ff 15 2e 37 01 00                     	call qword ptr [rip + 0x1372e]
0x2315a:   84 c0                                 	test al, al
0x2315c:   0f 84 74 02 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23162:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x23166:   48 89 04 24                           	mov qword ptr [rsp], rax
0x2316a:   41 b9 00 00 00 00                     	mov r9d, 0
0x23170:   41 b8 08 00 00 00                     	mov r8d, 8
0x23176:   b9 00 00 00 00                        	mov ecx, 0
0x2317b:   ba 00 00 00 00                        	mov edx, 0
0x23180:   be 0f 00 00 00                        	mov esi, 0xf
0x23185:   48 89 df                              	mov rdi, rbx
0x23188:   ff 15 f2 36 01 00                     	call qword ptr [rip + 0x136f2]
0x2318e:   84 c0                                 	test al, al
0x23190:   0f 84 40 02 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23196:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x2319a:   83 e0 7f                              	and eax, 0x7f
0x2319d:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x231a1:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x231a6:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x231ae:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x231b5:   41 b9 00 00 00 00                     	mov r9d, 0
0x231bb:   41 b8 08 00 00 00                     	mov r8d, 8
0x231c1:   b9 00 00 00 00                        	mov ecx, 0
0x231c6:   ba 00 00 00 00                        	mov edx, 0
0x231cb:   be 0f 00 00 00                        	mov esi, 0xf
0x231d0:   48 89 df                              	mov rdi, rbx
0x231d3:   ff 15 af 36 01 00                     	call qword ptr [rip + 0x136af]
0x231d9:   84 c0                                 	test al, al
0x231db:   0f 84 f5 01 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x231e1:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x231e5:   48 89 04 24                           	mov qword ptr [rsp], rax
0x231e9:   41 b9 00 00 00 00                     	mov r9d, 0
0x231ef:   41 b8 08 00 00 00                     	mov r8d, 8
0x231f5:   b9 00 00 00 00                        	mov ecx, 0
0x231fa:   ba 00 00 00 00                        	mov edx, 0
0x231ff:   be 18 00 00 00                        	mov esi, 0x18
0x23204:   48 89 df                              	mov rdi, rbx
0x23207:   ff 15 73 36 01 00                     	call qword ptr [rip + 0x13673]
0x2320d:   84 c0                                 	test al, al
0x2320f:   0f 84 c1 01 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23215:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x23219:   83 e0 7f                              	and eax, 0x7f
0x2321c:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x23220:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x23225:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2322d:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x23234:   41 b9 00 00 00 00                     	mov r9d, 0
0x2323a:   41 b8 08 00 00 00                     	mov r8d, 8
0x23240:   b9 00 00 00 00                        	mov ecx, 0
0x23245:   ba 00 00 00 00                        	mov edx, 0
0x2324a:   be 18 00 00 00                        	mov esi, 0x18
0x2324f:   48 89 df                              	mov rdi, rbx
0x23252:   ff 15 30 36 01 00                     	call qword ptr [rip + 0x13630]
0x23258:   84 c0                                 	test al, al
0x2325a:   0f 84 76 01 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23260:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x23264:   48 89 04 24                           	mov qword ptr [rsp], rax
0x23268:   41 b9 00 00 00 00                     	mov r9d, 0
0x2326e:   41 b8 08 00 00 00                     	mov r8d, 8
0x23274:   b9 00 00 00 00                        	mov ecx, 0
0x23279:   ba 00 00 00 00                        	mov edx, 0
0x2327e:   be 1a 00 00 00                        	mov esi, 0x1a
0x23283:   48 89 df                              	mov rdi, rbx
0x23286:   ff 15 f4 35 01 00                     	call qword ptr [rip + 0x135f4]
0x2328c:   84 c0                                 	test al, al
0x2328e:   0f 84 42 01 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23294:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x23298:   83 e0 3f                              	and eax, 0x3f
0x2329b:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x2329f:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x232a4:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x232ac:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x232b3:   41 b9 00 00 00 00                     	mov r9d, 0
0x232b9:   41 b8 08 00 00 00                     	mov r8d, 8
0x232bf:   b9 00 00 00 00                        	mov ecx, 0
0x232c4:   ba 00 00 00 00                        	mov edx, 0
0x232c9:   be 1a 00 00 00                        	mov esi, 0x1a
0x232ce:   48 89 df                              	mov rdi, rbx
0x232d1:   ff 15 b1 35 01 00                     	call qword ptr [rip + 0x135b1]
0x232d7:   84 c0                                 	test al, al
0x232d9:   0f 84 f7 00 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x232df:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x232e8:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x232f0:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x232f7:   41 b9 00 00 00 00                     	mov r9d, 0
0x232fd:   41 b8 08 00 00 00                     	mov r8d, 8
0x23303:   b9 00 00 00 00                        	mov ecx, 0
0x23308:   ba 00 00 00 00                        	mov edx, 0
0x2330d:   be 22 00 00 00                        	mov esi, 0x22
0x23312:   48 89 df                              	mov rdi, rbx
0x23315:   ff 15 6d 35 01 00                     	call qword ptr [rip + 0x1356d]
0x2331b:   84 c0                                 	test al, al
0x2331d:   0f 84 b3 00 00 00                     	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23323:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x2332c:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23334:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x2333b:   41 b9 00 00 00 00                     	mov r9d, 0
0x23341:   41 b8 08 00 00 00                     	mov r8d, 8
0x23347:   b9 00 00 00 00                        	mov ecx, 0
0x2334c:   ba 00 00 00 00                        	mov edx, 0
0x23351:   be 25 00 00 00                        	mov esi, 0x25
0x23356:   48 89 df                              	mov rdi, rbx
0x23359:   ff 15 29 35 01 00                     	call qword ptr [rip + 0x13529]
0x2335f:   84 c0                                 	test al, al
0x23361:   74 73                                 	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23363:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x23367:   48 89 04 24                           	mov qword ptr [rsp], rax
0x2336b:   41 b9 00 00 00 00                     	mov r9d, 0
0x23371:   41 b8 08 00 00 00                     	mov r8d, 8
0x23377:   b9 00 00 00 00                        	mov ecx, 0
0x2337c:   ba 00 00 00 00                        	mov edx, 0
0x23381:   be 27 00 00 00                        	mov esi, 0x27
0x23386:   48 89 df                              	mov rdi, rbx
0x23389:   ff 15 f1 34 01 00                     	call qword ptr [rip + 0x134f1]
0x2338f:   84 c0                                 	test al, al
0x23391:   74 43                                 	je 0x233d6 <BLACKWIDOW_SetPowerMode+0xeef>
0x23393:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x23397:   83 e0 1f                              	and eax, 0x1f
0x2339a:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x2339e:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x233a3:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x233ab:   c7 04 24 00 00 00 00                  	mov dword ptr [rsp], 0
0x233b2:   41 b9 00 00 00 00                     	mov r9d, 0
0x233b8:   41 b8 08 00 00 00                     	mov r8d, 8
0x233be:   b9 00 00 00 00                        	mov ecx, 0
0x233c3:   ba 00 00 00 00                        	mov edx, 0
0x233c8:   be 27 00 00 00                        	mov esi, 0x27
0x233cd:   48 89 df                              	mov rdi, rbx
0x233d0:   ff 15 b2 34 01 00                     	call qword ptr [rip + 0x134b2]
0x233d6:   41 83 fc 03                           	cmp r12d, 3
0x233da:   75 77                                 	jne 0x23453
0x233dc:   84 c0                                 	test al, al
0x233de:   74 73                                 	je 0x23453
0x233e0:   48 8d 45 e8                           	lea rax, [rbp - 0x18]
0x233e4:   48 89 04 24                           	mov qword ptr [rsp], rax
0x233e8:   41 b9 00 00 00 00                     	mov r9d, 0
0x233ee:   41 b8 08 00 00 00                     	mov r8d, 8
0x233f4:   b9 00 00 00 00                        	mov ecx, 0
0x233f9:   ba 00 00 00 00                        	mov edx, 0
0x233fe:   be 02 00 00 00                        	mov esi, 2
0x23403:   48 89 df                              	mov rdi, rbx
0x23406:   ff 15 74 34 01 00                     	call qword ptr [rip + 0x13474]
0x2340c:   84 c0                                 	test al, al
0x2340e:   74 43                                 	je 0x23453
0x23410:   48 8b 45 e8                           	mov rax, qword ptr [rbp - 0x18]
0x23414:   83 e0 7f                              	and eax, 0x7f
0x23417:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x2341b:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x23420:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
; data inside code section at 0x23428 -- 0x2342c
0x23428:   c7 04 24 00                                        |..$.            |
; function: BLACKWIDOW_Initialize at 0x2342c -- 0x2345c
0x2342c:   00 00                                 	add byte ptr [rax], al
0x2342e:   00 41 b9                              	add byte ptr [rcx - 0x47], al
0x23431:   00 00                                 	add byte ptr [rax], al
0x23433:   00 00                                 	add byte ptr [rax], al
0x23435:   41 b8 08 00 00 00                     	mov r8d, 8
0x2343b:   b9 00 00 00 00                        	mov ecx, 0
0x23440:   ba 00 00 00 00                        	mov edx, 0
0x23445:   be 02 00 00 00                        	mov esi, 2
0x2344a:   48 89 df                              	mov rdi, rbx
0x2344d:   ff 15 35 34 01 00                     	call qword ptr [rip + 0x13435]
0x23453:   48 83 c4 30                           	add rsp, 0x30
0x23457:   5b                                    	pop rbx
0x23458:   41 5c                                 	pop r12
0x2345a:   c9                                    	leave 
0x2345b:   c3                                    	ret 
; function: BLACKWIDOW_Initialize at 0x2345c -- 0x2370b
0x2345c:   55                                    	push rbp
0x2345d:   48 89 e5                              	mov rbp, rsp
0x23460:   53                                    	push rbx
0x23461:   48 83 ec 08                           	sub rsp, 8
0x23465:   e8 86 b7 01 00                        	call 0x3ebf0 <mcount>
0x2346a:   48 8b 5f 28                           	mov rbx, qword ptr [rdi + 0x28]
0x2346e:   48 85 ff                              	test rdi, rdi
0x23471:   0f 94 c2                              	sete dl
0x23474:   48 85 f6                              	test rsi, rsi
0x23477:   0f 94 c0                              	sete al
0x2347a:   09 d0                                 	or eax, edx
0x2347c:   34 01                                 	xor al, 1
0x2347e:   0f 84 b9 02 00 00                     	je 0x2373d
0x23484:   48 8b 46 08                           	mov rax, qword ptr [rsi + 8]
0x23488:   48 89 43 08                           	mov qword ptr [rbx + 8], rax
0x2348c:   c7 43 10 00 00 00 00                  	mov dword ptr [rbx + 0x10], 0
0x23493:   c7 43 14 07 00 00 00                  	mov dword ptr [rbx + 0x14], 7
0x2349a:   c7 43 18 3f 00 00 00                  	mov dword ptr [rbx + 0x18], 0x3f
0x234a1:   c6 43 21 00                           	mov byte ptr [rbx + 0x21], 0
0x234a5:   c6 43 22 00                           	mov byte ptr [rbx + 0x22], 0
0x234a9:   c6 43 20 00                           	mov byte ptr [rbx + 0x20], 0
0x234ad:   c7 43 1c 00 00 00 00                  	mov dword ptr [rbx + 0x1c], 0
0x234b4:   8b 03                                 	mov eax, dword ptr [rbx]
0x234b6:   85 c0                                 	test eax, eax
0x234b8:   75 17                                 	jne 0x234d1 <BLACKWIDOW_Initialize+0x75>
0x234ba:   c7 43 38 03 00 00 00                  	mov dword ptr [rbx + 0x38], 3
0x234c1:   c7 43 24 02 00 00 00                  	mov dword ptr [rbx + 0x24], 2
0x234c8:   c7 43 28 01 00 00 00                  	mov dword ptr [rbx + 0x28], 1
0x234cf:   eb 4d                                 	jmp 0x2351e <BLACKWIDOW_Initialize+0xc2>
0x234d1:   83 f8 01                              	cmp eax, 1
0x234d4:   75 17                                 	jne 0x234ed <BLACKWIDOW_Initialize+0x91>
0x234d6:   c7 43 38 03 00 00 00                  	mov dword ptr [rbx + 0x38], 3
0x234dd:   c7 43 24 03 00 00 00                  	mov dword ptr [rbx + 0x24], 3
0x234e4:   c7 43 28 01 00 00 00                  	mov dword ptr [rbx + 0x28], 1
0x234eb:   eb 31                                 	jmp 0x2351e <BLACKWIDOW_Initialize+0xc2>
0x234ed:   83 f8 02                              	cmp eax, 2
0x234f0:   75 17                                 	jne 0x23509 <BLACKWIDOW_Initialize+0xad>
0x234f2:   c7 43 38 06 00 00 00                  	mov dword ptr [rbx + 0x38], 6
0x234f9:   c7 43 24 03 00 00 00                  	mov dword ptr [rbx + 0x24], 3
0x23500:   c7 43 28 01 00 00 00                  	mov dword ptr [rbx + 0x28], 1
0x23507:   eb 15                                 	jmp 0x2351e <BLACKWIDOW_Initialize+0xc2>
0x23509:   c7 43 38 03 00 00 00                  	mov dword ptr [rbx + 0x38], 3
0x23510:   c7 43 24 03 00 00 00                  	mov dword ptr [rbx + 0x24], 3
0x23517:   c7 43 28 03 00 00 00                  	mov dword ptr [rbx + 0x28], 3
0x2351e:   c7 43 2c 05 00 00 00                  	mov dword ptr [rbx + 0x2c], 5
0x23525:   c7 43 30 04 00 00 00                  	mov dword ptr [rbx + 0x30], 4
0x2352c:   c7 43 34 03 00 00 00                  	mov dword ptr [rbx + 0x34], 3
0x23533:   c6 43 41 00                           	mov byte ptr [rbx + 0x41], 0
0x23537:   c6 43 42 00                           	mov byte ptr [rbx + 0x42], 0
0x2353b:   c6 43 40 00                           	mov byte ptr [rbx + 0x40], 0
0x2353f:   c7 43 3c 00 00 00 00                  	mov dword ptr [rbx + 0x3c], 0
0x23546:   8b 03                                 	mov eax, dword ptr [rbx]
0x23548:   85 c0                                 	test eax, eax
0x2354a:   75 17                                 	jne 0x23563 <BLACKWIDOW_Initialize+0x107>
0x2354c:   c7 43 58 03 00 00 00                  	mov dword ptr [rbx + 0x58], 3
0x23553:   c7 43 44 02 00 00 00                  	mov dword ptr [rbx + 0x44], 2
0x2355a:   c7 43 48 01 00 00 00                  	mov dword ptr [rbx + 0x48], 1
0x23561:   eb 4d                                 	jmp 0x235b0 <BLACKWIDOW_Initialize+0x154>
0x23563:   83 f8 01                              	cmp eax, 1
0x23566:   75 17                                 	jne 0x2357f <BLACKWIDOW_Initialize+0x123>
0x23568:   c7 43 58 03 00 00 00                  	mov dword ptr [rbx + 0x58], 3
0x2356f:   c7 43 44 03 00 00 00                  	mov dword ptr [rbx + 0x44], 3
0x23576:   c7 43 48 01 00 00 00                  	mov dword ptr [rbx + 0x48], 1
0x2357d:   eb 31                                 	jmp 0x235b0 <BLACKWIDOW_Initialize+0x154>
0x2357f:   83 f8 02                              	cmp eax, 2
0x23582:   75 17                                 	jne 0x2359b <BLACKWIDOW_Initialize+0x13f>
0x23584:   c7 43 58 06 00 00 00                  	mov dword ptr [rbx + 0x58], 6
0x2358b:   c7 43 44 03 00 00 00                  	mov dword ptr [rbx + 0x44], 3
0x23592:   c7 43 48 01 00 00 00                  	mov dword ptr [rbx + 0x48], 1
0x23599:   eb 15                                 	jmp 0x235b0 <BLACKWIDOW_Initialize+0x154>
0x2359b:   c7 43 58 03 00 00 00                  	mov dword ptr [rbx + 0x58], 3
0x235a2:   c7 43 44 03 00 00 00                  	mov dword ptr [rbx + 0x44], 3
0x235a9:   c7 43 48 03 00 00 00                  	mov dword ptr [rbx + 0x48], 3
0x235b0:   c7 43 4c 05 00 00 00                  	mov dword ptr [rbx + 0x4c], 5
0x235b7:   c7 43 50 04 00 00 00                  	mov dword ptr [rbx + 0x50], 4
0x235be:   c7 43 54 03 00 00 00                  	mov dword ptr [rbx + 0x54], 3
0x235c5:   c6 43 61 00                           	mov byte ptr [rbx + 0x61], 0
0x235c9:   c6 43 62 00                           	mov byte ptr [rbx + 0x62], 0
0x235cd:   c6 43 60 00                           	mov byte ptr [rbx + 0x60], 0
0x235d1:   c7 43 5c 00 00 00 00                  	mov dword ptr [rbx + 0x5c], 0
0x235d8:   8b 03                                 	mov eax, dword ptr [rbx]
0x235da:   85 c0                                 	test eax, eax
0x235dc:   75 17                                 	jne 0x235f5 <BLACKWIDOW_Initialize+0x199>
0x235de:   c7 43 78 03 00 00 00                  	mov dword ptr [rbx + 0x78], 3
0x235e5:   c7 43 64 02 00 00 00                  	mov dword ptr [rbx + 0x64], 2
0x235ec:   c7 43 68 01 00 00 00                  	mov dword ptr [rbx + 0x68], 1
0x235f3:   eb 4d                                 	jmp 0x23642 <BLACKWIDOW_Initialize+0x1e6>
0x235f5:   83 f8 01                              	cmp eax, 1
0x235f8:   75 17                                 	jne 0x23611 <BLACKWIDOW_Initialize+0x1b5>
0x235fa:   c7 43 78 03 00 00 00                  	mov dword ptr [rbx + 0x78], 3
0x23601:   c7 43 64 03 00 00 00                  	mov dword ptr [rbx + 0x64], 3
0x23608:   c7 43 68 01 00 00 00                  	mov dword ptr [rbx + 0x68], 1
0x2360f:   eb 31                                 	jmp 0x23642 <BLACKWIDOW_Initialize+0x1e6>
0x23611:   83 f8 02                              	cmp eax, 2
0x23614:   75 17                                 	jne 0x2362d <BLACKWIDOW_Initialize+0x1d1>
0x23616:   c7 43 78 06 00 00 00                  	mov dword ptr [rbx + 0x78], 6
0x2361d:   c7 43 64 03 00 00 00                  	mov dword ptr [rbx + 0x64], 3
0x23624:   c7 43 68 01 00 00 00                  	mov dword ptr [rbx + 0x68], 1
0x2362b:   eb 15                                 	jmp 0x23642 <BLACKWIDOW_Initialize+0x1e6>
0x2362d:   c7 43 78 03 00 00 00                  	mov dword ptr [rbx + 0x78], 3
0x23634:   c7 43 64 03 00 00 00                  	mov dword ptr [rbx + 0x64], 3
0x2363b:   c7 43 68 03 00 00 00                  	mov dword ptr [rbx + 0x68], 3
0x23642:   c7 43 6c 05 00 00 00                  	mov dword ptr [rbx + 0x6c], 5
0x23649:   c7 43 70 04 00 00 00                  	mov dword ptr [rbx + 0x70], 4
0x23650:   c7 43 74 03 00 00 00                  	mov dword ptr [rbx + 0x74], 3
0x23657:   c6 83 81 00 00 00 00                  	mov byte ptr [rbx + 0x81], 0
0x2365e:   c6 83 82 00 00 00 00                  	mov byte ptr [rbx + 0x82], 0
0x23665:   c6 83 80 00 00 00 00                  	mov byte ptr [rbx + 0x80], 0
0x2366c:   c7 43 7c 00 00 00 00                  	mov dword ptr [rbx + 0x7c], 0
0x23673:   8b 03                                 	mov eax, dword ptr [rbx]
0x23675:   85 c0                                 	test eax, eax
0x23677:   75 20                                 	jne 0x23699 <BLACKWIDOW_Initialize+0x23d>
0x23679:   c7 83 98 00 00 00 03 00 00 00         	mov dword ptr [rbx + 0x98], 3
0x23683:   c7 83 84 00 00 00 02 00 00 00         	mov dword ptr [rbx + 0x84], 2
0x2368d:   c7 83 88 00 00 00 01 00 00 00         	mov dword ptr [rbx + 0x88], 1
0x23697:   eb 68                                 	jmp 0x23701 <BLACKWIDOW_Initialize+0x2a5>
0x23699:   83 f8 01                              	cmp eax, 1
0x2369c:   75 20                                 	jne 0x236be <BLACKWIDOW_Initialize+0x262>
0x2369e:   c7 83 98 00 00 00 03 00 00 00         	mov dword ptr [rbx + 0x98], 3
0x236a8:   c7 83 84 00 00 00 03 00 00 00         	mov dword ptr [rbx + 0x84], 3
0x236b2:   c7 83 88 00 00 00 01 00 00 00         	mov dword ptr [rbx + 0x88], 1
0x236bc:   eb 43                                 	jmp 0x23701 <BLACKWIDOW_Initialize+0x2a5>
0x236be:   83 f8 02                              	cmp eax, 2
0x236c1:   75 20                                 	jne 0x236e3 <BLACKWIDOW_Initialize+0x287>
0x236c3:   c7 83 98 00 00 00 06 00 00 00         	mov dword ptr [rbx + 0x98], 6
0x236cd:   c7 83 84 00 00 00 03 00 00 00         	mov dword ptr [rbx + 0x84], 3
0x236d7:   c7 83 88 00 00 00 01 00 00 00         	mov dword ptr [rbx + 0x88], 1
0x236e1:   eb 1e                                 	jmp 0x23701 <BLACKWIDOW_Initialize+0x2a5>
0x236e3:   c7 83 98 00 00 00 03 00 00 00         	mov dword ptr [rbx + 0x98], 3
0x236ed:   c7 83 84 00 00 00 03 00 00 00         	mov dword ptr [rbx + 0x84], 3
0x236f7:   c7 83 88 00 00 00 03 00 00 00         	mov dword ptr [rbx + 0x88], 3
0x23701:   c7 83 8c 00 00 00 05 00 00 00         	mov dword ptr [rbx + 0x8c], 5
; data inside code section at 0x2370b -- 0x23714
0x2370b:   c7 83 90 00 00 00 04 00  00                        |.........       |
; function: BLACKWIDOW_ProgramVcoChannelChangeSpi at 0x23714 -- 0x23744
0x23714:   00 c7                                 	add bh, al
0x23716:   83 94 00 00 00 03 00 00               	adc dword ptr [rax + rax + 0x30000], 0
0x2371e:   00 be 00 00 00 00                     	add byte ptr [rsi], bh
0x23724:   e8 be ed ff ff                        	call 0x224e7 <BLACKWIDOW_SetPowerMode>
0x23729:   c7 83 a0 00 00 00 04 00 00 00         	mov dword ptr [rbx + 0xa0], 4
0x23733:   c7 83 a4 00 00 00 ff 03 00 00         	mov dword ptr [rbx + 0xa4], 0x3ff
0x2373d:   48 83 c4 08                           	add rsp, 8
0x23741:   5b                                    	pop rbx
0x23742:   c9                                    	leave 
0x23743:   c3                                    	ret 
; function: BLACKWIDOW_ProgramVcoChannelChangeSpi at 0x23744 -- 0x23b99
0x23744:   55                                    	push rbp
0x23745:   48 89 e5                              	mov rbp, rsp
0x23748:   41 57                                 	push r15
0x2374a:   41 56                                 	push r14
0x2374c:   41 55                                 	push r13
0x2374e:   41 54                                 	push r12
0x23750:   53                                    	push rbx
0x23751:   48 83 ec 38                           	sub rsp, 0x38
0x23755:   e8 96 b4 01 00                        	call 0x3ebf0 <mcount>
0x2375a:   48 89 fb                              	mov rbx, rdi
0x2375d:   48 85 ff                              	test rdi, rdi
0x23760:   0f 95 c0                              	setne al
0x23763:   0f 84 4e 04 00 00                     	je 0x23bb7
0x23769:   48 c7 45 c8 00 00 00 00               	mov qword ptr [rbp - 0x38], 0
0x23771:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x2377a:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23782:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x23789:   41 b9 00 00 00 00                     	mov r9d, 0
0x2378f:   41 b8 01 00 00 00                     	mov r8d, 1
0x23795:   b9 05 00 00 00                        	mov ecx, 5
0x2379a:   ba 00 00 00 00                        	mov edx, 0
0x2379f:   be 13 00 00 00                        	mov esi, 0x13
0x237a4:   ff 15 de 30 01 00                     	call qword ptr [rip + 0x130de]
0x237aa:   84 c0                                 	test al, al
0x237ac:   0f 84 05 04 00 00                     	je 0x23bb7
0x237b2:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x237bb:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x237c3:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x237ca:   41 b9 00 00 00 00                     	mov r9d, 0
0x237d0:   41 b8 01 00 00 00                     	mov r8d, 1
0x237d6:   b9 04 00 00 00                        	mov ecx, 4
0x237db:   ba 00 00 00 00                        	mov edx, 0
0x237e0:   be 13 00 00 00                        	mov esi, 0x13
0x237e5:   48 89 df                              	mov rdi, rbx
0x237e8:   ff 15 9a 30 01 00                     	call qword ptr [rip + 0x1309a]
0x237ee:   84 c0                                 	test al, al
0x237f0:   0f 84 c1 03 00 00                     	je 0x23bb7
0x237f6:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x237ff:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23807:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x2380e:   41 b9 00 00 00 00                     	mov r9d, 0
0x23814:   41 b8 01 00 00 00                     	mov r8d, 1
0x2381a:   b9 07 00 00 00                        	mov ecx, 7
0x2381f:   ba 00 00 00 00                        	mov edx, 0
0x23824:   be 12 00 00 00                        	mov esi, 0x12
0x23829:   48 89 df                              	mov rdi, rbx
0x2382c:   ff 15 56 30 01 00                     	call qword ptr [rip + 0x13056]
0x23832:   84 c0                                 	test al, al
0x23834:   0f 84 7d 03 00 00                     	je 0x23bb7
0x2383a:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x23843:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2384b:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x23852:   41 b9 00 00 00 00                     	mov r9d, 0
0x23858:   41 b8 01 00 00 00                     	mov r8d, 1
0x2385e:   b9 07 00 00 00                        	mov ecx, 7
0x23863:   ba 00 00 00 00                        	mov edx, 0
0x23868:   be 13 00 00 00                        	mov esi, 0x13
0x2386d:   48 89 df                              	mov rdi, rbx
0x23870:   ff 15 12 30 01 00                     	call qword ptr [rip + 0x13012]
0x23876:   84 c0                                 	test al, al
0x23878:   0f 84 39 03 00 00                     	je 0x23bb7
0x2387e:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x23887:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x2388f:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x23896:   41 b9 00 00 00 00                     	mov r9d, 0
0x2389c:   41 b8 01 00 00 00                     	mov r8d, 1
0x238a2:   b9 06 00 00 00                        	mov ecx, 6
0x238a7:   ba 00 00 00 00                        	mov edx, 0
0x238ac:   be 13 00 00 00                        	mov esi, 0x13
0x238b1:   48 89 df                              	mov rdi, rbx
0x238b4:   ff 15 ce 2f 01 00                     	call qword ptr [rip + 0x12fce]
0x238ba:   84 c0                                 	test al, al
0x238bc:   0f 84 f5 02 00 00                     	je 0x23bb7
0x238c2:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x238cb:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x238d3:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x238da:   41 b9 00 00 00 00                     	mov r9d, 0
0x238e0:   41 b8 02 00 00 00                     	mov r8d, 2
0x238e6:   b9 02 00 00 00                        	mov ecx, 2
0x238eb:   ba 00 00 00 00                        	mov edx, 0
0x238f0:   be 15 00 00 00                        	mov esi, 0x15
0x238f5:   48 89 df                              	mov rdi, rbx
0x238f8:   ff 15 8a 2f 01 00                     	call qword ptr [rip + 0x12f8a]
0x238fe:   84 c0                                 	test al, al
0x23900:   0f 84 b1 02 00 00                     	je 0x23bb7
0x23906:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x2390f:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23917:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x2391e:   41 b9 00 00 00 00                     	mov r9d, 0
0x23924:   41 b8 01 00 00 00                     	mov r8d, 1
0x2392a:   b9 02 00 00 00                        	mov ecx, 2
0x2392f:   ba 00 00 00 00                        	mov edx, 0
0x23934:   be 13 00 00 00                        	mov esi, 0x13
0x23939:   48 89 df                              	mov rdi, rbx
0x2393c:   ff 15 46 2f 01 00                     	call qword ptr [rip + 0x12f46]
0x23942:   84 c0                                 	test al, al
0x23944:   0f 84 6d 02 00 00                     	je 0x23bb7
0x2394a:   41 bc 13 00 00 00                     	mov r12d, 0x13
0x23950:   41 bf 01 00 00 00                     	mov r15d, 1
0x23956:   4c 8d 75 c8                           	lea r14, [rbp - 0x38]
0x2395a:   eb 12                                 	jmp 0x2396e <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x22a>
0x2395c:   49 83 ec 01                           	sub r12, 1
0x23960:   0f 84 60 02 00 00                     	je 0x23bc6
0x23966:   84 c0                                 	test al, al
0x23968:   0f 84 09 02 00 00                     	je 0x23b77 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x433>
0x2396e:   4c 89 34 24                           	mov qword ptr [rsp], r14
0x23972:   41 b9 00 00 00 00                     	mov r9d, 0
0x23978:   41 b8 01 00 00 00                     	mov r8d, 1
0x2397e:   b9 07 00 00 00                        	mov ecx, 7
0x23983:   ba 00 00 00 00                        	mov edx, 0
0x23988:   be 1c 00 00 00                        	mov esi, 0x1c
0x2398d:   48 89 df                              	mov rdi, rbx
0x23990:   ff 15 ea 2e 01 00                     	call qword ptr [rip + 0x12eea]
0x23996:   44 0f b6 6d c8                        	movzx r13d, byte ptr [rbp - 0x38]
0x2399b:   84 c0                                 	test al, al
0x2399d:   0f 84 2d 01 00 00                     	je 0x23ad0 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x38c>
0x239a3:   41 80 fd 01                           	cmp r13b, 1
0x239a7:   0f 85 23 01 00 00                     	jne 0x23ad0 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x38c>
0x239ad:   4c 89 34 24                           	mov qword ptr [rsp], r14
0x239b1:   41 b9 00 00 00 00                     	mov r9d, 0
0x239b7:   41 b8 08 00 00 00                     	mov r8d, 8
0x239bd:   b9 00 00 00 00                        	mov ecx, 0
0x239c2:   ba 00 00 00 00                        	mov edx, 0
0x239c7:   be 15 00 00 00                        	mov esi, 0x15
0x239cc:   48 89 df                              	mov rdi, rbx
0x239cf:   ff 15 ab 2e 01 00                     	call qword ptr [rip + 0x12eab]
0x239d5:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x239d9:   84 c0                                 	test al, al
0x239db:   0f 84 96 01 00 00                     	je 0x23b77 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x433>
0x239e1:   48 89 d0                              	mov rax, rdx
0x239e4:   48 c1 e8 07                           	shr rax, 7
0x239e8:   83 e0 01                              	and eax, 1
0x239eb:   48 c1 ea 06                           	shr rdx, 6
0x239ef:   83 e2 01                              	and edx, 1
0x239f2:   75 46                                 	jne 0x23a3a <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x2f6>
0x239f4:   48 85 c0                              	test rax, rax
0x239f7:   75 41                                 	jne 0x23a3a <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x2f6>
0x239f9:   48 c7 44 24 10 03 00 00 00            	mov qword ptr [rsp + 0x10], 3
0x23a02:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23a0a:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x23a11:   41 b9 00 00 00 00                     	mov r9d, 0
0x23a17:   41 b8 02 00 00 00                     	mov r8d, 2
0x23a1d:   b9 02 00 00 00                        	mov ecx, 2
0x23a22:   ba 00 00 00 00                        	mov edx, 0
0x23a27:   be 15 00 00 00                        	mov esi, 0x15
0x23a2c:   48 89 df                              	mov rdi, rbx
0x23a2f:   ff 15 53 2e 01 00                     	call qword ptr [rip + 0x12e53]
0x23a35:   e9 96 00 00 00                        	jmp 0x23ad0 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x38c>
0x23a3a:   48 83 fa 01                           	cmp rdx, 1
0x23a3e:   75 41                                 	jne 0x23a81 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x33d>
0x23a40:   41 83 ff 01                           	cmp r15d, 1
0x23a44:   75 3b                                 	jne 0x23a81 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x33d>
0x23a46:   48 c7 44 24 10 02 00 00 00            	mov qword ptr [rsp + 0x10], 2
0x23a4f:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23a57:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x23a5e:   41 b9 00 00 00 00                     	mov r9d, 0
0x23a64:   41 b8 02 00 00 00                     	mov r8d, 2
0x23a6a:   b9 02 00 00 00                        	mov ecx, 2
0x23a6f:   b2 00                                 	mov dl, 0
0x23a71:   be 15 00 00 00                        	mov esi, 0x15
0x23a76:   48 89 df                              	mov rdi, rbx
0x23a79:   ff 15 09 2e 01 00                     	call qword ptr [rip + 0x12e09]
0x23a7f:   eb 4f                                 	jmp 0x23ad0 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x38c>
0x23a81:   48 83 f8 01                           	cmp rax, 1
0x23a85:   75 05                                 	jne 0x23a8c <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x348>
0x23a87:   45 85 ff                              	test r15d, r15d
0x23a8a:   74 08                                 	je 0x23a94 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x350>
0x23a8c:   41 bd 00 00 00 00                     	mov r13d, 0
0x23a92:   eb 4d                                 	jmp 0x23ae1 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x39d>
0x23a94:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x23a9d:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23aa5:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x23aac:   41 b9 00 00 00 00                     	mov r9d, 0
0x23ab2:   41 b8 02 00 00 00                     	mov r8d, 2
0x23ab8:   b9 02 00 00 00                        	mov ecx, 2
0x23abd:   ba 00 00 00 00                        	mov edx, 0
0x23ac2:   be 15 00 00 00                        	mov esi, 0x15
0x23ac7:   48 89 df                              	mov rdi, rbx
0x23aca:   ff 15 b8 2d 01 00                     	call qword ptr [rip + 0x12db8]
0x23ad0:   84 c0                                 	test al, al
0x23ad2:   0f 84 9f 00 00 00                     	je 0x23b77 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x433>
0x23ad8:   45 84 ed                              	test r13b, r13b
0x23adb:   0f 85 96 00 00 00                     	jne 0x23b77 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x433>
0x23ae1:   41 83 ff 01                           	cmp r15d, 1
0x23ae5:   75 41                                 	jne 0x23b28 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x3e4>
0x23ae7:   48 c7 44 24 10 01 00 00 00            	mov qword ptr [rsp + 0x10], 1
0x23af0:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23af8:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x23aff:   41 b9 00 00 00 00                     	mov r9d, 0
0x23b05:   41 b8 01 00 00 00                     	mov r8d, 1
0x23b0b:   b9 06 00 00 00                        	mov ecx, 6
0x23b10:   ba 00 00 00 00                        	mov edx, 0
0x23b15:   be 13 00 00 00                        	mov esi, 0x13
0x23b1a:   48 89 df                              	mov rdi, rbx
0x23b1d:   ff 15 65 2d 01 00                     	call qword ptr [rip + 0x12d65]
0x23b23:   41 b7 00                              	mov r15b, 0
0x23b26:   eb 42                                 	jmp 0x23b6a <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x426>
0x23b28:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x23b31:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23b39:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x23b40:   41 b9 00 00 00 00                     	mov r9d, 0
0x23b46:   41 b8 01 00 00 00                     	mov r8d, 1
0x23b4c:   b9 06 00 00 00                        	mov ecx, 6
0x23b51:   ba 00 00 00 00                        	mov edx, 0
0x23b56:   be 13 00 00 00                        	mov esi, 0x13
0x23b5b:   48 89 df                              	mov rdi, rbx
0x23b5e:   ff 15 24 2d 01 00                     	call qword ptr [rip + 0x12d24]
0x23b64:   41 bf 01 00 00 00                     	mov r15d, 1
0x23b6a:   45 84 ed                              	test r13b, r13b
0x23b6d:   75 08                                 	jne 0x23b77 <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x433>
0x23b6f:   84 c0                                 	test al, al
0x23b71:   0f 85 e5 fd ff ff                     	jne 0x2395c <BLACKWIDOW_ProgramVcoChannelChangeSpi+0x218>
0x23b77:   84 c0                                 	test al, al
0x23b79:   74 3c                                 	je 0x23bb7
0x23b7b:   48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0x23b84:   c7 44 24 08 06 00 00 00               	mov dword ptr [rsp + 8], 6
0x23b8c:   c7 04 24 01 00 00 00                  	mov dword ptr [rsp], 1
0x23b93:   41 b9 00 00 00 00                     	mov r9d, 0
; data inside code section at 0x23b99 -- 0x23b9d
0x23b99:   41 b8 01 00                                        |A...            |
; function: BLACKWIDOW_SetFrequency at 0x23b9d -- 0x23bc6
0x23b9d:   00 00                                 	add byte ptr [rax], al
0x23b9f:   b9 02 00 00 00                        	mov ecx, 2
0x23ba4:   ba 00 00 00 00                        	mov edx, 0
0x23ba9:   be 13 00 00 00                        	mov esi, 0x13
0x23bae:   48 89 df                              	mov rdi, rbx
0x23bb1:   ff 15 d1 2c 01 00                     	call qword ptr [rip + 0x12cd1]
0x23bb7:   48 83 c4 38                           	add rsp, 0x38
0x23bbb:   5b                                    	pop rbx
0x23bbc:   41 5c                                 	pop r12
0x23bbe:   41 5d                                 	pop r13
0x23bc0:   41 5e                                 	pop r14
0x23bc2:   41 5f                                 	pop r15
0x23bc4:   c9                                    	leave 
0x23bc5:   c3                                    	ret 
; data inside code section at 0x23bc6 -- 0x23bcb
0x23bc6:   b8 00 00 00 00                                     |.....           |
; function: BLACKWIDOW_SetFrequencyAndBandwidth at 0x23bcb -- 0x23bcd
0x23bcb:   eb aa                                 	jmp 0x23b77
; function: BLACKWIDOW_SetFrequency at 0x23bcd -- 0x23bfb
0x23bcd:   55                                    	push rbp
0x23bce:   48 89 e5                              	mov rbp, rsp
0x23bd1:   53                                    	push rbx
0x23bd2:   48 83 ec 08                           	sub rsp, 8
0x23bd6:   e8 15 b0 01 00                        	call 0x3ebf0 <mcount>
0x23bdb:   48 89 fb                              	mov rbx, rdi
0x23bde:   ba 05 00 00 00                        	mov edx, 5
0x23be3:   e8 b9 d7 ff ff                        	call 0x213a1 <BLACKWIDOW_SetFreq>
0x23be8:   84 c0                                 	test al, al
0x23bea:   74 08                                 	je 0x23bf4 <BLACKWIDOW_SetFrequency+0x27>
0x23bec:   48 89 df                              	mov rdi, rbx
0x23bef:   e8 1a e3 ff ff                        	call 0x21f0e <BLACKWIDOW_ProgramVcoChannelChange>
0x23bf4:   48 83 c4 08                           	add rsp, 8
0x23bf8:   5b                                    	pop rbx
0x23bf9:   c9                                    	leave 
0x23bfa:   c3                                    	ret 
; function: BLACKWIDOW_SetFrequencyAndBandwidth at 0x23bfb -- 0x23c4e
0x23bfb:   55                                    	push rbp
0x23bfc:   48 89 e5                              	mov rbp, rsp
0x23bff:   41 54                                 	push r12
0x23c01:   53                                    	push rbx
0x23c02:   e8 e9 af 01 00                        	call 0x3ebf0 <mcount>
0x23c07:   49 89 fc                              	mov r12, rdi
0x23c0a:   48 89 f3                              	mov rbx, rsi
0x23c0d:   48 85 ff                              	test rdi, rdi
0x23c10:   0f 94 c2                              	sete dl
0x23c13:   48 85 f6                              	test rsi, rsi
0x23c16:   0f 94 c0                              	sete al
0x23c19:   09 d0                                 	or eax, edx
0x23c1b:   34 01                                 	xor al, 1
0x23c1d:   74 5b                                 	je 0x23c7a
0x23c1f:   48 8b 36                              	mov rsi, qword ptr [rsi]
0x23c22:   e8 a6 ff ff ff                        	call 0x23bcd <BLACKWIDOW_SetFrequency>
0x23c27:   84 c0                                 	test al, al
0x23c29:   74 4f                                 	je 0x23c7a
0x23c2b:   8b 43 08                              	mov eax, dword ptr [rbx + 8]
0x23c2e:   ba 78 00 00 00                        	mov edx, 0x78
0x23c33:   83 f8 02                              	cmp eax, 2
0x23c36:   77 0a                                 	ja 0x23c42 <BLACKWIDOW_SetFrequencyAndBandwidth+0x47>
0x23c38:   89 c0                                 	mov eax, eax
0x23c3a:   48 8b 14 c5 00 00 00 00               	mov rdx, qword ptr [rax*8]
0x23c42:   48 0f af 53 10                        	imul rdx, qword ptr [rbx + 0x10]
0x23c47:   48 d1 ea                              	shr rdx, 1
0x23c4a:   0f b7 43 18                           	movzx eax, word ptr [rbx + 0x18]
; data inside code section at 0x23c4e -- 0x23c4f
0x23c4e:   48                                                 |H               |
; function: BLACKWIDOW_Tune at 0x23c4f -- 0x23c75
0x23c4f:   8d 04 80                              	lea eax, [rax + rax*4]
0x23c52:   48 8d 04 80                           	lea rax, [rax + rax*4]
0x23c56:   48 8d 04 82                           	lea rax, [rdx + rax*4]
0x23c5a:   48 ba 8f e3 38 8e e3 38 8e e3         	movabs rdx, 0xe38e38e38e38e38f
0x23c64:   48 f7 e2                              	mul rdx
0x23c67:   48 c1 ea 06                           	shr rdx, 6
0x23c6b:   48 8d b2 d0 07 00 00                  	lea rsi, [rdx + 0x7d0]
0x23c72:   4c 89 e7                              	mov rdi, r12
; data inside code section at 0x23c75 -- 0x23c78
0x23c75:   e8 84 e6                                           |...             |
; function: SAT_TUNER_InitIO at 0x23c78 -- 0x23c7f
; function: BLACKWIDOW_Tune at 0x23c7f -- 0x23c90
0x23c7f:   55                                    	push rbp
0x23c80:   48 89 e5                              	mov rbp, rsp
0x23c83:   53                                    	push rbx
0x23c84:   48 83 ec 08                           	sub rsp, 8
0x23c88:   e8 63 af 01 00                        	call 0x3ebf0 <mcount>
0x23c8d:   48 89 fb                              	mov rbx, rdi
; data inside code section at 0x23c90 -- 0x23c91
0x23c90:   e8                                                 |.               |
; function: SAT_TUNER_SetByteOrder at 0x23c91 -- 0x23c92
; data inside code section at 0x23c92 -- 0x23c95
0x23c92:   ff ff ff                                           |...             |
; function: function_23c95 at 0x23c95 -- 0x23ca8
0x23c95:   84 c0                                 	test al, al
0x23c97:   74 08                                 	je 0x23ca1 <function_23c95+0xc>
0x23c99:   48 89 df                              	mov rdi, rbx
0x23c9c:   e8 f8 c4 ff ff                        	call 0x20199 <BLACKWIDOW_SetGain>
0x23ca1:   48 83 c4 08                           	add rsp, 8
0x23ca5:   5b                                    	pop rbx
0x23ca6:   c9                                    	leave 
0x23ca7:   c3                                    	ret 
; function: SAT_TUNER_InitIO at 0x23ca8 -- 0x23cb1
0x23ca8:   55                                    	push rbp
0x23ca9:   48 89 e5                              	mov rbp, rsp
0x23cac:   e8 3f af 01 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x23cb1 -- 0x23cb2
0x23cb1:   48                                                 |H               |
; function: SAT_TUNER_RegRead at 0x23cb2 -- 0x23cc1
0x23cb2:   89 3d c8 2b 01 00                     	mov dword ptr [rip + 0x12bc8], edi
0x23cb8:   48 89 35 c9 2b 01 00                  	mov qword ptr [rip + 0x12bc9], rsi
0x23cbf:   c9                                    	leave 
0x23cc0:   c3                                    	ret 
; function: SAT_TUNER_SetByteOrder at 0x23cc1 -- 0x23ce2
0x23cc1:   55                                    	push rbp
0x23cc2:   48 89 e5                              	mov rbp, rsp
0x23cc5:   e8 26 af 01 00                        	call 0x3ebf0 <mcount>
0x23cca:   40 80 fe 01                           	cmp sil, 1
0x23cce:   b8 00 00 00 00                        	mov eax, 0
0x23cd3:   ba 00 00 00 01                        	mov edx, 0x1000000
0x23cd8:   48 0f 45 c2                           	cmovne rax, rdx
0x23cdc:   48 89 47 58                           	mov qword ptr [rdi + 0x58], rax
0x23ce0:   c9                                    	leave 
0x23ce1:   c3                                    	ret 
; function: SAT_TUNER_RegRead at 0x23ce2 -- 0x23e0d
0x23ce2:   55                                    	push rbp
0x23ce3:   48 89 e5                              	mov rbp, rsp
0x23ce6:   41 57                                 	push r15
0x23ce8:   41 56                                 	push r14
0x23cea:   41 55                                 	push r13
0x23cec:   41 54                                 	push r12
0x23cee:   53                                    	push rbx
0x23cef:   48 83 ec 18                           	sub rsp, 0x18
0x23cf3:   e8 f8 ae 01 00                        	call 0x3ebf0 <mcount>
0x23cf8:   48 89 fb                              	mov rbx, rdi
0x23cfb:   41 89 d5                              	mov r13d, edx
0x23cfe:   88 4d c7                              	mov byte ptr [rbp - 0x39], cl
0x23d01:   41 80 f8 1f                           	cmp r8b, 0x1f
0x23d05:   77 1f                                 	ja 0x23d26 <SAT_TUNER_RegRead+0x44>
0x23d07:   b8 01 00 00 00                        	mov eax, 1
0x23d0c:   44 89 c1                              	mov ecx, r8d
0x23d0f:   48 d3 e0                              	shl rax, cl
0x23d12:   49 89 c0                              	mov r8, rax
0x23d15:   49 83 e8 01                           	sub r8, 1
0x23d19:   0f b6 4d c7                           	movzx ecx, byte ptr [rbp - 0x39]
0x23d1d:   49 d3 e0                              	shl r8, cl
0x23d20:   4c 89 47 30                           	mov qword ptr [rdi + 0x30], r8
0x23d24:   eb 0e                                 	jmp 0x23d34 <SAT_TUNER_RegRead+0x52>
0x23d26:   c7 47 30 ff ff ff ff                  	mov dword ptr [rdi + 0x30], 0xffffffff
0x23d2d:   c7 47 34 00 00 00 00                  	mov dword ptr [rdi + 0x34], 0
0x23d34:   48 85 db                              	test rbx, rbx
0x23d37:   0f 84 cb 00 00 00                     	je 0x23e08 <SAT_TUNER_RegRead+0x126>
0x23d3d:   48 83 7b 18 00                        	cmp qword ptr [rbx + 0x18], 0
0x23d42:   0f 84 c0 00 00 00                     	je 0x23e08 <SAT_TUNER_RegRead+0x126>
0x23d48:   48 83 7d 10 00                        	cmp qword ptr [rbp + 0x10], 0
0x23d4d:   0f 84 b5 00 00 00                     	je 0x23e08 <SAT_TUNER_RegRead+0x126>
0x23d53:   4c 8d 7b 38                           	lea r15, [rbx + 0x38]
0x23d57:   45 84 c9                              	test r9b, r9b
0x23d5a:   0f 84 bc 00 00 00                     	je 0x23e1c
0x23d60:   41 80 f9 04                           	cmp r9b, 4
0x23d64:   41 be 04 00 00 00                     	mov r14d, 4
0x23d6a:   45 0f 46 f1                           	cmovbe r14d, r9d
0x23d6e:   48 c7 43 38 00 00 00 00               	mov qword ptr [rbx + 0x38], 0
0x23d76:   45 84 f6                              	test r14b, r14b
0x23d79:   0f 85 ab 00 00 00                     	jne 0x23e2a
0x23d7f:   eb 34                                 	jmp 0x23db5 <SAT_TUNER_RegRead+0xd3>
0x23d81:   41 0f b6 d5                           	movzx edx, r13b
0x23d85:   48 8b 7b 20                           	mov rdi, qword ptr [rbx + 0x20]
0x23d89:   48 8b 4d c8                           	mov rcx, qword ptr [rbp - 0x38]
0x23d8d:   48 8b 33                              	mov rsi, qword ptr [rbx]
0x23d90:   ff 53 18                              	call qword ptr [rbx + 0x18]
0x23d93:   49 63 d4                              	movsxd rdx, r12d
0x23d96:   41 88 44 17 ff                        	mov byte ptr [r15 + rdx - 1], al
0x23d9b:   48 83 7b 50 00                        	cmp qword ptr [rbx + 0x50], 0
0x23da0:   75 66                                 	jne 0x23e08 <SAT_TUNER_RegRead+0x126>
0x23da2:   41 83 ec 01                           	sub r12d, 1
0x23da6:   41 83 c5 01                           	add r13d, 1
0x23daa:   44 89 f0                              	mov eax, r14d
0x23dad:   44 28 e0                              	sub al, r12b
0x23db0:   41 38 c6                              	cmp r14b, al
0x23db3:   77 cc                                 	ja 0x23d81 <SAT_TUNER_RegRead+0x9f>
0x23db5:   48 81 7b 58 00 00 00 01               	cmp qword ptr [rbx + 0x58], 0x1000000
0x23dbd:   75 2c                                 	jne 0x23deb <SAT_TUNER_RegRead+0x109>
0x23dbf:   49 8d 47 03                           	lea rax, [r15 + 3]
0x23dc3:   0f b6 10                              	movzx edx, byte ptr [rax]
0x23dc6:   41 32 17                              	xor dl, byte ptr [r15]
0x23dc9:   41 88 17                              	mov byte ptr [r15], dl
0x23dcc:   32 10                                 	xor dl, byte ptr [rax]
0x23dce:   88 10                                 	mov byte ptr [rax], dl
0x23dd0:   41 30 17                              	xor byte ptr [r15], dl
0x23dd3:   49 8d 47 01                           	lea rax, [r15 + 1]
0x23dd7:   49 83 c7 02                           	add r15, 2
0x23ddb:   41 0f b6 17                           	movzx edx, byte ptr [r15]
0x23ddf:   32 10                                 	xor dl, byte ptr [rax]
0x23de1:   88 10                                 	mov byte ptr [rax], dl
0x23de3:   41 32 17                              	xor dl, byte ptr [r15]
0x23de6:   41 88 17                              	mov byte ptr [r15], dl
0x23de9:   30 10                                 	xor byte ptr [rax], dl
0x23deb:   48 8b 43 30                           	mov rax, qword ptr [rbx + 0x30]
0x23def:   48 23 43 38                           	and rax, qword ptr [rbx + 0x38]
0x23df3:   0f b6 4d c7                           	movzx ecx, byte ptr [rbp - 0x39]
0x23df7:   48 d3 e8                              	shr rax, cl
0x23dfa:   48 8b 55 10                           	mov rdx, qword ptr [rbp + 0x10]
0x23dfe:   48 89 02                              	mov qword ptr [rdx], rax
0x23e01:   b8 01 00 00 00                        	mov eax, 1
0x23e06:   eb 05                                 	jmp 0x23e0d
0x23e08:   b8 00 00 00 00                        	mov eax, 0
; data inside code section at 0x23e0d -- 0x23e0e
0x23e0d:   48                                                 |H               |
; function: SAT_TUNER_RegWrite at 0x23e0e -- 0x23e3e
0x23e0e:   83 c4 18                              	add esp, 0x18
0x23e11:   5b                                    	pop rbx
0x23e12:   41 5c                                 	pop r12
0x23e14:   41 5d                                 	pop r13
0x23e16:   41 5e                                 	pop r14
0x23e18:   41 5f                                 	pop r15
0x23e1a:   c9                                    	leave 
0x23e1b:   c3                                    	ret 
0x23e1c:   48 c7 43 38 00 00 00 00               	mov qword ptr [rbx + 0x38], 0
0x23e24:   41 be 01 00 00 00                     	mov r14d, 1
0x23e2a:   48 8d 4b 50                           	lea rcx, [rbx + 0x50]
0x23e2e:   48 89 4d c8                           	mov qword ptr [rbp - 0x38], rcx
0x23e32:   45 0f b6 e6                           	movzx r12d, r14b
0x23e36:   41 01 f5                              	add r13d, esi
0x23e39:   e9 43 ff ff ff                        	jmp 0x23d81
; function: SAT_TUNER_RegWrite at 0x23e3e -- 0x23f3f
0x23e3e:   55                                    	push rbp
0x23e3f:   48 89 e5                              	mov rbp, rsp
0x23e42:   41 57                                 	push r15
0x23e44:   41 56                                 	push r14
0x23e46:   41 55                                 	push r13
0x23e48:   41 54                                 	push r12
0x23e4a:   53                                    	push rbx
0x23e4b:   48 83 ec 28                           	sub rsp, 0x28
0x23e4f:   e8 9c ad 01 00                        	call 0x3ebf0 <mcount>
0x23e54:   48 89 fb                              	mov rbx, rdi
0x23e57:   41 89 d6                              	mov r14d, edx
0x23e5a:   89 c8                                 	mov eax, ecx
0x23e5c:   0f b6 55 10                           	movzx edx, byte ptr [rbp + 0x10]
0x23e60:   88 55 b7                              	mov byte ptr [rbp - 0x49], dl
0x23e63:   0f b6 7d 18                           	movzx edi, byte ptr [rbp + 0x18]
0x23e67:   41 80 f8 1f                           	cmp r8b, 0x1f
0x23e6b:   77 1d                                 	ja 0x23e8a <SAT_TUNER_RegWrite+0x4c>
0x23e6d:   ba 01 00 00 00                        	mov edx, 1
0x23e72:   44 89 c1                              	mov ecx, r8d
0x23e75:   48 d3 e2                              	shl rdx, cl
0x23e78:   49 89 d0                              	mov r8, rdx
0x23e7b:   49 83 e8 01                           	sub r8, 1
0x23e7f:   89 c1                                 	mov ecx, eax
0x23e81:   49 d3 e0                              	shl r8, cl
0x23e84:   4c 89 43 40                           	mov qword ptr [rbx + 0x40], r8
0x23e88:   eb 0e                                 	jmp 0x23e98 <SAT_TUNER_RegWrite+0x5a>
0x23e8a:   c7 43 40 ff ff ff ff                  	mov dword ptr [rbx + 0x40], 0xffffffff
0x23e91:   c7 43 44 00 00 00 00                  	mov dword ptr [rbx + 0x44], 0
0x23e98:   48 8b 55 20                           	mov rdx, qword ptr [rbp + 0x20]
0x23e9c:   89 c1                                 	mov ecx, eax
0x23e9e:   48 d3 e2                              	shl rdx, cl
0x23ea1:   48 89 d0                              	mov rax, rdx
0x23ea4:   48 23 43 40                           	and rax, qword ptr [rbx + 0x40]
0x23ea8:   48 89 43 48                           	mov qword ptr [rbx + 0x48], rax
0x23eac:   48 85 db                              	test rbx, rbx
0x23eaf:   0f 84 f3 00 00 00                     	je 0x23fa8
0x23eb5:   48 83 7b 10 00                        	cmp qword ptr [rbx + 0x10], 0
0x23eba:   0f 84 e8 00 00 00                     	je 0x23fa8
0x23ec0:   40 f6 c7 02                           	test dil, 2
0x23ec4:   0f 84 e5 00 00 00                     	je 0x23faf
0x23eca:   45 84 c9                              	test r9b, r9b
0x23ecd:   b8 01 00 00 00                        	mov eax, 1
0x23ed2:   44 0f 44 c8                           	cmove r9d, eax
0x23ed6:   4c 8d 7b 48                           	lea r15, [rbx + 0x48]
0x23eda:   41 80 f9 04                           	cmp r9b, 4
0x23ede:   b8 04 00 00 00                        	mov eax, 4
0x23ee3:   89 c2                                 	mov edx, eax
0x23ee5:   41 0f 46 d1                           	cmovbe edx, r9d
0x23ee9:   88 55 c0                              	mov byte ptr [rbp - 0x40], dl
0x23eec:   48 81 7b 58 00 00 00 01               	cmp qword ptr [rbx + 0x58], 0x1000000
0x23ef4:   75 29                                 	jne 0x23f1f <SAT_TUNER_RegWrite+0xe1>
0x23ef6:   49 8d 47 03                           	lea rax, [r15 + 3]
0x23efa:   0f b6 10                              	movzx edx, byte ptr [rax]
0x23efd:   41 32 17                              	xor dl, byte ptr [r15]
0x23f00:   41 88 17                              	mov byte ptr [r15], dl
0x23f03:   32 10                                 	xor dl, byte ptr [rax]
0x23f05:   88 10                                 	mov byte ptr [rax], dl
0x23f07:   41 30 17                              	xor byte ptr [r15], dl
0x23f0a:   49 8d 47 01                           	lea rax, [r15 + 1]
0x23f0e:   49 8d 57 02                           	lea rdx, [r15 + 2]
0x23f12:   0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x23f15:   32 08                                 	xor cl, byte ptr [rax]
0x23f17:   88 08                                 	mov byte ptr [rax], cl
0x23f19:   32 0a                                 	xor cl, byte ptr [rdx]
0x23f1b:   88 0a                                 	mov byte ptr [rdx], cl
0x23f1d:   30 08                                 	xor byte ptr [rax], cl
0x23f1f:   80 7d c0 00                           	cmp byte ptr [rbp - 0x40], 0
0x23f23:   0f 84 86 00 00 00                     	je 0x23faf
0x23f29:   48 8d 4b 50                           	lea rcx, [rbx + 0x50]
0x23f2d:   48 89 4d b8                           	mov qword ptr [rbp - 0x48], rcx
0x23f31:   44 0f b6 6d c0                        	movzx r13d, byte ptr [rbp - 0x40]
0x23f36:   41 01 f6                              	add r14d, esi
0x23f39:   41 bc 00 00 00 00                     	mov r12d, 0
; data inside code section at 0x23f3f -- 0x23f93
0x23f3f:   80 7d b7 01 75 2d 41 0f  b6 d6 48 8b 7b 20 48 8b   |.}..u-A...H.{ H.|
0x23f4f:   4d b8 48 8b 33 ff 53 18  42 8d 0c e5 00 00 00 00   |M.H.3.S.B.......|
0x23f5f:   48 8b 53 40 48 d3 ea f7  d2 21 d0 49 63 cd 41 08   |H.S@H....!.Ic.A.|
0x23f6f:   44 0f ff 49 63 c5 41 0f  b6 4c 07 ff 41 0f b6 d6   |D..Ic.A..L..A...|
0x23f7f:   48 8b 7b 20 4c 8b 45 b8  48 8b 33 ff 53 10 48 83   |H.{ L.E.H.3.S.H.|
0x23f8f:   7b 50 00 75                                        |{P.u            |
; function: SAT_TUNER_strncpy at 0x23f93 -- 0x23fbb
0x23f93:   14 41                                 	adc al, 0x41
0x23f95:   83 c4 01                              	add esp, 1
0x23f98:   41 83 ed 01                           	sub r13d, 1
0x23f9c:   41 83 c6 01                           	add r14d, 1
0x23fa0:   44 38 65 c0                           	cmp byte ptr [rbp - 0x40], r12b
0x23fa4:   77 99                                 	ja 0x23f3f
0x23fa6:   eb 07                                 	jmp 0x23faf <SAT_TUNER_strncpy+0x1c>
0x23fa8:   b8 00 00 00 00                        	mov eax, 0
0x23fad:   eb 05                                 	jmp 0x23fb4 <SAT_TUNER_strncpy+0x21>
0x23faf:   b8 01 00 00 00                        	mov eax, 1
0x23fb4:   48 83 c4 28                           	add rsp, 0x28
0x23fb8:   5b                                    	pop rbx
0x23fb9:   41 5c                                 	pop r12
; data inside code section at 0x23fbb -- 0x23fbc
0x23fbb:   41                                                 |A               |
; function: BLACKWIDOW_GetDriverVersion at 0x23fbc -- 0x23fc3
0x23fbc:   5d                                    	pop rbp
0x23fbd:   41 5e                                 	pop r14
0x23fbf:   41 5f                                 	pop r15
0x23fc1:   c9                                    	leave 
0x23fc2:   c3                                    	ret 
; function: SAT_TUNER_strncpy at 0x23fc3 -- 0x23fe5
0x23fc3:   55                                    	push rbp
0x23fc4:   48 89 e5                              	mov rbp, rsp
0x23fc7:   e8 24 ac 01 00                        	call 0x3ebf0 <mcount>
0x23fcc:   85 d2                                 	test edx, edx
0x23fce:   74 1a                                 	je 0x23fea
0x23fd0:   83 ea 01                              	sub edx, 1
0x23fd3:   48 8d 54 16 01                        	lea rdx, [rsi + rdx + 1]
0x23fd8:   0f b6 06                              	movzx eax, byte ptr [rsi]
0x23fdb:   88 07                                 	mov byte ptr [rdi], al
0x23fdd:   48 83 c6 01                           	add rsi, 1
0x23fe1:   48 83 c7 01                           	add rdi, 1
; data inside code section at 0x23fe5 -- 0x23fe7
0x23fe5:   48 39                                              |H9              |
; function: TDA2014x_TunerSetFrequency at 0x23fe7 -- 0x23fec
; function: BLACKWIDOW_GetDriverVersion at 0x23fec -- 0x24017
0x23fec:   55                                    	push rbp
0x23fed:   48 89 e5                              	mov rbp, rsp
0x23ff0:   e8 fb ab 01 00                        	call 0x3ebf0 <mcount>
0x23ff5:   b8 00 00 00 00                        	mov eax, 0
0x23ffa:   48 85 ff                              	test rdi, rdi
0x23ffd:   74 16                                 	je 0x24015 <BLACKWIDOW_GetDriverVersion+0x29>
0x23fff:   ba 09 00 00 00                        	mov edx, 9
0x24004:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x2400b:   e8 b3 ff ff ff                        	call 0x23fc3 <SAT_TUNER_strncpy>
0x24010:   b8 01 00 00 00                        	mov eax, 1
0x24015:   c9                                    	leave 
0x24016:   c3                                    	ret 
; function: TDA2014x_TunerSetFrequency at 0x24017 -- 0x2404d
0x24017:   55                                    	push rbp
0x24018:   48 89 e5                              	mov rbp, rsp
0x2401b:   48 83 ec 20                           	sub rsp, 0x20
0x2401f:   e8 cc ab 01 00                        	call 0x3ebf0 <mcount>
0x24024:   48 d1 ee                              	shr rsi, 1
0x24027:   48 8d 0c 76                           	lea rcx, [rsi + rsi*2]
0x2402b:   48 89 c8                              	mov rax, rcx
0x2402e:   48 c1 e0 05                           	shl rax, 5
0x24032:   48 89 b8 00 00 00 00                  	mov qword ptr [rax], rdi
0x24039:   48 c1 ea 03                           	shr rdx, 3
0x2403d:   48 be cf f7 53 e3 a5 9b c4 20         	movabs rsi, 0x20c49ba5e353f7cf
0x24047:   48 89 d0                              	mov rax, rdx
0x2404a:   48 f7 e6                              	mul rsi
; data inside code section at 0x2404d -- 0x24050
0x2404d:   48 c1 ea                                           |H..             |
; function: TDA2014x_TunerCheckLockStatus at 0x24050 -- 0x24080
0x24050:   04 48                                 	add al, 0x48
0x24052:   89 55 e0                              	mov dword ptr [rbp - 0x20], edx
0x24055:   48 c7 45 f0 bc 70 00 00               	mov qword ptr [rbp - 0x10], 0x70bc
0x2405d:   c7 45 e8 02 00 00 00                  	mov dword ptr [rbp - 0x18], 2
0x24064:   66 c7 45 f8 88 13                     	mov word ptr [rbp - 8], 0x1388
0x2406a:   48 8d 75 e0                           	lea rsi, [rbp - 0x20]
0x2406e:   48 c1 e1 05                           	shl rcx, 5
0x24072:   48 8d b9 00 00 00 00                  	lea rdi, [rcx]
0x24079:   e8 01 fc ff ff                        	call 0x23c7f <BLACKWIDOW_Tune>
0x2407e:   c9                                    	leave 
0x2407f:   c3                                    	ret 
; function: TDA2014x_TunerCheckLockStatus at 0x24080 -- 0x240ad
0x24080:   55                                    	push rbp
0x24081:   48 89 e5                              	mov rbp, rsp
0x24084:   53                                    	push rbx
0x24085:   48 83 ec 18                           	sub rsp, 0x18
0x24089:   e8 62 ab 01 00                        	call 0x3ebf0 <mcount>
0x2408e:   48 89 d3                              	mov rbx, rdx
0x24091:   48 d1 ee                              	shr rsi, 1
0x24094:   48 8d 04 76                           	lea rax, [rsi + rsi*2]
0x24098:   48 89 c2                              	mov rdx, rax
0x2409b:   48 c1 e2 05                           	shl rdx, 5
0x2409f:   48 89 ba 00 00 00 00                  	mov qword ptr [rdx], rdi
0x240a6:   48 8d 75 ef                           	lea rsi, [rbp - 0x11]
0x240aa:   48 89 d7                              	mov rdi, rdx
; data inside code section at 0x240ad -- 0x240b1
0x240ad:   48 81 c7 00                                        |H...            |
; function: TDA2014x_TunerInitialization at 0x240b1 -- 0x240ba
0x240b1:   00 00                                 	add byte ptr [rax], al
0x240b3:   00 e8                                 	add al, ch
0x240b5:   e9 a9 ff ff 89                        	jmp 0xffffffff8a024063 <function_ffffffff8a024063>
; function: function_240ba at 0x240ba -- 0x240bd
0x240ba:   c2 b8 00                              	ret 0xb8
; function: function_240bd at 0x240bd -- 0x240e1
0x240bd:   00 00                                 	add byte ptr [rax], al
0x240bf:   00 80 fa 01 75 15                     	add byte ptr [rax + 0x157501fa], al
0x240c5:   b8 01 00 00 00                        	mov eax, 1
0x240ca:   48 85 db                              	test rbx, rbx
0x240cd:   74 0b                                 	je 0x240da <function_240bd+0x1d>
0x240cf:   0f b6 45 ef                           	movzx eax, byte ptr [rbp - 0x11]
0x240d3:   88 03                                 	mov byte ptr [rbx], al
0x240d5:   b8 01 00 00 00                        	mov eax, 1
0x240da:   48 83 c4 18                           	add rsp, 0x18
0x240de:   5b                                    	pop rbx
0x240df:   c9                                    	leave 
0x240e0:   c3                                    	ret 
; function: TDA2014x_TunerInitialization at 0x240e1 -- 0x24412
0x240e1:   55                                    	push rbp
0x240e2:   48 89 e5                              	mov rbp, rsp
0x240e5:   53                                    	push rbx
0x240e6:   48 83 ec 38                           	sub rsp, 0x38
0x240ea:   e8 01 ab 01 00                        	call 0x3ebf0 <mcount>
0x240ef:   48 89 f0                              	mov rax, rsi
0x240f2:   48 d1 e8                              	shr rax, 1
0x240f5:   48 89 34 c5 00 00 00 00               	mov qword ptr [rax*8], rsi
0x240fd:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x24104:   48 8d 14 80                           	lea rdx, [rax + rax*4]
0x24108:   48 c1 e2 02                           	shl rdx, 2
0x2410c:   48 8d 1c 02                           	lea rbx, [rdx + rax]
0x24110:   48 c7 44 d9 08 00 00 00 00            	mov qword ptr [rcx + rbx*8 + 8], 0
0x24119:   c7 44 d9 10 ff 01 00 00               	mov dword ptr [rcx + rbx*8 + 0x10], 0x1ff
0x24121:   c7 44 d9 14 ff 01 00 00               	mov dword ptr [rcx + rbx*8 + 0x14], 0x1ff
0x24129:   c7 44 d9 18 ff 01 00 00               	mov dword ptr [rcx + rbx*8 + 0x18], 0x1ff
0x24131:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x24138:   c7 44 d9 0c 04 00 00 00               	mov dword ptr [rcx + rbx*8 + 0xc], 4
0x24140:   c6 44 d9 10 00                        	mov byte ptr [rcx + rbx*8 + 0x10], 0
0x24145:   c6 44 d9 11 00                        	mov byte ptr [rcx + rbx*8 + 0x11], 0
0x2414a:   c6 44 d9 12 00                        	mov byte ptr [rcx + rbx*8 + 0x12], 0
0x2414f:   c7 44 d9 14 05 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x14], 5
0x24157:   c7 44 d9 18 04 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x18], 4
0x2415f:   c7 44 d9 1c 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x1c], 8
0x24167:   c7 44 d9 20 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x20], 8
0x2416f:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x24176:   c7 44 d9 14 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x14], 8
0x2417e:   c7 44 d9 18 10 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x18], 0x10
0x24186:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x2418d:   c7 44 d9 0c 04 00 00 00               	mov dword ptr [rcx + rbx*8 + 0xc], 4
0x24195:   c6 44 d9 10 00                        	mov byte ptr [rcx + rbx*8 + 0x10], 0
0x2419a:   c6 44 d9 11 00                        	mov byte ptr [rcx + rbx*8 + 0x11], 0
0x2419f:   c6 44 d9 12 00                        	mov byte ptr [rcx + rbx*8 + 0x12], 0
0x241a4:   c7 44 d9 14 05 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x14], 5
0x241ac:   c7 44 d9 18 04 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x18], 4
0x241b4:   c7 44 d9 1c 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x1c], 8
0x241bc:   c7 44 d9 20 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x20], 8
0x241c4:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x241cb:   c7 44 d9 14 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x14], 8
0x241d3:   c7 44 d9 18 10 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x18], 0x10
0x241db:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x241e2:   c7 44 d9 0c 04 00 00 00               	mov dword ptr [rcx + rbx*8 + 0xc], 4
0x241ea:   c6 44 d9 10 00                        	mov byte ptr [rcx + rbx*8 + 0x10], 0
0x241ef:   c6 44 d9 11 00                        	mov byte ptr [rcx + rbx*8 + 0x11], 0
0x241f4:   c6 44 d9 12 00                        	mov byte ptr [rcx + rbx*8 + 0x12], 0
0x241f9:   c7 44 d9 14 05 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x14], 5
0x24201:   c7 44 d9 18 04 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x18], 4
0x24209:   c7 44 d9 1c 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x1c], 8
0x24211:   c7 44 d9 20 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x20], 8
0x24219:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x24220:   c7 44 d9 14 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x14], 8
0x24228:   c7 44 d9 18 10 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x18], 0x10
0x24230:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x24237:   c7 44 d9 0c 04 00 00 00               	mov dword ptr [rcx + rbx*8 + 0xc], 4
0x2423f:   c6 44 d9 10 00                        	mov byte ptr [rcx + rbx*8 + 0x10], 0
0x24244:   c6 44 d9 11 00                        	mov byte ptr [rcx + rbx*8 + 0x11], 0
0x24249:   c6 44 d9 12 00                        	mov byte ptr [rcx + rbx*8 + 0x12], 0
0x2424e:   c7 44 d9 14 05 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x14], 5
0x24256:   c7 44 d9 18 04 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x18], 4
0x2425e:   c7 44 d9 1c 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x1c], 8
0x24266:   c7 44 d9 20 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x20], 8
0x2426e:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x24275:   c7 44 d9 14 08 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x14], 8
0x2427d:   c7 44 d9 18 10 00 00 00               	mov dword ptr [rcx + rbx*8 + 0x18], 0x10
0x24285:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x2428c:   c7 04 d9 04 00 00 00                  	mov dword ptr [rcx + rbx*8], 4
0x24293:   c7 44 d9 04 ff 03 00 00               	mov dword ptr [rcx + rbx*8 + 4], 0x3ff
0x2429b:   48 89 c2                              	mov rdx, rax
0x2429e:   83 e2 03                              	and edx, 3
0x242a1:   75 15                                 	jne 0x242b8 <TDA2014x_TunerInitialization+0x1d7>
0x242a3:   48 8d 14 80                           	lea rdx, [rax + rax*4]
0x242a7:   48 8d 14 90                           	lea rdx, [rax + rdx*4]
0x242ab:   c7 04 d5 00 00 00 00 00 00 00 00      	mov dword ptr [rdx*8], 0
0x242b6:   eb 49                                 	jmp 0x24301 <TDA2014x_TunerInitialization+0x220>
0x242b8:   48 83 fa 01                           	cmp rdx, 1
0x242bc:   75 15                                 	jne 0x242d3 <TDA2014x_TunerInitialization+0x1f2>
0x242be:   48 8d 14 80                           	lea rdx, [rax + rax*4]
0x242c2:   48 8d 14 90                           	lea rdx, [rax + rdx*4]
0x242c6:   c7 04 d5 00 00 00 00 01 00 00 00      	mov dword ptr [rdx*8], 1
0x242d1:   eb 2e                                 	jmp 0x24301 <TDA2014x_TunerInitialization+0x220>
0x242d3:   48 83 fa 02                           	cmp rdx, 2
0x242d7:   75 15                                 	jne 0x242ee <TDA2014x_TunerInitialization+0x20d>
0x242d9:   48 8d 14 80                           	lea rdx, [rax + rax*4]
0x242dd:   48 8d 14 90                           	lea rdx, [rax + rdx*4]
0x242e1:   c7 04 d5 00 00 00 00 02 00 00 00      	mov dword ptr [rdx*8], 2
0x242ec:   eb 13                                 	jmp 0x24301 <TDA2014x_TunerInitialization+0x220>
0x242ee:   48 8d 14 80                           	lea rdx, [rax + rax*4]
0x242f2:   48 8d 14 90                           	lea rdx, [rax + rdx*4]
0x242f6:   c7 04 d5 00 00 00 00 03 00 00 00      	mov dword ptr [rdx*8], 3
0x24301:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x24308:   48 8d 1c 00                           	lea rbx, [rax + rax]
0x2430c:   48 8d 0c 03                           	lea rcx, [rbx + rax]
0x24310:   48 c1 e1 05                           	shl rcx, 5
0x24314:   48 8d 34 c5 00 00 00 00               	lea rsi, [rax*8]
0x2431c:   48 89 34 11                           	mov qword ptr [rcx + rdx], rsi
0x24320:   48 8d 0c 03                           	lea rcx, [rbx + rax]
0x24324:   48 c1 e1 05                           	shl rcx, 5
0x24328:   48 c7 44 11 08 00 00 00 00            	mov qword ptr [rcx + rdx + 8], 0
0x24331:   48 8d 0c 03                           	lea rcx, [rbx + rax]
0x24335:   48 8d 4c 09 01                        	lea rcx, [rcx + rcx + 1]
0x2433a:   48 c1 e1 04                           	shl rcx, 4
0x2433e:   48 c7 04 0a 00 00 00 00               	mov qword ptr [rdx + rcx], 0
0x24346:   48 c7 44 0a 08 00 00 00 00            	mov qword ptr [rdx + rcx + 8], 0
0x2434f:   48 01 c3                              	add rbx, rax
0x24352:   48 8d 4b 01                           	lea rcx, [rbx + 1]
0x24356:   48 c1 e1 05                           	shl rcx, 5
0x2435a:   48 89 3c 11                           	mov qword ptr [rcx + rdx], rdi
0x2435e:   48 8d 34 80                           	lea rsi, [rax + rax*4]
0x24362:   48 8d 04 b0                           	lea rax, [rax + rsi*4]
0x24366:   48 8d 04 c5 00 00 00 00               	lea rax, [rax*8]
0x2436e:   48 89 44 11 08                        	mov qword ptr [rcx + rdx + 8], rax
0x24373:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x2437a:   48 c1 e3 05                           	shl rbx, 5
0x2437e:   48 c7 04 03 00 00 00 00               	mov qword ptr [rbx + rax], 0
0x24386:   48 c7 44 03 08 00 00 00 00            	mov qword ptr [rbx + rax + 8], 0
0x2438f:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x24396:   48 c7 04 03 00 00 00 00               	mov qword ptr [rbx + rax], 0
0x2439e:   48 c7 44 03 08 00 00 00 00            	mov qword ptr [rbx + rax + 8], 0
0x243a7:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x243ae:   48 c7 04 03 00 00 00 00               	mov qword ptr [rbx + rax], 0
0x243b6:   48 c7 44 03 08 00 00 00 00            	mov qword ptr [rbx + rax + 8], 0
0x243bf:   c7 45 e0 08 00 00 00                  	mov dword ptr [rbp - 0x20], 8
0x243c6:   48 c7 45 e8 c0 fc 9b 01               	mov qword ptr [rbp - 0x18], 0x19bfcc0
0x243ce:   48 01 d3                              	add rbx, rdx
0x243d1:   48 8d 75 e0                           	lea rsi, [rbp - 0x20]
0x243d5:   48 89 df                              	mov rdi, rbx
0x243d8:   e8 7f f0 ff ff                        	call 0x2345c <BLACKWIDOW_Initialize>
0x243dd:   3c 01                                 	cmp al, 1
0x243df:   75 49                                 	jne 0x2442a
0x243e1:   be 01 00 00 00                        	mov esi, 1
0x243e6:   48 89 df                              	mov rdi, rbx
0x243e9:   e8 54 aa ff ff                        	call 0x1ee42 <BLACKWIDOW_EnableLoopThrough>
0x243ee:   48 c7 45 c0 70 1c 14 00               	mov qword ptr [rbp - 0x40], 0x141c70
0x243f6:   48 c7 45 d0 bc 70 00 00               	mov qword ptr [rbp - 0x30], 0x70bc
0x243fe:   c7 45 c8 02 00 00 00                  	mov dword ptr [rbp - 0x38], 2
0x24405:   66 c7 45 d8 88 13                     	mov word ptr [rbp - 0x28], 0x1388
0x2440b:   48 8d 75 c0                           	lea rsi, [rbp - 0x40]
0x2440f:   48 89 df                              	mov rdi, rbx
; function: NMI131_TunerSetFrequency at 0x24412 -- 0x24442
0x24412:   e8 68 f8 ff ff                        	call 0x23c7f <BLACKWIDOW_Tune>
0x24417:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2441e:   e8 71 6f 00 00                        	call 0x2b394 <DriverDebugMessage>
0x24423:   b8 01 00 00 00                        	mov eax, 1
0x24428:   eb 11                                 	jmp 0x2443b <NMI131_TunerSetFrequency+0x29>
0x2442a:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x24431:   e8 5e 6f 00 00                        	call 0x2b394 <DriverDebugMessage>
0x24436:   b8 00 00 00 00                        	mov eax, 0
0x2443b:   48 83 c4 38                           	add rsp, 0x38
0x2443f:   5b                                    	pop rbx
0x24440:   c9                                    	leave 
0x24441:   c3                                    	ret 
; function: NMI131_TunerSetFrequency at 0x24442 -- 0x244e4
0x24442:   55                                    	push rbp
0x24443:   48 89 e5                              	mov rbp, rsp
0x24446:   41 55                                 	push r13
0x24448:   41 54                                 	push r12
0x2444a:   53                                    	push rbx
0x2444b:   48 83 ec 38                           	sub rsp, 0x38
0x2444f:   e8 9c a7 01 00                        	call 0x3ebf0 <mcount>
0x24454:   49 89 fc                              	mov r12, rdi
0x24457:   49 89 f5                              	mov r13, rsi
0x2445a:   48 89 d3                              	mov rbx, rdx
0x2445d:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x24464:   e8 2b 6f 00 00                        	call 0x2b394 <DriverDebugMessage>
0x24469:   48 89 de                              	mov rsi, rbx
0x2446c:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x24473:   b8 00 00 00 00                        	mov eax, 0
0x24478:   e8 22 6f 00 00                        	call 0x2b39f <DriverDebugPrint>
0x2447d:   49 d1 ed                              	shr r13, 1
0x24480:   4a 8d 14 ad 00 00 00 00               	lea rdx, [r13*4]
0x24488:   4a 8d 04 2a                           	lea rax, [rdx + r13]
0x2448c:   4c 89 24 c5 00 00 00 00               	mov qword ptr [rax*8], r12
0x24494:   48 81 c3 98 2e 02 00                  	add rbx, 0x22e98
0x2449b:   89 5d b0                              	mov dword ptr [rbp - 0x50], ebx
0x2449e:   c7 45 b4 00 00 00 00                  	mov dword ptr [rbp - 0x4c], 0
0x244a5:   c7 45 b8 00 09 3d 00                  	mov dword ptr [rbp - 0x48], 0x3d0900
0x244ac:   c7 45 bc 06 00 00 00                  	mov dword ptr [rbp - 0x44], 6
0x244b3:   c7 45 c0 02 00 00 00                  	mov dword ptr [rbp - 0x40], 2
0x244ba:   c6 45 c4 00                           	mov byte ptr [rbp - 0x3c], 0
0x244be:   c6 45 c5 01                           	mov byte ptr [rbp - 0x3b], 1
0x244c2:   c7 45 c8 00 00 00 00                  	mov dword ptr [rbp - 0x38], 0
0x244c9:   c6 45 cc 00                           	mov byte ptr [rbp - 0x34], 0
0x244cd:   c6 45 cd 00                           	mov byte ptr [rbp - 0x33], 0
0x244d1:   c6 45 d0 00                           	mov byte ptr [rbp - 0x30], 0
0x244d5:   c6 45 d1 00                           	mov byte ptr [rbp - 0x2f], 0
0x244d9:   c7 45 d4 00 00 00 00                  	mov dword ptr [rbp - 0x2c], 0
0x244e0:   c6 45 d8 00                           	mov byte ptr [rbp - 0x28], 0
; data inside code section at 0x244e4 -- 0x244e7
0x244e4:   c6 45 d9                                           |.E.             |
; function: TDA2014x_I2C_Write at 0x244e7 -- 0x24517
0x244e7:   00 c6                                 	add dh, al
0x244e9:   45 da 00                              	fiadd dword ptr [r8]
0x244ec:   4a 8b 04 ed 00 00 00 00               	mov rax, qword ptr [r13*8]
0x244f4:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x244f8:   4e 8d 2c 2a                           	lea r13, [rdx + r13]
0x244fc:   4a 8d 3c ed 00 00 00 00               	lea rdi, [r13*8]
0x24504:   ff 50 30                              	call qword ptr [rax + 0x30]
0x24507:   f7 d0                                 	not eax
0x24509:   c1 e8 1f                              	shr eax, 0x1f
0x2450c:   48 83 c4 38                           	add rsp, 0x38
0x24510:   5b                                    	pop rbx
0x24511:   41 5c                                 	pop r12
0x24513:   41 5d                                 	pop r13
0x24515:   c9                                    	leave 
0x24516:   c3                                    	ret 
; function: TDA2014x_I2C_Write at 0x24517 -- 0x24553
0x24517:   55                                    	push rbp
0x24518:   48 89 e5                              	mov rbp, rsp
0x2451b:   53                                    	push rbx
0x2451c:   48 83 ec 18                           	sub rsp, 0x18
0x24520:   e8 cb a6 01 00                        	call 0x3ebf0 <mcount>
0x24525:   4c 89 c3                              	mov rbx, r8
0x24528:   48 85 f6                              	test rsi, rsi
0x2452b:   74 50                                 	je 0x2457d
0x2452d:   4d 85 c0                              	test r8, r8
0x24530:   74 4b                                 	je 0x2457d
0x24532:   48 8b 36                              	mov rsi, qword ptr [rsi]
0x24535:   01 f6                                 	add esi, esi
0x24537:   83 e6 0f                              	and esi, 0xf
0x2453a:   83 c6 20                              	add esi, 0x20
0x2453d:   c6 45 e0 fe                           	mov byte ptr [rbp - 0x20], 0xfe
0x24541:   c6 45 e1 a8                           	mov byte ptr [rbp - 0x1f], 0xa8
0x24545:   88 55 e2                              	mov byte ptr [rbp - 0x1e], dl
0x24548:   88 4d e3                              	mov byte ptr [rbp - 0x1d], cl
0x2454b:   48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x2454f:   40 0f b6 f6                           	movzx esi, sil
; data inside code section at 0x24553 -- 0x24554
0x24553:   b9                                                 |.               |
; function: TC90522DemodulatorPSK_I2C_Write at 0x24554 -- 0x2457d
0x24554:   04 00                                 	add al, 0
0x24556:   00 00                                 	add byte ptr [rax], al
0x24558:   e8 8f 6d 00 00                        	call 0x2b2ec <I2C_PortingLayer_Write>
0x2455d:   84 c0                                 	test al, al
0x2455f:   74 09                                 	je 0x2456a <TC90522DemodulatorPSK_I2C_Write+0x16>
0x24561:   48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0x24568:   eb 13                                 	jmp 0x2457d <TC90522DemodulatorPSK_I2C_Write+0x22>
0x2456a:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x24571:   e8 1e 6e 00 00                        	call 0x2b394 <DriverDebugMessage>
0x24576:   48 c7 03 01 00 00 00                  	mov qword ptr [rbx], 1
; data inside code section at 0x2457d -- 0x2457f
0x2457d:   48 83                                              |H.              |
; function: TC90522_SetTSID at 0x2457f -- 0x24580
; function: function_24580 at 0x24580 -- 0x24584
0x24580:   18 5b c9                              	sbb byte ptr [rbx - 0x37], bl
0x24583:   c3                                    	ret 
; function: TC90522DemodulatorPSK_I2C_Write at 0x24584 -- 0x245af
0x24584:   55                                    	push rbp
0x24585:   48 89 e5                              	mov rbp, rsp
0x24588:   48 83 ec 10                           	sub rsp, 0x10
0x2458c:   e8 5f a6 01 00                        	call 0x3ebf0 <mcount>
0x24591:   88 55 f0                              	mov byte ptr [rbp - 0x10], dl
0x24594:   88 4d f1                              	mov byte ptr [rbp - 0xf], cl
0x24597:   48 8d 55 f0                           	lea rdx, [rbp - 0x10]
0x2459b:   01 f6                                 	add esi, esi
0x2459d:   83 e6 0e                              	and esi, 0xe
0x245a0:   83 c6 20                              	add esi, 0x20
0x245a3:   b9 02 00 00 00                        	mov ecx, 2
0x245a8:   e8 3f 6d 00 00                        	call 0x2b2ec <I2C_PortingLayer_Write>
0x245ad:   c9                                    	leave 
0x245ae:   c3                                    	ret 
; function: TC90522_SetTSID at 0x245af -- 0x245e8
0x245af:   55                                    	push rbp
0x245b0:   48 89 e5                              	mov rbp, rsp
0x245b3:   48 83 ec 20                           	sub rsp, 0x20
0x245b7:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x245bb:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x245bf:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x245c3:   e8 28 a6 01 00                        	call 0x3ebf0 <mcount>
0x245c8:   49 89 fc                              	mov r12, rdi
0x245cb:   48 89 f3                              	mov rbx, rsi
0x245ce:   41 89 d5                              	mov r13d, edx
0x245d1:   48 83 fe 3f                           	cmp rsi, 0x3f
0x245d5:   77 30                                 	ja 0x24607
0x245d7:   40 f6 c6 01                           	test sil, 1
0x245db:   74 2a                                 	je 0x24607
0x245dd:   4c 89 e8                              	mov rax, r13
0x245e0:   0f b6 cc                              	movzx ecx, ah
0x245e3:   ba 8f 00 00 00                        	mov edx, 0x8f
; data inside code section at 0x245e8 -- 0x245ea
0x245e8:   e8 97                                              |..              |
; function: Japan4x4Tuner_TunerSetTSID at 0x245ea -- 0x24619
; function: TC90522DemodulatorOFDM_I2C_Write at 0x24619 -- 0x2461a
0x24619:   c3                                    	ret 
; function: Japan4x4Tuner_TunerSetTSID at 0x2461a -- 0x24642
0x2461a:   55                                    	push rbp
0x2461b:   48 89 e5                              	mov rbp, rsp
0x2461e:   e8 cd a5 01 00                        	call 0x3ebf0 <mcount>
0x24623:   48 89 d0                              	mov rax, rdx
0x24626:   48 83 ff 3f                           	cmp rdi, 0x3f
0x2462a:   77 16                                 	ja 0x24642 <Japan4x4Tuner_TunerSetTSID+0x26>
0x2462c:   40 f6 c7 01                           	test dil, 1
0x24630:   74 10                                 	je 0x24642 <Japan4x4Tuner_TunerSetTSID+0x26>
0x24632:   0f b7 d6                              	movzx edx, si
0x24635:   48 89 fe                              	mov rsi, rdi
0x24638:   48 89 c7                              	mov rdi, rax
0x2463b:   e8 6f ff ff ff                        	call 0x245af <TC90522_SetTSID>
0x24640:   eb 05                                 	jmp 0x24647
; data inside code section at 0x24642 -- 0x24644
0x24642:   b8 00                                              |..              |
; function: TC90522_ResetInternal at 0x24644 -- 0x24649
0x24644:   00 00                                 	add byte ptr [rax], al
; data inside code section at 0x24646 -- 0x24647
0x24646:   00                                                 |.               |
0x24647:   c9                                    	leave 
0x24648:   c3                                    	ret 
; function: TC90522DemodulatorOFDM_I2C_Write at 0x24649 -- 0x24674
0x24649:   55                                    	push rbp
0x2464a:   48 89 e5                              	mov rbp, rsp
0x2464d:   48 83 ec 10                           	sub rsp, 0x10
0x24651:   e8 9a a5 01 00                        	call 0x3ebf0 <mcount>
0x24656:   88 55 f0                              	mov byte ptr [rbp - 0x10], dl
0x24659:   88 4d f1                              	mov byte ptr [rbp - 0xf], cl
0x2465c:   48 8d 55 f0                           	lea rdx, [rbp - 0x10]
0x24660:   01 f6                                 	add esi, esi
0x24662:   83 e6 0e                              	and esi, 0xe
0x24665:   83 c6 20                              	add esi, 0x20
0x24668:   b9 02 00 00 00                        	mov ecx, 2
0x2466d:   e8 7a 6c 00 00                        	call 0x2b2ec <I2C_PortingLayer_Write>
0x24672:   c9                                    	leave 
0x24673:   c3                                    	ret 
; function: TC90522_ResetInternal at 0x24674 -- 0x24761
0x24674:   55                                    	push rbp
0x24675:   48 89 e5                              	mov rbp, rsp
0x24678:   48 83 ec 10                           	sub rsp, 0x10
0x2467c:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x24680:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x24685:   e8 66 a5 01 00                        	call 0x3ebf0 <mcount>
0x2468a:   49 89 fc                              	mov r12, rdi
0x2468d:   48 89 f3                              	mov rbx, rsi
0x24690:   48 83 fe 3f                           	cmp rsi, 0x3f
0x24694:   0f 87 e7 00 00 00                     	ja 0x24781
0x2469a:   40 f6 c6 01                           	test sil, 1
0x2469e:   0f 85 81 00 00 00                     	jne 0x24725 <TC90522_ResetInternal+0xb1>
0x246a4:   b9 50 00 00 00                        	mov ecx, 0x50
0x246a9:   ba 01 00 00 00                        	mov edx, 1
0x246ae:   e8 96 ff ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x246b3:   84 c0                                 	test al, al
0x246b5:   0f 84 c6 00 00 00                     	je 0x24781
0x246bb:   b9 30 00 00 00                        	mov ecx, 0x30
0x246c0:   ba 47 00 00 00                        	mov edx, 0x47
0x246c5:   48 89 de                              	mov rsi, rbx
0x246c8:   4c 89 e7                              	mov rdi, r12
0x246cb:   e8 79 ff ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x246d0:   84 c0                                 	test al, al
0x246d2:   0f 84 a9 00 00 00                     	je 0x24781
0x246d8:   b9 00 00 00 00                        	mov ecx, 0
0x246dd:   ba 25 00 00 00                        	mov edx, 0x25
0x246e2:   48 89 de                              	mov rsi, rbx
0x246e5:   4c 89 e7                              	mov rdi, r12
0x246e8:   e8 5c ff ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x246ed:   84 c0                                 	test al, al
0x246ef:   0f 84 8c 00 00 00                     	je 0x24781
0x246f5:   b9 00 00 00 00                        	mov ecx, 0
0x246fa:   ba 20 00 00 00                        	mov edx, 0x20
0x246ff:   48 89 de                              	mov rsi, rbx
0x24702:   4c 89 e7                              	mov rdi, r12
0x24705:   e8 3f ff ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x2470a:   84 c0                                 	test al, al
0x2470c:   74 73                                 	je 0x24781
0x2470e:   b9 4d 00 00 00                        	mov ecx, 0x4d
0x24713:   ba 23 00 00 00                        	mov edx, 0x23
0x24718:   48 89 de                              	mov rsi, rbx
0x2471b:   4c 89 e7                              	mov rdi, r12
0x2471e:   e8 26 ff ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x24723:   eb 61                                 	jmp 0x24786
0x24725:   b9 00 00 00 00                        	mov ecx, 0
0x2472a:   ba 0a 00 00 00                        	mov edx, 0xa
0x2472f:   e8 50 fe ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x24734:   84 c0                                 	test al, al
0x24736:   74 49                                 	je 0x24781
0x24738:   b9 b0 00 00 00                        	mov ecx, 0xb0
0x2473d:   ba 10 00 00 00                        	mov edx, 0x10
0x24742:   48 89 de                              	mov rsi, rbx
0x24745:   4c 89 e7                              	mov rdi, r12
0x24748:   e8 37 fe ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x2474d:   84 c0                                 	test al, al
0x2474f:   74 30                                 	je 0x24781
0x24751:   b9 02 00 00 00                        	mov ecx, 2
0x24756:   ba 11 00 00 00                        	mov edx, 0x11
0x2475b:   48 89 de                              	mov rsi, rbx
0x2475e:   4c 89 e7                              	mov rdi, r12
; function: TC90522_Initialization at 0x24761 -- 0x24791
0x24761:   e8 1e fe ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x24766:   84 c0                                 	test al, al
0x24768:   74 17                                 	je 0x24781 <TC90522_Initialization+0x20>
0x2476a:   b9 01 00 00 00                        	mov ecx, 1
0x2476f:   ba 03 00 00 00                        	mov edx, 3
0x24774:   48 89 de                              	mov rsi, rbx
0x24777:   4c 89 e7                              	mov rdi, r12
0x2477a:   e8 05 fe ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x2477f:   eb 05                                 	jmp 0x24786 <TC90522_Initialization+0x25>
0x24781:   b8 00 00 00 00                        	mov eax, 0
0x24786:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x2478a:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x2478f:   c9                                    	leave 
0x24790:   c3                                    	ret 
; function: TC90522_Initialization at 0x24791 -- 0x24a39
0x24791:   55                                    	push rbp
0x24792:   48 89 e5                              	mov rbp, rsp
0x24795:   48 83 ec 20                           	sub rsp, 0x20
0x24799:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x2479d:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x247a1:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x247a5:   e8 46 a4 01 00                        	call 0x3ebf0 <mcount>
0x247aa:   49 89 fc                              	mov r12, rdi
0x247ad:   48 89 f3                              	mov rbx, rsi
0x247b0:   41 89 d5                              	mov r13d, edx
0x247b3:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x247ba:   e8 d5 6b 00 00                        	call 0x2b394 <DriverDebugMessage>
0x247bf:   48 83 fb 3f                           	cmp rbx, 0x3f
0x247c3:   0f 87 87 02 00 00                     	ja 0x24a50
0x247c9:   f6 c3 01                              	test bl, 1
0x247cc:   0f 85 91 01 00 00                     	jne 0x24963 <TC90522_Initialization+0x1d2>
0x247d2:   b9 a0 00 00 00                        	mov ecx, 0xa0
0x247d7:   ba b0 00 00 00                        	mov edx, 0xb0
0x247dc:   48 89 de                              	mov rsi, rbx
0x247df:   4c 89 e7                              	mov rdi, r12
0x247e2:   e8 62 fe ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x247e7:   84 c0                                 	test al, al
0x247e9:   0f 84 61 02 00 00                     	je 0x24a50
0x247ef:   b9 3d 00 00 00                        	mov ecx, 0x3d
0x247f4:   ba b2 00 00 00                        	mov edx, 0xb2
0x247f9:   48 89 de                              	mov rsi, rbx
0x247fc:   4c 89 e7                              	mov rdi, r12
0x247ff:   e8 45 fe ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x24804:   84 c0                                 	test al, al
0x24806:   0f 84 44 02 00 00                     	je 0x24a50
0x2480c:   b9 25 00 00 00                        	mov ecx, 0x25
0x24811:   ba b3 00 00 00                        	mov edx, 0xb3
0x24816:   48 89 de                              	mov rsi, rbx
0x24819:   4c 89 e7                              	mov rdi, r12
0x2481c:   e8 28 fe ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x24821:   84 c0                                 	test al, al
0x24823:   0f 84 27 02 00 00                     	je 0x24a50
0x24829:   b9 8b 00 00 00                        	mov ecx, 0x8b
0x2482e:   ba b4 00 00 00                        	mov edx, 0xb4
0x24833:   48 89 de                              	mov rsi, rbx
0x24836:   4c 89 e7                              	mov rdi, r12
0x24839:   e8 0b fe ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x2483e:   84 c0                                 	test al, al
0x24840:   0f 84 0a 02 00 00                     	je 0x24a50
0x24846:   b9 4b 00 00 00                        	mov ecx, 0x4b
0x2484b:   ba b5 00 00 00                        	mov edx, 0xb5
0x24850:   48 89 de                              	mov rsi, rbx
0x24853:   4c 89 e7                              	mov rdi, r12
0x24856:   e8 ee fd ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x2485b:   84 c0                                 	test al, al
0x2485d:   0f 84 ed 01 00 00                     	je 0x24a50
0x24863:   b9 3f 00 00 00                        	mov ecx, 0x3f
0x24868:   ba b6 00 00 00                        	mov edx, 0xb6
0x2486d:   48 89 de                              	mov rsi, rbx
0x24870:   4c 89 e7                              	mov rdi, r12
0x24873:   e8 d1 fd ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x24878:   84 c0                                 	test al, al
0x2487a:   0f 84 d0 01 00 00                     	je 0x24a50
0x24880:   b9 ff 00 00 00                        	mov ecx, 0xff
0x24885:   ba b7 00 00 00                        	mov edx, 0xb7
0x2488a:   48 89 de                              	mov rsi, rbx
0x2488d:   4c 89 e7                              	mov rdi, r12
0x24890:   e8 b4 fd ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x24895:   84 c0                                 	test al, al
0x24897:   0f 84 b3 01 00 00                     	je 0x24a50
0x2489d:   b9 c0 00 00 00                        	mov ecx, 0xc0
0x248a2:   ba b8 00 00 00                        	mov edx, 0xb8
0x248a7:   48 89 de                              	mov rsi, rbx
0x248aa:   4c 89 e7                              	mov rdi, r12
0x248ad:   e8 97 fd ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x248b2:   84 c0                                 	test al, al
0x248b4:   0f 84 96 01 00 00                     	je 0x24a50
0x248ba:   b9 00 00 00 00                        	mov ecx, 0
0x248bf:   ba 03 00 00 00                        	mov edx, 3
0x248c4:   48 89 de                              	mov rsi, rbx
0x248c7:   4c 89 e7                              	mov rdi, r12
0x248ca:   e8 7a fd ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x248cf:   84 c0                                 	test al, al
0x248d1:   0f 84 79 01 00 00                     	je 0x24a50
0x248d7:   b9 00 00 00 00                        	mov ecx, 0
0x248dc:   ba 1d 00 00 00                        	mov edx, 0x1d
0x248e1:   48 89 de                              	mov rsi, rbx
0x248e4:   4c 89 e7                              	mov rdi, r12
0x248e7:   e8 5d fd ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x248ec:   84 c0                                 	test al, al
0x248ee:   0f 84 5c 01 00 00                     	je 0x24a50
0x248f4:   b9 00 00 00 00                        	mov ecx, 0
0x248f9:   ba 1f 00 00 00                        	mov edx, 0x1f
0x248fe:   48 89 de                              	mov rsi, rbx
0x24901:   4c 89 e7                              	mov rdi, r12
0x24904:   e8 40 fd ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x24909:   84 c0                                 	test al, al
0x2490b:   0f 84 3f 01 00 00                     	je 0x24a50
0x24911:   45 84 ed                              	test r13b, r13b
0x24914:   0f 84 3d 01 00 00                     	je 0x24a57
0x2491a:   b9 77 00 00 00                        	mov ecx, 0x77
0x2491f:   ba 0e 00 00 00                        	mov edx, 0xe
0x24924:   48 89 de                              	mov rsi, rbx
0x24927:   4c 89 e7                              	mov rdi, r12
0x2492a:   e8 1a fd ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x2492f:   b9 13 00 00 00                        	mov ecx, 0x13
0x24934:   ba 0f 00 00 00                        	mov edx, 0xf
0x24939:   48 89 de                              	mov rsi, rbx
0x2493c:   4c 89 e7                              	mov rdi, r12
0x2493f:   e8 05 fd ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x24944:   b9 02 00 00 00                        	mov ecx, 2
0x24949:   ba 75 00 00 00                        	mov edx, 0x75
0x2494e:   48 89 de                              	mov rsi, rbx
0x24951:   4c 89 e7                              	mov rdi, r12
0x24954:   e8 f0 fc ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x24959:   b8 01 00 00 00                        	mov eax, 1
0x2495e:   e9 f9 00 00 00                        	jmp 0x24a5c
0x24963:   b9 00 00 00 00                        	mov ecx, 0
0x24968:   ba 13 00 00 00                        	mov edx, 0x13
0x2496d:   48 89 de                              	mov rsi, rbx
0x24970:   4c 89 e7                              	mov rdi, r12
0x24973:   e8 0c fc ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x24978:   84 c0                                 	test al, al
0x2497a:   0f 84 d0 00 00 00                     	je 0x24a50
0x24980:   b9 00 00 00 00                        	mov ecx, 0
0x24985:   ba 15 00 00 00                        	mov edx, 0x15
0x2498a:   48 89 de                              	mov rsi, rbx
0x2498d:   4c 89 e7                              	mov rdi, r12
0x24990:   e8 ef fb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x24995:   84 c0                                 	test al, al
0x24997:   0f 84 b3 00 00 00                     	je 0x24a50
0x2499d:   b9 00 00 00 00                        	mov ecx, 0
0x249a2:   ba 17 00 00 00                        	mov edx, 0x17
0x249a7:   48 89 de                              	mov rsi, rbx
0x249aa:   4c 89 e7                              	mov rdi, r12
0x249ad:   e8 d2 fb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x249b2:   84 c0                                 	test al, al
0x249b4:   0f 84 96 00 00 00                     	je 0x24a50
0x249ba:   b9 00 00 00 00                        	mov ecx, 0
0x249bf:   ba 1c 00 00 00                        	mov edx, 0x1c
0x249c4:   48 89 de                              	mov rsi, rbx
0x249c7:   4c 89 e7                              	mov rdi, r12
0x249ca:   e8 b5 fb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x249cf:   84 c0                                 	test al, al
0x249d1:   74 7d                                 	je 0x24a50
0x249d3:   b9 00 00 00 00                        	mov ecx, 0
0x249d8:   ba 1d 00 00 00                        	mov edx, 0x1d
0x249dd:   48 89 de                              	mov rsi, rbx
0x249e0:   4c 89 e7                              	mov rdi, r12
0x249e3:   e8 9c fb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x249e8:   84 c0                                 	test al, al
0x249ea:   74 64                                 	je 0x24a50
0x249ec:   b9 00 00 00 00                        	mov ecx, 0
0x249f1:   ba 1f 00 00 00                        	mov edx, 0x1f
0x249f6:   48 89 de                              	mov rsi, rbx
0x249f9:   4c 89 e7                              	mov rdi, r12
0x249fc:   e8 83 fb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x24a01:   84 c0                                 	test al, al
0x24a03:   74 4b                                 	je 0x24a50
0x24a05:   45 84 ed                              	test r13b, r13b
0x24a08:   74 4d                                 	je 0x24a57
0x24a0a:   b9 31 00 00 00                        	mov ecx, 0x31
0x24a0f:   ba 07 00 00 00                        	mov edx, 7
0x24a14:   48 89 de                              	mov rsi, rbx
0x24a17:   4c 89 e7                              	mov rdi, r12
0x24a1a:   e8 65 fb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x24a1f:   b9 77 00 00 00                        	mov ecx, 0x77
0x24a24:   ba 08 00 00 00                        	mov edx, 8
0x24a29:   48 89 de                              	mov rsi, rbx
0x24a2c:   4c 89 e7                              	mov rdi, r12
0x24a2f:   e8 50 fb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x24a34:   b9 02 00 00 00                        	mov ecx, 2
; data inside code section at 0x24a39 -- 0x24a3a
0x24a39:   ba                                                 |.               |
; function: TDA2014x_I2C_Read at 0x24a3a -- 0x24a6a
0x24a3a:   04 00                                 	add al, 0
0x24a3c:   00 00                                 	add byte ptr [rax], al
0x24a3e:   48 89 de                              	mov rsi, rbx
0x24a41:   4c 89 e7                              	mov rdi, r12
0x24a44:   e8 3b fb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x24a49:   b8 01 00 00 00                        	mov eax, 1
0x24a4e:   eb 0c                                 	jmp 0x24a5c <TDA2014x_I2C_Read+0x22>
0x24a50:   b8 00 00 00 00                        	mov eax, 0
0x24a55:   eb 05                                 	jmp 0x24a5c <TDA2014x_I2C_Read+0x22>
0x24a57:   b8 01 00 00 00                        	mov eax, 1
0x24a5c:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x24a60:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x24a64:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x24a68:   c9                                    	leave 
0x24a69:   c3                                    	ret 
; function: TDA2014x_I2C_Read at 0x24a6a -- 0x24b0b
0x24a6a:   55                                    	push rbp
0x24a6b:   48 89 e5                              	mov rbp, rsp
0x24a6e:   48 83 ec 40                           	sub rsp, 0x40
0x24a72:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x24a76:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x24a7a:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x24a7e:   e8 6d a1 01 00                        	call 0x3ebf0 <mcount>
0x24a83:   49 89 fc                              	mov r12, rdi
0x24a86:   48 89 cb                              	mov rbx, rcx
0x24a89:   c6 45 df 00                           	mov byte ptr [rbp - 0x21], 0
0x24a8d:   48 85 f6                              	test rsi, rsi
0x24a90:   0f 84 96 00 00 00                     	je 0x24b2c
0x24a96:   48 85 c9                              	test rcx, rcx
0x24a99:   0f 84 8d 00 00 00                     	je 0x24b2c
0x24a9f:   4c 8b 2e                              	mov r13, qword ptr [rsi]
0x24aa2:   45 01 ed                              	add r13d, r13d
0x24aa5:   41 83 e5 0f                           	and r13d, 0xf
0x24aa9:   41 83 c5 20                           	add r13d, 0x20
0x24aad:   c6 45 c0 fe                           	mov byte ptr [rbp - 0x40], 0xfe
0x24ab1:   c6 45 c1 a8                           	mov byte ptr [rbp - 0x3f], 0xa8
0x24ab5:   88 55 c2                              	mov byte ptr [rbp - 0x3e], dl
0x24ab8:   45 0f b6 ed                           	movzx r13d, r13b
0x24abc:   48 8d 55 c0                           	lea rdx, [rbp - 0x40]
0x24ac0:   b9 03 00 00 00                        	mov ecx, 3
0x24ac5:   44 89 ee                              	mov esi, r13d
0x24ac8:   e8 1f 68 00 00                        	call 0x2b2ec <I2C_PortingLayer_Write>
0x24acd:   84 c0                                 	test al, al
0x24acf:   74 48                                 	je 0x24b19
0x24ad1:   c6 45 d0 fe                           	mov byte ptr [rbp - 0x30], 0xfe
0x24ad5:   c6 45 d1 a9                           	mov byte ptr [rbp - 0x2f], 0xa9
0x24ad9:   48 8d 55 d0                           	lea rdx, [rbp - 0x30]
0x24add:   41 b9 01 00 00 00                     	mov r9d, 1
0x24ae3:   4c 8d 45 df                           	lea r8, [rbp - 0x21]
0x24ae7:   b9 02 00 00 00                        	mov ecx, 2
0x24aec:   44 89 ee                              	mov esi, r13d
0x24aef:   4c 89 e7                              	mov rdi, r12
0x24af2:   e8 1b 68 00 00                        	call 0x2b312 <I2C_PortingLayer_Read>
0x24af7:   84 c0                                 	test al, al
0x24af9:   74 09                                 	je 0x24b04 <TDA2014x_I2C_Read+0x9a>
0x24afb:   48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0x24b02:   eb 28                                 	jmp 0x24b2c
0x24b04:   48 c7 c7 00 00 00 00                  	mov rdi, 0
; data inside code section at 0x24b0b -- 0x24b0e
0x24b0b:   e8 84 68                                           |..h             |
; function: NMI131_ReadRegister at 0x24b0e -- 0x24b3e
0x24b0e:   00 00                                 	add byte ptr [rax], al
0x24b10:   48 c7 03 01 00 00 00                  	mov qword ptr [rbx], 1
0x24b17:   eb 13                                 	jmp 0x24b2c <NMI131_ReadRegister+0x1e>
0x24b19:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x24b20:   e8 6f 68 00 00                        	call 0x2b394 <DriverDebugMessage>
0x24b25:   48 c7 03 01 00 00 00                  	mov qword ptr [rbx], 1
0x24b2c:   0f b6 45 df                           	movzx eax, byte ptr [rbp - 0x21]
0x24b30:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x24b34:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x24b38:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x24b3c:   c9                                    	leave 
0x24b3d:   c3                                    	ret 
; function: NMI131_ReadRegister at 0x24b3e -- 0x24b65
0x24b3e:   55                                    	push rbp
0x24b3f:   48 89 e5                              	mov rbp, rsp
0x24b42:   53                                    	push rbx
0x24b43:   48 83 ec 18                           	sub rsp, 0x18
0x24b47:   e8 a4 a0 01 00                        	call 0x3ebf0 <mcount>
0x24b4c:   49 89 d0                              	mov r8, rdx
0x24b4f:   bb 00 00 00 00                        	mov ebx, 0
0x24b54:   48 85 d2                              	test rdx, rdx
0x24b57:   74 34                                 	je 0x24b8d
0x24b59:   c6 45 e0 fe                           	mov byte ptr [rbp - 0x20], 0xfe
0x24b5d:   c6 45 e1 cf                           	mov byte ptr [rbp - 0x1f], 0xcf
0x24b61:   48 8d 55 e0                           	lea rdx, [rbp - 0x20]
; data inside code section at 0x24b65 -- 0x24b66
0x24b65:   01                                                 |.               |
; function: TC90522DemodulatorPSK_I2C_Read at 0x24b66 -- 0x24b96
0x24b66:   f6 83 e6 0e 83 c6 20                  	test byte ptr [rbx - 0x397cf11a], 0x20
0x24b6d:   44 0f b7 c9                           	movzx r9d, cx
0x24b71:   b9 02 00 00 00                        	mov ecx, 2
0x24b76:   e8 97 67 00 00                        	call 0x2b312 <I2C_PortingLayer_Read>
0x24b7b:   89 c3                                 	mov ebx, eax
0x24b7d:   84 c0                                 	test al, al
0x24b7f:   75 0c                                 	jne 0x24b8d <TC90522DemodulatorPSK_I2C_Read+0x27>
0x24b81:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x24b88:   e8 07 68 00 00                        	call 0x2b394 <DriverDebugMessage>
0x24b8d:   89 d8                                 	mov eax, ebx
0x24b8f:   48 83 c4 18                           	add rsp, 0x18
0x24b93:   5b                                    	pop rbx
0x24b94:   c9                                    	leave 
0x24b95:   c3                                    	ret 
; function: TC90522DemodulatorPSK_I2C_Read at 0x24b96 -- 0x24b97
0x24b96:   55                                    	push rbp
; function: TC90522_GetTSID at 0x24b97 -- 0x24bc7
0x24b97:   48 89 e5                              	mov rbp, rsp
0x24b9a:   48 83 ec 10                           	sub rsp, 0x10
0x24b9e:   e8 4d a0 01 00                        	call 0x3ebf0 <mcount>
0x24ba3:   49 89 c8                              	mov r8, rcx
0x24ba6:   88 55 fc                              	mov byte ptr [rbp - 4], dl
0x24ba9:   48 8d 55 fc                           	lea rdx, [rbp - 4]
0x24bad:   01 f6                                 	add esi, esi
0x24baf:   83 e6 0e                              	and esi, 0xe
0x24bb2:   83 c6 20                              	add esi, 0x20
0x24bb5:   41 b9 01 00 00 00                     	mov r9d, 1
0x24bbb:   b9 01 00 00 00                        	mov ecx, 1
0x24bc0:   e8 4d 67 00 00                        	call 0x2b312 <I2C_PortingLayer_Read>
0x24bc5:   c9                                    	leave 
0x24bc6:   c3                                    	ret 
; function: TC90522_GetTSID at 0x24bc7 -- 0x24c53
0x24bc7:   55                                    	push rbp
0x24bc8:   48 89 e5                              	mov rbp, rsp
0x24bcb:   48 83 ec 40                           	sub rsp, 0x40
0x24bcf:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x24bd3:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x24bd7:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x24bdb:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x24bdf:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x24be3:   e8 08 a0 01 00                        	call 0x3ebf0 <mcount>
0x24be8:   49 89 ff                              	mov r15, rdi
0x24beb:   49 89 f5                              	mov r13, rsi
0x24bee:   48 83 fe 3f                           	cmp rsi, 0x3f
0x24bf2:   77 70                                 	ja 0x24c64
0x24bf4:   40 f6 c6 01                           	test sil, 1
0x24bf8:   74 6a                                 	je 0x24c64
0x24bfa:   49 89 d4                              	mov r12, rdx
0x24bfd:   bb ce 00 00 00                        	mov ebx, 0xce
0x24c02:   41 be 00 00 00 00                     	mov r14d, 0
0x24c08:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x24c0c:   89 da                                 	mov edx, ebx
0x24c0e:   4c 89 ee                              	mov rsi, r13
0x24c11:   4c 89 ff                              	mov rdi, r15
0x24c14:   e8 7d ff ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x24c19:   3c 01                                 	cmp al, 1
0x24c1b:   75 15                                 	jne 0x24c32 <TC90522_GetTSID+0x6b>
0x24c1d:   8d 53 01                              	lea edx, [rbx + 1]
0x24c20:   48 8d 4d ce                           	lea rcx, [rbp - 0x32]
0x24c24:   4c 89 ee                              	mov rsi, r13
0x24c27:   4c 89 ff                              	mov rdi, r15
0x24c2a:   e8 67 ff ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x24c2f:   41 89 c6                              	mov r14d, eax
0x24c32:   41 80 fe 01                           	cmp r14b, 1
0x24c36:   75 14                                 	jne 0x24c4c <TC90522_GetTSID+0x85>
0x24c38:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x24c3c:   c1 e0 08                              	shl eax, 8
0x24c3f:   0f b6 55 ce                           	movzx edx, byte ptr [rbp - 0x32]
0x24c43:   09 d0                                 	or eax, edx
0x24c45:   66 41 89 04 24                        	mov word ptr [r12], ax
0x24c4a:   eb 07                                 	jmp 0x24c53 <Japan4x4Tuner_TunerGetTSID>
0x24c4c:   66 41 c7 04 24 00 00                  	mov word ptr [r12], 0
; function: Japan4x4Tuner_TunerGetTSID at 0x24c53 -- 0x24c82
0x24c53:   83 c3 02                              	add ebx, 2
0x24c56:   49 83 c4 02                           	add r12, 2
0x24c5a:   81 fb de 00 00 00                     	cmp ebx, 0xde
0x24c60:   75 a6                                 	jne 0x24c08
0x24c62:   eb 06                                 	jmp 0x24c6a <Japan4x4Tuner_TunerGetTSID+0x17>
0x24c64:   41 be 00 00 00 00                     	mov r14d, 0
0x24c6a:   44 89 f0                              	mov eax, r14d
0x24c6d:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x24c71:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x24c75:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x24c79:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x24c7d:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x24c81:   c9                                    	leave 
; function: TC90522DemodulatorOFDM_I2C_Read at 0x24c82 -- 0x24c83
0x24c82:   c3                                    	ret 
; function: Japan4x4Tuner_TunerGetTSID at 0x24c83 -- 0x24cb2
0x24c83:   55                                    	push rbp
0x24c84:   48 89 e5                              	mov rbp, rsp
0x24c87:   e8 64 9f 01 00                        	call 0x3ebf0 <mcount>
0x24c8c:   48 89 d0                              	mov rax, rdx
0x24c8f:   48 83 ff 3f                           	cmp rdi, 0x3f
0x24c93:   77 16                                 	ja 0x24cab <Japan4x4Tuner_TunerGetTSID+0x28>
0x24c95:   40 f6 c7 01                           	test dil, 1
0x24c99:   74 10                                 	je 0x24cab <Japan4x4Tuner_TunerGetTSID+0x28>
0x24c9b:   48 89 f2                              	mov rdx, rsi
0x24c9e:   48 89 fe                              	mov rsi, rdi
0x24ca1:   48 89 c7                              	mov rdi, rax
0x24ca4:   e8 1e ff ff ff                        	call 0x24bc7 <TC90522_GetTSID>
0x24ca9:   eb 05                                 	jmp 0x24cb0 <Japan4x4Tuner_TunerGetTSID+0x2d>
0x24cab:   b8 00 00 00 00                        	mov eax, 0
0x24cb0:   c9                                    	leave 
0x24cb1:   c3                                    	ret 
; function: TC90522DemodulatorOFDM_I2C_Read at 0x24cb2 -- 0x24cb3
0x24cb2:   55                                    	push rbp
; function: TC90522DemodulatorGetCN at 0x24cb3 -- 0x24ce3
0x24cb3:   48 89 e5                              	mov rbp, rsp
0x24cb6:   48 83 ec 10                           	sub rsp, 0x10
0x24cba:   e8 31 9f 01 00                        	call 0x3ebf0 <mcount>
0x24cbf:   49 89 c8                              	mov r8, rcx
0x24cc2:   88 55 fc                              	mov byte ptr [rbp - 4], dl
0x24cc5:   48 8d 55 fc                           	lea rdx, [rbp - 4]
0x24cc9:   01 f6                                 	add esi, esi
0x24ccb:   83 e6 0e                              	and esi, 0xe
0x24cce:   83 c6 20                              	add esi, 0x20
0x24cd1:   41 b9 01 00 00 00                     	mov r9d, 1
0x24cd7:   b9 01 00 00 00                        	mov ecx, 1
0x24cdc:   e8 31 66 00 00                        	call 0x2b312 <I2C_PortingLayer_Read>
0x24ce1:   c9                                    	leave 
0x24ce2:   c3                                    	ret 
; function: TC90522DemodulatorGetCN at 0x24ce3 -- 0x24f9a
0x24ce3:   55                                    	push rbp
0x24ce4:   48 89 e5                              	mov rbp, rsp
0x24ce7:   48 83 ec 50                           	sub rsp, 0x50
0x24ceb:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x24cef:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x24cf3:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x24cf7:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x24cfb:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x24cff:   e8 ec 9e 01 00                        	call 0x3ebf0 <mcount>
0x24d04:   49 89 fc                              	mov r12, rdi
0x24d07:   48 89 f3                              	mov rbx, rsi
0x24d0a:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x24d11:   e8 7e 66 00 00                        	call 0x2b394 <DriverDebugMessage>
0x24d16:   48 89 de                              	mov rsi, rbx
0x24d19:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x24d20:   b8 00 00 00 00                        	mov eax, 0
0x24d25:   e8 75 66 00 00                        	call 0x2b39f <DriverDebugPrint>
0x24d2a:   48 83 fb 3f                           	cmp rbx, 0x3f
0x24d2e:   0f 87 7a 02 00 00                     	ja 0x24fae
0x24d34:   f6 c3 01                              	test bl, 1
0x24d37:   0f 85 4f 01 00 00                     	jne 0x24e8c <TC90522DemodulatorGetCN+0x1a9>
0x24d3d:   b9 00 00 00 00                        	mov ecx, 0
0x24d42:   ba ba 00 00 00                        	mov edx, 0xba
0x24d47:   48 89 de                              	mov rsi, rbx
0x24d4a:   4c 89 e7                              	mov rdi, r12
0x24d4d:   e8 f7 f8 ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x24d52:   3c 01                                 	cmp al, 1
0x24d54:   0f 85 54 02 00 00                     	jne 0x24fae
0x24d5a:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x24d5e:   ba b0 00 00 00                        	mov edx, 0xb0
0x24d63:   48 89 de                              	mov rsi, rbx
0x24d66:   4c 89 e7                              	mov rdi, r12
0x24d69:   e8 44 ff ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x24d6e:   3c 01                                 	cmp al, 1
0x24d70:   0f 85 38 02 00 00                     	jne 0x24fae
0x24d76:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x24d7a:   83 e0 0f                              	and eax, 0xf
0x24d7d:   3c 07                                 	cmp al, 7
0x24d7f:   0f 86 29 02 00 00                     	jbe 0x24fae
0x24d85:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x24d89:   ba 8b 00 00 00                        	mov edx, 0x8b
0x24d8e:   48 89 de                              	mov rsi, rbx
0x24d91:   4c 89 e7                              	mov rdi, r12
0x24d94:   e8 19 ff ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x24d99:   3c 01                                 	cmp al, 1
0x24d9b:   0f 85 0d 02 00 00                     	jne 0x24fae
0x24da1:   44 0f b6 7d cf                        	movzx r15d, byte ptr [rbp - 0x31]
0x24da6:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x24daa:   ba 8c 00 00 00                        	mov edx, 0x8c
0x24daf:   48 89 de                              	mov rsi, rbx
0x24db2:   4c 89 e7                              	mov rdi, r12
0x24db5:   e8 f8 fe ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x24dba:   3c 01                                 	cmp al, 1
0x24dbc:   0f 85 ec 01 00 00                     	jne 0x24fae
0x24dc2:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x24dc6:   88 45 bf                              	mov byte ptr [rbp - 0x41], al
0x24dc9:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x24dcd:   ba 8d 00 00 00                        	mov edx, 0x8d
0x24dd2:   48 89 de                              	mov rsi, rbx
0x24dd5:   4c 89 e7                              	mov rdi, r12
0x24dd8:   e8 d5 fe ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x24ddd:   3c 01                                 	cmp al, 1
0x24ddf:   0f 85 c9 01 00 00                     	jne 0x24fae
0x24de5:   41 0f b6 df                           	movzx ebx, r15b
0x24de9:   48 c1 e3 08                           	shl rbx, 8
0x24ded:   0f b6 45 bf                           	movzx eax, byte ptr [rbp - 0x41]
0x24df1:   48 09 c3                              	or rbx, rax
0x24df4:   48 c1 e3 08                           	shl rbx, 8
0x24df8:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x24dfc:   48 09 c3                              	or rbx, rax
0x24dff:   48 89 de                              	mov rsi, rbx
0x24e02:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x24e09:   b8 00 00 00 00                        	mov eax, 0
0x24e0e:   e8 8c 65 00 00                        	call 0x2b39f <DriverDebugPrint>
0x24e13:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x24e1a:   b8 02 00 00 00                        	mov eax, 2
0x24e1f:   eb 10                                 	jmp 0x24e31 <TC90522DemodulatorGetCN+0x14e>
0x24e21:   83 c0 01                              	add eax, 1
0x24e24:   48 83 c2 08                           	add rdx, 8
0x24e28:   83 f8 1f                              	cmp eax, 0x1f
0x24e2b:   0f 84 71 01 00 00                     	je 0x24fa2
0x24e31:   48 3b 1a                              	cmp rbx, qword ptr [rdx]
0x24e34:   76 eb                                 	jbe 0x24e21 <TC90522DemodulatorGetCN+0x13e>
0x24e36:   83 f8 02                              	cmp eax, 2
0x24e39:   0f 84 55 01 00 00                     	je 0x24f94 <TC90522DemodulatorGetCN+0x2b1>
0x24e3f:   83 f8 1f                              	cmp eax, 0x1f
0x24e42:   0f 84 5a 01 00 00                     	je 0x24fa2
0x24e48:   44 8d 68 ff                           	lea r13d, [rax - 1]
0x24e4c:   44 89 e9                              	mov ecx, r13d
0x24e4f:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x24e56:   48 8b 0c ca                           	mov rcx, qword ptr [rdx + rcx*8]
0x24e5a:   48 89 ce                              	mov rsi, rcx
0x24e5d:   48 29 de                              	sub rsi, rbx
0x24e60:   89 c0                                 	mov eax, eax
0x24e62:   48 2b 0c c2                           	sub rcx, qword ptr [rdx + rax*8]
0x24e66:   48 89 c8                              	mov rax, rcx
0x24e69:   b9 64 00 00 00                        	mov ecx, 0x64
0x24e6e:   ba 00 00 00 00                        	mov edx, 0
0x24e73:   48 f7 f1                              	div rcx
0x24e76:   48 89 c1                              	mov rcx, rax
0x24e79:   48 89 f0                              	mov rax, rsi
0x24e7c:   ba 00 00 00 00                        	mov edx, 0
0x24e81:   48 f7 f1                              	div rcx
0x24e84:   41 89 c6                              	mov r14d, eax
0x24e87:   e9 22 01 00 00                        	jmp 0x24fae
0x24e8c:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x24e90:   ba c3 00 00 00                        	mov edx, 0xc3
0x24e95:   48 89 de                              	mov rsi, rbx
0x24e98:   4c 89 e7                              	mov rdi, r12
0x24e9b:   e8 f6 fc ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x24ea0:   3c 01                                 	cmp al, 1
0x24ea2:   0f 85 06 01 00 00                     	jne 0x24fae
0x24ea8:   f6 45 cf 10                           	test byte ptr [rbp - 0x31], 0x10
0x24eac:   0f 85 fc 00 00 00                     	jne 0x24fae
0x24eb2:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x24eb6:   ba bc 00 00 00                        	mov edx, 0xbc
0x24ebb:   48 89 de                              	mov rsi, rbx
0x24ebe:   4c 89 e7                              	mov rdi, r12
0x24ec1:   e8 d0 fc ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x24ec6:   3c 01                                 	cmp al, 1
0x24ec8:   0f 85 e0 00 00 00                     	jne 0x24fae
0x24ece:   44 0f b6 7d cf                        	movzx r15d, byte ptr [rbp - 0x31]
0x24ed3:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x24ed7:   ba bd 00 00 00                        	mov edx, 0xbd
0x24edc:   48 89 de                              	mov rsi, rbx
0x24edf:   4c 89 e7                              	mov rdi, r12
0x24ee2:   e8 af fc ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x24ee7:   3c 01                                 	cmp al, 1
0x24ee9:   0f 85 bf 00 00 00                     	jne 0x24fae
0x24eef:   41 0f b6 df                           	movzx ebx, r15b
0x24ef3:   48 c1 e3 08                           	shl rbx, 8
0x24ef7:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x24efb:   48 09 c3                              	or rbx, rax
0x24efe:   48 89 de                              	mov rsi, rbx
0x24f01:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x24f08:   b8 00 00 00 00                        	mov eax, 0
0x24f0d:   e8 8d 64 00 00                        	call 0x2b39f <DriverDebugPrint>
0x24f12:   b8 00 00 00 00                        	mov eax, 0
0x24f17:   48 81 fb b7 0b 00 00                  	cmp rbx, 0xbb7
0x24f1e:   0f 86 93 00 00 00                     	jbe 0x24fb7
0x24f24:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x24f2b:   b0 03                                 	mov al, 3
0x24f2d:   48 81 fb f1 8b 00 00                  	cmp rbx, 0x8bf1
0x24f34:   76 0e                                 	jbe 0x24f44 <TC90522DemodulatorGetCN+0x261>
0x24f36:   eb 5c                                 	jmp 0x24f94 <TC90522DemodulatorGetCN+0x2b1>
0x24f38:   83 c0 01                              	add eax, 1
0x24f3b:   48 83 c2 08                           	add rdx, 8
0x24f3f:   83 f8 1f                              	cmp eax, 0x1f
0x24f42:   74 5e                                 	je 0x24fa2
0x24f44:   48 3b 1a                              	cmp rbx, qword ptr [rdx]
0x24f47:   76 ef                                 	jbe 0x24f38 <TC90522DemodulatorGetCN+0x255>
0x24f49:   83 f8 02                              	cmp eax, 2
0x24f4c:   74 46                                 	je 0x24f94 <TC90522DemodulatorGetCN+0x2b1>
0x24f4e:   83 f8 1f                              	cmp eax, 0x1f
0x24f51:   74 4f                                 	je 0x24fa2
0x24f53:   44 8d 68 ff                           	lea r13d, [rax - 1]
0x24f57:   44 89 e9                              	mov ecx, r13d
0x24f5a:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x24f61:   48 8b 0c ca                           	mov rcx, qword ptr [rdx + rcx*8]
0x24f65:   48 89 ce                              	mov rsi, rcx
0x24f68:   48 29 de                              	sub rsi, rbx
0x24f6b:   89 c0                                 	mov eax, eax
0x24f6d:   48 2b 0c c2                           	sub rcx, qword ptr [rdx + rax*8]
0x24f71:   48 89 c8                              	mov rax, rcx
0x24f74:   b9 64 00 00 00                        	mov ecx, 0x64
0x24f79:   ba 00 00 00 00                        	mov edx, 0
0x24f7e:   48 f7 f1                              	div rcx
0x24f81:   48 89 c1                              	mov rcx, rax
0x24f84:   48 89 f0                              	mov rax, rsi
0x24f87:   ba 00 00 00 00                        	mov edx, 0
0x24f8c:   48 f7 f1                              	div rcx
0x24f8f:   41 89 c6                              	mov r14d, eax
0x24f92:   eb 1a                                 	jmp 0x24fae
0x24f94:   41 be 00 00 00 00                     	mov r14d, 0
; data inside code section at 0x24f9a -- 0x24f9d
0x24f9a:   41 bd 00                                           |A..             |
; function: TC90522_GetCN at 0x24f9d -- 0x24fb7
0x24f9d:   00 00                                 	add byte ptr [rax], al
0x24f9f:   00 eb                                 	add bl, ch
; data inside code section at 0x24fa1 -- 0x24fa2
0x24fa1:   0c                                                 |.               |
0x24fa2:   41 be 00 00 00 00                     	mov r14d, 0
0x24fa8:   41 bd 1e 00 00 00                     	mov r13d, 0x1e
0x24fae:   45 6b ed 64                           	imul r13d, r13d, 0x64
0x24fb2:   43 8d 44 35 00                        	lea eax, [r13 + r14]
; data inside code section at 0x24fb7 -- 0x24fc7
0x24fb7:   48 8b 5d d8 4c 8b 65 e0  4c 8b 6d e8 4c 8b 75 f0   |H.].L.e.L.m.L.u.|
; function: Japan4x4Tuner_TunerGetCN at 0x24fc7 -- 0x24fcd
0x24fc7:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x24fcb:   c9                                    	leave 
0x24fcc:   c3                                    	ret 
; function: TC90522_GetCN at 0x24fcd -- 0x24feb
0x24fcd:   55                                    	push rbp
0x24fce:   48 89 e5                              	mov rbp, rsp
0x24fd1:   53                                    	push rbx
0x24fd2:   48 83 ec 08                           	sub rsp, 8
0x24fd6:   e8 15 9c 01 00                        	call 0x3ebf0 <mcount>
0x24fdb:   48 89 d3                              	mov rbx, rdx
0x24fde:   48 85 d2                              	test rdx, rdx
0x24fe1:   74 08                                 	je 0x24feb <TC90522_GetCN+0x1b>
0x24fe3:   e8 fb fc ff ff                        	call 0x24ce3 <TC90522DemodulatorGetCN>
0x24fe8:   48 89 03                              	mov qword ptr [rbx], rax
; data inside code section at 0x24feb -- 0x24fee
0x24feb:   b8 01 00                                           |...             |
; function: TC90522DemodulatorGetQuality at 0x24fee -- 0x24ff7
0x24fee:   00 00                                 	add byte ptr [rax], al
0x24ff0:   48 83 c4 08                           	add rsp, 8
0x24ff4:   5b                                    	pop rbx
0x24ff5:   c9                                    	leave 
0x24ff6:   c3                                    	ret 
; function: Japan4x4Tuner_TunerGetCN at 0x24ff7 -- 0x2501e
0x24ff7:   55                                    	push rbp
0x24ff8:   48 89 e5                              	mov rbp, rsp
0x24ffb:   e8 f0 9b 01 00                        	call 0x3ebf0 <mcount>
0x25000:   48 89 d1                              	mov rcx, rdx
0x25003:   b8 00 00 00 00                        	mov eax, 0
0x25008:   48 83 ff 3f                           	cmp rdi, 0x3f
0x2500c:   77 0e                                 	ja 0x2501c <Japan4x4Tuner_TunerGetCN+0x25>
0x2500e:   48 89 f2                              	mov rdx, rsi
0x25011:   48 89 fe                              	mov rsi, rdi
0x25014:   48 89 cf                              	mov rdi, rcx
0x25017:   e8 b1 ff ff ff                        	call 0x24fcd <TC90522_GetCN>
0x2501c:   c9                                    	leave 
0x2501d:   c3                                    	ret 
; function: TC90522DemodulatorGetQuality at 0x2501e -- 0x25308
0x2501e:   55                                    	push rbp
0x2501f:   48 89 e5                              	mov rbp, rsp
0x25022:   48 83 ec 40                           	sub rsp, 0x40
0x25026:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x2502a:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x2502e:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x25032:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x25036:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x2503a:   e8 b1 9b 01 00                        	call 0x3ebf0 <mcount>
0x2503f:   49 89 fd                              	mov r13, rdi
0x25042:   48 89 f3                              	mov rbx, rsi
0x25045:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2504c:   e8 43 63 00 00                        	call 0x2b394 <DriverDebugMessage>
0x25051:   48 89 de                              	mov rsi, rbx
0x25054:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2505b:   b8 00 00 00 00                        	mov eax, 0
0x25060:   e8 3a 63 00 00                        	call 0x2b39f <DriverDebugPrint>
0x25065:   48 83 fb 3f                           	cmp rbx, 0x3f
0x25069:   0f 87 f2 01 00 00                     	ja 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x2506f:   f6 c3 01                              	test bl, 1
0x25072:   0f 85 3f 01 00 00                     	jne 0x251b7 <TC90522DemodulatorGetQuality+0x199>
0x25078:   b9 00 00 00 00                        	mov ecx, 0
0x2507d:   ba ba 00 00 00                        	mov edx, 0xba
0x25082:   48 89 de                              	mov rsi, rbx
0x25085:   4c 89 ef                              	mov rdi, r13
0x25088:   e8 bc f5 ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x2508d:   3c 01                                 	cmp al, 1
0x2508f:   0f 85 cc 01 00 00                     	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x25095:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x25099:   ba b0 00 00 00                        	mov edx, 0xb0
0x2509e:   48 89 de                              	mov rsi, rbx
0x250a1:   4c 89 ef                              	mov rdi, r13
0x250a4:   e8 09 fc ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x250a9:   3c 01                                 	cmp al, 1
0x250ab:   0f 85 b0 01 00 00                     	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x250b1:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x250b5:   83 e0 0f                              	and eax, 0xf
0x250b8:   3c 07                                 	cmp al, 7
0x250ba:   0f 86 a1 01 00 00                     	jbe 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x250c0:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x250c4:   ba a0 00 00 00                        	mov edx, 0xa0
0x250c9:   48 89 de                              	mov rsi, rbx
0x250cc:   4c 89 ef                              	mov rdi, r13
0x250cf:   e8 de fb ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x250d4:   3c 01                                 	cmp al, 1
0x250d6:   0f 85 85 01 00 00                     	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x250dc:   44 0f b6 75 cf                        	movzx r14d, byte ptr [rbp - 0x31]
0x250e1:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x250e5:   ba a1 00 00 00                        	mov edx, 0xa1
0x250ea:   48 89 de                              	mov rsi, rbx
0x250ed:   4c 89 ef                              	mov rdi, r13
0x250f0:   e8 bd fb ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x250f5:   3c 01                                 	cmp al, 1
0x250f7:   0f 85 64 01 00 00                     	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x250fd:   44 0f b6 7d cf                        	movzx r15d, byte ptr [rbp - 0x31]
0x25102:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x25106:   ba a2 00 00 00                        	mov edx, 0xa2
0x2510b:   48 89 de                              	mov rsi, rbx
0x2510e:   4c 89 ef                              	mov rdi, r13
0x25111:   e8 9c fb ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x25116:   3c 01                                 	cmp al, 1
0x25118:   0f 85 43 01 00 00                     	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x2511e:   45 0f b6 f6                           	movzx r14d, r14b
0x25122:   49 c1 e6 08                           	shl r14, 8
0x25126:   45 0f b6 ff                           	movzx r15d, r15b
0x2512a:   4d 09 fe                              	or r14, r15
0x2512d:   49 c1 e6 08                           	shl r14, 8
0x25131:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x25135:   49 09 c6                              	or r14, rax
0x25138:   4c 89 f6                              	mov rsi, r14
0x2513b:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x25142:   b8 00 00 00 00                        	mov eax, 0
0x25147:   e8 53 62 00 00                        	call 0x2b39f <DriverDebugPrint>
0x2514c:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x25150:   ba a8 00 00 00                        	mov edx, 0xa8
0x25155:   48 89 de                              	mov rsi, rbx
0x25158:   4c 89 ef                              	mov rdi, r13
0x2515b:   e8 52 fb ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x25160:   3c 01                                 	cmp al, 1
0x25162:   0f 85 f9 00 00 00                     	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x25168:   44 0f b6 7d cf                        	movzx r15d, byte ptr [rbp - 0x31]
0x2516d:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x25171:   ba a9 00 00 00                        	mov edx, 0xa9
0x25176:   48 89 de                              	mov rsi, rbx
0x25179:   4c 89 ef                              	mov rdi, r13
0x2517c:   e8 31 fb ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x25181:   3c 01                                 	cmp al, 1
0x25183:   0f 85 d8 00 00 00                     	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x25189:   41 0f b6 cf                           	movzx ecx, r15b
0x2518d:   48 c1 e1 08                           	shl rcx, 8
0x25191:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x25195:   48 09 c1                              	or rcx, rax
0x25198:   0f 84 c3 00 00 00                     	je 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x2519e:   b8 5a ef 00 00                        	mov eax, 0xef5a
0x251a3:   ba 00 00 00 00                        	mov edx, 0
0x251a8:   48 f7 f1                              	div rcx
0x251ab:   45 89 f4                              	mov r12d, r14d
0x251ae:   44 0f af e0                           	imul r12d, eax
0x251b2:   e9 aa 00 00 00                        	jmp 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x251b7:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x251bb:   ba c3 00 00 00                        	mov edx, 0xc3
0x251c0:   48 89 de                              	mov rsi, rbx
0x251c3:   4c 89 ef                              	mov rdi, r13
0x251c6:   e8 cb f9 ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x251cb:   3c 01                                 	cmp al, 1
0x251cd:   0f 85 8e 00 00 00                     	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x251d3:   f6 45 cf 10                           	test byte ptr [rbp - 0x31], 0x10
0x251d7:   0f 85 84 00 00 00                     	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x251dd:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x251e1:   ba eb 00 00 00                        	mov edx, 0xeb ; "%("
0x251e6:   48 89 de                              	mov rsi, rbx
0x251e9:   4c 89 ef                              	mov rdi, r13
0x251ec:   e8 a5 f9 ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x251f1:   3c 01                                 	cmp al, 1
0x251f3:   75 6c                                 	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x251f5:   44 0f b6 75 cf                        	movzx r14d, byte ptr [rbp - 0x31]
0x251fa:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x251fe:   ba ec 00 00 00                        	mov edx, 0xec
0x25203:   48 89 de                              	mov rsi, rbx
0x25206:   4c 89 ef                              	mov rdi, r13
0x25209:   e8 88 f9 ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x2520e:   3c 01                                 	cmp al, 1
0x25210:   75 4f                                 	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x25212:   44 0f b6 7d cf                        	movzx r15d, byte ptr [rbp - 0x31]
0x25217:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x2521b:   ba ed 00 00 00                        	mov edx, 0xed
0x25220:   48 89 de                              	mov rsi, rbx
0x25223:   4c 89 ef                              	mov rdi, r13
0x25226:   e8 6b f9 ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x2522b:   3c 01                                 	cmp al, 1
0x2522d:   75 32                                 	jne 0x25261 <TC90522DemodulatorGetQuality+0x243>
0x2522f:   45 0f b6 e6                           	movzx r12d, r14b
0x25233:   49 c1 e4 08                           	shl r12, 8
0x25237:   45 0f b6 ff                           	movzx r15d, r15b
0x2523b:   4d 09 fc                              	or r12, r15
0x2523e:   49 c1 e4 08                           	shl r12, 8
0x25242:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x25246:   49 09 c4                              	or r12, rax
0x25249:   4c 89 e6                              	mov rsi, r12
0x2524c:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x25253:   b8 00 00 00 00                        	mov eax, 0
0x25258:   e8 42 61 00 00                        	call 0x2b39f <DriverDebugPrint>
0x2525d:   45 6b e4 50                           	imul r12d, r12d, 0x50
0x25261:   b8 64 00 00 00                        	mov eax, 0x64
0x25266:   45 85 e4                              	test r12d, r12d
0x25269:   0f 84 b7 00 00 00                     	je 0x25326
0x2526f:   41 8d 54 24 ff                        	lea edx, [r12 - 1]
0x25274:   b8 5a 00 00 00                        	mov eax, 0x5a
0x25279:   83 fa 09                              	cmp edx, 9
0x2527c:   0f 86 a4 00 00 00                     	jbe 0x25326
0x25282:   41 8d 54 24 f5                        	lea edx, [r12 - 0xb]
0x25287:   b8 50 00 00 00                        	mov eax, 0x50
0x2528c:   83 fa 59                              	cmp edx, 0x59
0x2528f:   0f 86 91 00 00 00                     	jbe 0x25326
0x25295:   41 8d 54 24 9b                        	lea edx, [r12 - 0x65]
0x2529a:   b8 46 00 00 00                        	mov eax, 0x46
0x2529f:   81 fa 83 03 00 00                     	cmp edx, 0x383
0x252a5:   76 7f                                 	jbe 0x25326
0x252a7:   41 8d 94 24 17 fc ff ff               	lea edx, [r12 - 0x3e9]
0x252af:   b8 3c 00 00 00                        	mov eax, 0x3c
0x252b4:   81 fa 27 23 00 00                     	cmp edx, 0x2327
0x252ba:   76 6a                                 	jbe 0x25326
0x252bc:   41 8d 94 24 ef d8 ff ff               	lea edx, [r12 - 0x2711]
0x252c4:   b8 32 00 00 00                        	mov eax, 0x32
0x252c9:   81 fa 3f 9c 00 00                     	cmp edx, 0x9c3f
0x252cf:   76 55                                 	jbe 0x25326
0x252d1:   41 8d 94 24 af 3c ff ff               	lea edx, [r12 - 0xc351]
0x252d9:   b8 28 00 00 00                        	mov eax, 0x28
0x252de:   81 fa 4f c3 00 00                     	cmp edx, 0xc34f
0x252e4:   76 40                                 	jbe 0x25326
0x252e6:   41 8d 94 24 5f 79 fe ff               	lea edx, [r12 - 0x186a1]
0x252ee:   b8 1e 00 00 00                        	mov eax, 0x1e
0x252f3:   81 fa ef 49 02 00                     	cmp edx, 0x249ef
0x252f9:   76 2b                                 	jbe 0x25326
0x252fb:   41 8d 94 24 6f 2f fc ff               	lea edx, [r12 - 0x3d091]
0x25303:   b8 14 00 00 00                        	mov eax, 0x14
; data inside code section at 0x25308 -- 0x2530c
0x25308:   81 fa 8f d0                                        |....            |
; function: TC90522_GetQuality at 0x2530c -- 0x25332
0x2530c:   03 00                                 	add eax, dword ptr [rax]
0x2530e:   76 16                                 	jbe 0x25326 <TC90522_GetQuality+0x1a>
0x25310:   41 81 ec 21 a1 07 00                  	sub r12d, 0x7a121
0x25317:   41 81 fc 20 a1 07 00                  	cmp r12d, 0x7a120
0x2531e:   19 c0                                 	sbb eax, eax
0x25320:   83 e0 05                              	and eax, 5
0x25323:   83 c0 05                              	add eax, 5
0x25326:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x2532a:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x2532e:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
; data inside code section at 0x25332 -- 0x25335
0x25332:   4c 8b 75                                           |L.u             |
; function: Japan4x4Tuner_TunerGetQuality at 0x25335 -- 0x25336
; function: function_25336 at 0x25336 -- 0x2533c
0x25336:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x2533a:   c9                                    	leave 
0x2533b:   c3                                    	ret 
; function: TC90522_GetQuality at 0x2533c -- 0x25359
0x2533c:   55                                    	push rbp
0x2533d:   48 89 e5                              	mov rbp, rsp
0x25340:   53                                    	push rbx
0x25341:   48 83 ec 08                           	sub rsp, 8
0x25345:   e8 a6 98 01 00                        	call 0x3ebf0 <mcount>
0x2534a:   48 89 d3                              	mov rbx, rdx
0x2534d:   48 85 d2                              	test rdx, rdx
0x25350:   74 07                                 	je 0x25359 <TC90522_GetQuality+0x1b>
0x25352:   e8 c7 fc ff ff                        	call 0x2501e <TC90522DemodulatorGetQuality>
0x25357:   88 03                                 	mov byte ptr [rbx], al
; data inside code section at 0x25359 -- 0x2535c
0x25359:   b8 01 00                                           |...             |
; function: TC90522DemodulatorGetStrength at 0x2535c -- 0x25365
0x2535c:   00 00                                 	add byte ptr [rax], al
0x2535e:   48 83 c4 08                           	add rsp, 8
0x25362:   5b                                    	pop rbx
0x25363:   c9                                    	leave 
0x25364:   c3                                    	ret 
; function: Japan4x4Tuner_TunerGetQuality at 0x25365 -- 0x2538c
0x25365:   55                                    	push rbp
0x25366:   48 89 e5                              	mov rbp, rsp
0x25369:   e8 82 98 01 00                        	call 0x3ebf0 <mcount>
0x2536e:   48 89 d1                              	mov rcx, rdx
0x25371:   b8 00 00 00 00                        	mov eax, 0
0x25376:   48 83 ff 3f                           	cmp rdi, 0x3f
0x2537a:   77 0e                                 	ja 0x2538a <Japan4x4Tuner_TunerGetQuality+0x25>
0x2537c:   48 89 f2                              	mov rdx, rsi
0x2537f:   48 89 fe                              	mov rsi, rdi
0x25382:   48 89 cf                              	mov rdi, rcx
0x25385:   e8 b2 ff ff ff                        	call 0x2533c <TC90522_GetQuality>
0x2538a:   c9                                    	leave 
0x2538b:   c3                                    	ret 
; function: TC90522DemodulatorGetStrength at 0x2538c -- 0x2564b
0x2538c:   55                                    	push rbp
0x2538d:   48 89 e5                              	mov rbp, rsp
0x25390:   48 83 ec 40                           	sub rsp, 0x40
0x25394:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x25398:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x2539c:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x253a0:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x253a4:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x253a8:   e8 43 98 01 00                        	call 0x3ebf0 <mcount>
0x253ad:   49 89 fd                              	mov r13, rdi
0x253b0:   48 89 f3                              	mov rbx, rsi
0x253b3:   48 83 fe 3f                           	cmp rsi, 0x3f
0x253b7:   0f 87 e7 01 00 00                     	ja 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x253bd:   40 f6 c6 01                           	test sil, 1
0x253c1:   0f 85 39 01 00 00                     	jne 0x25500 <TC90522DemodulatorGetStrength+0x174>
0x253c7:   b9 00 00 00 00                        	mov ecx, 0
0x253cc:   ba ba 00 00 00                        	mov edx, 0xba
0x253d1:   e8 73 f2 ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x253d6:   3c 01                                 	cmp al, 1
0x253d8:   0f 85 c6 01 00 00                     	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x253de:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x253e2:   ba b0 00 00 00                        	mov edx, 0xb0
0x253e7:   48 89 de                              	mov rsi, rbx
0x253ea:   4c 89 ef                              	mov rdi, r13
0x253ed:   e8 c0 f8 ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x253f2:   3c 01                                 	cmp al, 1
0x253f4:   0f 85 aa 01 00 00                     	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x253fa:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x253fe:   83 e0 0f                              	and eax, 0xf
0x25401:   3c 07                                 	cmp al, 7
0x25403:   0f 86 9b 01 00 00                     	jbe 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x25409:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x2540d:   ba 9d 00 00 00                        	mov edx, 0x9d
0x25412:   48 89 de                              	mov rsi, rbx
0x25415:   4c 89 ef                              	mov rdi, r13
0x25418:   e8 95 f8 ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x2541d:   3c 01                                 	cmp al, 1
0x2541f:   0f 85 7f 01 00 00                     	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x25425:   44 0f b6 75 cf                        	movzx r14d, byte ptr [rbp - 0x31]
0x2542a:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x2542e:   ba 9e 00 00 00                        	mov edx, 0x9e
0x25433:   48 89 de                              	mov rsi, rbx
0x25436:   4c 89 ef                              	mov rdi, r13
0x25439:   e8 74 f8 ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x2543e:   3c 01                                 	cmp al, 1
0x25440:   0f 85 5e 01 00 00                     	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x25446:   44 0f b6 7d cf                        	movzx r15d, byte ptr [rbp - 0x31]
0x2544b:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x2544f:   ba 9f 00 00 00                        	mov edx, 0x9f
0x25454:   48 89 de                              	mov rsi, rbx
0x25457:   4c 89 ef                              	mov rdi, r13
0x2545a:   e8 53 f8 ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x2545f:   3c 01                                 	cmp al, 1
0x25461:   0f 85 3d 01 00 00                     	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x25467:   45 0f b6 f6                           	movzx r14d, r14b
0x2546b:   49 c1 e6 08                           	shl r14, 8
0x2546f:   45 0f b6 ff                           	movzx r15d, r15b
0x25473:   4d 09 fe                              	or r14, r15
0x25476:   49 c1 e6 08                           	shl r14, 8
0x2547a:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x2547e:   49 09 c6                              	or r14, rax
0x25481:   4c 89 f6                              	mov rsi, r14
0x25484:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2548b:   b8 00 00 00 00                        	mov eax, 0
0x25490:   e8 0a 5f 00 00                        	call 0x2b39f <DriverDebugPrint>
0x25495:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x25499:   ba a6 00 00 00                        	mov edx, 0xa6
0x2549e:   48 89 de                              	mov rsi, rbx
0x254a1:   4c 89 ef                              	mov rdi, r13
0x254a4:   e8 09 f8 ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x254a9:   3c 01                                 	cmp al, 1
0x254ab:   0f 85 f3 00 00 00                     	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x254b1:   44 0f b6 7d cf                        	movzx r15d, byte ptr [rbp - 0x31]
0x254b6:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x254ba:   ba a7 00 00 00                        	mov edx, 0xa7
0x254bf:   48 89 de                              	mov rsi, rbx
0x254c2:   4c 89 ef                              	mov rdi, r13
0x254c5:   e8 e8 f7 ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x254ca:   3c 01                                 	cmp al, 1
0x254cc:   0f 85 d2 00 00 00                     	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x254d2:   41 0f b6 cf                           	movzx ecx, r15b
0x254d6:   48 c1 e1 08                           	shl rcx, 8
0x254da:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x254de:   48 09 c1                              	or rcx, rax
0x254e1:   0f 84 bd 00 00 00                     	je 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x254e7:   b8 5a ef 00 00                        	mov eax, 0xef5a
0x254ec:   ba 00 00 00 00                        	mov edx, 0
0x254f1:   48 f7 f1                              	div rcx
0x254f4:   45 89 f4                              	mov r12d, r14d
0x254f7:   44 0f af e0                           	imul r12d, eax
0x254fb:   e9 a4 00 00 00                        	jmp 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x25500:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x25504:   ba c3 00 00 00                        	mov edx, 0xc3
0x25509:   e8 88 f6 ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x2550e:   3c 01                                 	cmp al, 1
0x25510:   0f 85 8e 00 00 00                     	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x25516:   f6 45 cf 10                           	test byte ptr [rbp - 0x31], 0x10
0x2551a:   0f 85 84 00 00 00                     	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x25520:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x25524:   ba f0 00 00 00                        	mov edx, 0xf0
0x25529:   48 89 de                              	mov rsi, rbx
0x2552c:   4c 89 ef                              	mov rdi, r13
0x2552f:   e8 62 f6 ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x25534:   3c 01                                 	cmp al, 1
0x25536:   75 6c                                 	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x25538:   44 0f b6 75 cf                        	movzx r14d, byte ptr [rbp - 0x31]
0x2553d:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x25541:   ba f1 00 00 00                        	mov edx, 0xf1
0x25546:   48 89 de                              	mov rsi, rbx
0x25549:   4c 89 ef                              	mov rdi, r13
0x2554c:   e8 45 f6 ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x25551:   3c 01                                 	cmp al, 1
0x25553:   75 4f                                 	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x25555:   44 0f b6 7d cf                        	movzx r15d, byte ptr [rbp - 0x31]
0x2555a:   48 8d 4d cf                           	lea rcx, [rbp - 0x31]
0x2555e:   ba f2 00 00 00                        	mov edx, 0xf2
0x25563:   48 89 de                              	mov rsi, rbx
0x25566:   4c 89 ef                              	mov rdi, r13
0x25569:   e8 28 f6 ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x2556e:   3c 01                                 	cmp al, 1
0x25570:   75 32                                 	jne 0x255a4 <TC90522DemodulatorGetStrength+0x218>
0x25572:   45 0f b6 e6                           	movzx r12d, r14b
0x25576:   49 c1 e4 08                           	shl r12, 8
0x2557a:   45 0f b6 ff                           	movzx r15d, r15b
0x2557e:   4d 09 fc                              	or r12, r15
0x25581:   49 c1 e4 08                           	shl r12, 8
0x25585:   0f b6 45 cf                           	movzx eax, byte ptr [rbp - 0x31]
0x25589:   49 09 c4                              	or r12, rax
0x2558c:   4c 89 e6                              	mov rsi, r12
0x2558f:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x25596:   b8 00 00 00 00                        	mov eax, 0
0x2559b:   e8 ff 5d 00 00                        	call 0x2b39f <DriverDebugPrint>
0x255a0:   45 6b e4 50                           	imul r12d, r12d, 0x50
0x255a4:   b8 64 00 00 00                        	mov eax, 0x64
0x255a9:   45 85 e4                              	test r12d, r12d
0x255ac:   0f 84 b7 00 00 00                     	je 0x25669
0x255b2:   41 8d 54 24 ff                        	lea edx, [r12 - 1]
0x255b7:   b8 5a 00 00 00                        	mov eax, 0x5a
0x255bc:   83 fa 09                              	cmp edx, 9
0x255bf:   0f 86 a4 00 00 00                     	jbe 0x25669
0x255c5:   41 8d 54 24 f5                        	lea edx, [r12 - 0xb]
0x255ca:   b8 50 00 00 00                        	mov eax, 0x50
0x255cf:   83 fa 59                              	cmp edx, 0x59
0x255d2:   0f 86 91 00 00 00                     	jbe 0x25669
0x255d8:   41 8d 54 24 9b                        	lea edx, [r12 - 0x65]
0x255dd:   b8 46 00 00 00                        	mov eax, 0x46
0x255e2:   81 fa 83 03 00 00                     	cmp edx, 0x383
0x255e8:   76 7f                                 	jbe 0x25669
0x255ea:   41 8d 94 24 17 fc ff ff               	lea edx, [r12 - 0x3e9]
0x255f2:   b8 3c 00 00 00                        	mov eax, 0x3c
0x255f7:   81 fa 27 23 00 00                     	cmp edx, 0x2327
0x255fd:   76 6a                                 	jbe 0x25669
0x255ff:   41 8d 94 24 ef d8 ff ff               	lea edx, [r12 - 0x2711]
0x25607:   b8 32 00 00 00                        	mov eax, 0x32
0x2560c:   81 fa 3f 9c 00 00                     	cmp edx, 0x9c3f
0x25612:   76 55                                 	jbe 0x25669
0x25614:   41 8d 94 24 af 3c ff ff               	lea edx, [r12 - 0xc351]
0x2561c:   b8 28 00 00 00                        	mov eax, 0x28
0x25621:   81 fa 4f c3 00 00                     	cmp edx, 0xc34f
0x25627:   76 40                                 	jbe 0x25669
0x25629:   41 8d 94 24 5f 79 fe ff               	lea edx, [r12 - 0x186a1]
0x25631:   b8 1e 00 00 00                        	mov eax, 0x1e
0x25636:   81 fa ef 49 02 00                     	cmp edx, 0x249ef
0x2563c:   76 2b                                 	jbe 0x25669
0x2563e:   41 8d 94 24 6f 2f fc ff               	lea edx, [r12 - 0x3d091]
0x25646:   b8 14 00 00 00                        	mov eax, 0x14
; data inside code section at 0x2564b -- 0x2564f
0x2564b:   81 fa 8f d0                                        |....            |
; function: TC90522_GetStrength at 0x2564f -- 0x25675
0x2564f:   03 00                                 	add eax, dword ptr [rax]
0x25651:   76 16                                 	jbe 0x25669 <TC90522_GetStrength+0x1a>
0x25653:   41 81 ec 21 a1 07 00                  	sub r12d, 0x7a121
0x2565a:   41 81 fc 20 a1 07 00                  	cmp r12d, 0x7a120
0x25661:   19 c0                                 	sbb eax, eax
0x25663:   83 e0 05                              	and eax, 5
0x25666:   83 c0 05                              	add eax, 5
0x25669:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x2566d:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x25671:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
; data inside code section at 0x25675 -- 0x25678
0x25675:   4c 8b 75                                           |L.u             |
; function: Japan4x4Tuner_TunerGetStrength at 0x25678 -- 0x25679
; function: function_25679 at 0x25679 -- 0x2567f
0x25679:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x2567d:   c9                                    	leave 
0x2567e:   c3                                    	ret 
; function: TC90522_GetStrength at 0x2567f -- 0x2569c
0x2567f:   55                                    	push rbp
0x25680:   48 89 e5                              	mov rbp, rsp
0x25683:   53                                    	push rbx
0x25684:   48 83 ec 08                           	sub rsp, 8
0x25688:   e8 63 95 01 00                        	call 0x3ebf0 <mcount>
0x2568d:   48 89 d3                              	mov rbx, rdx
0x25690:   48 85 d2                              	test rdx, rdx
0x25693:   74 07                                 	je 0x2569c <TC90522_GetStrength+0x1b>
0x25695:   e8 f2 fc ff ff                        	call 0x2538c <TC90522DemodulatorGetStrength>
0x2569a:   88 03                                 	mov byte ptr [rbx], al
; data inside code section at 0x2569c -- 0x2569f
0x2569c:   b8 01 00                                           |...             |
; function: TC90522_CheckLock at 0x2569f -- 0x256a8
0x2569f:   00 00                                 	add byte ptr [rax], al
0x256a1:   48 83 c4 08                           	add rsp, 8
0x256a5:   5b                                    	pop rbx
0x256a6:   c9                                    	leave 
0x256a7:   c3                                    	ret 
; function: Japan4x4Tuner_TunerGetStrength at 0x256a8 -- 0x256cf
0x256a8:   55                                    	push rbp
0x256a9:   48 89 e5                              	mov rbp, rsp
0x256ac:   e8 3f 95 01 00                        	call 0x3ebf0 <mcount>
0x256b1:   48 89 d1                              	mov rcx, rdx
0x256b4:   b8 00 00 00 00                        	mov eax, 0
0x256b9:   48 83 ff 3f                           	cmp rdi, 0x3f
0x256bd:   77 0e                                 	ja 0x256cd <Japan4x4Tuner_TunerGetStrength+0x25>
0x256bf:   48 89 f2                              	mov rdx, rsi
0x256c2:   48 89 fe                              	mov rsi, rdi
0x256c5:   48 89 cf                              	mov rdi, rcx
0x256c8:   e8 b2 ff ff ff                        	call 0x2567f <TC90522_GetStrength>
0x256cd:   c9                                    	leave 
0x256ce:   c3                                    	ret 
; function: TC90522_CheckLock at 0x256cf -- 0x257f4
0x256cf:   55                                    	push rbp
0x256d0:   48 89 e5                              	mov rbp, rsp
0x256d3:   48 83 ec 30                           	sub rsp, 0x30
0x256d7:   48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x256db:   4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x256df:   4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x256e3:   4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x256e7:   e8 04 95 01 00                        	call 0x3ebf0 <mcount>
0x256ec:   49 89 fe                              	mov r14, rdi
0x256ef:   49 89 f4                              	mov r12, rsi
0x256f2:   48 89 d3                              	mov rbx, rdx
0x256f5:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x256fc:   e8 93 5c 00 00                        	call 0x2b394 <DriverDebugMessage>
0x25701:   4c 89 e6                              	mov rsi, r12
0x25704:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2570b:   b8 00 00 00 00                        	mov eax, 0
0x25710:   e8 8a 5c 00 00                        	call 0x2b39f <DriverDebugPrint>
0x25715:   41 bd 00 00 00 00                     	mov r13d, 0
0x2571b:   48 85 db                              	test rbx, rbx
0x2571e:   0f 84 ec 00 00 00                     	je 0x25810
0x25724:   c6 03 00                              	mov byte ptr [rbx], 0
0x25727:   49 83 fc 3f                           	cmp r12, 0x3f
0x2572b:   0f 87 bd 00 00 00                     	ja 0x257ee <TC90522_CheckLock+0x11f>
0x25731:   41 f6 c4 01                           	test r12b, 1
0x25735:   75 7f                                 	jne 0x257b6 <TC90522_CheckLock+0xe7>
0x25737:   48 8d 4d df                           	lea rcx, [rbp - 0x21]
0x2573b:   ba 80 00 00 00                        	mov edx, 0x80
0x25740:   4c 89 e6                              	mov rsi, r12
0x25743:   4c 89 f7                              	mov rdi, r14
0x25746:   e8 67 f5 ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x2574b:   84 c0                                 	test al, al
0x2574d:   0f 84 9b 00 00 00                     	je 0x257ee <TC90522_CheckLock+0x11f>
0x25753:   0f b6 75 df                           	movzx esi, byte ptr [rbp - 0x21]
0x25757:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2575e:   b8 00 00 00 00                        	mov eax, 0
0x25763:   e8 37 5c 00 00                        	call 0x2b39f <DriverDebugPrint>
0x25768:   f6 45 df 08                           	test byte ptr [rbp - 0x21], 8
0x2576c:   0f 85 84 00 00 00                     	jne 0x257f6
0x25772:   48 8d 4d df                           	lea rcx, [rbp - 0x21]
0x25776:   ba b0 00 00 00                        	mov edx, 0xb0
0x2577b:   4c 89 e6                              	mov rsi, r12
0x2577e:   4c 89 f7                              	mov rdi, r14
0x25781:   e8 2c f5 ff ff                        	call 0x24cb2 <TC90522DemodulatorOFDM_I2C_Read>
0x25786:   84 c0                                 	test al, al
0x25788:   74 64                                 	je 0x257ee <TC90522_CheckLock+0x11f>
0x2578a:   0f b6 75 df                           	movzx esi, byte ptr [rbp - 0x21]
0x2578e:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x25795:   b8 00 00 00 00                        	mov eax, 0
0x2579a:   e8 00 5c 00 00                        	call 0x2b39f <DriverDebugPrint>
0x2579f:   0f b6 45 df                           	movzx eax, byte ptr [rbp - 0x21]
0x257a3:   83 e0 0f                              	and eax, 0xf
0x257a6:   83 f8 07                              	cmp eax, 7
0x257a9:   7e 4b                                 	jle 0x257f6
0x257ab:   c6 03 01                              	mov byte ptr [rbx], 1
0x257ae:   41 bd 01 00 00 00                     	mov r13d, 1
0x257b4:   eb 46                                 	jmp 0x257fc
0x257b6:   48 8d 4d df                           	lea rcx, [rbp - 0x21]
0x257ba:   ba c3 00 00 00                        	mov edx, 0xc3
0x257bf:   4c 89 e6                              	mov rsi, r12
0x257c2:   4c 89 f7                              	mov rdi, r14
0x257c5:   e8 cc f3 ff ff                        	call 0x24b96 <TC90522DemodulatorPSK_I2C_Read>
0x257ca:   3c 01                                 	cmp al, 1
0x257cc:   75 20                                 	jne 0x257ee <TC90522_CheckLock+0x11f>
0x257ce:   f6 45 df 10                           	test byte ptr [rbp - 0x21], 0x10
0x257d2:   75 22                                 	jne 0x257f6
0x257d4:   4c 89 e6                              	mov rsi, r12
0x257d7:   4c 89 f7                              	mov rdi, r14
0x257da:   e8 3f f8 ff ff                        	call 0x2501e <TC90522DemodulatorGetQuality>
0x257df:   3c 09                                 	cmp al, 9
0x257e1:   76 13                                 	jbe 0x257f6
0x257e3:   c6 03 01                              	mov byte ptr [rbx], 1
0x257e6:   41 bd 01 00 00 00                     	mov r13d, 1
0x257ec:   eb 0e                                 	jmp 0x257fc
0x257ee:   41 bd 00 00 00 00                     	mov r13d, 0
; data inside code section at 0x257f4 -- 0x257f5
0x257f4:   eb                                                 |.               |
; function: Japan4x4Tuner_TunerCheckLockStatus at 0x257f5 -- 0x25810
; data inside code section at 0x25810 -- 0x2581c
0x25810:   44 89 e8 48 8b 5d e0 4c  8b 65 e8 4c               |D..H.].L.e.L    |
; function: NMI131_WriteRegister at 0x2581c -- 0x25825
0x2581c:   8b 6d f0                              	mov ebp, dword ptr [rbp - 0x10]
0x2581f:   4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x25823:   c9                                    	leave 
0x25824:   c3                                    	ret 
; function: Japan4x4Tuner_TunerCheckLockStatus at 0x25825 -- 0x2584c
0x25825:   55                                    	push rbp
0x25826:   48 89 e5                              	mov rbp, rsp
0x25829:   e8 c2 93 01 00                        	call 0x3ebf0 <mcount>
0x2582e:   48 89 d1                              	mov rcx, rdx
0x25831:   b8 00 00 00 00                        	mov eax, 0
0x25836:   48 83 ff 3f                           	cmp rdi, 0x3f
0x2583a:   77 0e                                 	ja 0x2584a <Japan4x4Tuner_TunerCheckLockStatus+0x25>
0x2583c:   48 89 f2                              	mov rdx, rsi
0x2583f:   48 89 fe                              	mov rsi, rdi
0x25842:   48 89 cf                              	mov rdi, rcx
0x25845:   e8 85 fe ff ff                        	call 0x256cf <TC90522_CheckLock>
0x2584a:   c9                                    	leave 
0x2584b:   c3                                    	ret 
; function: NMI131_WriteRegister at 0x2584c -- 0x258cf
0x2584c:   55                                    	push rbp
0x2584d:   48 89 e5                              	mov rbp, rsp
0x25850:   48 83 ec 30                           	sub rsp, 0x30
0x25854:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x25858:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x2585c:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x25860:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x25864:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x25868:   e8 83 93 01 00                        	call 0x3ebf0 <mcount>
0x2586d:   49 89 ff                              	mov r15, rdi
0x25870:   49 89 d5                              	mov r13, rdx
0x25873:   41 89 cc                              	mov r12d, ecx
0x25876:   41 89 f6                              	mov r14d, esi
0x25879:   48 85 d2                              	test rdx, rdx
0x2587c:   74 67                                 	je 0x258e5
0x2587e:   41 8d 7c 24 02                        	lea edi, [r12 + 2]
0x25883:   be 20 00 00 00                        	mov esi, 0x20
0x25888:   e8 63 94 01 00                        	call 0x3ecf0 <__kmalloc>
0x2588d:   48 89 c3                              	mov rbx, rax
0x25890:   48 85 c0                              	test rax, rax
0x25893:   74 50                                 	je 0x258e5
0x25895:   c6 00 fe                              	mov byte ptr [rax], 0xfe
0x25898:   c6 40 01 ce                           	mov byte ptr [rax + 1], 0xce
0x2589c:   48 8d 78 02                           	lea rdi, [rax + 2]
0x258a0:   44 89 e2                              	mov edx, r12d
0x258a3:   4c 89 ee                              	mov rsi, r13
0x258a6:   e8 bd 92 01 00                        	call 0x3eb68 <memcpy>
0x258ab:   41 83 c4 02                           	add r12d, 2
0x258af:   41 0f b7 cc                           	movzx ecx, r12w
0x258b3:   43 8d 34 36                           	lea esi, [r14 + r14]
0x258b7:   83 e6 0e                              	and esi, 0xe
0x258ba:   83 c6 20                              	add esi, 0x20
0x258bd:   48 89 da                              	mov rdx, rbx
0x258c0:   4c 89 ff                              	mov rdi, r15
0x258c3:   e8 24 5a 00 00                        	call 0x2b2ec <I2C_PortingLayer_Write>
0x258c8:   41 89 c4                              	mov r12d, eax
0x258cb:   84 c0                                 	test al, al
0x258cd:   75 0c                                 	jne 0x258db
; data inside code section at 0x258cf -- 0x258d4
0x258cf:   48 c7 c7 00 00                                     |H....           |
; function: NMI131_Delay at 0x258d4 -- 0x258e3
0x258d4:   00 00                                 	add byte ptr [rax], al
0x258d6:   e8 b9 5a 00 00                        	call 0x2b394 <DriverDebugMessage>
0x258db:   48 89 df                              	mov rdi, rbx
0x258de:   e8 95 92 01 00                        	call 0x3eb78 <kfree>
; data inside code section at 0x258e3 -- 0x258e4
0x258e3:   eb                                                 |.               |
; function: TC90522DemodulatorDelayMilliseconds at 0x258e4 -- 0x258e5
; data inside code section at 0x258e5 -- 0x258f4
0x258e5:   41 bc 00 00 00 00 44 89  e0 48 8b 5d d8 4c 8b      |A.....D..H.].L. |
; function: TC90522_ChannelSearch at 0x258f4 -- 0x25904
0x258f4:   65 e0 4c                              	loopne 0x25943
0x258f7:   8b 6d e8                              	mov ebp, dword ptr [rbp - 0x18]
0x258fa:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x258fe:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x25902:   c9                                    	leave 
0x25903:   c3                                    	ret 
; function: NMI131_Delay at 0x25904 -- 0x25914
0x25904:   55                                    	push rbp
0x25905:   48 89 e5                              	mov rbp, rsp
0x25908:   e8 e3 92 01 00                        	call 0x3ebf0 <mcount>
0x2590d:   e8 7e 92 01 00                        	call 0x3eb90 <msleep_interruptible>
0x25912:   c9                                    	leave 
0x25913:   c3                                    	ret 
; function: TC90522DemodulatorDelayMilliseconds at 0x25914 -- 0x25924
0x25914:   55                                    	push rbp
0x25915:   48 89 e5                              	mov rbp, rsp
0x25918:   e8 d3 92 01 00                        	call 0x3ebf0 <mcount>
0x2591d:   e8 6e 92 01 00                        	call 0x3eb90 <msleep_interruptible>
0x25922:   c9                                    	leave 
0x25923:   c3                                    	ret 
; function: TC90522_ChannelSearch at 0x25924 -- 0x25940
0x25924:   55                                    	push rbp
0x25925:   48 89 e5                              	mov rbp, rsp
0x25928:   48 83 ec 10                           	sub rsp, 0x10
0x2592c:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x25930:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x25935:   e8 b6 92 01 00                        	call 0x3ebf0 <mcount>
0x2593a:   49 89 fc                              	mov r12, rdi
0x2593d:   48 89 f3                              	mov rbx, rsi
; data inside code section at 0x25940 -- 0x25944
0x25940:   48 83 fe 3f                                        |H..?            |
; function: function_25944 at 0x25944 -- 0x25a14
0x25944:   0f 87 ea 00 00 00                     	ja 0x25a34
0x2594a:   40 f6 c6 01                           	test sil, 1
0x2594e:   75 78                                 	jne 0x259c8 <function_25944+0x84>
0x25950:   bf fa 00 00 00                        	mov edi, 0xfa
0x25955:   e8 ba ff ff ff                        	call 0x25914 <TC90522DemodulatorDelayMilliseconds>
0x2595a:   b9 4c 00 00 00                        	mov ecx, 0x4c
0x2595f:   ba 23 00 00 00                        	mov edx, 0x23
0x25964:   48 89 de                              	mov rsi, rbx
0x25967:   4c 89 e7                              	mov rdi, r12
0x2596a:   e8 da ec ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x2596f:   84 c0                                 	test al, al
0x25971:   0f 84 bd 00 00 00                     	je 0x25a34
0x25977:   b9 50 00 00 00                        	mov ecx, 0x50
0x2597c:   ba 01 00 00 00                        	mov edx, 1
0x25981:   48 89 de                              	mov rsi, rbx
0x25984:   4c 89 e7                              	mov rdi, r12
0x25987:   e8 bd ec ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x2598c:   84 c0                                 	test al, al
0x2598e:   0f 84 a0 00 00 00                     	je 0x25a34
0x25994:   b9 01 00 00 00                        	mov ecx, 1
0x25999:   ba 71 00 00 00                        	mov edx, 0x71
0x2599e:   48 89 de                              	mov rsi, rbx
0x259a1:   4c 89 e7                              	mov rdi, r12
0x259a4:   e8 a0 ec ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x259a9:   84 c0                                 	test al, al
0x259ab:   0f 84 83 00 00 00                     	je 0x25a34
0x259b1:   b9 24 00 00 00                        	mov ecx, 0x24
0x259b6:   ba 72 00 00 00                        	mov edx, 0x72
0x259bb:   48 89 de                              	mov rsi, rbx
0x259be:   4c 89 e7                              	mov rdi, r12
0x259c1:   e8 83 ec ff ff                        	call 0x24649 <TC90522DemodulatorOFDM_I2C_Write>
0x259c6:   eb 71                                 	jmp 0x25a39
0x259c8:   bf fa 00 00 00                        	mov edi, 0xfa
0x259cd:   e8 42 ff ff ff                        	call 0x25914 <TC90522DemodulatorDelayMilliseconds>
0x259d2:   b9 ff 00 00 00                        	mov ecx, 0xff
0x259d7:   ba 0a 00 00 00                        	mov edx, 0xa
0x259dc:   48 89 de                              	mov rsi, rbx
0x259df:   4c 89 e7                              	mov rdi, r12
0x259e2:   e8 9d eb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x259e7:   3c 01                                 	cmp al, 1
0x259e9:   75 49                                 	jne 0x25a34
0x259eb:   b9 b2 00 00 00                        	mov ecx, 0xb2
0x259f0:   ba 10 00 00 00                        	mov edx, 0x10
0x259f5:   48 89 de                              	mov rsi, rbx
0x259f8:   4c 89 e7                              	mov rdi, r12
0x259fb:   e8 84 eb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x25a00:   3c 01                                 	cmp al, 1
0x25a02:   75 30                                 	jne 0x25a34
0x25a04:   b9 00 00 00 00                        	mov ecx, 0
0x25a09:   ba 11 00 00 00                        	mov edx, 0x11
0x25a0e:   48 89 de                              	mov rsi, rbx
0x25a11:   4c 89 e7                              	mov rdi, r12
; function: Japan4x4Tuner_TunerSetFrequency at 0x25a14 -- 0x25a44
0x25a14:   e8 6b eb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x25a19:   3c 01                                 	cmp al, 1
0x25a1b:   75 17                                 	jne 0x25a34 <Japan4x4Tuner_TunerSetFrequency+0x20>
0x25a1d:   b9 01 00 00 00                        	mov ecx, 1
0x25a22:   ba 03 00 00 00                        	mov edx, 3
0x25a27:   48 89 de                              	mov rsi, rbx
0x25a2a:   4c 89 e7                              	mov rdi, r12
0x25a2d:   e8 52 eb ff ff                        	call 0x24584 <TC90522DemodulatorPSK_I2C_Write>
0x25a32:   eb 05                                 	jmp 0x25a39 <Japan4x4Tuner_TunerSetFrequency+0x25>
0x25a34:   b8 00 00 00 00                        	mov eax, 0
0x25a39:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x25a3d:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x25a42:   c9                                    	leave 
0x25a43:   c3                                    	ret 
; function: Japan4x4Tuner_TunerSetFrequency at 0x25a44 -- 0x25a8e
0x25a44:   55                                    	push rbp
0x25a45:   48 89 e5                              	mov rbp, rsp
0x25a48:   48 83 ec 20                           	sub rsp, 0x20
0x25a4c:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x25a50:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x25a54:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x25a58:   e8 93 91 01 00                        	call 0x3ebf0 <mcount>
0x25a5d:   48 89 fb                              	mov rbx, rdi
0x25a60:   49 89 f5                              	mov r13, rsi
0x25a63:   49 89 d4                              	mov r12, rdx
0x25a66:   b8 00 00 00 00                        	mov eax, 0
0x25a6b:   48 83 ff 3f                           	cmp rdi, 0x3f
0x25a6f:   77 41                                 	ja 0x25ab2
0x25a71:   48 89 fe                              	mov rsi, rdi
0x25a74:   48 89 d7                              	mov rdi, rdx
0x25a77:   e8 f8 eb ff ff                        	call 0x24674 <TC90522_ResetInternal>
0x25a7c:   84 c0                                 	test al, al
0x25a7e:   74 32                                 	je 0x25ab2
0x25a80:   f6 c3 01                              	test bl, 1
0x25a83:   75 10                                 	jne 0x25a95
0x25a85:   4c 89 ea                              	mov rdx, r13
0x25a88:   48 89 de                              	mov rsi, rbx
0x25a8b:   4c 89 e7                              	mov rdi, r12
; data inside code section at 0x25a8e -- 0x25a90
0x25a8e:   e8 af                                              |..              |
; function: nmi_common_init at 0x25a90 -- 0x25ac0
0x25a90:   e9 ff ff eb 0e                        	jmp 0xeee5a94 <function_eee5a94>
0x25a95:   4c 89 ea                              	mov rdx, r13
0x25a98:   48 89 de                              	mov rsi, rbx
0x25a9b:   4c 89 e7                              	mov rdi, r12
0x25a9e:   e8 74 e5 ff ff                        	call 0x24017 <TDA2014x_TunerSetFrequency>
0x25aa3:   84 c0                                 	test al, al
0x25aa5:   74 0b                                 	je 0x25ab2 <nmi_common_init+0x22>
0x25aa7:   48 89 de                              	mov rsi, rbx
0x25aaa:   4c 89 e7                              	mov rdi, r12
0x25aad:   e8 72 fe ff ff                        	call 0x25924 <TC90522_ChannelSearch>
0x25ab2:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x25ab6:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x25aba:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x25abe:   c9                                    	leave 
0x25abf:   c3                                    	ret 
; function: nmi_common_init at 0x25ac0 -- 0x25d61
0x25ac0:   55                                    	push rbp
0x25ac1:   48 89 e5                              	mov rbp, rsp
0x25ac4:   e8 27 91 01 00                        	call 0x3ebf0 <mcount>
0x25ac9:   49 89 f8                              	mov r8, rdi
0x25acc:   0f b6 3f                              	movzx edi, byte ptr [rdi]
0x25acf:   48 69 ff b8 00 00 00                  	imul rdi, rdi, 0xb8
0x25ad6:   48 81 c7 00 00 00 00                  	add rdi, 0
0x25add:   41 b9 b8 00 00 00                     	mov r9d, 0xb8
0x25ae3:   b8 00 00 00 00                        	mov eax, 0
0x25ae8:   40 f6 c7 01                           	test dil, 1
0x25aec:   74 0a                                 	je 0x25af8 <nmi_common_init+0x38>
0x25aee:   88 07                                 	mov byte ptr [rdi], al
0x25af0:   48 83 c7 01                           	add rdi, 1
0x25af4:   41 83 e9 01                           	sub r9d, 1
0x25af8:   40 f6 c7 02                           	test dil, 2
0x25afc:   74 0b                                 	je 0x25b09 <nmi_common_init+0x49>
0x25afe:   66 89 07                              	mov word ptr [rdi], ax
0x25b01:   48 83 c7 02                           	add rdi, 2
0x25b05:   41 83 e9 02                           	sub r9d, 2
0x25b09:   40 f6 c7 04                           	test dil, 4
0x25b0d:   74 0a                                 	je 0x25b19 <nmi_common_init+0x59>
0x25b0f:   89 07                                 	mov dword ptr [rdi], eax
0x25b11:   48 83 c7 04                           	add rdi, 4
0x25b15:   41 83 e9 04                           	sub r9d, 4
0x25b19:   44 89 c9                              	mov ecx, r9d
0x25b1c:   c1 e9 03                              	shr ecx, 3
0x25b1f:   89 c9                                 	mov ecx, ecx
0x25b21:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x25b24:   41 f6 c1 04                           	test r9b, 4
0x25b28:   74 06                                 	je 0x25b30 <nmi_common_init+0x70>
0x25b2a:   89 07                                 	mov dword ptr [rdi], eax
0x25b2c:   48 83 c7 04                           	add rdi, 4
0x25b30:   41 f6 c1 02                           	test r9b, 2
0x25b34:   74 07                                 	je 0x25b3d <nmi_common_init+0x7d>
0x25b36:   66 89 07                              	mov word ptr [rdi], ax
0x25b39:   48 83 c7 02                           	add rdi, 2
0x25b3d:   41 f6 c1 01                           	test r9b, 1
0x25b41:   74 02                                 	je 0x25b45 <nmi_common_init+0x85>
0x25b43:   88 07                                 	mov byte ptr [rdi], al
0x25b45:   48 85 f6                              	test rsi, rsi
0x25b48:   0f 84 8e 00 00 00                     	je 0x25bdc <nmi_common_init+0x11c>
0x25b4e:   41 0f b6 08                           	movzx ecx, byte ptr [r8]
0x25b52:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x25b59:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x25b60:   48 8b 3e                              	mov rdi, qword ptr [rsi]
0x25b63:   48 89 3c 01                           	mov qword ptr [rcx + rax], rdi
0x25b67:   48 8b 7e 08                           	mov rdi, qword ptr [rsi + 8]
0x25b6b:   48 89 7c 01 08                        	mov qword ptr [rcx + rax + 8], rdi
0x25b70:   48 8b 7e 10                           	mov rdi, qword ptr [rsi + 0x10]
0x25b74:   48 89 7c 01 10                        	mov qword ptr [rcx + rax + 0x10], rdi
0x25b79:   48 8b 7e 18                           	mov rdi, qword ptr [rsi + 0x18]
0x25b7d:   48 89 7c 01 18                        	mov qword ptr [rcx + rax + 0x18], rdi
0x25b82:   48 8b 7e 20                           	mov rdi, qword ptr [rsi + 0x20]
0x25b86:   48 89 7c 01 20                        	mov qword ptr [rcx + rax + 0x20], rdi
0x25b8b:   48 8b 7e 28                           	mov rdi, qword ptr [rsi + 0x28]
0x25b8f:   48 89 7c 01 28                        	mov qword ptr [rcx + rax + 0x28], rdi
0x25b94:   48 8b 7e 30                           	mov rdi, qword ptr [rsi + 0x30]
0x25b98:   48 89 7c 01 30                        	mov qword ptr [rcx + rax + 0x30], rdi
0x25b9d:   48 8b 7e 38                           	mov rdi, qword ptr [rsi + 0x38]
0x25ba1:   48 89 7c 01 38                        	mov qword ptr [rcx + rax + 0x38], rdi
0x25ba6:   48 8b 7e 40                           	mov rdi, qword ptr [rsi + 0x40]
0x25baa:   48 89 7c 01 40                        	mov qword ptr [rcx + rax + 0x40], rdi
0x25baf:   48 8b 7e 48                           	mov rdi, qword ptr [rsi + 0x48]
0x25bb3:   48 89 7c 01 48                        	mov qword ptr [rcx + rax + 0x48], rdi
0x25bb8:   48 8b 7e 50                           	mov rdi, qword ptr [rsi + 0x50]
0x25bbc:   48 89 7c 01 50                        	mov qword ptr [rcx + rax + 0x50], rdi
0x25bc1:   48 8b 7e 58                           	mov rdi, qword ptr [rsi + 0x58]
0x25bc5:   48 89 7c 01 58                        	mov qword ptr [rcx + rax + 0x58], rdi
0x25bca:   48 8b 7e 60                           	mov rdi, qword ptr [rsi + 0x60]
0x25bce:   48 89 7c 01 60                        	mov qword ptr [rcx + rax + 0x60], rdi
0x25bd3:   48 8b 76 68                           	mov rsi, qword ptr [rsi + 0x68]
0x25bd7:   48 89 74 01 68                        	mov qword ptr [rcx + rax + 0x68], rsi
0x25bdc:   48 85 d2                              	test rdx, rdx
0x25bdf:   0f 84 b3 01 00 00                     	je 0x25d98
0x25be5:   48 c7 02 00 00 00 00                  	mov qword ptr [rdx], 0
0x25bec:   48 c7 42 08 00 00 00 00               	mov qword ptr [rdx + 8], 0
0x25bf4:   48 c7 42 10 00 00 00 00               	mov qword ptr [rdx + 0x10], 0
0x25bfc:   48 c7 42 18 00 00 00 00               	mov qword ptr [rdx + 0x18], 0
0x25c04:   48 c7 42 20 00 00 00 00               	mov qword ptr [rdx + 0x20], 0
0x25c0c:   48 c7 42 28 00 00 00 00               	mov qword ptr [rdx + 0x28], 0
0x25c14:   48 c7 42 30 00 00 00 00               	mov qword ptr [rdx + 0x30], 0
0x25c1c:   48 c7 42 38 00 00 00 00               	mov qword ptr [rdx + 0x38], 0
0x25c24:   48 c7 42 40 00 00 00 00               	mov qword ptr [rdx + 0x40], 0
0x25c2c:   48 c7 42 48 00 00 00 00               	mov qword ptr [rdx + 0x48], 0
0x25c34:   48 c7 42 50 00 00 00 00               	mov qword ptr [rdx + 0x50], 0
0x25c3c:   48 c7 42 58 00 00 00 00               	mov qword ptr [rdx + 0x58], 0
0x25c44:   48 c7 42 60 00 00 00 00               	mov qword ptr [rdx + 0x60], 0
0x25c4c:   48 c7 42 68 00 00 00 00               	mov qword ptr [rdx + 0x68], 0
0x25c54:   48 c7 42 70 00 00 00 00               	mov qword ptr [rdx + 0x70], 0
0x25c5c:   48 c7 42 78 00 00 00 00               	mov qword ptr [rdx + 0x78], 0
0x25c64:   48 c7 82 80 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0x80], 0
0x25c6f:   48 c7 82 88 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0x88], 0
0x25c7a:   48 c7 82 90 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0x90], 0
0x25c85:   48 c7 82 98 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0x98], 0
0x25c90:   48 c7 82 a0 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xa0], 0
0x25c9b:   48 c7 82 a8 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xa8], 0
0x25ca6:   48 c7 82 b0 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xb0], 0
0x25cb1:   48 c7 82 b8 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xb8], 0
0x25cbc:   48 c7 82 c0 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xc0], 0
0x25cc7:   48 c7 82 c8 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xc8], 0
0x25cd2:   48 c7 82 d0 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xd0], 0
0x25cdd:   48 c7 82 d8 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xd8], 0
0x25ce8:   48 c7 82 e0 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xe0], 0
0x25cf3:   48 c7 82 e8 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xe8], 0
0x25cfe:   48 c7 82 f0 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xf0], 0
0x25d09:   48 c7 82 f8 00 00 00 00 00 00 00      	mov qword ptr [rdx + 0xf8], 0
0x25d14:   48 c7 82 00 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x100], 0
0x25d1f:   48 c7 82 08 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x108], 0
0x25d2a:   48 c7 82 10 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x110], 0
0x25d35:   48 c7 82 18 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x118], 0
0x25d40:   48 c7 82 20 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x120], 0
0x25d4b:   48 c7 82 28 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x128], 0
0x25d56:   48 c7 82 30 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x130], 0
; data inside code section at 0x25d61 -- 0x25d6a
0x25d61:   48 c7 82 38 01 00 00 00  00                        |H..8.....       |
; function: NMI131_Initialization at 0x25d6a -- 0x25d9a
0x25d6a:   00 00                                 	add byte ptr [rax], al
0x25d6c:   48 c7 82 40 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x140], 0
0x25d77:   48 c7 82 48 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x148], 0
0x25d82:   48 c7 82 58 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x158], 0
0x25d8d:   48 c7 82 50 01 00 00 00 00 00 00      	mov qword ptr [rdx + 0x150], 0
0x25d98:   c9                                    	leave 
0x25d99:   c3                                    	ret 
; function: NMI131_Initialization at 0x25d9a -- 0x25ef3
0x25d9a:   55                                    	push rbp
0x25d9b:   48 89 e5                              	mov rbp, rsp
0x25d9e:   41 55                                 	push r13
0x25da0:   41 54                                 	push r12
0x25da2:   53                                    	push rbx
0x25da3:   48 83 ec 08                           	sub rsp, 8
0x25da7:   e8 44 8e 01 00                        	call 0x3ebf0 <mcount>
0x25dac:   49 89 fd                              	mov r13, rdi
0x25daf:   49 89 f4                              	mov r12, rsi
0x25db2:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x25db9:   e8 d6 55 00 00                        	call 0x2b394 <DriverDebugMessage>
0x25dbe:   4c 89 e3                              	mov rbx, r12
0x25dc1:   48 d1 eb                              	shr rbx, 1
0x25dc4:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x25dcb:   48 8d 14 9d 00 00 00 00               	lea rdx, [rbx*4]
0x25dd3:   48 8d 0c 1a                           	lea rcx, [rdx + rbx]
0x25dd7:   88 1c c8                              	mov byte ptr [rax + rcx*8], bl
0x25dda:   4c 89 6c c8 08                        	mov qword ptr [rax + rcx*8 + 8], r13
0x25ddf:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x25de6:   c6 04 c8 00                           	mov byte ptr [rax + rcx*8], 0
0x25dea:   48 c7 44 c8 08 00 00 00 00            	mov qword ptr [rax + rcx*8 + 8], 0
0x25df3:   c6 04 cd 00 00 00 00 03               	mov byte ptr [rcx*8], 3
0x25dfb:   48 89 d8                              	mov rax, rbx
0x25dfe:   48 c1 e0 04                           	shl rax, 4
0x25e02:   48 89 de                              	mov rsi, rbx
0x25e05:   48 c1 e6 07                           	shl rsi, 7
0x25e09:   48 29 c6                              	sub rsi, rax
0x25e0c:   48 81 c6 00 00 00 00                  	add rsi, 0
0x25e13:   48 89 34 dd 00 00 00 00               	mov qword ptr [rbx*8], rsi
0x25e1b:   b9 0e 00 00 00                        	mov ecx, 0xe
0x25e20:   b8 00 00 00 00                        	mov eax, 0
0x25e25:   48 89 f7                              	mov rdi, rsi
0x25e28:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x25e2b:   c7 06 18 00 00 00                     	mov dword ptr [rsi], 0x18
0x25e31:   c7 46 04 00 00 00 00                  	mov dword ptr [rsi + 4], 0
0x25e38:   44 88 66 08                           	mov byte ptr [rsi + 8], r12b
0x25e3c:   c7 46 0c 12 00 00 00                  	mov dword ptr [rsi + 0xc], 0x12
0x25e43:   48 c7 46 20 00 00 00 00               	mov qword ptr [rsi + 0x20], 0
0x25e4b:   48 c7 46 18 00 00 00 00               	mov qword ptr [rsi + 0x18], 0
0x25e53:   48 c7 46 28 00 00 00 00               	mov qword ptr [rsi + 0x28], 0
0x25e5b:   48 c7 46 30 00 00 00 00               	mov qword ptr [rsi + 0x30], 0
0x25e63:   48 c7 46 38 00 00 00 00               	mov qword ptr [rsi + 0x38], 0
0x25e6b:   48 c7 46 40 00 00 00 00               	mov qword ptr [rsi + 0x40], 0
0x25e73:   48 c7 46 48 00 00 00 00               	mov qword ptr [rsi + 0x48], 0
0x25e7b:   c6 46 10 00                           	mov byte ptr [rsi + 0x10], 0
0x25e7f:   c6 46 68 00                           	mov byte ptr [rsi + 0x68], 0
0x25e83:   c7 46 6c 00 00 00 00                  	mov dword ptr [rsi + 0x6c], 0
0x25e8a:   48 8d 04 1a                           	lea rax, [rdx + rbx]
0x25e8e:   48 8d 14 43                           	lea rdx, [rbx + rax*2]
0x25e92:   48 c1 e2 05                           	shl rdx, 5
0x25e96:   48 81 c2 00 00 00 00                  	add rdx, 0
0x25e9d:   49 c7 c5 00 00 00 00                  	mov r13, 0
0x25ea4:   49 89 54 dd 00                        	mov qword ptr [r13 + rbx*8], rdx
0x25ea9:   4c 8d 24 c5 00 00 00 00               	lea r12, [rax*8]
0x25eb1:   4c 89 e7                              	mov rdi, r12
0x25eb4:   e8 07 fc ff ff                        	call 0x25ac0 <nmi_common_init>
0x25eb9:   49 8b 44 dd 00                        	mov rax, qword ptr [r13 + rbx*8]
0x25ebe:   4c 89 e7                              	mov rdi, r12
0x25ec1:   ff 10                                 	call qword ptr [rax]
0x25ec3:   85 c0                                 	test eax, eax
0x25ec5:   78 44                                 	js 0x25f0b
0x25ec7:   49 8b 44 dd 00                        	mov rax, qword ptr [r13 + rbx*8]
0x25ecc:   be 01 00 00 00                        	mov esi, 1
0x25ed1:   4c 89 e7                              	mov rdi, r12
0x25ed4:   ff 90 28 01 00 00                     	call qword ptr [rax + 0x128]
0x25eda:   49 8b 44 dd 00                        	mov rax, qword ptr [r13 + rbx*8]
0x25edf:   4c 89 e7                              	mov rdi, r12
0x25ee2:   ff 50 08                              	call qword ptr [rax + 8]
0x25ee5:   89 c6                                 	mov esi, eax
0x25ee7:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x25eee:   b8 00 00 00 00                        	mov eax, 0
; data inside code section at 0x25ef3 -- 0x25ef7
0x25ef3:   e8 a7 54 00                                        |..T.            |
; function: Japan4x4Tuner_TunerInitialization at 0x25ef7 -- 0x25f27
0x25ef7:   00 48 c7                              	add byte ptr [rax - 0x39], cl
0x25efa:   c7 00 00 00 00 e8                     	mov dword ptr [rax], 0xe8000000
0x25f00:   90                                    	nop 
0x25f01:   54                                    	push rsp
0x25f02:   00 00                                 	add byte ptr [rax], al
0x25f04:   b8 01 00 00 00                        	mov eax, 1
0x25f09:   eb 11                                 	jmp 0x25f1c <Japan4x4Tuner_TunerInitialization+0x25>
0x25f0b:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x25f12:   e8 7d 54 00 00                        	call 0x2b394 <DriverDebugMessage>
0x25f17:   b8 00 00 00 00                        	mov eax, 0
0x25f1c:   48 83 c4 08                           	add rsp, 8
0x25f20:   5b                                    	pop rbx
0x25f21:   41 5c                                 	pop r12
0x25f23:   41 5d                                 	pop r13
0x25f25:   c9                                    	leave 
0x25f26:   c3                                    	ret 
; function: Japan4x4Tuner_TunerInitialization at 0x25f27 -- 0x2613e
0x25f27:   55                                    	push rbp
0x25f28:   48 89 e5                              	mov rbp, rsp
0x25f2b:   41 55                                 	push r13
0x25f2d:   41 54                                 	push r12
0x25f2f:   53                                    	push rbx
0x25f30:   48 83 ec 08                           	sub rsp, 8
0x25f34:   e8 b7 8c 01 00                        	call 0x3ebf0 <mcount>
0x25f39:   48 89 fb                              	mov rbx, rdi
0x25f3c:   49 89 f4                              	mov r12, rsi
0x25f3f:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x25f46:   e8 49 54 00 00                        	call 0x2b394 <DriverDebugMessage>
0x25f4b:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x25f52:   e8 3d 54 00 00                        	call 0x2b394 <DriverDebugMessage>
0x25f57:   48 89 de                              	mov rsi, rbx
0x25f5a:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x25f61:   b8 00 00 00 00                        	mov eax, 0
0x25f66:   e8 34 54 00 00                        	call 0x2b39f <DriverDebugPrint>
0x25f6b:   48 83 fb 7f                           	cmp rbx, 0x7f
0x25f6f:   0f 86 91 01 00 00                     	jbe 0x26106 <Japan4x4Tuner_TunerInitialization+0x1df>
0x25f75:   48 81 fb 80 00 00 00                  	cmp rbx, 0x80
0x25f7c:   74 69                                 	je 0x25fe7 <Japan4x4Tuner_TunerInitialization+0xc0>
0x25f7e:   41 bd 08 00 00 00                     	mov r13d, 8
0x25f84:   48 81 fb 90 00 00 00                  	cmp rbx, 0x90
0x25f8b:   74 60                                 	je 0x25fed <Japan4x4Tuner_TunerInitialization+0xc6>
0x25f8d:   41 bd 10 00 00 00                     	mov r13d, 0x10
0x25f93:   48 81 fb a0 00 00 00                  	cmp rbx, 0xa0
0x25f9a:   74 51                                 	je 0x25fed <Japan4x4Tuner_TunerInitialization+0xc6>
0x25f9c:   41 bd 18 00 00 00                     	mov r13d, 0x18
0x25fa2:   48 81 fb b0 00 00 00                  	cmp rbx, 0xb0
0x25fa9:   74 42                                 	je 0x25fed <Japan4x4Tuner_TunerInitialization+0xc6>
0x25fab:   41 bd 20 00 00 00                     	mov r13d, 0x20
0x25fb1:   48 81 fb c0 00 00 00                  	cmp rbx, 0xc0
0x25fb8:   74 33                                 	je 0x25fed <Japan4x4Tuner_TunerInitialization+0xc6>
0x25fba:   41 bd 28 00 00 00                     	mov r13d, 0x28
0x25fc0:   48 81 fb d0 00 00 00                  	cmp rbx, 0xd0
0x25fc7:   74 24                                 	je 0x25fed <Japan4x4Tuner_TunerInitialization+0xc6>
0x25fc9:   41 bd 30 00 00 00                     	mov r13d, 0x30
0x25fcf:   48 81 fb e0 00 00 00                  	cmp rbx, 0xe0
0x25fd6:   74 15                                 	je 0x25fed <Japan4x4Tuner_TunerInitialization+0xc6>
0x25fd8:   41 bd 38 00 00 00                     	mov r13d, 0x38
0x25fde:   48 81 fb f0 00 00 00                  	cmp rbx, 0xf0
0x25fe5:   74 06                                 	je 0x25fed <Japan4x4Tuner_TunerInitialization+0xc6>
0x25fe7:   41 bd 00 00 00 00                     	mov r13d, 0
0x25fed:   41 0f b6 dd                           	movzx ebx, r13b
0x25ff1:   ba 01 00 00 00                        	mov edx, 1
0x25ff6:   48 89 de                              	mov rsi, rbx
0x25ff9:   4c 89 e7                              	mov rdi, r12
0x25ffc:   e8 90 e7 ff ff                        	call 0x24791 <TC90522_Initialization>
0x26001:   48 89 de                              	mov rsi, rbx
0x26004:   4c 89 e7                              	mov rdi, r12
0x26007:   e8 8e fd ff ff                        	call 0x25d9a <NMI131_Initialization>
0x2600c:   45 0f b6 ed                           	movzx r13d, r13b
0x26010:   41 8d 5d 01                           	lea ebx, [r13 + 1]
0x26014:   48 63 db                              	movsxd rbx, ebx
0x26017:   ba 01 00 00 00                        	mov edx, 1
0x2601c:   48 89 de                              	mov rsi, rbx
0x2601f:   4c 89 e7                              	mov rdi, r12
0x26022:   e8 6a e7 ff ff                        	call 0x24791 <TC90522_Initialization>
0x26027:   48 89 de                              	mov rsi, rbx
0x2602a:   4c 89 e7                              	mov rdi, r12
0x2602d:   e8 af e0 ff ff                        	call 0x240e1 <TDA2014x_TunerInitialization>
0x26032:   41 8d 5d 02                           	lea ebx, [r13 + 2]
0x26036:   48 63 db                              	movsxd rbx, ebx
0x26039:   ba 01 00 00 00                        	mov edx, 1
0x2603e:   48 89 de                              	mov rsi, rbx
0x26041:   4c 89 e7                              	mov rdi, r12
0x26044:   e8 48 e7 ff ff                        	call 0x24791 <TC90522_Initialization>
0x26049:   48 89 de                              	mov rsi, rbx
0x2604c:   4c 89 e7                              	mov rdi, r12
0x2604f:   e8 46 fd ff ff                        	call 0x25d9a <NMI131_Initialization>
0x26054:   41 8d 5d 03                           	lea ebx, [r13 + 3]
0x26058:   48 63 db                              	movsxd rbx, ebx
0x2605b:   ba 01 00 00 00                        	mov edx, 1
0x26060:   48 89 de                              	mov rsi, rbx
0x26063:   4c 89 e7                              	mov rdi, r12
0x26066:   e8 26 e7 ff ff                        	call 0x24791 <TC90522_Initialization>
0x2606b:   48 89 de                              	mov rsi, rbx
0x2606e:   4c 89 e7                              	mov rdi, r12
0x26071:   e8 6b e0 ff ff                        	call 0x240e1 <TDA2014x_TunerInitialization>
0x26076:   41 8d 5d 04                           	lea ebx, [r13 + 4]
0x2607a:   48 63 db                              	movsxd rbx, ebx
0x2607d:   ba 01 00 00 00                        	mov edx, 1
0x26082:   48 89 de                              	mov rsi, rbx
0x26085:   4c 89 e7                              	mov rdi, r12
0x26088:   e8 04 e7 ff ff                        	call 0x24791 <TC90522_Initialization>
0x2608d:   48 89 de                              	mov rsi, rbx
0x26090:   4c 89 e7                              	mov rdi, r12
0x26093:   e8 02 fd ff ff                        	call 0x25d9a <NMI131_Initialization>
0x26098:   41 8d 5d 05                           	lea ebx, [r13 + 5]
0x2609c:   48 63 db                              	movsxd rbx, ebx
0x2609f:   ba 01 00 00 00                        	mov edx, 1
0x260a4:   48 89 de                              	mov rsi, rbx
0x260a7:   4c 89 e7                              	mov rdi, r12
0x260aa:   e8 e2 e6 ff ff                        	call 0x24791 <TC90522_Initialization>
0x260af:   48 89 de                              	mov rsi, rbx
0x260b2:   4c 89 e7                              	mov rdi, r12
0x260b5:   e8 27 e0 ff ff                        	call 0x240e1 <TDA2014x_TunerInitialization>
0x260ba:   41 8d 5d 06                           	lea ebx, [r13 + 6]
0x260be:   48 63 db                              	movsxd rbx, ebx
0x260c1:   ba 01 00 00 00                        	mov edx, 1
0x260c6:   48 89 de                              	mov rsi, rbx
0x260c9:   4c 89 e7                              	mov rdi, r12
0x260cc:   e8 c0 e6 ff ff                        	call 0x24791 <TC90522_Initialization>
0x260d1:   48 89 de                              	mov rsi, rbx
0x260d4:   4c 89 e7                              	mov rdi, r12
0x260d7:   e8 be fc ff ff                        	call 0x25d9a <NMI131_Initialization>
0x260dc:   41 8d 5d 07                           	lea ebx, [r13 + 7]
0x260e0:   48 63 db                              	movsxd rbx, ebx
0x260e3:   ba 01 00 00 00                        	mov edx, 1
0x260e8:   48 89 de                              	mov rsi, rbx
0x260eb:   4c 89 e7                              	mov rdi, r12
0x260ee:   e8 9e e6 ff ff                        	call 0x24791 <TC90522_Initialization>
0x260f3:   48 89 de                              	mov rsi, rbx
0x260f6:   4c 89 e7                              	mov rdi, r12
0x260f9:   e8 e3 df ff ff                        	call 0x240e1 <TDA2014x_TunerInitialization>
0x260fe:   41 bd 01 00 00 00                     	mov r13d, 1
0x26104:   eb 46                                 	jmp 0x2614c
0x26106:   41 bd 00 00 00 00                     	mov r13d, 0
0x2610c:   48 83 fb 3f                           	cmp rbx, 0x3f
0x26110:   77 3a                                 	ja 0x2614c
0x26112:   ba 00 00 00 00                        	mov edx, 0
0x26117:   48 89 de                              	mov rsi, rbx
0x2611a:   4c 89 e7                              	mov rdi, r12
0x2611d:   e8 6f e6 ff ff                        	call 0x24791 <TC90522_Initialization>
0x26122:   41 89 c5                              	mov r13d, eax
0x26125:   84 c0                                 	test al, al
0x26127:   74 23                                 	je 0x2614c
0x26129:   f6 c3 01                              	test bl, 1
0x2612c:   75 10                                 	jne 0x2613e <Japan4x4Tuner_TunerInitialization+0x215>
0x2612e:   48 89 de                              	mov rsi, rbx
0x26131:   4c 89 e7                              	mov rdi, r12
0x26134:   e8 61 fc ff ff                        	call 0x25d9a <NMI131_Initialization>
0x26139:   41 89 c5                              	mov r13d, eax
0x2613c:   eb 0e                                 	jmp 0x2614c
; data inside code section at 0x2613e -- 0x2613f
0x2613e:   48                                                 |H               |
; function: nmi_debug at 0x2613f -- 0x2616f
0x2613f:   89 de                                 	mov esi, ebx
0x26141:   4c 89 e7                              	mov rdi, r12
0x26144:   e8 98 df ff ff                        	call 0x240e1 <TDA2014x_TunerInitialization>
0x26149:   41 89 c5                              	mov r13d, eax
0x2614c:   41 0f b6 f5                           	movzx esi, r13b
0x26150:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x26157:   b8 00 00 00 00                        	mov eax, 0
0x2615c:   e8 3e 52 00 00                        	call 0x2b39f <DriverDebugPrint>
0x26161:   44 89 e8                              	mov eax, r13d
0x26164:   48 83 c4 08                           	add rsp, 8
0x26168:   5b                                    	pop rbx
0x26169:   41 5c                                 	pop r12
0x2616b:   41 5d                                 	pop r13
0x2616d:   c9                                    	leave 
0x2616e:   c3                                    	ret 
; function: nmi_debug at 0x2616f -- 0x26205
0x2616f:   55                                    	push rbp
0x26170:   48 89 e5                              	mov rbp, rsp
0x26173:   53                                    	push rbx
0x26174:   48 81 ec 68 01 00 00                  	sub rsp, 0x168
0x2617b:   e8 70 8a 01 00                        	call 0x3ebf0 <mcount>
0x26180:   48 89 fb                              	mov rbx, rdi
0x26183:   48 89 4d d8                           	mov qword ptr [rbp - 0x28], rcx
0x26187:   4c 89 45 e0                           	mov qword ptr [rbp - 0x20], r8
0x2618b:   4c 89 4d e8                           	mov qword ptr [rbp - 0x18], r9
0x2618f:   48 89 d0                              	mov rax, rdx
0x26192:   65 48 8b 14 25 28 00 00 00            	mov rdx, qword ptr gs:[0x28]
0x2619b:   48 89 55 b8                           	mov qword ptr [rbp - 0x48], rdx
0x2619f:   31 d2                                 	xor edx, edx
0x261a1:   0f b6 17                              	movzx edx, byte ptr [rdi]
0x261a4:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x261ab:   85 b2 00 00 00 00                     	test dword ptr [rdx], esi
0x261b1:   74 67                                 	je 0x2621a
0x261b3:   48 8d 95 90 fe ff ff                  	lea rdx, [rbp - 0x170]
0x261ba:   c7 02 18 00 00 00                     	mov dword ptr [rdx], 0x18
0x261c0:   48 8d 4d 10                           	lea rcx, [rbp + 0x10]
0x261c4:   48 89 4a 08                           	mov qword ptr [rdx + 8], rcx
0x261c8:   48 8d 4d c0                           	lea rcx, [rbp - 0x40]
0x261cc:   48 89 4a 10                           	mov qword ptr [rdx + 0x10], rcx
0x261d0:   48 8d bd b0 fe ff ff                  	lea rdi, [rbp - 0x150]
0x261d7:   c7 07 5b 4e 6d 69                     	mov dword ptr [rdi], 0x696d4e5b
0x261dd:   c7 47 04 20 41 73 69                  	mov dword ptr [rdi + 4], 0x69734120
0x261e4:   c7 47 08 63 5d 3a 20                  	mov dword ptr [rdi + 8], 0x203a5d63
0x261eb:   c6 47 0c 00                           	mov byte ptr [rdi + 0xc], 0
0x261ef:   48 83 c7 0c                           	add rdi, 0xc ; "GNU"
0x261f3:   48 89 c6                              	mov rsi, rax
0x261f6:   e8 1d 89 01 00                        	call 0x3eb18 <vsprintf>
0x261fb:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x261fe:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
; data inside code section at 0x26205 -- 0x26208
0x26205:   48 8b 80                                           |H..             |
; function: wReg8 at 0x26208 -- 0x26238
0x26208:   00 00                                 	add byte ptr [rax], al
0x2620a:   00 00                                 	add byte ptr [rax], al
0x2620c:   48 85 c0                              	test rax, rax
0x2620f:   74 09                                 	je 0x2621a <wReg8+0x12>
0x26211:   48 8d bd b0 fe ff ff                  	lea rdi, [rbp - 0x150]
0x26218:   ff d0                                 	call rax
0x2621a:   48 8b 45 b8                           	mov rax, qword ptr [rbp - 0x48]
0x2621e:   65 48 33 04 25 28 00 00 00            	xor rax, qword ptr gs:[0x28]
0x26227:   74 05                                 	je 0x2622e <wReg8+0x26>
0x26229:   e8 7a 89 01 00                        	call 0x3eba8 <__stack_chk_fail>
0x2622e:   48 81 c4 68 01 00 00                  	add rsp, 0x168
0x26235:   5b                                    	pop rbx
0x26236:   c9                                    	leave 
0x26237:   c3                                    	ret 
; function: wReg8 at 0x26238 -- 0x263a7
0x26238:   55                                    	push rbp
0x26239:   48 89 e5                              	mov rbp, rsp
0x2623c:   53                                    	push rbx
0x2623d:   48 83 ec 18                           	sub rsp, 0x18
0x26241:   e8 aa 89 01 00                        	call 0x3ebf0 <mcount>
0x26246:   48 89 fb                              	mov rbx, rdi
0x26249:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x2624c:   48 63 c8                              	movsxd rcx, eax
0x2624f:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x26256:   48 83 b9 00 00 00 00 00               	cmp qword ptr [rcx], 0
0x2625e:   74 27                                 	je 0x26287 <wReg8+0x4f>
0x26260:   48 63 c8                              	movsxd rcx, eax
0x26263:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x2626a:   48 83 b9 00 00 00 00 00               	cmp qword ptr [rcx], 0
0x26272:   74 13                                 	je 0x26287 <wReg8+0x4f>
0x26274:   48 63 c8                              	movsxd rcx, eax
0x26277:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x2627e:   80 b9 00 00 00 00 00                  	cmp byte ptr [rcx], 0
0x26285:   74 1e                                 	je 0x262a5 <wReg8+0x6d>
0x26287:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2628e:   be 02 00 00 00                        	mov esi, 2
0x26293:   48 89 df                              	mov rdi, rbx
0x26296:   b8 00 00 00 00                        	mov eax, 0
0x2629b:   e8 cf fe ff ff                        	call 0x2616f <nmi_debug>
0x262a0:   e9 2c 01 00 00                        	jmp 0x263d1
0x262a5:   40 80 fe 36                           	cmp sil, 0x36
0x262a9:   75 20                                 	jne 0x262cb <wReg8+0x93>
0x262ab:   48 98                                 	cdqe 
0x262ad:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x262b4:   89 d1                                 	mov ecx, edx
0x262b6:   83 c9 80                              	or ecx, 0xffffff80
0x262b9:   83 e2 7f                              	and edx, 0x7f
0x262bc:   83 b8 00 00 00 00 00                  	cmp dword ptr [rax], 0
0x262c3:   0f 45 d1                              	cmovne edx, ecx
0x262c6:   e9 a9 00 00 00                        	jmp 0x26374 <wReg8+0x13c>
0x262cb:   40 84 f6                              	test sil, sil
0x262ce:   75 22                                 	jne 0x262f2 <wReg8+0xba>
0x262d0:   48 63 c8                              	movsxd rcx, eax
0x262d3:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x262da:   80 b9 00 00 00 00 00                  	cmp byte ptr [rcx], 0
0x262e1:   0f 85 8d 00 00 00                     	jne 0x26374 <wReg8+0x13c>
0x262e7:   88 91 00 00 00 00                     	mov byte ptr [rcx], dl
0x262ed:   e9 82 00 00 00                        	jmp 0x26374 <wReg8+0x13c>
0x262f2:   40 80 fe 34                           	cmp sil, 0x34
0x262f6:   75 1b                                 	jne 0x26313 <wReg8+0xdb>
0x262f8:   48 63 c8                              	movsxd rcx, eax
0x262fb:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x26302:   80 b9 00 00 00 00 00                  	cmp byte ptr [rcx], 0
0x26309:   75 69                                 	jne 0x26374 <wReg8+0x13c>
0x2630b:   88 91 00 00 00 00                     	mov byte ptr [rcx], dl
0x26311:   eb 61                                 	jmp 0x26374 <wReg8+0x13c>
0x26313:   40 80 fe 35                           	cmp sil, 0x35
0x26317:   75 1b                                 	jne 0x26334 <wReg8+0xfc>
0x26319:   48 63 c8                              	movsxd rcx, eax
0x2631c:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x26323:   80 b9 00 00 00 00 00                  	cmp byte ptr [rcx], 0
0x2632a:   75 48                                 	jne 0x26374 <wReg8+0x13c>
0x2632c:   88 91 00 00 00 00                     	mov byte ptr [rcx], dl
0x26332:   eb 40                                 	jmp 0x26374 <wReg8+0x13c>
0x26334:   40 80 fe 05                           	cmp sil, 5
0x26338:   75 1b                                 	jne 0x26355 <wReg8+0x11d>
0x2633a:   48 63 c8                              	movsxd rcx, eax
0x2633d:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x26344:   80 b9 00 00 00 00 00                  	cmp byte ptr [rcx], 0
0x2634b:   75 27                                 	jne 0x26374 <wReg8+0x13c>
0x2634d:   88 91 00 00 00 00                     	mov byte ptr [rcx], dl
0x26353:   eb 1f                                 	jmp 0x26374 <wReg8+0x13c>
0x26355:   40 80 fe 0a                           	cmp sil, 0xa
0x26359:   75 19                                 	jne 0x26374 <wReg8+0x13c>
0x2635b:   48 63 c8                              	movsxd rcx, eax
0x2635e:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x26365:   80 b9 00 00 00 00 00                  	cmp byte ptr [rcx], 0
0x2636c:   75 06                                 	jne 0x26374 <wReg8+0x13c>
0x2636e:   88 91 00 00 00 00                     	mov byte ptr [rcx], dl
0x26374:   c6 45 e0 00                           	mov byte ptr [rbp - 0x20], 0
0x26378:   40 88 75 e1                           	mov byte ptr [rbp - 0x1f], sil
0x2637c:   88 55 e2                              	mov byte ptr [rbp - 0x1e], dl
0x2637f:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x26382:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x26389:   48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x2638d:   0f b6 b0 00 00 00 00                  	movzx esi, byte ptr [rax]
0x26394:   48 8b 7b 08                           	mov rdi, qword ptr [rbx + 8]
0x26398:   b9 03 00 00 00                        	mov ecx, 3
0x2639d:   ff 90 00 00 00 00                     	call qword ptr [rax]
0x263a3:   85 c0                                 	test eax, eax
0x263a5:   79 2a                                 	jns 0x263d1
; data inside code section at 0x263a7 -- 0x263a8
0x263a7:   48                                                 |H               |
; function: nm131_lt_ctrl at 0x263a8 -- 0x263d8
0x263a8:   c7 c2 00 00 00 00                     	mov edx, 0
0x263ae:   be 02 00 00 00                        	mov esi, 2
0x263b3:   48 89 df                              	mov rdi, rbx
0x263b6:   b8 00 00 00 00                        	mov eax, 0
0x263bb:   e8 af fd ff ff                        	call 0x2616f <nmi_debug>
0x263c0:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x263c3:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x263ca:   c6 80 00 00 00 00 01                  	mov byte ptr [rax], 1
0x263d1:   48 83 c4 18                           	add rsp, 0x18
0x263d5:   5b                                    	pop rbx
0x263d6:   c9                                    	leave 
0x263d7:   c3                                    	ret 
; function: nm131_lt_ctrl at 0x263d8 -- 0x263fb
0x263d8:   55                                    	push rbp
0x263d9:   48 89 e5                              	mov rbp, rsp
0x263dc:   e8 0f 88 01 00                        	call 0x3ebf0 <mcount>
0x263e1:   40 84 f6                              	test sil, sil
0x263e4:   74 35                                 	je 0x2641b
0x263e6:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x263e9:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x263f0:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x263f6:   ba 00 00 00 00                        	mov edx, 0
; data inside code section at 0x263fb -- 0x263fc
0x263fb:   83                                                 |.               |
; function: nm131_set_video_amplitude at 0x263fc -- 0x2642c
0x263fc:   f8                                    	clc 
0x263fd:   03 77 09                              	add esi, dword ptr [rdi + 9]
0x26400:   89 c0                                 	mov eax, eax
0x26402:   0f b6 90 00 00 00 00                  	movzx edx, byte ptr [rax]
0x26409:   83 ca f8                              	or edx, 0xfffffff8
0x2640c:   0f b6 d2                              	movzx edx, dl
0x2640f:   be 0a 00 00 00                        	mov esi, 0xa
0x26414:   e8 1f fe ff ff                        	call 0x26238 <wReg8>
0x26419:   eb 0f                                 	jmp 0x2642a <nm131_set_video_amplitude+0x2e>
0x2641b:   ba eb 00 00 00                        	mov edx, 0xeb ; "%("
0x26420:   be 0a 00 00 00                        	mov esi, 0xa
0x26425:   e8 0e fe ff ff                        	call 0x26238 <wReg8>
0x2642a:   c9                                    	leave 
0x2642b:   c3                                    	ret 
; function: nm131_set_video_amplitude at 0x2642c -- 0x26593
0x2642c:   55                                    	push rbp
0x2642d:   48 89 e5                              	mov rbp, rsp
0x26430:   48 83 ec 20                           	sub rsp, 0x20
0x26434:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x26438:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x2643c:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x26440:   e8 ab 87 01 00                        	call 0x3ebf0 <mcount>
0x26445:   48 89 fb                              	mov rbx, rdi
0x26448:   41 89 f5                              	mov r13d, esi
0x2644b:   44 0f b6 27                           	movzx r12d, byte ptr [rdi]
0x2644f:   49 63 c4                              	movsxd rax, r12d
0x26452:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x26459:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x2645f:   83 f8 01                              	cmp eax, 1
0x26462:   77 45                                 	ja 0x264a9 <nm131_set_video_amplitude+0x7d>
0x26464:   40 80 fe 0f                           	cmp sil, 0xf
0x26468:   0f 87 47 01 00 00                     	ja 0x265b5
0x2646e:   49 63 c4                              	movsxd rax, r12d
0x26471:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x26478:   83 b8 00 00 00 00 0d                  	cmp dword ptr [rax], 0xd ; "NU"
0x2647f:   74 11                                 	je 0x26492 <nm131_set_video_amplitude+0x66>
0x26481:   89 f2                                 	mov edx, esi
0x26483:   f7 d2                                 	not edx
0x26485:   0f b6 d2                              	movzx edx, dl
0x26488:   be 34 00 00 00                        	mov esi, 0x34
0x2648d:   e8 a6 fd ff ff                        	call 0x26238 <wReg8>
0x26492:   4d 63 e4                              	movsxd r12, r12d
0x26495:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
0x2649c:   45 88 ac 24 00 00 00 00               	mov byte ptr [r12], r13b
0x264a4:   e9 0c 01 00 00                        	jmp 0x265b5
0x264a9:   83 f8 02                              	cmp eax, 2
0x264ac:   0f 85 03 01 00 00                     	jne 0x265b5
0x264b2:   49 63 c4                              	movsxd rax, r12d
0x264b5:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x264bc:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x264c2:   83 f8 06                              	cmp eax, 6
0x264c5:   0f 84 ea 00 00 00                     	je 0x265b5
0x264cb:   83 f8 08                              	cmp eax, 8
0x264ce:   0f 84 e1 00 00 00                     	je 0x265b5
0x264d4:   83 f8 0c                              	cmp eax, 0xc ; "GNU"
0x264d7:   0f 84 d8 00 00 00                     	je 0x265b5
0x264dd:   83 f8 0e                              	cmp eax, 0xe
0x264e0:   0f 84 cf 00 00 00                     	je 0x265b5
0x264e6:   83 f8 0f                              	cmp eax, 0xf
0x264e9:   0f 84 c6 00 00 00                     	je 0x265b5
0x264ef:   83 f8 10                              	cmp eax, 0x10
0x264f2:   0f 84 bd 00 00 00                     	je 0x265b5
0x264f8:   83 f8 ff                              	cmp eax, -1
0x264fb:   0f 84 b4 00 00 00                     	je 0x265b5
0x26501:   49 63 c4                              	movsxd rax, r12d
0x26504:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2650b:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x26511:   89 c2                                 	mov edx, eax
0x26513:   81 e2 00 ff ff 00                     	and edx, 0xffff00
0x26519:   81 fa 00 30 81 00                     	cmp edx, 0x813000
0x2651f:   74 10                                 	je 0x26531 <nm131_set_video_amplitude+0x105>
0x26521:   25 00 ff 0f 00                        	and eax, 0xfff00
0x26526:   3d 00 31 01 00                        	cmp eax, 0x13100
0x2652b:   0f 85 84 00 00 00                     	jne 0x265b5
0x26531:   49 63 c4                              	movsxd rax, r12d
0x26534:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2653b:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x26541:   83 f8 01                              	cmp eax, 1
0x26544:   74 05                                 	je 0x2654b <nm131_set_video_amplitude+0x11f>
0x26546:   83 f8 03                              	cmp eax, 3
0x26549:   75 1e                                 	jne 0x26569 <nm131_set_video_amplitude+0x13d>
0x2654b:   41 80 fd 0f                           	cmp r13b, 0xf
0x2654f:   77 18                                 	ja 0x26569 <nm131_set_video_amplitude+0x13d>
0x26551:   ba 7f 00 00 00                        	mov edx, 0x7f
0x26556:   44 28 ea                              	sub dl, r13b
0x26559:   0f b6 d2                              	movzx edx, dl
0x2655c:   be 34 00 00 00                        	mov esi, 0x34
0x26561:   48 89 df                              	mov rdi, rbx
0x26564:   e8 cf fc ff ff                        	call 0x26238 <wReg8>
0x26569:   49 63 c4                              	movsxd rax, r12d
0x2656c:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x26573:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x26579:   8d 50 fe                              	lea edx, [rax - 2]
0x2657c:   83 fa 01                              	cmp edx, 1
0x2657f:   76 04                                 	jbe 0x26585 <nm131_set_video_amplitude+0x159>
0x26581:   85 c0                                 	test eax, eax
0x26583:   75 1e                                 	jne 0x265a3
0x26585:   41 80 fd 0f                           	cmp r13b, 0xf
0x26589:   77 18                                 	ja 0x265a3
0x2658b:   ba 5f 00 00 00                        	mov edx, 0x5f
0x26590:   44 28 ea                              	sub dl, r13b
; function: nm131_notch_set at 0x26593 -- 0x265ad
0x26593:   0f b6 d2                              	movzx edx, dl
0x26596:   be 35 00 00 00                        	mov esi, 0x35
0x2659b:   48 89 df                              	mov rdi, rbx
0x2659e:   e8 95 fc ff ff                        	call 0x26238 <wReg8>
0x265a3:   4d 63 e4                              	movsxd r12, r12d
0x265a6:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
; data inside code section at 0x265ad -- 0x265b4
0x265ad:   45 88 ac 24 00 00 00                               |E..$...         |
; function: rReg8 at 0x265b4 -- 0x265c3
0x265b4:   00 48 8b                              	add byte ptr [rax - 0x75], cl
0x265b7:   5d                                    	pop rbp
0x265b8:   e8 4c 8b 65 f0                        	call 0xfffffffff067f109 <unknown_fffffffff067f109>
0x265bd:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x265c1:   c9                                    	leave 
0x265c2:   c3                                    	ret 
; function: nm131_notch_set at 0x265c3 -- 0x265e4
0x265c3:   55                                    	push rbp
0x265c4:   48 89 e5                              	mov rbp, rsp
0x265c7:   e8 24 86 01 00                        	call 0x3ebf0 <mcount>
0x265cc:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x265d3:   be 02 00 00 00                        	mov esi, 2
0x265d8:   b8 00 00 00 00                        	mov eax, 0
0x265dd:   e8 8d fb ff ff                        	call 0x2616f <nmi_debug>
0x265e2:   c9                                    	leave 
0x265e3:   c3                                    	ret 
; function: rReg8 at 0x265e4 -- 0x266d5
0x265e4:   55                                    	push rbp
0x265e5:   48 89 e5                              	mov rbp, rsp
0x265e8:   53                                    	push rbx
0x265e9:   48 83 ec 18                           	sub rsp, 0x18
0x265ed:   e8 fe 85 01 00                        	call 0x3ebf0 <mcount>
0x265f2:   48 89 fb                              	mov rbx, rdi
0x265f5:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x265f8:   48 63 d0                              	movsxd rdx, eax
0x265fb:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x26602:   48 83 ba 00 00 00 00 00               	cmp qword ptr [rdx], 0
0x2660a:   74 1d                                 	je 0x26629 <rReg8+0x45>
0x2660c:   48 63 d0                              	movsxd rdx, eax
0x2660f:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x26616:   48 83 ba 00 00 00 00 00               	cmp qword ptr [rdx], 0
0x2661e:   74 09                                 	je 0x26629 <rReg8+0x45>
0x26620:   80 ba 00 00 00 00 00                  	cmp byte ptr [rdx], 0
0x26627:   74 23                                 	je 0x2664c <rReg8+0x68>
0x26629:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x26630:   be 02 00 00 00                        	mov esi, 2
0x26635:   48 89 df                              	mov rdi, rbx
0x26638:   b8 00 00 00 00                        	mov eax, 0
0x2663d:   e8 2d fb ff ff                        	call 0x2616f <nmi_debug>
0x26642:   b8 00 00 00 00                        	mov eax, 0
0x26647:   e9 b7 00 00 00                        	jmp 0x26703
0x2664c:   c6 45 e0 00                           	mov byte ptr [rbp - 0x20], 0
0x26650:   40 88 75 e1                           	mov byte ptr [rbp - 0x1f], sil
0x26654:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x26657:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2665e:   48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x26662:   0f b6 b0 00 00 00 00                  	movzx esi, byte ptr [rax]
0x26669:   48 8b 7f 08                           	mov rdi, qword ptr [rdi + 8]
0x2666d:   b9 02 00 00 00                        	mov ecx, 2
0x26672:   ff 90 00 00 00 00                     	call qword ptr [rax]
0x26678:   85 c0                                 	test eax, eax
0x2667a:   79 31                                 	jns 0x266ad <rReg8+0xc9>
0x2667c:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x26683:   be 02 00 00 00                        	mov esi, 2
0x26688:   48 89 df                              	mov rdi, rbx
0x2668b:   b8 00 00 00 00                        	mov eax, 0
0x26690:   e8 da fa ff ff                        	call 0x2616f <nmi_debug>
0x26695:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x26698:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2669f:   c6 80 00 00 00 00 01                  	mov byte ptr [rax], 1
0x266a6:   b8 00 00 00 00                        	mov eax, 0
0x266ab:   eb 56                                 	jmp 0x26703
0x266ad:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x266b0:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x266b7:   48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x266bb:   0f b6 b0 00 00 00 00                  	movzx esi, byte ptr [rax]
0x266c2:   48 8b 7b 08                           	mov rdi, qword ptr [rbx + 8]
0x266c6:   b9 01 00 00 00                        	mov ecx, 1
0x266cb:   ff 90 00 00 00 00                     	call qword ptr [rax]
0x266d1:   85 c0                                 	test eax, eax
0x266d3:   79 2a                                 	jns 0x266ff
; data inside code section at 0x266d5 -- 0x266d7
0x266d5:   48 c7                                              |H.              |
; function: function_266d7 at 0x266d7 -- 0x266da
0x266d7:   c2 00 00                              	ret 0
; function: nm120_rfli_ctrl at 0x266da -- 0x2670a
0x266da:   00 00                                 	add byte ptr [rax], al
0x266dc:   be 02 00 00 00                        	mov esi, 2
0x266e1:   48 89 df                              	mov rdi, rbx
0x266e4:   b8 00 00 00 00                        	mov eax, 0
0x266e9:   e8 81 fa ff ff                        	call 0x2616f <nmi_debug>
0x266ee:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x266f1:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x266f8:   c6 80 00 00 00 00 01                  	mov byte ptr [rax], 1
0x266ff:   0f b6 45 e0                           	movzx eax, byte ptr [rbp - 0x20]
0x26703:   48 83 c4 18                           	add rsp, 0x18
0x26707:   5b                                    	pop rbx
0x26708:   c9                                    	leave 
0x26709:   c3                                    	ret 
; function: nm120_rfli_ctrl at 0x2670a -- 0x26846
0x2670a:   55                                    	push rbp
0x2670b:   48 89 e5                              	mov rbp, rsp
0x2670e:   48 83 ec 30                           	sub rsp, 0x30
0x26712:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x26716:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x2671a:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x2671e:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x26722:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x26726:   e8 c5 84 01 00                        	call 0x3ebf0 <mcount>
0x2672b:   49 89 fc                              	mov r12, rdi
0x2672e:   41 89 f5                              	mov r13d, esi
0x26731:   0f b6 1f                              	movzx ebx, byte ptr [rdi]
0x26734:   40 84 f6                              	test sil, sil
0x26737:   74 2e                                 	je 0x26767 <nm120_rfli_ctrl+0x5d>
0x26739:   be 2b 00 00 00                        	mov esi, 0x2b
0x2673e:   e8 a1 fe ff ff                        	call 0x265e4 <rReg8>
0x26743:   48 63 d3                              	movsxd rdx, ebx
0x26746:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x2674d:   88 82 00 00 00 00                     	mov byte ptr [rdx], al
0x26753:   ba 2a 00 00 00                        	mov edx, 0x2a
0x26758:   be 2b 00 00 00                        	mov esi, 0x2b
0x2675d:   4c 89 e7                              	mov rdi, r12
0x26760:   e8 d3 fa ff ff                        	call 0x26238 <wReg8>
0x26765:   eb 1b                                 	jmp 0x26782 <nm120_rfli_ctrl+0x78>
0x26767:   48 63 c3                              	movsxd rax, ebx
0x2676a:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x26771:   0f b6 90 00 00 00 00                  	movzx edx, byte ptr [rax]
0x26778:   be 2b 00 00 00                        	mov esi, 0x2b
0x2677d:   e8 b6 fa ff ff                        	call 0x26238 <wReg8>
0x26782:   48 63 c3                              	movsxd rax, ebx
0x26785:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2678c:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x26792:   25 00 ff 0f 00                        	and eax, 0xfff00
0x26797:   3d 00 20 01 00                        	cmp eax, 0x12000
0x2679c:   0f 85 b1 00 00 00                     	jne 0x26853
0x267a2:   48 63 c3                              	movsxd rax, ebx
0x267a5:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x267ac:   81 b8 00 00 00 00 ff a2 e1 11         	cmp dword ptr [rax], 0x11e1a2ff
0x267b6:   0f 86 97 00 00 00                     	jbe 0x26853
0x267bc:   45 84 ed                              	test r13b, r13b
0x267bf:   74 5b                                 	je 0x2681c <nm120_rfli_ctrl+0x112>
0x267c1:   be 25 00 00 00                        	mov esi, 0x25
0x267c6:   4c 89 e7                              	mov rdi, r12
0x267c9:   e8 16 fe ff ff                        	call 0x265e4 <rReg8>
0x267ce:   4c 63 f3                              	movsxd r14, ebx
0x267d1:   49 c7 c7 00 00 00 00                  	mov r15, 0
0x267d8:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x267df:   43 88 44 3e 0b                        	mov byte ptr [r14 + r15 + 0xb], al
0x267e4:   be 29 00 00 00                        	mov esi, 0x29
0x267e9:   4c 89 e7                              	mov rdi, r12
0x267ec:   e8 f3 fd ff ff                        	call 0x265e4 <rReg8>
0x267f1:   43 88 44 3e 0c                        	mov byte ptr [r14 + r15 + 0xc], al
0x267f6:   ba fa 00 00 00                        	mov edx, 0xfa
0x267fb:   be 25 00 00 00                        	mov esi, 0x25
0x26800:   4c 89 e7                              	mov rdi, r12
0x26803:   e8 30 fa ff ff                        	call 0x26238 <wReg8>
0x26808:   ba ef 00 00 00                        	mov edx, 0xef
0x2680d:   be 29 00 00 00                        	mov esi, 0x29
0x26812:   4c 89 e7                              	mov rdi, r12
0x26815:   e8 1e fa ff ff                        	call 0x26238 <wReg8>
0x2681a:   eb 37                                 	jmp 0x26853
0x2681c:   4c 63 f3                              	movsxd r14, ebx
0x2681f:   49 c7 c7 00 00 00 00                  	mov r15, 0
0x26826:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x2682d:   43 0f b6 54 3e 0b                     	movzx edx, byte ptr [r14 + r15 + 0xb]
0x26833:   be 25 00 00 00                        	mov esi, 0x25
0x26838:   4c 89 e7                              	mov rdi, r12
0x2683b:   e8 f8 f9 ff ff                        	call 0x26238 <wReg8>
0x26840:   43 0f b6 54 3e 0c                     	movzx edx, byte ptr [r14 + r15 + 0xc]
; data inside code section at 0x26846 -- 0x2684a
0x26846:   be 29 00 00                                        |.)..            |
; function: nm131_set_lna_gain2 at 0x2684a -- 0x2687a
0x2684a:   00 4c 89 e7                           	add byte ptr [rcx + rcx*4 - 0x19], cl
0x2684e:   e8 e5 f9 ff ff                        	call 0x26238 <wReg8>
0x26853:   48 63 db                              	movsxd rbx, ebx
0x26856:   48 69 db b8 00 00 00                  	imul rbx, rbx, 0xb8
0x2685d:   44 88 ab 00 00 00 00                  	mov byte ptr [rbx], r13b
0x26864:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x26868:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x2686c:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x26870:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x26874:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x26878:   c9                                    	leave 
0x26879:   c3                                    	ret 
; function: nm131_set_lna_gain2 at 0x2687a -- 0x2689b
0x2687a:   55                                    	push rbp
0x2687b:   48 89 e5                              	mov rbp, rsp
0x2687e:   48 83 ec 10                           	sub rsp, 0x10
0x26882:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x26886:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x2688b:   e8 60 83 01 00                        	call 0x3ebf0 <mcount>
0x26890:   48 89 fb                              	mov rbx, rdi
0x26893:   41 89 f4                              	mov r12d, esi
0x26896:   be 2b 00 00 00                        	mov esi, 0x2b
; function: nm131_get_video_amplitude at 0x2689b -- 0x268cb
0x2689b:   e8 44 fd ff ff                        	call 0x265e4 <rReg8>
0x268a0:   89 c2                                 	mov edx, eax
0x268a2:   83 e2 60                              	and edx, 0x60
0x268a5:   83 ca 20                              	or edx, 0x20
0x268a8:   41 83 e4 1f                           	and r12d, 0x1f
0x268ac:   41 09 d4                              	or r12d, edx
0x268af:   41 0f b6 d4                           	movzx edx, r12b
0x268b3:   be 2b 00 00 00                        	mov esi, 0x2b
0x268b8:   48 89 df                              	mov rdi, rbx
0x268bb:   e8 78 f9 ff ff                        	call 0x26238 <wReg8>
0x268c0:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x268c4:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x268c9:   c9                                    	leave 
0x268ca:   c3                                    	ret 
; function: nm131_get_video_amplitude at 0x268cb -- 0x26a30
0x268cb:   55                                    	push rbp
0x268cc:   48 89 e5                              	mov rbp, rsp
0x268cf:   e8 1c 83 01 00                        	call 0x3ebf0 <mcount>
0x268d4:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x268d7:   48 63 d0                              	movsxd rdx, eax
0x268da:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x268e1:   8b 92 00 00 00 00                     	mov edx, dword ptr [rdx]
0x268e7:   83 fa 01                              	cmp edx, 1
0x268ea:   77 44                                 	ja 0x26930 <nm131_get_video_amplitude+0x65>
0x268ec:   48 63 d0                              	movsxd rdx, eax
0x268ef:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x268f6:   83 ba 00 00 00 00 0d                  	cmp dword ptr [rdx], 0xd ; "NU"
0x268fd:   74 1c                                 	je 0x2691b <nm131_get_video_amplitude+0x50>
0x268ff:   be 34 00 00 00                        	mov esi, 0x34
0x26904:   e8 db fc ff ff                        	call 0x265e4 <rReg8>
0x26909:   89 c2                                 	mov edx, eax
0x2690b:   f7 d0                                 	not eax
0x2690d:   80 fa ef                              	cmp dl, 0xef
0x26910:   0f 87 49 01 00 00                     	ja 0x26a5f
0x26916:   e9 3f 01 00 00                        	jmp 0x26a5a
0x2691b:   48 98                                 	cdqe 
0x2691d:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x26924:   0f b6 80 00 00 00 00                  	movzx eax, byte ptr [rax]
0x2692b:   e9 2f 01 00 00                        	jmp 0x26a5f
0x26930:   83 fa 02                              	cmp edx, 2
0x26933:   0f 85 21 01 00 00                     	jne 0x26a5a
0x26939:   48 63 d0                              	movsxd rdx, eax
0x2693c:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x26943:   8b 92 00 00 00 00                     	mov edx, dword ptr [rdx]
0x26949:   83 fa 06                              	cmp edx, 6
0x2694c:   0f 84 08 01 00 00                     	je 0x26a5a
0x26952:   83 fa 08                              	cmp edx, 8
0x26955:   0f 84 ff 00 00 00                     	je 0x26a5a
0x2695b:   83 fa 0c                              	cmp edx, 0xc ; "GNU"
0x2695e:   0f 84 f6 00 00 00                     	je 0x26a5a
0x26964:   83 fa 0e                              	cmp edx, 0xe
0x26967:   0f 84 ed 00 00 00                     	je 0x26a5a
0x2696d:   83 fa 0f                              	cmp edx, 0xf
0x26970:   0f 84 e4 00 00 00                     	je 0x26a5a
0x26976:   83 fa 10                              	cmp edx, 0x10
0x26979:   0f 84 db 00 00 00                     	je 0x26a5a
0x2697f:   83 fa ff                              	cmp edx, -1
0x26982:   0f 84 d2 00 00 00                     	je 0x26a5a
0x26988:   48 63 c8                              	movsxd rcx, eax
0x2698b:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x26992:   8b 89 00 00 00 00                     	mov ecx, dword ptr [rcx]
0x26998:   89 ce                                 	mov esi, ecx
0x2699a:   81 e6 00 ff ff 00                     	and esi, 0xffff00
0x269a0:   81 fe 00 30 81 00                     	cmp esi, 0x813000
0x269a6:   74 12                                 	je 0x269ba <nm131_get_video_amplitude+0xef>
0x269a8:   81 e1 00 ff 0f 00                     	and ecx, 0xfff00
0x269ae:   81 f9 00 31 01 00                     	cmp ecx, 0x13100
0x269b4:   0f 85 8a 00 00 00                     	jne 0x26a44
0x269ba:   48 63 c8                              	movsxd rcx, eax
0x269bd:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x269c4:   8b 89 00 00 00 00                     	mov ecx, dword ptr [rcx]
0x269ca:   83 f9 01                              	cmp ecx, 1
0x269cd:   74 05                                 	je 0x269d4 <nm131_get_video_amplitude+0x109>
0x269cf:   83 f9 03                              	cmp ecx, 3
0x269d2:   75 34                                 	jne 0x26a08 <nm131_get_video_amplitude+0x13d>
0x269d4:   83 fa 0d                              	cmp edx, 0xd ; "NU"
0x269d7:   74 1d                                 	je 0x269f6 <nm131_get_video_amplitude+0x12b>
0x269d9:   be 34 00 00 00                        	mov esi, 0x34
0x269de:   e8 01 fc ff ff                        	call 0x265e4 <rReg8>
0x269e3:   8d 50 90                              	lea edx, [rax - 0x70]
0x269e6:   80 fa 0f                              	cmp dl, 0xf
0x269e9:   77 6f                                 	ja 0x26a5a
0x269eb:   ba 7f 00 00 00                        	mov edx, 0x7f
0x269f0:   28 c2                                 	sub dl, al
0x269f2:   89 d0                                 	mov eax, edx
0x269f4:   eb 69                                 	jmp 0x26a5f
0x269f6:   48 98                                 	cdqe 
0x269f8:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x269ff:   0f b6 80 00 00 00 00                  	movzx eax, byte ptr [rax]
0x26a06:   eb 57                                 	jmp 0x26a5f
0x26a08:   8d 71 fe                              	lea esi, [rcx - 2]
0x26a0b:   83 fe 01                              	cmp esi, 1
0x26a0e:   76 04                                 	jbe 0x26a14 <nm131_get_video_amplitude+0x149>
0x26a10:   85 c9                                 	test ecx, ecx
0x26a12:   75 46                                 	jne 0x26a5a
0x26a14:   83 fa 0d                              	cmp edx, 0xd ; "NU"
0x26a17:   74 19                                 	je 0x26a32
0x26a19:   be 35 00 00 00                        	mov esi, 0x35
0x26a1e:   e8 c1 fb ff ff                        	call 0x265e4 <rReg8>
0x26a23:   3c 4f                                 	cmp al, 0x4f
0x26a25:   76 33                                 	jbe 0x26a5a
0x26a27:   ba 5f 00 00 00                        	mov edx, 0x5f
0x26a2c:   28 c2                                 	sub dl, al
0x26a2e:   89 d0                                 	mov eax, edx
; data inside code section at 0x26a30 -- 0x26a31
0x26a30:   eb                                                 |.               |
; function: nm131_set_lna_gain at 0x26a31 -- 0x26a61
0x26a31:   2d 48 98 48 69                        	sub eax, 0x69489848
0x26a36:   c0 b8 00 00 00 0f b6                  	sar byte ptr [rax + 0xf000000], 0xb6
0x26a3d:   80 00 00                              	add byte ptr [rax], 0
0x26a40:   00 00                                 	add byte ptr [rax], al
0x26a42:   eb 1b                                 	jmp 0x26a5f <nm131_set_lna_gain+0x2e>
0x26a44:   83 fa 0d                              	cmp edx, 0xd ; "NU"
0x26a47:   74 11                                 	je 0x26a5a <nm131_set_lna_gain+0x29>
0x26a49:   be 34 00 00 00                        	mov esi, 0x34
0x26a4e:   e8 91 fb ff ff                        	call 0x265e4 <rReg8>
0x26a53:   f7 d0                                 	not eax
0x26a55:   83 e0 0f                              	and eax, 0xf
0x26a58:   eb 05                                 	jmp 0x26a5f <nm131_set_lna_gain+0x2e>
0x26a5a:   b8 00 00 00 00                        	mov eax, 0
0x26a5f:   c9                                    	leave 
0x26a60:   c3                                    	ret 
; function: nm131_set_lna_gain at 0x26a61 -- 0x26aae
0x26a61:   55                                    	push rbp
0x26a62:   48 89 e5                              	mov rbp, rsp
0x26a65:   41 54                                 	push r12
0x26a67:   53                                    	push rbx
0x26a68:   e8 83 81 01 00                        	call 0x3ebf0 <mcount>
0x26a6d:   49 89 fc                              	mov r12, rdi
0x26a70:   89 f3                                 	mov ebx, esi
0x26a72:   be 2b 00 00 00                        	mov esi, 0x2b
0x26a77:   e8 68 fb ff ff                        	call 0x265e4 <rReg8>
0x26a7c:   83 e0 e0                              	and eax, 0xffffffe0
0x26a7f:   83 c8 20                              	or eax, 0x20
0x26a82:   85 db                                 	test ebx, ebx
0x26a84:   75 05                                 	jne 0x26a8b <nm131_set_lna_gain+0x2a>
0x26a86:   83 c8 11                              	or eax, 0x11
0x26a89:   eb 40                                 	jmp 0x26acb
0x26a8b:   83 fb 01                              	cmp ebx, 1
0x26a8e:   75 05                                 	jne 0x26a95 <nm131_set_lna_gain+0x34>
0x26a90:   83 c8 10                              	or eax, 0x10
0x26a93:   eb 36                                 	jmp 0x26acb
0x26a95:   83 fb 02                              	cmp ebx, 2
0x26a98:   75 05                                 	jne 0x26a9f <nm131_set_lna_gain+0x3e>
0x26a9a:   83 c8 0f                              	or eax, 0xf
0x26a9d:   eb 2c                                 	jmp 0x26acb
0x26a9f:   83 fb 03                              	cmp ebx, 3
0x26aa2:   75 05                                 	jne 0x26aa9 <nm131_set_lna_gain+0x48>
0x26aa4:   83 c8 0e                              	or eax, 0xe
0x26aa7:   eb 22                                 	jmp 0x26acb
0x26aa9:   83 fb 04                              	cmp ebx, 4
0x26aac:   75 05                                 	jne 0x26ab3
; data inside code section at 0x26aae -- 0x26ab0
0x26aae:   83 c8                                              |..              |
; function: rReg32 at 0x26ab0 -- 0x26ae0
0x26ab0:   0d eb 18 83 fb                        	or eax, 0xfb8318eb
0x26ab5:   05 75 05 83 c8                        	add eax, 0xc8830575
0x26aba:   0c eb                                 	or al, 0xeb ; "%("
; data inside code section at 0x26abc -- 0x26abd
0x26abc:   0e                                                 |.               |
0x26abd:   89 c2                                 	mov edx, eax
0x26abf:   83 ca 0b                              	or edx, 0xb
0x26ac2:   83 e0 df                              	and eax, 0xffffffdf
0x26ac5:   83 fb 06                              	cmp ebx, 6
0x26ac8:   0f 44 c2                              	cmove eax, edx
0x26acb:   0f b6 d0                              	movzx edx, al
0x26ace:   be 2b 00 00 00                        	mov esi, 0x2b
0x26ad3:   4c 89 e7                              	mov rdi, r12
0x26ad6:   e8 5d f7 ff ff                        	call 0x26238 <wReg8>
0x26adb:   5b                                    	pop rbx
0x26adc:   41 5c                                 	pop r12
0x26ade:   c9                                    	leave 
0x26adf:   c3                                    	ret 
; function: rReg32 at 0x26ae0 -- 0x26bc3
0x26ae0:   55                                    	push rbp
0x26ae1:   48 89 e5                              	mov rbp, rsp
0x26ae4:   53                                    	push rbx
0x26ae5:   48 83 ec 18                           	sub rsp, 0x18
0x26ae9:   e8 02 81 01 00                        	call 0x3ebf0 <mcount>
0x26aee:   48 89 fb                              	mov rbx, rdi
0x26af1:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x26af4:   48 63 d0                              	movsxd rdx, eax
0x26af7:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x26afe:   48 83 ba 00 00 00 00 00               	cmp qword ptr [rdx], 0
0x26b06:   74 1d                                 	je 0x26b25 <rReg32+0x45>
0x26b08:   48 63 d0                              	movsxd rdx, eax
0x26b0b:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x26b12:   48 83 ba 00 00 00 00 00               	cmp qword ptr [rdx], 0
0x26b1a:   74 09                                 	je 0x26b25 <rReg32+0x45>
0x26b1c:   80 ba 00 00 00 00 00                  	cmp byte ptr [rdx], 0
0x26b23:   74 23                                 	je 0x26b48 <rReg32+0x68>
0x26b25:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x26b2c:   be 02 00 00 00                        	mov esi, 2
0x26b31:   48 89 df                              	mov rdi, rbx
0x26b34:   b8 00 00 00 00                        	mov eax, 0
0x26b39:   e8 31 f6 ff ff                        	call 0x2616f <nmi_debug>
0x26b3e:   b8 00 00 00 00                        	mov eax, 0
0x26b43:   e9 d7 00 00 00                        	jmp 0x26c1f
0x26b48:   89 f0                                 	mov eax, esi
0x26b4a:   66 c1 e8 08                           	shr ax, 8
0x26b4e:   88 45 e0                              	mov byte ptr [rbp - 0x20], al
0x26b51:   40 88 75 e1                           	mov byte ptr [rbp - 0x1f], sil
0x26b55:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x26b58:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x26b5f:   48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x26b63:   0f b6 b0 00 00 00 00                  	movzx esi, byte ptr [rax]
0x26b6a:   48 8b 7f 08                           	mov rdi, qword ptr [rdi + 8]
0x26b6e:   b9 02 00 00 00                        	mov ecx, 2
0x26b73:   ff 90 00 00 00 00                     	call qword ptr [rax]
0x26b79:   85 c0                                 	test eax, eax
0x26b7b:   79 31                                 	jns 0x26bae <rReg32+0xce>
0x26b7d:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x26b84:   be 02 00 00 00                        	mov esi, 2
0x26b89:   48 89 df                              	mov rdi, rbx
0x26b8c:   b8 00 00 00 00                        	mov eax, 0
0x26b91:   e8 d9 f5 ff ff                        	call 0x2616f <nmi_debug>
0x26b96:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x26b99:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x26ba0:   c6 80 00 00 00 00 01                  	mov byte ptr [rax], 1
0x26ba7:   b8 00 00 00 00                        	mov eax, 0
0x26bac:   eb 71                                 	jmp 0x26c1f
0x26bae:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x26bb1:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x26bb8:   48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x26bbc:   0f b6 b0 00 00 00 00                  	movzx esi, byte ptr [rax]
; data inside code section at 0x26bc3 -- 0x26bd5
0x26bc3:   48 8b 7b 08 b9 04 00 00  00 ff 90 00 00 00 00 85   |H.{.............|
0x26bd3:   c0 79                                              |.y              |
; function: function_26bd5 at 0x26bd5 -- 0x26bdb
0x26bd5:   2a 48 c7                              	sub cl, byte ptr [rax - 0x39]
0x26bd8:   c2 00 00                              	ret 0
; data inside code section at 0x26bdb -- 0x26bf6
0x26bdb:   00 00 be 02 00 00 00 48  89 df b8 00 00 00 00 e8   |.......H........|
0x26beb:   80 f5 ff ff 0f b6 03 48  69 c0 b8                  |.......Hi..     |
; function: nm131_get_mute at 0x26bf6 -- 0x26c21
0x26bf6:   00 00                                 	add byte ptr [rax], al
0x26bf8:   00 c6                                 	add dh, al
0x26bfa:   80 00 00                              	add byte ptr [rax], 0
0x26bfd:   00 00                                 	add byte ptr [rax], al
0x26bff:   01 0f                                 	add dword ptr [rdi], ecx
0x26c01:   b6 55                                 	mov dh, 0x55
0x26c03:   e1 c1                                 	loope 0x26bc6
0x26c05:   e2 08                                 	loop 0x26c0f <nm131_get_mute+0x19>
0x26c07:   0f b6 45 e2                           	movzx eax, byte ptr [rbp - 0x1e]
0x26c0b:   c1 e0 10                              	shl eax, 0x10
; data inside code section at 0x26c0e -- 0x26c0f
0x26c0e:   09                                                 |.               |
0x26c0f:   d0 0f                                 	ror byte ptr [rdi], 1
0x26c11:   b6 55                                 	mov dh, 0x55
0x26c13:   e0 09                                 	loopne 0x26c1e <nm131_get_mute+0x28>
0x26c15:   d0 0f                                 	ror byte ptr [rdi], 1
0x26c17:   b6 55                                 	mov dh, 0x55
0x26c19:   e3 c1                                 	jrcxz 0x26bdc
0x26c1b:   e2 18                                 	loop 0x26c35
; data inside code section at 0x26c1d -- 0x26c1e
0x26c1d:   09                                                 |.               |
0x26c1e:   d0 48 83                              	ror byte ptr [rax - 0x7d], 1
; data inside code section at 0x26c21 -- 0x26c22
0x26c21:   c4                                                 |.               |
; function: function_26c22 at 0x26c22 -- 0x26c26
0x26c22:   18 5b c9                              	sbb byte ptr [rbx - 0x37], bl
0x26c25:   c3                                    	ret 
; function: nm131_get_mute at 0x26c26 -- 0x26c2f
0x26c26:   55                                    	push rbp
0x26c27:   48 89 e5                              	mov rbp, rsp
0x26c2a:   e8 c1 7f 01 00                        	call 0x3ebf0 <mcount>
; data inside code section at 0x26c2f -- 0x26c30
0x26c2f:   0f                                                 |.               |
; function: nm131_get_brightness at 0x26c30 -- 0x26c60
0x26c30:   b6 07                                 	mov dh, 7
; data inside code section at 0x26c32 -- 0x26c35
0x26c32:   48 69 c0                                           |Hi.             |
0x26c35:   b8 00 00 00 8b                        	mov eax, 0x8b000000
0x26c3a:   90                                    	nop 
0x26c3b:   00 00                                 	add byte ptr [rax], al
0x26c3d:   00 00                                 	add byte ptr [rax], al
0x26c3f:   83 fa 01                              	cmp edx, 1
0x26c42:   76 0a                                 	jbe 0x26c4e <nm131_get_brightness+0x1e>
0x26c44:   b8 00 00 00 00                        	mov eax, 0
0x26c49:   83 fa 04                              	cmp edx, 4
0x26c4c:   75 10                                 	jne 0x26c5e <nm131_get_brightness+0x2e>
0x26c4e:   be 35 00 00 00                        	mov esi, 0x35
0x26c53:   e8 88 fe ff ff                        	call 0x26ae0 <rReg32>
0x26c58:   c1 e8 04                              	shr eax, 4
0x26c5b:   83 e0 01                              	and eax, 1
0x26c5e:   c9                                    	leave 
0x26c5f:   c3                                    	ret 
; function: nm131_get_brightness at 0x26c60 -- 0x26c84
0x26c60:   55                                    	push rbp
0x26c61:   48 89 e5                              	mov rbp, rsp
0x26c64:   e8 87 7f 01 00                        	call 0x3ebf0 <mcount>
0x26c69:   0f b6 17                              	movzx edx, byte ptr [rdi]
0x26c6c:   48 63 ca                              	movsxd rcx, edx
0x26c6f:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x26c76:   b8 00 00 00 00                        	mov eax, 0
0x26c7b:   83 b9 00 00 00 00 01                  	cmp dword ptr [rcx], 1
0x26c82:   77 33                                 	ja 0x26cb7
; data inside code section at 0x26c84 -- 0x26c89
0x26c84:   83 b9 00 00 00                                     |.....           |
; function: nm131_get_volume at 0x26c89 -- 0x26cb9
0x26c89:   00 0d 74 19 be 00                     	add byte ptr [rip + 0xbe1974], cl
0x26c8f:   02 00                                 	add al, byte ptr [rax]
0x26c91:   00 e8                                 	add al, ch
; data inside code section at 0x26c93 -- 0x26cb7
0x26c93:   49 fe ff ff 25 ff 3f 00  00 2d 00 06 00 00 c1 e8   |I...%.?..-......|
0x26ca3:   06 eb 11 48 63 d2 48 69  d2 b8 00 00 00 0f b6 82   |...Hc.Hi........|
0x26cb3:   00 00 00 00                                        |....            |
0x26cb7:   c9                                    	leave 
0x26cb8:   c3                                    	ret 
; function: nm131_get_volume at 0x26cb9 -- 0x26d28
0x26cb9:   55                                    	push rbp
0x26cba:   48 89 e5                              	mov rbp, rsp
0x26cbd:   48 83 ec 20                           	sub rsp, 0x20
0x26cc1:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x26cc5:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x26cc9:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x26ccd:   e8 1e 7f 01 00                        	call 0x3ebf0 <mcount>
0x26cd2:   48 89 fb                              	mov rbx, rdi
0x26cd5:   44 0f b6 27                           	movzx r12d, byte ptr [rdi]
0x26cd9:   49 63 c4                              	movsxd rax, r12d
0x26cdc:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x26ce3:   83 b8 00 00 00 00 01                  	cmp dword ptr [rax], 1
0x26cea:   77 5a                                 	ja 0x26d46
0x26cec:   be 35 00 00 00                        	mov esi, 0x35
0x26cf1:   e8 ee f8 ff ff                        	call 0x265e4 <rReg8>
0x26cf6:   41 89 c5                              	mov r13d, eax
0x26cf9:   41 8d 45 b0                           	lea eax, [r13 - 0x50]
0x26cfd:   3c 0f                                 	cmp al, 0xf
0x26cff:   77 45                                 	ja 0x26d46
0x26d01:   4d 63 e4                              	movsxd r12, r12d
0x26d04:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
0x26d0b:   41 80 bc 24 00 00 00 00 00            	cmp byte ptr [r12], 0
0x26d14:   74 0a                                 	je 0x26d20 <nm131_get_volume+0x67>
0x26d16:   b8 5f 00 00 00                        	mov eax, 0x5f
0x26d1b:   44 28 e8                              	sub al, r13b
0x26d1e:   eb 2b                                 	jmp 0x26d4b
0x26d20:   be 7c 02 00 00                        	mov esi, 0x27c
0x26d25:   48 89 df                              	mov rdi, rbx
; data inside code section at 0x26d28 -- 0x26d29
0x26d28:   e8                                                 |.               |
; function: nm131_get_overthcount at 0x26d29 -- 0x26d2b
0x26d29:   b3 fd                                 	mov bl, 0xfd
; data inside code section at 0x26d2b -- 0x26d2e
0x26d2b:   ff ff 89                                           |...             |
; function: function_26d2e at 0x26d2e -- 0x26d31
0x26d2e:   c2 b8 10                              	ret 0x10b8
; data inside code section at 0x26d31 -- 0x26d43
0x26d31:   00 00 00 81 fa 18 18 00  00 74 0f b8 5f 00 00 00   |.........t.._...|
0x26d41:   44 28                                              |D(              |
; function: nm131_demod_get_pll_level at 0x26d43 -- 0x26d59
0x26d43:   e8 eb 05 b8 00                        	call 0xba7333 <unknown_ba7333>
0x26d48:   00 00                                 	add byte ptr [rax], al
0x26d4a:   00 48 8b                              	add byte ptr [rax - 0x75], cl
0x26d4d:   5d                                    	pop rbp
0x26d4e:   e8 4c 8b 65 f0                        	call 0xfffffffff067f89f <unknown_fffffffff067f89f>
0x26d53:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x26d57:   c9                                    	leave 
0x26d58:   c3                                    	ret 
; function: nm131_get_overthcount at 0x26d59 -- 0x26d6c
0x26d59:   55                                    	push rbp
0x26d5a:   48 89 e5                              	mov rbp, rsp
0x26d5d:   e8 8e 7e 01 00                        	call 0x3ebf0 <mcount>
0x26d62:   be 54 02 00 00                        	mov esi, 0x254
0x26d67:   e8 74 fd ff ff                        	call 0x26ae0 <rReg32>
; function: nm131_demod_get_freq_offset at 0x26d6c -- 0x26d73
0x26d6c:   25 ff ff 00 00                        	and eax, 0xffff
0x26d71:   c9                                    	leave 
0x26d72:   c3                                    	ret 
; function: nm131_demod_get_pll_level at 0x26d73 -- 0x26d9c
0x26d73:   55                                    	push rbp
0x26d74:   48 89 e5                              	mov rbp, rsp
0x26d77:   e8 74 7e 01 00                        	call 0x3ebf0 <mcount>
0x26d7c:   be ec 01 00 00                        	mov esi, 0x1ec
0x26d81:   e8 5a fd ff ff                        	call 0x26ae0 <rReg32>
0x26d86:   c1 e8 0a                              	shr eax, 0xa
0x26d89:   66 25 ff 03                           	and ax, 0x3ff
0x26d8d:   8d 90 00 fc ff ff                     	lea edx, [rax - 0x400]
0x26d93:   66 3d 00 02                           	cmp ax, 0x200
0x26d97:   0f 4d c2                              	cmovge eax, edx
0x26d9a:   c9                                    	leave 
0x26d9b:   c3                                    	ret 
; function: nm131_demod_get_snr at 0x26d9c -- 0x26dcc
0x26d9c:   55                                    	push rbp
0x26d9d:   48 89 e5                              	mov rbp, rsp
0x26da0:   e8 4b 7e 01 00                        	call 0x3ebf0 <mcount>
0x26da5:   be e8 01 00 00                        	mov esi, 0x1e8
0x26daa:   e8 31 fd ff ff                        	call 0x26ae0 <rReg32>
0x26daf:   8d 0c 85 00 00 00 00                  	lea ecx, [rax*4]
0x26db6:   ba 85 cf 01 ce                        	mov edx, 0xce01cf85
0x26dbb:   89 c8                                 	mov eax, ecx
0x26dbd:   f7 ea                                 	imul edx
0x26dbf:   8d 04 0a                              	lea eax, [rdx + rcx]
0x26dc2:   c1 f8 0d                              	sar eax, 0xd ; "NU"
0x26dc5:   c1 f9 1f                              	sar ecx, 0x1f
0x26dc8:   29 c8                                 	sub eax, ecx
0x26dca:   c9                                    	leave 
0x26dcb:   c3                                    	ret 
; function: nm131_demod_get_snr at 0x26dcc -- 0x26dee
0x26dcc:   55                                    	push rbp
0x26dcd:   48 89 e5                              	mov rbp, rsp
0x26dd0:   e8 1b 7e 01 00                        	call 0x3ebf0 <mcount>
0x26dd5:   be 18 02 00 00                        	mov esi, 0x218
0x26dda:   e8 01 fd ff ff                        	call 0x26ae0 <rReg32>
0x26ddf:   ba a8 fd ff ff                        	mov edx, 0xfffffda8
0x26de4:   89 c7                                 	mov edi, eax
0x26de6:   81 e7 ff ff 00 00                     	and edi, 0xffff
0x26dec:   74 2c                                 	je 0x26e1a
; function: nm131_demod_get_cpll_lock at 0x26dee -- 0x26e09
0x26dee:   c1 e8 10                              	shr eax, 0x10
0x26df1:   ba 70 17 00 00                        	mov edx, 0x1770
0x26df6:   85 c0                                 	test eax, eax
0x26df8:   74 20                                 	je 0x26e1a
0x26dfa:   c1 e7 0f                              	shl edi, 0xf
0x26dfd:   89 ff                                 	mov edi, edi
0x26dff:   89 c1                                 	mov ecx, eax
0x26e01:   48 89 f8                              	mov rax, rdi
0x26e04:   ba 00 00 00 00                        	mov edx, 0
; function: nm131_demod_get_agc_lock at 0x26e09 -- 0x26e1e
0x26e09:   48 f7 f1                              	div rcx
0x26e0c:   48 89 c7                              	mov rdi, rax
0x26e0f:   e8 c9 73 ff ff                        	call 0x1e1dd <nmi_log10>
0x26e14:   8d 14 80                              	lea edx, [rax + rax*4]
0x26e17:   8d 14 92                              	lea edx, [rdx + rdx*4]
0x26e1a:   89 d0                                 	mov eax, edx
0x26e1c:   c9                                    	leave 
0x26e1d:   c3                                    	ret 
; function: nm131_demod_get_cpll_lock at 0x26e1e -- 0x26e39
0x26e1e:   55                                    	push rbp
0x26e1f:   48 89 e5                              	mov rbp, rsp
0x26e22:   e8 c9 7d 01 00                        	call 0x3ebf0 <mcount>
0x26e27:   be e0 01 00 00                        	mov esi, 0x1e0
0x26e2c:   e8 af fc ff ff                        	call 0x26ae0 <rReg32>
0x26e31:   83 f8 01                              	cmp eax, 1
0x26e34:   0f 94 c0                              	sete al
0x26e37:   c9                                    	leave 
0x26e38:   c3                                    	ret 
; function: nm131_demod_get_agc_lock at 0x26e39 -- 0x26e4f
0x26e39:   55                                    	push rbp
0x26e3a:   48 89 e5                              	mov rbp, rsp
0x26e3d:   53                                    	push rbx
0x26e3e:   48 83 ec 08                           	sub rsp, 8
0x26e42:   e8 a9 7d 01 00                        	call 0x3ebf0 <mcount>
0x26e47:   48 89 fb                              	mov rbx, rdi
0x26e4a:   be 04 01 00 00                        	mov esi, 0x104
; data inside code section at 0x26e4f -- 0x26e52
0x26e4f:   e8 8c fc                                           |...             |
; function: nm131_demod_dagc_gain at 0x26e52 -- 0x26e53
; function: function_26e53 at 0x26e53 -- 0x26e56
0x26e53:   ff 66 85                              	jmp qword ptr [rsi - 0x7b]
; data inside code section at 0x26e56 -- 0x26e57
0x26e56:   c0                                                 |.               |
; function: function_26e57 at 0x26e57 -- 0x26e82
0x26e57:   78 0f                                 	js 0x26e68 <function_26e57+0x11>
0x26e59:   be 54 01 00 00                        	mov esi, 0x154
0x26e5e:   48 89 df                              	mov rdi, rbx
0x26e61:   e8 7a fc ff ff                        	call 0x26ae0 <rReg32>
0x26e66:   eb 0d                                 	jmp 0x26e75 <function_26e57+0x1e>
0x26e68:   be 8c 01 00 00                        	mov esi, 0x18c
0x26e6d:   48 89 df                              	mov rdi, rbx
0x26e70:   e8 6b fc ff ff                        	call 0x26ae0 <rReg32>
0x26e75:   83 f8 01                              	cmp eax, 1
0x26e78:   0f 94 c0                              	sete al
0x26e7b:   48 83 c4 08                           	add rsp, 8
0x26e7f:   5b                                    	pop rbx
0x26e80:   c9                                    	leave 
0x26e81:   c3                                    	ret 
; function: nm131_demod_dagc_gain at 0x26e82 -- 0x26e8e
0x26e82:   55                                    	push rbp
0x26e83:   48 89 e5                              	mov rbp, rsp
0x26e86:   e8 65 7d 01 00                        	call 0x3ebf0 <mcount>
0x26e8b:   0f b6 07                              	movzx eax, byte ptr [rdi]
; data inside code section at 0x26e8e -- 0x26e93
0x26e8e:   48 69 c0 b8 00                                     |Hi...           |
; function: nm131_demod_get_status at 0x26e93 -- 0x26ec3
0x26e93:   00 00                                 	add byte ptr [rax], al
0x26e95:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x26e9b:   80 b8 00 00 00 00 00                  	cmp byte ptr [rax], 0
0x26ea2:   75 11                                 	jne 0x26eb5 <nm131_demod_get_status+0x22>
0x26ea4:   be 5c 01 00 00                        	mov esi, 0x15c
0x26ea9:   e8 32 fc ff ff                        	call 0x26ae0 <rReg32>
0x26eae:   c1 e0 03                              	shl eax, 3
0x26eb1:   89 c0                                 	mov eax, eax
0x26eb3:   eb 0c                                 	jmp 0x26ec1 <nm131_demod_get_status+0x2e>
0x26eb5:   be 94 01 00 00                        	mov esi, 0x194
0x26eba:   e8 21 fc ff ff                        	call 0x26ae0 <rReg32>
0x26ebf:   89 c0                                 	mov eax, eax
0x26ec1:   c9                                    	leave 
0x26ec2:   c3                                    	ret 
; function: nm131_demod_get_status at 0x26ec3 -- 0x26eeb
0x26ec3:   55                                    	push rbp
0x26ec4:   48 89 e5                              	mov rbp, rsp
0x26ec7:   41 54                                 	push r12
0x26ec9:   53                                    	push rbx
0x26eca:   e8 21 7d 01 00                        	call 0x3ebf0 <mcount>
0x26ecf:   49 89 fc                              	mov r12, rdi
0x26ed2:   48 89 f3                              	mov rbx, rsi
0x26ed5:   e8 5f ff ff ff                        	call 0x26e39 <nm131_demod_get_agc_lock>
0x26eda:   88 43 10                              	mov byte ptr [rbx + 0x10], al
0x26edd:   4c 89 e7                              	mov rdi, r12
0x26ee0:   e8 39 ff ff ff                        	call 0x26e1e <nm131_demod_get_cpll_lock>
0x26ee5:   88 43 11                              	mov byte ptr [rbx + 0x11], al
0x26ee8:   4c 89 e7                              	mov rdi, r12
; function: nm131_get_lna_gain at 0x26eeb -- 0x26f1b
0x26eeb:   e8 92 ff ff ff                        	call 0x26e82 <nm131_demod_dagc_gain>
0x26ef0:   48 89 03                              	mov qword ptr [rbx], rax
0x26ef3:   4c 89 e7                              	mov rdi, r12
0x26ef6:   e8 d1 fe ff ff                        	call 0x26dcc <nm131_demod_get_snr>
0x26efb:   66 89 43 0c                           	mov word ptr [rbx + 0xc], ax
0x26eff:   4c 89 e7                              	mov rdi, r12
0x26f02:   e8 95 fe ff ff                        	call 0x26d9c <nm131_demod_get_snr>
0x26f07:   89 43 08                              	mov dword ptr [rbx + 8], eax
0x26f0a:   4c 89 e7                              	mov rdi, r12
0x26f0d:   e8 61 fe ff ff                        	call 0x26d73 <nm131_demod_get_pll_level>
0x26f12:   66 89 43 0e                           	mov word ptr [rbx + 0xe], ax
0x26f16:   5b                                    	pop rbx
0x26f17:   41 5c                                 	pop r12
0x26f19:   c9                                    	leave 
0x26f1a:   c3                                    	ret 
; function: nm131_get_lna_gain at 0x26f1b -- 0x27690
0x26f1b:   55                                    	push rbp
0x26f1c:   48 89 e5                              	mov rbp, rsp
0x26f1f:   41 56                                 	push r14
0x26f21:   41 55                                 	push r13
0x26f23:   41 54                                 	push r12
0x26f25:   53                                    	push rbx
0x26f26:   e8 c5 7c 01 00                        	call 0x3ebf0 <mcount>
0x26f2b:   49 89 fc                              	mov r12, rdi
0x26f2e:   48 89 f3                              	mov rbx, rsi
0x26f31:   44 0f b6 37                           	movzx r14d, byte ptr [rdi]
0x26f35:   be 3e 00 00 00                        	mov esi, 0x3e
0x26f3a:   e8 a5 f6 ff ff                        	call 0x265e4 <rReg8>
0x26f3f:   41 89 c5                              	mov r13d, eax
0x26f42:   be 2d 00 00 00                        	mov esi, 0x2d
0x26f47:   4c 89 e7                              	mov rdi, r12
0x26f4a:   e8 95 f6 ff ff                        	call 0x265e4 <rReg8>
0x26f4f:   84 c0                                 	test al, al
0x26f51:   0f 85 91 00 00 00                     	jne 0x26fe8 <nm131_get_lna_gain+0xcd>
0x26f57:   41 80 fd 0f                           	cmp r13b, 0xf
0x26f5b:   74 45                                 	je 0x26fa2 <nm131_get_lna_gain+0x87>
0x26f5d:   41 80 fd 0f                           	cmp r13b, 0xf
0x26f61:   77 0f                                 	ja 0x26f72 <nm131_get_lna_gain+0x57>
0x26f63:   41 80 fd 03                           	cmp r13b, 3
0x26f67:   74 1d                                 	je 0x26f86 <nm131_get_lna_gain+0x6b>
0x26f69:   41 80 fd 07                           	cmp r13b, 7
0x26f6d:   75 6b                                 	jne 0x26fda <nm131_get_lna_gain+0xbf>
0x26f6f:   90                                    	nop 
0x26f70:   eb 22                                 	jmp 0x26f94 <nm131_get_lna_gain+0x79>
0x26f72:   41 80 fd 3f                           	cmp r13b, 0x3f
0x26f76:   74 46                                 	je 0x26fbe <nm131_get_lna_gain+0xa3>
0x26f78:   41 80 fd 7f                           	cmp r13b, 0x7f
0x26f7c:   74 4e                                 	je 0x26fcc <nm131_get_lna_gain+0xb1>
0x26f7e:   41 80 fd 1f                           	cmp r13b, 0x1f
0x26f82:   75 56                                 	jne 0x26fda <nm131_get_lna_gain+0xbf>
0x26f84:   eb 2a                                 	jmp 0x26fb0 <nm131_get_lna_gain+0x95>
0x26f86:   66 c7 03 7c fc                        	mov word ptr [rbx], 0xfc7c
0x26f8b:   c6 43 07 e2                           	mov byte ptr [rbx + 7], 0xe2
0x26f8f:   e9 48 01 00 00                        	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x26f94:   66 c7 03 70 fe                        	mov word ptr [rbx], 0xfe70
0x26f99:   c6 43 07 e3                           	mov byte ptr [rbx + 7], 0xe3
0x26f9d:   e9 3a 01 00 00                        	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x26fa2:   66 c7 03 64 00                        	mov word ptr [rbx], 0x64
0x26fa7:   c6 43 07 e4                           	mov byte ptr [rbx + 7], 0xe4
0x26fab:   e9 2c 01 00 00                        	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x26fb0:   66 c7 03 58 02                        	mov word ptr [rbx], 0x258
0x26fb5:   c6 43 07 e5                           	mov byte ptr [rbx + 7], 0xe5
0x26fb9:   e9 1e 01 00 00                        	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x26fbe:   66 c7 03 b0 04                        	mov word ptr [rbx], 0x4b0
0x26fc3:   c6 43 07 e6                           	mov byte ptr [rbx + 7], 0xe6
0x26fc7:   e9 10 01 00 00                        	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x26fcc:   66 c7 03 a4 06                        	mov word ptr [rbx], 0x6a4
0x26fd1:   c6 43 07 e7                           	mov byte ptr [rbx + 7], 0xe7
0x26fd5:   e9 02 01 00 00                        	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x26fda:   66 c7 03 7c fc                        	mov word ptr [rbx], 0xfc7c
0x26fdf:   c6 43 07 e2                           	mov byte ptr [rbx + 7], 0xe2
0x26fe3:   e9 f4 00 00 00                        	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x26fe8:   41 80 fd 17                           	cmp r13b, 0x17
0x26fec:   0f 84 9f 00 00 00                     	je 0x27091 <nm131_get_lna_gain+0x176>
0x26ff2:   41 80 fd 17                           	cmp r13b, 0x17
0x26ff6:   77 30                                 	ja 0x27028 <nm131_get_lna_gain+0x10d>
0x26ff8:   41 80 fd 07                           	cmp r13b, 7
0x26ffc:   74 72                                 	je 0x27070 <nm131_get_lna_gain+0x155>
0x26ffe:   41 80 fd 07                           	cmp r13b, 7
0x27002:   77 12                                 	ja 0x27016 <nm131_get_lna_gain+0xfb>
0x27004:   41 80 fd 03                           	cmp r13b, 3
0x27008:   74 50                                 	je 0x2705a <nm131_get_lna_gain+0x13f>
0x2700a:   41 80 fd 05                           	cmp r13b, 5
0x2700e:   0f 85 bf 00 00 00                     	jne 0x270d3 <nm131_get_lna_gain+0x1b8>
0x27014:   eb 4f                                 	jmp 0x27065 <nm131_get_lna_gain+0x14a>
0x27016:   41 80 fd 0b                           	cmp r13b, 0xb
0x2701a:   74 5f                                 	je 0x2707b <nm131_get_lna_gain+0x160>
0x2701c:   41 80 fd 0f                           	cmp r13b, 0xf
0x27020:   0f 85 ad 00 00 00                     	jne 0x270d3 <nm131_get_lna_gain+0x1b8>
0x27026:   eb 5e                                 	jmp 0x27086 <nm131_get_lna_gain+0x16b>
0x27028:   41 80 fd 3f                           	cmp r13b, 0x3f
0x2702c:   0f 84 80 00 00 00                     	je 0x270b2 <nm131_get_lna_gain+0x197>
0x27032:   41 80 fd 3f                           	cmp r13b, 0x3f
0x27036:   77 12                                 	ja 0x2704a <nm131_get_lna_gain+0x12f>
0x27038:   41 80 fd 1f                           	cmp r13b, 0x1f
0x2703c:   74 5e                                 	je 0x2709c <nm131_get_lna_gain+0x181>
0x2703e:   41 80 fd 2f                           	cmp r13b, 0x2f
0x27042:   0f 85 8b 00 00 00                     	jne 0x270d3 <nm131_get_lna_gain+0x1b8>
0x27048:   eb 5d                                 	jmp 0x270a7 <nm131_get_lna_gain+0x18c>
0x2704a:   41 80 fd 5f                           	cmp r13b, 0x5f
0x2704e:   66 90                                 	nop 
0x27050:   74 6b                                 	je 0x270bd <nm131_get_lna_gain+0x1a2>
0x27052:   41 80 fd 7f                           	cmp r13b, 0x7f
0x27056:   75 7b                                 	jne 0x270d3 <nm131_get_lna_gain+0x1b8>
0x27058:   eb 6e                                 	jmp 0x270c8 <nm131_get_lna_gain+0x1ad>
0x2705a:   66 c7 03 7c fc                        	mov word ptr [rbx], 0xfc7c
0x2705f:   c6 43 07 e3                           	mov byte ptr [rbx + 7], 0xe3
0x27063:   eb 77                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x27065:   66 c7 03 44 fd                        	mov word ptr [rbx], 0xfd44
0x2706a:   c6 43 07 e4                           	mov byte ptr [rbx + 7], 0xe4
0x2706e:   eb 6c                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x27070:   66 c7 03 70 fe                        	mov word ptr [rbx], 0xfe70
0x27075:   c6 43 07 e5                           	mov byte ptr [rbx + 7], 0xe5
0x27079:   eb 61                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x2707b:   66 c7 03 9c ff                        	mov word ptr [rbx], 0xff9c
0x27080:   c6 43 07 e6                           	mov byte ptr [rbx + 7], 0xe6
0x27084:   eb 56                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x27086:   66 c7 03 64 00                        	mov word ptr [rbx], 0x64
0x2708b:   c6 43 07 e7                           	mov byte ptr [rbx + 7], 0xe7
0x2708f:   eb 4b                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x27091:   66 c7 03 2c 01                        	mov word ptr [rbx], 0x12c
0x27096:   c6 43 07 e8                           	mov byte ptr [rbx + 7], 0xe8
0x2709a:   eb 40                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x2709c:   66 c7 03 58 02                        	mov word ptr [rbx], 0x258
0x270a1:   c6 43 07 e9                           	mov byte ptr [rbx + 7], 0xe9
0x270a5:   eb 35                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x270a7:   66 c7 03 84 03                        	mov word ptr [rbx], 0x384
0x270ac:   c6 43 07 ea                           	mov byte ptr [rbx + 7], 0xea
0x270b0:   eb 2a                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x270b2:   66 c7 03 b0 04                        	mov word ptr [rbx], 0x4b0
0x270b7:   c6 43 07 eb                           	mov byte ptr [rbx + 7], 0xeb ; "%("
0x270bb:   eb 1f                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x270bd:   66 c7 03 78 05                        	mov word ptr [rbx], 0x578
0x270c2:   c6 43 07 ec                           	mov byte ptr [rbx + 7], 0xec
0x270c6:   eb 14                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x270c8:   66 c7 03 a4 06                        	mov word ptr [rbx], 0x6a4
0x270cd:   c6 43 07 ed                           	mov byte ptr [rbx + 7], 0xed
0x270d1:   eb 09                                 	jmp 0x270dc <nm131_get_lna_gain+0x1c1>
0x270d3:   66 c7 03 7c fc                        	mov word ptr [rbx], 0xfc7c
0x270d8:   c6 43 07 e3                           	mov byte ptr [rbx + 7], 0xe3
0x270dc:   45 0f b6 f6                           	movzx r14d, r14b
0x270e0:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x270e7:   41 80 be 00 00 00 00 00               	cmp byte ptr [r14], 0
0x270ef:   74 04                                 	je 0x270f5 <nm131_get_lna_gain+0x1da>
0x270f1:   80 63 07 3f                           	and byte ptr [rbx + 7], 0x3f
0x270f5:   be 40 00 00 00                        	mov esi, 0x40
0x270fa:   4c 89 e7                              	mov rdi, r12
0x270fd:   e8 e2 f4 ff ff                        	call 0x265e4 <rReg8>
0x27102:   41 89 c5                              	mov r13d, eax
0x27105:   be 41 00 00 00                        	mov esi, 0x41
0x2710a:   4c 89 e7                              	mov rdi, r12
0x2710d:   e8 d2 f4 ff ff                        	call 0x265e4 <rReg8>
0x27112:   0f b6 c0                              	movzx eax, al
0x27115:   c1 e8 05                              	shr eax, 5
0x27118:   45 0f b6 ed                           	movzx r13d, r13b
0x2711c:   42 8d 14 ed 00 00 00 00               	lea edx, [r13*8]
0x27124:   41 89 c5                              	mov r13d, eax
0x27127:   41 09 d5                              	or r13d, edx
0x2712a:   41 83 fd 17                           	cmp r13d, 0x17
0x2712e:   0f 84 6d 01 00 00                     	je 0x272a1 <nm131_get_lna_gain+0x386>
0x27134:   41 83 fd 17                           	cmp r13d, 0x17
0x27138:   77 64                                 	ja 0x2719e <nm131_get_lna_gain+0x283>
0x2713a:   41 83 fd 03                           	cmp r13d, 3
0x2713e:   0f 84 99 01 00 00                     	je 0x272dd <nm131_get_lna_gain+0x3c2>
0x27144:   41 83 fd 03                           	cmp r13d, 3
0x27148:   77 1b                                 	ja 0x27165 <nm131_get_lna_gain+0x24a>
0x2714a:   41 83 fd 01                           	cmp r13d, 1
0x2714e:   0f 84 a1 01 00 00                     	je 0x272f5 <nm131_get_lna_gain+0x3da>
0x27154:   41 83 fd 01                           	cmp r13d, 1
0x27158:   0f 87 8b 01 00 00                     	ja 0x272e9 <nm131_get_lna_gain+0x3ce>
0x2715e:   66 90                                 	nop 
0x27160:   e9 9c 01 00 00                        	jmp 0x27301 <nm131_get_lna_gain+0x3e6>
0x27165:   41 83 fd 07                           	cmp r13d, 7
0x27169:   0f 84 56 01 00 00                     	je 0x272c5 <nm131_get_lna_gain+0x3aa>
0x2716f:   41 83 fd 07                           	cmp r13d, 7
0x27173:   77 10                                 	ja 0x27185 <nm131_get_lna_gain+0x26a>
0x27175:   41 83 fd 05                           	cmp r13d, 5
0x27179:   0f 85 8e 01 00 00                     	jne 0x2730d <nm131_get_lna_gain+0x3f2>
0x2717f:   90                                    	nop 
0x27180:   e9 4c 01 00 00                        	jmp 0x272d1 <nm131_get_lna_gain+0x3b6>
0x27185:   41 83 fd 0b                           	cmp r13d, 0xb
0x27189:   0f 84 2a 01 00 00                     	je 0x272b9 <nm131_get_lna_gain+0x39e>
0x2718f:   41 83 fd 0f                           	cmp r13d, 0xf
0x27193:   0f 85 74 01 00 00                     	jne 0x2730d <nm131_get_lna_gain+0x3f2>
0x27199:   e9 0f 01 00 00                        	jmp 0x272ad <nm131_get_lna_gain+0x392>
0x2719e:   41 83 fd 7f                           	cmp r13d, 0x7f
0x271a2:   0f 84 b1 00 00 00                     	je 0x27259 <nm131_get_lna_gain+0x33e>
0x271a8:   41 83 fd 7f                           	cmp r13d, 0x7f
0x271ac:   77 38                                 	ja 0x271e6 <nm131_get_lna_gain+0x2cb>
0x271ae:   41 83 fd 2f                           	cmp r13d, 0x2f
0x271b2:   0f 84 ce 00 00 00                     	je 0x27286 <nm131_get_lna_gain+0x36b>
0x271b8:   41 83 fd 2f                           	cmp r13d, 0x2f
0x271bc:   77 0f                                 	ja 0x271cd <nm131_get_lna_gain+0x2b2>
0x271be:   41 83 fd 1f                           	cmp r13d, 0x1f
0x271c2:   0f 85 45 01 00 00                     	jne 0x2730d <nm131_get_lna_gain+0x3f2>
0x271c8:   e9 c8 00 00 00                        	jmp 0x27295 <nm131_get_lna_gain+0x37a>
0x271cd:   41 83 fd 3f                           	cmp r13d, 0x3f
0x271d1:   0f 84 a0 00 00 00                     	je 0x27277 <nm131_get_lna_gain+0x35c>
0x271d7:   41 83 fd 5f                           	cmp r13d, 0x5f
0x271db:   0f 85 2c 01 00 00                     	jne 0x2730d <nm131_get_lna_gain+0x3f2>
0x271e1:   e9 82 00 00 00                        	jmp 0x27268 <nm131_get_lna_gain+0x34d>
0x271e6:   41 81 fd ff 01 00 00                  	cmp r13d, 0x1ff
0x271ed:   74 4c                                 	je 0x2723b <nm131_get_lna_gain+0x320>
0x271ef:   41 81 fd ff 01 00 00                  	cmp r13d, 0x1ff
0x271f6:   77 0f                                 	ja 0x27207 <nm131_get_lna_gain+0x2ec>
0x271f8:   41 81 fd ff 00 00 00                  	cmp r13d, 0xff
0x271ff:   0f 85 08 01 00 00                     	jne 0x2730d <nm131_get_lna_gain+0x3f2>
0x27205:   eb 43                                 	jmp 0x2724a <nm131_get_lna_gain+0x32f>
0x27207:   41 81 fd ff 03 00 00                  	cmp r13d, 0x3ff
0x2720e:   74 1c                                 	je 0x2722c <nm131_get_lna_gain+0x311>
0x27210:   41 81 fd ff 07 00 00                  	cmp r13d, 0x7ff
0x27217:   0f 85 f0 00 00 00                     	jne 0x2730d <nm131_get_lna_gain+0x3f2>
0x2721d:   66 c7 43 02 98 0d                     	mov word ptr [rbx + 2], 0xd98
0x27223:   c6 43 06 f1                           	mov byte ptr [rbx + 6], 0xf1
0x27227:   e9 eb 00 00 00                        	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x2722c:   66 c7 43 02 2c 0b                     	mov word ptr [rbx + 2], 0xb2c
0x27232:   c6 43 06 f0                           	mov byte ptr [rbx + 6], 0xf0
0x27236:   e9 dc 00 00 00                        	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x2723b:   66 c7 43 02 e8 08                     	mov word ptr [rbx + 2], 0x8e8
0x27241:   c6 43 06 ef                           	mov byte ptr [rbx + 6], 0xef
0x27245:   e9 cd 00 00 00                        	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x2724a:   66 c7 43 02 86 06                     	mov word ptr [rbx + 2], 0x686
0x27250:   c6 43 06 ee                           	mov byte ptr [rbx + 6], 0xee
0x27254:   e9 be 00 00 00                        	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x27259:   66 c7 43 02 5a 05                     	mov word ptr [rbx + 2], 0x55a
0x2725f:   c6 43 06 ed                           	mov byte ptr [rbx + 6], 0xed
0x27263:   e9 af 00 00 00                        	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x27268:   66 c7 43 02 b0 04                     	mov word ptr [rbx + 2], 0x4b0
0x2726e:   c6 43 06 ec                           	mov byte ptr [rbx + 6], 0xec
0x27272:   e9 a0 00 00 00                        	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x27277:   66 c7 43 02 b6 03                     	mov word ptr [rbx + 2], 0x3b6
0x2727d:   c6 43 06 eb                           	mov byte ptr [rbx + 6], 0xeb ; "%("
0x27281:   e9 91 00 00 00                        	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x27286:   66 c7 43 02 ee 02                     	mov word ptr [rbx + 2], 0x2ee
0x2728c:   c6 43 06 ea                           	mov byte ptr [rbx + 6], 0xea
0x27290:   e9 82 00 00 00                        	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x27295:   66 c7 43 02 c2 01                     	mov word ptr [rbx + 2], 0x1c2
0x2729b:   c6 43 06 e9                           	mov byte ptr [rbx + 6], 0xe9
0x2729f:   eb 76                                 	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x272a1:   66 c7 43 02 f0 00                     	mov word ptr [rbx + 2], 0xf0
0x272a7:   c6 43 06 e8                           	mov byte ptr [rbx + 6], 0xe8
0x272ab:   eb 6a                                 	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x272ad:   66 c7 43 02 a6 ff                     	mov word ptr [rbx + 2], 0xffa6
0x272b3:   c6 43 06 e7                           	mov byte ptr [rbx + 6], 0xe7
0x272b7:   eb 5e                                 	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x272b9:   66 c7 43 02 a2 fe                     	mov word ptr [rbx + 2], 0xfea2
0x272bf:   c6 43 06 e6                           	mov byte ptr [rbx + 6], 0xe6
0x272c3:   eb 52                                 	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x272c5:   66 c7 43 02 44 fd                     	mov word ptr [rbx + 2], 0xfd44
0x272cb:   c6 43 06 e5                           	mov byte ptr [rbx + 6], 0xe5
0x272cf:   eb 46                                 	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x272d1:   66 c7 43 02 7c fc                     	mov word ptr [rbx + 2], 0xfc7c
0x272d7:   c6 43 06 e4                           	mov byte ptr [rbx + 6], 0xe4
0x272db:   eb 3a                                 	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x272dd:   66 c7 43 02 32 fb                     	mov word ptr [rbx + 2], 0xfb32
0x272e3:   c6 43 06 e3                           	mov byte ptr [rbx + 6], 0xe3
0x272e7:   eb 2e                                 	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x272e9:   66 c7 43 02 24 fa                     	mov word ptr [rbx + 2], 0xfa24
0x272ef:   c6 43 06 e2                           	mov byte ptr [rbx + 6], 0xe2
0x272f3:   eb 22                                 	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x272f5:   66 c7 43 02 f8 f8                     	mov word ptr [rbx + 2], 0xf8f8
0x272fb:   c6 43 06 e1                           	mov byte ptr [rbx + 6], 0xe1
0x272ff:   eb 16                                 	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x27301:   66 c7 43 02 30 f8                     	mov word ptr [rbx + 2], 0xf830
0x27307:   c6 43 06 e0                           	mov byte ptr [rbx + 6], 0xe0
0x2730b:   eb 0a                                 	jmp 0x27317 <nm131_get_lna_gain+0x3fc>
0x2730d:   66 c7 43 02 ac 26                     	mov word ptr [rbx + 2], 0x26ac
0x27313:   c6 43 06 00                           	mov byte ptr [rbx + 6], 0
0x27317:   45 0f b6 2c 24                        	movzx r13d, byte ptr [r12]
0x2731c:   49 63 c5                              	movsxd rax, r13d
0x2731f:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27326:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x2732c:   83 f8 0d                              	cmp eax, 0xd ; "NU"
0x2732f:   0f 85 7e 01 00 00                     	jne 0x274b3 <nm131_get_lna_gain+0x598>
0x27335:   4c 89 e7                              	mov rdi, r12
0x27338:   e8 45 fb ff ff                        	call 0x26e82 <nm131_demod_dagc_gain>
0x2733d:   49 89 c4                              	mov r12, rax
0x27340:   48 89 c7                              	mov rdi, rax
0x27343:   e8 95 6e ff ff                        	call 0x1e1dd <nmi_log10>
0x27348:   49 c1 ec 0f                           	shr r12, 0xf
0x2734c:   4d 63 ed                              	movsxd r13, r13d
0x2734f:   4d 69 ed b8 00 00 00                  	imul r13, r13, 0xb8
0x27356:   41 8b 95 00 00 00 00                  	mov edx, dword ptr [r13]
0x2735d:   81 ea 01 6e a0 05                     	sub edx, 0x5a06e01
0x27363:   81 fa 9f f9 56 00                     	cmp edx, 0x56f99f
0x27369:   0f 87 9a 00 00 00                     	ja 0x27409 <nm131_get_lna_gain+0x4ee>
0x2736f:   49 8d 4c 24 9c                        	lea rcx, [r12 - 0x64]
0x27374:   ba 04 01 00 00                        	mov edx, 0x104
0x27379:   48 83 f9 13                           	cmp rcx, 0x13
0x2737d:   0f 86 10 01 00 00                     	jbe 0x27493 <nm131_get_lna_gain+0x578>
0x27383:   49 8d 4c 24 88                        	lea rcx, [r12 - 0x78]
0x27388:   ba 8c 00 00 00                        	mov edx, 0x8c
0x2738d:   48 83 f9 0f                           	cmp rcx, 0xf
0x27391:   0f 86 fc 00 00 00                     	jbe 0x27493 <nm131_get_lna_gain+0x578>
0x27397:   49 8d 8c 24 78 ff ff ff               	lea rcx, [r12 - 0x88]
0x2739f:   b2 00                                 	mov dl, 0
0x273a1:   48 83 f9 0c                           	cmp rcx, 0xc ; "GNU"
0x273a5:   0f 86 e8 00 00 00                     	jbe 0x27493 <nm131_get_lna_gain+0x578>
0x273ab:   49 8d 8c 24 6b ff ff ff               	lea rcx, [r12 - 0x95]
0x273b3:   ba 38 ff ff ff                        	mov edx, 0xffffff38
0x273b8:   48 83 f9 09                           	cmp rcx, 9
0x273bc:   0f 86 d1 00 00 00                     	jbe 0x27493 <nm131_get_lna_gain+0x578>
0x273c2:   49 8d 8c 24 61 ff ff ff               	lea rcx, [r12 - 0x9f]
0x273ca:   ba 70 fe ff ff                        	mov edx, 0xfffffe70
0x273cf:   48 83 f9 05                           	cmp rcx, 5
0x273d3:   0f 86 ba 00 00 00                     	jbe 0x27493 <nm131_get_lna_gain+0x578>
0x273d9:   ba 44 fd ff ff                        	mov edx, 0xfffffd44
0x273de:   49 81 fc a4 00 00 00                  	cmp r12, 0xa4
0x273e5:   0f 87 a8 00 00 00                     	ja 0x27493 <nm131_get_lna_gain+0x578>
0x273eb:   0f b6 53 06                           	movzx edx, byte ptr [rbx + 6]
0x273ef:   8d 4a 10                              	lea ecx, [rdx + 0x10]
0x273f2:   80 f9 01                              	cmp cl, 1
0x273f5:   0f 86 85 00 00 00                     	jbe 0x27480 <nm131_get_lna_gain+0x565>
0x273fb:   80 fa ef                              	cmp dl, 0xef
0x273fe:   0f 85 8a 00 00 00                     	jne 0x2748e <nm131_get_lna_gain+0x573>
0x27404:   e9 7e 00 00 00                        	jmp 0x27487 <nm131_get_lna_gain+0x56c>
0x27409:   49 8d 4c 24 8f                        	lea rcx, [r12 - 0x71]
0x2740e:   ba 7c 01 00 00                        	mov edx, 0x17c
0x27413:   48 83 f9 1d                           	cmp rcx, 0x1d
0x27417:   76 7a                                 	jbe 0x27493 <nm131_get_lna_gain+0x578>
0x27419:   49 8d 8c 24 71 ff ff ff               	lea rcx, [r12 - 0x8f]
0x27421:   b2 4a                                 	mov dl, 0x4a
0x27423:   48 83 f9 21                           	cmp rcx, 0x21
0x27427:   76 6a                                 	jbe 0x27493 <nm131_get_lna_gain+0x578>
0x27429:   49 8d 8c 24 4f ff ff ff               	lea rcx, [r12 - 0xb1]
0x27431:   ba fa 00 00 00                        	mov edx, 0xfa
0x27436:   48 83 f9 1d                           	cmp rcx, 0x1d
0x2743a:   76 57                                 	jbe 0x27493 <nm131_get_lna_gain+0x578>
0x2743c:   49 8d 8c 24 31 ff ff ff               	lea rcx, [r12 - 0xcf]
0x27444:   b2 6e                                 	mov dl, 0x6e
0x27446:   48 83 f9 19                           	cmp rcx, 0x19
0x2744a:   76 47                                 	jbe 0x27493 <nm131_get_lna_gain+0x578>
0x2744c:   49 8d 8c 24 17 ff ff ff               	lea rcx, [r12 - 0xe9]
0x27454:   ba 10 ff ff ff                        	mov edx, 0xffffff10
0x27459:   48 83 f9 13                           	cmp rcx, 0x13
0x2745d:   76 34                                 	jbe 0x27493 <nm131_get_lna_gain+0x578>
0x2745f:   ba 0c fe ff ff                        	mov edx, 0xfffffe0c
0x27464:   49 81 fc fc 00 00 00                  	cmp r12, 0xfc
0x2746b:   77 26                                 	ja 0x27493 <nm131_get_lna_gain+0x578>
0x2746d:   0f b6 53 06                           	movzx edx, byte ptr [rbx + 6]
0x27471:   8d 4a 10                              	lea ecx, [rdx + 0x10]
0x27474:   80 f9 01                              	cmp cl, 1
0x27477:   76 07                                 	jbe 0x27480 <nm131_get_lna_gain+0x565>
0x27479:   80 fa ef                              	cmp dl, 0xef
0x2747c:   75 10                                 	jne 0x2748e <nm131_get_lna_gain+0x573>
0x2747e:   eb 07                                 	jmp 0x27487 <nm131_get_lna_gain+0x56c>
0x27480:   ba ae 01 00 00                        	mov edx, 0x1ae
0x27485:   eb 0c                                 	jmp 0x27493 <nm131_get_lna_gain+0x578>
0x27487:   ba 08 02 00 00                        	mov edx, 0x208
0x2748c:   eb 05                                 	jmp 0x27493 <nm131_get_lna_gain+0x578>
0x2748e:   ba 54 01 00 00                        	mov edx, 0x154
0x27493:   0f b7 73 02                           	movzx esi, word ptr [rbx + 2]
0x27497:   f7 de                                 	neg esi
0x27499:   66 2b 33                              	sub si, word ptr [rbx]
0x2749c:   8d 04 80                              	lea eax, [rax + rax*4]
0x2749f:   8d 0c 80                              	lea ecx, [rax + rax*4]
0x274a2:   89 f0                                 	mov eax, esi
0x274a4:   66 29 c8                              	sub ax, cx
0x274a7:   8d 14 10                              	lea edx, [rax + rdx]
0x274aa:   66 89 53 04                           	mov word ptr [rbx + 4], dx
0x274ae:   e9 05 02 00 00                        	jmp 0x276b8
0x274b3:   83 f8 06                              	cmp eax, 6
0x274b6:   74 1e                                 	je 0x274d6 <nm131_get_lna_gain+0x5bb>
0x274b8:   83 f8 08                              	cmp eax, 8
0x274bb:   74 19                                 	je 0x274d6 <nm131_get_lna_gain+0x5bb>
0x274bd:   83 f8 0c                              	cmp eax, 0xc ; "GNU"
0x274c0:   74 14                                 	je 0x274d6 <nm131_get_lna_gain+0x5bb>
0x274c2:   83 f8 0e                              	cmp eax, 0xe
0x274c5:   74 0f                                 	je 0x274d6 <nm131_get_lna_gain+0x5bb>
0x274c7:   83 f8 0f                              	cmp eax, 0xf
0x274ca:   74 0a                                 	je 0x274d6 <nm131_get_lna_gain+0x5bb>
0x274cc:   83 f8 10                              	cmp eax, 0x10
0x274cf:   90                                    	nop 
0x274d0:   0f 85 34 01 00 00                     	jne 0x2760a <nm131_get_lna_gain+0x6ef>
0x274d6:   4d 63 ed                              	movsxd r13, r13d
0x274d9:   4d 69 ed b8 00 00 00                  	imul r13, r13, 0xb8
0x274e0:   41 8b 85 00 00 00 00                  	mov eax, dword ptr [r13]
0x274e7:   3d bf e6 ce 07                        	cmp eax, 0x7cee6bf
0x274ec:   0f 86 98 00 00 00                     	jbe 0x2758a <nm131_get_lna_gain+0x66f>
0x274f2:   8d 90 40 19 31 f8                     	lea edx, [rax - 0x7cee6c0]
0x274f8:   81 fa ff 43 95 08                     	cmp edx, 0x89543ff
0x274fe:   77 0f                                 	ja 0x2750f <nm131_get_lna_gain+0x5f4>
0x27500:   80 7b 06 f1                           	cmp byte ptr [rbx + 6], 0xf1
0x27504:   0f 85 90 00 00 00                     	jne 0x2759a <nm131_get_lna_gain+0x67f>
0x2750a:   e9 83 00 00 00                        	jmp 0x27592 <nm131_get_lna_gain+0x677>
0x2750f:   8d 90 40 d5 9b ef                     	lea edx, [rax - 0x10642ac0]
0x27515:   81 fa bf 68 78 04                     	cmp edx, 0x47868bf
0x2751b:   77 0e                                 	ja 0x2752b <nm131_get_lna_gain+0x610>
0x2751d:   41 be 1a 04 00 00                     	mov r14d, 0x41a
0x27523:   80 7b 06 f1                           	cmp byte ptr [rbx + 6], 0xf1
0x27527:   75 79                                 	jne 0x275a2 <nm131_get_lna_gain+0x687>
0x27529:   eb 7d                                 	jmp 0x275a8 <nm131_get_lna_gain+0x68d>
0x2752b:   8d 90 80 6c 23 eb                     	lea edx, [rax - 0x14dc9380]
0x27531:   81 fa ff e0 f5 05                     	cmp edx, 0x5f5e0ff
0x27537:   77 0e                                 	ja 0x27547 <nm131_get_lna_gain+0x62c>
0x27539:   41 be e8 03 00 00                     	mov r14d, 0x3e8 ; "%("
0x2753f:   80 7b 06 f1                           	cmp byte ptr [rbx + 6], 0xf1
0x27543:   75 4d                                 	jne 0x27592 <nm131_get_lna_gain+0x677>
0x27545:   eb 61                                 	jmp 0x275a8 <nm131_get_lna_gain+0x68d>
0x27547:   8d 90 80 8b 2d e5                     	lea edx, [rax - 0x1ad27480]
0x2754d:   81 fa ff 0d 27 07                     	cmp edx, 0x7270dff
0x27553:   77 15                                 	ja 0x2756a <nm131_get_lna_gain+0x64f>
0x27555:   80 7b 06 f1                           	cmp byte ptr [rbx + 6], 0xf1
0x27559:   b8 e2 04 00 00                        	mov eax, 0x4e2
0x2755e:   41 be 4c 04 00 00                     	mov r14d, 0x44c
0x27564:   44 0f 45 f0                           	cmovne r14d, eax
0x27568:   eb 3e                                 	jmp 0x275a8 <nm131_get_lna_gain+0x68d>
0x2756a:   2d 80 82 f9 21                        	sub eax, 0x21f98280
0x2756f:   3d 7f d1 f0 08                        	cmp eax, 0x8f0d17f
0x27574:   77 0e                                 	ja 0x27584 <nm131_get_lna_gain+0x669>
0x27576:   41 be 46 05 00 00                     	mov r14d, 0x546
0x2757c:   80 7b 06 f1                           	cmp byte ptr [rbx + 6], 0xf1
0x27580:   75 26                                 	jne 0x275a8 <nm131_get_lna_gain+0x68d>
0x27582:   eb 1e                                 	jmp 0x275a2 <nm131_get_lna_gain+0x687>
0x27584:   80 7b 06 f1                           	cmp byte ptr [rbx + 6], 0xf1
0x27588:   74 10                                 	je 0x2759a <nm131_get_lna_gain+0x67f>
0x2758a:   41 be aa 05 00 00                     	mov r14d, 0x5aa
0x27590:   eb 16                                 	jmp 0x275a8 <nm131_get_lna_gain+0x68d>
0x27592:   41 be b0 04 00 00                     	mov r14d, 0x4b0
0x27598:   eb 0e                                 	jmp 0x275a8 <nm131_get_lna_gain+0x68d>
0x2759a:   41 be 14 05 00 00                     	mov r14d, 0x514
0x275a0:   eb 06                                 	jmp 0x275a8 <nm131_get_lna_gain+0x68d>
0x275a2:   41 be 7e 04 00 00                     	mov r14d, 0x47e
0x275a8:   4c 89 e7                              	mov rdi, r12
0x275ab:   e8 d2 f8 ff ff                        	call 0x26e82 <nm131_demod_dagc_gain>
0x275b0:   48 89 c7                              	mov rdi, rax
0x275b3:   e8 25 6c ff ff                        	call 0x1e1dd <nmi_log10>
0x275b8:   41 89 c5                              	mov r13d, eax
0x275bb:   be 64 01 00 00                        	mov esi, 0x164
0x275c0:   4c 89 e7                              	mov rdi, r12
0x275c3:   e8 18 f5 ff ff                        	call 0x26ae0 <rReg32>
0x275c8:   89 c7                                 	mov edi, eax
0x275ca:   c1 e7 0f                              	shl edi, 0xf
0x275cd:   89 ff                                 	mov edi, edi
0x275cf:   e8 09 6c ff ff                        	call 0x1e1dd <nmi_log10>
0x275d4:   0f b7 53 02                           	movzx edx, word ptr [rbx + 2]
0x275d8:   f7 da                                 	neg edx
0x275da:   66 2b 13                              	sub dx, word ptr [rbx]
0x275dd:   45 8d b4 16 ac e0 ff ff               	lea r14d, [r14 + rdx - 0x1f54]
0x275e5:   8d 04 80                              	lea eax, [rax + rax*4]
0x275e8:   8d 04 80                              	lea eax, [rax + rax*4]
0x275eb:   41 8d 04 06                           	lea eax, [r14 + rax]
0x275ef:   47 8d 6c ad 00                        	lea r13d, [r13 + r13*4]
0x275f4:   43 8d 54 ad 00                        	lea edx, [r13 + r13*4]
0x275f9:   41 89 c5                              	mov r13d, eax
0x275fc:   66 41 29 d5                           	sub r13w, dx
0x27600:   66 44 89 6b 04                        	mov word ptr [rbx + 4], r13w
0x27605:   e9 ae 00 00 00                        	jmp 0x276b8
0x2760a:   4d 63 ed                              	movsxd r13, r13d
0x2760d:   4d 69 ed b8 00 00 00                  	imul r13, r13, 0xb8
0x27614:   41 8b 85 00 00 00 00                  	mov eax, dword ptr [r13]
0x2761b:   41 bd b5 ff ff ff                     	mov r13d, 0xffffffb5
0x27621:   3d 3f 59 73 07                        	cmp eax, 0x773593f
0x27626:   76 68                                 	jbe 0x27690 <nm131_get_lna_gain+0x771>
0x27628:   8d 90 c0 a6 8c f8                     	lea edx, [rax - 0x7735940]
0x2762e:   41 b5 06                              	mov r13b, 6
0x27631:   81 fa 7f f1 91 10                     	cmp edx, 0x1091f17f
0x27637:   76 57                                 	jbe 0x27690 <nm131_get_lna_gain+0x771>
0x27639:   8d 90 40 b5 fa e7                     	lea edx, [rax - 0x18054ac0]
0x2763f:   81 fa bf 37 f4 09                     	cmp edx, 0x9f437bf
0x27645:   77 15                                 	ja 0x2765c <nm131_get_lna_gain+0x741>
0x27647:   80 7b 06 f1                           	cmp byte ptr [rbx + 6], 0xf1
0x2764b:   b8 9c ff ff ff                        	mov eax, 0xffffff9c
0x27650:   41 bd 38 ff ff ff                     	mov r13d, 0xffffff38
0x27656:   44 0f 45 e8                           	cmovne r13d, eax
0x2765a:   eb 34                                 	jmp 0x27690 <nm131_get_lna_gain+0x771>
0x2765c:   2d 80 82 f9 21                        	sub eax, 0x21f98280
0x27661:   3d 7f 2b 53 0b                        	cmp eax, 0xb532b7f
0x27666:   77 15                                 	ja 0x2767d <nm131_get_lna_gain+0x762>
0x27668:   80 7b 06 f1                           	cmp byte ptr [rbx + 6], 0xf1
0x2766c:   b8 e2 ff ff ff                        	mov eax, 0xffffffe2
0x27671:   41 bd 6a ff ff ff                     	mov r13d, 0xffffff6a
0x27677:   44 0f 45 e8                           	cmovne r13d, eax
0x2767b:   eb 13                                 	jmp 0x27690 <nm131_get_lna_gain+0x771>
0x2767d:   80 7b 06 f1                           	cmp byte ptr [rbx + 6], 0xf1
0x27681:   b8 32 00 00 00                        	mov eax, 0x32
0x27686:   41 bd ce ff ff ff                     	mov r13d, 0xffffffce
0x2768c:   44 0f 45 e8                           	cmovne r13d, eax
; data inside code section at 0x27690 -- 0x27691
0x27690:   4c                                                 |L               |
; function: nm120_rfli_track at 0x27691 -- 0x276c1
0x27691:   89 e7                                 	mov edi, esp
0x27693:   e8 ea f7 ff ff                        	call 0x26e82 <nm131_demod_dagc_gain>
0x27698:   48 89 c7                              	mov rdi, rax
0x2769b:   e8 3d 6b ff ff                        	call 0x1e1dd <nmi_log10>
0x276a0:   66 44 2b 6b 02                        	sub r13w, word ptr [rbx + 2]
0x276a5:   66 44 2b 2b                           	sub r13w, word ptr [rbx]
0x276a9:   8d 04 80                              	lea eax, [rax + rax*4]
0x276ac:   8d 04 80                              	lea eax, [rax + rax*4]
0x276af:   66 41 29 c5                           	sub r13w, ax
0x276b3:   66 44 89 6b 04                        	mov word ptr [rbx + 4], r13w
0x276b8:   5b                                    	pop rbx
0x276b9:   41 5c                                 	pop r12
0x276bb:   41 5d                                 	pop r13
0x276bd:   41 5e                                 	pop r14
0x276bf:   c9                                    	leave 
0x276c0:   c3                                    	ret 
; function: nm120_rfli_track at 0x276c1 -- 0x27823
0x276c1:   55                                    	push rbp
0x276c2:   48 89 e5                              	mov rbp, rsp
0x276c5:   41 54                                 	push r12
0x276c7:   53                                    	push rbx
0x276c8:   48 83 ec 10                           	sub rsp, 0x10
0x276cc:   e8 1f 75 01 00                        	call 0x3ebf0 <mcount>
0x276d1:   48 89 fb                              	mov rbx, rdi
0x276d4:   49 89 f4                              	mov r12, rsi
0x276d7:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x276da:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x276e1:   80 b8 00 00 00 00 00                  	cmp byte ptr [rax], 0
0x276e8:   0f 84 5d 01 00 00                     	je 0x2784b
0x276ee:   48 8d 75 e0                           	lea rsi, [rbp - 0x20]
0x276f2:   e8 24 f8 ff ff                        	call 0x26f1b <nm131_get_lna_gain>
0x276f7:   41 80 7c 24 04 00                     	cmp byte ptr [r12 + 4], 0
0x276fd:   74 2a                                 	je 0x27729 <nm120_rfli_track+0x68>
0x276ff:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x27704:   ba 00 80 00 00                        	mov edx, 0x8000
0x27709:   48 29 c2                              	sub rdx, rax
0x2770c:   0f b6 4b 10                           	movzx ecx, byte ptr [rbx + 0x10]
0x27710:   48 0f af d1                           	imul rdx, rcx
0x27714:   0f b6 4d e6                           	movzx ecx, byte ptr [rbp - 0x1a]
0x27718:   48 0f af c1                           	imul rax, rcx
0x2771c:   48 8d 04 02                           	lea rax, [rdx + rax]
0x27720:   48 c1 e8 0f                           	shr rax, 0xf
0x27724:   88 43 10                              	mov byte ptr [rbx + 0x10], al
0x27727:   eb 07                                 	jmp 0x27730 <nm120_rfli_track+0x6f>
0x27729:   0f b6 45 e6                           	movzx eax, byte ptr [rbp - 0x1a]
0x2772d:   88 43 10                              	mov byte ptr [rbx + 0x10], al
0x27730:   48 89 df                              	mov rdi, rbx
0x27733:   e8 4a f7 ff ff                        	call 0x26e82 <nm131_demod_dagc_gain>
0x27738:   41 80 7c 24 38 00                     	cmp byte ptr [r12 + 0x38], 0
0x2773e:   74 2a                                 	je 0x2776a <nm120_rfli_track+0xa9>
0x27740:   49 8b 54 24 40                        	mov rdx, qword ptr [r12 + 0x40]
0x27745:   89 c0                                 	mov eax, eax
0x27747:   48 0f af c2                           	imul rax, rdx
0x2774b:   b9 00 80 00 00                        	mov ecx, 0x8000
0x27750:   48 29 d1                              	sub rcx, rdx
0x27753:   48 89 ca                              	mov rdx, rcx
0x27756:   8b 4b 18                              	mov ecx, dword ptr [rbx + 0x18]
0x27759:   48 0f af d1                           	imul rdx, rcx
0x2775d:   48 01 d0                              	add rax, rdx
0x27760:   48 c1 e8 0f                           	shr rax, 0xf
0x27764:   48 89 43 18                           	mov qword ptr [rbx + 0x18], rax
0x27768:   eb 04                                 	jmp 0x2776e <nm120_rfli_track+0xad>
0x2776a:   48 89 43 18                           	mov qword ptr [rbx + 0x18], rax
0x2776e:   41 80 7c 24 10 00                     	cmp byte ptr [r12 + 0x10], 0
0x27774:   74 34                                 	je 0x277aa <nm120_rfli_track+0xe9>
0x27776:   0f b6 43 10                           	movzx eax, byte ptr [rbx + 0x10]
0x2777a:   41 3a 04 24                           	cmp al, byte ptr [r12]
0x2777e:   76 0f                                 	jbe 0x2778f <nm120_rfli_track+0xce>
0x27780:   49 8b 54 24 18                        	mov rdx, qword ptr [r12 + 0x18]
0x27785:   48 39 53 18                           	cmp qword ptr [rbx + 0x18], rdx
0x27789:   0f 87 84 00 00 00                     	ja 0x27813 <nm120_rfli_track+0x152>
0x2778f:   41 3a 44 24 01                        	cmp al, byte ptr [r12 + 1]
0x27794:   0f 83 9e 00 00 00                     	jae 0x27838
0x2779a:   49 8b 44 24 20                        	mov rax, qword ptr [r12 + 0x20]
0x2779f:   48 39 43 18                           	cmp qword ptr [rbx + 0x18], rax
0x277a3:   72 37                                 	jb 0x277dc <nm120_rfli_track+0x11b>
0x277a5:   e9 8e 00 00 00                        	jmp 0x27838
0x277aa:   80 7b 20 0c                           	cmp byte ptr [rbx + 0x20], 0xc ; "GNU"
0x277ae:   77 13                                 	ja 0x277c3 <nm120_rfli_track+0x102>
0x277b0:   0f b6 43 10                           	movzx eax, byte ptr [rbx + 0x10]
0x277b4:   41 3a 04 24                           	cmp al, byte ptr [r12]
0x277b8:   77 59                                 	ja 0x27813 <nm120_rfli_track+0x152>
0x277ba:   41 3a 44 24 01                        	cmp al, byte ptr [r12 + 1]
0x277bf:   72 1b                                 	jb 0x277dc <nm120_rfli_track+0x11b>
0x277c1:   eb 75                                 	jmp 0x27838
0x277c3:   0f b6 43 10                           	movzx eax, byte ptr [rbx + 0x10]
0x277c7:   41 3a 44 24 02                        	cmp al, byte ptr [r12 + 2]
0x277cc:   77 45                                 	ja 0x27813 <nm120_rfli_track+0x152>
0x277ce:   ba fe ff ff ff                        	mov edx, 0xfffffffe
0x277d3:   41 3a 44 24 03                        	cmp al, byte ptr [r12 + 3]
0x277d8:   72 07                                 	jb 0x277e1 <nm120_rfli_track+0x120>
0x277da:   eb 5c                                 	jmp 0x27838
0x277dc:   ba ff ff ff ff                        	mov edx, 0xffffffff
0x277e1:   83 fa fe                              	cmp edx, -2
0x277e4:   74 16                                 	je 0x277fc <nm120_rfli_track+0x13b>
0x277e6:   0f b6 43 20                           	movzx eax, byte ptr [rbx + 0x20]
0x277ea:   83 e8 01                              	sub eax, 1
0x277ed:   3c 02                                 	cmp al, 2
0x277ef:   ba 03 00 00 00                        	mov edx, 3
0x277f4:   0f 46 c2                              	cmovbe eax, edx
0x277f7:   88 43 20                              	mov byte ptr [rbx + 0x20], al
0x277fa:   eb 09                                 	jmp 0x27805 <nm120_rfli_track+0x144>
0x277fc:   41 0f b6 44 24 48                     	movzx eax, byte ptr [r12 + 0x48]
0x27802:   88 43 20                              	mov byte ptr [rbx + 0x20], al
0x27805:   0f b6 73 20                           	movzx esi, byte ptr [rbx + 0x20]
0x27809:   48 89 df                              	mov rdi, rbx
0x2780c:   e8 69 f0 ff ff                        	call 0x2687a <nm131_set_lna_gain2>
0x27811:   eb 38                                 	jmp 0x2784b
0x27813:   0f b6 73 20                           	movzx esi, byte ptr [rbx + 0x20]
0x27817:   83 c6 01                              	add esi, 1
0x2781a:   40 80 fe 0e                           	cmp sil, 0xe
0x2781e:   b8 0d 00 00 00                        	mov eax, 0xd ; "NU"
; data inside code section at 0x27823 -- 0x27824
0x27823:   0f                                                 |.               |
; function: wReg8Debug at 0x27824 -- 0x27854
; function: wReg8Debug at 0x27854 -- 0x2796b
0x27854:   55                                    	push rbp
0x27855:   48 89 e5                              	mov rbp, rsp
0x27858:   48 83 ec 20                           	sub rsp, 0x20
0x2785c:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x27860:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x27865:   4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x2786a:   4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x2786f:   e8 7c 73 01 00                        	call 0x3ebf0 <mcount>
0x27874:   49 89 fc                              	mov r12, rdi
0x27877:   89 f3                                 	mov ebx, esi
0x27879:   41 89 d5                              	mov r13d, edx
0x2787c:   44 0f b6 37                           	movzx r14d, byte ptr [rdi]
0x27880:   0f b6 d2                              	movzx edx, dl
0x27883:   40 0f b6 f6                           	movzx esi, sil
0x27887:   e8 ac e9 ff ff                        	call 0x26238 <wReg8>
0x2788c:   80 fb 34                              	cmp bl, 0x34
0x2788f:   75 56                                 	jne 0x278e7 <wReg8Debug+0x93>
0x27891:   49 63 c6                              	movsxd rax, r14d
0x27894:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2789b:   83 b8 00 00 00 00 01                  	cmp dword ptr [rax], 1
0x278a2:   77 2c                                 	ja 0x278d0 <wReg8Debug+0x7c>
0x278a4:   41 80 fd ef                           	cmp r13b, 0xef
0x278a8:   76 0f                                 	jbe 0x278b9 <wReg8Debug+0x65>
0x278aa:   41 f7 d5                              	not r13d
0x278ad:   44 88 a8 00 00 00 00                  	mov byte ptr [rax], r13b
0x278b4:   e9 d2 00 00 00                        	jmp 0x2798b
0x278b9:   4d 63 f6                              	movsxd r14, r14d
0x278bc:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x278c3:   41 c6 86 00 00 00 00 00               	mov byte ptr [r14], 0
0x278cb:   e9 bb 00 00 00                        	jmp 0x2798b
0x278d0:   4d 63 f6                              	movsxd r14, r14d
0x278d3:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x278da:   41 c6 86 00 00 00 00 00               	mov byte ptr [r14], 0
0x278e2:   e9 a4 00 00 00                        	jmp 0x2798b
0x278e7:   80 fb 35                              	cmp bl, 0x35
0x278ea:   0f 85 85 00 00 00                     	jne 0x27975
0x278f0:   49 63 c6                              	movsxd rax, r14d
0x278f3:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x278fa:   83 b8 00 00 00 00 01                  	cmp dword ptr [rax], 1
0x27901:   77 5e                                 	ja 0x27961 <wReg8Debug+0x10d>
0x27903:   41 8d 45 b0                           	lea eax, [r13 - 0x50]
0x27907:   3c 0f                                 	cmp al, 0xf
0x27909:   77 42                                 	ja 0x2794d <wReg8Debug+0xf9>
0x2790b:   be 7c 02 00 00                        	mov esi, 0x27c
0x27910:   4c 89 e7                              	mov rdi, r12
0x27913:   e8 c8 f1 ff ff                        	call 0x26ae0 <rReg32>
0x27918:   3d 18 18 00 00                        	cmp eax, 0x1818
0x2791d:   75 13                                 	jne 0x27932 <wReg8Debug+0xde>
0x2791f:   49 63 c6                              	movsxd rax, r14d
0x27922:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27929:   c6 80 00 00 00 00 10                  	mov byte ptr [rax], 0x10
0x27930:   eb 59                                 	jmp 0x2798b
0x27932:   4d 63 f6                              	movsxd r14, r14d
0x27935:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x2793c:   b8 5f 00 00 00                        	mov eax, 0x5f
0x27941:   44 28 e8                              	sub al, r13b
0x27944:   41 88 86 00 00 00 00                  	mov byte ptr [r14], al
0x2794b:   eb 3e                                 	jmp 0x2798b
0x2794d:   4d 63 f6                              	movsxd r14, r14d
0x27950:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x27957:   41 c6 86 00 00 00 00 00               	mov byte ptr [r14], 0
0x2795f:   eb 2a                                 	jmp 0x2798b
0x27961:   4d 63 f6                              	movsxd r14, r14d
0x27964:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
; data inside code section at 0x2796b -- 0x27970
0x2796b:   41 c6 86 00 00                                     |A....           |
; function: nm131_adec_get_rssi at 0x27970 -- 0x279a0
0x27970:   00 00                                 	add byte ptr [rax], al
0x27972:   00 eb                                 	add bl, ch
; data inside code section at 0x27974 -- 0x27975
0x27974:   16                                                 |.               |
0x27975:   80 fb 05                              	cmp bl, 5
0x27978:   75 11                                 	jne 0x2798b <nm131_adec_get_rssi+0x1b>
0x2797a:   4d 63 f6                              	movsxd r14, r14d
0x2797d:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x27984:   45 88 ae 00 00 00 00                  	mov byte ptr [r14], r13b
0x2798b:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x2798f:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x27994:   4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x27999:   4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x2799e:   c9                                    	leave 
0x2799f:   c3                                    	ret 
; function: nm131_adec_get_rssi at 0x279a0 -- 0x27a5d
0x279a0:   55                                    	push rbp
0x279a1:   48 89 e5                              	mov rbp, rsp
0x279a4:   48 83 ec 30                           	sub rsp, 0x30
0x279a8:   48 89 5d e0                           	mov qword ptr [rbp - 0x20], rbx
0x279ac:   4c 89 65 e8                           	mov qword ptr [rbp - 0x18], r12
0x279b0:   4c 89 6d f0                           	mov qword ptr [rbp - 0x10], r13
0x279b4:   4c 89 75 f8                           	mov qword ptr [rbp - 8], r14
0x279b8:   e8 33 72 01 00                        	call 0x3ebf0 <mcount>
0x279bd:   48 89 fb                              	mov rbx, rdi
0x279c0:   44 0f b6 37                           	movzx r14d, byte ptr [rdi]
0x279c4:   be 4c 02 00 00                        	mov esi, 0x24c
0x279c9:   e8 12 f1 ff ff                        	call 0x26ae0 <rReg32>
0x279ce:   41 89 c4                              	mov r12d, eax
0x279d1:   89 c1                                 	mov ecx, eax
0x279d3:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x279da:   be 40 00 00 00                        	mov esi, 0x40
0x279df:   48 89 df                              	mov rdi, rbx
0x279e2:   b8 00 00 00 00                        	mov eax, 0
0x279e7:   e8 83 e7 ff ff                        	call 0x2616f <nmi_debug>
0x279ec:   4c 89 e7                              	mov rdi, r12
0x279ef:   48 c1 e7 22                           	shl rdi, 0x22
0x279f3:   48 c1 ef 27                           	shr rdi, 0x27
0x279f7:   e8 e1 67 ff ff                        	call 0x1e1dd <nmi_log10>
0x279fc:   41 89 c5                              	mov r13d, eax
0x279ff:   48 89 df                              	mov rdi, rbx
0x27a02:   e8 7b f4 ff ff                        	call 0x26e82 <nm131_demod_dagc_gain>
0x27a07:   48 89 c7                              	mov rdi, rax
0x27a0a:   e8 ce 67 ff ff                        	call 0x1e1dd <nmi_log10>
0x27a0f:   41 89 c4                              	mov r12d, eax
0x27a12:   48 8d 75 d0                           	lea rsi, [rbp - 0x30]
0x27a16:   48 89 df                              	mov rdi, rbx
0x27a19:   e8 fd f4 ff ff                        	call 0x26f1b <nm131_get_lna_gain>
0x27a1e:   0f b7 45 d2                           	movzx eax, word ptr [rbp - 0x2e]
0x27a22:   f7 d8                                 	neg eax
0x27a24:   66 2b 45 d0                           	sub ax, word ptr [rbp - 0x30]
0x27a28:   66 05 88 2c                           	add ax, 0x2c88
0x27a2c:   47 8d 24 a4                           	lea r12d, [r12 + r12*4]
0x27a30:   47 8d 24 a4                           	lea r12d, [r12 + r12*4]
0x27a34:   66 44 29 e0                           	sub ax, r12w
0x27a38:   47 8d 6c ad 00                        	lea r13d, [r13 + r13*4]
0x27a3d:   47 8d 6c ad 00                        	lea r13d, [r13 + r13*4]
0x27a42:   66 44 29 e8                           	sub ax, r13w
0x27a46:   ba 00 00 00 00                        	mov edx, 0
0x27a4b:   0f 48 c2                              	cmovs eax, edx
0x27a4e:   66 3d 9c 31                           	cmp ax, 0x319c
0x27a52:   ba 9c 31 00 00                        	mov edx, 0x319c
0x27a57:   0f 4f c2                              	cmovg eax, edx
0x27a5a:   4d 63 f6                              	movsxd r14, r14d
; data inside code section at 0x27a5d -- 0x27a5f
0x27a5d:   4d 69                                              |Mi              |
; function: nm131_get_chipid at 0x27a5f -- 0x27a8f
0x27a5f:   f6 b8 00 00 00 41                     	idiv byte ptr [rax + 0x41000000]
0x27a65:   81 be 00 00 00 00 00 d8 b8 05         	cmp dword ptr [rsi], 0x5b8d800
0x27a6f:   75 0c                                 	jne 0x27a7d <nm131_get_chipid+0x1e>
0x27a71:   66 3d a3 06                           	cmp ax, 0x6a3
0x27a75:   ba 00 00 00 00                        	mov edx, 0
0x27a7a:   0f 4e c2                              	cmovle eax, edx
0x27a7d:   48 8b 5d e0                           	mov rbx, qword ptr [rbp - 0x20]
0x27a81:   4c 8b 65 e8                           	mov r12, qword ptr [rbp - 0x18]
0x27a85:   4c 8b 6d f0                           	mov r13, qword ptr [rbp - 0x10]
0x27a89:   4c 8b 75 f8                           	mov r14, qword ptr [rbp - 8]
0x27a8d:   c9                                    	leave 
0x27a8e:   c3                                    	ret 
; function: nm131_get_chipid at 0x27a8f -- 0x27ab8
0x27a8f:   55                                    	push rbp
0x27a90:   48 89 e5                              	mov rbp, rsp
0x27a93:   48 83 ec 10                           	sub rsp, 0x10
0x27a97:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x27a9b:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x27aa0:   e8 4b 71 01 00                        	call 0x3ebf0 <mcount>
0x27aa5:   48 89 fb                              	mov rbx, rdi
0x27aa8:   be fc 03 00 00                        	mov esi, 0x3fc
0x27aad:   e8 2e f0 ff ff                        	call 0x26ae0 <rReg32>
0x27ab2:   41 89 c4                              	mov r12d, eax
0x27ab5:   48 89 df                              	mov rdi, rbx
; data inside code section at 0x27ab8 -- 0x27ab9
0x27ab8:   e8                                                 |.               |
; function: wRegBurst at 0x27ab9 -- 0x27aba
0x27ab9:   f8                                    	clc 
; data inside code section at 0x27aba -- 0x27abc
0x27aba:   66 ff                                              |f.              |
; function: function_27abc at 0x27abc -- 0x27ae9
0x27abc:   ff 45 89                              	inc dword ptr [rbp - 0x77]
0x27abf:   e0 89                                 	loopne 0x27a4a
0x27ac1:   c1 48 c7 c2                           	ror dword ptr [rax - 0x39], -0x3e
0x27ac5:   00 00                                 	add byte ptr [rax], al
0x27ac7:   00 00                                 	add byte ptr [rax], al
0x27ac9:   be 10 00 00 00                        	mov esi, 0x10
0x27ace:   48 89 df                              	mov rdi, rbx
0x27ad1:   b8 00 00 00 00                        	mov eax, 0
0x27ad6:   e8 94 e6 ff ff                        	call 0x2616f <nmi_debug>
0x27adb:   44 89 e0                              	mov eax, r12d
0x27ade:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x27ae2:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x27ae7:   c9                                    	leave 
0x27ae8:   c3                                    	ret 
; function: wRegBurst at 0x27ae9 -- 0x27c85
0x27ae9:   55                                    	push rbp
0x27aea:   48 89 e5                              	mov rbp, rsp
0x27aed:   41 57                                 	push r15
0x27aef:   41 56                                 	push r14
0x27af1:   41 55                                 	push r13
0x27af3:   41 54                                 	push r12
0x27af5:   53                                    	push rbx
0x27af6:   48 81 ec 38 01 00 00                  	sub rsp, 0x138
0x27afd:   e8 ee 70 01 00                        	call 0x3ebf0 <mcount>
0x27b02:   49 89 fe                              	mov r14, rdi
0x27b05:   41 89 f5                              	mov r13d, esi
0x27b08:   48 89 95 b0 fe ff ff                  	mov qword ptr [rbp - 0x150], rdx
0x27b0f:   41 89 cc                              	mov r12d, ecx
0x27b12:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x27b1b:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x27b1f:   31 c0                                 	xor eax, eax
0x27b21:   81 f9 00 04 00 00                     	cmp ecx, 0x400
0x27b27:   7e 16                                 	jle 0x27b3f <wRegBurst+0x56>
0x27b29:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x27b30:   be 02 00 00 00                        	mov esi, 2
0x27b35:   e8 35 e6 ff ff                        	call 0x2616f <nmi_debug>
0x27b3a:   e9 51 01 00 00                        	jmp 0x27c90
0x27b3f:   83 fe 36                              	cmp esi, 0x36
0x27b42:   77 42                                 	ja 0x27b86 <wRegBurst+0x9d>
0x27b44:   43 8d 04 2c                           	lea eax, [r12 + r13]
0x27b48:   83 f8 36                              	cmp eax, 0x36
0x27b4b:   76 39                                 	jbe 0x27b86 <wRegBurst+0x9d>
0x27b4d:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x27b50:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27b57:   83 b8 00 00 00 00 00                  	cmp dword ptr [rax], 0
0x27b5e:   74 14                                 	je 0x27b74 <wRegBurst+0x8b>
0x27b60:   b8 36 00 00 00                        	mov eax, 0x36
0x27b65:   29 f0                                 	sub eax, esi
0x27b67:   48 8b 95 b0 fe ff ff                  	mov rdx, qword ptr [rbp - 0x150]
0x27b6e:   80 0c 02 80                           	or byte ptr [rdx + rax], 0x80
0x27b72:   eb 12                                 	jmp 0x27b86 <wRegBurst+0x9d>
0x27b74:   b8 36 00 00 00                        	mov eax, 0x36
0x27b79:   29 f0                                 	sub eax, esi
0x27b7b:   48 8b 95 b0 fe ff ff                  	mov rdx, qword ptr [rbp - 0x150]
0x27b82:   80 24 02 7f                           	and byte ptr [rdx + rax], 0x7f
0x27b86:   41 0f b6 06                           	movzx eax, byte ptr [r14]
0x27b8a:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27b91:   48 8b 80 00 00 00 00                  	mov rax, qword ptr [rax]
0x27b98:   c7 85 bc fe ff ff 01 00 00 00         	mov dword ptr [rbp - 0x144], 1
0x27ba2:   48 85 c0                              	test rax, rax
0x27ba5:   74 22                                 	je 0x27bc9 <wRegBurst+0xe0>
0x27ba7:   ff d0                                 	call rax
0x27ba9:   83 e8 02                              	sub eax, 2
0x27bac:   89 85 bc fe ff ff                     	mov dword ptr [rbp - 0x144], eax
0x27bb2:   3d 01 01 00 00                        	cmp eax, 0x101
0x27bb7:   b8 00 01 00 00                        	mov eax, 0x100
0x27bbc:   0f 42 85 bc fe ff ff                  	cmovb eax, dword ptr [rbp - 0x144]
0x27bc3:   89 85 bc fe ff ff                     	mov dword ptr [rbp - 0x144], eax
0x27bc9:   45 85 e4                              	test r12d, r12d
0x27bcc:   0f 8e be 00 00 00                     	jle 0x27c90
0x27bd2:   41 bf 00 00 00 00                     	mov r15d, 0
0x27bd8:   48 8d 85 c0 fe ff ff                  	lea rax, [rbp - 0x140]
0x27bdf:   48 83 c0 02                           	add rax, 2
0x27be3:   48 89 85 a8 fe ff ff                  	mov qword ptr [rbp - 0x158], rax
0x27bea:   44 3b a5 bc fe ff ff                  	cmp r12d, dword ptr [rbp - 0x144]
0x27bf1:   8b 9d bc fe ff ff                     	mov ebx, dword ptr [rbp - 0x144]
0x27bf7:   41 0f 46 dc                           	cmovbe ebx, r12d
0x27bfb:   44 89 e8                              	mov eax, r13d
0x27bfe:   c1 e8 08                              	shr eax, 8
0x27c01:   88 85 c0 fe ff ff                     	mov byte ptr [rbp - 0x140], al
0x27c07:   44 88 ad c1 fe ff ff                  	mov byte ptr [rbp - 0x13f], r13b
0x27c0e:   89 da                                 	mov edx, ebx
0x27c10:   49 63 f7                              	movsxd rsi, r15d
0x27c13:   48 03 b5 b0 fe ff ff                  	add rsi, qword ptr [rbp - 0x150]
0x27c1a:   48 8b bd a8 fe ff ff                  	mov rdi, qword ptr [rbp - 0x158]
0x27c21:   e8 42 6f 01 00                        	call 0x3eb68 <memcpy>
0x27c26:   41 0f b6 06                           	movzx eax, byte ptr [r14]
0x27c2a:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27c31:   8d 4b 02                              	lea ecx, [rbx + 2]
0x27c34:   0f b6 b0 00 00 00 00                  	movzx esi, byte ptr [rax]
0x27c3b:   49 8b 7e 08                           	mov rdi, qword ptr [r14 + 8]
0x27c3f:   48 8d 95 c0 fe ff ff                  	lea rdx, [rbp - 0x140]
0x27c46:   ff 90 00 00 00 00                     	call qword ptr [rax]
0x27c4c:   85 c0                                 	test eax, eax
0x27c4e:   79 2d                                 	jns 0x27c7d <wRegBurst+0x194>
0x27c50:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x27c57:   be 02 00 00 00                        	mov esi, 2
0x27c5c:   4c 89 f7                              	mov rdi, r14
0x27c5f:   b8 00 00 00 00                        	mov eax, 0
0x27c64:   e8 06 e5 ff ff                        	call 0x2616f <nmi_debug>
0x27c69:   41 0f b6 06                           	movzx eax, byte ptr [r14]
0x27c6d:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27c74:   c6 80 00 00 00 00 01                  	mov byte ptr [rax], 1
0x27c7b:   eb 13                                 	jmp 0x27c90
0x27c7d:   41 29 dc                              	sub r12d, ebx
0x27c80:   45 85 e4                              	test r12d, r12d
0x27c83:   7e 0b                                 	jle 0x27c90
; data inside code section at 0x27c85 -- 0x27c86
0x27c85:   41                                                 |A               |
; function: wReg32 at 0x27c86 -- 0x27cb6
0x27c86:   01 dd                                 	add ebp, ebx
0x27c88:   41 01 df                              	add r15d, ebx
0x27c8b:   e9 5a ff ff ff                        	jmp 0x27bea
0x27c90:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x27c94:   65 48 33 14 25 28 00 00 00            	xor rdx, qword ptr gs:[0x28]
0x27c9d:   74 05                                 	je 0x27ca4 <wReg32+0x1e>
0x27c9f:   e8 04 6f 01 00                        	call 0x3eba8 <__stack_chk_fail>
0x27ca4:   48 81 c4 38 01 00 00                  	add rsp, 0x138
0x27cab:   5b                                    	pop rbx
0x27cac:   41 5c                                 	pop r12
0x27cae:   41 5d                                 	pop r13
0x27cb0:   41 5e                                 	pop r14
0x27cb2:   41 5f                                 	pop r15
0x27cb4:   c9                                    	leave 
0x27cb5:   c3                                    	ret 
; function: wReg32 at 0x27cb6 -- 0x27d64
0x27cb6:   55                                    	push rbp
0x27cb7:   48 89 e5                              	mov rbp, rsp
0x27cba:   53                                    	push rbx
0x27cbb:   48 83 ec 18                           	sub rsp, 0x18
0x27cbf:   e8 2c 6f 01 00                        	call 0x3ebf0 <mcount>
0x27cc4:   48 89 fb                              	mov rbx, rdi
0x27cc7:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x27cca:   48 63 c8                              	movsxd rcx, eax
0x27ccd:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x27cd4:   48 83 b9 00 00 00 00 00               	cmp qword ptr [rcx], 0
0x27cdc:   74 1d                                 	je 0x27cfb <wReg32+0x45>
0x27cde:   48 63 c8                              	movsxd rcx, eax
0x27ce1:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x27ce8:   48 83 b9 00 00 00 00 00               	cmp qword ptr [rcx], 0
0x27cf0:   74 09                                 	je 0x27cfb <wReg32+0x45>
0x27cf2:   80 b9 00 00 00 00 00                  	cmp byte ptr [rcx], 0
0x27cf9:   74 1b                                 	je 0x27d16 <wReg32+0x60>
0x27cfb:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x27d02:   be 02 00 00 00                        	mov esi, 2
0x27d07:   48 89 df                              	mov rdi, rbx
0x27d0a:   b8 00 00 00 00                        	mov eax, 0
0x27d0f:   e8 5b e4 ff ff                        	call 0x2616f <nmi_debug>
0x27d14:   eb 78                                 	jmp 0x27d8e
0x27d16:   89 f0                                 	mov eax, esi
0x27d18:   66 c1 e8 08                           	shr ax, 8
0x27d1c:   88 45 e0                              	mov byte ptr [rbp - 0x20], al
0x27d1f:   40 88 75 e1                           	mov byte ptr [rbp - 0x1f], sil
0x27d23:   88 55 e2                              	mov byte ptr [rbp - 0x1e], dl
0x27d26:   89 d0                                 	mov eax, edx
0x27d28:   c1 e8 08                              	shr eax, 8
0x27d2b:   88 45 e3                              	mov byte ptr [rbp - 0x1d], al
0x27d2e:   89 d0                                 	mov eax, edx
0x27d30:   c1 e8 10                              	shr eax, 0x10
0x27d33:   88 45 e4                              	mov byte ptr [rbp - 0x1c], al
0x27d36:   c1 ea 18                              	shr edx, 0x18
0x27d39:   88 55 e5                              	mov byte ptr [rbp - 0x1b], dl
0x27d3c:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x27d3f:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27d46:   48 8d 55 e0                           	lea rdx, [rbp - 0x20]
0x27d4a:   0f b6 b0 00 00 00 00                  	movzx esi, byte ptr [rax]
0x27d51:   48 8b 7f 08                           	mov rdi, qword ptr [rdi + 8]
0x27d55:   b9 06 00 00 00                        	mov ecx, 6
0x27d5a:   ff 90 00 00 00 00                     	call qword ptr [rax]
0x27d60:   85 c0                                 	test eax, eax
0x27d62:   79 2a                                 	jns 0x27d8e
; data inside code section at 0x27d64 -- 0x27d65
0x27d64:   48                                                 |H               |
; function: nm131_fm_overmod at 0x27d65 -- 0x27d95
0x27d65:   c7 c2 00 00 00 00                     	mov edx, 0
0x27d6b:   be 02 00 00 00                        	mov esi, 2
0x27d70:   48 89 df                              	mov rdi, rbx
0x27d73:   b8 00 00 00 00                        	mov eax, 0
0x27d78:   e8 f2 e3 ff ff                        	call 0x2616f <nmi_debug>
0x27d7d:   0f b6 03                              	movzx eax, byte ptr [rbx]
0x27d80:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27d87:   c6 80 00 00 00 00 01                  	mov byte ptr [rax], 1
0x27d8e:   48 83 c4 18                           	add rsp, 0x18
0x27d92:   5b                                    	pop rbx
0x27d93:   c9                                    	leave 
0x27d94:   c3                                    	ret 
; function: nm131_fm_overmod at 0x27d95 -- 0x27eb2
0x27d95:   55                                    	push rbp
0x27d96:   48 89 e5                              	mov rbp, rsp
0x27d99:   48 83 ec 20                           	sub rsp, 0x20
0x27d9d:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x27da1:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x27da5:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x27da9:   e8 42 6e 01 00                        	call 0x3ebf0 <mcount>
0x27dae:   49 89 fd                              	mov r13, rdi
0x27db1:   41 89 f4                              	mov r12d, esi
0x27db4:   0f b6 1f                              	movzx ebx, byte ptr [rdi]
0x27db7:   48 63 c3                              	movsxd rax, ebx
0x27dba:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27dc1:   40 38 b0 00 00 00 00                  	cmp byte ptr [rax], sil
0x27dc8:   0f 84 07 01 00 00                     	je 0x27ed5
0x27dce:   48 63 c3                              	movsxd rax, ebx
0x27dd1:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27dd8:   83 b8 00 00 00 00 02                  	cmp dword ptr [rax], 2
0x27ddf:   75 16                                 	jne 0x27df7 <nm131_fm_overmod+0x62>
0x27de1:   ba 02 00 00 00                        	mov edx, 2
0x27de6:   be 50 02 00 00                        	mov esi, 0x250
0x27deb:   e8 c6 fe ff ff                        	call 0x27cb6 <wReg32>
0x27df0:   45 84 e4                              	test r12b, r12b
0x27df3:   74 6f                                 	je 0x27e64 <nm131_fm_overmod+0xcf>
0x27df5:   eb 59                                 	jmp 0x27e50 <nm131_fm_overmod+0xbb>
0x27df7:   40 84 f6                              	test sil, sil
0x27dfa:   74 11                                 	je 0x27e0d <nm131_fm_overmod+0x78>
0x27dfc:   ba 04 00 00 00                        	mov edx, 4
0x27e01:   be 50 02 00 00                        	mov esi, 0x250
0x27e06:   e8 ab fe ff ff                        	call 0x27cb6 <wReg32>
0x27e0b:   eb 43                                 	jmp 0x27e50 <nm131_fm_overmod+0xbb>
0x27e0d:   48 63 c3                              	movsxd rax, ebx
0x27e10:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27e17:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x27e1d:   0f b6 90 00 00 00 00                  	movzx edx, byte ptr [rax]
0x27e24:   85 d2                                 	test edx, edx
0x27e26:   75 19                                 	jne 0x27e41 <nm131_fm_overmod+0xac>
0x27e28:   48 63 c3                              	movsxd rax, ebx
0x27e2b:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27e32:   80 b8 00 00 00 00 01                  	cmp byte ptr [rax], 1
0x27e39:   b8 02 00 00 00                        	mov eax, 2
0x27e3e:   0f 44 d0                              	cmove edx, eax
0x27e41:   be 50 02 00 00                        	mov esi, 0x250
0x27e46:   4c 89 ef                              	mov rdi, r13
0x27e49:   e8 68 fe ff ff                        	call 0x27cb6 <wReg32>
0x27e4e:   eb 14                                 	jmp 0x27e64 <nm131_fm_overmod+0xcf>
0x27e50:   ba 0b 0b 00 00                        	mov edx, 0xb0b
0x27e55:   be 7c 02 00 00                        	mov esi, 0x27c
0x27e5a:   4c 89 ef                              	mov rdi, r13
0x27e5d:   e8 54 fe ff ff                        	call 0x27cb6 <wReg32>
0x27e62:   eb 60                                 	jmp 0x27ec4
0x27e64:   48 63 c3                              	movsxd rax, ebx
0x27e67:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27e6e:   83 b8 00 00 00 00 01                  	cmp dword ptr [rax], 1
0x27e75:   77 3b                                 	ja 0x27eb2 <nm131_fm_overmod+0x11b>
0x27e77:   48 63 c3                              	movsxd rax, ebx
0x27e7a:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27e81:   80 b8 00 00 00 00 10                  	cmp byte ptr [rax], 0x10
0x27e88:   75 14                                 	jne 0x27e9e <nm131_fm_overmod+0x109>
0x27e8a:   ba 18 18 00 00                        	mov edx, 0x1818
0x27e8f:   be 7c 02 00 00                        	mov esi, 0x27c
0x27e94:   4c 89 ef                              	mov rdi, r13
0x27e97:   e8 1a fe ff ff                        	call 0x27cb6 <wReg32>
0x27e9c:   eb 26                                 	jmp 0x27ec4
0x27e9e:   ba 10 10 00 00                        	mov edx, 0x1010
0x27ea3:   be 7c 02 00 00                        	mov esi, 0x27c
0x27ea8:   4c 89 ef                              	mov rdi, r13
0x27eab:   e8 06 fe ff ff                        	call 0x27cb6 <wReg32>
0x27eb0:   eb 12                                 	jmp 0x27ec4
; data inside code section at 0x27eb2 -- 0x27eb3
0x27eb2:   ba                                                 |.               |
; function: nm120_nolock_reset at 0x27eb3 -- 0x27ee3
0x27eb3:   10 10                                 	adc byte ptr [rax], dl
0x27eb5:   00 00                                 	add byte ptr [rax], al
0x27eb7:   be 7c 02 00 00                        	mov esi, 0x27c
0x27ebc:   4c 89 ef                              	mov rdi, r13
0x27ebf:   e8 f2 fd ff ff                        	call 0x27cb6 <wReg32>
0x27ec4:   48 63 db                              	movsxd rbx, ebx
0x27ec7:   48 69 db b8 00 00 00                  	imul rbx, rbx, 0xb8
0x27ece:   44 88 a3 00 00 00 00                  	mov byte ptr [rbx], r12b
0x27ed5:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x27ed9:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x27edd:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x27ee1:   c9                                    	leave 
0x27ee2:   c3                                    	ret 
; function: nm120_nolock_reset at 0x27ee3 -- 0x27f3a
0x27ee3:   55                                    	push rbp
0x27ee4:   48 89 e5                              	mov rbp, rsp
0x27ee7:   41 54                                 	push r12
0x27ee9:   53                                    	push rbx
0x27eea:   e8 01 6d 01 00                        	call 0x3ebf0 <mcount>
0x27eef:   48 89 fb                              	mov rbx, rdi
0x27ef2:   be 04 01 00 00                        	mov esi, 0x104
0x27ef7:   e8 e4 eb ff ff                        	call 0x26ae0 <rReg32>
0x27efc:   41 89 c4                              	mov r12d, eax
0x27eff:   41 83 e4 df                           	and r12d, 0xffffffdf
0x27f03:   44 89 e2                              	mov edx, r12d
0x27f06:   be 04 01 00 00                        	mov esi, 0x104
0x27f0b:   48 89 df                              	mov rdi, rbx
0x27f0e:   e8 a3 fd ff ff                        	call 0x27cb6 <wReg32>
0x27f13:   be 0a 00 00 00                        	mov esi, 0xa
0x27f18:   48 89 df                              	mov rdi, rbx
0x27f1b:   e8 70 62 ff ff                        	call 0x1e190 <nmi_delay>
0x27f20:   44 89 e2                              	mov edx, r12d
0x27f23:   83 ca 20                              	or edx, 0x20
0x27f26:   be 04 01 00 00                        	mov esi, 0x104
0x27f2b:   48 89 df                              	mov rdi, rbx
0x27f2e:   e8 83 fd ff ff                        	call 0x27cb6 <wReg32>
0x27f33:   41 83 cc 30                           	or r12d, 0x30
0x27f37:   44 89 e2                              	mov edx, r12d
; data inside code section at 0x27f3a -- 0x27f3c
0x27f3a:   be 04                                              |..              |
; function: nm131_set_mute at 0x27f3c -- 0x27f45
0x27f3c:   01 00                                 	add dword ptr [rax], eax
0x27f3e:   00 48 89                              	add byte ptr [rax - 0x77], cl
0x27f41:   df e8                                 	fucomip st(0)
0x27f43:   6f                                    	outsd dx, dword ptr [rsi]
0x27f44:   fd                                    	std 
; data inside code section at 0x27f45 -- 0x27f47
0x27f45:   ff ff                                              |..              |
; function: function_27f47 at 0x27f47 -- 0x27f6c
0x27f47:   be 0a 00 00 00                        	mov esi, 0xa
0x27f4c:   48 89 df                              	mov rdi, rbx
0x27f4f:   e8 3c 62 ff ff                        	call 0x1e190 <nmi_delay>
0x27f54:   44 89 e2                              	mov edx, r12d
0x27f57:   83 e2 ef                              	and edx, 0xffffffef
0x27f5a:   be 04 01 00 00                        	mov esi, 0x104
0x27f5f:   48 89 df                              	mov rdi, rbx
0x27f62:   e8 4f fd ff ff                        	call 0x27cb6 <wReg32>
0x27f67:   5b                                    	pop rbx
0x27f68:   41 5c                                 	pop r12
0x27f6a:   c9                                    	leave 
0x27f6b:   c3                                    	ret 
; function: nm131_set_mute at 0x27f6c -- 0x27fd4
0x27f6c:   55                                    	push rbp
0x27f6d:   48 89 e5                              	mov rbp, rsp
0x27f70:   48 83 ec 20                           	sub rsp, 0x20
0x27f74:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x27f78:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x27f7c:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x27f80:   e8 6b 6c 01 00                        	call 0x3ebf0 <mcount>
0x27f85:   48 89 fb                              	mov rbx, rdi
0x27f88:   41 89 f5                              	mov r13d, esi
0x27f8b:   44 0f b6 27                           	movzx r12d, byte ptr [rdi]
0x27f8f:   49 63 c4                              	movsxd rax, r12d
0x27f92:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27f99:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x27f9f:   83 f8 01                              	cmp eax, 1
0x27fa2:   76 05                                 	jbe 0x27fa9 <nm131_set_mute+0x3d>
0x27fa4:   83 f8 04                              	cmp eax, 4
0x27fa7:   75 4d                                 	jne 0x27ff6
0x27fa9:   49 63 c4                              	movsxd rax, r12d
0x27fac:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x27fb3:   44 38 a8 00 00 00 00                  	cmp byte ptr [rax], r13b
0x27fba:   74 3a                                 	je 0x27ff6
0x27fbc:   be 35 00 00 00                        	mov esi, 0x35
0x27fc1:   48 89 df                              	mov rdi, rbx
0x27fc4:   e8 17 eb ff ff                        	call 0x26ae0 <rReg32>
0x27fc9:   89 c2                                 	mov edx, eax
0x27fcb:   83 ca 10                              	or edx, 0x10
0x27fce:   83 e0 ef                              	and eax, 0xffffffef
0x27fd1:   45 84 ed                              	test r13b, r13b
; function: nm131_set_brightness at 0x27fd4 -- 0x28004
0x27fd4:   0f 45 d0                              	cmovne edx, eax
0x27fd7:   be 35 00 00 00                        	mov esi, 0x35
0x27fdc:   48 89 df                              	mov rdi, rbx
0x27fdf:   e8 d2 fc ff ff                        	call 0x27cb6 <wReg32>
0x27fe4:   4d 63 e4                              	movsxd r12, r12d
0x27fe7:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
0x27fee:   45 88 ac 24 00 00 00 00               	mov byte ptr [r12], r13b
0x27ff6:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x27ffa:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x27ffe:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x28002:   c9                                    	leave 
0x28003:   c3                                    	ret 
; function: nm131_set_brightness at 0x28004 -- 0x2805e
0x28004:   55                                    	push rbp
0x28005:   48 89 e5                              	mov rbp, rsp
0x28008:   48 83 ec 20                           	sub rsp, 0x20
0x2800c:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x28010:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x28014:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x28018:   e8 d3 6b 01 00                        	call 0x3ebf0 <mcount>
0x2801d:   48 89 fb                              	mov rbx, rdi
0x28020:   44 0f b6 27                           	movzx r12d, byte ptr [rdi]
0x28024:   49 63 c4                              	movsxd rax, r12d
0x28027:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2802e:   83 b8 00 00 00 00 01                  	cmp dword ptr [rax], 1
0x28035:   77 4e                                 	ja 0x28085
0x28037:   40 80 fe 20                           	cmp sil, 0x20
0x2803b:   41 bd 20 00 00 00                     	mov r13d, 0x20
0x28041:   44 0f 46 ee                           	cmovbe r13d, esi
0x28045:   be 00 02 00 00                        	mov esi, 0x200
0x2804a:   e8 91 ea ff ff                        	call 0x26ae0 <rReg32>
0x2804f:   89 c2                                 	mov edx, eax
0x28051:   81 e2 00 c0 ff ff                     	and edx, 0xffffc000
0x28057:   41 0f b6 cd                           	movzx ecx, r13b
0x2805b:   c1 e1 06                              	shl ecx, 6
; data inside code section at 0x2805e -- 0x28063
0x2805e:   81 c1 00 06 00                                     |.....           |
; function: nm131_set_volume at 0x28063 -- 0x28093
0x28063:   00 09                                 	add byte ptr [rcx], cl
0x28065:   ca be 00                              	retf 0xbe
; data inside code section at 0x28068 -- 0x28085
0x28068:   02 00 00 48 89 df e8 43  fc ff ff 4d 63 e4 4d 69   |...H...C...Mc.Mi|
0x28078:   e4 b8 00 00 00 45 88 ac  24 00 00 00 00            |.....E..$....   |
0x28085:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x28089:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x2808d:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x28091:   c9                                    	leave 
0x28092:   c3                                    	ret 
; function: nm131_set_volume at 0x28093 -- 0x2819a
0x28093:   55                                    	push rbp
0x28094:   48 89 e5                              	mov rbp, rsp
0x28097:   48 83 ec 30                           	sub rsp, 0x30
0x2809b:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x2809f:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x280a3:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x280a7:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x280ab:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x280af:   e8 3c 6b 01 00                        	call 0x3ebf0 <mcount>
0x280b4:   48 89 fb                              	mov rbx, rdi
0x280b7:   44 0f b6 27                           	movzx r12d, byte ptr [rdi]
0x280bb:   49 63 c4                              	movsxd rax, r12d
0x280be:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x280c5:   83 b8 00 00 00 00 01                  	cmp dword ptr [rax], 1
0x280cc:   0f 87 e3 00 00 00                     	ja 0x281b5
0x280d2:   40 80 fe 0f                           	cmp sil, 0xf
0x280d6:   77 6e                                 	ja 0x28146 <nm131_set_volume+0xb3>
0x280d8:   49 c7 c6 00 00 00 00                  	mov r14, 0
0x280df:   49 89 c5                              	mov r13, rax
0x280e2:   46 0f b6 7c 30 01                     	movzx r15d, byte ptr [rax + r14 + 1]
0x280e8:   44 38 fe                              	cmp sil, r15b
0x280eb:   44 0f 46 fe                           	cmovbe r15d, esi
0x280ef:   ba 5f 00 00 00                        	mov edx, 0x5f
0x280f4:   44 28 fa                              	sub dl, r15b
0x280f7:   0f b6 d2                              	movzx edx, dl
0x280fa:   be 35 00 00 00                        	mov esi, 0x35
0x280ff:   e8 34 e1 ff ff                        	call 0x26238 <wReg8>
0x28104:   43 80 7c 35 0e 00                     	cmp byte ptr [r13 + r14 + 0xe], 0
0x2810a:   74 14                                 	je 0x28120 <nm131_set_volume+0x8d>
0x2810c:   ba 0b 0b 00 00                        	mov edx, 0xb0b
0x28111:   be 7c 02 00 00                        	mov esi, 0x27c
0x28116:   48 89 df                              	mov rdi, rbx
0x28119:   e8 98 fb ff ff                        	call 0x27cb6 <wReg32>
0x2811e:   eb 12                                 	jmp 0x28132 <nm131_set_volume+0x9f>
0x28120:   ba 10 10 00 00                        	mov edx, 0x1010
0x28125:   be 7c 02 00 00                        	mov esi, 0x27c
0x2812a:   48 89 df                              	mov rdi, rbx
0x2812d:   e8 84 fb ff ff                        	call 0x27cb6 <wReg32>
0x28132:   4d 63 e4                              	movsxd r12, r12d
0x28135:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
0x2813c:   45 88 bc 24 00 00 00 00               	mov byte ptr [r12], r15b
0x28144:   eb 6f                                 	jmp 0x281b5
0x28146:   40 80 fe 10                           	cmp sil, 0x10
0x2814a:   75 69                                 	jne 0x281b5
0x2814c:   4d 63 ec                              	movsxd r13, r12d
0x2814f:   49 c7 c6 00 00 00 00                  	mov r14, 0
0x28156:   4d 69 ed b8 00 00 00                  	imul r13, r13, 0xb8
0x2815d:   ba 5f 00 00 00                        	mov edx, 0x5f
0x28162:   43 2a 54 35 01                        	sub dl, byte ptr [r13 + r14 + 1]
0x28167:   0f b6 d2                              	movzx edx, dl
0x2816a:   be 35 00 00 00                        	mov esi, 0x35
0x2816f:   e8 c4 e0 ff ff                        	call 0x26238 <wReg8>
0x28174:   43 80 7c 35 0e 00                     	cmp byte ptr [r13 + r14 + 0xe], 0
0x2817a:   74 14                                 	je 0x28190 <nm131_set_volume+0xfd>
0x2817c:   ba 0b 0b 00 00                        	mov edx, 0xb0b
0x28181:   be 7c 02 00 00                        	mov esi, 0x27c
0x28186:   48 89 df                              	mov rdi, rbx
0x28189:   e8 28 fb ff ff                        	call 0x27cb6 <wReg32>
0x2818e:   eb 12                                 	jmp 0x281a2
0x28190:   ba 18 18 00 00                        	mov edx, 0x1818
0x28195:   be 7c 02 00 00                        	mov esi, 0x27c
; data inside code section at 0x2819a -- 0x2819b
0x2819a:   48                                                 |H               |
; function: nm131_invert_spectum at 0x2819b -- 0x281cb
0x2819b:   89 df                                 	mov edi, ebx
0x2819d:   e8 14 fb ff ff                        	call 0x27cb6 <wReg32>
0x281a2:   4d 63 e4                              	movsxd r12, r12d
0x281a5:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
0x281ac:   41 c6 84 24 00 00 00 00 10            	mov byte ptr [r12], 0x10
0x281b5:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x281b9:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x281bd:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x281c1:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x281c5:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x281c9:   c9                                    	leave 
0x281ca:   c3                                    	ret 
; function: nm131_invert_spectum at 0x281cb -- 0x2832a
0x281cb:   55                                    	push rbp
0x281cc:   48 89 e5                              	mov rbp, rsp
0x281cf:   48 83 ec 20                           	sub rsp, 0x20
0x281d3:   48 89 5d e8                           	mov qword ptr [rbp - 0x18], rbx
0x281d7:   4c 89 65 f0                           	mov qword ptr [rbp - 0x10], r12
0x281db:   4c 89 6d f8                           	mov qword ptr [rbp - 8], r13
0x281df:   e8 0c 6a 01 00                        	call 0x3ebf0 <mcount>
0x281e4:   48 89 fb                              	mov rbx, rdi
0x281e7:   41 89 f5                              	mov r13d, esi
0x281ea:   44 0f b6 27                           	movzx r12d, byte ptr [rdi]
0x281ee:   be 1c 02 00 00                        	mov esi, 0x21c
0x281f3:   e8 e8 e8 ff ff                        	call 0x26ae0 <rReg32>
0x281f8:   89 c2                                 	mov edx, eax
0x281fa:   81 e2 ff ff bf ff                     	and edx, 0xffbfffff
0x28200:   0d 00 00 40 00                        	or eax, 0x400000
0x28205:   45 85 ed                              	test r13d, r13d
0x28208:   89 d1                                 	mov ecx, edx
0x2820a:   0f 45 c8                              	cmovne ecx, eax
0x2820d:   49 63 c4                              	movsxd rax, r12d
0x28210:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28217:   83 b8 00 00 00 00 02                  	cmp dword ptr [rax], 2
0x2821e:   0f 85 19 01 00 00                     	jne 0x2833d
0x28224:   89 ce                                 	mov esi, ecx
0x28226:   81 e6 ff ff 3f 00                     	and esi, 0x3fffff
0x2822c:   49 63 c4                              	movsxd rax, r12d
0x2822f:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28236:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x2823c:   8b 04 85 00 00 00 00                  	mov eax, dword ptr [rax*4]
0x28243:   ba d3 4d 62 10                        	mov edx, 0x10624dd3
0x28248:   f7 e2                                 	mul edx
0x2824a:   c1 ea 08                              	shr edx, 8
0x2824d:   45 85 ed                              	test r13d, r13d
0x28250:   75 72                                 	jne 0x282c4 <nm131_invert_spectum+0xf9>
0x28252:   49 63 c4                              	movsxd rax, r12d
0x28255:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2825c:   80 b8 00 00 00 00 00                  	cmp byte ptr [rax], 0
0x28263:   75 31                                 	jne 0x28296 <nm131_invert_spectum+0xcb>
0x28265:   89 d0                                 	mov eax, edx
0x28267:   c1 e0 11                              	shl eax, 0x11
0x2826a:   4d 63 e4                              	movsxd r12, r12d
0x2826d:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
0x28274:   45 8b 94 24 00 00 00 00               	mov r10d, dword ptr [r12]
0x2827c:   41 c1 ea 11                           	shr r10d, 0x11
0x28280:   41 81 c2 4b 03 00 00                  	add r10d, 0x34b
0x28287:   ba 00 00 00 00                        	mov edx, 0
0x2828c:   41 f7 f2                              	div r10d
0x2828f:   01 c6                                 	add esi, eax
0x28291:   e9 98 00 00 00                        	jmp 0x2832e
0x28296:   89 d0                                 	mov eax, edx
0x28298:   c1 e0 11                              	shl eax, 0x11
0x2829b:   4d 63 e4                              	movsxd r12, r12d
0x2829e:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
0x282a5:   45 8b 8c 24 00 00 00 00               	mov r9d, dword ptr [r12]
0x282ad:   41 c1 e9 11                           	shr r9d, 0x11
0x282b1:   41 81 c1 4b 03 00 00                  	add r9d, 0x34b
0x282b8:   ba 00 00 00 00                        	mov edx, 0
0x282bd:   41 f7 f1                              	div r9d
0x282c0:   29 c6                                 	sub esi, eax
0x282c2:   eb 6a                                 	jmp 0x2832e
0x282c4:   49 63 c4                              	movsxd rax, r12d
0x282c7:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x282ce:   80 b8 00 00 00 00 00                  	cmp byte ptr [rax], 0
0x282d5:   75 2e                                 	jne 0x28305 <nm131_invert_spectum+0x13a>
0x282d7:   89 d0                                 	mov eax, edx
0x282d9:   c1 e0 11                              	shl eax, 0x11
0x282dc:   4d 63 e4                              	movsxd r12, r12d
0x282df:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
0x282e6:   45 8b 84 24 00 00 00 00               	mov r8d, dword ptr [r12]
0x282ee:   41 c1 e8 11                           	shr r8d, 0x11
0x282f2:   41 81 c0 4b 03 00 00                  	add r8d, 0x34b
0x282f9:   ba 00 00 00 00                        	mov edx, 0
0x282fe:   41 f7 f0                              	div r8d
0x28301:   29 c6                                 	sub esi, eax
0x28303:   eb 29                                 	jmp 0x2832e
0x28305:   89 d0                                 	mov eax, edx
0x28307:   c1 e0 11                              	shl eax, 0x11
0x2830a:   4d 63 e4                              	movsxd r12, r12d
0x2830d:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
0x28314:   41 8b bc 24 00 00 00 00               	mov edi, dword ptr [r12]
0x2831c:   c1 ef 11                              	shr edi, 0x11
0x2831f:   81 c7 4b 03 00 00                     	add edi, 0x34b
0x28325:   ba 00 00 00 00                        	mov edx, 0
; function: nm131_demod_soft_reset at 0x2832a -- 0x2835a
0x2832a:   f7 f7                                 	div edi
0x2832c:   01 c6                                 	add esi, eax
0x2832e:   81 e1 00 00 c0 ff                     	and ecx, 0xffc00000
0x28334:   89 f0                                 	mov eax, esi
0x28336:   25 ff ff 3f 00                        	and eax, 0x3fffff
0x2833b:   09 c1                                 	or ecx, eax
0x2833d:   89 ca                                 	mov edx, ecx
0x2833f:   be 1c 02 00 00                        	mov esi, 0x21c
0x28344:   48 89 df                              	mov rdi, rbx
0x28347:   e8 6a f9 ff ff                        	call 0x27cb6 <wReg32>
0x2834c:   48 8b 5d e8                           	mov rbx, qword ptr [rbp - 0x18]
0x28350:   4c 8b 65 f0                           	mov r12, qword ptr [rbp - 0x10]
0x28354:   4c 8b 6d f8                           	mov r13, qword ptr [rbp - 8]
0x28358:   c9                                    	leave 
0x28359:   c3                                    	ret 
; function: nm131_demod_soft_reset at 0x2835a -- 0x283cd
0x2835a:   55                                    	push rbp
0x2835b:   48 89 e5                              	mov rbp, rsp
0x2835e:   41 54                                 	push r12
0x28360:   53                                    	push rbx
0x28361:   e8 8a 68 01 00                        	call 0x3ebf0 <mcount>
0x28366:   48 89 fb                              	mov rbx, rdi
0x28369:   be 04 01 00 00                        	mov esi, 0x104
0x2836e:   e8 6d e7 ff ff                        	call 0x26ae0 <rReg32>
0x28373:   41 89 c4                              	mov r12d, eax
0x28376:   89 c2                                 	mov edx, eax
0x28378:   83 ca 01                              	or edx, 1
0x2837b:   be 04 01 00 00                        	mov esi, 0x104
0x28380:   48 89 df                              	mov rdi, rbx
0x28383:   e8 2e f9 ff ff                        	call 0x27cb6 <wReg32>
0x28388:   41 83 cc 11                           	or r12d, 0x11
0x2838c:   44 89 e2                              	mov edx, r12d
0x2838f:   be 04 01 00 00                        	mov esi, 0x104
0x28394:   48 89 df                              	mov rdi, rbx
0x28397:   e8 1a f9 ff ff                        	call 0x27cb6 <wReg32>
0x2839c:   44 89 e2                              	mov edx, r12d
0x2839f:   83 e2 ef                              	and edx, 0xffffffef
0x283a2:   be 04 01 00 00                        	mov esi, 0x104
0x283a7:   48 89 df                              	mov rdi, rbx
0x283aa:   e8 07 f9 ff ff                        	call 0x27cb6 <wReg32>
0x283af:   41 81 e4 ef ff ff 87                  	and r12d, 0x87ffffef
0x283b6:   41 81 cc 00 00 00 30                  	or r12d, 0x30000000
0x283bd:   44 89 e2                              	mov edx, r12d
0x283c0:   be 04 01 00 00                        	mov esi, 0x104
0x283c5:   48 89 df                              	mov rdi, rbx
0x283c8:   e8 e9 f8 ff ff                        	call 0x27cb6 <wReg32>
; data inside code section at 0x283cd -- 0x283cf
0x283cd:   41 81                                              |A.              |
; function: wReg32Debug at 0x283cf -- 0x283d1
0x283cf:   e4 ff                                 	in al, 0xff
; data inside code section at 0x283d1 -- 0x283d3
0x283d1:   ff ff                                              |..              |
; function: function_283d3 at 0x283d3 -- 0x283ff
0x283d3:   df 44 89 e2                           	fild word ptr [rcx + rcx*4 - 0x1e]
0x283d7:   be 04 01 00 00                        	mov esi, 0x104
0x283dc:   48 89 df                              	mov rdi, rbx
0x283df:   e8 d2 f8 ff ff                        	call 0x27cb6 <wReg32>
0x283e4:   44 89 e2                              	mov edx, r12d
0x283e7:   81 ca 00 00 00 20                     	or edx, 0x20000000
0x283ed:   be 04 01 00 00                        	mov esi, 0x104
0x283f2:   48 89 df                              	mov rdi, rbx
0x283f5:   e8 bc f8 ff ff                        	call 0x27cb6 <wReg32>
0x283fa:   5b                                    	pop rbx
0x283fb:   41 5c                                 	pop r12
0x283fd:   c9                                    	leave 
0x283fe:   c3                                    	ret 
; function: wReg32Debug at 0x283ff -- 0x284c3
0x283ff:   55                                    	push rbp
0x28400:   48 89 e5                              	mov rbp, rsp
0x28403:   48 83 ec 20                           	sub rsp, 0x20
0x28407:   48 89 1c 24                           	mov qword ptr [rsp], rbx
0x2840b:   4c 89 64 24 08                        	mov qword ptr [rsp + 8], r12
0x28410:   4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x28415:   4c 89 74 24 18                        	mov qword ptr [rsp + 0x18], r14
0x2841a:   e8 d1 67 01 00                        	call 0x3ebf0 <mcount>
0x2841f:   49 89 fc                              	mov r12, rdi
0x28422:   41 89 d5                              	mov r13d, edx
0x28425:   89 f3                                 	mov ebx, esi
0x28427:   44 0f b6 37                           	movzx r14d, byte ptr [rdi]
0x2842b:   0f b7 f6                              	movzx esi, si
0x2842e:   e8 83 f8 ff ff                        	call 0x27cb6 <wReg32>
0x28433:   66 81 fb 10 01                        	cmp bx, 0x110
0x28438:   75 16                                 	jne 0x28450 <wReg32Debug+0x51>
0x2843a:   4d 63 f6                              	movsxd r14, r14d
0x2843d:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x28444:   45 89 ae 00 00 00 00                  	mov dword ptr [r14], r13d
0x2844b:   e9 8f 00 00 00                        	jmp 0x284df
0x28450:   66 81 fb 7c 02                        	cmp bx, 0x27c
0x28455:   0f 85 84 00 00 00                     	jne 0x284df
0x2845b:   be 35 00 00 00                        	mov esi, 0x35
0x28460:   4c 89 e7                              	mov rdi, r12
0x28463:   e8 7c e1 ff ff                        	call 0x265e4 <rReg8>
0x28468:   49 63 d6                              	movsxd rdx, r14d
0x2846b:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x28472:   83 ba 00 00 00 00 01                  	cmp dword ptr [rdx], 1
0x28479:   77 52                                 	ja 0x284cd
0x2847b:   8d 50 b0                              	lea edx, [rax - 0x50]
0x2847e:   80 fa 0f                              	cmp dl, 0xf
0x28481:   77 36                                 	ja 0x284b9 <wReg32Debug+0xba>
0x28483:   41 81 fd 18 18 00 00                  	cmp r13d, 0x1818
0x2848a:   75 13                                 	jne 0x2849f <wReg32Debug+0xa0>
0x2848c:   49 63 c6                              	movsxd rax, r14d
0x2848f:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28496:   c6 80 00 00 00 00 10                  	mov byte ptr [rax], 0x10
0x2849d:   eb 40                                 	jmp 0x284df
0x2849f:   4d 63 f6                              	movsxd r14, r14d
0x284a2:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x284a9:   ba 5f 00 00 00                        	mov edx, 0x5f
0x284ae:   28 c2                                 	sub dl, al
0x284b0:   41 88 96 00 00 00 00                  	mov byte ptr [r14], dl
0x284b7:   eb 26                                 	jmp 0x284df
0x284b9:   4d 63 f6                              	movsxd r14, r14d
0x284bc:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
; data inside code section at 0x284c3 -- 0x284c4
0x284c3:   41                                                 |A               |
; function: nm131_software_wake_up_lt at 0x284c4 -- 0x284f4
0x284c4:   c6 86 00 00 00 00 00                  	mov byte ptr [rsi], 0
0x284cb:   eb 12                                 	jmp 0x284df <nm131_software_wake_up_lt+0x1b>
0x284cd:   4d 63 f6                              	movsxd r14, r14d
0x284d0:   4d 69 f6 b8 00 00 00                  	imul r14, r14, 0xb8
0x284d7:   41 c6 86 00 00 00 00 00               	mov byte ptr [r14], 0
0x284df:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x284e3:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x284e8:   4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x284ed:   4c 8b 74 24 18                        	mov r14, qword ptr [rsp + 0x18]
0x284f2:   c9                                    	leave 
0x284f3:   c3                                    	ret 
; function: nm131_software_wake_up_lt at 0x284f4 -- 0x285d8
0x284f4:   55                                    	push rbp
0x284f5:   48 89 e5                              	mov rbp, rsp
0x284f8:   41 55                                 	push r13
0x284fa:   41 54                                 	push r12
0x284fc:   53                                    	push rbx
0x284fd:   48 83 ec 08                           	sub rsp, 8
0x28501:   e8 ea 66 01 00                        	call 0x3ebf0 <mcount>
0x28506:   48 89 fb                              	mov rbx, rdi
0x28509:   44 0f b6 27                           	movzx r12d, byte ptr [rdi]
0x2850d:   49 c7 c5 00 00 00 00                  	mov r13, 0
0x28514:   4d 69 e4 b8 00 00 00                  	imul r12, r12, 0xb8
0x2851b:   43 0f b6 54 2c 03                     	movzx edx, byte ptr [r12 + r13 + 3]
0x28521:   be 00 00 00 00                        	mov esi, 0
0x28526:   e8 0d dd ff ff                        	call 0x26238 <wReg8>
0x2852b:   be 04 01 00 00                        	mov esi, 0x104
0x28530:   48 89 df                              	mov rdi, rbx
0x28533:   e8 a8 e5 ff ff                        	call 0x26ae0 <rReg32>
0x28538:   89 c2                                 	mov edx, eax
0x2853a:   83 ca 21                              	or edx, 0x21
0x2853d:   83 e2 ef                              	and edx, 0xffffffef
0x28540:   be 04 01 00 00                        	mov esi, 0x104
0x28545:   48 89 df                              	mov rdi, rbx
0x28548:   e8 69 f7 ff ff                        	call 0x27cb6 <wReg32>
0x2854d:   be 07 00 00 00                        	mov esi, 7
0x28552:   48 89 df                              	mov rdi, rbx
0x28555:   e8 8a e0 ff ff                        	call 0x265e4 <rReg8>
0x2855a:   89 c2                                 	mov edx, eax
0x2855c:   83 ca 40                              	or edx, 0x40
0x2855f:   0f b6 d2                              	movzx edx, dl
0x28562:   be 07 00 00 00                        	mov esi, 7
0x28567:   48 89 df                              	mov rdi, rbx
0x2856a:   e8 c9 dc ff ff                        	call 0x26238 <wReg8>
0x2856f:   be 0b 00 00 00                        	mov esi, 0xb
0x28574:   48 89 df                              	mov rdi, rbx
0x28577:   e8 68 e0 ff ff                        	call 0x265e4 <rReg8>
0x2857c:   89 c2                                 	mov edx, eax
0x2857e:   83 ca 10                              	or edx, 0x10
0x28581:   0f b6 d2                              	movzx edx, dl
0x28584:   be 0b 00 00 00                        	mov esi, 0xb
0x28589:   48 89 df                              	mov rdi, rbx
0x2858c:   e8 a7 dc ff ff                        	call 0x26238 <wReg8>
0x28591:   43 0f b6 54 2c 04                     	movzx edx, byte ptr [r12 + r13 + 4]
0x28597:   be 34 00 00 00                        	mov esi, 0x34
0x2859c:   48 89 df                              	mov rdi, rbx
0x2859f:   e8 94 dc ff ff                        	call 0x26238 <wReg8>
0x285a4:   43 0f b6 54 2c 05                     	movzx edx, byte ptr [r12 + r13 + 5]
0x285aa:   be 35 00 00 00                        	mov esi, 0x35
0x285af:   48 89 df                              	mov rdi, rbx
0x285b2:   e8 81 dc ff ff                        	call 0x26238 <wReg8>
0x285b7:   43 0f b6 54 2c 06                     	movzx edx, byte ptr [r12 + r13 + 6]
0x285bd:   be 05 00 00 00                        	mov esi, 5
0x285c2:   48 89 df                              	mov rdi, rbx
0x285c5:   e8 6e dc ff ff                        	call 0x26238 <wReg8>
0x285ca:   43 0f b6 44 2c 06                     	movzx eax, byte ptr [r12 + r13 + 6]
0x285d0:   41 88 84 24 00 00 00 00               	mov byte ptr [r12], al
; data inside code section at 0x285d8 -- 0x285d9
0x285d8:   43                                                 |C               |
; function: nm131_software_sleep at 0x285d9 -- 0x28609
0x285d9:   0f b6 54 2c 07                        	movzx edx, byte ptr [rsp + rbp + 7]
0x285de:   be 0a 00 00 00                        	mov esi, 0xa
0x285e3:   48 89 df                              	mov rdi, rbx
0x285e6:   e8 4d dc ff ff                        	call 0x26238 <wReg8>
0x285eb:   43 0f b6 54 2c 08                     	movzx edx, byte ptr [r12 + r13 + 8]
0x285f1:   be 36 00 00 00                        	mov esi, 0x36
0x285f6:   48 89 df                              	mov rdi, rbx
0x285f9:   e8 3a dc ff ff                        	call 0x26238 <wReg8>
0x285fe:   48 83 c4 08                           	add rsp, 8
0x28602:   5b                                    	pop rbx
0x28603:   41 5c                                 	pop r12
0x28605:   41 5d                                 	pop r13
0x28607:   c9                                    	leave 
0x28608:   c3                                    	ret 
; function: nm131_software_sleep at 0x28609 -- 0x28679
0x28609:   55                                    	push rbp
0x2860a:   48 89 e5                              	mov rbp, rsp
0x2860d:   41 54                                 	push r12
0x2860f:   53                                    	push rbx
0x28610:   e8 db 65 01 00                        	call 0x3ebf0 <mcount>
0x28615:   48 89 fb                              	mov rbx, rdi
0x28618:   be 04 01 00 00                        	mov esi, 0x104
0x2861d:   e8 be e4 ff ff                        	call 0x26ae0 <rReg32>
0x28622:   41 89 c4                              	mov r12d, eax
0x28625:   41 83 e4 fe                           	and r12d, 0xfffffffe
0x28629:   44 89 e2                              	mov edx, r12d
0x2862c:   be 04 01 00 00                        	mov esi, 0x104
0x28631:   48 89 df                              	mov rdi, rbx
0x28634:   e8 7d f6 ff ff                        	call 0x27cb6 <wReg32>
0x28639:   ba 04 00 00 00                        	mov edx, 4
0x2863e:   be 00 00 00 00                        	mov esi, 0
0x28643:   48 89 df                              	mov rdi, rbx
0x28646:   e8 ed db ff ff                        	call 0x26238 <wReg8>
0x2864b:   ba 00 00 00 00                        	mov edx, 0
0x28650:   be 34 00 00 00                        	mov esi, 0x34
0x28655:   48 89 df                              	mov rdi, rbx
0x28658:   e8 db db ff ff                        	call 0x26238 <wReg8>
0x2865d:   ba 00 00 00 00                        	mov edx, 0
0x28662:   be 35 00 00 00                        	mov esi, 0x35
0x28667:   48 89 df                              	mov rdi, rbx
0x2866a:   e8 c9 db ff ff                        	call 0x26238 <wReg8>
0x2866f:   ba 04 00 00 00                        	mov edx, 4
0x28674:   be 36 00 00 00                        	mov esi, 0x36
; data inside code section at 0x28679 -- 0x2867b
0x28679:   48 89                                              |H.              |
; function: nm131_demod_config at 0x2867b -- 0x2867f
0x2867b:   df e8                                 	fucomip st(0)
0x2867d:   b7 db                                 	mov bh, 0xdb
; data inside code section at 0x2867f -- 0x28681
0x2867f:   ff ff                                              |..              |
; function: function_28681 at 0x28681 -- 0x286ab
0x28681:   ba 00 00 00 00                        	mov edx, 0
0x28686:   be 00 00 00 00                        	mov esi, 0
0x2868b:   48 89 df                              	mov rdi, rbx
0x2868e:   e8 a5 db ff ff                        	call 0x26238 <wReg8>
0x28693:   44 89 e2                              	mov edx, r12d
0x28696:   83 ca 01                              	or edx, 1
0x28699:   be 04 01 00 00                        	mov esi, 0x104
0x2869e:   48 89 df                              	mov rdi, rbx
0x286a1:   e8 10 f6 ff ff                        	call 0x27cb6 <wReg32>
0x286a6:   5b                                    	pop rbx
0x286a7:   41 5c                                 	pop r12
0x286a9:   c9                                    	leave 
0x286aa:   c3                                    	ret 
; function: nm131_demod_config at 0x286ab -- 0x293fb
0x286ab:   55                                    	push rbp
0x286ac:   48 89 e5                              	mov rbp, rsp
0x286af:   41 57                                 	push r15
0x286b1:   41 56                                 	push r14
0x286b3:   41 55                                 	push r13
0x286b5:   41 54                                 	push r12
0x286b7:   53                                    	push rbx
0x286b8:   48 83 ec 38                           	sub rsp, 0x38
0x286bc:   e8 2f 65 01 00                        	call 0x3ebf0 <mcount>
0x286c1:   48 89 fb                              	mov rbx, rdi
0x286c4:   49 89 f5                              	mov r13, rsi
0x286c7:   89 55 c4                              	mov dword ptr [rbp - 0x3c], edx
0x286ca:   89 4d b4                              	mov dword ptr [rbp - 0x4c], ecx
0x286cd:   44 0f b6 3f                           	movzx r15d, byte ptr [rdi]
0x286d1:   8b 06                                 	mov eax, dword ptr [rsi]
0x286d3:   89 45 c8                              	mov dword ptr [rbp - 0x38], eax
0x286d6:   44 8b 66 0c                           	mov r12d, dword ptr [rsi + 0xc]
0x286da:   44 8b 76 10                           	mov r14d, dword ptr [rsi + 0x10]
0x286de:   8b 56 04                              	mov edx, dword ptr [rsi + 4]
0x286e1:   89 55 ac                              	mov dword ptr [rbp - 0x54], edx
0x286e4:   8b 46 08                              	mov eax, dword ptr [rsi + 8]
0x286e7:   89 45 a8                              	mov dword ptr [rbp - 0x58], eax
0x286ea:   0f b6 56 14                           	movzx edx, byte ptr [rsi + 0x14]
0x286ee:   88 55 c0                              	mov byte ptr [rbp - 0x40], dl
0x286f1:   8b 46 18                              	mov eax, dword ptr [rsi + 0x18]
0x286f4:   89 45 a4                              	mov dword ptr [rbp - 0x5c], eax
0x286f7:   0f b6 56 1c                           	movzx edx, byte ptr [rsi + 0x1c]
0x286fb:   88 55 bb                              	mov byte ptr [rbp - 0x45], dl
0x286fe:   0f b6 46 1d                           	movzx eax, byte ptr [rsi + 0x1d]
0x28702:   88 45 bc                              	mov byte ptr [rbp - 0x44], al
0x28705:   49 63 c7                              	movsxd rax, r15d
0x28708:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2870f:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x28715:   25 00 ff 0f 00                        	and eax, 0xfff00
0x2871a:   3d 00 31 01 00                        	cmp eax, 0x13100
0x2871f:   75 54                                 	jne 0x28775 <nm131_demod_config+0xca>
0x28721:   49 63 c7                              	movsxd rax, r15d
0x28724:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2872b:   44 39 b0 00 00 00 00                  	cmp dword ptr [rax], r14d
0x28732:   75 17                                 	jne 0x2874b <nm131_demod_config+0xa0>
0x28734:   49 63 c7                              	movsxd rax, r15d
0x28737:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2873e:   44 39 a0 00 00 00 00                  	cmp dword ptr [rax], r12d
0x28745:   0f 84 9a 00 00 00                     	je 0x287e5 <nm131_demod_config+0x13a>
0x2874b:   ba ff ff 8c 35                        	mov edx, 0x358cffff
0x28750:   41 83 fc 0d                           	cmp r12d, 0xd ; "NU"
0x28754:   74 12                                 	je 0x28768 <nm131_demod_config+0xbd>
0x28756:   41 83 fe 02                           	cmp r14d, 2
0x2875a:   19 d2                                 	sbb edx, edx
0x2875c:   81 e2 00 00 00 d8                     	and edx, 0xd8000000
0x28762:   81 c2 c7 19 8c 2d                     	add edx, 0x2d8c19c7
0x28768:   be c0 01 00 00                        	mov esi, 0x1c0
0x2876d:   48 89 df                              	mov rdi, rbx
0x28770:   e8 41 f5 ff ff                        	call 0x27cb6 <wReg32>
0x28775:   49 63 c7                              	movsxd rax, r15d
0x28778:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2877f:   44 39 a0 00 00 00 00                  	cmp dword ptr [rax], r12d
0x28786:   75 13                                 	jne 0x2879b <nm131_demod_config+0xf0>
0x28788:   49 63 c7                              	movsxd rax, r15d
0x2878b:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28792:   44 39 b0 00 00 00 00                  	cmp dword ptr [rax], r14d
0x28799:   74 4a                                 	je 0x287e5 <nm131_demod_config+0x13a>
0x2879b:   41 83 fc 06                           	cmp r12d, 6
0x2879f:   74 1e                                 	je 0x287bf <nm131_demod_config+0x114>
0x287a1:   41 83 fc 08                           	cmp r12d, 8
0x287a5:   74 18                                 	je 0x287bf <nm131_demod_config+0x114>
0x287a7:   41 83 fc 0c                           	cmp r12d, 0xc ; "GNU"
0x287ab:   74 12                                 	je 0x287bf <nm131_demod_config+0x114>
0x287ad:   41 83 fc 0e                           	cmp r12d, 0xe
0x287b1:   74 0c                                 	je 0x287bf <nm131_demod_config+0x114>
0x287b3:   41 83 fc 0f                           	cmp r12d, 0xf
0x287b7:   74 06                                 	je 0x287bf <nm131_demod_config+0x114>
0x287b9:   41 83 fc 10                           	cmp r12d, 0x10
0x287bd:   75 14                                 	jne 0x287d3 <nm131_demod_config+0x128>
0x287bf:   ba 00 02 00 00                        	mov edx, 0x200
0x287c4:   be 30 01 00 00                        	mov esi, 0x130
0x287c9:   48 89 df                              	mov rdi, rbx
0x287cc:   e8 e5 f4 ff ff                        	call 0x27cb6 <wReg32>
0x287d1:   eb 12                                 	jmp 0x287e5 <nm131_demod_config+0x13a>
0x287d3:   ba c0 01 00 00                        	mov edx, 0x1c0
0x287d8:   be 30 01 00 00                        	mov esi, 0x130
0x287dd:   48 89 df                              	mov rdi, rbx
0x287e0:   e8 d1 f4 ff ff                        	call 0x27cb6 <wReg32>
0x287e5:   41 8b 55 24                           	mov edx, dword ptr [r13 + 0x24]
0x287e9:   85 d2                                 	test edx, edx
0x287eb:   74 12                                 	je 0x287ff <nm131_demod_config+0x154>
0x287ed:   be 64 01 00 00                        	mov esi, 0x164
0x287f2:   48 89 df                              	mov rdi, rbx
0x287f5:   e8 bc f4 ff ff                        	call 0x27cb6 <wReg32>
0x287fa:   e9 8d 00 00 00                        	jmp 0x2888c <nm131_demod_config+0x1e1>
0x287ff:   41 83 fe 01                           	cmp r14d, 1
0x28803:   0f 86 83 00 00 00                     	jbe 0x2888c <nm131_demod_config+0x1e1>
0x28809:   49 63 c7                              	movsxd rax, r15d
0x2880c:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28813:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x28819:   25 00 ff ff 00                        	and eax, 0xffff00
0x2881e:   3d 00 30 01 00                        	cmp eax, 0x13000
0x28823:   75 14                                 	jne 0x28839 <nm131_demod_config+0x18e>
0x28825:   ba 00 03 00 00                        	mov edx, 0x300
0x2882a:   be 64 01 00 00                        	mov esi, 0x164
0x2882f:   48 89 df                              	mov rdi, rbx
0x28832:   e8 7f f4 ff ff                        	call 0x27cb6 <wReg32>
0x28837:   eb 53                                 	jmp 0x2888c <nm131_demod_config+0x1e1>
0x28839:   41 83 fc 06                           	cmp r12d, 6
0x2883d:   74 1e                                 	je 0x2885d <nm131_demod_config+0x1b2>
0x2883f:   41 83 fc 08                           	cmp r12d, 8
0x28843:   74 18                                 	je 0x2885d <nm131_demod_config+0x1b2>
0x28845:   41 83 fc 0c                           	cmp r12d, 0xc ; "GNU"
0x28849:   74 12                                 	je 0x2885d <nm131_demod_config+0x1b2>
0x2884b:   41 83 fc 0e                           	cmp r12d, 0xe
0x2884f:   74 0c                                 	je 0x2885d <nm131_demod_config+0x1b2>
0x28851:   41 83 fc 0f                           	cmp r12d, 0xf
0x28855:   74 06                                 	je 0x2885d <nm131_demod_config+0x1b2>
0x28857:   41 83 fc 10                           	cmp r12d, 0x10
0x2885b:   75 2f                                 	jne 0x2888c <nm131_demod_config+0x1e1>
0x2885d:   81 7d c8 ff a2 e1 11                  	cmp dword ptr [rbp - 0x38], 0x11e1a2ff
0x28864:   76 14                                 	jbe 0x2887a <nm131_demod_config+0x1cf>
0x28866:   ba 00 05 00 00                        	mov edx, 0x500
0x2886b:   be 64 01 00 00                        	mov esi, 0x164
0x28870:   48 89 df                              	mov rdi, rbx
0x28873:   e8 3e f4 ff ff                        	call 0x27cb6 <wReg32>
0x28878:   eb 12                                 	jmp 0x2888c <nm131_demod_config+0x1e1>
0x2887a:   ba 00 06 00 00                        	mov edx, 0x600
0x2887f:   be 64 01 00 00                        	mov esi, 0x164
0x28884:   48 89 df                              	mov rdi, rbx
0x28887:   e8 2a f4 ff ff                        	call 0x27cb6 <wReg32>
0x2888c:   49 63 c7                              	movsxd rax, r15d
0x2888f:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28896:   44 39 b0 00 00 00 00                  	cmp dword ptr [rax], r14d
0x2889d:   74 6f                                 	je 0x2890e <nm131_demod_config+0x263>
0x2889f:   be 34 02 00 00                        	mov esi, 0x234
0x288a4:   48 89 df                              	mov rdi, rbx
0x288a7:   e8 34 e2 ff ff                        	call 0x26ae0 <rReg32>
0x288ac:   89 c2                                 	mov edx, eax
0x288ae:   81 e2 ff ff ff f1                     	and edx, 0xf1ffffff
0x288b4:   41 83 fe 01                           	cmp r14d, 1
0x288b8:   77 2f                                 	ja 0x288e9 <nm131_demod_config+0x23e>
0x288ba:   89 d0                                 	mov eax, edx
0x288bc:   0d 00 00 00 04                        	or eax, 0x4000000
0x288c1:   41 83 fe 01                           	cmp r14d, 1
0x288c5:   0f 44 d0                              	cmove edx, eax
0x288c8:   be 34 02 00 00                        	mov esi, 0x234
0x288cd:   48 89 df                              	mov rdi, rbx
0x288d0:   e8 e1 f3 ff ff                        	call 0x27cb6 <wReg32>
0x288d5:   ba 00 01 00 00                        	mov edx, 0x100
0x288da:   be 0c 02 00 00                        	mov esi, 0x20c
0x288df:   48 89 df                              	mov rdi, rbx
0x288e2:   e8 cf f3 ff ff                        	call 0x27cb6 <wReg32>
0x288e7:   eb 25                                 	jmp 0x2890e <nm131_demod_config+0x263>
0x288e9:   81 ca 00 00 00 08                     	or edx, 0x8000000
0x288ef:   be 34 02 00 00                        	mov esi, 0x234
0x288f4:   48 89 df                              	mov rdi, rbx
0x288f7:   e8 ba f3 ff ff                        	call 0x27cb6 <wReg32>
0x288fc:   ba 00 04 00 00                        	mov edx, 0x400
0x28901:   be 0c 02 00 00                        	mov esi, 0x20c
0x28906:   48 89 df                              	mov rdi, rbx
0x28909:   e8 a8 f3 ff ff                        	call 0x27cb6 <wReg32>
0x2890e:   49 63 c7                              	movsxd rax, r15d
0x28911:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28918:   44 39 a0 00 00 00 00                  	cmp dword ptr [rax], r12d
0x2891f:   75 17                                 	jne 0x28938 <nm131_demod_config+0x28d>
0x28921:   49 63 c7                              	movsxd rax, r15d
0x28924:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2892b:   44 39 b0 00 00 00 00                  	cmp dword ptr [rax], r14d
0x28932:   0f 84 0b 01 00 00                     	je 0x28a43 <nm131_demod_config+0x398>
0x28938:   be 80 02 00 00                        	mov esi, 0x280
0x2893d:   48 89 df                              	mov rdi, rbx
0x28940:   e8 9b e1 ff ff                        	call 0x26ae0 <rReg32>
0x28945:   45 85 f6                              	test r14d, r14d
0x28948:   75 2f                                 	jne 0x28979 <nm131_demod_config+0x2ce>
0x2894a:   89 c2                                 	mov edx, eax
0x2894c:   83 e2 fe                              	and edx, 0xfffffffe
0x2894f:   be 80 02 00 00                        	mov esi, 0x280
0x28954:   48 89 df                              	mov rdi, rbx
0x28957:   e8 5a f3 ff ff                        	call 0x27cb6 <wReg32>
0x2895c:   be 38 02 00 00                        	mov esi, 0x238
0x28961:   48 89 df                              	mov rdi, rbx
0x28964:   e8 77 e1 ff ff                        	call 0x26ae0 <rReg32>
0x28969:   89 c2                                 	mov edx, eax
0x2896b:   81 e2 00 c0 ff ff                     	and edx, 0xffffc000
0x28971:   80 ce 08                              	or dh, 8
0x28974:   e9 23 0a 00 00                        	jmp 0x2939c <nm131_demod_config+0xcf1>
0x28979:   41 83 fe 01                           	cmp r14d, 1
0x2897d:   75 08                                 	jne 0x28987 <nm131_demod_config+0x2dc>
0x2897f:   83 c8 01                              	or eax, 1
0x28982:   e9 65 0a 00 00                        	jmp 0x293ec <nm131_demod_config+0xd41>
0x28987:   41 83 fe 04                           	cmp r14d, 4
0x2898b:   0f 85 5b 0a 00 00                     	jne 0x293ec <nm131_demod_config+0xd41>
0x28991:   49 63 d7                              	movsxd rdx, r15d
0x28994:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x2899b:   8b 92 00 00 00 00                     	mov edx, dword ptr [rdx]
0x289a1:   81 e2 00 ff 0f 00                     	and edx, 0xfff00
0x289a7:   89 c1                                 	mov ecx, eax
0x289a9:   83 e1 fe                              	and ecx, 0xfffffffe
0x289ac:   81 fa 00 31 01 00                     	cmp edx, 0x13100
0x289b2:   0f 44 c1                              	cmove eax, ecx
0x289b5:   89 c2                                 	mov edx, eax
0x289b7:   be 80 02 00 00                        	mov esi, 0x280
0x289bc:   48 89 df                              	mov rdi, rbx
0x289bf:   e8 f2 f2 ff ff                        	call 0x27cb6 <wReg32>
0x289c4:   be 38 02 00 00                        	mov esi, 0x238
0x289c9:   48 89 df                              	mov rdi, rbx
0x289cc:   e8 0f e1 ff ff                        	call 0x26ae0 <rReg32>
0x289d1:   89 c2                                 	mov edx, eax
0x289d3:   81 e2 00 c0 ff ff                     	and edx, 0xffffc000
0x289d9:   80 ce 08                              	or dh, 8
0x289dc:   be 38 02 00 00                        	mov esi, 0x238
0x289e1:   48 89 df                              	mov rdi, rbx
0x289e4:   e8 cd f2 ff ff                        	call 0x27cb6 <wReg32>
0x289e9:   be 2c 03 00 00                        	mov esi, 0x32c
0x289ee:   48 89 df                              	mov rdi, rbx
0x289f1:   e8 ea e0 ff ff                        	call 0x26ae0 <rReg32>
0x289f6:   89 c2                                 	mov edx, eax
0x289f8:   81 e2 ff bf ff bf                     	and edx, 0xbfffbfff
0x289fe:   eb 36                                 	jmp 0x28a36 <nm131_demod_config+0x38b>
0x28a00:   80 ca 80                              	or dl, 0x80
0x28a03:   e9 94 09 00 00                        	jmp 0x2939c <nm131_demod_config+0xcf1>
0x28a08:   be 38 02 00 00                        	mov esi, 0x238
0x28a0d:   48 89 df                              	mov rdi, rbx
0x28a10:   e8 a1 f2 ff ff                        	call 0x27cb6 <wReg32>
0x28a15:   be 2c 03 00 00                        	mov esi, 0x32c
0x28a1a:   48 89 df                              	mov rdi, rbx
0x28a1d:   e8 be e0 ff ff                        	call 0x26ae0 <rReg32>
0x28a22:   89 c2                                 	mov edx, eax
0x28a24:   81 e2 ff bf ff bf                     	and edx, 0xbfffbfff
0x28a2a:   41 83 fe 01                           	cmp r14d, 1
0x28a2e:   77 06                                 	ja 0x28a36 <nm131_demod_config+0x38b>
0x28a30:   81 ca 00 40 00 40                     	or edx, 0x40004000
0x28a36:   be 2c 03 00 00                        	mov esi, 0x32c
0x28a3b:   48 89 df                              	mov rdi, rbx
0x28a3e:   e8 73 f2 ff ff                        	call 0x27cb6 <wReg32>
0x28a43:   c7 45 b0 00 00 00 00                  	mov dword ptr [rbp - 0x50], 0
0x28a4a:   b9 00 00 00 00                        	mov ecx, 0
0x28a4f:   80 7d c0 00                           	cmp byte ptr [rbp - 0x40], 0
0x28a53:   74 2e                                 	je 0x28a83 <nm131_demod_config+0x3d8>
0x28a55:   41 83 fc 0d                           	cmp r12d, 0xd ; "NU"
0x28a59:   0f 94 c0                              	sete al
0x28a5c:   45 85 e4                              	test r12d, r12d
0x28a5f:   74 0b                                 	je 0x28a6c <nm131_demod_config+0x3c1>
0x28a61:   c7 45 b0 05 d9 01 00                  	mov dword ptr [rbp - 0x50], 0x1d905
0x28a68:   84 c0                                 	test al, al
0x28a6a:   74 07                                 	je 0x28a73 <nm131_demod_config+0x3c8>
0x28a6c:   c7 45 b0 ea b5 01 00                  	mov dword ptr [rbp - 0x50], 0x1b5ea
0x28a73:   3c 01                                 	cmp al, 1
0x28a75:   19 c9                                 	sbb ecx, ecx
0x28a77:   81 e1 88 0d 00 00                     	and ecx, 0xd88
0x28a7d:   81 c1 d6 04 00 00                     	add ecx, 0x4d6
0x28a83:   8b 45 c4                              	mov eax, dword ptr [rbp - 0x3c]
0x28a86:   d1 e8                                 	shr eax, 1
0x28a88:   ba 39 37 58 9b                        	mov edx, 0x9b583739
0x28a8d:   f7 e2                                 	mul edx
0x28a8f:   c1 ea 0b                              	shr edx, 0xb
0x28a92:   89 d2                                 	mov edx, edx
0x28a94:   48 81 c2 00 40 00 00                  	add rdx, 0x4000
0x28a9b:   48 89 55 c8                           	mov qword ptr [rbp - 0x38], rdx
0x28a9f:   44 89 e0                              	mov eax, r12d
0x28aa2:   8b 04 85 00 00 00 00                  	mov eax, dword ptr [rax*4]
0x28aa9:   8d 04 41                              	lea eax, [rcx + rax*2]
0x28aac:   c1 e0 0e                              	shl eax, 0xe
0x28aaf:   89 c0                                 	mov eax, eax
0x28ab1:   ba 00 00 00 00                        	mov edx, 0
0x28ab6:   48 f7 75 c8                           	div qword ptr [rbp - 0x38]
0x28aba:   89 c2                                 	mov edx, eax
0x28abc:   81 ca 00 00 08 00                     	or edx, 0x80000
0x28ac2:   be 30 02 00 00                        	mov esi, 0x230
0x28ac7:   48 89 df                              	mov rdi, rbx
0x28aca:   e8 e7 f1 ff ff                        	call 0x27cb6 <wReg32>
0x28acf:   83 7d b4 02                           	cmp dword ptr [rbp - 0x4c], 2
0x28ad3:   75 14                                 	jne 0x28ae9 <nm131_demod_config+0x43e>
0x28ad5:   ba 02 00 00 00                        	mov edx, 2
0x28ada:   be 50 02 00 00                        	mov esi, 0x250
0x28adf:   48 89 df                              	mov rdi, rbx
0x28ae2:   e8 cf f1 ff ff                        	call 0x27cb6 <wReg32>
0x28ae7:   eb 41                                 	jmp 0x28b2a <nm131_demod_config+0x47f>
0x28ae9:   80 7d bc 00                           	cmp byte ptr [rbp - 0x44], 0
0x28aed:   74 14                                 	je 0x28b03 <nm131_demod_config+0x458>
0x28aef:   ba 04 00 00 00                        	mov edx, 4
0x28af4:   be 50 02 00 00                        	mov esi, 0x250
0x28af9:   48 89 df                              	mov rdi, rbx
0x28afc:   e8 b5 f1 ff ff                        	call 0x27cb6 <wReg32>
0x28b01:   eb 27                                 	jmp 0x28b2a <nm131_demod_config+0x47f>
0x28b03:   44 89 e0                              	mov eax, r12d
0x28b06:   0f b6 90 00 00 00 00                  	movzx edx, byte ptr [rax]
0x28b0d:   85 d2                                 	test edx, edx
0x28b0f:   75 0c                                 	jne 0x28b1d <nm131_demod_config+0x472>
0x28b11:   80 7d c0 01                           	cmp byte ptr [rbp - 0x40], 1
0x28b15:   b8 02 00 00 00                        	mov eax, 2
0x28b1a:   0f 44 d0                              	cmove edx, eax
0x28b1d:   be 50 02 00 00                        	mov esi, 0x250
0x28b22:   48 89 df                              	mov rdi, rbx
0x28b25:   e8 8c f1 ff ff                        	call 0x27cb6 <wReg32>
0x28b2a:   49 63 c7                              	movsxd rax, r15d
0x28b2d:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28b34:   83 b8 00 00 00 00 01                  	cmp dword ptr [rax], 1
0x28b3b:   77 55                                 	ja 0x28b92 <nm131_demod_config+0x4e7>
0x28b3d:   80 7d bc 00                           	cmp byte ptr [rbp - 0x44], 0
0x28b41:   74 14                                 	je 0x28b57 <nm131_demod_config+0x4ac>
0x28b43:   ba 0b 0b 00 00                        	mov edx, 0xb0b
0x28b48:   be 7c 02 00 00                        	mov esi, 0x27c
0x28b4d:   48 89 df                              	mov rdi, rbx
0x28b50:   e8 61 f1 ff ff                        	call 0x27cb6 <wReg32>
0x28b55:   eb 4d                                 	jmp 0x28ba4 <nm131_demod_config+0x4f9>
0x28b57:   49 63 c7                              	movsxd rax, r15d
0x28b5a:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28b61:   80 b8 00 00 00 00 10                  	cmp byte ptr [rax], 0x10
0x28b68:   75 14                                 	jne 0x28b7e <nm131_demod_config+0x4d3>
0x28b6a:   ba 18 18 00 00                        	mov edx, 0x1818
0x28b6f:   be 7c 02 00 00                        	mov esi, 0x27c
0x28b74:   48 89 df                              	mov rdi, rbx
0x28b77:   e8 3a f1 ff ff                        	call 0x27cb6 <wReg32>
0x28b7c:   eb 26                                 	jmp 0x28ba4 <nm131_demod_config+0x4f9>
0x28b7e:   ba 10 10 00 00                        	mov edx, 0x1010
0x28b83:   be 7c 02 00 00                        	mov esi, 0x27c
0x28b88:   48 89 df                              	mov rdi, rbx
0x28b8b:   e8 26 f1 ff ff                        	call 0x27cb6 <wReg32>
0x28b90:   eb 12                                 	jmp 0x28ba4 <nm131_demod_config+0x4f9>
0x28b92:   ba 10 10 00 00                        	mov edx, 0x1010
0x28b97:   be 7c 02 00 00                        	mov esi, 0x27c
0x28b9c:   48 89 df                              	mov rdi, rbx
0x28b9f:   e8 12 f1 ff ff                        	call 0x27cb6 <wReg32>
0x28ba4:   44 89 e0                              	mov eax, r12d
0x28ba7:   8b 04 85 00 00 00 00                  	mov eax, dword ptr [rax*4]
0x28bae:   c1 e0 0e                              	shl eax, 0xe
0x28bb1:   89 c0                                 	mov eax, eax
0x28bb3:   ba 00 00 00 00                        	mov edx, 0
0x28bb8:   48 f7 75 c8                           	div qword ptr [rbp - 0x38]
0x28bbc:   89 c2                                 	mov edx, eax
0x28bbe:   0d 00 00 30 00                        	or eax, 0x300000
0x28bc3:   80 7d bb 00                           	cmp byte ptr [rbp - 0x45], 0
0x28bc7:   0f 45 d0                              	cmovne edx, eax
0x28bca:   be bc 01 00 00                        	mov esi, 0x1bc
0x28bcf:   48 89 df                              	mov rdi, rbx
0x28bd2:   e8 df f0 ff ff                        	call 0x27cb6 <wReg32>
0x28bd7:   49 63 c7                              	movsxd rax, r15d
0x28bda:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28be1:   44 39 a0 00 00 00 00                  	cmp dword ptr [rax], r12d
0x28be8:   0f 84 41 01 00 00                     	je 0x28d2f <nm131_demod_config+0x684>
0x28bee:   41 83 fc 0d                           	cmp r12d, 0xd ; "NU"
0x28bf2:   0f 85 9e 00 00 00                     	jne 0x28c96 <nm131_demod_config+0x5eb>
0x28bf8:   ba 00 80 00 00                        	mov edx, 0x8000
0x28bfd:   be c8 01 00 00                        	mov esi, 0x1c8
0x28c02:   48 89 df                              	mov rdi, rbx
0x28c05:   e8 ac f0 ff ff                        	call 0x27cb6 <wReg32>
0x28c0a:   ba 00 80 00 00                        	mov edx, 0x8000
0x28c0f:   be cc 01 00 00                        	mov esi, 0x1cc
0x28c14:   48 89 df                              	mov rdi, rbx
0x28c17:   e8 9a f0 ff ff                        	call 0x27cb6 <wReg32>
0x28c1c:   ba 00 80 00 00                        	mov edx, 0x8000
0x28c21:   be d0 01 00 00                        	mov esi, 0x1d0
0x28c26:   48 89 df                              	mov rdi, rbx
0x28c29:   e8 88 f0 ff ff                        	call 0x27cb6 <wReg32>
0x28c2e:   ba 02 00 00 00                        	mov edx, 2
0x28c33:   be 10 01 00 00                        	mov esi, 0x110
0x28c38:   48 89 df                              	mov rdi, rbx
0x28c3b:   e8 76 f0 ff ff                        	call 0x27cb6 <wReg32>
0x28c40:   49 63 c7                              	movsxd rax, r15d
0x28c43:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28c4a:   c7 80 00 00 00 00 02 00 00 00         	mov dword ptr [rax], 2
0x28c54:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x28c5b:   be 10 00 00 00                        	mov esi, 0x10
0x28c60:   48 89 df                              	mov rdi, rbx
0x28c63:   b8 00 00 00 00                        	mov eax, 0
0x28c68:   e8 02 d5 ff ff                        	call 0x2616f <nmi_debug>
0x28c6d:   ba 00 00 00 00                        	mov edx, 0
0x28c72:   be 6c 02 00 00                        	mov esi, 0x26c
0x28c77:   48 89 df                              	mov rdi, rbx
0x28c7a:   e8 37 f0 ff ff                        	call 0x27cb6 <wReg32>
0x28c7f:   ba 05 00 00 00                        	mov edx, 5
0x28c84:   be 70 02 00 00                        	mov esi, 0x270
0x28c89:   48 89 df                              	mov rdi, rbx
0x28c8c:   e8 25 f0 ff ff                        	call 0x27cb6 <wReg32>
0x28c91:   e9 99 00 00 00                        	jmp 0x28d2f <nm131_demod_config+0x684>
0x28c96:   ba 79 80 00 00                        	mov edx, 0x8079
0x28c9b:   be c8 01 00 00                        	mov esi, 0x1c8
0x28ca0:   48 89 df                              	mov rdi, rbx
0x28ca3:   e8 0e f0 ff ff                        	call 0x27cb6 <wReg32>
0x28ca8:   ba 79 80 00 00                        	mov edx, 0x8079
0x28cad:   be cc 01 00 00                        	mov esi, 0x1cc
0x28cb2:   48 89 df                              	mov rdi, rbx
0x28cb5:   e8 fc ef ff ff                        	call 0x27cb6 <wReg32>
0x28cba:   ba 79 80 00 00                        	mov edx, 0x8079
0x28cbf:   be d0 01 00 00                        	mov esi, 0x1d0
0x28cc4:   48 89 df                              	mov rdi, rbx
0x28cc7:   e8 ea ef ff ff                        	call 0x27cb6 <wReg32>
0x28ccc:   ba 52 4c 00 00                        	mov edx, 0x4c52
0x28cd1:   be 10 01 00 00                        	mov esi, 0x110
0x28cd6:   48 89 df                              	mov rdi, rbx
0x28cd9:   e8 d8 ef ff ff                        	call 0x27cb6 <wReg32>
0x28cde:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x28ce5:   be 10 00 00 00                        	mov esi, 0x10
0x28cea:   48 89 df                              	mov rdi, rbx
0x28ced:   b8 00 00 00 00                        	mov eax, 0
0x28cf2:   e8 78 d4 ff ff                        	call 0x2616f <nmi_debug>
0x28cf7:   49 63 c7                              	movsxd rax, r15d
0x28cfa:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28d01:   c7 80 00 00 00 00 52 4c 00 00         	mov dword ptr [rax], 0x4c52
0x28d0b:   ba 02 00 00 00                        	mov edx, 2
0x28d10:   be 6c 02 00 00                        	mov esi, 0x26c
0x28d15:   48 89 df                              	mov rdi, rbx
0x28d18:   e8 99 ef ff ff                        	call 0x27cb6 <wReg32>
0x28d1d:   ba 06 00 00 00                        	mov edx, 6
0x28d22:   be 70 02 00 00                        	mov esi, 0x270
0x28d27:   48 89 df                              	mov rdi, rbx
0x28d2a:   e8 87 ef ff ff                        	call 0x27cb6 <wReg32>
0x28d2f:   41 83 fe 01                           	cmp r14d, 1
0x28d33:   0f 87 9a 00 00 00                     	ja 0x28dd3 <nm131_demod_config+0x728>
0x28d39:   49 63 c7                              	movsxd rax, r15d
0x28d3c:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28d43:   44 39 b0 00 00 00 00                  	cmp dword ptr [rax], r14d
0x28d4a:   74 12                                 	je 0x28d5e <nm131_demod_config+0x6b3>
0x28d4c:   ba 00 00 00 30                        	mov edx, 0x30000000
0x28d51:   be 1c 02 00 00                        	mov esi, 0x21c
0x28d56:   48 89 df                              	mov rdi, rbx
0x28d59:   e8 58 ef ff ff                        	call 0x27cb6 <wReg32>
0x28d5e:   44 89 e0                              	mov eax, r12d
0x28d61:   8b 04 85 00 00 00 00                  	mov eax, dword ptr [rax*4]
0x28d68:   c1 e0 0f                              	shl eax, 0xf
0x28d6b:   89 45 c8                              	mov dword ptr [rbp - 0x38], eax
0x28d6e:   be 34 02 00 00                        	mov esi, 0x234
0x28d73:   48 89 df                              	mov rdi, rbx
0x28d76:   e8 65 dd ff ff                        	call 0x26ae0 <rReg32>
0x28d7b:   89 c1                                 	mov ecx, eax
0x28d7d:   81 e1 00 00 c0 ff                     	and ecx, 0xffc00000
0x28d83:   ba 71 6e b0 36                        	mov edx, 0x36b06e71
0x28d88:   8b 45 c4                              	mov eax, dword ptr [rbp - 0x3c]
0x28d8b:   f7 e2                                 	mul edx
0x28d8d:   8b 75 c4                              	mov esi, dword ptr [rbp - 0x3c]
0x28d90:   29 d6                                 	sub esi, edx
0x28d92:   d1 ee                                 	shr esi, 1
0x28d94:   01 f2                                 	add edx, esi
0x28d96:   c1 ea 0b                              	shr edx, 0xb
0x28d99:   8d b2 00 80 00 00                     	lea esi, [rdx + 0x8000]
0x28d9f:   8b 45 c8                              	mov eax, dword ptr [rbp - 0x38]
0x28da2:   ba 00 00 00 00                        	mov edx, 0
0x28da7:   f7 f6                                 	div esi
0x28da9:   09 c1                                 	or ecx, eax
0x28dab:   89 ca                                 	mov edx, ecx
0x28dad:   81 e2 ff ff ff cf                     	and edx, 0xcfffffff
0x28db3:   89 d0                                 	mov eax, edx
0x28db5:   0d 00 00 00 10                        	or eax, 0x10000000
0x28dba:   41 83 fe 01                           	cmp r14d, 1
0x28dbe:   0f 44 d0                              	cmove edx, eax
0x28dc1:   be 34 02 00 00                        	mov esi, 0x234
0x28dc6:   48 89 df                              	mov rdi, rbx
0x28dc9:   e8 e8 ee ff ff                        	call 0x27cb6 <wReg32>
0x28dce:   e9 69 01 00 00                        	jmp 0x28f3c <nm131_demod_config+0x891>
0x28dd3:   41 83 fe 02                           	cmp r14d, 2
0x28dd7:   0f 85 a2 00 00 00                     	jne 0x28e7f <nm131_demod_config+0x7d4>
0x28ddd:   80 7d bb 00                           	cmp byte ptr [rbp - 0x45], 0
0x28de1:   75 0f                                 	jne 0x28df2 <nm131_demod_config+0x747>
0x28de3:   44 89 e0                              	mov eax, r12d
0x28de6:   8b 04 85 00 00 00 00                  	mov eax, dword ptr [rax*4]
0x28ded:   03 45 a8                              	add eax, dword ptr [rbp - 0x58]
0x28df0:   eb 0f                                 	jmp 0x28e01 <nm131_demod_config+0x756>
0x28df2:   44 89 e0                              	mov eax, r12d
0x28df5:   8b 55 a8                              	mov edx, dword ptr [rbp - 0x58]
0x28df8:   2b 14 85 00 00 00 00                  	sub edx, dword ptr [rax*4]
0x28dff:   89 d0                                 	mov eax, edx
0x28e01:   ba d3 4d 62 10                        	mov edx, 0x10624dd3
0x28e06:   f7 e2                                 	mul edx
0x28e08:   c1 ea 06                              	shr edx, 6
0x28e0b:   89 d0                                 	mov eax, edx
0x28e0d:   c1 e0 10                              	shl eax, 0x10
0x28e10:   8b 4d c4                              	mov ecx, dword ptr [rbp - 0x3c]
0x28e13:   c1 e9 0e                              	shr ecx, 0xe
0x28e16:   81 c1 5e 1a 00 00                     	add ecx, 0x1a5e
0x28e1c:   ba 00 00 00 00                        	mov edx, 0
0x28e21:   f7 f1                                 	div ecx
0x28e23:   89 45 c8                              	mov dword ptr [rbp - 0x38], eax
0x28e26:   be 1c 02 00 00                        	mov esi, 0x21c
0x28e2b:   48 89 df                              	mov rdi, rbx
0x28e2e:   e8 ad dc ff ff                        	call 0x26ae0 <rReg32>
0x28e33:   25 00 00 c0 ff                        	and eax, 0xffc00000
0x28e38:   8b 55 c8                              	mov edx, dword ptr [rbp - 0x38]
0x28e3b:   01 d2                                 	add edx, edx
0x28e3d:   09 c2                                 	or edx, eax
0x28e3f:   81 e2 fe ff bf c7                     	and edx, 0xc7bffffe
0x28e45:   81 ca 00 00 00 08                     	or edx, 0x8000000
0x28e4b:   be 1c 02 00 00                        	mov esi, 0x21c
0x28e50:   48 89 df                              	mov rdi, rbx
0x28e53:   e8 5e ee ff ff                        	call 0x27cb6 <wReg32>
0x28e58:   be 34 02 00 00                        	mov esi, 0x234
0x28e5d:   48 89 df                              	mov rdi, rbx
0x28e60:   e8 7b dc ff ff                        	call 0x26ae0 <rReg32>
0x28e65:   89 c2                                 	mov edx, eax
0x28e67:   81 e2 00 00 c0 cf                     	and edx, 0xcfc00000
0x28e6d:   be 34 02 00 00                        	mov esi, 0x234
0x28e72:   48 89 df                              	mov rdi, rbx
0x28e75:   e8 3c ee ff ff                        	call 0x27cb6 <wReg32>
0x28e7a:   e9 bd 00 00 00                        	jmp 0x28f3c <nm131_demod_config+0x891>
0x28e7f:   41 83 fe 04                           	cmp r14d, 4
0x28e83:   0f 85 b3 00 00 00                     	jne 0x28f3c <nm131_demod_config+0x891>
0x28e89:   b9 d3 4d 62 10                        	mov ecx, 0x10624dd3
0x28e8e:   8b 45 a8                              	mov eax, dword ptr [rbp - 0x58]
0x28e91:   f7 e1                                 	mul ecx
0x28e93:   89 55 bc                              	mov dword ptr [rbp - 0x44], edx
0x28e96:   8b 45 c4                              	mov eax, dword ptr [rbp - 0x3c]
0x28e99:   c1 e8 11                              	shr eax, 0x11
0x28e9c:   05 4b 03 00 00                        	add eax, 0x34b
0x28ea1:   89 45 c8                              	mov dword ptr [rbp - 0x38], eax
0x28ea4:   be 1c 02 00 00                        	mov esi, 0x21c
0x28ea9:   48 89 df                              	mov rdi, rbx
0x28eac:   e8 2f dc ff ff                        	call 0x26ae0 <rReg32>
0x28eb1:   89 c1                                 	mov ecx, eax
0x28eb3:   81 e1 00 00 c0 ff                     	and ecx, 0xffc00000
0x28eb9:   8b 45 bc                              	mov eax, dword ptr [rbp - 0x44]
0x28ebc:   c1 e8 09                              	shr eax, 9
0x28ebf:   c1 e0 11                              	shl eax, 0x11
0x28ec2:   ba 00 00 00 00                        	mov edx, 0
0x28ec7:   f7 75 c8                              	div dword ptr [rbp - 0x38]
0x28eca:   09 c8                                 	or eax, ecx
0x28ecc:   89 c2                                 	mov edx, eax
0x28ece:   81 e2 ff ff bf c7                     	and edx, 0xc7bfffff
0x28ed4:   81 ca 00 00 00 08                     	or edx, 0x8000000
0x28eda:   be 1c 02 00 00                        	mov esi, 0x21c
0x28edf:   48 89 df                              	mov rdi, rbx
0x28ee2:   e8 cf ed ff ff                        	call 0x27cb6 <wReg32>
0x28ee7:   8b 45 ac                              	mov eax, dword ptr [rbp - 0x54]
0x28eea:   03 45 b0                              	add eax, dword ptr [rbp - 0x50]
0x28eed:   80 7d c0 00                           	cmp byte ptr [rbp - 0x40], 0
0x28ef1:   0f 44 45 ac                           	cmove eax, dword ptr [rbp - 0x54]
0x28ef5:   b9 d3 4d 62 10                        	mov ecx, 0x10624dd3
0x28efa:   f7 e1                                 	mul ecx
0x28efc:   89 55 c0                              	mov dword ptr [rbp - 0x40], edx
0x28eff:   be 34 02 00 00                        	mov esi, 0x234
0x28f04:   48 89 df                              	mov rdi, rbx
0x28f07:   e8 d4 db ff ff                        	call 0x26ae0 <rReg32>
0x28f0c:   89 c1                                 	mov ecx, eax
0x28f0e:   81 e1 00 00 c0 ff                     	and ecx, 0xffc00000
0x28f14:   8b 45 c0                              	mov eax, dword ptr [rbp - 0x40]
0x28f17:   c1 e8 09                              	shr eax, 9
0x28f1a:   c1 e0 11                              	shl eax, 0x11
0x28f1d:   ba 00 00 00 00                        	mov edx, 0
0x28f22:   f7 75 c8                              	div dword ptr [rbp - 0x38]
0x28f25:   09 c1                                 	or ecx, eax
0x28f27:   89 ca                                 	mov edx, ecx
0x28f29:   81 e2 ff ff ff cf                     	and edx, 0xcfffffff
0x28f2f:   be 34 02 00 00                        	mov esi, 0x234
0x28f34:   48 89 df                              	mov rdi, rbx
0x28f37:   e8 7a ed ff ff                        	call 0x27cb6 <wReg32>
0x28f3c:   49 63 c7                              	movsxd rax, r15d
0x28f3f:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28f46:   44 39 a0 00 00 00 00                  	cmp dword ptr [rax], r12d
0x28f4d:   0f 84 b0 00 00 00                     	je 0x29003 <nm131_demod_config+0x958>
0x28f53:   41 83 fc 05                           	cmp r12d, 5
0x28f57:   74 06                                 	je 0x28f5f <nm131_demod_config+0x8b4>
0x28f59:   41 83 fc 07                           	cmp r12d, 7
0x28f5d:   75 48                                 	jne 0x28fa7 <nm131_demod_config+0x8fc>
0x28f5f:   be 2c 01 00 00                        	mov esi, 0x12c
0x28f64:   48 89 df                              	mov rdi, rbx
0x28f67:   e8 74 db ff ff                        	call 0x26ae0 <rReg32>
0x28f6c:   89 c2                                 	mov edx, eax
0x28f6e:   81 e2 7f 8f ff ff                     	and edx, 0xffff8f7f
0x28f74:   be 2c 01 00 00                        	mov esi, 0x12c
0x28f79:   48 89 df                              	mov rdi, rbx
0x28f7c:   e8 35 ed ff ff                        	call 0x27cb6 <wReg32>
0x28f81:   ba d6 5a 00 00                        	mov edx, 0x5ad6
0x28f86:   be 38 01 00 00                        	mov esi, 0x138
0x28f8b:   48 89 df                              	mov rdi, rbx
0x28f8e:   e8 23 ed ff ff                        	call 0x27cb6 <wReg32>
0x28f93:   ba 01 10 00 00                        	mov edx, 0x1001
0x28f98:   be 48 01 00 00                        	mov esi, 0x148
0x28f9d:   48 89 df                              	mov rdi, rbx
0x28fa0:   e8 11 ed ff ff                        	call 0x27cb6 <wReg32>
0x28fa5:   eb 49                                 	jmp 0x28ff0 <nm131_demod_config+0x945>
0x28fa7:   be 2c 01 00 00                        	mov esi, 0x12c
0x28fac:   48 89 df                              	mov rdi, rbx
0x28faf:   e8 2c db ff ff                        	call 0x26ae0 <rReg32>
0x28fb4:   89 c2                                 	mov edx, eax
0x28fb6:   81 e2 7f 8f ff ff                     	and edx, 0xffff8f7f
0x28fbc:   80 ce 10                              	or dh, 0x10
0x28fbf:   be 2c 01 00 00                        	mov esi, 0x12c
0x28fc4:   48 89 df                              	mov rdi, rbx
0x28fc7:   e8 ea ec ff ff                        	call 0x27cb6 <wReg32>
0x28fcc:   ba 18 5b 00 00                        	mov edx, 0x5b18
0x28fd1:   be 38 01 00 00                        	mov esi, 0x138
0x28fd6:   48 89 df                              	mov rdi, rbx
0x28fd9:   e8 d8 ec ff ff                        	call 0x27cb6 <wReg32>
0x28fde:   ba 82 f0 1f 00                        	mov edx, 0x1ff082
0x28fe3:   be 48 01 00 00                        	mov esi, 0x148
0x28fe8:   48 89 df                              	mov rdi, rbx
0x28feb:   e8 c6 ec ff ff                        	call 0x27cb6 <wReg32>
0x28ff0:   49 63 c7                              	movsxd rax, r15d
0x28ff3:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x28ffa:   44 39 a0 00 00 00 00                  	cmp dword ptr [rax], r12d
0x29001:   75 1d                                 	jne 0x29020 <nm131_demod_config+0x975>
0x29003:   49 63 c7                              	movsxd rax, r15d
0x29006:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2900d:   44 39 b0 00 00 00 00                  	cmp dword ptr [rax], r14d
0x29014:   75 0a                                 	jne 0x29020 <nm131_demod_config+0x975>
0x29016:   41 83 fe 01                           	cmp r14d, 1
0x2901a:   0f 87 98 00 00 00                     	ja 0x290b8 <nm131_demod_config+0xa0d>
0x29020:   be 00 02 00 00                        	mov esi, 0x200
0x29025:   48 89 df                              	mov rdi, rbx
0x29028:   e8 b3 da ff ff                        	call 0x26ae0 <rReg32>
0x2902d:   41 83 fc 05                           	cmp r12d, 5
0x29031:   74 06                                 	je 0x29039 <nm131_demod_config+0x98e>
0x29033:   41 83 fc 07                           	cmp r12d, 7
0x29037:   75 1d                                 	jne 0x29056 <nm131_demod_config+0x9ab>
0x29039:   41 83 fe 01                           	cmp r14d, 1
0x2903d:   77 0a                                 	ja 0x29049 <nm131_demod_config+0x99e>
0x2903f:   89 c2                                 	mov edx, eax
0x29041:   81 e2 00 40 ff ff                     	and edx, 0xffff4000
0x29047:   eb 23                                 	jmp 0x2906c <nm131_demod_config+0x9c1>
0x29049:   80 cc 80                              	or ah, 0x80
0x2904c:   89 c2                                 	mov edx, eax
0x2904e:   81 e2 00 c0 ff ff                     	and edx, 0xffffc000
0x29054:   eb 11                                 	jmp 0x29067 <nm131_demod_config+0x9bc>
0x29056:   80 cc 80                              	or ah, 0x80
0x29059:   89 c2                                 	mov edx, eax
0x2905b:   81 e2 00 c0 ff ff                     	and edx, 0xffffc000
0x29061:   41 83 fe 01                           	cmp r14d, 1
0x29065:   76 05                                 	jbe 0x2906c <nm131_demod_config+0x9c1>
0x29067:   80 ce 08                              	or dh, 8
0x2906a:   eb 3f                                 	jmp 0x290ab <nm131_demod_config+0xa00>
0x2906c:   49 63 c7                              	movsxd rax, r15d
0x2906f:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x29076:   80 b8 00 00 00 00 20                  	cmp byte ptr [rax], 0x20
0x2907d:   76 11                                 	jbe 0x29090 <nm131_demod_config+0x9e5>
0x2907f:   49 63 c7                              	movsxd rax, r15d
0x29082:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x29089:   c6 80 00 00 00 00 20                  	mov byte ptr [rax], 0x20
0x29090:   49 63 c7                              	movsxd rax, r15d
0x29093:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2909a:   0f b6 80 00 00 00 00                  	movzx eax, byte ptr [rax]
0x290a1:   c1 e0 06                              	shl eax, 6
0x290a4:   05 00 06 00 00                        	add eax, 0x600
0x290a9:   09 c2                                 	or edx, eax
0x290ab:   be 00 02 00 00                        	mov esi, 0x200
0x290b0:   48 89 df                              	mov rdi, rbx
0x290b3:   e8 fe eb ff ff                        	call 0x27cb6 <wReg32>
0x290b8:   45 85 e4                              	test r12d, r12d
0x290bb:   74 06                                 	je 0x290c3 <nm131_demod_config+0xa18>
0x290bd:   41 83 fc 0d                           	cmp r12d, 0xd ; "NU"
0x290c1:   75 29                                 	jne 0x290ec <nm131_demod_config+0xa41>
0x290c3:   8b 55 c4                              	mov edx, dword ptr [rbp - 0x3c]
0x290c6:   c1 ea 05                              	shr edx, 5
0x290c9:   69 d2 5a 03 00 00                     	imul edx, edx, 0x35a
0x290cf:   81 ea 00 e8 41 4f                     	sub edx, 0x4f41e800
0x290d5:   c1 ea 06                              	shr edx, 6
0x290d8:   b9 dd 60 6d 02                        	mov ecx, 0x26d60dd
0x290dd:   89 d0                                 	mov eax, edx
0x290df:   f7 e1                                 	mul ecx
0x290e1:   c1 ea 05                              	shr edx, 5
0x290e4:   83 e2 f0                              	and edx, 0xfffffff0
0x290e7:   83 ca 03                              	or edx, 3
0x290ea:   eb 39                                 	jmp 0x29125 <nm131_demod_config+0xa7a>
0x290ec:   8b 55 c4                              	mov edx, dword ptr [rbp - 0x3c]
0x290ef:   c1 ea 05                              	shr edx, 5
0x290f2:   69 d2 60 03 00 00                     	imul edx, edx, 0x360
0x290f8:   81 ea 00 80 05 4e                     	sub edx, 0x4e058000
0x290fe:   c1 ea 06                              	shr edx, 6
0x29101:   b9 dd 60 6d 02                        	mov ecx, 0x26d60dd
0x29106:   89 d0                                 	mov eax, edx
0x29108:   f7 e1                                 	mul ecx
0x2910a:   c1 ea 05                              	shr edx, 5
0x2910d:   83 e2 f0                              	and edx, 0xfffffff0
0x29110:   83 ca 03                              	or edx, 3
0x29113:   41 83 fc 05                           	cmp r12d, 5
0x29117:   74 06                                 	je 0x2911f <nm131_demod_config+0xa74>
0x29119:   41 83 fc 07                           	cmp r12d, 7
0x2911d:   75 06                                 	jne 0x29125 <nm131_demod_config+0xa7a>
0x2911f:   81 ca 00 00 39 01                     	or edx, 0x1390000
0x29125:   be 10 02 00 00                        	mov esi, 0x210
0x2912a:   48 89 df                              	mov rdi, rbx
0x2912d:   e8 84 eb ff ff                        	call 0x27cb6 <wReg32>
0x29132:   be 04 01 00 00                        	mov esi, 0x104
0x29137:   48 89 df                              	mov rdi, rbx
0x2913a:   e8 a1 d9 ff ff                        	call 0x26ae0 <rReg32>
0x2913f:   25 c0 ff ff 87                        	and eax, 0x87ffffc0
0x29144:   0d 11 00 00 10                        	or eax, 0x10000011
0x29149:   41 83 fe 02                           	cmp r14d, 2
0x2914d:   75 2c                                 	jne 0x2917b <nm131_demod_config+0xad0>
0x2914f:   41 83 fc 06                           	cmp r12d, 6
0x29153:   74 35                                 	je 0x2918a <nm131_demod_config+0xadf>
0x29155:   41 83 fc 08                           	cmp r12d, 8
0x29159:   74 2f                                 	je 0x2918a <nm131_demod_config+0xadf>
0x2915b:   41 83 fc 0c                           	cmp r12d, 0xc ; "GNU"
0x2915f:   74 29                                 	je 0x2918a <nm131_demod_config+0xadf>
0x29161:   41 83 fc 0e                           	cmp r12d, 0xe
0x29165:   74 23                                 	je 0x2918a <nm131_demod_config+0xadf>
0x29167:   41 83 fc 0f                           	cmp r12d, 0xf
0x2916b:   74 1d                                 	je 0x2918a <nm131_demod_config+0xadf>
0x2916d:   89 c2                                 	mov edx, eax
0x2916f:   83 ca 02                              	or edx, 2
0x29172:   41 83 fc 10                           	cmp r12d, 0x10
0x29176:   0f 45 c2                              	cmovne eax, edx
0x29179:   eb 0f                                 	jmp 0x2918a <nm131_demod_config+0xadf>
0x2917b:   83 c8 06                              	or eax, 6
0x2917e:   89 c2                                 	mov edx, eax
0x29180:   83 ca 08                              	or edx, 8
0x29183:   41 83 fe 01                           	cmp r14d, 1
0x29187:   0f 44 c2                              	cmove eax, edx
0x2918a:   44 89 e1                              	mov ecx, r12d
0x2918d:   0f b6 91 00 00 00 00                  	movzx edx, byte ptr [rcx]
0x29194:   0f b6 89 00 00 00 00                  	movzx ecx, byte ptr [rcx]
0x2919b:   85 c9                                 	test ecx, ecx
0x2919d:   75 0a                                 	jne 0x291a9 <nm131_demod_config+0xafe>
0x2919f:   81 7d c4 01 30 2a 00                  	cmp dword ptr [rbp - 0x3c], 0x2a3001
0x291a6:   83 da ff                              	sbb edx, -1
0x291a9:   41 80 7d 29 00                        	cmp byte ptr [r13 + 0x29], 0
0x291ae:   74 05                                 	je 0x291b5 <nm131_demod_config+0xb0a>
0x291b0:   41 0f b6 55 2a                        	movzx edx, byte ptr [r13 + 0x2a]
0x291b5:   80 e4 87                              	and ah, 0x87
0x291b8:   c1 e2 0b                              	shl edx, 0xb
0x291bb:   09 d0                                 	or eax, edx
0x291bd:   80 e4 7f                              	and ah, 0x7f
0x291c0:   c1 e1 0f                              	shl ecx, 0xf
0x291c3:   09 c1                                 	or ecx, eax
0x291c5:   41 83 fe 01                           	cmp r14d, 1
0x291c9:   77 39                                 	ja 0x29204 <nm131_demod_config+0xb59>
0x291cb:   45 89 e4                              	mov r12d, r12d
0x291ce:   41 0f b6 84 24 00 00 00 00            	movzx eax, byte ptr [r12]
0x291d7:   81 7d c4 01 30 2a 00                  	cmp dword ptr [rbp - 0x3c], 0x2a3001
0x291de:   83 d8 ff                              	sbb eax, -1
0x291e1:   81 e1 ff ff f0 ff                     	and ecx, 0xfff0ffff
0x291e7:   41 89 c5                              	mov r13d, eax
0x291ea:   41 c1 e5 10                           	shl r13d, 0x10
0x291ee:   41 09 cd                              	or r13d, ecx
0x291f1:   41 81 e5 ff ff 0f fc                  	and r13d, 0xfc0fffff
0x291f8:   41 81 cd 00 00 80 01                  	or r13d, 0x1800000
0x291ff:   e9 1f 01 00 00                        	jmp 0x29323 <nm131_demod_config+0xc78>
0x29204:   44 89 e0                              	mov eax, r12d
0x29207:   8b 34 85 00 00 00 00                  	mov esi, dword ptr [rax*4]
0x2920e:   81 7d c4 fc 3f 38 00                  	cmp dword ptr [rbp - 0x3c], 0x383ffc
0x29215:   76 08                                 	jbe 0x2921f <nm131_demod_config+0xb74>
0x29217:   83 c6 02                              	add esi, 2
0x2921a:   e9 a4 01 00 00                        	jmp 0x293c3 <nm131_demod_config+0xd18>
0x2921f:   81 7d c4 f9 1f 1c 00                  	cmp dword ptr [rbp - 0x3c], 0x1c1ff9
0x29226:   83 de ff                              	sbb esi, -1
0x29229:   e9 95 01 00 00                        	jmp 0x293c3 <nm131_demod_config+0xd18>
0x2922e:   41 83 fc 06                           	cmp r12d, 6
0x29232:   74 1e                                 	je 0x29252 <nm131_demod_config+0xba7>
0x29234:   41 83 fc 08                           	cmp r12d, 8
0x29238:   74 18                                 	je 0x29252 <nm131_demod_config+0xba7>
0x2923a:   41 83 fc 0c                           	cmp r12d, 0xc ; "GNU"
0x2923e:   74 12                                 	je 0x29252 <nm131_demod_config+0xba7>
0x29240:   41 83 fc 0e                           	cmp r12d, 0xe
0x29244:   74 0c                                 	je 0x29252 <nm131_demod_config+0xba7>
0x29246:   41 83 fc 0f                           	cmp r12d, 0xf
0x2924a:   74 06                                 	je 0x29252 <nm131_demod_config+0xba7>
0x2924c:   41 83 fc 10                           	cmp r12d, 0x10
0x29250:   75 09                                 	jne 0x2925b <nm131_demod_config+0xbb0>
0x29252:   41 81 cd 00 00 20 00                  	or r13d, 0x200000
0x29259:   eb 07                                 	jmp 0x29262 <nm131_demod_config+0xbb7>
0x2925b:   41 81 cd 00 00 20 00                  	or r13d, 0x200000
0x29262:   4d 63 ff                              	movsxd r15, r15d
0x29265:   4d 69 ff b8 00 00 00                  	imul r15, r15, 0xb8
0x2926c:   41 8b 87 00 00 00 00                  	mov eax, dword ptr [r15]
0x29273:   89 c2                                 	mov edx, eax
0x29275:   81 e2 00 ff 0f 00                     	and edx, 0xfff00
0x2927b:   81 fa 00 20 01 00                     	cmp edx, 0x12000
0x29281:   74 0c                                 	je 0x2928f <nm131_demod_config+0xbe4>
0x29283:   25 00 ff ff 00                        	and eax, 0xffff00
0x29288:   3d 00 30 01 00                        	cmp eax, 0x13000
0x2928d:   75 0c                                 	jne 0x2929b <nm131_demod_config+0xbf0>
0x2928f:   41 81 cd 00 00 80 00                  	or r13d, 0x800000
0x29296:   e9 88 00 00 00                        	jmp 0x29323 <nm131_demod_config+0xc78>
0x2929b:   81 fa 00 31 01 00                     	cmp edx, 0x13100
0x292a1:   74 07                                 	je 0x292aa <nm131_demod_config+0xbff>
0x292a3:   3d 00 30 81 00                        	cmp eax, 0x813000
0x292a8:   75 79                                 	jne 0x29323 <nm131_demod_config+0xc78>
0x292aa:   83 7d a4 00                           	cmp dword ptr [rbp - 0x5c], 0
0x292ae:   75 09                                 	jne 0x292b9 <nm131_demod_config+0xc0e>
0x292b0:   41 81 cd 00 00 40 02                  	or r13d, 0x2400000
0x292b7:   eb 6a                                 	jmp 0x29323 <nm131_demod_config+0xc78>
0x292b9:   83 7d a4 01                           	cmp dword ptr [rbp - 0x5c], 1
0x292bd:   75 09                                 	jne 0x292c8 <nm131_demod_config+0xc1d>
0x292bf:   41 81 cd 00 00 80 00                  	or r13d, 0x800000
0x292c6:   eb 5b                                 	jmp 0x29323 <nm131_demod_config+0xc78>
0x292c8:   83 7d a4 02                           	cmp dword ptr [rbp - 0x5c], 2
0x292cc:   75 09                                 	jne 0x292d7 <nm131_demod_config+0xc2c>
0x292ce:   41 81 cd 00 00 00 02                  	or r13d, 0x2000000
0x292d5:   eb 4c                                 	jmp 0x29323 <nm131_demod_config+0xc78>
0x292d7:   44 89 e8                              	mov eax, r13d
0x292da:   0d 00 00 80 02                        	or eax, 0x2800000
0x292df:   83 7d a4 03                           	cmp dword ptr [rbp - 0x5c], 3
0x292e3:   44 0f 44 e8                           	cmove r13d, eax
0x292e7:   eb 3a                                 	jmp 0x29323 <nm131_demod_config+0xc78>
0x292e9:   41 83 fe 04                           	cmp r14d, 4
0x292ed:   75 34                                 	jne 0x29323 <nm131_demod_config+0xc78>
0x292ef:   41 83 fc 06                           	cmp r12d, 6
0x292f3:   74 2e                                 	je 0x29323 <nm131_demod_config+0xc78>
0x292f5:   41 83 fc 08                           	cmp r12d, 8
0x292f9:   74 28                                 	je 0x29323 <nm131_demod_config+0xc78>
0x292fb:   41 83 fc 0c                           	cmp r12d, 0xc ; "GNU"
0x292ff:   74 22                                 	je 0x29323 <nm131_demod_config+0xc78>
0x29301:   41 83 fc 0e                           	cmp r12d, 0xe
0x29305:   74 1c                                 	je 0x29323 <nm131_demod_config+0xc78>
0x29307:   41 83 fc 0f                           	cmp r12d, 0xf
0x2930b:   74 16                                 	je 0x29323 <nm131_demod_config+0xc78>
0x2930d:   41 83 fc 10                           	cmp r12d, 0x10
0x29311:   74 10                                 	je 0x29323 <nm131_demod_config+0xc78>
0x29313:   44 89 e8                              	mov eax, r13d
0x29316:   0d 00 00 90 01                        	or eax, 0x1900000
0x2931b:   41 83 fc ff                           	cmp r12d, -1
0x2931f:   44 0f 45 e8                           	cmovne r13d, eax
0x29323:   44 89 ea                              	mov edx, r13d
0x29326:   be 04 01 00 00                        	mov esi, 0x104
0x2932b:   48 89 df                              	mov rdi, rbx
0x2932e:   e8 83 e9 ff ff                        	call 0x27cb6 <wReg32>
0x29333:   41 83 e5 ef                           	and r13d, 0xffffffef
0x29337:   41 81 cd 20 00 00 20                  	or r13d, 0x20000020
0x2933e:   44 89 ea                              	mov edx, r13d
0x29341:   be 04 01 00 00                        	mov esi, 0x104
0x29346:   48 89 df                              	mov rdi, rbx
0x29349:   e8 68 e9 ff ff                        	call 0x27cb6 <wReg32>
0x2934e:   be 01 00 00 00                        	mov esi, 1
0x29353:   48 89 df                              	mov rdi, rbx
0x29356:   e8 35 4e ff ff                        	call 0x1e190 <nmi_delay>
0x2935b:   be 28 03 00 00                        	mov esi, 0x328
0x29360:   48 89 df                              	mov rdi, rbx
0x29363:   e8 78 d7 ff ff                        	call 0x26ae0 <rReg32>
0x29368:   85 c0                                 	test eax, eax
0x2936a:   0f 84 af 00 00 00                     	je 0x2941f
0x29370:   41 83 e5 df                           	and r13d, 0xffffffdf
0x29374:   44 89 ea                              	mov edx, r13d
0x29377:   be 04 01 00 00                        	mov esi, 0x104
0x2937c:   48 89 df                              	mov rdi, rbx
0x2937f:   e8 32 e9 ff ff                        	call 0x27cb6 <wReg32>
0x29384:   44 89 ea                              	mov edx, r13d
0x29387:   83 ca 20                              	or edx, 0x20
0x2938a:   be 04 01 00 00                        	mov esi, 0x104
0x2938f:   48 89 df                              	mov rdi, rbx
0x29392:   e8 1f e9 ff ff                        	call 0x27cb6 <wReg32>
0x29397:   e9 83 00 00 00                        	jmp 0x2941f
0x2939c:   be 38 02 00 00                        	mov esi, 0x238
0x293a1:   48 89 df                              	mov rdi, rbx
0x293a4:   e8 0d e9 ff ff                        	call 0x27cb6 <wReg32>
0x293a9:   be 2c 03 00 00                        	mov esi, 0x32c
0x293ae:   48 89 df                              	mov rdi, rbx
0x293b1:   e8 2a d7 ff ff                        	call 0x26ae0 <rReg32>
0x293b6:   89 c2                                 	mov edx, eax
0x293b8:   81 e2 ff bf ff bf                     	and edx, 0xbfffbfff
0x293be:   e9 6d f6 ff ff                        	jmp 0x28a30 <nm131_demod_config+0x385>
0x293c3:   81 e1 ff ff f0 ff                     	and ecx, 0xfff0ffff
0x293c9:   41 89 f5                              	mov r13d, esi
0x293cc:   41 c1 e5 10                           	shl r13d, 0x10
0x293d0:   44 09 e9                              	or ecx, r13d
0x293d3:   41 89 cd                              	mov r13d, ecx
0x293d6:   41 81 e5 ff ff 0f fc                  	and r13d, 0xfc0fffff
0x293dd:   41 83 fe 02                           	cmp r14d, 2
0x293e1:   0f 85 02 ff ff ff                     	jne 0x292e9 <nm131_demod_config+0xc3e>
0x293e7:   e9 42 fe ff ff                        	jmp 0x2922e <nm131_demod_config+0xb83>
0x293ec:   89 c2                                 	mov edx, eax
0x293ee:   be 80 02 00 00                        	mov esi, 0x280
0x293f3:   48 89 df                              	mov rdi, rbx
0x293f6:   e8 bb e8 ff ff                        	call 0x27cb6 <wReg32>
; data inside code section at 0x293fb -- 0x293fe
0x293fb:   be 38 02                                           |.8.             |
; function: nm131_tune_internal at 0x293fe -- 0x2942e
0x293fe:   00 00                                 	add byte ptr [rax], al
0x29400:   48 89 df                              	mov rdi, rbx
0x29403:   e8 d8 d6 ff ff                        	call 0x26ae0 <rReg32>
0x29408:   89 c2                                 	mov edx, eax
0x2940a:   81 e2 00 c0 ff ff                     	and edx, 0xffffc000
0x29410:   41 83 fe 01                           	cmp r14d, 1
0x29414:   0f 85 ee f5 ff ff                     	jne 0x28a08
0x2941a:   e9 e1 f5 ff ff                        	jmp 0x28a00
0x2941f:   48 83 c4 38                           	add rsp, 0x38
0x29423:   5b                                    	pop rbx
0x29424:   41 5c                                 	pop r12
0x29426:   41 5d                                 	pop r13
0x29428:   41 5e                                 	pop r14
0x2942a:   41 5f                                 	pop r15
0x2942c:   c9                                    	leave 
0x2942d:   c3                                    	ret 
; function: nm131_tune_internal at 0x2942e -- 0x2a725
0x2942e:   55                                    	push rbp
0x2942f:   48 89 e5                              	mov rbp, rsp
0x29432:   41 57                                 	push r15
0x29434:   41 56                                 	push r14
0x29436:   41 55                                 	push r13
0x29438:   41 54                                 	push r12
0x2943a:   53                                    	push rbx
0x2943b:   48 83 ec 48                           	sub rsp, 0x48
0x2943f:   e8 ac 57 01 00                        	call 0x3ebf0 <mcount>
0x29444:   49 89 fe                              	mov r14, rdi
0x29447:   49 89 f4                              	mov r12, rsi
0x2944a:   89 55 a4                              	mov dword ptr [rbp - 0x5c], edx
0x2944d:   65 48 8b 04 25 28 00 00 00            	mov rax, qword ptr gs:[0x28]
0x29456:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x2945a:   31 c0                                 	xor eax, eax
0x2945c:   0f b6 17                              	movzx edx, byte ptr [rdi]
0x2945f:   89 55 a8                              	mov dword ptr [rbp - 0x58], edx
0x29462:   c6 45 c0 00                           	mov byte ptr [rbp - 0x40], 0
0x29466:   c6 45 c1 01                           	mov byte ptr [rbp - 0x3f], 1
0x2946a:   c6 45 c2 02                           	mov byte ptr [rbp - 0x3e], 2
0x2946e:   c6 45 c3 03                           	mov byte ptr [rbp - 0x3d], 3
0x29472:   c6 45 c4 04                           	mov byte ptr [rbp - 0x3c], 4
0x29476:   c6 45 c5 06                           	mov byte ptr [rbp - 0x3b], 6
0x2947a:   c6 45 c6 09                           	mov byte ptr [rbp - 0x3a], 9
0x2947e:   c6 45 c7 0c                           	mov byte ptr [rbp - 0x39], 0xc ; "GNU"
0x29482:   8b 0e                                 	mov ecx, dword ptr [rsi]
0x29484:   89 4d b8                              	mov dword ptr [rbp - 0x48], ecx
0x29487:   8b 46 0c                              	mov eax, dword ptr [rsi + 0xc]
0x2948a:   89 45 ac                              	mov dword ptr [rbp - 0x54], eax
0x2948d:   8b 56 10                              	mov edx, dword ptr [rsi + 0x10]
0x29490:   89 55 9c                              	mov dword ptr [rbp - 0x64], edx
0x29493:   8b 4e 18                              	mov ecx, dword ptr [rsi + 0x18]
0x29496:   89 4d 94                              	mov dword ptr [rbp - 0x6c], ecx
0x29499:   0f b6 46 1c                           	movzx eax, byte ptr [rsi + 0x1c]
0x2949d:   88 45 9b                              	mov byte ptr [rbp - 0x65], al
0x294a0:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x294a4:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x294ab:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x294b1:   89 45 bc                              	mov dword ptr [rbp - 0x44], eax
0x294b4:   c7 45 a0 00 00 00 00                  	mov dword ptr [rbp - 0x60], 0
0x294bb:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x294bf:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x294c6:   48 89 45 b0                           	mov qword ptr [rbp - 0x50], rax
0x294ca:   48 8b 4d b0                           	mov rcx, qword ptr [rbp - 0x50]
0x294ce:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x294d5:   8b 04 11                              	mov eax, dword ptr [rcx + rdx]
0x294d8:   25 00 ff ff 00                        	and eax, 0xffff00
0x294dd:   3d 00 30 01 00                        	cmp eax, 0x13000
0x294e2:   0f 85 fb 00 00 00                     	jne 0x295e3 <nm131_tune_internal+0x1b5>
0x294e8:   81 7d b8 80 ca e1 23                  	cmp dword ptr [rbp - 0x48], 0x23e1ca80
0x294ef:   0f 84 a2 00 00 00                     	je 0x29597 <nm131_tune_internal+0x169>
0x294f5:   81 7d b8 80 ca e1 23                  	cmp dword ptr [rbp - 0x48], 0x23e1ca80
0x294fc:   77 3d                                 	ja 0x2953b <nm131_tune_internal+0x10d>
0x294fe:   81 7d b8 c0 40 31 0a                  	cmp dword ptr [rbp - 0x48], 0xa3140c0
0x29505:   0f 84 8c 00 00 00                     	je 0x29597 <nm131_tune_internal+0x169>
0x2950b:   81 7d b8 c0 40 31 0a                  	cmp dword ptr [rbp - 0x48], 0xa3140c0
0x29512:   77 0f                                 	ja 0x29523 <nm131_tune_internal+0xf5>
0x29514:   81 7d b8 c0 0a c3 08                  	cmp dword ptr [rbp - 0x48], 0x8c30ac0
0x2951b:   0f 85 9d 00 00 00                     	jne 0x295be <nm131_tune_internal+0x190>
0x29521:   eb 52                                 	jmp 0x29575 <nm131_tune_internal+0x147>
0x29523:   81 7d b8 80 f2 28 1e                  	cmp dword ptr [rbp - 0x48], 0x1e28f280
0x2952a:   74 6b                                 	je 0x29597 <nm131_tune_internal+0x169>
0x2952c:   81 7d b8 80 5e 05 21                  	cmp dword ptr [rbp - 0x48], 0x21055e80
0x29533:   0f 85 85 00 00 00                     	jne 0x295be <nm131_tune_internal+0x190>
0x29539:   eb 5c                                 	jmp 0x29597 <nm131_tune_internal+0x169>
0x2953b:   81 7d b8 80 0e 77 2c                  	cmp dword ptr [rbp - 0x48], 0x2c770e80
0x29542:   74 53                                 	je 0x29597 <nm131_tune_internal+0x169>
0x29544:   81 7d b8 80 0e 77 2c                  	cmp dword ptr [rbp - 0x48], 0x2c770e80
0x2954b:   77 14                                 	ja 0x29561 <nm131_tune_internal+0x133>
0x2954d:   81 7d b8 80 36 be 26                  	cmp dword ptr [rbp - 0x48], 0x26be3680
0x29554:   74 41                                 	je 0x29597 <nm131_tune_internal+0x169>
0x29556:   81 7d b8 80 a2 9a 29                  	cmp dword ptr [rbp - 0x48], 0x299aa280
0x2955d:   75 5f                                 	jne 0x295be <nm131_tune_internal+0x190>
0x2955f:   eb 36                                 	jmp 0x29597 <nm131_tune_internal+0x169>
0x29561:   81 7d b8 80 7a 53 2f                  	cmp dword ptr [rbp - 0x48], 0x2f537a80
0x29568:   74 2d                                 	je 0x29597 <nm131_tune_internal+0x169>
0x2956a:   81 7d b8 80 e6 2f 32                  	cmp dword ptr [rbp - 0x48], 0x322fe680
0x29571:   75 4b                                 	jne 0x295be <nm131_tune_internal+0x190>
0x29573:   eb 22                                 	jmp 0x29597 <nm131_tune_internal+0x169>
0x29575:   be 21 00 00 00                        	mov esi, 0x21
0x2957a:   4c 89 f7                              	mov rdi, r14
0x2957d:   e8 62 d0 ff ff                        	call 0x265e4 <rReg8>
0x29582:   83 c8 03                              	or eax, 3
0x29585:   0f b6 d0                              	movzx edx, al
0x29588:   be 21 00 00 00                        	mov esi, 0x21
0x2958d:   4c 89 f7                              	mov rdi, r14
0x29590:   e8 a3 cc ff ff                        	call 0x26238 <wReg8>
0x29595:   eb 4c                                 	jmp 0x295e3 <nm131_tune_internal+0x1b5>
0x29597:   be 21 00 00 00                        	mov esi, 0x21
0x2959c:   4c 89 f7                              	mov rdi, r14
0x2959f:   e8 40 d0 ff ff                        	call 0x265e4 <rReg8>
0x295a4:   89 c2                                 	mov edx, eax
0x295a6:   81 e2 fc 00 00 00                     	and edx, 0xfc
0x295ac:   83 ca 02                              	or edx, 2
0x295af:   be 21 00 00 00                        	mov esi, 0x21
0x295b4:   4c 89 f7                              	mov rdi, r14
0x295b7:   e8 7c cc ff ff                        	call 0x26238 <wReg8>
0x295bc:   eb 25                                 	jmp 0x295e3 <nm131_tune_internal+0x1b5>
0x295be:   be 21 00 00 00                        	mov esi, 0x21
0x295c3:   4c 89 f7                              	mov rdi, r14
0x295c6:   e8 19 d0 ff ff                        	call 0x265e4 <rReg8>
0x295cb:   89 c2                                 	mov edx, eax
0x295cd:   81 e2 fc 00 00 00                     	and edx, 0xfc
0x295d3:   83 ca 01                              	or edx, 1
0x295d6:   be 21 00 00 00                        	mov esi, 0x21
0x295db:   4c 89 f7                              	mov rdi, r14
0x295de:   e8 55 cc ff ff                        	call 0x26238 <wReg8>
0x295e3:   44 8b 6d b8                           	mov r13d, dword ptr [rbp - 0x48]
0x295e7:   41 81 ed e0 67 35 00                  	sub r13d, 0x3567e0
0x295ee:   83 7d ac 0d                           	cmp dword ptr [rbp - 0x54], 0xd ; "NU"
0x295f2:   44 0f 45 6d b8                        	cmovne r13d, dword ptr [rbp - 0x48]
0x295f7:   41 0f b6 5c 24 20                     	movzx ebx, byte ptr [r12 + 0x20]
0x295fd:   84 db                                 	test bl, bl
0x295ff:   74 15                                 	je 0x29616 <nm131_tune_internal+0x1e8>
0x29601:   48 8b 55 b0                           	mov rdx, qword ptr [rbp - 0x50]
0x29605:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x2960c:   c6 44 02 01 0f                        	mov byte ptr [rdx + rax + 1], 0xf
0x29611:   e9 2a 01 00 00                        	jmp 0x29740 <nm131_tune_internal+0x312>
0x29616:   41 0f b6 06                           	movzx eax, byte ptr [r14]
0x2961a:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x29621:   80 b8 00 00 00 00 00                  	cmp byte ptr [rax], 0
0x29628:   74 1a                                 	je 0x29644 <nm131_tune_internal+0x216>
0x2962a:   48 8b 45 b0                           	mov rax, qword ptr [rbp - 0x50]
0x2962e:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x29635:   c6 44 08 01 0f                        	mov byte ptr [rax + rcx + 1], 0xf
0x2963a:   bb 87 ff ff ff                        	mov ebx, 0xffffff87
0x2963f:   e9 fc 00 00 00                        	jmp 0x29740 <nm131_tune_internal+0x312>
0x29644:   83 7d ac 0d                           	cmp dword ptr [rbp - 0x54], 0xd ; "NU"
0x29648:   75 1a                                 	jne 0x29664 <nm131_tune_internal+0x236>
0x2964a:   48 8b 4d b0                           	mov rcx, qword ptr [rbp - 0x50]
0x2964e:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x29655:   c6 44 11 01 0f                        	mov byte ptr [rcx + rdx + 1], 0xf
0x2965a:   bb 87 ff ff ff                        	mov ebx, 0xffffff87
0x2965f:   e9 dc 00 00 00                        	jmp 0x29740 <nm131_tune_internal+0x312>
0x29664:   83 7d ac 04                           	cmp dword ptr [rbp - 0x54], 4
0x29668:   75 44                                 	jne 0x296ae <nm131_tune_internal+0x280>
0x2966a:   41 8d 85 60 ff fa f5                  	lea eax, [r13 - 0xa0500a0]
0x29671:   3d e0 93 04 00                        	cmp eax, 0x493e0
0x29676:   76 1c                                 	jbe 0x29694 <nm131_tune_internal+0x266>
0x29678:   41 8d 85 60 c9 8c f4                  	lea eax, [r13 - 0xb7336a0]
0x2967f:   3d e0 93 04 00                        	cmp eax, 0x493e0
0x29684:   76 0e                                 	jbe 0x29694 <nm131_tune_internal+0x266>
0x29686:   41 8d 85 60 93 1e f3                  	lea eax, [r13 - 0xce16ca0]
0x2968d:   3d e0 93 04 00                        	cmp eax, 0x493e0
0x29692:   77 1a                                 	ja 0x296ae <nm131_tune_internal+0x280>
0x29694:   48 8b 55 b0                           	mov rdx, qword ptr [rbp - 0x50]
0x29698:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x2969f:   c6 44 02 01 0e                        	mov byte ptr [rdx + rax + 1], 0xe
0x296a4:   bb 03 00 00 00                        	mov ebx, 3
0x296a9:   e9 92 00 00 00                        	jmp 0x29740 <nm131_tune_internal+0x312>
0x296ae:   41 8d 85 60 6b d7 f8                  	lea eax, [r13 - 0x72894a0]
0x296b5:   3d e0 93 04 00                        	cmp eax, 0x493e0
0x296ba:   77 17                                 	ja 0x296d3 <nm131_tune_internal+0x2a5>
0x296bc:   48 8b 45 b0                           	mov rax, qword ptr [rbp - 0x50]
0x296c0:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x296c7:   c6 44 08 01 0e                        	mov byte ptr [rax + rcx + 1], 0xe
0x296cc:   bb 05 00 00 00                        	mov ebx, 5
0x296d1:   eb 6d                                 	jmp 0x29740 <nm131_tune_internal+0x312>
0x296d3:   83 7d ac 06                           	cmp dword ptr [rbp - 0x54], 6
0x296d7:   74 52                                 	je 0x2972b <nm131_tune_internal+0x2fd>
0x296d9:   83 7d ac 08                           	cmp dword ptr [rbp - 0x54], 8
0x296dd:   74 4c                                 	je 0x2972b <nm131_tune_internal+0x2fd>
0x296df:   83 7d ac 0c                           	cmp dword ptr [rbp - 0x54], 0xc ; "GNU"
0x296e3:   74 46                                 	je 0x2972b <nm131_tune_internal+0x2fd>
0x296e5:   83 7d ac 0e                           	cmp dword ptr [rbp - 0x54], 0xe
0x296e9:   74 40                                 	je 0x2972b <nm131_tune_internal+0x2fd>
0x296eb:   83 7d ac 0f                           	cmp dword ptr [rbp - 0x54], 0xf
0x296ef:   74 3a                                 	je 0x2972b <nm131_tune_internal+0x2fd>
0x296f1:   83 7d ac 10                           	cmp dword ptr [rbp - 0x54], 0x10
0x296f5:   74 34                                 	je 0x2972b <nm131_tune_internal+0x2fd>
0x296f7:   83 7d ac ff                           	cmp dword ptr [rbp - 0x54], -1
0x296fb:   74 2e                                 	je 0x2972b <nm131_tune_internal+0x2fd>
0x296fd:   41 81 fd d0 37 9e 0e                  	cmp r13d, 0xe9e37d0
0x29704:   76 0e                                 	jbe 0x29714 <nm131_tune_internal+0x2e6>
0x29706:   41 8d 85 a0 bd 32 de                  	lea eax, [r13 - 0x21cd4260]
0x2970d:   3d e0 93 04 00                        	cmp eax, 0x493e0
0x29712:   77 17                                 	ja 0x2972b <nm131_tune_internal+0x2fd>
0x29714:   48 8b 4d b0                           	mov rcx, qword ptr [rbp - 0x50]
0x29718:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2971f:   c6 44 11 01 0f                        	mov byte ptr [rcx + rdx + 1], 0xf
0x29724:   bb 87 ff ff ff                        	mov ebx, 0xffffff87
0x29729:   eb 15                                 	jmp 0x29740 <nm131_tune_internal+0x312>
0x2972b:   48 8b 55 b0                           	mov rdx, qword ptr [rbp - 0x50]
0x2972f:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x29736:   c6 44 02 01 0f                        	mov byte ptr [rdx + rax + 1], 0xf
0x2973b:   bb 85 ff ff ff                        	mov ebx, 0xffffff85
0x29740:   48 8b 4d b0                           	mov rcx, qword ptr [rbp - 0x50]
0x29744:   38 99 00 00 00 00                     	cmp byte ptr [rcx], bl
0x2974a:   74 1a                                 	je 0x29766 <nm131_tune_internal+0x338>
0x2974c:   0f b6 d3                              	movzx edx, bl
0x2974f:   be 05 00 00 00                        	mov esi, 5
0x29754:   4c 89 f7                              	mov rdi, r14
0x29757:   e8 dc ca ff ff                        	call 0x26238 <wReg8>
0x2975c:   48 8b 45 b0                           	mov rax, qword ptr [rbp - 0x50]
0x29760:   88 98 00 00 00 00                     	mov byte ptr [rax], bl
0x29766:   80 7d 9b 00                           	cmp byte ptr [rbp - 0x65], 0
0x2976a:   75 0d                                 	jne 0x29779 <nm131_tune_internal+0x34b>
0x2976c:   8b 45 ac                              	mov eax, dword ptr [rbp - 0x54]
0x2976f:   44 03 2c 85 00 00 00 00               	add r13d, dword ptr [rax*4]
0x29777:   eb 0b                                 	jmp 0x29784 <nm131_tune_internal+0x356>
0x29779:   8b 45 ac                              	mov eax, dword ptr [rbp - 0x54]
0x2977c:   44 2b 2c 85 00 00 00 00               	sub r13d, dword ptr [rax*4]
0x29784:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x2978b:   41 bf 06 00 00 00                     	mov r15d, 6
0x29791:   41 81 fd 40 b7 28 03                  	cmp r13d, 0x328b740
0x29798:   77 08                                 	ja 0x297a2 <nm131_tune_internal+0x374>
0x2979a:   41 bf 07 00 00 00                     	mov r15d, 7
0x297a0:   eb 13                                 	jmp 0x297b5 <nm131_tune_internal+0x387>
0x297a2:   44 39 28                              	cmp dword ptr [rax], r13d
0x297a5:   73 0e                                 	jae 0x297b5 <nm131_tune_internal+0x387>
0x297a7:   41 83 ef 01                           	sub r15d, 1
0x297ab:   48 83 e8 04                           	sub rax, 4
0x297af:   41 80 ff 01                           	cmp r15b, 1
0x297b3:   75 ed                                 	jne 0x297a2 <nm131_tune_internal+0x374>
0x297b5:   48 8b 55 b0                           	mov rdx, qword ptr [rbp - 0x50]
0x297b9:   44 89 aa 00 00 00 00                  	mov dword ptr [rdx], r13d
0x297c0:   bb 00 00 00 00                        	mov ebx, 0
0x297c5:   44 3b 2c dd 00 00 00 00               	cmp r13d, dword ptr [rbx*8]
0x297cd:   76 0a                                 	jbe 0x297d9 <nm131_tune_internal+0x3ab>
0x297cf:   44 3b 2c dd 00 00 00 00               	cmp r13d, dword ptr [rbx*8]
0x297d7:   76 0a                                 	jbe 0x297e3 <nm131_tune_internal+0x3b5>
0x297d9:   48 83 c3 01                           	add rbx, 1
0x297dd:   48 83 fb 08                           	cmp rbx, 8
0x297e1:   75 e2                                 	jne 0x297c5 <nm131_tune_internal+0x397>
0x297e3:   0f b6 14 dd 00 00 00 00               	movzx edx, byte ptr [rbx*8]
0x297eb:   be 08 00 00 00                        	mov esi, 8
0x297f0:   4c 89 f7                              	mov rdi, r14
0x297f3:   e8 40 ca ff ff                        	call 0x26238 <wReg8>
0x297f8:   0f b6 14 dd 00 00 00 00               	movzx edx, byte ptr [rbx*8]
0x29800:   be 09 00 00 00                        	mov esi, 9
0x29805:   4c 89 f7                              	mov rdi, r14
0x29808:   e8 2b ca ff ff                        	call 0x26238 <wReg8>
0x2980d:   41 0f b6 c7                           	movzx eax, r15b
0x29811:   0f b6 4c 05 c0                        	movzx ecx, byte ptr [rbp + rax - 0x40]
0x29816:   c1 e1 03                              	shl ecx, 3
0x29819:   ba d3 4d 62 10                        	mov edx, 0x10624dd3
0x2981e:   44 89 e8                              	mov eax, r13d
0x29821:   f7 e2                                 	mul edx
0x29823:   c1 ea 06                              	shr edx, 6
0x29826:   89 cb                                 	mov ebx, ecx
0x29828:   0f af da                              	imul ebx, edx
0x2982b:   be 21 00 00 00                        	mov esi, 0x21
0x29830:   4c 89 f7                              	mov rdi, r14
0x29833:   e8 ac cd ff ff                        	call 0x265e4 <rReg8>
0x29838:   83 e0 03                              	and eax, 3
0x2983b:   83 f8 02                              	cmp eax, 2
0x2983e:   74 11                                 	je 0x29851 <nm131_tune_internal+0x423>
0x29840:   8b 55 bc                              	mov edx, dword ptr [rbp - 0x44]
0x29843:   d1 ea                                 	shr edx, 1
0x29845:   83 f8 03                              	cmp eax, 3
0x29848:   0f 45 55 bc                           	cmovne edx, dword ptr [rbp - 0x44]
0x2984c:   89 55 bc                              	mov dword ptr [rbp - 0x44], edx
0x2984f:   eb 03                                 	jmp 0x29854 <nm131_tune_internal+0x426>
0x29851:   d1 65 bc                              	shl dword ptr [rbp - 0x44], 1
0x29854:   89 d8                                 	mov eax, ebx
0x29856:   ba 00 00 00 00                        	mov edx, 0
0x2985b:   f7 75 bc                              	div dword ptr [rbp - 0x44]
0x2985e:   89 d1                                 	mov ecx, edx
0x29860:   89 c6                                 	mov esi, eax
0x29862:   b8 00 00 00 80                        	mov eax, 0x80000000
0x29867:   ba 00 00 00 00                        	mov edx, 0
0x2986c:   f7 75 bc                              	div dword ptr [rbp - 0x44]
0x2986f:   0f af c1                              	imul eax, ecx
0x29872:   c1 e8 0c                              	shr eax, 0xc ; "GNU"
0x29875:   25 ff ff 07 00                        	and eax, 0x7ffff
0x2987a:   41 80 7c 24 28 00                     	cmp byte ptr [r12 + 0x28], 0
0x29880:   75 1d                                 	jne 0x2989f <nm131_tune_internal+0x471>
0x29882:   85 c0                                 	test eax, eax
0x29884:   74 19                                 	je 0x2989f <nm131_tune_internal+0x471>
0x29886:   83 7d a0 00                           	cmp dword ptr [rbp - 0x60], 0
0x2988a:   75 13                                 	jne 0x2989f <nm131_tune_internal+0x471>
0x2988c:   81 45 b8 e8 03 00 00                  	add dword ptr [rbp - 0x48], 0x3e8 ; "%("
0x29893:   c7 45 a0 01 00 00 00                  	mov dword ptr [rbp - 0x60], 1
0x2989a:   e9 2b fc ff ff                        	jmp 0x294ca <nm131_tune_internal+0x9c>
0x2989f:   66 89 75 b0                           	mov word ptr [rbp - 0x50], si
0x298a3:   89 45 bc                              	mov dword ptr [rbp - 0x44], eax
0x298a6:   89 5d b8                              	mov dword ptr [rbp - 0x48], ebx
0x298a9:   c1 eb 06                              	shr ebx, 6
0x298ac:   b9 dd 60 6d 02                        	mov ecx, 0x26d60dd
0x298b1:   89 d8                                 	mov eax, ebx
0x298b3:   f7 e1                                 	mul ecx
0x298b5:   89 d3                                 	mov ebx, edx
0x298b7:   c1 eb 05                              	shr ebx, 5
0x298ba:   80 fb 1f                              	cmp bl, 0x1f
0x298bd:   76 07                                 	jbe 0x298c6 <nm131_tune_internal+0x498>
0x298bf:   bb 1f 00 00 00                        	mov ebx, 0x1f
0x298c4:   eb 0b                                 	jmp 0x298d1 <nm131_tune_internal+0x4a3>
0x298c6:   80 fb 0f                              	cmp bl, 0xf
0x298c9:   b8 10 00 00 00                        	mov eax, 0x10
0x298ce:   0f 46 d8                              	cmovbe ebx, eax
0x298d1:   8b 45 b8                              	mov eax, dword ptr [rbp - 0x48]
0x298d4:   c1 e0 09                              	shl eax, 9
0x298d7:   0f b6 cb                              	movzx ecx, bl
0x298da:   ba 00 00 00 00                        	mov edx, 0
0x298df:   f7 f1                                 	div ecx
0x298e1:   2d 00 80 97 06                        	sub eax, 0x6978000
0x298e6:   89 45 b8                              	mov dword ptr [rbp - 0x48], eax
0x298e9:   0f b7 55 b0                           	movzx edx, word ptr [rbp - 0x50]
0x298ed:   66 d1 ea                              	shr dx, 1
0x298f0:   0f b6 d2                              	movzx edx, dl
0x298f3:   be 01 00 00 00                        	mov esi, 1
0x298f8:   4c 89 f7                              	mov rdi, r14
0x298fb:   e8 38 c9 ff ff                        	call 0x26238 <wReg8>
0x29900:   0f b6 45 b0                           	movzx eax, byte ptr [rbp - 0x50]
0x29904:   83 e0 01                              	and eax, 1
0x29907:   0f b6 55 bc                           	movzx edx, byte ptr [rbp - 0x44]
0x2990b:   01 d2                                 	add edx, edx
0x2990d:   09 c2                                 	or edx, eax
0x2990f:   0f b6 d2                              	movzx edx, dl
0x29912:   be 02 00 00 00                        	mov esi, 2
0x29917:   4c 89 f7                              	mov rdi, r14
0x2991a:   e8 19 c9 ff ff                        	call 0x26238 <wReg8>
0x2991f:   8b 55 bc                              	mov edx, dword ptr [rbp - 0x44]
0x29922:   c1 ea 07                              	shr edx, 7
0x29925:   0f b6 d2                              	movzx edx, dl
0x29928:   be 03 00 00 00                        	mov esi, 3
0x2992d:   4c 89 f7                              	mov rdi, r14
0x29930:   e8 03 c9 ff ff                        	call 0x26238 <wReg8>
0x29935:   89 da                                 	mov edx, ebx
0x29937:   c1 e2 04                              	shl edx, 4
0x2993a:   8b 45 bc                              	mov eax, dword ptr [rbp - 0x44]
0x2993d:   c1 e8 0f                              	shr eax, 0xf
0x29940:   09 c2                                 	or edx, eax
0x29942:   0f b6 d2                              	movzx edx, dl
0x29945:   be 04 00 00 00                        	mov esi, 4
0x2994a:   4c 89 f7                              	mov rdi, r14
0x2994d:   e8 e6 c8 ff ff                        	call 0x26238 <wReg8>
0x29952:   be 1d 00 00 00                        	mov esi, 0x1d
0x29957:   4c 89 f7                              	mov rdi, r14
0x2995a:   e8 85 cc ff ff                        	call 0x265e4 <rReg8>
0x2995f:   89 c2                                 	mov edx, eax
0x29961:   83 e2 1f                              	and edx, 0x1f
0x29964:   41 c1 e7 05                           	shl r15d, 5
0x29968:   44 09 fa                              	or edx, r15d
0x2996b:   0f b6 d2                              	movzx edx, dl
0x2996e:   be 1d 00 00 00                        	mov esi, 0x1d
0x29973:   4c 89 f7                              	mov rdi, r14
0x29976:   e8 bd c8 ff ff                        	call 0x26238 <wReg8>
0x2997b:   41 80 7c 24 28 00                     	cmp byte ptr [r12 + 0x28], 0
0x29981:   74 14                                 	je 0x29997 <nm131_tune_internal+0x569>
0x29983:   ba 0e 00 00 00                        	mov edx, 0xe
0x29988:   be 1b 00 00 00                        	mov esi, 0x1b
0x2998d:   4c 89 f7                              	mov rdi, r14
0x29990:   e8 a3 c8 ff ff                        	call 0x26238 <wReg8>
0x29995:   eb 49                                 	jmp 0x299e0 <nm131_tune_internal+0x5b2>
0x29997:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x2999b:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x299a2:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x299a8:   25 00 ff 0f 00                        	and eax, 0xfff00
0x299ad:   3d 00 20 01 00                        	cmp eax, 0x12000
0x299b2:   74 51                                 	je 0x29a05 <nm131_tune_internal+0x5d7>
0x299b4:   83 7d bc 00                           	cmp dword ptr [rbp - 0x44], 0
0x299b8:   75 14                                 	jne 0x299ce <nm131_tune_internal+0x5a0>
0x299ba:   ba 08 00 00 00                        	mov edx, 8
0x299bf:   be 1b 00 00 00                        	mov esi, 0x1b
0x299c4:   4c 89 f7                              	mov rdi, r14
0x299c7:   e8 6c c8 ff ff                        	call 0x26238 <wReg8>
0x299cc:   eb 12                                 	jmp 0x299e0 <nm131_tune_internal+0x5b2>
0x299ce:   ba 0e 00 00 00                        	mov edx, 0xe
0x299d3:   be 1b 00 00 00                        	mov esi, 0x1b
0x299d8:   4c 89 f7                              	mov rdi, r14
0x299db:   e8 58 c8 ff ff                        	call 0x26238 <wReg8>
0x299e0:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x299e4:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x299eb:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x299f1:   89 c2                                 	mov edx, eax
0x299f3:   81 e2 00 ff 0f 00                     	and edx, 0xfff00
0x299f9:   81 fa 00 20 01 00                     	cmp edx, 0x12000
0x299ff:   0f 85 4a 01 00 00                     	jne 0x29b4f <nm131_tune_internal+0x721>
0x29a05:   41 81 fd ff a2 e1 11                  	cmp r13d, 0x11e1a2ff
0x29a0c:   0f 86 be 00 00 00                     	jbe 0x29ad0 <nm131_tune_internal+0x6a2>
0x29a12:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x29a16:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x29a1d:   80 b8 00 00 00 00 00                  	cmp byte ptr [rax], 0
0x29a24:   74 26                                 	je 0x29a4c <nm131_tune_internal+0x61e>
0x29a26:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x29a2a:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x29a31:   c6 80 00 00 00 00 f4                  	mov byte ptr [rax], 0xf4
0x29a38:   ba fa 00 00 00                        	mov edx, 0xfa
0x29a3d:   be 25 00 00 00                        	mov esi, 0x25
0x29a42:   4c 89 f7                              	mov rdi, r14
0x29a45:   e8 ee c7 ff ff                        	call 0x26238 <wReg8>
0x29a4a:   eb 12                                 	jmp 0x29a5e <nm131_tune_internal+0x630>
0x29a4c:   ba f4 00 00 00                        	mov edx, 0xf4
0x29a51:   be 25 00 00 00                        	mov esi, 0x25
0x29a56:   4c 89 f7                              	mov rdi, r14
0x29a59:   e8 da c7 ff ff                        	call 0x26238 <wReg8>
0x29a5e:   ba ef 00 00 00                        	mov edx, 0xef
0x29a63:   be 27 00 00 00                        	mov esi, 0x27
0x29a68:   4c 89 f7                              	mov rdi, r14
0x29a6b:   e8 c8 c7 ff ff                        	call 0x26238 <wReg8>
0x29a70:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x29a74:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x29a7b:   80 b8 00 00 00 00 00                  	cmp byte ptr [rax], 0
0x29a82:   74 26                                 	je 0x29aaa <nm131_tune_internal+0x67c>
0x29a84:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x29a88:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x29a8f:   c6 80 00 00 00 00 4f                  	mov byte ptr [rax], 0x4f
0x29a96:   ba ef 00 00 00                        	mov edx, 0xef
0x29a9b:   be 29 00 00 00                        	mov esi, 0x29
0x29aa0:   4c 89 f7                              	mov rdi, r14
0x29aa3:   e8 90 c7 ff ff                        	call 0x26238 <wReg8>
0x29aa8:   eb 12                                 	jmp 0x29abc <nm131_tune_internal+0x68e>
0x29aaa:   ba 4f 00 00 00                        	mov edx, 0x4f
0x29aaf:   be 29 00 00 00                        	mov esi, 0x29
0x29ab4:   4c 89 f7                              	mov rdi, r14
0x29ab7:   e8 7c c7 ff ff                        	call 0x26238 <wReg8>
0x29abc:   ba 34 00 00 00                        	mov edx, 0x34
0x29ac1:   be 2e 00 00 00                        	mov esi, 0x2e
0x29ac6:   4c 89 f7                              	mov rdi, r14
0x29ac9:   e8 6a c7 ff ff                        	call 0x26238 <wReg8>
0x29ace:   eb 48                                 	jmp 0x29b18 <nm131_tune_internal+0x6ea>
0x29ad0:   ba 78 00 00 00                        	mov edx, 0x78
0x29ad5:   be 25 00 00 00                        	mov esi, 0x25
0x29ada:   4c 89 f7                              	mov rdi, r14
0x29add:   e8 56 c7 ff ff                        	call 0x26238 <wReg8>
0x29ae2:   ba 7f 00 00 00                        	mov edx, 0x7f
0x29ae7:   be 27 00 00 00                        	mov esi, 0x27
0x29aec:   4c 89 f7                              	mov rdi, r14
0x29aef:   e8 44 c7 ff ff                        	call 0x26238 <wReg8>
0x29af4:   ba 7f 00 00 00                        	mov edx, 0x7f
0x29af9:   be 29 00 00 00                        	mov esi, 0x29
0x29afe:   4c 89 f7                              	mov rdi, r14
0x29b01:   e8 32 c7 ff ff                        	call 0x26238 <wReg8>
0x29b06:   ba 12 00 00 00                        	mov edx, 0x12
0x29b0b:   be 2e 00 00 00                        	mov esi, 0x2e
0x29b10:   4c 89 f7                              	mov rdi, r14
0x29b13:   e8 20 c7 ff ff                        	call 0x26238 <wReg8>
0x29b18:   41 81 fd bf 1c 3d 09                  	cmp r13d, 0x93d1cbf
0x29b1f:   76 17                                 	jbe 0x29b38 <nm131_tune_internal+0x70a>
0x29b21:   ba 7c 00 00 00                        	mov edx, 0x7c
0x29b26:   be 36 00 00 00                        	mov esi, 0x36
0x29b2b:   4c 89 f7                              	mov rdi, r14
0x29b2e:   e8 05 c7 ff ff                        	call 0x26238 <wReg8>
0x29b33:   e9 42 09 00 00                        	jmp 0x2a47a <nm131_tune_internal+0x104c>
0x29b38:   ba 54 00 00 00                        	mov edx, 0x54
0x29b3d:   be 36 00 00 00                        	mov esi, 0x36
0x29b42:   4c 89 f7                              	mov rdi, r14
0x29b45:   e8 ee c6 ff ff                        	call 0x26238 <wReg8>
0x29b4a:   e9 2b 09 00 00                        	jmp 0x2a47a <nm131_tune_internal+0x104c>
0x29b4f:   25 00 ff ff 00                        	and eax, 0xffff00
0x29b54:   3d 00 30 01 00                        	cmp eax, 0x13000
0x29b59:   0f 85 45 02 00 00                     	jne 0x29da4 <nm131_tune_internal+0x976>
0x29b5f:   41 81 fd c0 76 9f 0b                  	cmp r13d, 0xb9f76c0
0x29b66:   74 2f                                 	je 0x29b97 <nm131_tune_internal+0x769>
0x29b68:   41 81 fd c0 76 9f 0b                  	cmp r13d, 0xb9f76c0
0x29b6f:   77 14                                 	ja 0x29b85 <nm131_tune_internal+0x757>
0x29b71:   41 81 fd c0 0a c3 08                  	cmp r13d, 0x8c30ac0
0x29b78:   74 1d                                 	je 0x29b97 <nm131_tune_internal+0x769>
0x29b7a:   41 81 fd c0 40 31 0a                  	cmp r13d, 0xa3140c0
0x29b81:   75 28                                 	jne 0x29bab <nm131_tune_internal+0x77d>
0x29b83:   eb 12                                 	jmp 0x29b97 <nm131_tune_internal+0x769>
0x29b85:   41 81 fd c0 ac 0d 0d                  	cmp r13d, 0xd0dacc0
0x29b8c:   74 09                                 	je 0x29b97 <nm131_tune_internal+0x769>
0x29b8e:   41 81 fd c0 e2 7b 0e                  	cmp r13d, 0xe7be2c0
0x29b95:   75 14                                 	jne 0x29bab <nm131_tune_internal+0x77d>
0x29b97:   ba 45 00 00 00                        	mov edx, 0x45
0x29b9c:   be 0e 00 00 00                        	mov esi, 0xe
0x29ba1:   4c 89 f7                              	mov rdi, r14
0x29ba4:   e8 8f c6 ff ff                        	call 0x26238 <wReg8>
0x29ba9:   eb 12                                 	jmp 0x29bbd <nm131_tune_internal+0x78f>
0x29bab:   ba 25 00 00 00                        	mov edx, 0x25
0x29bb0:   be 0e 00 00 00                        	mov esi, 0xe
0x29bb5:   4c 89 f7                              	mov rdi, r14
0x29bb8:   e8 7b c6 ff ff                        	call 0x26238 <wReg8>
0x29bbd:   83 7d ac 06                           	cmp dword ptr [rbp - 0x54], 6
0x29bc1:   74 1e                                 	je 0x29be1 <nm131_tune_internal+0x7b3>
0x29bc3:   83 7d ac 08                           	cmp dword ptr [rbp - 0x54], 8
0x29bc7:   74 18                                 	je 0x29be1 <nm131_tune_internal+0x7b3>
0x29bc9:   83 7d ac 0c                           	cmp dword ptr [rbp - 0x54], 0xc ; "GNU"
0x29bcd:   74 12                                 	je 0x29be1 <nm131_tune_internal+0x7b3>
0x29bcf:   83 7d ac 0e                           	cmp dword ptr [rbp - 0x54], 0xe
0x29bd3:   74 0c                                 	je 0x29be1 <nm131_tune_internal+0x7b3>
0x29bd5:   83 7d ac 0f                           	cmp dword ptr [rbp - 0x54], 0xf
0x29bd9:   74 06                                 	je 0x29be1 <nm131_tune_internal+0x7b3>
0x29bdb:   83 7d ac 10                           	cmp dword ptr [rbp - 0x54], 0x10
0x29bdf:   75 5e                                 	jne 0x29c3f <nm131_tune_internal+0x811>
0x29be1:   41 81 fd c0 c2 da 06                  	cmp r13d, 0x6dac2c0
0x29be8:   74 09                                 	je 0x29bf3 <nm131_tune_internal+0x7c5>
0x29bea:   41 81 fd c0 d4 54 07                  	cmp r13d, 0x754d4c0
0x29bf1:   75 26                                 	jne 0x29c19 <nm131_tune_internal+0x7eb>
0x29bf3:   ba 43 00 00 00                        	mov edx, 0x43
0x29bf8:   be 25 00 00 00                        	mov esi, 0x25
0x29bfd:   4c 89 f7                              	mov rdi, r14
0x29c00:   e8 33 c6 ff ff                        	call 0x26238 <wReg8>
0x29c05:   ba 78 00 00 00                        	mov edx, 0x78
0x29c0a:   be 2e 00 00 00                        	mov esi, 0x2e
0x29c0f:   4c 89 f7                              	mov rdi, r14
0x29c12:   e8 21 c6 ff ff                        	call 0x26238 <wReg8>
0x29c17:   eb 4a                                 	jmp 0x29c63 <nm131_tune_internal+0x835>
0x29c19:   ba 56 00 00 00                        	mov edx, 0x56
0x29c1e:   be 25 00 00 00                        	mov esi, 0x25
0x29c23:   4c 89 f7                              	mov rdi, r14
0x29c26:   e8 0d c6 ff ff                        	call 0x26238 <wReg8>
0x29c2b:   ba 56 00 00 00                        	mov edx, 0x56
0x29c30:   be 2e 00 00 00                        	mov esi, 0x2e
0x29c35:   4c 89 f7                              	mov rdi, r14
0x29c38:   e8 fb c5 ff ff                        	call 0x26238 <wReg8>
0x29c3d:   eb 24                                 	jmp 0x29c63 <nm131_tune_internal+0x835>
0x29c3f:   ba e9 00 00 00                        	mov edx, 0xe9
0x29c44:   be 25 00 00 00                        	mov esi, 0x25
0x29c49:   4c 89 f7                              	mov rdi, r14
0x29c4c:   e8 e7 c5 ff ff                        	call 0x26238 <wReg8>
0x29c51:   ba 56 00 00 00                        	mov edx, 0x56
0x29c56:   be 2e 00 00 00                        	mov esi, 0x2e
0x29c5b:   4c 89 f7                              	mov rdi, r14
0x29c5e:   e8 d5 c5 ff ff                        	call 0x26238 <wReg8>
0x29c63:   41 81 fd bf f8 48 08                  	cmp r13d, 0x848f8bf
0x29c6a:   76 26                                 	jbe 0x29c92 <nm131_tune_internal+0x864>
0x29c6c:   ba 01 00 00 00                        	mov edx, 1
0x29c71:   be 30 00 00 00                        	mov esi, 0x30
0x29c76:   4c 89 f7                              	mov rdi, r14
0x29c79:   e8 ba c5 ff ff                        	call 0x26238 <wReg8>
0x29c7e:   ba 01 00 00 00                        	mov edx, 1
0x29c83:   be 32 00 00 00                        	mov esi, 0x32
0x29c88:   4c 89 f7                              	mov rdi, r14
0x29c8b:   e8 a8 c5 ff ff                        	call 0x26238 <wReg8>
0x29c90:   eb 24                                 	jmp 0x29cb6 <nm131_tune_internal+0x888>
0x29c92:   ba df 00 00 00                        	mov edx, 0xdf
0x29c97:   be 30 00 00 00                        	mov esi, 0x30
0x29c9c:   4c 89 f7                              	mov rdi, r14
0x29c9f:   e8 94 c5 ff ff                        	call 0x26238 <wReg8>
0x29ca4:   ba df 00 00 00                        	mov edx, 0xdf
0x29ca9:   be 32 00 00 00                        	mov esi, 0x32
0x29cae:   4c 89 f7                              	mov rdi, r14
0x29cb1:   e8 82 c5 ff ff                        	call 0x26238 <wReg8>
0x29cb6:   41 80 7c 24 28 00                     	cmp byte ptr [r12 + 0x28], 0
0x29cbc:   0f 84 b8 07 00 00                     	je 0x2a47a <nm131_tune_internal+0x104c>
0x29cc2:   41 81 fd c0 4e 58 11                  	cmp r13d, 0x11584ec0
0x29cc9:   0f 84 a7 00 00 00                     	je 0x29d76 <nm131_tune_internal+0x948>
0x29ccf:   41 81 fd c0 4e 58 11                  	cmp r13d, 0x11584ec0
0x29cd6:   77 54                                 	ja 0x29d2c <nm131_tune_internal+0x8fe>
0x29cd8:   41 81 fd c0 76 9f 0b                  	cmp r13d, 0xb9f76c0
0x29cdf:   0f 84 91 00 00 00                     	je 0x29d76 <nm131_tune_internal+0x948>
0x29ce5:   41 81 fd c0 76 9f 0b                  	cmp r13d, 0xb9f76c0
0x29cec:   77 21                                 	ja 0x29d0f <nm131_tune_internal+0x8e1>
0x29cee:   41 81 fd c0 0a c3 08                  	cmp r13d, 0x8c30ac0
0x29cf5:   74 7f                                 	je 0x29d76 <nm131_tune_internal+0x948>
0x29cf7:   41 81 fd c0 40 31 0a                  	cmp r13d, 0xa3140c0
0x29cfe:   74 76                                 	je 0x29d76 <nm131_tune_internal+0x948>
0x29d00:   41 81 fd c0 d4 54 07                  	cmp r13d, 0x754d4c0
0x29d07:   0f 85 80 00 00 00                     	jne 0x29d8d <nm131_tune_internal+0x95f>
0x29d0d:   eb 67                                 	jmp 0x29d76 <nm131_tune_internal+0x948>
0x29d0f:   41 81 fd c0 e2 7b 0e                  	cmp r13d, 0xe7be2c0
0x29d16:   74 5e                                 	je 0x29d76 <nm131_tune_internal+0x948>
0x29d18:   41 81 fd c0 18 ea 0f                  	cmp r13d, 0xfea18c0
0x29d1f:   74 55                                 	je 0x29d76 <nm131_tune_internal+0x948>
0x29d21:   41 81 fd c0 ac 0d 0d                  	cmp r13d, 0xd0dacc0
0x29d28:   75 63                                 	jne 0x29d8d <nm131_tune_internal+0x95f>
0x29d2a:   eb 4a                                 	jmp 0x29d76 <nm131_tune_internal+0x948>
0x29d2c:   41 81 fd c0 26 11 17                  	cmp r13d, 0x171126c0
0x29d33:   74 41                                 	je 0x29d76 <nm131_tune_internal+0x948>
0x29d35:   41 81 fd c0 26 11 17                  	cmp r13d, 0x171126c0
0x29d3c:   77 1d                                 	ja 0x29d5b <nm131_tune_internal+0x92d>
0x29d3e:   41 81 fd c0 ba 34 14                  	cmp r13d, 0x1434bac0
0x29d45:   74 2f                                 	je 0x29d76 <nm131_tune_internal+0x948>
0x29d47:   41 81 fd c0 f0 a2 15                  	cmp r13d, 0x15a2f0c0
0x29d4e:   74 26                                 	je 0x29d76 <nm131_tune_internal+0x948>
0x29d50:   41 81 fd c0 84 c6 12                  	cmp r13d, 0x12c684c0
0x29d57:   75 34                                 	jne 0x29d8d <nm131_tune_internal+0x95f>
0x29d59:   eb 1b                                 	jmp 0x29d76 <nm131_tune_internal+0x948>
0x29d5b:   41 81 fd c0 92 ed 19                  	cmp r13d, 0x19ed92c0
0x29d62:   74 12                                 	je 0x29d76 <nm131_tune_internal+0x948>
0x29d64:   41 81 fd c0 c8 5b 1b                  	cmp r13d, 0x1b5bc8c0
0x29d6b:   74 09                                 	je 0x29d76 <nm131_tune_internal+0x948>
0x29d6d:   41 81 fd c0 5c 7f 18                  	cmp r13d, 0x187f5cc0
0x29d74:   75 17                                 	jne 0x29d8d <nm131_tune_internal+0x95f>
0x29d76:   ba 08 00 00 00                        	mov edx, 8
0x29d7b:   be 1b 00 00 00                        	mov esi, 0x1b
0x29d80:   4c 89 f7                              	mov rdi, r14
0x29d83:   e8 b0 c4 ff ff                        	call 0x26238 <wReg8>
0x29d88:   e9 ed 06 00 00                        	jmp 0x2a47a <nm131_tune_internal+0x104c>
0x29d8d:   ba 0e 00 00 00                        	mov edx, 0xe
0x29d92:   be 1b 00 00 00                        	mov esi, 0x1b
0x29d97:   4c 89 f7                              	mov rdi, r14
0x29d9a:   e8 99 c4 ff ff                        	call 0x26238 <wReg8>
0x29d9f:   e9 d6 06 00 00                        	jmp 0x2a47a <nm131_tune_internal+0x104c>
0x29da4:   3d 00 30 81 00                        	cmp eax, 0x813000
0x29da9:   0f 85 71 02 00 00                     	jne 0x2a020 <nm131_tune_internal+0xbf2>
0x29daf:   83 7d ac 06                           	cmp dword ptr [rbp - 0x54], 6
0x29db3:   74 22                                 	je 0x29dd7 <nm131_tune_internal+0x9a9>
0x29db5:   83 7d ac 08                           	cmp dword ptr [rbp - 0x54], 8
0x29db9:   74 1c                                 	je 0x29dd7 <nm131_tune_internal+0x9a9>
0x29dbb:   83 7d ac 0c                           	cmp dword ptr [rbp - 0x54], 0xc ; "GNU"
0x29dbf:   74 16                                 	je 0x29dd7 <nm131_tune_internal+0x9a9>
0x29dc1:   83 7d ac 0e                           	cmp dword ptr [rbp - 0x54], 0xe
0x29dc5:   74 10                                 	je 0x29dd7 <nm131_tune_internal+0x9a9>
0x29dc7:   83 7d ac 0f                           	cmp dword ptr [rbp - 0x54], 0xf
0x29dcb:   74 0a                                 	je 0x29dd7 <nm131_tune_internal+0x9a9>
0x29dcd:   83 7d ac 10                           	cmp dword ptr [rbp - 0x54], 0x10
0x29dd1:   0f 85 b4 01 00 00                     	jne 0x29f8b <nm131_tune_internal+0xb5d>
0x29dd7:   ba 45 00 00 00                        	mov edx, 0x45
0x29ddc:   be 0e 00 00 00                        	mov esi, 0xe
0x29de1:   4c 89 f7                              	mov rdi, r14
0x29de4:   e8 4f c4 ff ff                        	call 0x26238 <wReg8>
0x29de9:   ba fa 00 00 00                        	mov edx, 0xfa
0x29dee:   be 25 00 00 00                        	mov esi, 0x25
0x29df3:   4c 89 f7                              	mov rdi, r14
0x29df6:   e8 3d c4 ff ff                        	call 0x26238 <wReg8>
0x29dfb:   ba 82 00 00 00                        	mov edx, 0x82
0x29e00:   be 26 00 00 00                        	mov esi, 0x26
0x29e05:   4c 89 f7                              	mov rdi, r14
0x29e08:   e8 2b c4 ff ff                        	call 0x26238 <wReg8>
0x29e0d:   41 81 fd 7f b0 c1 30                  	cmp r13d, 0x30c1b07f
0x29e14:   76 4d                                 	jbe 0x29e63 <nm131_tune_internal+0xa35>
0x29e16:   ba 3f 00 00 00                        	mov edx, 0x3f
0x29e1b:   be 27 00 00 00                        	mov esi, 0x27
0x29e20:   4c 89 f7                              	mov rdi, r14
0x29e23:   e8 10 c4 ff ff                        	call 0x26238 <wReg8>
0x29e28:   ba 3f 00 00 00                        	mov edx, 0x3f
0x29e2d:   be 29 00 00 00                        	mov esi, 0x29
0x29e32:   4c 89 f7                              	mov rdi, r14
0x29e35:   e8 fe c3 ff ff                        	call 0x26238 <wReg8>
0x29e3a:   ba af 00 00 00                        	mov edx, 0xaf
0x29e3f:   be 30 00 00 00                        	mov esi, 0x30
0x29e44:   4c 89 f7                              	mov rdi, r14
0x29e47:   e8 ec c3 ff ff                        	call 0x26238 <wReg8>
0x29e4c:   ba af 00 00 00                        	mov edx, 0xaf
0x29e51:   be 32 00 00 00                        	mov esi, 0x32
0x29e56:   4c 89 f7                              	mov rdi, r14
0x29e59:   e8 da c3 ff ff                        	call 0x26238 <wReg8>
0x29e5e:   e9 f1 00 00 00                        	jmp 0x29f54 <nm131_tune_internal+0xb26>
0x29e63:   41 81 fd 7f 68 d9 2e                  	cmp r13d, 0x2ed9687f
0x29e6a:   76 4d                                 	jbe 0x29eb9 <nm131_tune_internal+0xa8b>
0x29e6c:   ba 3f 00 00 00                        	mov edx, 0x3f
0x29e71:   be 27 00 00 00                        	mov esi, 0x27
0x29e76:   4c 89 f7                              	mov rdi, r14
0x29e79:   e8 ba c3 ff ff                        	call 0x26238 <wReg8>
0x29e7e:   ba 3f 00 00 00                        	mov edx, 0x3f
0x29e83:   be 29 00 00 00                        	mov esi, 0x29
0x29e88:   4c 89 f7                              	mov rdi, r14
0x29e8b:   e8 a8 c3 ff ff                        	call 0x26238 <wReg8>
0x29e90:   ba df 00 00 00                        	mov edx, 0xdf
0x29e95:   be 30 00 00 00                        	mov esi, 0x30
0x29e9a:   4c 89 f7                              	mov rdi, r14
0x29e9d:   e8 96 c3 ff ff                        	call 0x26238 <wReg8>
0x29ea2:   ba df 00 00 00                        	mov edx, 0xdf
0x29ea7:   be 32 00 00 00                        	mov esi, 0x32
0x29eac:   4c 89 f7                              	mov rdi, r14
0x29eaf:   e8 84 c3 ff ff                        	call 0x26238 <wReg8>
0x29eb4:   e9 9b 00 00 00                        	jmp 0x29f54 <nm131_tune_internal+0xb26>
0x29eb9:   41 81 fd 7f 32 6b 2d                  	cmp r13d, 0x2d6b327f
0x29ec0:   76 4a                                 	jbe 0x29f0c <nm131_tune_internal+0xade>
0x29ec2:   ba 5f 00 00 00                        	mov edx, 0x5f
0x29ec7:   be 27 00 00 00                        	mov esi, 0x27
0x29ecc:   4c 89 f7                              	mov rdi, r14
0x29ecf:   e8 64 c3 ff ff                        	call 0x26238 <wReg8>
0x29ed4:   ba 5f 00 00 00                        	mov edx, 0x5f
0x29ed9:   be 29 00 00 00                        	mov esi, 0x29
0x29ede:   4c 89 f7                              	mov rdi, r14
0x29ee1:   e8 52 c3 ff ff                        	call 0x26238 <wReg8>
0x29ee6:   ba df 00 00 00                        	mov edx, 0xdf
0x29eeb:   be 30 00 00 00                        	mov esi, 0x30
0x29ef0:   4c 89 f7                              	mov rdi, r14
0x29ef3:   e8 40 c3 ff ff                        	call 0x26238 <wReg8>
0x29ef8:   ba df 00 00 00                        	mov edx, 0xdf
0x29efd:   be 32 00 00 00                        	mov esi, 0x32
0x29f02:   4c 89 f7                              	mov rdi, r14
0x29f05:   e8 2e c3 ff ff                        	call 0x26238 <wReg8>
0x29f0a:   eb 48                                 	jmp 0x29f54 <nm131_tune_internal+0xb26>
0x29f0c:   ba 7f 00 00 00                        	mov edx, 0x7f
0x29f11:   be 27 00 00 00                        	mov esi, 0x27
0x29f16:   4c 89 f7                              	mov rdi, r14
0x29f19:   e8 1a c3 ff ff                        	call 0x26238 <wReg8>
0x29f1e:   ba 7f 00 00 00                        	mov edx, 0x7f
0x29f23:   be 29 00 00 00                        	mov esi, 0x29
0x29f28:   4c 89 f7                              	mov rdi, r14
0x29f2b:   e8 08 c3 ff ff                        	call 0x26238 <wReg8>
0x29f30:   ba df 00 00 00                        	mov edx, 0xdf
0x29f35:   be 30 00 00 00                        	mov esi, 0x30
0x29f3a:   4c 89 f7                              	mov rdi, r14
0x29f3d:   e8 f6 c2 ff ff                        	call 0x26238 <wReg8>
0x29f42:   ba df 00 00 00                        	mov edx, 0xdf
0x29f47:   be 32 00 00 00                        	mov esi, 0x32
0x29f4c:   4c 89 f7                              	mov rdi, r14
0x29f4f:   e8 e4 c2 ff ff                        	call 0x26238 <wReg8>
0x29f54:   41 81 fd bf 1c 3d 09                  	cmp r13d, 0x93d1cbf
0x29f5b:   76 17                                 	jbe 0x29f74 <nm131_tune_internal+0xb46>
0x29f5d:   ba 7c 00 00 00                        	mov edx, 0x7c
0x29f62:   be 36 00 00 00                        	mov esi, 0x36
0x29f67:   4c 89 f7                              	mov rdi, r14
0x29f6a:   e8 c9 c2 ff ff                        	call 0x26238 <wReg8>
0x29f6f:   e9 06 05 00 00                        	jmp 0x2a47a <nm131_tune_internal+0x104c>
0x29f74:   ba 54 00 00 00                        	mov edx, 0x54
0x29f79:   be 36 00 00 00                        	mov esi, 0x36
0x29f7e:   4c 89 f7                              	mov rdi, r14
0x29f81:   e8 b2 c2 ff ff                        	call 0x26238 <wReg8>
0x29f86:   e9 ef 04 00 00                        	jmp 0x2a47a <nm131_tune_internal+0x104c>
0x29f8b:   ba 25 00 00 00                        	mov edx, 0x25
0x29f90:   be 0e 00 00 00                        	mov esi, 0xe
0x29f95:   4c 89 f7                              	mov rdi, r14
0x29f98:   e8 9b c2 ff ff                        	call 0x26238 <wReg8>
0x29f9d:   ba e9 00 00 00                        	mov edx, 0xe9
0x29fa2:   be 25 00 00 00                        	mov esi, 0x25
0x29fa7:   4c 89 f7                              	mov rdi, r14
0x29faa:   e8 89 c2 ff ff                        	call 0x26238 <wReg8>
0x29faf:   ba 80 00 00 00                        	mov edx, 0x80
0x29fb4:   be 26 00 00 00                        	mov esi, 0x26
0x29fb9:   4c 89 f7                              	mov rdi, r14
0x29fbc:   e8 77 c2 ff ff                        	call 0x26238 <wReg8>
0x29fc1:   ba 01 00 00 00                        	mov edx, 1
0x29fc6:   be 27 00 00 00                        	mov esi, 0x27
0x29fcb:   4c 89 f7                              	mov rdi, r14
0x29fce:   e8 65 c2 ff ff                        	call 0x26238 <wReg8>
0x29fd3:   ba 01 00 00 00                        	mov edx, 1
0x29fd8:   be 29 00 00 00                        	mov esi, 0x29
0x29fdd:   4c 89 f7                              	mov rdi, r14
0x29fe0:   e8 53 c2 ff ff                        	call 0x26238 <wReg8>
0x29fe5:   ba 01 00 00 00                        	mov edx, 1
0x29fea:   be 30 00 00 00                        	mov esi, 0x30
0x29fef:   4c 89 f7                              	mov rdi, r14
0x29ff2:   e8 41 c2 ff ff                        	call 0x26238 <wReg8>
0x29ff7:   ba 01 00 00 00                        	mov edx, 1
0x29ffc:   be 32 00 00 00                        	mov esi, 0x32
0x2a001:   4c 89 f7                              	mov rdi, r14
0x2a004:   e8 2f c2 ff ff                        	call 0x26238 <wReg8>
0x2a009:   ba 54 00 00 00                        	mov edx, 0x54
0x2a00e:   be 36 00 00 00                        	mov esi, 0x36
0x2a013:   4c 89 f7                              	mov rdi, r14
0x2a016:   e8 1d c2 ff ff                        	call 0x26238 <wReg8>
0x2a01b:   e9 5a 04 00 00                        	jmp 0x2a47a <nm131_tune_internal+0x104c>
0x2a020:   81 fa 00 31 01 00                     	cmp edx, 0x13100
0x2a026:   0f 85 d5 05 00 00                     	jne 0x2a601 <nm131_tune_internal+0x11d3>
0x2a02c:   83 7d ac 06                           	cmp dword ptr [rbp - 0x54], 6
0x2a030:   0f 94 c3                              	sete bl
0x2a033:   83 7d ac 08                           	cmp dword ptr [rbp - 0x54], 8
0x2a037:   0f 94 c0                              	sete al
0x2a03a:   08 c3                                 	or bl, al
0x2a03c:   75 18                                 	jne 0x2a056 <nm131_tune_internal+0xc28>
0x2a03e:   83 7d ac 0c                           	cmp dword ptr [rbp - 0x54], 0xc ; "GNU"
0x2a042:   74 12                                 	je 0x2a056 <nm131_tune_internal+0xc28>
0x2a044:   83 7d ac 0e                           	cmp dword ptr [rbp - 0x54], 0xe
0x2a048:   74 0c                                 	je 0x2a056 <nm131_tune_internal+0xc28>
0x2a04a:   83 7d ac 0f                           	cmp dword ptr [rbp - 0x54], 0xf
0x2a04e:   74 06                                 	je 0x2a056 <nm131_tune_internal+0xc28>
0x2a050:   83 7d ac 10                           	cmp dword ptr [rbp - 0x54], 0x10
0x2a054:   75 26                                 	jne 0x2a07c <nm131_tune_internal+0xc4e>
0x2a056:   ba 45 00 00 00                        	mov edx, 0x45
0x2a05b:   be 0e 00 00 00                        	mov esi, 0xe
0x2a060:   4c 89 f7                              	mov rdi, r14
0x2a063:   e8 d0 c1 ff ff                        	call 0x26238 <wReg8>
0x2a068:   ba fa 00 00 00                        	mov edx, 0xfa
0x2a06d:   be 25 00 00 00                        	mov esi, 0x25
0x2a072:   4c 89 f7                              	mov rdi, r14
0x2a075:   e8 be c1 ff ff                        	call 0x26238 <wReg8>
0x2a07a:   eb 24                                 	jmp 0x2a0a0 <nm131_tune_internal+0xc72>
0x2a07c:   ba 25 00 00 00                        	mov edx, 0x25
0x2a081:   be 0e 00 00 00                        	mov esi, 0xe
0x2a086:   4c 89 f7                              	mov rdi, r14
0x2a089:   e8 aa c1 ff ff                        	call 0x26238 <wReg8>
0x2a08e:   ba e9 00 00 00                        	mov edx, 0xe9
0x2a093:   be 25 00 00 00                        	mov esi, 0x25
0x2a098:   4c 89 f7                              	mov rdi, r14
0x2a09b:   e8 98 c1 ff ff                        	call 0x26238 <wReg8>
0x2a0a0:   83 7d ac 06                           	cmp dword ptr [rbp - 0x54], 6
0x2a0a4:   41 0f 95 c7                           	setne r15b
0x2a0a8:   83 7d ac 08                           	cmp dword ptr [rbp - 0x54], 8
0x2a0ac:   0f 95 c0                              	setne al
0x2a0af:   41 20 c7                              	and r15b, al
0x2a0b2:   74 32                                 	je 0x2a0e6 <nm131_tune_internal+0xcb8>
0x2a0b4:   83 7d ac 0c                           	cmp dword ptr [rbp - 0x54], 0xc ; "GNU"
0x2a0b8:   74 2c                                 	je 0x2a0e6 <nm131_tune_internal+0xcb8>
0x2a0ba:   83 7d ac 0e                           	cmp dword ptr [rbp - 0x54], 0xe
0x2a0be:   74 26                                 	je 0x2a0e6 <nm131_tune_internal+0xcb8>
0x2a0c0:   83 7d ac 0f                           	cmp dword ptr [rbp - 0x54], 0xf
0x2a0c4:   74 20                                 	je 0x2a0e6 <nm131_tune_internal+0xcb8>
0x2a0c6:   83 7d ac 10                           	cmp dword ptr [rbp - 0x54], 0x10
0x2a0ca:   74 1a                                 	je 0x2a0e6 <nm131_tune_internal+0xcb8>
0x2a0cc:   83 7d ac ff                           	cmp dword ptr [rbp - 0x54], -1
0x2a0d0:   74 14                                 	je 0x2a0e6 <nm131_tune_internal+0xcb8>
0x2a0d2:   ba 22 00 00 00                        	mov edx, 0x22
0x2a0d7:   be 2e 00 00 00                        	mov esi, 0x2e
0x2a0dc:   4c 89 f7                              	mov rdi, r14
0x2a0df:   e8 54 c1 ff ff                        	call 0x26238 <wReg8>
0x2a0e4:   eb 12                                 	jmp 0x2a0f8 <nm131_tune_internal+0xcca>
0x2a0e6:   ba 56 00 00 00                        	mov edx, 0x56
0x2a0eb:   be 2e 00 00 00                        	mov esi, 0x2e
0x2a0f0:   4c 89 f7                              	mov rdi, r14
0x2a0f3:   e8 40 c1 ff ff                        	call 0x26238 <wReg8>
0x2a0f8:   83 7d 9c 02                           	cmp dword ptr [rbp - 0x64], 2
0x2a0fc:   75 46                                 	jne 0x2a144 <nm131_tune_internal+0xd16>
0x2a0fe:   45 84 ff                              	test r15b, r15b
0x2a101:   74 41                                 	je 0x2a144 <nm131_tune_internal+0xd16>
0x2a103:   83 7d ac 0c                           	cmp dword ptr [rbp - 0x54], 0xc ; "GNU"
0x2a107:   74 3b                                 	je 0x2a144 <nm131_tune_internal+0xd16>
0x2a109:   83 7d ac 0e                           	cmp dword ptr [rbp - 0x54], 0xe
0x2a10d:   74 35                                 	je 0x2a144 <nm131_tune_internal+0xd16>
0x2a10f:   83 7d ac 0f                           	cmp dword ptr [rbp - 0x54], 0xf
0x2a113:   0f 84 19 06 00 00                     	je 0x2a732
0x2a119:   83 7d ac 10                           	cmp dword ptr [rbp - 0x54], 0x10
0x2a11d:   0f 84 0f 06 00 00                     	je 0x2a732
0x2a123:   83 7d ac ff                           	cmp dword ptr [rbp - 0x54], -1
0x2a127:   0f 84 05 06 00 00                     	je 0x2a732
0x2a12d:   ba 80 00 00 00                        	mov edx, 0x80
0x2a132:   be 26 00 00 00                        	mov esi, 0x26
0x2a137:   4c 89 f7                              	mov rdi, r14
0x2a13a:   e8 f9 c0 ff ff                        	call 0x26238 <wReg8>
0x2a13f:   e9 41 01 00 00                        	jmp 0x2a285 <nm131_tune_internal+0xe57>
0x2a144:   ba 82 00 00 00                        	mov edx, 0x82
0x2a149:   be 26 00 00 00                        	mov esi, 0x26
0x2a14e:   4c 89 f7                              	mov rdi, r14
0x2a151:   e8 e2 c0 ff ff                        	call 0x26238 <wReg8>
0x2a156:   83 7d 9c 01                           	cmp dword ptr [rbp - 0x64], 1
0x2a15a:   0f 87 25 01 00 00                     	ja 0x2a285 <nm131_tune_internal+0xe57>
0x2a160:   ba af 00 00 00                        	mov edx, 0xaf
0x2a165:   be 27 00 00 00                        	mov esi, 0x27
0x2a16a:   4c 89 f7                              	mov rdi, r14
0x2a16d:   e8 c6 c0 ff ff                        	call 0x26238 <wReg8>
0x2a172:   ba af 00 00 00                        	mov edx, 0xaf
0x2a177:   be 29 00 00 00                        	mov esi, 0x29
0x2a17c:   4c 89 f7                              	mov rdi, r14
0x2a17f:   e8 b4 c0 ff ff                        	call 0x26238 <wReg8>
0x2a184:   ba 0f 00 00 00                        	mov edx, 0xf
0x2a189:   be 30 00 00 00                        	mov esi, 0x30
0x2a18e:   4c 89 f7                              	mov rdi, r14
0x2a191:   e8 a2 c0 ff ff                        	call 0x26238 <wReg8>
0x2a196:   ba 0f 00 00 00                        	mov edx, 0xf
0x2a19b:   be 32 00 00 00                        	mov esi, 0x32
0x2a1a0:   4c 89 f7                              	mov rdi, r14
0x2a1a3:   e8 90 c0 ff ff                        	call 0x26238 <wReg8>
0x2a1a8:   83 7d ac 0d                           	cmp dword ptr [rbp - 0x54], 0xd ; "NU"
0x2a1ac:   74 3e                                 	je 0x2a1ec <nm131_tune_internal+0xdbe>
0x2a1ae:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x2a1b2:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2a1b9:   0f b6 80 00 00 00 00                  	movzx eax, byte ptr [rax]
0x2a1c0:   3c 0f                                 	cmp al, 0xf
0x2a1c2:   77 14                                 	ja 0x2a1d8 <nm131_tune_internal+0xdaa>
0x2a1c4:   f7 d0                                 	not eax
0x2a1c6:   0f b6 d0                              	movzx edx, al
0x2a1c9:   be 34 00 00 00                        	mov esi, 0x34
0x2a1ce:   4c 89 f7                              	mov rdi, r14
0x2a1d1:   e8 62 c0 ff ff                        	call 0x26238 <wReg8>
0x2a1d6:   eb 26                                 	jmp 0x2a1fe <nm131_tune_internal+0xdd0>
0x2a1d8:   ba f0 00 00 00                        	mov edx, 0xf0
0x2a1dd:   be 34 00 00 00                        	mov esi, 0x34
0x2a1e2:   4c 89 f7                              	mov rdi, r14
0x2a1e5:   e8 4e c0 ff ff                        	call 0x26238 <wReg8>
0x2a1ea:   eb 12                                 	jmp 0x2a1fe <nm131_tune_internal+0xdd0>
0x2a1ec:   ba 60 00 00 00                        	mov edx, 0x60
0x2a1f1:   be 34 00 00 00                        	mov esi, 0x34
0x2a1f6:   4c 89 f7                              	mov rdi, r14
0x2a1f9:   e8 3a c0 ff ff                        	call 0x26238 <wReg8>
0x2a1fe:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x2a202:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2a209:   0f b6 80 00 00 00 00                  	movzx eax, byte ptr [rax]
0x2a210:   3c 0f                                 	cmp al, 0xf
0x2a212:   77 48                                 	ja 0x2a25c <nm131_tune_internal+0xe2e>
0x2a214:   48 63 55 a8                           	movsxd rdx, dword ptr [rbp - 0x58]
0x2a218:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x2a21f:   0f b6 92 00 00 00 00                  	movzx edx, byte ptr [rdx]
0x2a226:   38 d0                                 	cmp al, dl
0x2a228:   77 19                                 	ja 0x2a243 <nm131_tune_internal+0xe15>
0x2a22a:   ba 5f 00 00 00                        	mov edx, 0x5f
0x2a22f:   28 c2                                 	sub dl, al
0x2a231:   0f b6 d2                              	movzx edx, dl
0x2a234:   be 35 00 00 00                        	mov esi, 0x35
0x2a239:   4c 89 f7                              	mov rdi, r14
0x2a23c:   e8 f7 bf ff ff                        	call 0x26238 <wReg8>
0x2a241:   eb 2b                                 	jmp 0x2a26e <nm131_tune_internal+0xe40>
0x2a243:   b8 5f 00 00 00                        	mov eax, 0x5f
0x2a248:   28 d0                                 	sub al, dl
0x2a24a:   0f b6 d0                              	movzx edx, al
0x2a24d:   be 35 00 00 00                        	mov esi, 0x35
0x2a252:   4c 89 f7                              	mov rdi, r14
0x2a255:   e8 de bf ff ff                        	call 0x26238 <wReg8>
0x2a25a:   eb 12                                 	jmp 0x2a26e <nm131_tune_internal+0xe40>
0x2a25c:   ba 50 00 00 00                        	mov edx, 0x50
0x2a261:   be 35 00 00 00                        	mov esi, 0x35
0x2a266:   4c 89 f7                              	mov rdi, r14
0x2a269:   e8 ca bf ff ff                        	call 0x26238 <wReg8>
0x2a26e:   ba 54 00 00 00                        	mov edx, 0x54
0x2a273:   be 36 00 00 00                        	mov esi, 0x36
0x2a278:   4c 89 f7                              	mov rdi, r14
0x2a27b:   e8 b8 bf ff ff                        	call 0x26238 <wReg8>
0x2a280:   e9 f5 01 00 00                        	jmp 0x2a47a <nm131_tune_internal+0x104c>
0x2a285:   84 db                                 	test bl, bl
0x2a287:   75 1f                                 	jne 0x2a2a8 <nm131_tune_internal+0xe7a>
0x2a289:   83 7d ac 0c                           	cmp dword ptr [rbp - 0x54], 0xc ; "GNU"
0x2a28d:   0f 1f 00                              	nop dword ptr [rax]
0x2a290:   74 16                                 	je 0x2a2a8 <nm131_tune_internal+0xe7a>
0x2a292:   83 7d ac 0e                           	cmp dword ptr [rbp - 0x54], 0xe
0x2a296:   74 10                                 	je 0x2a2a8 <nm131_tune_internal+0xe7a>
0x2a298:   83 7d ac 0f                           	cmp dword ptr [rbp - 0x54], 0xf
0x2a29c:   74 0a                                 	je 0x2a2a8 <nm131_tune_internal+0xe7a>
0x2a29e:   83 7d ac 10                           	cmp dword ptr [rbp - 0x54], 0x10
0x2a2a2:   0f 85 78 01 00 00                     	jne 0x2a420 <nm131_tune_internal+0xff2>
0x2a2a8:   41 81 fd 7f b0 c1 30                  	cmp r13d, 0x30c1b07f
0x2a2af:   76 4d                                 	jbe 0x2a2fe <nm131_tune_internal+0xed0>
0x2a2b1:   ba 3f 00 00 00                        	mov edx, 0x3f
0x2a2b6:   be 27 00 00 00                        	mov esi, 0x27
0x2a2bb:   4c 89 f7                              	mov rdi, r14
0x2a2be:   e8 75 bf ff ff                        	call 0x26238 <wReg8>
0x2a2c3:   ba 3f 00 00 00                        	mov edx, 0x3f
0x2a2c8:   be 29 00 00 00                        	mov esi, 0x29
0x2a2cd:   4c 89 f7                              	mov rdi, r14
0x2a2d0:   e8 63 bf ff ff                        	call 0x26238 <wReg8>
0x2a2d5:   ba af 00 00 00                        	mov edx, 0xaf
0x2a2da:   be 30 00 00 00                        	mov esi, 0x30
0x2a2df:   4c 89 f7                              	mov rdi, r14
0x2a2e2:   e8 51 bf ff ff                        	call 0x26238 <wReg8>
0x2a2e7:   ba af 00 00 00                        	mov edx, 0xaf
0x2a2ec:   be 32 00 00 00                        	mov esi, 0x32
0x2a2f1:   4c 89 f7                              	mov rdi, r14
0x2a2f4:   e8 3f bf ff ff                        	call 0x26238 <wReg8>
0x2a2f9:   e9 f1 00 00 00                        	jmp 0x2a3ef <nm131_tune_internal+0xfc1>
0x2a2fe:   41 81 fd 7f 68 d9 2e                  	cmp r13d, 0x2ed9687f
0x2a305:   76 4d                                 	jbe 0x2a354 <nm131_tune_internal+0xf26>
0x2a307:   ba 3f 00 00 00                        	mov edx, 0x3f
0x2a30c:   be 27 00 00 00                        	mov esi, 0x27
0x2a311:   4c 89 f7                              	mov rdi, r14
0x2a314:   e8 1f bf ff ff                        	call 0x26238 <wReg8>
0x2a319:   ba 3f 00 00 00                        	mov edx, 0x3f
0x2a31e:   be 29 00 00 00                        	mov esi, 0x29
0x2a323:   4c 89 f7                              	mov rdi, r14
0x2a326:   e8 0d bf ff ff                        	call 0x26238 <wReg8>
0x2a32b:   ba df 00 00 00                        	mov edx, 0xdf
0x2a330:   be 30 00 00 00                        	mov esi, 0x30
0x2a335:   4c 89 f7                              	mov rdi, r14
0x2a338:   e8 fb be ff ff                        	call 0x26238 <wReg8>
0x2a33d:   ba df 00 00 00                        	mov edx, 0xdf
0x2a342:   be 32 00 00 00                        	mov esi, 0x32
0x2a347:   4c 89 f7                              	mov rdi, r14
0x2a34a:   e8 e9 be ff ff                        	call 0x26238 <wReg8>
0x2a34f:   e9 9b 00 00 00                        	jmp 0x2a3ef <nm131_tune_internal+0xfc1>
0x2a354:   41 81 fd 7f 32 6b 2d                  	cmp r13d, 0x2d6b327f
0x2a35b:   76 4a                                 	jbe 0x2a3a7 <nm131_tune_internal+0xf79>
0x2a35d:   ba 5f 00 00 00                        	mov edx, 0x5f
0x2a362:   be 27 00 00 00                        	mov esi, 0x27
0x2a367:   4c 89 f7                              	mov rdi, r14
0x2a36a:   e8 c9 be ff ff                        	call 0x26238 <wReg8>
0x2a36f:   ba 5f 00 00 00                        	mov edx, 0x5f
0x2a374:   be 29 00 00 00                        	mov esi, 0x29
0x2a379:   4c 89 f7                              	mov rdi, r14
0x2a37c:   e8 b7 be ff ff                        	call 0x26238 <wReg8>
0x2a381:   ba df 00 00 00                        	mov edx, 0xdf
0x2a386:   be 30 00 00 00                        	mov esi, 0x30
0x2a38b:   4c 89 f7                              	mov rdi, r14
0x2a38e:   e8 a5 be ff ff                        	call 0x26238 <wReg8>
0x2a393:   ba df 00 00 00                        	mov edx, 0xdf
0x2a398:   be 32 00 00 00                        	mov esi, 0x32
0x2a39d:   4c 89 f7                              	mov rdi, r14
0x2a3a0:   e8 93 be ff ff                        	call 0x26238 <wReg8>
0x2a3a5:   eb 48                                 	jmp 0x2a3ef <nm131_tune_internal+0xfc1>
0x2a3a7:   ba 7f 00 00 00                        	mov edx, 0x7f
0x2a3ac:   be 27 00 00 00                        	mov esi, 0x27
0x2a3b1:   4c 89 f7                              	mov rdi, r14
0x2a3b4:   e8 7f be ff ff                        	call 0x26238 <wReg8>
0x2a3b9:   ba 7f 00 00 00                        	mov edx, 0x7f
0x2a3be:   be 29 00 00 00                        	mov esi, 0x29
0x2a3c3:   4c 89 f7                              	mov rdi, r14
0x2a3c6:   e8 6d be ff ff                        	call 0x26238 <wReg8>
0x2a3cb:   ba df 00 00 00                        	mov edx, 0xdf
0x2a3d0:   be 30 00 00 00                        	mov esi, 0x30
0x2a3d5:   4c 89 f7                              	mov rdi, r14
0x2a3d8:   e8 5b be ff ff                        	call 0x26238 <wReg8>
0x2a3dd:   ba df 00 00 00                        	mov edx, 0xdf
0x2a3e2:   be 32 00 00 00                        	mov esi, 0x32
0x2a3e7:   4c 89 f7                              	mov rdi, r14
0x2a3ea:   e8 49 be ff ff                        	call 0x26238 <wReg8>
0x2a3ef:   41 81 fd bf 1c 3d 09                  	cmp r13d, 0x93d1cbf
0x2a3f6:   76 14                                 	jbe 0x2a40c <nm131_tune_internal+0xfde>
0x2a3f8:   ba 7c 00 00 00                        	mov edx, 0x7c
0x2a3fd:   be 36 00 00 00                        	mov esi, 0x36
0x2a402:   4c 89 f7                              	mov rdi, r14
0x2a405:   e8 2e be ff ff                        	call 0x26238 <wReg8>
0x2a40a:   eb 6e                                 	jmp 0x2a47a <nm131_tune_internal+0x104c>
0x2a40c:   ba 54 00 00 00                        	mov edx, 0x54
0x2a411:   be 36 00 00 00                        	mov esi, 0x36
0x2a416:   4c 89 f7                              	mov rdi, r14
0x2a419:   e8 1a be ff ff                        	call 0x26238 <wReg8>
0x2a41e:   eb 5a                                 	jmp 0x2a47a <nm131_tune_internal+0x104c>
0x2a420:   ba 01 00 00 00                        	mov edx, 1
0x2a425:   be 27 00 00 00                        	mov esi, 0x27
0x2a42a:   4c 89 f7                              	mov rdi, r14
0x2a42d:   e8 06 be ff ff                        	call 0x26238 <wReg8>
0x2a432:   ba 01 00 00 00                        	mov edx, 1
0x2a437:   be 29 00 00 00                        	mov esi, 0x29
0x2a43c:   4c 89 f7                              	mov rdi, r14
0x2a43f:   e8 f4 bd ff ff                        	call 0x26238 <wReg8>
0x2a444:   ba 01 00 00 00                        	mov edx, 1
0x2a449:   be 30 00 00 00                        	mov esi, 0x30
0x2a44e:   4c 89 f7                              	mov rdi, r14
0x2a451:   e8 e2 bd ff ff                        	call 0x26238 <wReg8>
0x2a456:   ba 01 00 00 00                        	mov edx, 1
0x2a45b:   be 32 00 00 00                        	mov esi, 0x32
0x2a460:   4c 89 f7                              	mov rdi, r14
0x2a463:   e8 d0 bd ff ff                        	call 0x26238 <wReg8>
0x2a468:   ba 54 00 00 00                        	mov edx, 0x54
0x2a46d:   be 36 00 00 00                        	mov esi, 0x36
0x2a472:   4c 89 f7                              	mov rdi, r14
0x2a475:   e8 be bd ff ff                        	call 0x26238 <wReg8>
0x2a47a:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x2a47e:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2a485:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x2a48b:   89 c2                                 	mov edx, eax
0x2a48d:   81 e2 00 ff ff 00                     	and edx, 0xffff00
0x2a493:   81 fa 00 30 81 00                     	cmp edx, 0x813000
0x2a499:   74 10                                 	je 0x2a4ab <nm131_tune_internal+0x107d>
0x2a49b:   25 00 ff 0f 00                        	and eax, 0xfff00
0x2a4a0:   3d 00 31 01 00                        	cmp eax, 0x13100
0x2a4a5:   0f 85 56 01 00 00                     	jne 0x2a601 <nm131_tune_internal+0x11d3>
0x2a4ab:   83 7d 9c 02                           	cmp dword ptr [rbp - 0x64], 2
0x2a4af:   0f 85 22 01 00 00                     	jne 0x2a5d7 <nm131_tune_internal+0x11a9>
0x2a4b5:   83 7d ac 06                           	cmp dword ptr [rbp - 0x54], 6
0x2a4b9:   0f 84 18 01 00 00                     	je 0x2a5d7 <nm131_tune_internal+0x11a9>
0x2a4bf:   83 7d ac 08                           	cmp dword ptr [rbp - 0x54], 8
0x2a4c3:   0f 84 0e 01 00 00                     	je 0x2a5d7 <nm131_tune_internal+0x11a9>
0x2a4c9:   83 7d ac 0c                           	cmp dword ptr [rbp - 0x54], 0xc ; "GNU"
0x2a4cd:   0f 84 04 01 00 00                     	je 0x2a5d7 <nm131_tune_internal+0x11a9>
0x2a4d3:   83 7d ac 0e                           	cmp dword ptr [rbp - 0x54], 0xe
0x2a4d7:   0f 84 fa 00 00 00                     	je 0x2a5d7 <nm131_tune_internal+0x11a9>
0x2a4dd:   83 7d ac 0f                           	cmp dword ptr [rbp - 0x54], 0xf
0x2a4e1:   0f 84 f0 00 00 00                     	je 0x2a5d7 <nm131_tune_internal+0x11a9>
0x2a4e7:   83 7d ac 10                           	cmp dword ptr [rbp - 0x54], 0x10
0x2a4eb:   0f 84 e6 00 00 00                     	je 0x2a5d7 <nm131_tune_internal+0x11a9>
0x2a4f1:   83 7d ac ff                           	cmp dword ptr [rbp - 0x54], -1
0x2a4f5:   0f 84 dc 00 00 00                     	je 0x2a5d7 <nm131_tune_internal+0x11a9>
0x2a4fb:   83 7d 94 01                           	cmp dword ptr [rbp - 0x6c], 1
0x2a4ff:   74 06                                 	je 0x2a507 <nm131_tune_internal+0x10d9>
0x2a501:   83 7d 94 03                           	cmp dword ptr [rbp - 0x6c], 3
0x2a505:   75 41                                 	jne 0x2a548 <nm131_tune_internal+0x111a>
0x2a507:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x2a50b:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2a512:   0f b6 80 00 00 00 00                  	movzx eax, byte ptr [rax]
0x2a519:   3c 0f                                 	cmp al, 0xf
0x2a51b:   77 19                                 	ja 0x2a536 <nm131_tune_internal+0x1108>
0x2a51d:   ba 7f 00 00 00                        	mov edx, 0x7f
0x2a522:   28 c2                                 	sub dl, al
0x2a524:   0f b6 d2                              	movzx edx, dl
0x2a527:   be 34 00 00 00                        	mov esi, 0x34
0x2a52c:   4c 89 f7                              	mov rdi, r14
0x2a52f:   e8 04 bd ff ff                        	call 0x26238 <wReg8>
0x2a534:   eb 12                                 	jmp 0x2a548 <nm131_tune_internal+0x111a>
0x2a536:   ba 70 00 00 00                        	mov edx, 0x70
0x2a53b:   be 34 00 00 00                        	mov esi, 0x34
0x2a540:   4c 89 f7                              	mov rdi, r14
0x2a543:   e8 f0 bc ff ff                        	call 0x26238 <wReg8>
0x2a548:   8b 5d 94                              	mov ebx, dword ptr [rbp - 0x6c]
0x2a54b:   83 eb 02                              	sub ebx, 2
0x2a54e:   83 fb 01                              	cmp ebx, 1
0x2a551:   76 06                                 	jbe 0x2a559 <nm131_tune_internal+0x112b>
0x2a553:   83 7d 94 00                           	cmp dword ptr [rbp - 0x6c], 0
0x2a557:   75 41                                 	jne 0x2a59a <nm131_tune_internal+0x116c>
0x2a559:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x2a55d:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2a564:   0f b6 80 00 00 00 00                  	movzx eax, byte ptr [rax]
0x2a56b:   3c 0f                                 	cmp al, 0xf
0x2a56d:   77 19                                 	ja 0x2a588 <nm131_tune_internal+0x115a>
0x2a56f:   ba 5f 00 00 00                        	mov edx, 0x5f
0x2a574:   28 c2                                 	sub dl, al
0x2a576:   0f b6 d2                              	movzx edx, dl
0x2a579:   be 35 00 00 00                        	mov esi, 0x35
0x2a57e:   4c 89 f7                              	mov rdi, r14
0x2a581:   e8 b2 bc ff ff                        	call 0x26238 <wReg8>
0x2a586:   eb 12                                 	jmp 0x2a59a <nm131_tune_internal+0x116c>
0x2a588:   ba 50 00 00 00                        	mov edx, 0x50
0x2a58d:   be 35 00 00 00                        	mov esi, 0x35
0x2a592:   4c 89 f7                              	mov rdi, r14
0x2a595:   e8 9e bc ff ff                        	call 0x26238 <wReg8>
0x2a59a:   83 7d 94 01                           	cmp dword ptr [rbp - 0x6c], 1
0x2a59e:   74 18                                 	je 0x2a5b8 <nm131_tune_internal+0x118a>
0x2a5a0:   83 7d 94 03                           	cmp dword ptr [rbp - 0x6c], 3
0x2a5a4:   74 12                                 	je 0x2a5b8 <nm131_tune_internal+0x118a>
0x2a5a6:   ba 60 00 00 00                        	mov edx, 0x60
0x2a5ab:   be 34 00 00 00                        	mov esi, 0x34
0x2a5b0:   4c 89 f7                              	mov rdi, r14
0x2a5b3:   e8 80 bc ff ff                        	call 0x26238 <wReg8>
0x2a5b8:   83 fb 01                              	cmp ebx, 1
0x2a5bb:   76 44                                 	jbe 0x2a601 <nm131_tune_internal+0x11d3>
0x2a5bd:   83 7d 94 00                           	cmp dword ptr [rbp - 0x6c], 0
0x2a5c1:   74 3e                                 	je 0x2a601 <nm131_tune_internal+0x11d3>
0x2a5c3:   ba 40 00 00 00                        	mov edx, 0x40
0x2a5c8:   be 35 00 00 00                        	mov esi, 0x35
0x2a5cd:   4c 89 f7                              	mov rdi, r14
0x2a5d0:   e8 63 bc ff ff                        	call 0x26238 <wReg8>
0x2a5d5:   eb 2a                                 	jmp 0x2a601 <nm131_tune_internal+0x11d3>
0x2a5d7:   83 7d 9c 01                           	cmp dword ptr [rbp - 0x64], 1
0x2a5db:   76 24                                 	jbe 0x2a601 <nm131_tune_internal+0x11d3>
0x2a5dd:   ba 78 00 00 00                        	mov edx, 0x78
0x2a5e2:   be 34 00 00 00                        	mov esi, 0x34
0x2a5e7:   4c 89 f7                              	mov rdi, r14
0x2a5ea:   e8 49 bc ff ff                        	call 0x26238 <wReg8>
0x2a5ef:   ba 54 00 00 00                        	mov edx, 0x54
0x2a5f4:   be 35 00 00 00                        	mov esi, 0x35
0x2a5f9:   4c 89 f7                              	mov rdi, r14
0x2a5fc:   e8 37 bc ff ff                        	call 0x26238 <wReg8>
0x2a601:   83 7d ac 06                           	cmp dword ptr [rbp - 0x54], 6
0x2a605:   74 1e                                 	je 0x2a625 <nm131_tune_internal+0x11f7>
0x2a607:   83 7d ac 08                           	cmp dword ptr [rbp - 0x54], 8
0x2a60b:   74 18                                 	je 0x2a625 <nm131_tune_internal+0x11f7>
0x2a60d:   83 7d ac 0c                           	cmp dword ptr [rbp - 0x54], 0xc ; "GNU"
0x2a611:   74 12                                 	je 0x2a625 <nm131_tune_internal+0x11f7>
0x2a613:   83 7d ac 0e                           	cmp dword ptr [rbp - 0x54], 0xe
0x2a617:   74 0c                                 	je 0x2a625 <nm131_tune_internal+0x11f7>
0x2a619:   83 7d ac 0f                           	cmp dword ptr [rbp - 0x54], 0xf
0x2a61d:   74 06                                 	je 0x2a625 <nm131_tune_internal+0x11f7>
0x2a61f:   83 7d ac 10                           	cmp dword ptr [rbp - 0x54], 0x10
0x2a623:   75 4e                                 	jne 0x2a673 <nm131_tune_internal+0x1245>
0x2a625:   41 81 fd ff a2 e1 11                  	cmp r13d, 0x11e1a2ff
0x2a62c:   76 14                                 	jbe 0x2a642 <nm131_tune_internal+0x1214>
0x2a62e:   ba 84 00 00 00                        	mov edx, 0x84
0x2a633:   be 37 00 00 00                        	mov esi, 0x37
0x2a638:   4c 89 f7                              	mov rdi, r14
0x2a63b:   e8 f8 bb ff ff                        	call 0x26238 <wReg8>
0x2a640:   eb 43                                 	jmp 0x2a685 <nm131_tune_internal+0x1257>
0x2a642:   41 81 fd bf 1c 3d 09                  	cmp r13d, 0x93d1cbf
0x2a649:   76 14                                 	jbe 0x2a65f <nm131_tune_internal+0x1231>
0x2a64b:   ba 9c 00 00 00                        	mov edx, 0x9c
0x2a650:   be 37 00 00 00                        	mov esi, 0x37
0x2a655:   4c 89 f7                              	mov rdi, r14
0x2a658:   e8 db bb ff ff                        	call 0x26238 <wReg8>
0x2a65d:   eb 26                                 	jmp 0x2a685 <nm131_tune_internal+0x1257>
0x2a65f:   ba 84 00 00 00                        	mov edx, 0x84
0x2a664:   be 37 00 00 00                        	mov esi, 0x37
0x2a669:   4c 89 f7                              	mov rdi, r14
0x2a66c:   e8 c7 bb ff ff                        	call 0x26238 <wReg8>
0x2a671:   eb 12                                 	jmp 0x2a685 <nm131_tune_internal+0x1257>
0x2a673:   ba 84 00 00 00                        	mov edx, 0x84
0x2a678:   be 37 00 00 00                        	mov esi, 0x37
0x2a67d:   4c 89 f7                              	mov rdi, r14
0x2a680:   e8 b3 bb ff ff                        	call 0x26238 <wReg8>
0x2a685:   41 0f b6 54 24 21                     	movzx edx, byte ptr [r12 + 0x21]
0x2a68b:   84 d2                                 	test dl, dl
0x2a68d:   74 10                                 	je 0x2a69f <nm131_tune_internal+0x1271>
0x2a68f:   0f b6 d2                              	movzx edx, dl
0x2a692:   be 35 00 00 00                        	mov esi, 0x35
0x2a697:   4c 89 f7                              	mov rdi, r14
0x2a69a:   e8 99 bb ff ff                        	call 0x26238 <wReg8>
0x2a69f:   8b 4d a4                              	mov ecx, dword ptr [rbp - 0x5c]
0x2a6a2:   8b 55 b8                              	mov edx, dword ptr [rbp - 0x48]
0x2a6a5:   4c 89 e6                              	mov rsi, r12
0x2a6a8:   4c 89 f7                              	mov rdi, r14
0x2a6ab:   e8 fb df ff ff                        	call 0x286ab <nm131_demod_config>
0x2a6b0:   48 63 45 a8                           	movsxd rax, dword ptr [rbp - 0x58]
0x2a6b4:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2a6bb:   8b 4d b8                              	mov ecx, dword ptr [rbp - 0x48]
0x2a6be:   89 88 00 00 00 00                     	mov dword ptr [rax], ecx
0x2a6c4:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2a6cb:   41 8b 4c 24 0c                        	mov ecx, dword ptr [r12 + 0xc]
0x2a6d0:   89 4c 10 08                           	mov dword ptr [rax + rdx + 8], ecx
0x2a6d4:   41 8b 4c 24 10                        	mov ecx, dword ptr [r12 + 0x10]
0x2a6d9:   89 4c 10 0c                           	mov dword ptr [rax + rdx + 0xc], ecx
0x2a6dd:   41 8b 0c 24                           	mov ecx, dword ptr [r12]
0x2a6e1:   89 4c 10 04                           	mov dword ptr [rax + rdx + 4], ecx
0x2a6e5:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2a6ec:   8b 4d a4                              	mov ecx, dword ptr [rbp - 0x5c]
0x2a6ef:   89 4c 10 04                           	mov dword ptr [rax + rdx + 4], ecx
0x2a6f3:   41 8b 4c 24 18                        	mov ecx, dword ptr [r12 + 0x18]
0x2a6f8:   89 4c 10 0c                           	mov dword ptr [rax + rdx + 0xc], ecx
0x2a6fc:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2a703:   41 0f b6 4c 24 1c                     	movzx ecx, byte ptr [r12 + 0x1c]
0x2a709:   88 4c 10 0d                           	mov byte ptr [rax + rdx + 0xd], cl
0x2a70d:   41 0f b6 4c 24 1d                     	movzx ecx, byte ptr [r12 + 0x1d]
0x2a713:   88 4c 10 0e                           	mov byte ptr [rax + rdx + 0xe], cl
0x2a717:   41 0f b6 4c 24 14                     	movzx ecx, byte ptr [r12 + 0x14]
0x2a71d:   88 4c 10 0f                           	mov byte ptr [rax + rdx + 0xf], cl
0x2a721:   48 8b 45 c8                           	mov rax, qword ptr [rbp - 0x38]
; data inside code section at 0x2a725 -- 0x2a72d
0x2a725:   65 48 33 04 25 28 00 00                            |eH3.%(..        |
; function: nm131_fm_scan at 0x2a72d -- 0x2a749
0x2a72d:   00 74 1e eb                           	add byte ptr [rsi + rbx - 0x15], dh
; data inside code section at 0x2a731 -- 0x2a732
0x2a731:   17                                                 |.               |
0x2a732:   ba 82 00 00 00                        	mov edx, 0x82
0x2a737:   be 26 00 00 00                        	mov esi, 0x26
0x2a73c:   4c 89 f7                              	mov rdi, r14
0x2a73f:   e8 f4 ba ff ff                        	call 0x26238 <wReg8>
0x2a744:   e9 3c fb ff ff                        	jmp 0x2a285
; function: function_2a749 at 0x2a749 -- 0x2a75d
0x2a749:   e8 5a 44 01 00                        	call 0x3eba8 <__stack_chk_fail>
0x2a74e:   48 83 c4 48                           	add rsp, 0x48
0x2a752:   5b                                    	pop rbx
0x2a753:   41 5c                                 	pop r12
0x2a755:   41 5d                                 	pop r13
0x2a757:   41 5e                                 	pop r14
0x2a759:   41 5f                                 	pop r15
0x2a75b:   c9                                    	leave 
0x2a75c:   c3                                    	ret 
; function: nm131_fm_scan at 0x2a75d -- 0x2a7a8
0x2a75d:   55                                    	push rbp
0x2a75e:   48 89 e5                              	mov rbp, rsp
0x2a761:   41 54                                 	push r12
0x2a763:   53                                    	push rbx
0x2a764:   48 83 ec 30                           	sub rsp, 0x30
0x2a768:   e8 83 44 01 00                        	call 0x3ebf0 <mcount>
0x2a76d:   49 89 fc                              	mov r12, rdi
0x2a770:   48 89 f3                              	mov rbx, rsi
0x2a773:   48 8d 75 c0                           	lea rsi, [rbp - 0x40]
0x2a777:   b9 05 00 00 00                        	mov ecx, 5
0x2a77c:   b8 00 00 00 00                        	mov eax, 0
0x2a781:   48 89 f7                              	mov rdi, rsi
0x2a784:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x2a787:   c7 07 00 00 00 00                     	mov dword ptr [rdi], 0
0x2a78d:   c7 45 d0 01 00 00 00                  	mov dword ptr [rbp - 0x30], 1
0x2a794:   8b 03                                 	mov eax, dword ptr [rbx]
0x2a796:   89 45 c0                              	mov dword ptr [rbp - 0x40], eax
0x2a799:   c7 45 cc 0d 00 00 00                  	mov dword ptr [rbp - 0x34], 0xd ; "NU"
0x2a7a0:   ba 02 00 00 00                        	mov edx, 2
0x2a7a5:   4c 89 e7                              	mov rdi, r12
; data inside code section at 0x2a7a8 -- 0x2a7aa
0x2a7a8:   e8 81                                              |..              |
; function: nm131_scan at 0x2a7aa -- 0x2a7ab
0x2a7aa:   ec                                    	in al, dx
; data inside code section at 0x2a7ab -- 0x2a7ad
0x2a7ab:   ff ff                                              |..              |
; function: function_2a7ad at 0x2a7ad -- 0x2a7da
0x2a7ad:   be 14 00 00 00                        	mov esi, 0x14
0x2a7b2:   4c 89 e7                              	mov rdi, r12
0x2a7b5:   e8 d6 39 ff ff                        	call 0x1e190 <nmi_delay>
0x2a7ba:   4c 89 e7                              	mov rdi, r12
0x2a7bd:   e8 de d1 ff ff                        	call 0x279a0 <nm131_adec_get_rssi>
0x2a7c2:   66 89 43 04                           	mov word ptr [rbx + 4], ax
0x2a7c6:   4c 89 e7                              	mov rdi, r12
0x2a7c9:   e8 8b c5 ff ff                        	call 0x26d59 <nm131_get_overthcount>
0x2a7ce:   89 43 08                              	mov dword ptr [rbx + 8], eax
0x2a7d1:   48 83 c4 30                           	add rsp, 0x30
0x2a7d5:   5b                                    	pop rbx
0x2a7d6:   41 5c                                 	pop r12
0x2a7d8:   c9                                    	leave 
0x2a7d9:   c3                                    	ret 
; function: nm131_scan at 0x2a7da -- 0x2a818
0x2a7da:   55                                    	push rbp
0x2a7db:   48 89 e5                              	mov rbp, rsp
0x2a7de:   41 54                                 	push r12
0x2a7e0:   53                                    	push rbx
0x2a7e1:   e8 0a 44 01 00                        	call 0x3ebf0 <mcount>
0x2a7e6:   48 89 fb                              	mov rbx, rdi
0x2a7e9:   49 89 f4                              	mov r12, rsi
0x2a7ec:   ba 01 00 00 00                        	mov edx, 1
0x2a7f1:   e8 38 ec ff ff                        	call 0x2942e <nm131_tune_internal>
0x2a7f6:   be 1e 00 00 00                        	mov esi, 0x1e
0x2a7fb:   48 89 df                              	mov rdi, rbx
0x2a7fe:   e8 8d 39 ff ff                        	call 0x1e190 <nmi_delay>
0x2a803:   be ec 01 00 00                        	mov esi, 0x1ec
0x2a808:   48 89 df                              	mov rdi, rbx
0x2a80b:   e8 d0 c2 ff ff                        	call 0x26ae0 <rReg32>
0x2a810:   c1 e8 0a                              	shr eax, 0xa
0x2a813:   25 ff 03 00 00                        	and eax, 0x3ff
; data inside code section at 0x2a818 -- 0x2a819
0x2a818:   8d                                                 |.               |
; function: nm131_software_sleep_lt at 0x2a819 -- 0x2a81c
0x2a819:   90                                    	nop 
0x2a81a:   00 fc                                 	add ah, bh
; data inside code section at 0x2a81c -- 0x2a81e
0x2a81c:   ff ff                                              |..              |
; function: function_2a81e at 0x2a81e -- 0x2a849
0x2a81e:   3d 00 02 00 00                        	cmp eax, 0x200
0x2a823:   0f 4d c2                              	cmovge eax, edx
0x2a826:   41 89 44 24 30                        	mov dword ptr [r12 + 0x30], eax
0x2a82b:   0f b6 13                              	movzx edx, byte ptr [rbx]
0x2a82e:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x2a835:   0f bf 92 00 00 00 00                  	movsx edx, word ptr [rdx]
0x2a83c:   39 d0                                 	cmp eax, edx
0x2a83e:   41 0f 9d 44 24 2c                     	setge byte ptr [r12 + 0x2c]
0x2a844:   5b                                    	pop rbx
0x2a845:   41 5c                                 	pop r12
0x2a847:   c9                                    	leave 
0x2a848:   c3                                    	ret 
; function: nm131_software_sleep_lt at 0x2a849 -- 0x2aa3e
0x2a849:   55                                    	push rbp
0x2a84a:   48 89 e5                              	mov rbp, rsp
0x2a84d:   41 56                                 	push r14
0x2a84f:   41 55                                 	push r13
0x2a851:   41 54                                 	push r12
0x2a853:   53                                    	push rbx
0x2a854:   48 83 ec 30                           	sub rsp, 0x30
0x2a858:   e8 93 43 01 00                        	call 0x3ebf0 <mcount>
0x2a85d:   49 89 fc                              	mov r12, rdi
0x2a860:   44 0f b6 37                           	movzx r14d, byte ptr [rdi]
0x2a864:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x2a868:   b9 05 00 00 00                        	mov ecx, 5
0x2a86d:   b8 00 00 00 00                        	mov eax, 0
0x2a872:   48 89 f7                              	mov rdi, rsi
0x2a875:   f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x2a878:   c7 07 00 00 00 00                     	mov dword ptr [rdi], 0
0x2a87e:   c7 45 b0 80 aa 40 1c                  	mov dword ptr [rbp - 0x50], 0x1c40aa80
0x2a885:   c7 45 b8 00 09 3d 00                  	mov dword ptr [rbp - 0x48], 0x3d0900
0x2a88c:   c7 45 c0 02 00 00 00                  	mov dword ptr [rbp - 0x40], 2
0x2a893:   c7 45 bc 0c 00 00 00                  	mov dword ptr [rbp - 0x44], 0xc ; "GNU"
0x2a89a:   ba 00 00 00 00                        	mov edx, 0
0x2a89f:   4c 89 e7                              	mov rdi, r12
0x2a8a2:   e8 87 eb ff ff                        	call 0x2942e <nm131_tune_internal>
0x2a8a7:   49 63 de                              	movsxd rbx, r14d
0x2a8aa:   49 c7 c5 00 00 00 00                  	mov r13, 0
0x2a8b1:   48 69 db b8 00 00 00                  	imul rbx, rbx, 0xb8
0x2a8b8:   42 c6 44 2b 02 01                     	mov byte ptr [rbx + r13 + 2], 1
0x2a8be:   be 04 01 00 00                        	mov esi, 0x104
0x2a8c3:   4c 89 e7                              	mov rdi, r12
0x2a8c6:   e8 15 c2 ff ff                        	call 0x26ae0 <rReg32>
0x2a8cb:   89 c2                                 	mov edx, eax
0x2a8cd:   83 e2 de                              	and edx, 0xffffffde
0x2a8d0:   83 ca 10                              	or edx, 0x10
0x2a8d3:   be 04 01 00 00                        	mov esi, 0x104
0x2a8d8:   4c 89 e7                              	mov rdi, r12
0x2a8db:   e8 d6 d3 ff ff                        	call 0x27cb6 <wReg32>
0x2a8e0:   be 00 00 00 00                        	mov esi, 0
0x2a8e5:   4c 89 e7                              	mov rdi, r12
0x2a8e8:   e8 f7 bc ff ff                        	call 0x265e4 <rReg8>
0x2a8ed:   42 88 44 2b 03                        	mov byte ptr [rbx + r13 + 3], al
0x2a8f2:   ba 0d 00 00 00                        	mov edx, 0xd ; "NU"
0x2a8f7:   be 00 00 00 00                        	mov esi, 0
0x2a8fc:   4c 89 e7                              	mov rdi, r12
0x2a8ff:   e8 34 b9 ff ff                        	call 0x26238 <wReg8>
0x2a904:   be 07 00 00 00                        	mov esi, 7
0x2a909:   4c 89 e7                              	mov rdi, r12
0x2a90c:   e8 d3 bc ff ff                        	call 0x265e4 <rReg8>
0x2a911:   89 c2                                 	mov edx, eax
0x2a913:   81 e2 bf 00 00 00                     	and edx, 0xbf
0x2a919:   be 07 00 00 00                        	mov esi, 7
0x2a91e:   4c 89 e7                              	mov rdi, r12
0x2a921:   e8 12 b9 ff ff                        	call 0x26238 <wReg8>
0x2a926:   be 09 00 00 00                        	mov esi, 9
0x2a92b:   4c 89 e7                              	mov rdi, r12
0x2a92e:   e8 b1 bc ff ff                        	call 0x265e4 <rReg8>
0x2a933:   89 c2                                 	mov edx, eax
0x2a935:   81 e2 ef 00 00 00                     	and edx, 0xef
0x2a93b:   be 09 00 00 00                        	mov esi, 9
0x2a940:   4c 89 e7                              	mov rdi, r12
0x2a943:   e8 f0 b8 ff ff                        	call 0x26238 <wReg8>
0x2a948:   be 0b 00 00 00                        	mov esi, 0xb
0x2a94d:   4c 89 e7                              	mov rdi, r12
0x2a950:   e8 8f bc ff ff                        	call 0x265e4 <rReg8>
0x2a955:   89 c2                                 	mov edx, eax
0x2a957:   81 e2 ef 00 00 00                     	and edx, 0xef
0x2a95d:   be 0b 00 00 00                        	mov esi, 0xb
0x2a962:   4c 89 e7                              	mov rdi, r12
0x2a965:   e8 ce b8 ff ff                        	call 0x26238 <wReg8>
0x2a96a:   be 34 00 00 00                        	mov esi, 0x34
0x2a96f:   4c 89 e7                              	mov rdi, r12
0x2a972:   e8 6d bc ff ff                        	call 0x265e4 <rReg8>
0x2a977:   42 88 44 2b 04                        	mov byte ptr [rbx + r13 + 4], al
0x2a97c:   ba 00 00 00 00                        	mov edx, 0
0x2a981:   be 34 00 00 00                        	mov esi, 0x34
0x2a986:   4c 89 e7                              	mov rdi, r12
0x2a989:   e8 aa b8 ff ff                        	call 0x26238 <wReg8>
0x2a98e:   be 35 00 00 00                        	mov esi, 0x35
0x2a993:   4c 89 e7                              	mov rdi, r12
0x2a996:   e8 49 bc ff ff                        	call 0x265e4 <rReg8>
0x2a99b:   42 88 44 2b 05                        	mov byte ptr [rbx + r13 + 5], al
0x2a9a0:   ba 00 00 00 00                        	mov edx, 0
0x2a9a5:   be 35 00 00 00                        	mov esi, 0x35
0x2a9aa:   4c 89 e7                              	mov rdi, r12
0x2a9ad:   e8 86 b8 ff ff                        	call 0x26238 <wReg8>
0x2a9b2:   be 05 00 00 00                        	mov esi, 5
0x2a9b7:   4c 89 e7                              	mov rdi, r12
0x2a9ba:   e8 25 bc ff ff                        	call 0x265e4 <rReg8>
0x2a9bf:   42 88 44 2b 06                        	mov byte ptr [rbx + r13 + 6], al
0x2a9c4:   ba 05 00 00 00                        	mov edx, 5
0x2a9c9:   be 05 00 00 00                        	mov esi, 5
0x2a9ce:   4c 89 e7                              	mov rdi, r12
0x2a9d1:   e8 62 b8 ff ff                        	call 0x26238 <wReg8>
0x2a9d6:   c6 83 00 00 00 00 05                  	mov byte ptr [rbx], 5
0x2a9dd:   be 0a 00 00 00                        	mov esi, 0xa
0x2a9e2:   4c 89 e7                              	mov rdi, r12
0x2a9e5:   e8 fa bb ff ff                        	call 0x265e4 <rReg8>
0x2a9ea:   42 88 44 2b 07                        	mov byte ptr [rbx + r13 + 7], al
0x2a9ef:   41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0x2a9f4:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2a9fb:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x2aa01:   ba 00 00 00 00                        	mov edx, 0
0x2aa06:   83 f8 03                              	cmp eax, 3
0x2aa09:   77 09                                 	ja 0x2aa14 <nm131_software_sleep_lt+0x1cb>
0x2aa0b:   89 c0                                 	mov eax, eax
0x2aa0d:   0f b6 90 00 00 00 00                  	movzx edx, byte ptr [rax]
0x2aa14:   83 ca f4                              	or edx, 0xfffffff4
0x2aa17:   0f b6 d2                              	movzx edx, dl
0x2aa1a:   be 0a 00 00 00                        	mov esi, 0xa
0x2aa1f:   4c 89 e7                              	mov rdi, r12
0x2aa22:   e8 11 b8 ff ff                        	call 0x26238 <wReg8>
0x2aa27:   be 36 00 00 00                        	mov esi, 0x36
0x2aa2c:   4c 89 e7                              	mov rdi, r12
0x2aa2f:   e8 b0 bb ff ff                        	call 0x265e4 <rReg8>
0x2aa34:   49 63 de                              	movsxd rbx, r14d
0x2aa37:   49 c7 c5 00 00 00 00                  	mov r13, 0
; data inside code section at 0x2aa3e -- 0x2aa3f
0x2aa3e:   48                                                 |H               |
; function: nm131_notch_ctl at 0x2aa3f -- 0x2aa6f
0x2aa3f:   69 db b8 00 00 00                     	imul ebx, ebx, 0xb8
0x2aa45:   42 88 44 2b 08                        	mov byte ptr [rbx + r13 + 8], al
0x2aa4a:   ba 78 00 00 00                        	mov edx, 0x78
0x2aa4f:   be 36 00 00 00                        	mov esi, 0x36
0x2aa54:   4c 89 e7                              	mov rdi, r12
0x2aa57:   e8 dc b7 ff ff                        	call 0x26238 <wReg8>
0x2aa5c:   42 c6 44 2b 02 00                     	mov byte ptr [rbx + r13 + 2], 0
0x2aa62:   48 83 c4 30                           	add rsp, 0x30
0x2aa66:   5b                                    	pop rbx
0x2aa67:   41 5c                                 	pop r12
0x2aa69:   41 5d                                 	pop r13
0x2aa6b:   41 5e                                 	pop r14
0x2aa6d:   c9                                    	leave 
0x2aa6e:   c3                                    	ret 
; function: nm131_notch_ctl at 0x2aa6f -- 0x2ab4b
0x2aa6f:   55                                    	push rbp
0x2aa70:   48 89 e5                              	mov rbp, rsp
0x2aa73:   53                                    	push rbx
0x2aa74:   48 83 ec 08                           	sub rsp, 8
0x2aa78:   e8 73 41 01 00                        	call 0x3ebf0 <mcount>
0x2aa7d:   48 89 fb                              	mov rbx, rdi
0x2aa80:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x2aa83:   85 f6                                 	test esi, esi
0x2aa85:   0f 84 9f 00 00 00                     	je 0x2ab2a <nm131_notch_ctl+0xbb>
0x2aa8b:   48 63 c8                              	movsxd rcx, eax
0x2aa8e:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x2aa95:   8b 89 00 00 00 00                     	mov ecx, dword ptr [rcx]
0x2aa9b:   f6 c1 02                              	test cl, 2
0x2aa9e:   75 14                                 	jne 0x2aab4 <nm131_notch_ctl+0x45>
0x2aaa0:   89 cf                                 	mov edi, ecx
0x2aaa2:   c1 ef 0c                              	shr edi, 0xc ; "GNU"
0x2aaa5:   83 e7 07                              	and edi, 7
0x2aaa8:   48 63 f2                              	movsxd rsi, edx
0x2aaab:   48 39 f7                              	cmp rdi, rsi
0x2aaae:   0f 84 c0 00 00 00                     	je 0x2ab74
0x2aab4:   48 63 f0                              	movsxd rsi, eax
0x2aab7:   48 69 f6 b8 00 00 00                  	imul rsi, rsi, 0xb8
0x2aabe:   83 be 00 00 00 00 0d                  	cmp dword ptr [rsi], 0xd ; "NU"
0x2aac5:   75 1e                                 	jne 0x2aae5 <nm131_notch_ctl+0x76>
0x2aac7:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2aace:   be 10 00 00 00                        	mov esi, 0x10
0x2aad3:   48 89 df                              	mov rdi, rbx
0x2aad6:   b8 00 00 00 00                        	mov eax, 0
0x2aadb:   e8 8f b6 ff ff                        	call 0x2616f <nmi_debug>
0x2aae0:   e9 8f 00 00 00                        	jmp 0x2ab74
0x2aae5:   83 e2 07                              	and edx, 7
0x2aae8:   c1 e2 0c                              	shl edx, 0xc ; "GNU"
0x2aaeb:   81 e1 fd 8f ff ff                     	and ecx, 0xffff8ffd
0x2aaf1:   09 ca                                 	or edx, ecx
0x2aaf3:   48 98                                 	cdqe 
0x2aaf5:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2aafc:   89 90 00 00 00 00                     	mov dword ptr [rax], edx
0x2ab02:   be 10 01 00 00                        	mov esi, 0x110
0x2ab07:   48 89 df                              	mov rdi, rbx
0x2ab0a:   e8 a7 d1 ff ff                        	call 0x27cb6 <wReg32>
0x2ab0f:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2ab16:   be 10 00 00 00                        	mov esi, 0x10
0x2ab1b:   48 89 df                              	mov rdi, rbx
0x2ab1e:   b8 00 00 00 00                        	mov eax, 0
0x2ab23:   e8 47 b6 ff ff                        	call 0x2616f <nmi_debug>
0x2ab28:   eb 4a                                 	jmp 0x2ab74
0x2ab2a:   48 63 d0                              	movsxd rdx, eax
0x2ab2d:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x2ab34:   8b 92 00 00 00 00                     	mov edx, dword ptr [rdx]
0x2ab3a:   f6 c2 02                              	test dl, 2
0x2ab3d:   75 35                                 	jne 0x2ab74
0x2ab3f:   83 ca 02                              	or edx, 2
0x2ab42:   48 98                                 	cdqe 
0x2ab44:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
; function: nm131_notch_spur at 0x2ab4b -- 0x2ab7b
0x2ab4b:   89 90 00 00 00 00                     	mov dword ptr [rax], edx
0x2ab51:   be 10 01 00 00                        	mov esi, 0x110
0x2ab56:   e8 5b d1 ff ff                        	call 0x27cb6 <wReg32>
0x2ab5b:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2ab62:   be 10 00 00 00                        	mov esi, 0x10
0x2ab67:   48 89 df                              	mov rdi, rbx
0x2ab6a:   b8 00 00 00 00                        	mov eax, 0
0x2ab6f:   e8 fb b5 ff ff                        	call 0x2616f <nmi_debug>
0x2ab74:   48 83 c4 08                           	add rsp, 8
0x2ab78:   5b                                    	pop rbx
0x2ab79:   c9                                    	leave 
0x2ab7a:   c3                                    	ret 
; function: nm131_notch_spur at 0x2ab7b -- 0x2ac90
0x2ab7b:   55                                    	push rbp
0x2ab7c:   48 89 e5                              	mov rbp, rsp
0x2ab7f:   41 54                                 	push r12
0x2ab81:   53                                    	push rbx
0x2ab82:   e8 69 40 01 00                        	call 0x3ebf0 <mcount>
0x2ab87:   49 89 fc                              	mov r12, rdi
0x2ab8a:   0f b6 0f                              	movzx ecx, byte ptr [rdi]
0x2ab8d:   48 63 c1                              	movsxd rax, ecx
0x2ab90:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2ab97:   8b 90 00 00 00 00                     	mov edx, dword ptr [rax]
0x2ab9d:   83 fa 06                              	cmp edx, 6
0x2aba0:   74 20                                 	je 0x2abc2 <nm131_notch_spur+0x47>
0x2aba2:   83 fa 08                              	cmp edx, 8
0x2aba5:   74 1b                                 	je 0x2abc2 <nm131_notch_spur+0x47>
0x2aba7:   83 fa 0c                              	cmp edx, 0xc ; "GNU"
0x2abaa:   74 16                                 	je 0x2abc2 <nm131_notch_spur+0x47>
0x2abac:   83 fa 0e                              	cmp edx, 0xe
0x2abaf:   90                                    	nop 
0x2abb0:   74 10                                 	je 0x2abc2 <nm131_notch_spur+0x47>
0x2abb2:   83 fa 0f                              	cmp edx, 0xf
0x2abb5:   74 0b                                 	je 0x2abc2 <nm131_notch_spur+0x47>
0x2abb7:   83 fa 10                              	cmp edx, 0x10
0x2abba:   74 06                                 	je 0x2abc2 <nm131_notch_spur+0x47>
0x2abbc:   83 fa 0d                              	cmp edx, 0xd ; "NU"
0x2abbf:   90                                    	nop 
0x2abc0:   75 17                                 	jne 0x2abd9 <nm131_notch_spur+0x5e>
0x2abc2:   ba 00 00 00 00                        	mov edx, 0
0x2abc7:   be 00 00 00 00                        	mov esi, 0
0x2abcc:   4c 89 e7                              	mov rdi, r12
0x2abcf:   e8 9b fe ff ff                        	call 0x2aa6f <nm131_notch_ctl>
0x2abd4:   e9 e3 00 00 00                        	jmp 0x2acbc
0x2abd9:   85 d2                                 	test edx, edx
0x2abdb:   74 20                                 	je 0x2abfd <nm131_notch_spur+0x82>
0x2abdd:   83 fa 02                              	cmp edx, 2
0x2abe0:   74 1b                                 	je 0x2abfd <nm131_notch_spur+0x82>
0x2abe2:   83 fa 03                              	cmp edx, 3
0x2abe5:   74 16                                 	je 0x2abfd <nm131_notch_spur+0x82>
0x2abe7:   83 fa 01                              	cmp edx, 1
0x2abea:   74 0a                                 	je 0x2abf6 <nm131_notch_spur+0x7b>
0x2abec:   b8 04 00 00 00                        	mov eax, 4
0x2abf1:   83 fa 09                              	cmp edx, 9
0x2abf4:   75 0c                                 	jne 0x2ac02 <nm131_notch_spur+0x87>
0x2abf6:   b8 01 00 00 00                        	mov eax, 1
0x2abfb:   eb 05                                 	jmp 0x2ac02 <nm131_notch_spur+0x87>
0x2abfd:   b8 00 00 00 00                        	mov eax, 0
0x2ac02:   48 63 c9                              	movsxd rcx, ecx
0x2ac05:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x2ac0c:   8b b9 00 00 00 00                     	mov edi, dword ptr [rcx]
0x2ac12:   49 c7 c0 00 00 00 00                  	mov r8, 0
0x2ac19:   49 81 f8 00 00 00 00                  	cmp r8, 0
0x2ac20:   77 09                                 	ja 0x2ac2b <nm131_notch_spur+0xb0>
0x2ac22:   48 c7 c3 00 00 00 00                  	mov rbx, 0
0x2ac29:   eb 32                                 	jmp 0x2ac5d <nm131_notch_spur+0xe2>
0x2ac2b:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2ac32:   48 c7 c3 00 00 00 00                  	mov rbx, 0
0x2ac39:   39 43 04                              	cmp dword ptr [rbx + 4], eax
0x2ac3c:   75 16                                 	jne 0x2ac54 <nm131_notch_spur+0xd9>
0x2ac3e:   8b 0b                                 	mov ecx, dword ptr [rbx]
0x2ac40:   8d b1 10 b6 fd ff                     	lea esi, [rcx - 0x249f0]
0x2ac46:   39 f7                                 	cmp edi, esi
0x2ac48:   72 0a                                 	jb 0x2ac54 <nm131_notch_spur+0xd9>
0x2ac4a:   81 c1 f0 49 02 00                     	add ecx, 0x249f0
0x2ac50:   39 cf                                 	cmp edi, ecx
0x2ac52:   76 09                                 	jbe 0x2ac5d <nm131_notch_spur+0xe2>
0x2ac54:   48 83 c3 10                           	add rbx, 0x10
0x2ac58:   48 39 d3                              	cmp rbx, rdx
0x2ac5b:   75 dc                                 	jne 0x2ac39 <nm131_notch_spur+0xbe>
0x2ac5d:   4c 39 c3                              	cmp rbx, r8
0x2ac60:   75 14                                 	jne 0x2ac76 <nm131_notch_spur+0xfb>
0x2ac62:   ba 00 00 00 00                        	mov edx, 0
0x2ac67:   be 00 00 00 00                        	mov esi, 0
0x2ac6c:   4c 89 e7                              	mov rdi, r12
0x2ac6f:   e8 fb fd ff ff                        	call 0x2aa6f <nm131_notch_ctl>
0x2ac74:   eb 46                                 	jmp 0x2acbc
0x2ac76:   0f b6 53 08                           	movzx edx, byte ptr [rbx + 8]
0x2ac7a:   c1 e2 10                              	shl edx, 0x10
0x2ac7d:   0f b7 43 0a                           	movzx eax, word ptr [rbx + 0xa]
0x2ac81:   09 c2                                 	or edx, eax
0x2ac83:   be 14 01 00 00                        	mov esi, 0x114
0x2ac88:   4c 89 e7                              	mov rdi, r12
0x2ac8b:   e8 26 d0 ff ff                        	call 0x27cb6 <wReg32>
; data inside code section at 0x2ac90 -- 0x2ac91
0x2ac90:   0f                                                 |.               |
; function: nm131_tune at 0x2ac91 -- 0x2acc1
0x2ac91:   b6 53                                 	mov dh, 0x53
0x2ac93:   0c c1                                 	or al, 0xc1
0x2ac95:   e2 10                                 	loop 0x2aca7 <nm131_tune+0x16>
0x2ac97:   0f b7 43 0e                           	movzx eax, word ptr [rbx + 0xe]
0x2ac9b:   09 c2                                 	or edx, eax
0x2ac9d:   be 18 01 00 00                        	mov esi, 0x118
0x2aca2:   4c 89 e7                              	mov rdi, r12
; data inside code section at 0x2aca5 -- 0x2aca7
0x2aca5:   e8 0c                                              |..              |
0x2aca7:   d0 ff                                 	sar bh, 1
; data inside code section at 0x2aca9 -- 0x2acaa
0x2aca9:   ff                                                 |.               |
0x2acaa:   ba 07 00 00 00                        	mov edx, 7
0x2acaf:   be 01 00 00 00                        	mov esi, 1
0x2acb4:   4c 89 e7                              	mov rdi, r12
0x2acb7:   e8 b3 fd ff ff                        	call 0x2aa6f <nm131_notch_ctl>
0x2acbc:   5b                                    	pop rbx
0x2acbd:   41 5c                                 	pop r12
0x2acbf:   c9                                    	leave 
0x2acc0:   c3                                    	ret 
; function: nm131_tune at 0x2acc1 -- 0x2add2
0x2acc1:   55                                    	push rbp
0x2acc2:   48 89 e5                              	mov rbp, rsp
0x2acc5:   41 54                                 	push r12
0x2acc7:   53                                    	push rbx
0x2acc8:   48 83 ec 40                           	sub rsp, 0x40
0x2accc:   e8 1f 3f 01 00                        	call 0x3ebf0 <mcount>
0x2acd1:   49 89 fc                              	mov r12, rdi
0x2acd4:   48 89 f3                              	mov rbx, rsi
0x2acd7:   0f b6 07                              	movzx eax, byte ptr [rdi]
0x2acda:   48 63 d0                              	movsxd rdx, eax
0x2acdd:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x2ace4:   8b 92 00 00 00 00                     	mov edx, dword ptr [rdx]
0x2acea:   81 e2 00 ff 0f 00                     	and edx, 0xfff00
0x2acf0:   81 fa 00 31 01 00                     	cmp edx, 0x13100
0x2acf6:   0f 85 f2 00 00 00                     	jne 0x2adee
0x2acfc:   83 7e 10 01                           	cmp dword ptr [rsi + 0x10], 1
0x2ad00:   0f 87 b5 00 00 00                     	ja 0x2adbb <nm131_tune+0xfa>
0x2ad06:   83 7e 0c 0d                           	cmp dword ptr [rsi + 0xc], 0xd ; "NU"
0x2ad0a:   75 0f                                 	jne 0x2ad1b <nm131_tune+0x5a>
0x2ad0c:   ba 00 00 00 00                        	mov edx, 0
0x2ad11:   e8 18 e7 ff ff                        	call 0x2942e <nm131_tune_internal>
0x2ad16:   e9 dd 00 00 00                        	jmp 0x2adf8
0x2ad1b:   80 7e 15 00                           	cmp byte ptr [rsi + 0x15], 0
0x2ad1f:   0f 85 82 00 00 00                     	jne 0x2ada7 <nm131_tune+0xe6>
0x2ad25:   48 8b 06                              	mov rax, qword ptr [rsi]
0x2ad28:   48 89 45 b0                           	mov qword ptr [rbp - 0x50], rax
0x2ad2c:   48 8b 46 08                           	mov rax, qword ptr [rsi + 8]
0x2ad30:   48 89 45 b8                           	mov qword ptr [rbp - 0x48], rax
0x2ad34:   48 8b 46 10                           	mov rax, qword ptr [rsi + 0x10]
0x2ad38:   48 89 45 c0                           	mov qword ptr [rbp - 0x40], rax
0x2ad3c:   48 8b 46 18                           	mov rax, qword ptr [rsi + 0x18]
0x2ad40:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x2ad44:   48 8b 46 20                           	mov rax, qword ptr [rsi + 0x20]
0x2ad48:   48 89 45 d0                           	mov qword ptr [rbp - 0x30], rax
0x2ad4c:   8b 46 28                              	mov eax, dword ptr [rsi + 0x28]
0x2ad4f:   89 45 d8                              	mov dword ptr [rbp - 0x28], eax
0x2ad52:   c7 45 e0 00 00 00 00                  	mov dword ptr [rbp - 0x20], 0
0x2ad59:   c6 45 dc 00                           	mov byte ptr [rbp - 0x24], 0
0x2ad5d:   48 8d 75 b0                           	lea rsi, [rbp - 0x50]
0x2ad61:   e8 74 fa ff ff                        	call 0x2a7da <nm131_scan>
0x2ad66:   80 7d dc 00                           	cmp byte ptr [rbp - 0x24], 0
0x2ad6a:   0f 84 88 00 00 00                     	je 0x2adf8
0x2ad70:   4c 89 e7                              	mov rdi, r12
0x2ad73:   e8 24 c0 ff ff                        	call 0x26d9c <nm131_demod_get_snr>
0x2ad78:   89 c2                                 	mov edx, eax
0x2ad7a:   c1 fa 1f                              	sar edx, 0x1f
0x2ad7d:   89 d1                                 	mov ecx, edx
0x2ad7f:   31 c1                                 	xor ecx, eax
0x2ad81:   29 d1                                 	sub ecx, edx
0x2ad83:   81 f9 30 75 00 00                     	cmp ecx, 0x7530
0x2ad89:   7e 12                                 	jle 0x2ad9d <nm131_tune+0xdc>
0x2ad8b:   01 03                                 	add dword ptr [rbx], eax
0x2ad8d:   ba 00 00 00 00                        	mov edx, 0
0x2ad92:   48 89 de                              	mov rsi, rbx
0x2ad95:   4c 89 e7                              	mov rdi, r12
0x2ad98:   e8 91 e6 ff ff                        	call 0x2942e <nm131_tune_internal>
0x2ad9d:   4c 89 e7                              	mov rdi, r12
0x2ada0:   e8 d6 fd ff ff                        	call 0x2ab7b <nm131_notch_spur>
0x2ada5:   eb 51                                 	jmp 0x2adf8
0x2ada7:   ba 00 00 00 00                        	mov edx, 0
0x2adac:   e8 7d e6 ff ff                        	call 0x2942e <nm131_tune_internal>
0x2adb1:   4c 89 e7                              	mov rdi, r12
0x2adb4:   e8 c2 fd ff ff                        	call 0x2ab7b <nm131_notch_spur>
0x2adb9:   eb 3d                                 	jmp 0x2adf8
0x2adbb:   48 98                                 	cdqe 
0x2adbd:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2adc4:   83 b8 00 00 00 00 01                  	cmp dword ptr [rax], 1
0x2adcb:   77 0f                                 	ja 0x2addc
0x2adcd:   ba 00 00 00 00                        	mov edx, 0
; data inside code section at 0x2add2 -- 0x2add6
0x2add2:   be 00 00 00                                        |....            |
; function: nm131_chip_init at 0x2add6 -- 0x2ae06
0x2add6:   00 e8                                 	add al, ch
0x2add8:   93                                    	xchg eax, ebx
0x2add9:   fc                                    	cld 
; data inside code section at 0x2adda -- 0x2addc
0x2adda:   ff ff                                              |..              |
0x2addc:   ba 00 00 00 00                        	mov edx, 0
0x2ade1:   48 89 de                              	mov rsi, rbx
0x2ade4:   4c 89 e7                              	mov rdi, r12
0x2ade7:   e8 42 e6 ff ff                        	call 0x2942e <nm131_tune_internal>
0x2adec:   eb 0a                                 	jmp 0x2adf8 <nm131_chip_init+0x22>
0x2adee:   ba 00 00 00 00                        	mov edx, 0
0x2adf3:   e8 36 e6 ff ff                        	call 0x2942e <nm131_tune_internal>
0x2adf8:   b8 00 00 00 00                        	mov eax, 0
0x2adfd:   48 83 c4 40                           	add rsp, 0x40
0x2ae01:   5b                                    	pop rbx
0x2ae02:   41 5c                                 	pop r12
0x2ae04:   c9                                    	leave 
0x2ae05:   c3                                    	ret 
; function: nm131_chip_init at 0x2ae06 -- 0x2b2b8
0x2ae06:   55                                    	push rbp
0x2ae07:   48 89 e5                              	mov rbp, rsp
0x2ae0a:   41 57                                 	push r15
0x2ae0c:   41 56                                 	push r14
0x2ae0e:   41 55                                 	push r13
0x2ae10:   41 54                                 	push r12
0x2ae12:   53                                    	push rbx
0x2ae13:   48 83 ec 28                           	sub rsp, 0x28
0x2ae17:   e8 d4 3d 01 00                        	call 0x3ebf0 <mcount>
0x2ae1c:   49 89 fc                              	mov r12, rdi
0x2ae1f:   44 0f b6 3f                           	movzx r15d, byte ptr [rdi]
0x2ae23:   e8 67 cc ff ff                        	call 0x27a8f <nm131_get_chipid>
0x2ae28:   49 63 d7                              	movsxd rdx, r15d
0x2ae2b:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x2ae32:   89 82 00 00 00 00                     	mov dword ptr [rdx], eax
0x2ae38:   89 c2                                 	mov edx, eax
0x2ae3a:   81 e2 00 ff 0f 00                     	and edx, 0xfff00
0x2ae40:   81 fa 00 31 01 00                     	cmp edx, 0x13100
0x2ae46:   74 3e                                 	je 0x2ae86 <nm131_chip_init+0x80>
0x2ae48:   81 fa 00 20 01 00                     	cmp edx, 0x12000
0x2ae4e:   74 36                                 	je 0x2ae86 <nm131_chip_init+0x80>
0x2ae50:   25 00 ff ff 00                        	and eax, 0xffff00
0x2ae55:   3d 00 30 01 00                        	cmp eax, 0x13000
0x2ae5a:   74 2a                                 	je 0x2ae86 <nm131_chip_init+0x80>
0x2ae5c:   3d 00 30 81 00                        	cmp eax, 0x813000
0x2ae61:   74 23                                 	je 0x2ae86 <nm131_chip_init+0x80>
0x2ae63:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2ae6a:   be 02 00 00 00                        	mov esi, 2
0x2ae6f:   4c 89 e7                              	mov rdi, r12
0x2ae72:   b8 00 00 00 00                        	mov eax, 0
0x2ae77:   e8 f3 b2 ff ff                        	call 0x2616f <nmi_debug>
0x2ae7c:   b8 ff ff ff ff                        	mov eax, 0xffffffff
0x2ae81:   e9 db 03 00 00                        	jmp 0x2b261 <nm131_chip_init+0x45b>
0x2ae86:   be 07 00 00 00                        	mov esi, 7
0x2ae8b:   4c 89 e7                              	mov rdi, r12
0x2ae8e:   e8 31 3a ff ff                        	call 0x1e8c4 <nm131_set_scan_level>
0x2ae93:   49 63 c7                              	movsxd rax, r15d
0x2ae96:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2ae9d:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2aea4:   c7 04 10 03 00 00 00                  	mov dword ptr [rax + rdx], 3
0x2aeab:   c7 44 10 04 ff ff ff ff               	mov dword ptr [rax + rdx + 4], 0xffffffff
0x2aeb3:   c6 44 10 08 0f                        	mov byte ptr [rax + rdx + 8], 0xf
0x2aeb8:   c6 80 00 00 00 00 0f                  	mov byte ptr [rax], 0xf
0x2aebf:   c6 44 10 09 0f                        	mov byte ptr [rax + rdx + 9], 0xf
0x2aec4:   c6 44 10 0a 08                        	mov byte ptr [rax + rdx + 0xa], 8
0x2aec9:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x2aed0:   c7 44 08 08 ff ff ff ff               	mov dword ptr [rax + rcx + 8], 0xffffffff
0x2aed8:   c7 44 08 0c ff ff ff ff               	mov dword ptr [rax + rcx + 0xc], 0xffffffff
0x2aee0:   c7 80 00 00 00 00 c2 45 00 00         	mov dword ptr [rax], 0x45c2
0x2aeea:   c6 44 10 0b 87                        	mov byte ptr [rax + rdx + 0xb], 0x87
0x2aeef:   41 0f b6 14 24                        	movzx edx, byte ptr [r12]
0x2aef4:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x2aefb:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x2af02:   69 0c 10 e8 03 00 00                  	imul ecx, dword ptr [rax + rdx], 0x3e8 ; "%("
0x2af09:   89 0c 02                              	mov dword ptr [rdx + rax], ecx
0x2af0c:   41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0x2af11:   48 63 d0                              	movsxd rdx, eax
0x2af14:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x2af1b:   83 ba 00 00 00 00 00                  	cmp dword ptr [rdx], 0
0x2af22:   0f 84 50 01 00 00                     	je 0x2b078 <nm131_chip_init+0x272>
0x2af28:   48 89 d0                              	mov rax, rdx
0x2af2b:   48 8b 92 00 00 00 00                  	mov rdx, qword ptr [rdx]
0x2af32:   48 89 55 c8                           	mov qword ptr [rbp - 0x38], rdx
0x2af36:   44 8b b0 00 00 00 00                  	mov r14d, dword ptr [rax]
0x2af3d:   41 83 fe 3c                           	cmp r14d, 0x3c
0x2af41:   7e 37                                 	jle 0x2af7a <nm131_chip_init+0x174>
0x2af43:   4c 89 e7                              	mov rdi, r12
0x2af46:   e8 6a 32 ff ff                        	call 0x1e1b5 <nmi_get_tick>
0x2af4b:   89 c1                                 	mov ecx, eax
0x2af4d:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2af54:   be 10 00 00 00                        	mov esi, 0x10
0x2af59:   4c 89 e7                              	mov rdi, r12
0x2af5c:   b8 00 00 00 00                        	mov eax, 0
0x2af61:   e8 09 b2 ff ff                        	call 0x2616f <nmi_debug>
0x2af66:   41 be 3c 00 00 00                     	mov r14d, 0x3c
0x2af6c:   4c 8b 6d c8                           	mov r13, qword ptr [rbp - 0x38]
0x2af70:   4c 89 ea                              	mov rdx, r13
0x2af73:   b8 00 00 00 00                        	mov eax, 0
0x2af78:   eb 0a                                 	jmp 0x2af84 <nm131_chip_init+0x17e>
0x2af7a:   45 85 f6                              	test r14d, r14d
0x2af7d:   7f ed                                 	jg 0x2af6c <nm131_chip_init+0x166>
0x2af7f:   e9 ec 02 00 00                        	jmp 0x2b270 <nm131_chip_init+0x46a>
0x2af84:   88 02                                 	mov byte ptr [rdx], al
0x2af86:   83 c0 01                              	add eax, 1
0x2af89:   48 83 c2 01                           	add rdx, 1
0x2af8d:   44 39 f0                              	cmp eax, r14d
0x2af90:   7c f2                                 	jl 0x2af84 <nm131_chip_init+0x17e>
0x2af92:   4c 89 e7                              	mov rdi, r12
0x2af95:   e8 1b 32 ff ff                        	call 0x1e1b5 <nmi_get_tick>
0x2af9a:   89 c1                                 	mov ecx, eax
0x2af9c:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2afa3:   be 10 00 00 00                        	mov esi, 0x10
0x2afa8:   4c 89 e7                              	mov rdi, r12
0x2afab:   b8 00 00 00 00                        	mov eax, 0
0x2afb0:   e8 ba b1 ff ff                        	call 0x2616f <nmi_debug>
0x2afb5:   44 89 f1                              	mov ecx, r14d
0x2afb8:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x2afbc:   be 00 00 00 00                        	mov esi, 0
0x2afc1:   4c 89 e7                              	mov rdi, r12
0x2afc4:   e8 20 cb ff ff                        	call 0x27ae9 <wRegBurst>
0x2afc9:   4c 89 e7                              	mov rdi, r12
0x2afcc:   e8 e4 31 ff ff                        	call 0x1e1b5 <nmi_get_tick>
0x2afd1:   89 c1                                 	mov ecx, eax
0x2afd3:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2afda:   be 10 00 00 00                        	mov esi, 0x10
0x2afdf:   4c 89 e7                              	mov rdi, r12
0x2afe2:   b8 00 00 00 00                        	mov eax, 0
0x2afe7:   e8 83 b1 ff ff                        	call 0x2616f <nmi_debug>
0x2afec:   bb 00 00 00 00                        	mov ebx, 0
0x2aff1:   0f b6 f3                              	movzx esi, bl
0x2aff4:   4c 89 e7                              	mov rdi, r12
0x2aff7:   e8 e8 b5 ff ff                        	call 0x265e4 <rReg8>
0x2affc:   41 88 45 00                           	mov byte ptr [r13], al
0x2b000:   0f b6 c0                              	movzx eax, al
0x2b003:   39 c3                                 	cmp ebx, eax
0x2b005:   75 0e                                 	jne 0x2b015 <nm131_chip_init+0x20f>
0x2b007:   83 c3 01                              	add ebx, 1
0x2b00a:   49 83 c5 01                           	add r13, 1
0x2b00e:   44 39 f3                              	cmp ebx, r14d
0x2b011:   7c de                                 	jl 0x2aff1 <nm131_chip_init+0x1eb>
0x2b013:   eb 40                                 	jmp 0x2b055 <nm131_chip_init+0x24f>
0x2b015:   41 39 de                              	cmp r14d, ebx
0x2b018:   7e 3b                                 	jle 0x2b055 <nm131_chip_init+0x24f>
0x2b01a:   48 63 c3                              	movsxd rax, ebx
0x2b01d:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x2b021:   44 0f b6 2c 02                        	movzx r13d, byte ptr [rdx + rax]
0x2b026:   4c 89 e7                              	mov rdi, r12
0x2b029:   e8 87 31 ff ff                        	call 0x1e1b5 <nmi_get_tick>
0x2b02e:   44 89 2c 24                           	mov dword ptr [rsp], r13d
0x2b032:   41 89 d9                              	mov r9d, ebx
0x2b035:   41 89 d8                              	mov r8d, ebx
0x2b038:   89 c1                                 	mov ecx, eax
0x2b03a:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2b041:   be 10 00 00 00                        	mov esi, 0x10
0x2b046:   4c 89 e7                              	mov rdi, r12
0x2b049:   b8 00 00 00 00                        	mov eax, 0
0x2b04e:   e8 1c b1 ff ff                        	call 0x2616f <nmi_debug>
0x2b053:   eb 23                                 	jmp 0x2b078 <nm131_chip_init+0x272>
0x2b055:   4c 89 e7                              	mov rdi, r12
0x2b058:   e8 58 31 ff ff                        	call 0x1e1b5 <nmi_get_tick>
0x2b05d:   89 c1                                 	mov ecx, eax
0x2b05f:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2b066:   be 10 00 00 00                        	mov esi, 0x10
0x2b06b:   4c 89 e7                              	mov rdi, r12
0x2b06e:   b8 00 00 00 00                        	mov eax, 0
0x2b073:   e8 f7 b0 ff ff                        	call 0x2616f <nmi_debug>
0x2b078:   41 0f b6 14 24                        	movzx edx, byte ptr [r12]
0x2b07d:   48 69 d2 b8 00 00 00                  	imul rdx, rdx, 0xb8
0x2b084:   bb 00 00 00 00                        	mov ebx, 0
0x2b089:   b8 00 00 00 00                        	mov eax, 0
0x2b08e:   80 ba 00 00 00 00 00                  	cmp byte ptr [rdx], 0
0x2b095:   0f 85 c6 01 00 00                     	jne 0x2b261 <nm131_chip_init+0x45b>
0x2b09b:   49 c7 c5 00 00 00 00                  	mov r13, 0
0x2b0a2:   49 c7 c6 00 00 00 00                  	mov r14, 0
0x2b0a9:   42 0f b6 14 2b                        	movzx edx, byte ptr [rbx + r13]
0x2b0ae:   41 0f b6 34 1e                        	movzx esi, byte ptr [r14 + rbx]
0x2b0b3:   4c 89 e7                              	mov rdi, r12
0x2b0b6:   e8 7d b1 ff ff                        	call 0x26238 <wReg8>
0x2b0bb:   48 83 c3 02                           	add rbx, 2
0x2b0bf:   48 83 fb 3c                           	cmp rbx, 0x3c
0x2b0c3:   75 e4                                 	jne 0x2b0a9 <nm131_chip_init+0x2a3>
0x2b0c5:   be 36 00 00 00                        	mov esi, 0x36
0x2b0ca:   4c 89 e7                              	mov rdi, r12
0x2b0cd:   e8 12 b5 ff ff                        	call 0x265e4 <rReg8>
0x2b0d2:   41 0f b6 0c 24                        	movzx ecx, byte ptr [r12]
0x2b0d7:   48 69 c9 b8 00 00 00                  	imul rcx, rcx, 0xb8
0x2b0de:   89 c2                                 	mov edx, eax
0x2b0e0:   83 ca 80                              	or edx, 0xffffff80
0x2b0e3:   83 e0 7f                              	and eax, 0x7f
0x2b0e6:   83 b9 00 00 00 00 00                  	cmp dword ptr [rcx], 0
0x2b0ed:   0f 44 d0                              	cmove edx, eax
0x2b0f0:   0f b6 d2                              	movzx edx, dl
0x2b0f3:   be 36 00 00 00                        	mov esi, 0x36
0x2b0f8:   4c 89 e7                              	mov rdi, r12
0x2b0fb:   e8 38 b1 ff ff                        	call 0x26238 <wReg8>
0x2b100:   8b 15 fe 36 00 00                     	mov edx, dword ptr [rip + 0x36fe]
0x2b106:   0f b7 35 f3 36 00 00                  	movzx esi, word ptr [rip + 0x36f3]
0x2b10d:   4c 89 e7                              	mov rdi, r12
0x2b110:   e8 a1 cb ff ff                        	call 0x27cb6 <wReg32>
0x2b115:   8b 15 f1 36 00 00                     	mov edx, dword ptr [rip + 0x36f1]
0x2b11b:   0f b7 35 e6 36 00 00                  	movzx esi, word ptr [rip + 0x36e6]
0x2b122:   4c 89 e7                              	mov rdi, r12
0x2b125:   e8 8c cb ff ff                        	call 0x27cb6 <wReg32>
0x2b12a:   49 63 c7                              	movsxd rax, r15d
0x2b12d:   48 69 c0 b8 00 00 00                  	imul rax, rax, 0xb8
0x2b134:   8b 80 00 00 00 00                     	mov eax, dword ptr [rax]
0x2b13a:   89 c2                                 	mov edx, eax
0x2b13c:   81 e2 00 ff 0f 00                     	and edx, 0xfff00
0x2b142:   81 fa 00 20 01 00                     	cmp edx, 0x12000
0x2b148:   75 31                                 	jne 0x2b17b <nm131_chip_init+0x375>
0x2b14a:   b3 00                                 	mov bl, 0
0x2b14c:   49 c7 c5 00 00 00 00                  	mov r13, 0
0x2b153:   49 c7 c6 00 00 00 00                  	mov r14, 0
0x2b15a:   42 0f b6 14 2b                        	movzx edx, byte ptr [rbx + r13]
0x2b15f:   41 0f b6 34 1e                        	movzx esi, byte ptr [r14 + rbx]
0x2b164:   4c 89 e7                              	mov rdi, r12
0x2b167:   e8 cc b0 ff ff                        	call 0x26238 <wReg8>
0x2b16c:   48 83 c3 02                           	add rbx, 2
0x2b170:   48 83 fb 12                           	cmp rbx, 0x12
0x2b174:   75 e4                                 	jne 0x2b15a <nm131_chip_init+0x354>
0x2b176:   e9 94 00 00 00                        	jmp 0x2b20f <nm131_chip_init+0x409>
0x2b17b:   25 00 ff ff 00                        	and eax, 0xffff00
0x2b180:   3d 00 30 01 00                        	cmp eax, 0x13000
0x2b185:   75 31                                 	jne 0x2b1b8 <nm131_chip_init+0x3b2>
0x2b187:   bb 00 00 00 00                        	mov ebx, 0
0x2b18c:   49 c7 c5 00 00 00 00                  	mov r13, 0
0x2b193:   49 c7 c6 00 00 00 00                  	mov r14, 0
0x2b19a:   42 0f b6 14 2b                        	movzx edx, byte ptr [rbx + r13]
0x2b19f:   41 0f b6 34 1e                        	movzx esi, byte ptr [r14 + rbx]
0x2b1a4:   4c 89 e7                              	mov rdi, r12
0x2b1a7:   e8 8c b0 ff ff                        	call 0x26238 <wReg8>
0x2b1ac:   48 83 c3 02                           	add rbx, 2
0x2b1b0:   48 83 fb 0e                           	cmp rbx, 0xe
0x2b1b4:   75 e4                                 	jne 0x2b19a <nm131_chip_init+0x394>
0x2b1b6:   eb 57                                 	jmp 0x2b20f <nm131_chip_init+0x409>
0x2b1b8:   3d 00 30 81 00                        	cmp eax, 0x813000
0x2b1bd:   75 44                                 	jne 0x2b203 <nm131_chip_init+0x3fd>
0x2b1bf:   0f b6 15 6b 36 00 00                  	movzx edx, byte ptr [rip + 0x366b]
0x2b1c6:   0f b6 35 63 36 00 00                  	movzx esi, byte ptr [rip + 0x3663]
0x2b1cd:   4c 89 e7                              	mov rdi, r12
0x2b1d0:   e8 63 b0 ff ff                        	call 0x26238 <wReg8>
0x2b1d5:   0f b6 15 57 36 00 00                  	movzx edx, byte ptr [rip + 0x3657]
0x2b1dc:   0f b6 35 4f 36 00 00                  	movzx esi, byte ptr [rip + 0x364f]
0x2b1e3:   4c 89 e7                              	mov rdi, r12
0x2b1e6:   e8 4d b0 ff ff                        	call 0x26238 <wReg8>
0x2b1eb:   0f b6 15 43 36 00 00                  	movzx edx, byte ptr [rip + 0x3643]
0x2b1f2:   0f b6 35 3b 36 00 00                  	movzx esi, byte ptr [rip + 0x363b]
0x2b1f9:   4c 89 e7                              	mov rdi, r12
0x2b1fc:   e8 37 b0 ff ff                        	call 0x26238 <wReg8>
0x2b201:   eb 0c                                 	jmp 0x2b20f <nm131_chip_init+0x409>
0x2b203:   81 fa 00 31 01 00                     	cmp edx, 0x13100
0x2b209:   0f 84 c0 00 00 00                     	je 0x2b2cf
0x2b20f:   49 63 df                              	movsxd rbx, r15d
0x2b212:   49 c7 c5 00 00 00 00                  	mov r13, 0
0x2b219:   48 69 db b8 00 00 00                  	imul rbx, rbx, 0xb8
0x2b220:   42 c6 44 2b 02 00                     	mov byte ptr [rbx + r13 + 2], 0
0x2b226:   be 00 00 00 00                        	mov esi, 0
0x2b22b:   4c 89 e7                              	mov rdi, r12
0x2b22e:   e8 b1 b3 ff ff                        	call 0x265e4 <rReg8>
0x2b233:   42 88 44 2b 03                        	mov byte ptr [rbx + r13 + 3], al
0x2b238:   be 34 00 00 00                        	mov esi, 0x34
0x2b23d:   4c 89 e7                              	mov rdi, r12
0x2b240:   e8 9f b3 ff ff                        	call 0x265e4 <rReg8>
0x2b245:   42 88 44 2b 04                        	mov byte ptr [rbx + r13 + 4], al
0x2b24a:   be 35 00 00 00                        	mov esi, 0x35
0x2b24f:   4c 89 e7                              	mov rdi, r12
0x2b252:   e8 8d b3 ff ff                        	call 0x265e4 <rReg8>
0x2b257:   42 88 44 2b 05                        	mov byte ptr [rbx + r13 + 5], al
0x2b25c:   b8 00 00 00 00                        	mov eax, 0
0x2b261:   48 83 c4 28                           	add rsp, 0x28
0x2b265:   5b                                    	pop rbx
0x2b266:   41 5c                                 	pop r12
0x2b268:   41 5d                                 	pop r13
0x2b26a:   41 5e                                 	pop r14
0x2b26c:   41 5f                                 	pop r15
0x2b26e:   c9                                    	leave 
0x2b26f:   c3                                    	ret 
0x2b270:   4c 89 e7                              	mov rdi, r12
0x2b273:   e8 3d 2f ff ff                        	call 0x1e1b5 <nmi_get_tick>
0x2b278:   89 c1                                 	mov ecx, eax
0x2b27a:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2b281:   be 10 00 00 00                        	mov esi, 0x10
0x2b286:   4c 89 e7                              	mov rdi, r12
0x2b289:   b8 00 00 00 00                        	mov eax, 0
0x2b28e:   e8 dc ae ff ff                        	call 0x2616f <nmi_debug>
0x2b293:   44 89 f1                              	mov ecx, r14d
0x2b296:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x2b29a:   be 00 00 00 00                        	mov esi, 0
0x2b29f:   4c 89 e7                              	mov rdi, r12
0x2b2a2:   e8 42 c8 ff ff                        	call 0x27ae9 <wRegBurst>
0x2b2a7:   4c 89 e7                              	mov rdi, r12
0x2b2aa:   e8 06 2f ff ff                        	call 0x1e1b5 <nmi_get_tick>
0x2b2af:   89 c1                                 	mov ecx, eax
0x2b2b1:   48 c7 c2 00 00 00 00                  	mov rdx, 0
; data inside code section at 0x2b2b8 -- 0x2b2bc
0x2b2b8:   be 10 00 00                                        |....            |
; function: I2C_PortingLayer_Write at 0x2b2bc -- 0x2b2cf
0x2b2bc:   00 4c 89 e7                           	add byte ptr [rcx + rcx*4 - 0x19], cl
0x2b2c0:   b8 00 00 00 00                        	mov eax, 0
0x2b2c5:   e8 a5 ae ff ff                        	call 0x2616f <nmi_debug>
0x2b2ca:   e9 86 fd ff ff                        	jmp 0x2b055
; data inside code section at 0x2b2cf -- 0x2b2e2
0x2b2cf:   0f b6 15 61 35 00 00 0f  b6 35 59 35 00 00 4c 89   |...a5....5Y5..L.|
0x2b2df:   e7 e8 53                                           |..S             |
; function: I2C_PortingLayer_Read at 0x2b2e2 -- 0x2b2e3
0x2b2e2:   af                                    	scasd eax, dword ptr [rdi]
; data inside code section at 0x2b2e3 -- 0x2b2e5
0x2b2e3:   ff ff                                              |..              |
; function: function_2b2e5 at 0x2b2e5 -- 0x2b2ea
0x2b2e5:   e9 25 ff ff ff                        	jmp 0x2b20f
; data inside code section at 0x2b2ea -- 0x2b2ec
0x2b2ea:   90 90                                              |..              |
; function: I2C_PortingLayer_Write at 0x2b2ec -- 0x2b312
0x2b2ec:   55                                    	push rbp
0x2b2ed:   48 89 e5                              	mov rbp, rsp
0x2b2f0:   e8 fb 38 01 00                        	call 0x3ebf0 <mcount>
0x2b2f5:   40 0f b6 f6                           	movzx esi, sil
0x2b2f9:   41 b9 02 00 00 00                     	mov r9d, 2
0x2b2ff:   44 0f b6 c1                           	movzx r8d, cl
0x2b303:   48 89 d1                              	mov rcx, rdx
0x2b306:   ba 00 00 00 00                        	mov edx, 0
0x2b30b:   e8 22 00 fe ff                        	call 0xb332 <TLIB_I2C_Write_Middle>
0x2b310:   c9                                    	leave 
0x2b311:   c3                                    	ret 
; function: I2C_PortingLayer_Read at 0x2b312 -- 0x2b362
0x2b312:   55                                    	push rbp
0x2b313:   48 89 e5                              	mov rbp, rsp
0x2b316:   48 83 ec 30                           	sub rsp, 0x30
0x2b31a:   48 89 5d d8                           	mov qword ptr [rbp - 0x28], rbx
0x2b31e:   4c 89 65 e0                           	mov qword ptr [rbp - 0x20], r12
0x2b322:   4c 89 6d e8                           	mov qword ptr [rbp - 0x18], r13
0x2b326:   4c 89 75 f0                           	mov qword ptr [rbp - 0x10], r14
0x2b32a:   4c 89 7d f8                           	mov qword ptr [rbp - 8], r15
0x2b32e:   e8 bd 38 01 00                        	call 0x3ebf0 <mcount>
0x2b333:   49 89 fc                              	mov r12, rdi
0x2b336:   4d 89 c6                              	mov r14, r8
0x2b339:   45 89 cd                              	mov r13d, r9d
0x2b33c:   40 0f b6 de                           	movzx ebx, sil
0x2b340:   41 b9 03 00 00 00                     	mov r9d, 3
0x2b346:   44 0f b6 c1                           	movzx r8d, cl
0x2b34a:   48 89 d1                              	mov rcx, rdx
0x2b34d:   ba 00 00 00 00                        	mov edx, 0
0x2b352:   89 de                                 	mov esi, ebx
0x2b354:   e8 d9 ff fd ff                        	call 0xb332 <TLIB_I2C_Write_Middle>
0x2b359:   41 89 c7                              	mov r15d, eax
0x2b35c:   41 b9 02 00 00 00                     	mov r9d, 2
; data inside code section at 0x2b362 -- 0x2b364
0x2b362:   45 0f                                              |E.              |
; function: DriverDebugMessage at 0x2b364 -- 0x2b36e
0x2b364:   b6 c5                                 	mov dh, 0xc5
0x2b366:   4c 89 f1                              	mov rcx, r14
0x2b369:   ba 00 00 00 00                        	mov edx, 0
; data inside code section at 0x2b36e -- 0x2b36f
0x2b36e:   89                                                 |.               |
; function: DriverDebugPrint at 0x2b36f -- 0x2b378
0x2b36f:   de 4c 89 e7                           	fimul word ptr [rcx + rcx*4 - 0x19]
0x2b373:   e8 dd ff fd ff                        	call 0xb355 <TLIB_I2C_Read_Middle>
; function: function_2b378 at 0x2b378 -- 0x2b394
0x2b378:   44 21 f8                              	and eax, r15d
0x2b37b:   83 e0 01                              	and eax, 1
0x2b37e:   48 8b 5d d8                           	mov rbx, qword ptr [rbp - 0x28]
0x2b382:   4c 8b 65 e0                           	mov r12, qword ptr [rbp - 0x20]
0x2b386:   4c 8b 6d e8                           	mov r13, qword ptr [rbp - 0x18]
0x2b38a:   4c 8b 75 f0                           	mov r14, qword ptr [rbp - 0x10]
0x2b38e:   4c 8b 7d f8                           	mov r15, qword ptr [rbp - 8]
0x2b392:   c9                                    	leave 
0x2b393:   c3                                    	ret 
; function: DriverDebugMessage at 0x2b394 -- 0x2b39f
0x2b394:   55                                    	push rbp
0x2b395:   48 89 e5                              	mov rbp, rsp
0x2b398:   e8 53 38 01 00                        	call 0x3ebf0 <mcount>
0x2b39d:   c9                                    	leave 
0x2b39e:   c3                                    	ret 
; function: DriverDebugPrint at 0x2b39f -- 0x2b3aa
0x2b39f:   55                                    	push rbp
0x2b3a0:   48 89 e5                              	mov rbp, rsp
0x2b3a3:   e8 48 38 01 00                        	call 0x3ebf0 <mcount>
0x2b3a8:   c9                                    	leave 
0x2b3a9:   c3                                    	ret 
; data inside code section at 0x2b3aa -- 0x2b3ac
0x2b3aa:   90 90                                              |..              |
; section: .exit.text
; function: asv5220_fini at 0x2b3ac -- 0x2b3cf
0x2b3ac:   55                                    	push rbp
0x2b3ad:   48 89 e5                              	mov rbp, rsp
0x2b3b0:   e8 3b 38 01 00                        	call 0x3ebf0 <mcount>
0x2b3b5:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2b3bc:   e8 d7 37 01 00                        	call 0x3eb98 <pci_unregister_driver>
0x2b3c1:   48 8b 3d 78 bb 00 00                  	mov rdi, qword ptr [rip + 0xbb78]
0x2b3c8:   e8 7b 37 01 00                        	call 0x3eb48 <class_destroy>
0x2b3cd:   c9                                    	leave 
0x2b3ce:   c3                                    	ret 
; section: .devexit.text
; function: asv5220_finidev at 0x2b3cf -- 0x2b5e7
0x2b3cf:   55                                    	push rbp
0x2b3d0:   48 89 e5                              	mov rbp, rsp
0x2b3d3:   41 57                                 	push r15
0x2b3d5:   41 56                                 	push r14
0x2b3d7:   41 55                                 	push r13
0x2b3d9:   41 54                                 	push r12
0x2b3db:   53                                    	push rbx
0x2b3dc:   48 83 ec 18                           	sub rsp, 0x18
0x2b3e0:   e8 0b 38 01 00                        	call 0x3ebf0 <mcount>
0x2b3e5:   49 89 fe                              	mov r14, rdi
0x2b3e8:   4c 8d bf 90 00 00 00                  	lea r15, [rdi + 0x90]
0x2b3ef:   4c 89 ff                              	mov rdi, r15
0x2b3f2:   e8 11 37 01 00                        	call 0x3eb08 <dev_get_drvdata>
0x2b3f7:   48 89 c3                              	mov rbx, rax
0x2b3fa:   48 8b b8 18 05 00 00                  	mov rdi, qword ptr [rax + 0x518]
0x2b401:   e8 31 42 fe ff                        	call 0xf637 <DTV_PollingThreadClose>
0x2b406:   48 8b bb 18 05 00 00                  	mov rdi, qword ptr [rbx + 0x518]
0x2b40d:   e8 dd 40 fe ff                        	call 0xf4ef <ASV5220_BcasThreadClose>
0x2b412:   48 8b bb 18 05 00 00                  	mov rdi, qword ptr [rbx + 0x518]
0x2b419:   e8 50 64 fe ff                        	call 0x1186e <DTV_UnInit>
0x2b41e:   48 8b bb 10 05 00 00                  	mov rdi, qword ptr [rbx + 0x510]
0x2b425:   e8 0d 42 fe ff                        	call 0xf637 <DTV_PollingThreadClose>
0x2b42a:   48 8b bb 10 05 00 00                  	mov rdi, qword ptr [rbx + 0x510]
0x2b431:   e8 b9 40 fe ff                        	call 0xf4ef <ASV5220_BcasThreadClose>
0x2b436:   48 8b bb 10 05 00 00                  	mov rdi, qword ptr [rbx + 0x510]
0x2b43d:   e8 2c 64 fe ff                        	call 0x1186e <DTV_UnInit>
0x2b442:   48 8b bb 08 05 00 00                  	mov rdi, qword ptr [rbx + 0x508]
0x2b449:   e8 e9 41 fe ff                        	call 0xf637 <DTV_PollingThreadClose>
0x2b44e:   48 8b bb 08 05 00 00                  	mov rdi, qword ptr [rbx + 0x508]
0x2b455:   e8 95 40 fe ff                        	call 0xf4ef <ASV5220_BcasThreadClose>
0x2b45a:   48 8b bb 08 05 00 00                  	mov rdi, qword ptr [rbx + 0x508]
0x2b461:   e8 08 64 fe ff                        	call 0x1186e <DTV_UnInit>
0x2b466:   48 8b bb 00 05 00 00                  	mov rdi, qword ptr [rbx + 0x500]
0x2b46d:   e8 c5 41 fe ff                        	call 0xf637 <DTV_PollingThreadClose>
0x2b472:   48 8b bb 00 05 00 00                  	mov rdi, qword ptr [rbx + 0x500]
0x2b479:   e8 71 40 fe ff                        	call 0xf4ef <ASV5220_BcasThreadClose>
0x2b47e:   48 8b bb 00 05 00 00                  	mov rdi, qword ptr [rbx + 0x500]
0x2b485:   e8 e4 63 fe ff                        	call 0x1186e <DTV_UnInit>
0x2b48a:   48 8b bb f8 04 00 00                  	mov rdi, qword ptr [rbx + 0x4f8]
0x2b491:   e8 a1 41 fe ff                        	call 0xf637 <DTV_PollingThreadClose>
0x2b496:   48 8b bb f8 04 00 00                  	mov rdi, qword ptr [rbx + 0x4f8]
0x2b49d:   e8 4d 40 fe ff                        	call 0xf4ef <ASV5220_BcasThreadClose>
0x2b4a2:   48 8b bb f8 04 00 00                  	mov rdi, qword ptr [rbx + 0x4f8]
0x2b4a9:   e8 c0 63 fe ff                        	call 0x1186e <DTV_UnInit>
0x2b4ae:   48 8b bb f0 04 00 00                  	mov rdi, qword ptr [rbx + 0x4f0]
0x2b4b5:   e8 7d 41 fe ff                        	call 0xf637 <DTV_PollingThreadClose>
0x2b4ba:   48 8b bb f0 04 00 00                  	mov rdi, qword ptr [rbx + 0x4f0]
0x2b4c1:   e8 29 40 fe ff                        	call 0xf4ef <ASV5220_BcasThreadClose>
0x2b4c6:   48 8b bb f0 04 00 00                  	mov rdi, qword ptr [rbx + 0x4f0]
0x2b4cd:   e8 9c 63 fe ff                        	call 0x1186e <DTV_UnInit>
0x2b4d2:   48 8b bb e8 04 00 00                  	mov rdi, qword ptr [rbx + 0x4e8]
0x2b4d9:   e8 59 41 fe ff                        	call 0xf637 <DTV_PollingThreadClose>
0x2b4de:   48 8b bb e8 04 00 00                  	mov rdi, qword ptr [rbx + 0x4e8]
0x2b4e5:   e8 05 40 fe ff                        	call 0xf4ef <ASV5220_BcasThreadClose>
0x2b4ea:   48 8b bb e8 04 00 00                  	mov rdi, qword ptr [rbx + 0x4e8]
0x2b4f1:   e8 78 63 fe ff                        	call 0x1186e <DTV_UnInit>
0x2b4f6:   48 8b bb e0 04 00 00                  	mov rdi, qword ptr [rbx + 0x4e0]
0x2b4fd:   e8 35 41 fe ff                        	call 0xf637 <DTV_PollingThreadClose>
0x2b502:   48 8b bb e0 04 00 00                  	mov rdi, qword ptr [rbx + 0x4e0]
0x2b509:   e8 e1 3f fe ff                        	call 0xf4ef <ASV5220_BcasThreadClose>
0x2b50e:   48 8b bb e0 04 00 00                  	mov rdi, qword ptr [rbx + 0x4e0]
0x2b515:   e8 54 63 fe ff                        	call 0x1186e <DTV_UnInit>
0x2b51a:   c6 83 d8 53 00 00 01                  	mov byte ptr [rbx + 0x53d8], 1
0x2b521:   48 8b 83 f8 57 00 00                  	mov rax, qword ptr [rbx + 0x57f8]
0x2b528:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x2b52c:   48 63 83 28 63 00 00                  	movsxd rax, dword ptr [rbx + 0x6328]
0x2b533:   48 c7 04 c5 00 00 00 00 00 00 00 00   	mov qword ptr [rax*8], 0
0x2b53f:   41 bd 08 00 00 00                     	mov r13d, 8
0x2b545:   41 bc 00 00 00 00                     	mov r12d, 0
0x2b54b:   49 63 c4                              	movsxd rax, r12d
0x2b54e:   48 6b c0 68                           	imul rax, rax, 0x68
0x2b552:   48 8d bc 03 30 63 00 00               	lea rdi, [rbx + rax + 0x6330]
0x2b55a:   e8 99 37 01 00                        	call 0x3ecf8 <cdev_del>
0x2b55f:   8b 83 20 63 00 00                     	mov eax, dword ptr [rbx + 0x6320]
0x2b565:   89 c6                                 	mov esi, eax
0x2b567:   81 e6 ff ff 0f 00                     	and esi, 0xfffff
0x2b56d:   41 8d 34 34                           	lea esi, [r12 + rsi]
0x2b571:   25 00 00 f0 ff                        	and eax, 0xfff00000
0x2b576:   09 c6                                 	or esi, eax
0x2b578:   48 8b 3d c1 b9 00 00                  	mov rdi, qword ptr [rip + 0xb9c1]
0x2b57f:   e8 1c 37 01 00                        	call 0x3eca0 <device_destroy>
0x2b584:   41 83 c4 01                           	add r12d, 1
0x2b588:   41 83 ed 01                           	sub r13d, 1
0x2b58c:   75 bd                                 	jne 0x2b54b <asv5220_finidev+0x17c>
0x2b58e:   8b bb 20 63 00 00                     	mov edi, dword ptr [rbx + 0x6320]
0x2b594:   8b 35 06 66 00 00                     	mov esi, dword ptr [rip + 0x6606]
0x2b59a:   e8 e1 36 01 00                        	call 0x3ec80 <unregister_chrdev_region>
0x2b59f:   48 89 df                              	mov rdi, rbx
0x2b5a2:   e8 e9 69 fd ff                        	call 0x1f90 <FUSBDTV_Stop>
0x2b5a7:   48 89 df                              	mov rdi, rbx
0x2b5aa:   e8 0d 68 fd ff                        	call 0x1dbc <FUSBDTV_Remove>
0x2b5af:   48 8b 75 c8                           	mov rsi, qword ptr [rbp - 0x38]
0x2b5b3:   4c 89 f7                              	mov rdi, r14
0x2b5b6:   e8 65 36 01 00                        	call 0x3ec20 <pci_iounmap>
0x2b5bb:   4c 89 f7                              	mov rdi, r14
0x2b5be:   e8 cd 36 01 00                        	call 0x3ec90 <pci_release_regions>
0x2b5c3:   be 00 00 00 00                        	mov esi, 0
0x2b5c8:   4c 89 ff                              	mov rdi, r15
0x2b5cb:   e8 00 37 01 00                        	call 0x3ecd0 <dev_set_drvdata>
0x2b5d0:   4c 89 f7                              	mov rdi, r14
0x2b5d3:   e8 e0 36 01 00                        	call 0x3ecb8 <pci_disable_device>
0x2b5d8:   48 83 c4 18                           	add rsp, 0x18
0x2b5dc:   5b                                    	pop rbx
0x2b5dd:   41 5c                                 	pop r12
0x2b5df:   41 5d                                 	pop r13
0x2b5e1:   41 5e                                 	pop r14
0x2b5e3:   41 5f                                 	pop r15
0x2b5e5:   c9                                    	leave 
0x2b5e6:   c3                                    	ret 
; section: .devinit.text
; function: asv5220_initdev at 0x2b5e7 -- 0x2bb6a
0x2b5e7:   55                                    	push rbp
0x2b5e8:   48 89 e5                              	mov rbp, rsp
0x2b5eb:   41 57                                 	push r15
0x2b5ed:   41 56                                 	push r14
0x2b5ef:   41 55                                 	push r13
0x2b5f1:   41 54                                 	push r12
0x2b5f3:   53                                    	push rbx
0x2b5f4:   48 83 ec 28                           	sub rsp, 0x28
0x2b5f8:   e8 f3 35 01 00                        	call 0x3ebf0 <mcount>
0x2b5fd:   49 89 fe                              	mov r14, rdi
0x2b600:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2b607:   b8 00 00 00 00                        	mov eax, 0
0x2b60c:   48 83 3a 00                           	cmp qword ptr [rdx], 0
0x2b610:   75 10                                 	jne 0x2b622 <asv5220_initdev+0x3b>
0x2b612:   48 98                                 	cdqe 
0x2b614:   48 8b 55 c0                           	mov rdx, qword ptr [rbp - 0x40]
0x2b618:   48 89 14 c5 00 00 00 00               	mov qword ptr [rax*8], rdx
0x2b620:   eb 0c                                 	jmp 0x2b62e <asv5220_initdev+0x47>
0x2b622:   83 c0 01                              	add eax, 1
0x2b625:   48 83 c2 08                           	add rdx, 8
0x2b629:   83 f8 08                              	cmp eax, 8
0x2b62c:   75 de                                 	jne 0x2b60c <asv5220_initdev+0x25>
0x2b62e:   4c 89 f7                              	mov rdi, r14
0x2b631:   e8 f2 34 01 00                        	call 0x3eb28 <pci_enable_device>
0x2b636:   41 89 c7                              	mov r15d, eax
0x2b639:   85 c0                                 	test eax, eax
0x2b63b:   0f 85 17 05 00 00                     	jne 0x2bb58 <asv5220_initdev+0x571>
0x2b641:   be ff ff ff ff                        	mov esi, 0xffffffff
0x2b646:   4c 89 f7                              	mov rdi, r14
0x2b649:   e8 ea 35 01 00                        	call 0x3ec38 <pci_set_dma_mask>
0x2b64e:   41 89 c7                              	mov r15d, eax
0x2b651:   85 c0                                 	test eax, eax
0x2b653:   74 13                                 	je 0x2b668 <asv5220_initdev+0x81>
0x2b655:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2b65c:   b0 00                                 	mov al, 0
0x2b65e:   e8 ad 35 01 00                        	call 0x3ec10 <printk>
0x2b663:   e9 e8 04 00 00                        	jmp 0x2bb50 <asv5220_initdev+0x569>
0x2b668:   48 8d 4d ce                           	lea rcx, [rbp - 0x32]
0x2b66c:   41 8b 76 38                           	mov esi, dword ptr [r14 + 0x38]
0x2b670:   49 8b 7e 10                           	mov rdi, qword ptr [r14 + 0x10]
0x2b674:   ba 04 00 00 00                        	mov edx, 4
0x2b679:   e8 32 35 01 00                        	call 0x3ebb0 <pci_bus_read_config_word>
0x2b67e:   f6 45 ce 04                           	test byte ptr [rbp - 0x32], 4
0x2b682:   75 3d                                 	jne 0x2b6c1 <asv5220_initdev+0xda>
0x2b684:   4c 89 f7                              	mov rdi, r14
0x2b687:   e8 bc 35 01 00                        	call 0x3ec48 <pci_set_master>
0x2b68c:   48 8d 4d ce                           	lea rcx, [rbp - 0x32]
0x2b690:   41 8b 76 38                           	mov esi, dword ptr [r14 + 0x38]
0x2b694:   49 8b 7e 10                           	mov rdi, qword ptr [r14 + 0x10]
0x2b698:   ba 04 00 00 00                        	mov edx, 4
0x2b69d:   e8 0e 35 01 00                        	call 0x3ebb0 <pci_bus_read_config_word>
0x2b6a2:   f6 45 ce 04                           	test byte ptr [rbp - 0x32], 4
0x2b6a6:   75 19                                 	jne 0x2b6c1 <asv5220_initdev+0xda>
0x2b6a8:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2b6af:   b0 00                                 	mov al, 0
0x2b6b1:   e8 5a 35 01 00                        	call 0x3ec10 <printk>
0x2b6b6:   41 bf fb ff ff ff                     	mov r15d, 0xfffffffb
0x2b6bc:   e9 8f 04 00 00                        	jmp 0x2bb50 <asv5220_initdev+0x569>
0x2b6c1:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x2b6c8:   4c 89 f7                              	mov rdi, r14
0x2b6cb:   e8 90 34 01 00                        	call 0x3eb60 <pci_request_regions>
0x2b6d0:   85 c0                                 	test eax, eax
0x2b6d2:   79 08                                 	jns 0x2b6dc <asv5220_initdev+0xf5>
0x2b6d4:   41 89 c7                              	mov r15d, eax
0x2b6d7:   e9 74 04 00 00                        	jmp 0x2bb50 <asv5220_initdev+0x569>
0x2b6dc:   ba 00 00 00 00                        	mov edx, 0
0x2b6e1:   be 00 00 00 00                        	mov esi, 0
0x2b6e6:   4c 89 f7                              	mov rdi, r14
0x2b6e9:   e8 42 34 01 00                        	call 0x3eb30 <pci_iomap>
0x2b6ee:   48 89 c3                              	mov rbx, rax
0x2b6f1:   48 85 c0                              	test rax, rax
0x2b6f4:   0f 84 48 04 00 00                     	je 0x2bb42 <asv5220_initdev+0x55b>
0x2b6fa:   48 8d 7d c0                           	lea rdi, [rbp - 0x40]
0x2b6fe:   e8 3d 79 fd ff                        	call 0x3040 <FUSBDTV_Add>
0x2b703:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b707:   4c 89 b0 f0 57 00 00                  	mov qword ptr [rax + 0x57f0], r14
0x2b70e:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b712:   48 89 98 f8 57 00 00                  	mov qword ptr [rax + 0x57f8], rbx
0x2b719:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b71d:   41 8b 96 b4 02 00 00                  	mov edx, dword ptr [r14 + 0x2b4]
0x2b724:   48 89 90 08 58 00 00                  	mov qword ptr [rax + 0x5808], rdx
0x2b72b:   48 8b 7d c0                           	mov rdi, qword ptr [rbp - 0x40]
0x2b72f:   48 81 c7 70 66 00 00                  	add rdi, 0x6670
0x2b736:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2b73d:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x2b744:   e8 cf 34 01 00                        	call 0x3ec18 <__mutex_init>
0x2b749:   48 8b 7d c0                           	mov rdi, qword ptr [rbp - 0x40]
0x2b74d:   48 81 c7 20 63 00 00                  	add rdi, 0x6320
0x2b754:   48 c7 c1 00 00 00 00                  	mov rcx, 0
0x2b75b:   8b 15 3f 64 00 00                     	mov edx, dword ptr [rip + 0x643f]
0x2b761:   8b 35 7d b3 00 00                     	mov esi, dword ptr [rip + 0xb37d]
0x2b767:   e8 84 33 01 00                        	call 0x3eaf0 <alloc_chrdev_region>
0x2b76c:   8b 05 76 b3 00 00                     	mov eax, dword ptr [rip + 0xb376]
0x2b772:   c1 e8 14                              	shr eax, 0x14
0x2b775:   89 05 65 b3 00 00                     	mov dword ptr [rip + 0xb365], eax
0x2b77b:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b77f:   8b 90 20 63 00 00                     	mov edx, dword ptr [rax + 0x6320]
0x2b785:   81 e2 ff ff 0f 00                     	and edx, 0xfffff
0x2b78b:   89 90 24 63 00 00                     	mov dword ptr [rax + 0x6324], edx
0x2b791:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2b798:   b8 00 00 00 00                        	mov eax, 0
0x2b79d:   48 83 3a 00                           	cmp qword ptr [rdx], 0
0x2b7a1:   75 22                                 	jne 0x2b7c5 <asv5220_initdev+0x1de>
0x2b7a3:   48 8b 55 c0                           	mov rdx, qword ptr [rbp - 0x40]
0x2b7a7:   48 63 c8                              	movsxd rcx, eax
0x2b7aa:   48 89 14 cd 00 00 00 00               	mov qword ptr [rcx*8], rdx
0x2b7b2:   89 82 28 63 00 00                     	mov dword ptr [rdx + 0x6328], eax
0x2b7b8:   bb 00 00 00 00                        	mov ebx, 0
0x2b7bd:   41 bd 00 00 00 00                     	mov r13d, 0
0x2b7c3:   eb 10                                 	jmp 0x2b7d5 <asv5220_initdev+0x1ee>
0x2b7c5:   83 c0 01                              	add eax, 1
0x2b7c8:   48 83 c2 08                           	add rdx, 8
0x2b7cc:   3d 80 00 00 00                        	cmp eax, 0x80
0x2b7d1:   75 ca                                 	jne 0x2b79d <asv5220_initdev+0x1b6>
0x2b7d3:   eb e3                                 	jmp 0x2b7b8 <asv5220_initdev+0x1d1>
0x2b7d5:   49 63 d5                              	movsxd rdx, r13d
0x2b7d8:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b7dc:   4c 8b a4 d0 e0 04 00 00               	mov r12, qword ptr [rax + rdx*8 + 0x4e0]
0x2b7e4:   49 8d bc 24 b8 29 09 00               	lea rdi, [r12 + 0x929b8]
0x2b7ec:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2b7f3:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x2b7fa:   e8 19 34 01 00                        	call 0x3ec18 <__mutex_init>
0x2b7ff:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b803:   8b 80 20 63 00 00                     	mov eax, dword ptr [rax + 0x6320]
0x2b809:   25 ff ff 0f 00                        	and eax, 0xfffff
0x2b80e:   41 8d 44 05 00                        	lea eax, [r13 + rax]
0x2b813:   41 89 84 24 dc 29 09 00               	mov dword ptr [r12 + 0x929dc], eax
0x2b81b:   8b 83 00 00 00 00                     	mov eax, dword ptr [rbx]
0x2b821:   41 89 84 24 d8 29 09 00               	mov dword ptr [r12 + 0x929d8], eax
0x2b829:   8b 83 00 00 00 00                     	mov eax, dword ptr [rbx]
0x2b82f:   41 89 84 24 e0 29 09 00               	mov dword ptr [r12 + 0x929e0], eax
0x2b837:   41 83 c5 01                           	add r13d, 1
0x2b83b:   48 83 c3 04                           	add rbx, 4
0x2b83f:   41 83 fd 08                           	cmp r13d, 8
0x2b843:   75 90                                 	jne 0x2b7d5 <asv5220_initdev+0x1ee>
0x2b845:   c7 45 bc 08 00 00 00                  	mov dword ptr [rbp - 0x44], 8
0x2b84c:   bb 00 00 00 00                        	mov ebx, 0
0x2b851:   4c 63 e3                              	movsxd r12, ebx
0x2b854:   4d 6b e4 68                           	imul r12, r12, 0x68
0x2b858:   4d 8d ac 24 30 63 00 00               	lea r13, [r12 + 0x6330]
0x2b860:   4c 89 ef                              	mov rdi, r13
0x2b863:   48 03 7d c0                           	add rdi, qword ptr [rbp - 0x40]
0x2b867:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x2b86e:   e8 75 34 01 00                        	call 0x3ece8 <cdev_init>
0x2b873:   4c 03 65 c0                           	add r12, qword ptr [rbp - 0x40]
0x2b877:   49 c7 84 24 70 63 00 00 00 00 00 00   	mov qword ptr [r12 + 0x6370], 0
0x2b883:   48 8b 7d c0                           	mov rdi, qword ptr [rbp - 0x40]
0x2b887:   8b 87 20 63 00 00                     	mov eax, dword ptr [rdi + 0x6320]
0x2b88d:   89 c6                                 	mov esi, eax
0x2b88f:   81 e6 ff ff 0f 00                     	and esi, 0xfffff
0x2b895:   8d 34 33                              	lea esi, [rbx + rsi]
0x2b898:   25 00 00 f0 ff                        	and eax, 0xfff00000
0x2b89d:   09 c6                                 	or esi, eax
0x2b89f:   4c 01 ef                              	add rdi, r13
0x2b8a2:   ba 01 00 00 00                        	mov edx, 1
0x2b8a7:   e8 14 33 01 00                        	call 0x3ebc0 <cdev_add>
0x2b8ac:   48 8b 4d c0                           	mov rcx, qword ptr [rbp - 0x40]
0x2b8b0:   8b 91 20 63 00 00                     	mov edx, dword ptr [rcx + 0x6320]
0x2b8b6:   89 d0                                 	mov eax, edx
0x2b8b8:   25 ff ff 0f 00                        	and eax, 0xfffff
0x2b8bd:   8d 04 03                              	lea eax, [rbx + rax]
0x2b8c0:   44 8b 89 28 63 00 00                  	mov r9d, dword ptr [rcx + 0x6328]
0x2b8c7:   81 e2 00 00 f0 ff                     	and edx, 0xfff00000
0x2b8cd:   09 c2                                 	or edx, eax
0x2b8cf:   46 8d 0c c8                           	lea r9d, [rax + r9*8]
0x2b8d3:   49 c7 c0 00 00 00 00                  	mov r8, 0
0x2b8da:   b9 00 00 00 00                        	mov ecx, 0
0x2b8df:   be 00 00 00 00                        	mov esi, 0
0x2b8e4:   48 8b 3d 55 b6 00 00                  	mov rdi, qword ptr [rip + 0xb655]
0x2b8eb:   b0 00                                 	mov al, 0
0x2b8ed:   e8 de 32 01 00                        	call 0x3ebd0 <device_create>
0x2b8f2:   83 c3 01                              	add ebx, 1
0x2b8f5:   83 6d bc 01                           	sub dword ptr [rbp - 0x44], 1
0x2b8f9:   0f 85 52 ff ff ff                     	jne 0x2b851 <asv5220_initdev+0x26a>
0x2b8ff:   48 8b 7d c0                           	mov rdi, qword ptr [rbp - 0x40]
0x2b903:   e8 30 60 fd ff                        	call 0x1938 <FUSBDTV_Start>
0x2b908:   49 8d be 90 00 00 00                  	lea rdi, [r14 + 0x90]
0x2b90f:   48 8b 75 c0                           	mov rsi, qword ptr [rbp - 0x40]
0x2b913:   e8 b8 33 01 00                        	call 0x3ecd0 <dev_set_drvdata>
0x2b918:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b91c:   c6 80 d8 53 00 00 00                  	mov byte ptr [rax + 0x53d8], 0
0x2b923:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b927:   c6 80 d9 53 00 00 00                  	mov byte ptr [rax + 0x53d9], 0
0x2b92e:   48 8b 7d c0                           	mov rdi, qword ptr [rbp - 0x40]
0x2b932:   48 8b 8f e0 04 00 00                  	mov rcx, qword ptr [rdi + 0x4e0]
0x2b939:   ba 01 00 00 00                        	mov edx, 1
0x2b93e:   be 00 00 00 00                        	mov esi, 0
0x2b943:   e8 32 b8 fd ff                        	call 0x717a <TC_MOS_POWER>
0x2b948:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b94c:   48 8b b8 e0 04 00 00                  	mov rdi, qword ptr [rax + 0x4e0]
0x2b953:   ba 01 00 00 00                        	mov edx, 1
0x2b958:   be 02 00 00 00                        	mov esi, 2
0x2b95d:   e8 5e 64 fe ff                        	call 0x11dc0 <DTV_Init>
0x2b962:   83 f8 01                              	cmp eax, 1
0x2b965:   75 20                                 	jne 0x2b987 <asv5220_initdev+0x3a0>
0x2b967:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b96b:   48 8b b8 e0 04 00 00                  	mov rdi, qword ptr [rax + 0x4e0]
0x2b972:   e8 9c 3e fe ff                        	call 0xf813 <DTV_PollingThreadInit>
0x2b977:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b97b:   48 8b b8 e0 04 00 00                  	mov rdi, qword ptr [rax + 0x4e0]
0x2b982:   e8 c2 3d fe ff                        	call 0xf749 <ASV5220_BcasThreadInit>
0x2b987:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b98b:   48 8b b8 e8 04 00 00                  	mov rdi, qword ptr [rax + 0x4e8]
0x2b992:   ba 01 00 00 00                        	mov edx, 1
0x2b997:   be 02 00 00 00                        	mov esi, 2
0x2b99c:   e8 1f 64 fe ff                        	call 0x11dc0 <DTV_Init>
0x2b9a1:   83 f8 01                              	cmp eax, 1
0x2b9a4:   75 20                                 	jne 0x2b9c6 <asv5220_initdev+0x3df>
0x2b9a6:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b9aa:   48 8b b8 e8 04 00 00                  	mov rdi, qword ptr [rax + 0x4e8]
0x2b9b1:   e8 5d 3e fe ff                        	call 0xf813 <DTV_PollingThreadInit>
0x2b9b6:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b9ba:   48 8b b8 e8 04 00 00                  	mov rdi, qword ptr [rax + 0x4e8]
0x2b9c1:   e8 83 3d fe ff                        	call 0xf749 <ASV5220_BcasThreadInit>
0x2b9c6:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b9ca:   48 8b b8 f0 04 00 00                  	mov rdi, qword ptr [rax + 0x4f0]
0x2b9d1:   ba 01 00 00 00                        	mov edx, 1
0x2b9d6:   be 02 00 00 00                        	mov esi, 2
0x2b9db:   e8 e0 63 fe ff                        	call 0x11dc0 <DTV_Init>
0x2b9e0:   83 f8 01                              	cmp eax, 1
0x2b9e3:   75 20                                 	jne 0x2ba05 <asv5220_initdev+0x41e>
0x2b9e5:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b9e9:   48 8b b8 f0 04 00 00                  	mov rdi, qword ptr [rax + 0x4f0]
0x2b9f0:   e8 1e 3e fe ff                        	call 0xf813 <DTV_PollingThreadInit>
0x2b9f5:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2b9f9:   48 8b b8 f0 04 00 00                  	mov rdi, qword ptr [rax + 0x4f0]
0x2ba00:   e8 44 3d fe ff                        	call 0xf749 <ASV5220_BcasThreadInit>
0x2ba05:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2ba09:   48 8b b8 f8 04 00 00                  	mov rdi, qword ptr [rax + 0x4f8]
0x2ba10:   ba 01 00 00 00                        	mov edx, 1
0x2ba15:   be 02 00 00 00                        	mov esi, 2
0x2ba1a:   e8 a1 63 fe ff                        	call 0x11dc0 <DTV_Init>
0x2ba1f:   83 f8 01                              	cmp eax, 1
0x2ba22:   75 20                                 	jne 0x2ba44 <asv5220_initdev+0x45d>
0x2ba24:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2ba28:   48 8b b8 f8 04 00 00                  	mov rdi, qword ptr [rax + 0x4f8]
0x2ba2f:   e8 df 3d fe ff                        	call 0xf813 <DTV_PollingThreadInit>
0x2ba34:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2ba38:   48 8b b8 f8 04 00 00                  	mov rdi, qword ptr [rax + 0x4f8]
0x2ba3f:   e8 05 3d fe ff                        	call 0xf749 <ASV5220_BcasThreadInit>
0x2ba44:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2ba48:   48 8b b8 00 05 00 00                  	mov rdi, qword ptr [rax + 0x500]
0x2ba4f:   ba 01 00 00 00                        	mov edx, 1
0x2ba54:   be 02 00 00 00                        	mov esi, 2
0x2ba59:   e8 62 63 fe ff                        	call 0x11dc0 <DTV_Init>
0x2ba5e:   83 f8 01                              	cmp eax, 1
0x2ba61:   75 20                                 	jne 0x2ba83 <asv5220_initdev+0x49c>
0x2ba63:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2ba67:   48 8b b8 00 05 00 00                  	mov rdi, qword ptr [rax + 0x500]
0x2ba6e:   e8 a0 3d fe ff                        	call 0xf813 <DTV_PollingThreadInit>
0x2ba73:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2ba77:   48 8b b8 00 05 00 00                  	mov rdi, qword ptr [rax + 0x500]
0x2ba7e:   e8 c6 3c fe ff                        	call 0xf749 <ASV5220_BcasThreadInit>
0x2ba83:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2ba87:   48 8b b8 08 05 00 00                  	mov rdi, qword ptr [rax + 0x508]
0x2ba8e:   ba 01 00 00 00                        	mov edx, 1
0x2ba93:   be 02 00 00 00                        	mov esi, 2
0x2ba98:   e8 23 63 fe ff                        	call 0x11dc0 <DTV_Init>
0x2ba9d:   83 f8 01                              	cmp eax, 1
0x2baa0:   75 20                                 	jne 0x2bac2 <asv5220_initdev+0x4db>
0x2baa2:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2baa6:   48 8b b8 08 05 00 00                  	mov rdi, qword ptr [rax + 0x508]
0x2baad:   e8 61 3d fe ff                        	call 0xf813 <DTV_PollingThreadInit>
0x2bab2:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2bab6:   48 8b b8 08 05 00 00                  	mov rdi, qword ptr [rax + 0x508]
0x2babd:   e8 87 3c fe ff                        	call 0xf749 <ASV5220_BcasThreadInit>
0x2bac2:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2bac6:   48 8b b8 10 05 00 00                  	mov rdi, qword ptr [rax + 0x510]
0x2bacd:   ba 01 00 00 00                        	mov edx, 1
0x2bad2:   be 02 00 00 00                        	mov esi, 2
0x2bad7:   e8 e4 62 fe ff                        	call 0x11dc0 <DTV_Init>
0x2badc:   83 f8 01                              	cmp eax, 1
0x2badf:   75 20                                 	jne 0x2bb01 <asv5220_initdev+0x51a>
0x2bae1:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2bae5:   48 8b b8 10 05 00 00                  	mov rdi, qword ptr [rax + 0x510]
0x2baec:   e8 22 3d fe ff                        	call 0xf813 <DTV_PollingThreadInit>
0x2baf1:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2baf5:   48 8b b8 10 05 00 00                  	mov rdi, qword ptr [rax + 0x510]
0x2bafc:   e8 48 3c fe ff                        	call 0xf749 <ASV5220_BcasThreadInit>
0x2bb01:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2bb05:   48 8b b8 18 05 00 00                  	mov rdi, qword ptr [rax + 0x518]
0x2bb0c:   ba 01 00 00 00                        	mov edx, 1
0x2bb11:   be 02 00 00 00                        	mov esi, 2
0x2bb16:   e8 a5 62 fe ff                        	call 0x11dc0 <DTV_Init>
0x2bb1b:   83 f8 01                              	cmp eax, 1
0x2bb1e:   75 38                                 	jne 0x2bb58 <asv5220_initdev+0x571>
0x2bb20:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2bb24:   48 8b b8 18 05 00 00                  	mov rdi, qword ptr [rax + 0x518]
0x2bb2b:   e8 e3 3c fe ff                        	call 0xf813 <DTV_PollingThreadInit>
0x2bb30:   48 8b 45 c0                           	mov rax, qword ptr [rbp - 0x40]
0x2bb34:   48 8b b8 18 05 00 00                  	mov rdi, qword ptr [rax + 0x518]
0x2bb3b:   e8 09 3c fe ff                        	call 0xf749 <ASV5220_BcasThreadInit>
0x2bb40:   eb 16                                 	jmp 0x2bb58 <asv5220_initdev+0x571>
0x2bb42:   4c 89 f7                              	mov rdi, r14
0x2bb45:   e8 46 31 01 00                        	call 0x3ec90 <pci_release_regions>
0x2bb4a:   41 bf fb ff ff ff                     	mov r15d, 0xfffffffb
0x2bb50:   4c 89 f7                              	mov rdi, r14
0x2bb53:   e8 60 31 01 00                        	call 0x3ecb8 <pci_disable_device>
0x2bb58:   44 89 f8                              	mov eax, r15d
0x2bb5b:   48 83 c4 28                           	add rsp, 0x28
0x2bb5f:   5b                                    	pop rbx
0x2bb60:   41 5c                                 	pop r12
0x2bb62:   41 5d                                 	pop r13
0x2bb64:   41 5e                                 	pop r14
0x2bb66:   41 5f                                 	pop r15
0x2bb68:   c9                                    	leave 
0x2bb69:   c3                                    	ret 
; section: .init.text
; function: init_module at 0x2bb6a -- 0x2bbd5
0x2bb6a:   55                                    	push rbp
0x2bb6b:   48 89 e5                              	mov rbp, rsp
0x2bb6e:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2bb75:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x2bb7c:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2bb83:   e8 98 2f 01 00                        	call 0x3eb20 <__class_create>
0x2bb88:   48 89 c1                              	mov rcx, rax
0x2bb8b:   48 89 05 ae b3 00 00                  	mov qword ptr [rip + 0xb3ae], rax
0x2bb92:   ba 00 00 00 00                        	mov edx, 0
0x2bb97:   48 81 f9 00 f0 ff ff                  	cmp rcx, -0x1000
0x2bb9e:   77 33                                 	ja 0x2bbd3 <init_module+0x69>
0x2bba0:   48 c7 c0 00 00 00 00                  	mov rax, 0
0x2bba7:   48 c7 04 10 00 00 00 00               	mov qword ptr [rax + rdx], 0
0x2bbaf:   48 83 c2 08                           	add rdx, 8
0x2bbb3:   48 83 fa 40                           	cmp rdx, 0x40
0x2bbb7:   75 ee                                 	jne 0x2bba7 <init_module+0x3d>
0x2bbb9:   48 c7 c2 00 00 00 00                  	mov rdx, 0
0x2bbc0:   48 c7 c6 00 00 00 00                  	mov rsi, 0
0x2bbc7:   48 c7 c7 00 00 00 00                  	mov rdi, 0
0x2bbce:   e8 7d 2f 01 00                        	call 0x3eb50 <__pci_register_driver>
0x2bbd3:   c9                                    	leave 
0x2bbd4:   c3                                    	ret 

;;
;; Data Segment
;;

; section: .rodata
0x2bbe0:   76 69 64 5f 6c 69 6d 69  74 00 69 72 71 5f 64 65   |vid_limit.irq_de|
0x2bbf0:   62 75 67 00 00 00 00 00  00 00 00 00 00 00 00 00   |bug.............|
0x2bc00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bc10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bc20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bc30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bc40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bc50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bc60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bc70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bc80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bc90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bca0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bcb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bcc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bcd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bce0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bcf0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bd00:   2e 0e 6b 04 00 00 00 00  ed 47 63 ae 00 00 00 00   |..k......Gc.....|
0x2bd10:   8a 69 ae b5 00 00 00 00  87 05 85 a8 00 00 00 00   |.i..............|
0x2bd20:   2e 0a 6b 04 00 00 00 00  ed 43 62 ae 00 00 00 00   |..k......Cb.....|
0x2bd30:   92 69 af b5 00 00 00 00  87 01 85 a9 00 00 00 00   |.i..............|
0x2bd40:   36 0e 6a 05 00 00 00 00  f5 43 62 af 00 00 00 00   |6.j......Cb.....|
0x2bd50:   96 6d ae b4 00 00 00 00  8b 05 84 a9 00 00 00 00   |.m..............|
0x2bd60:   36 0e 6a 04 00 00 00 00  f5 47 62 af 00 00 00 00   |6.j......Gb.....|
0x2bd70:   96 69 af b4 00 00 00 00  93 01 84 a9 00 00 00 00   |.i..............|
0x2bd80:   3a 0e 6a 05 00 00 00 00  fd 43 63 af 00 00 00 00   |:.j......Cc.....|
0x2bd90:   9a 6d af b4 00 00 00 00  93 05 85 a9 00 00 00 00   |.m..............|
0x2bda0:   42 0e 6b 05 00 00 00 00  01 48 62 af 00 00 00 00   |B.k......Hb.....|
0x2bdb0:   9e 69 ae b4 00 00 00 00  9b 05 84 a8 00 00 00 00   |.i..............|
0x2bdc0:   42 0a 6b 05 00 00 00 00  01 48 63 af 00 00 00 00   |B.k......Hc.....|
0x2bdd0:   a6 69 af b4 00 00 00 00  9f 01 85 a9 00 00 00 00   |.i..............|
0x2bde0:   4a 0a 6a 05 00 00 00 00  05 44 63 ae 00 00 00 00   |J.j......Dc.....|
0x2bdf0:   aa 6d ae b5 00 00 00 00  9f 01 84 a8 00 00 00 00   |.m..............|
0x2be00:   4e 0a 6b 05 00 00 00 00  09 44 62 af 00 00 00 00   |N.k......Db.....|
0x2be10:   ae 69 af b5 00 00 00 00  a3 01 85 a8 00 00 00 00   |.i..............|
0x2be20:   52 0e 6b 04 00 00 00 00  11 48 63 af 00 00 00 00   |R.k......Hc.....|
0x2be30:   ae 69 af b4 00 00 00 00  a7 05 84 a9 00 00 00 00   |.i..............|
0x2be40:   52 0a 6b 04 00 00 00 00  15 48 62 ae 00 00 00 00   |R.k......Hb.....|
0x2be50:   b2 6d ae b5 00 00 00 00  af 01 84 a8 00 00 00 00   |.m..............|
0x2be60:   5a 0e 6a 05 00 00 00 00  15 48 63 ae 00 00 00 00   |Z.j......Hc.....|
0x2be70:   ba 6d af b4 00 00 00 00  b3 05 85 a9 00 00 00 00   |.m..............|
0x2be80:   5a 0e 6b 04 00 00 00 00  19 48 62 ae 00 00 00 00   |Z.k......Hb.....|
0x2be90:   ba 69 ae b4 00 00 00 00  b7 05 84 a8 00 00 00 00   |.i..............|
0x2bea0:   5e 0a 6a 04 00 00 00 00  1d 44 63 ae 00 00 00 00   |^.j......Dc.....|
0x2beb0:   c2 6d ae b5 00 00 00 00  b7 05 85 a8 00 00 00 00   |.m..............|
0x2bec0:   62 0e 6a 05 00 00 00 00  25 44 63 af 00 00 00 00   |b.j.....%Dc.....|
0x2bed0:   c2 6d af b4 00 00 00 00  bb 01 84 a9 00 00 00 00   |.m..............|
0x2bee0:   66 0a 6b 05 00 00 00 00  29 44 62 ae 00 00 00 00   |f.k.....)Db.....|
0x2bef0:   c6 69 af b5 00 00 00 00  c3 01 85 a8 00 00 00 00   |.i..............|
0x2bf00:   50 15 37 d1 00 00 00 00  92 c9 b4 90 00 00 00 00   |P.7.............|
0x2bf10:   1a 42 d1 81 00 00 00 00  76 ab ac ec 00 00 00 00   |.B......v.......|
0x2bf20:   74 95 37 51 00 00 00 00  b6 49 b4 10 00 00 00 00   |t.7Q.....I......|
0x2bf30:   3e c2 c1 01 00 00 00 00  7a ab bc 6c 00 00 00 00   |>.......z..l....|
0x2bf40:   58 95 27 d1 00 00 00 00  ba c9 a4 90 00 00 00 00   |X.'.............|
0x2bf50:   22 42 c1 01 00 00 00 00  5e 2b bc 6c 00 00 00 00   |"B......^+.l....|
0x2bf60:   7c 15 27 d1 00 00 00 00  9e 49 a4 10 00 00 00 00   ||.'......I......|
0x2bf70:   46 c2 d1 81 00 00 00 00  82 2b ac 6c 00 00 00 00   |F........+.l....|
0x2bf80:   80 15 37 51 00 00 00 00  c2 49 a4 10 00 00 00 00   |..7Q.....I......|
0x2bf90:   4a 42 d1 01 00 00 00 00  66 2b bc ec 00 00 00 00   |JB......f+......|
0x2bfa0:   84 95 27 d1 00 00 00 00  a6 c9 b4 10 00 00 00 00   |..'.............|
0x2bfb0:   4e 42 c1 81 00 00 00 00  6a 2b ac 6c 00 00 00 00   |NB......j+.l....|
0x2bfc0:   68 95 37 51 00 00 00 00  ca 49 b4 90 00 00 00 00   |h.7Q.....I......|
0x2bfd0:   32 c2 d1 81 00 00 00 00  6e ab ac ec 00 00 00 00   |2.......n.......|
0x2bfe0:   6c 15 27 51 00 00 00 00  ae c9 a4 90 00 00 00 00   |l.'Q............|
0x2bff0:   36 c2 c1 01 00 00 00 00  92 ab bc ec 00 00 00 00   |6...............|
0x2c000:   90 95 27 51 00 00 00 00  d2 c9 a4 10 00 00 00 00   |..'Q............|
0x2c010:   5a c2 c1 01 00 00 00 00  76 2b ac ec 00 00 00 00   |Z.......v+......|
0x2c020:   74 15 27 d1 00 00 00 00  b6 49 a4 90 00 00 00 00   |t.'......I......|
0x2c030:   3e 42 c1 01 00 00 00 00  7a ab bc ec 00 00 00 00   |>B......z.......|
0x2c040:   98 95 37 d1 00 00 00 00  ba c9 b4 90 00 00 00 00   |..7.............|
0x2c050:   62 c2 d1 81 00 00 00 00  9e ab ac 6c 00 00 00 00   |b..........l....|
0x2c060:   7c 15 37 51 00 00 00 00  de 49 b4 10 00 00 00 00   ||.7Q.....I......|
0x2c070:   46 42 d1 81 00 00 00 00  82 2b bc 6c 00 00 00 00   |FB.......+.l....|
0x2c080:   80 15 27 51 00 00 00 00  c2 c9 a4 90 00 00 00 00   |..'Q............|
0x2c090:   4a c2 c1 81 00 00 00 00  a6 2b bc 6c 00 00 00 00   |J........+.l....|
0x2c0a0:   84 95 37 51 00 00 00 00  e6 c9 b4 90 00 00 00 00   |..7Q............|
0x2c0b0:   6e c2 d1 01 00 00 00 00  aa 2b ac ec 00 00 00 00   |n........+......|
0x2c0c0:   a8 15 37 51 00 00 00 00  ca 49 b4 10 00 00 00 00   |..7Q.....I......|
0x2c0d0:   52 42 d1 01 00 00 00 00  ae ab bc ec 00 00 00 00   |RB..............|
0x2c0e0:   ac 95 27 d1 00 00 00 00  ee 49 a4 90 00 00 00 00   |..'......I......|
0x2c0f0:   76 42 c1 01 00 00 00 00  92 ab ac ec 00 00 00 00   |vB..............|
0x2c100:   91 19 4a 5b 00 00 00 00  5a 40 1a 91 00 00 00 00   |..J[....Z@......|
0x2c110:   23 50 8c 97 00 00 00 00  b6 e8 9d 01 00 00 00 00   |#P..............|
0x2c120:   9d 19 4a 53 00 00 00 00  5e 42 18 99 00 00 00 00   |..JS....^B......|
0x2c130:   2f 52 8e 97 00 00 00 00  c2 ea 9f 01 00 00 00 00   |/R..............|
0x2c140:   99 1b 48 5b 00 00 00 00  5a 42 18 91 00 00 00 00   |..H[....ZB......|
0x2c150:   33 50 8c 9f 00 00 00 00  c6 e8 9d 09 00 00 00 00   |3P..............|
0x2c160:   9d 19 48 53 00 00 00 00  5e 42 1a 99 00 00 00 00   |..HS....^B......|
0x2c170:   2f 50 8e 9f 00 00 00 00  c2 ea 9f 09 00 00 00 00   |/P..............|
0x2c180:   a9 1b 4a 53 00 00 00 00  62 42 18 99 00 00 00 00   |..JS....bB......|
0x2c190:   33 52 8e 9f 00 00 00 00  ce ea 9f 09 00 00 00 00   |3R..............|
0x2c1a0:   ad 19 48 5b 00 00 00 00  6e 42 1a 91 00 00 00 00   |..H[....nB......|
0x2c1b0:   3f 50 8e 9f 00 00 00 00  ca ea 9d 09 00 00 00 00   |?P..............|
0x2c1c0:   a9 19 4a 53 00 00 00 00  72 40 1a 99 00 00 00 00   |..JS....r@......|
0x2c1d0:   3b 50 8e 97 00 00 00 00  ce ea 9f 01 00 00 00 00   |;P..............|
0x2c1e0:   ad 1b 4a 5b 00 00 00 00  6e 40 1a 91 00 00 00 00   |..J[....n@......|
0x2c1f0:   3f 52 8c 97 00 00 00 00  da e8 9f 01 00 00 00 00   |?R..............|
0x2c200:   b9 19 48 53 00 00 00 00  7a 42 18 91 00 00 00 00   |..HS....zB......|
0x2c210:   4b 50 8e 97 00 00 00 00  d6 ea 9f 09 00 00 00 00   |KP..............|
0x2c220:   bd 1b 48 5b 00 00 00 00  7e 40 1a 91 00 00 00 00   |..H[....~@......|
0x2c230:   47 52 8c 9f 00 00 00 00  e2 e8 9f 09 00 00 00 00   |GR..............|
0x2c240:   c1 19 4a 5b 00 00 00 00  7a 42 1a 99 00 00 00 00   |..J[....zB......|
0x2c250:   53 52 8e 9f 00 00 00 00  e6 ea 9f 01 00 00 00 00   |SR..............|
0x2c260:   bd 1b 4a 53 00 00 00 00  86 40 18 99 00 00 00 00   |..JS.....@......|
0x2c270:   4f 50 8c 97 00 00 00 00  e2 e8 9d 01 00 00 00 00   |OP..............|
0x2c280:   c1 19 4a 53 00 00 00 00  8a 42 1a 99 00 00 00 00   |..JS.....B......|
0x2c290:   53 50 8c 9f 00 00 00 00  e6 ea 9d 01 00 00 00 00   |SP..............|
0x2c2a0:   c5 1b 4a 5b 00 00 00 00  86 40 1a 99 00 00 00 00   |..J[.....@......|
0x2c2b0:   57 52 8e 97 00 00 00 00  ea e8 9f 01 00 00 00 00   |WR..............|
0x2c2c0:   d1 1b 48 53 00 00 00 00  8a 40 18 91 00 00 00 00   |..HS.....@......|
0x2c2d0:   63 52 8c 97 00 00 00 00  f6 e8 9d 01 00 00 00 00   |cR..............|
0x2c2e0:   cd 19 48 5b 00 00 00 00  8e 42 18 99 00 00 00 00   |..H[.....B......|
0x2c2f0:   67 50 8e 9f 00 00 00 00  fa ea 9d 09 00 00 00 00   |gP..............|
0x2c300:   33 82 f1 7d 00 00 00 00  34 62 74 e0 00 00 00 00   |3..}....4bt.....|
0x2c310:   f3 fe 2e 94 00 00 00 00  49 d7 7b 2d 00 00 00 00   |........I.{-....|
0x2c320:   b6 82 f1 7d 00 00 00 00  38 42 f4 e0 00 00 00 00   |...}....8B......|
0x2c330:   77 de ae 94 00 00 00 00  cc f7 7b 2d 00 00 00 00   |w.........{-....|
0x2c340:   3a a2 71 7d 00 00 00 00  bd 62 f4 e0 00 00 00 00   |:.q}.....b......|
0x2c350:   7a fe ae 94 00 00 00 00  50 f7 fb 2d 00 00 00 00   |z.......P..-....|
0x2c360:   bf a2 71 7d 00 00 00 00  c1 42 74 e0 00 00 00 00   |..q}.....Bt.....|
0x2c370:   fe de ae 94 00 00 00 00  d4 d7 fb 2d 00 00 00 00   |...........-....|
0x2c380:   43 a2 71 7d 00 00 00 00  c5 62 74 e0 00 00 00 00   |C.q}.....bt.....|
0x2c390:   82 de ae 94 00 00 00 00  d8 f7 fb 2d 00 00 00 00   |...........-....|
0x2c3a0:   c6 a2 71 7d 00 00 00 00  c9 42 f4 e0 00 00 00 00   |..q}.....B......|
0x2c3b0:   87 fe 2e 94 00 00 00 00  5d f7 7b 2d 00 00 00 00   |........].{-....|
0x2c3c0:   cb a2 f1 7d 00 00 00 00  cc 42 74 e0 00 00 00 00   |...}.....Bt.....|
0x2c3d0:   0a ff 2e 94 00 00 00 00  61 d7 fb 2d 00 00 00 00   |........a..-....|
0x2c3e0:   4e 82 71 7d 00 00 00 00  51 62 f4 e0 00 00 00 00   |N.q}....Qb......|
0x2c3f0:   0f ff ae 94 00 00 00 00  64 d7 7b 2d 00 00 00 00   |........d.{-....|
0x2c400:   d2 a2 f1 7d 00 00 00 00  d4 42 f4 e0 00 00 00 00   |...}.....B......|
0x2c410:   92 fe ae 94 00 00 00 00  68 f7 fb 2d 00 00 00 00   |........h..-....|
0x2c420:   d7 a2 71 7d 00 00 00 00  d9 42 74 e0 00 00 00 00   |..q}.....Bt.....|
0x2c430:   96 de 2e 94 00 00 00 00  ed f7 fb 2d 00 00 00 00   |...........-....|
0x2c440:   da 82 71 7d 00 00 00 00  5d 42 f4 e0 00 00 00 00   |..q}....]B......|
0x2c450:   1b df ae 94 00 00 00 00  f0 d7 7b 2d 00 00 00 00   |..........{-....|
0x2c460:   5f 82 f1 7d 00 00 00 00  60 62 74 e0 00 00 00 00   |_..}....`bt.....|
0x2c470:   1f ff 2e 94 00 00 00 00  75 d7 7b 2d 00 00 00 00   |........u.{-....|
0x2c480:   e3 82 f1 7d 00 00 00 00  64 42 74 e0 00 00 00 00   |...}....dBt.....|
0x2c490:   a3 de 2e 94 00 00 00 00  f9 f7 7b 2d 00 00 00 00   |..........{-....|
0x2c4a0:   67 a2 f1 7d 00 00 00 00  e8 62 74 e0 00 00 00 00   |g..}.....bt.....|
0x2c4b0:   26 ff ae 94 00 00 00 00  7c d7 fb 2d 00 00 00 00   |&.......|..-....|
0x2c4c0:   6b 82 71 7d 00 00 00 00  6d 62 74 e0 00 00 00 00   |k.q}....mbt.....|
0x2c4d0:   aa de ae 94 00 00 00 00  00 f8 fb 2d 00 00 00 00   |...........-....|
0x2c4e0:   ee a2 71 7d 00 00 00 00  f1 42 f4 e0 00 00 00 00   |..q}.....B......|
0x2c4f0:   ae fe 2e 94 00 00 00 00  85 f7 fb 2d 00 00 00 00   |...........-....|
0x2c500:   53 85 32 18 00 00 00 00  3f 48 de b1 00 00 00 00   |S.2.....?H......|
0x2c510:   f3 62 08 bc 00 00 00 00  cd 2d 78 2b 00 00 00 00   |.b.......-x+....|
0x2c520:   57 84 3a 18 00 00 00 00  43 48 d6 b3 00 00 00 00   |W.:.....CH......|
0x2c530:   f7 62 00 fe 00 00 00 00  d1 2c 70 6b 00 00 00 00   |.b.......,pk....|
0x2c540:   5b 85 3a 58 00 00 00 00  47 49 de b3 00 00 00 00   |[.:X....GI......|
0x2c550:   fb 63 00 bc 00 00 00 00  d5 2d 70 29 00 00 00 00   |.c.......-p)....|
0x2c560:   5f 85 32 5a 00 00 00 00  4b 49 de f1 00 00 00 00   |_.2Z....KI......|
0x2c570:   ff 63 08 be 00 00 00 00  d9 2c 78 29 00 00 00 00   |.c.......,x)....|
0x2c580:   63 84 32 1a 00 00 00 00  4f 49 de f3 00 00 00 00   |c.2.....OI......|
0x2c590:   03 63 08 fe 00 00 00 00  dd 2c 78 69 00 00 00 00   |.c.......,xi....|
0x2c5a0:   67 85 32 58 00 00 00 00  53 48 de f1 00 00 00 00   |g.2X....SH......|
0x2c5b0:   07 64 08 fc 00 00 00 00  e1 2d 78 6b 00 00 00 00   |.d.......-xk....|
0x2c5c0:   6b 84 3a 5a 00 00 00 00  57 48 d6 f3 00 00 00 00   |k.:Z....WH......|
0x2c5d0:   0b 63 00 be 00 00 00 00  e5 2c 78 2b 00 00 00 00   |.c.......,x+....|
0x2c5e0:   6f 85 3a 1a 00 00 00 00  5b 49 d6 b1 00 00 00 00   |o.:.....[I......|
0x2c5f0:   0f 63 00 fc 00 00 00 00  e9 2d 70 69 00 00 00 00   |.c.......-pi....|
0x2c600:   73 84 3a 18 00 00 00 00  5f 48 d6 f1 00 00 00 00   |s.:....._H......|
0x2c610:   13 64 00 be 00 00 00 00  ed 2c 78 6b 00 00 00 00   |.d.......,xk....|
0x2c620:   77 84 32 58 00 00 00 00  63 49 de b1 00 00 00 00   |w.2X....cI......|
0x2c630:   17 64 00 fc 00 00 00 00  f1 2d 70 29 00 00 00 00   |.d.......-p)....|
0x2c640:   7b 85 32 1a 00 00 00 00  67 49 d6 f3 00 00 00 00   |{.2.....gI......|
0x2c650:   1b 63 08 fc 00 00 00 00  f5 2d 70 6b 00 00 00 00   |.c.......-pk....|
0x2c660:   7f 85 3a 58 00 00 00 00  6b 48 d6 b3 00 00 00 00   |..:X....kH......|
0x2c670:   1f 63 00 bc 00 00 00 00  f9 2c 70 2b 00 00 00 00   |.c.......,p+....|
0x2c680:   83 85 3a 5a 00 00 00 00  6f 48 de b3 00 00 00 00   |..:Z....oH......|
0x2c690:   23 63 00 fc 00 00 00 00  fd 2d 70 2b 00 00 00 00   |#c.......-p+....|
0x2c6a0:   87 84 3a 1a 00 00 00 00  73 49 d6 b3 00 00 00 00   |..:.....sI......|
0x2c6b0:   27 63 08 fe 00 00 00 00  01 2d 78 2b 00 00 00 00   |'c.......-x+....|
0x2c6c0:   8b 85 3a 18 00 00 00 00  77 48 d6 b1 00 00 00 00   |..:.....wH......|
0x2c6d0:   2b 64 00 fe 00 00 00 00  05 2d 70 69 00 00 00 00   |+d.......-pi....|
0x2c6e0:   8f 84 32 18 00 00 00 00  7b 49 de f3 00 00 00 00   |..2.....{I......|
0x2c6f0:   2f 64 08 bc 00 00 00 00  09 2e 78 29 00 00 00 00   |/d........x)....|
0x2c700:   51 06 f8 cd 00 00 00 00  9f 45 9b 9b 00 00 00 00   |Q........E......|
0x2c710:   dd 30 9b bc 00 00 00 00  f2 f3 9b 33 00 00 00 00   |.0.........3....|
0x2c720:   45 06 b8 cd 00 00 00 00  93 45 db bb 00 00 00 00   |E........E......|
0x2c730:   d1 30 db 9c 00 00 00 00  e6 b3 9b 13 00 00 00 00   |.0..............|
0x2c740:   49 46 f8 cd 00 00 00 00  97 05 9b bb 00 00 00 00   |IF..............|
0x2c750:   e5 70 db bc 00 00 00 00  fa b3 db 33 00 00 00 00   |.p.........3....|
0x2c760:   5d 06 b8 ed 00 00 00 00  ab 05 db 9b 00 00 00 00   |]...............|
0x2c770:   e9 70 9b 9c 00 00 00 00  fe f3 db 13 00 00 00 00   |.p..............|
0x2c780:   51 06 f8 ed 00 00 00 00  9f 45 9b bb 00 00 00 00   |Q........E......|
0x2c790:   dd 30 9b 9c 00 00 00 00  f2 f3 db 13 00 00 00 00   |.0..............|
0x2c7a0:   55 46 b8 ed 00 00 00 00  a3 05 db 9b 00 00 00 00   |UF..............|
0x2c7b0:   e1 70 9b bc 00 00 00 00  06 b4 9b 33 00 00 00 00   |.p.........3....|
0x2c7c0:   69 06 b8 cd 00 00 00 00  b7 45 db bb 00 00 00 00   |i........E......|
0x2c7d0:   e5 30 db bc 00 00 00 00  fa f3 9b 33 00 00 00 00   |.0.........3....|
0x2c7e0:   6d 46 f8 ed 00 00 00 00  bb 05 9b bb 00 00 00 00   |mF..............|
0x2c7f0:   f9 30 db 9c 00 00 00 00  fe b3 db 33 00 00 00 00   |.0.........3....|
0x2c800:   61 46 f8 cd 00 00 00 00  af 45 db bb 00 00 00 00   |aF.......E......|
0x2c810:   ed 70 db 9c 00 00 00 00  02 f4 9b 13 00 00 00 00   |.p..............|
0x2c820:   75 46 b8 cd 00 00 00 00  c3 45 9b bb 00 00 00 00   |uF.......E......|
0x2c830:   f1 30 9b bc 00 00 00 00  16 b4 db 33 00 00 00 00   |.0.........3....|
0x2c840:   69 06 b8 ed 00 00 00 00  c7 05 db 9b 00 00 00 00   |i...............|
0x2c850:   05 71 9b 9c 00 00 00 00  1a f4 db 13 00 00 00 00   |.q..............|
0x2c860:   7d 06 f8 cd 00 00 00 00  bb 05 9b 9b 00 00 00 00   |}...............|
0x2c870:   09 31 db bc 00 00 00 00  0e b4 9b 33 00 00 00 00   |.1.........3....|
0x2c880:   81 46 b8 ed 00 00 00 00  cf 05 9b 9b 00 00 00 00   |.F..............|
0x2c890:   0d 71 9b bc 00 00 00 00  22 b4 9b 33 00 00 00 00   |.q......"..3....|
0x2c8a0:   85 06 f8 ed 00 00 00 00  d3 05 db bb 00 00 00 00   |................|
0x2c8b0:   11 71 db 9c 00 00 00 00  26 f4 9b 13 00 00 00 00   |.q......&.......|
0x2c8c0:   79 46 f8 ed 00 00 00 00  c7 45 9b bb 00 00 00 00   |yF.......E......|
0x2c8d0:   05 31 9b 9c 00 00 00 00  1a b4 db 13 00 00 00 00   |.1..............|
0x2c8e0:   7d 46 b8 cd 00 00 00 00  db 45 db 9b 00 00 00 00   |}F.......E......|
0x2c8f0:   09 71 db bc 00 00 00 00  2e f4 db 33 00 00 00 00   |.q.........3....|
0x2c900:   22 a5 42 6c 00 00 00 00  5b 41 c3 50 00 00 00 00   |".Bl....[A.P....|
0x2c910:   dc f7 c7 87 00 00 00 00  c9 4f d8 47 00 00 00 00   |.........O.G....|
0x2c920:   26 ad 62 6c 00 00 00 00  5f 49 e3 50 00 00 00 00   |&.bl...._I.P....|
0x2c930:   e0 f7 e7 83 00 00 00 00  cd 47 f8 43 00 00 00 00   |.........G.C....|
0x2c940:   28 ad 42 68 00 00 00 00  61 41 c3 54 00 00 00 00   |(.Bh....aA.T....|
0x2c950:   e6 ff c7 83 00 00 00 00  d3 4f d8 43 00 00 00 00   |.........O.C....|
0x2c960:   2c a5 62 6c 00 00 00 00  65 41 e3 50 00 00 00 00   |,.bl....eA.P....|
0x2c970:   e8 ff e7 87 00 00 00 00  d7 47 d8 47 00 00 00 00   |.........G.G....|
0x2c980:   32 ad 62 68 00 00 00 00  6b 49 c3 54 00 00 00 00   |2.bh....kI.T....|
0x2c990:   ec ff e7 83 00 00 00 00  d9 47 d8 43 00 00 00 00   |.........G.C....|
0x2c9a0:   34 a5 62 68 00 00 00 00  6d 41 c3 50 00 00 00 00   |4.bh....mA.P....|
0x2c9b0:   f2 f7 e7 87 00 00 00 00  df 4f f8 47 00 00 00 00   |.........O.G....|
0x2c9c0:   3a a5 42 68 00 00 00 00  71 49 e3 54 00 00 00 00   |:.Bh....qI.T....|
0x2c9d0:   f4 f7 c7 83 00 00 00 00  e3 47 f8 43 00 00 00 00   |.........G.C....|
0x2c9e0:   3e ad 42 6c 00 00 00 00  77 41 e3 54 00 00 00 00   |>.Bl....wA.T....|
0x2c9f0:   fa ff c7 87 00 00 00 00  e5 47 f8 47 00 00 00 00   |.........G.G....|
0x2ca00:   42 a5 62 68 00 00 00 00  79 49 c3 54 00 00 00 00   |B.bh....yI.T....|
0x2ca10:   fe ff e7 83 00 00 00 00  eb 47 d8 43 00 00 00 00   |.........G.C....|
0x2ca20:   44 ad 62 68 00 00 00 00  7f 41 c3 50 00 00 00 00   |D.bh.....A.P....|
0x2ca30:   00 00 e8 87 00 00 00 00  ef 4f d8 47 00 00 00 00   |.........O.G....|
0x2ca40:   48 a5 42 6c 00 00 00 00  81 41 e3 50 00 00 00 00   |H.Bl.....A.P....|
0x2ca50:   06 f8 c7 87 00 00 00 00  f1 4f f8 47 00 00 00 00   |.........O.G....|
0x2ca60:   4e ad 42 68 00 00 00 00  87 49 e3 54 00 00 00 00   |N.Bh.....I.T....|
0x2ca70:   08 f8 e7 83 00 00 00 00  f5 47 f8 43 00 00 00 00   |.........G.C....|
0x2ca80:   50 ad 62 6c 00 00 00 00  8b 41 e3 50 00 00 00 00   |P.bl.....A.P....|
0x2ca90:   0c f8 e7 87 00 00 00 00  f9 4f f8 43 00 00 00 00   |.........O.C....|
0x2caa0:   56 ad 42 6c 00 00 00 00  8d 41 e3 54 00 00 00 00   |V.Bl.....A.T....|
0x2cab0:   10 00 c8 83 00 00 00 00  ff 47 f8 43 00 00 00 00   |.........G.C....|
0x2cac0:   5a a5 62 6c 00 00 00 00  93 49 c3 54 00 00 00 00   |Z.bl.....I.T....|
0x2cad0:   16 00 e8 87 00 00 00 00  01 48 d8 47 00 00 00 00   |.........H.G....|
0x2cae0:   5c a5 62 68 00 00 00 00  95 49 e3 50 00 00 00 00   |\.bh.....I.P....|
0x2caf0:   1a f8 c7 83 00 00 00 00  07 50 f8 47 00 00 00 00   |.........P.G....|
0x2cb00:   54 2f ad 08 00 00 00 00  3a 5b c2 0b 00 00 00 00   |T/......:[......|
0x2cb10:   68 95 66 95 00 00 00 00  69 79 d2 b5 00 00 00 00   |h.f.....iy......|
0x2cb20:   18 3f ad 08 00 00 00 00  7e 5b c2 1b 00 00 00 00   |.?......~[......|
0x2cb30:   2c 95 62 95 00 00 00 00  2d 69 d6 b5 00 00 00 00   |,.b.....-i......|
0x2cb40:   5c 3f a9 18 00 00 00 00  42 4b c6 1b 00 00 00 00   |\?......BK......|
0x2cb50:   30 85 66 85 00 00 00 00  31 79 d2 a5 00 00 00 00   |0.f.....1y......|
0x2cb60:   20 2f a9 08 00 00 00 00  86 5b c6 0b 00 00 00 00   | /.......[......|
0x2cb70:   74 85 62 95 00 00 00 00  75 69 d6 a5 00 00 00 00   |t.b.....ui......|
0x2cb80:   24 3f a9 08 00 00 00 00  8a 4b c2 1b 00 00 00 00   |$?.......K......|
0x2cb90:   78 85 62 85 00 00 00 00  79 79 d6 a5 00 00 00 00   |x.b.....yy......|
0x2cba0:   28 2f a9 18 00 00 00 00  8e 4b c6 0b 00 00 00 00   |(/.......K......|
0x2cbb0:   3c 95 66 85 00 00 00 00  3d 79 d2 b5 00 00 00 00   |<.f.....=y......|
0x2cbc0:   6c 2f ad 18 00 00 00 00  52 4b c2 0b 00 00 00 00   |l/......RK......|
0x2cbd0:   80 95 62 95 00 00 00 00  81 69 d2 b5 00 00 00 00   |..b......i......|
0x2cbe0:   70 3f ad 08 00 00 00 00  56 5b c2 1b 00 00 00 00   |p?......V[......|
0x2cbf0:   44 85 66 95 00 00 00 00  45 69 d2 a5 00 00 00 00   |D.f.....Ei......|
0x2cc00:   74 2f a9 18 00 00 00 00  5a 4b c6 0b 00 00 00 00   |t/......ZK......|
0x2cc10:   88 85 66 85 00 00 00 00  49 79 d6 a5 00 00 00 00   |..f.....Iy......|
0x2cc20:   78 3f ad 18 00 00 00 00  9e 4b c6 1b 00 00 00 00   |x?.......K......|
0x2cc30:   8c 85 62 95 00 00 00 00  8d 79 d2 a5 00 00 00 00   |..b......y......|
0x2cc40:   3c 2f ad 08 00 00 00 00  a2 4b c2 0b 00 00 00 00   |</.......K......|
0x2cc50:   50 95 62 85 00 00 00 00  51 69 d2 b5 00 00 00 00   |P.b.....Qi......|
0x2cc60:   80 3f a9 08 00 00 00 00  66 4b c2 1b 00 00 00 00   |.?......fK......|
0x2cc70:   94 95 66 95 00 00 00 00  95 79 d6 b5 00 00 00 00   |..f......y......|
0x2cc80:   44 3f ad 18 00 00 00 00  aa 5b c6 1b 00 00 00 00   |D?.......[......|
0x2cc90:   58 95 66 95 00 00 00 00  99 69 d6 b5 00 00 00 00   |X.f......i......|
0x2cca0:   48 3f a9 08 00 00 00 00  6e 5b c2 1b 00 00 00 00   |H?......n[......|
0x2ccb0:   5c 85 62 85 00 00 00 00  5d 69 d6 a5 00 00 00 00   |\.b.....]i......|
0x2ccc0:   8c 2f a9 08 00 00 00 00  72 5b c6 0b 00 00 00 00   |./......r[......|
0x2ccd0:   a0 85 66 95 00 00 00 00  a1 79 d6 a5 00 00 00 00   |..f......y......|
0x2cce0:   90 2f ad 18 00 00 00 00  b6 4b c6 0b 00 00 00 00   |./.......K......|
0x2ccf0:   a4 95 62 85 00 00 00 00  65 79 d2 b5 00 00 00 00   |..b.....ey......|
0x2cd00:   45 1f 47 ec 00 00 00 00  cb 4c 2a a3 00 00 00 00   |E.G......L*.....|
0x2cd10:   ed cb 1b 8d 00 00 00 00  b1 95 83 4f 00 00 00 00   |...........O....|
0x2cd20:   49 1f 46 ec 00 00 00 00  cf 4c 2b a3 00 00 00 00   |I.F......L+.....|
0x2cd30:   f1 cb 1a 8d 00 00 00 00  b5 95 82 4f 00 00 00 00   |...........O....|
0x2cd40:   4d 1f 47 ed 00 00 00 00  d3 4c 2a a2 00 00 00 00   |M.G......L*.....|
0x2cd50:   f5 cb 1b 8c 00 00 00 00  b9 95 83 4e 00 00 00 00   |...........N....|
0x2cd60:   51 1f 46 ed 00 00 00 00  d7 4c 2b a2 00 00 00 00   |Q.F......L+.....|
0x2cd70:   f9 cb 1a 8c 00 00 00 00  bd 95 82 4e 00 00 00 00   |...........N....|
0x2cd80:   b2 6e b5 99 00 00 00 00  dc 42 fe 42 00 00 00 00   |.n.......B.B....|
0x2cd90:   75 a5 39 86 00 00 00 00  42 04 06 f7 00 00 00 00   |u.9.....B.......|
0x2cda0:   b6 6f b5 99 00 00 00 00  e0 43 fe 42 00 00 00 00   |.o.......C.B....|
0x2cdb0:   79 a4 39 86 00 00 00 00  46 05 06 f7 00 00 00 00   |y.9.....F.......|
0x2cdc0:   bb 6e b5 99 00 00 00 00  e5 42 fe 42 00 00 00 00   |.n.......B.B....|
0x2cdd0:   7c a5 39 86 00 00 00 00  4b 04 06 f7 00 00 00 00   ||.9.....K.......|
0x2cde0:   bf 6f b5 99 00 00 00 00  e9 43 fe 42 00 00 00 00   |.o.......C.B....|
0x2cdf0:   80 a4 39 86 00 00 00 00  4f 05 06 f7 00 00 00 00   |..9.....O.......|
0x2ce00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ce10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ce20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ce30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ce40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ce50:   00 35 95 00 00 00 00 00  f8 83 57 00 00 00 00 00   |.5........W.....|
0x2ce60:   3f 8f 3b 00 00 00 00 00  c0 e5 2a 00 00 00 00 00   |?.;.......*.....|
0x2ce70:   f0 e0 1f 00 00 00 00 00  40 2a 18 00 00 00 00 00   |........@*......|
0x2ce80:   1f 91 12 00 00 00 00 00  fb 66 0e 00 00 00 00 00   |.........f......|
0x2ce90:   a0 3f 0b 00 00 00 00 00  2a d4 08 00 00 00 00 00   |.?......*.......|
0x2cea0:   2a f4 06 00 00 00 00 00  7a 7d 05 00 00 00 00 00   |*.......z}......|
0x2ceb0:   75 57 04 00 00 00 00 00  a7 6f 03 00 00 00 00 00   |uW.......o......|
0x2cec0:   8d b8 02 00 00 00 00 00  a3 27 02 00 00 00 00 00   |.........'......|
0x2ced0:   da b4 01 00 00 00 00 00  ec 59 01 00 00 00 00 00   |.........Y......|
0x2cee0:   ed 11 01 00 00 00 00 00  fa d8 00 00 00 00 00 00   |................|
0x2cef0:   fa ab 00 00 00 00 00 00  79 88 00 00 00 00 00 00   |........y.......|
0x2cf00:   7d 6c 00 00 00 00 00 00  76 56 00 00 00 00 00 00   |}l......vV......|
0x2cf10:   20 45 00 00 00 00 00 00  7c 37 00 00 00 00 00 00   | E......|7......|
0x2cf20:   bf 2c 00 00 00 00 00 00  47 24 00 00 00 00 00 00   |.,......G$......|
0x2cf30:   95 1d 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2cf40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2cf50:   f1 8b 00 00 00 00 00 00  85 86 00 00 00 00 00 00   |................|
0x2cf60:   79 80 00 00 00 00 00 00  ba 79 00 00 00 00 00 00   |y........y......|
0x2cf70:   41 72 00 00 00 00 00 00  26 6a 00 00 00 00 00 00   |Ar......&j......|
0x2cf80:   b0 61 00 00 00 00 00 00  3e 59 00 00 00 00 00 00   |.a......>Y......|
0x2cf90:   26 51 00 00 00 00 00 00  9a 49 00 00 00 00 00 00   |&Q.......I......|
0x2cfa0:   a6 42 00 00 00 00 00 00  46 3c 00 00 00 00 00 00   |.B......F<......|
0x2cfb0:   6e 36 00 00 00 00 00 00  16 31 00 00 00 00 00 00   |n6.......1......|
0x2cfc0:   39 2c 00 00 00 00 00 00  d6 27 00 00 00 00 00 00   |9,.......'......|
0x2cfd0:   ef 23 00 00 00 00 00 00  83 20 00 00 00 00 00 00   |.#....... ......|
0x2cfe0:   90 1d 00 00 00 00 00 00  0c 1b 00 00 00 00 00 00   |................|
0x2cff0:   eb 18 00 00 00 00 00 00  20 17 00 00 00 00 00 00   |........ .......|
0x2d000:   9c 15 00 00 00 00 00 00  54 14 00 00 00 00 00 00   |........T.......|
0x2d010:   3d 13 00 00 00 00 00 00  4d 12 00 00 00 00 00 00   |=.......M.......|
0x2d020:   7f 11 00 00 00 00 00 00  cc 10 00 00 00 00 00 00   |................|
0x2d030:   31 10 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |1...............|
0x2d040:   00 1a 04 33 20 00 00 00  aa 00 02 a0 3d 25 8b 4b   |...3 .......=%.K|
0x2d050:   3f ff ff 8f 80 01 00 00  00 00 00 00 00 00 00 00   |?...............|
0x2d060:   04 11 12 13 14 31 32 38  39 47 75 b0 b2 b3 b4 b5   |.....1289Gu.....|
0x2d070:   b6 b7 b8 22 5f ef 00 00  00 00 00 00 00 00 00 00   |..."_...........|
0x2d080:   90 00 02 00 41 00 00 ff  59 f2 f0 50 b2 00 30 80   |....A...Y..P..0.|
0x2d090:   00 00 00 00 00 00 00 00  00 00 40 10 90 b0 89 b3   |..........@.....|
0x2d0a0:   2d d3 69 04 00 00 11 00  40 04 00 00 00 00 00 00   |-.i.....@.......|
0x2d0b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d0c0:   01 03 04 06 07 08 09 0a  0c 0d 0e 0f 10 11 12 13   |................|
0x2d0d0:   14 15 17 1a 1b 1c 1d 1e  1f 20 38 39 3b 51 52 53   |......... 89;QRS|
0x2d0e0:   5a 5b 85 87 8d 8e a3 a4  a5 a6 20 28 20 28 24 2c   |Z[........ ( ($,|
0x2d0f0:   24 2c 22 2a 22 2a 26 2e  26 2e 00 00 00 00 00 00   |$,"*"*&.&.......|
0x2d100:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d110:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d120:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d130:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d140:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d150:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d160:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d170:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d180:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d190:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d1a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d1b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d1c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d1d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d1e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d1f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d200:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d210:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d220:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d230:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d240:   01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d250:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d260:   63 63 63 63 7c 7c 7c 7c  77 77 77 77 7b 7b 7b 7b   |cccc||||wwww{{{{|
0x2d270:   f2 f2 f2 f2 6b 6b 6b 6b  6f 6f 6f 6f c5 c5 c5 c5   |....kkkkoooo....|
0x2d280:   30 30 30 30 01 01 01 01  67 67 67 67 2b 2b 2b 2b   |0000....gggg++++|
0x2d290:   fe fe fe fe d7 d7 d7 d7  ab ab ab ab 76 76 76 76   |............vvvv|
0x2d2a0:   ca ca ca ca 82 82 82 82  c9 c9 c9 c9 7d 7d 7d 7d   |............}}}}|
0x2d2b0:   fa fa fa fa 59 59 59 59  47 47 47 47 f0 f0 f0 f0   |....YYYYGGGG....|
0x2d2c0:   ad ad ad ad d4 d4 d4 d4  a2 a2 a2 a2 af af af af   |................|
0x2d2d0:   9c 9c 9c 9c a4 a4 a4 a4  72 72 72 72 c0 c0 c0 c0   |........rrrr....|
0x2d2e0:   b7 b7 b7 b7 fd fd fd fd  93 93 93 93 26 26 26 26   |............&&&&|
0x2d2f0:   36 36 36 36 3f 3f 3f 3f  f7 f7 f7 f7 cc cc cc cc   |6666????........|
0x2d300:   34 34 34 34 a5 a5 a5 a5  e5 e5 e5 e5 f1 f1 f1 f1   |4444............|
0x2d310:   71 71 71 71 d8 d8 d8 d8  31 31 31 31 15 15 15 15   |qqqq....1111....|
0x2d320:   04 04 04 04 c7 c7 c7 c7  23 23 23 23 c3 c3 c3 c3   |........####....|
0x2d330:   18 18 18 18 96 96 96 96  05 05 05 05 9a 9a 9a 9a   |................|
0x2d340:   07 07 07 07 12 12 12 12  80 80 80 80 e2 e2 e2 e2   |................|
0x2d350:   eb eb eb eb 27 27 27 27  b2 b2 b2 b2 75 75 75 75   |....''''....uuuu|
0x2d360:   09 09 09 09 83 83 83 83  2c 2c 2c 2c 1a 1a 1a 1a   |........,,,,....|
0x2d370:   1b 1b 1b 1b 6e 6e 6e 6e  5a 5a 5a 5a a0 a0 a0 a0   |....nnnnZZZZ....|
0x2d380:   52 52 52 52 3b 3b 3b 3b  d6 d6 d6 d6 b3 b3 b3 b3   |RRRR;;;;........|
0x2d390:   29 29 29 29 e3 e3 e3 e3  2f 2f 2f 2f 84 84 84 84   |))))....////....|
0x2d3a0:   53 53 53 53 d1 d1 d1 d1  00 00 00 00 ed ed ed ed   |SSSS............|
0x2d3b0:   20 20 20 20 fc fc fc fc  b1 b1 b1 b1 5b 5b 5b 5b   |    ........[[[[|
0x2d3c0:   6a 6a 6a 6a cb cb cb cb  be be be be 39 39 39 39   |jjjj........9999|
0x2d3d0:   4a 4a 4a 4a 4c 4c 4c 4c  58 58 58 58 cf cf cf cf   |JJJJLLLLXXXX....|
0x2d3e0:   d0 d0 d0 d0 ef ef ef ef  aa aa aa aa fb fb fb fb   |................|
0x2d3f0:   43 43 43 43 4d 4d 4d 4d  33 33 33 33 85 85 85 85   |CCCCMMMM3333....|
0x2d400:   45 45 45 45 f9 f9 f9 f9  02 02 02 02 7f 7f 7f 7f   |EEEE............|
0x2d410:   50 50 50 50 3c 3c 3c 3c  9f 9f 9f 9f a8 a8 a8 a8   |PPPP<<<<........|
0x2d420:   51 51 51 51 a3 a3 a3 a3  40 40 40 40 8f 8f 8f 8f   |QQQQ....@@@@....|
0x2d430:   92 92 92 92 9d 9d 9d 9d  38 38 38 38 f5 f5 f5 f5   |........8888....|
0x2d440:   bc bc bc bc b6 b6 b6 b6  da da da da 21 21 21 21   |............!!!!|
0x2d450:   10 10 10 10 ff ff ff ff  f3 f3 f3 f3 d2 d2 d2 d2   |................|
0x2d460:   cd cd cd cd 0c 0c 0c 0c  13 13 13 13 ec ec ec ec   |................|
0x2d470:   5f 5f 5f 5f 97 97 97 97  44 44 44 44 17 17 17 17   |____....DDDD....|
0x2d480:   c4 c4 c4 c4 a7 a7 a7 a7  7e 7e 7e 7e 3d 3d 3d 3d   |........~~~~====|
0x2d490:   64 64 64 64 5d 5d 5d 5d  19 19 19 19 73 73 73 73   |dddd]]]]....ssss|
0x2d4a0:   60 60 60 60 81 81 81 81  4f 4f 4f 4f dc dc dc dc   |````....OOOO....|
0x2d4b0:   22 22 22 22 2a 2a 2a 2a  90 90 90 90 88 88 88 88   |""""****........|
0x2d4c0:   46 46 46 46 ee ee ee ee  b8 b8 b8 b8 14 14 14 14   |FFFF............|
0x2d4d0:   de de de de 5e 5e 5e 5e  0b 0b 0b 0b db db db db   |....^^^^........|
0x2d4e0:   e0 e0 e0 e0 32 32 32 32  3a 3a 3a 3a 0a 0a 0a 0a   |....2222::::....|
0x2d4f0:   49 49 49 49 06 06 06 06  24 24 24 24 5c 5c 5c 5c   |IIII....$$$$\\\\|
0x2d500:   c2 c2 c2 c2 d3 d3 d3 d3  ac ac ac ac 62 62 62 62   |............bbbb|
0x2d510:   91 91 91 91 95 95 95 95  e4 e4 e4 e4 79 79 79 79   |............yyyy|
0x2d520:   e7 e7 e7 e7 c8 c8 c8 c8  37 37 37 37 6d 6d 6d 6d   |........7777mmmm|
0x2d530:   8d 8d 8d 8d d5 d5 d5 d5  4e 4e 4e 4e a9 a9 a9 a9   |........NNNN....|
0x2d540:   6c 6c 6c 6c 56 56 56 56  f4 f4 f4 f4 ea ea ea ea   |llllVVVV........|
0x2d550:   65 65 65 65 7a 7a 7a 7a  ae ae ae ae 08 08 08 08   |eeeezzzz........|
0x2d560:   ba ba ba ba 78 78 78 78  25 25 25 25 2e 2e 2e 2e   |....xxxx%%%%....|
0x2d570:   1c 1c 1c 1c a6 a6 a6 a6  b4 b4 b4 b4 c6 c6 c6 c6   |................|
0x2d580:   e8 e8 e8 e8 dd dd dd dd  74 74 74 74 1f 1f 1f 1f   |........tttt....|
0x2d590:   4b 4b 4b 4b bd bd bd bd  8b 8b 8b 8b 8a 8a 8a 8a   |KKKK............|
0x2d5a0:   70 70 70 70 3e 3e 3e 3e  b5 b5 b5 b5 66 66 66 66   |pppp>>>>....ffff|
0x2d5b0:   48 48 48 48 03 03 03 03  f6 f6 f6 f6 0e 0e 0e 0e   |HHHH............|
0x2d5c0:   61 61 61 61 35 35 35 35  57 57 57 57 b9 b9 b9 b9   |aaaa5555WWWW....|
0x2d5d0:   86 86 86 86 c1 c1 c1 c1  1d 1d 1d 1d 9e 9e 9e 9e   |................|
0x2d5e0:   e1 e1 e1 e1 f8 f8 f8 f8  98 98 98 98 11 11 11 11   |................|
0x2d5f0:   69 69 69 69 d9 d9 d9 d9  8e 8e 8e 8e 94 94 94 94   |iiii............|
0x2d600:   9b 9b 9b 9b 1e 1e 1e 1e  87 87 87 87 e9 e9 e9 e9   |................|
0x2d610:   ce ce ce ce 55 55 55 55  28 28 28 28 df df df df   |....UUUU((((....|
0x2d620:   8c 8c 8c 8c a1 a1 a1 a1  89 89 89 89 0d 0d 0d 0d   |................|
0x2d630:   bf bf bf bf e6 e6 e6 e6  42 42 42 42 68 68 68 68   |........BBBBhhhh|
0x2d640:   41 41 41 41 99 99 99 99  2d 2d 2d 2d 0f 0f 0f 0f   |AAAA....----....|
0x2d650:   b0 b0 b0 b0 54 54 54 54  bb bb bb bb 16 16 16 16   |....TTTT........|
0x2d660:   00 00 00 01 00 00 00 02  00 00 00 04 00 00 00 08   |................|
0x2d670:   00 00 00 10 00 00 00 20  00 00 00 40 00 00 00 80   |....... ...@....|
0x2d680:   00 00 00 1b 00 00 00 36  00 00 00 00 00 00 00 00   |.......6........|
0x2d690:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d6a0:   00 00 00 00 b7 1d c1 04  6e 3b 82 09 d9 26 43 0d   |........n;...&C.|
0x2d6b0:   dc 76 04 13 6b 6b c5 17  b2 4d 86 1a 05 50 47 1e   |.v..kk...M...PG.|
0x2d6c0:   b8 ed 08 26 0f f0 c9 22  d6 d6 8a 2f 61 cb 4b 2b   |...&...".../a.K+|
0x2d6d0:   64 9b 0c 35 d3 86 cd 31  0a a0 8e 3c bd bd 4f 38   |d..5...1...<..O8|
0x2d6e0:   70 db 11 4c c7 c6 d0 48  1e e0 93 45 a9 fd 52 41   |p..L...H...E..RA|
0x2d6f0:   ac ad 15 5f 1b b0 d4 5b  c2 96 97 56 75 8b 56 52   |..._...[...Vu.VR|
0x2d700:   c8 36 19 6a 7f 2b d8 6e  a6 0d 9b 63 11 10 5a 67   |.6.j.+.n...c..Zg|
0x2d710:   14 40 1d 79 a3 5d dc 7d  7a 7b 9f 70 cd 66 5e 74   |.@.y.].}z{.p.f^t|
0x2d720:   e0 b6 23 98 57 ab e2 9c  8e 8d a1 91 39 90 60 95   |..#.W.......9.`.|
0x2d730:   3c c0 27 8b 8b dd e6 8f  52 fb a5 82 e5 e6 64 86   |<.'.....R.....d.|
0x2d740:   58 5b 2b be ef 46 ea ba  36 60 a9 b7 81 7d 68 b3   |X[+..F..6`...}h.|
0x2d750:   84 2d 2f ad 33 30 ee a9  ea 16 ad a4 5d 0b 6c a0   |.-/.30......].l.|
0x2d760:   90 6d 32 d4 27 70 f3 d0  fe 56 b0 dd 49 4b 71 d9   |.m2.'p...V..IKq.|
0x2d770:   4c 1b 36 c7 fb 06 f7 c3  22 20 b4 ce 95 3d 75 ca   |L.6....." ...=u.|
0x2d780:   28 80 3a f2 9f 9d fb f6  46 bb b8 fb f1 a6 79 ff   |(.:.....F.....y.|
0x2d790:   f4 f6 3e e1 43 eb ff e5  9a cd bc e8 2d d0 7d ec   |..>.C.......-.}.|
0x2d7a0:   77 70 86 34 c0 6d 47 30  19 4b 04 3d ae 56 c5 39   |wp.4.mG0.K.=.V.9|
0x2d7b0:   ab 06 82 27 1c 1b 43 23  c5 3d 00 2e 72 20 c1 2a   |...'..C#.=..r .*|
0x2d7c0:   cf 9d 8e 12 78 80 4f 16  a1 a6 0c 1b 16 bb cd 1f   |....x.O.........|
0x2d7d0:   13 eb 8a 01 a4 f6 4b 05  7d d0 08 08 ca cd c9 0c   |......K.}.......|
0x2d7e0:   07 ab 97 78 b0 b6 56 7c  69 90 15 71 de 8d d4 75   |...x..V|i..q...u|
0x2d7f0:   db dd 93 6b 6c c0 52 6f  b5 e6 11 62 02 fb d0 66   |...kl.Ro...b...f|
0x2d800:   bf 46 9f 5e 08 5b 5e 5a  d1 7d 1d 57 66 60 dc 53   |.F.^.[^Z.}.Wf`.S|
0x2d810:   63 30 9b 4d d4 2d 5a 49  0d 0b 19 44 ba 16 d8 40   |c0.M.-ZI...D...@|
0x2d820:   97 c6 a5 ac 20 db 64 a8  f9 fd 27 a5 4e e0 e6 a1   |.... .d...'.N...|
0x2d830:   4b b0 a1 bf fc ad 60 bb  25 8b 23 b6 92 96 e2 b2   |K.....`.%.#.....|
0x2d840:   2f 2b ad 8a 98 36 6c 8e  41 10 2f 83 f6 0d ee 87   |/+...6l.A./.....|
0x2d850:   f3 5d a9 99 44 40 68 9d  9d 66 2b 90 2a 7b ea 94   |.]..D@h..f+.*{..|
0x2d860:   e7 1d b4 e0 50 00 75 e4  89 26 36 e9 3e 3b f7 ed   |....P.u..&6.>;..|
0x2d870:   3b 6b b0 f3 8c 76 71 f7  55 50 32 fa e2 4d f3 fe   |;k...vq.UP2..M..|
0x2d880:   5f f0 bc c6 e8 ed 7d c2  31 cb 3e cf 86 d6 ff cb   |_.....}.1.>.....|
0x2d890:   83 86 b8 d5 34 9b 79 d1  ed bd 3a dc 5a a0 fb d8   |....4.y...:.Z...|
0x2d8a0:   ee e0 0c 69 59 fd cd 6d  80 db 8e 60 37 c6 4f 64   |...iY..m...`7.Od|
0x2d8b0:   32 96 08 7a 85 8b c9 7e  5c ad 8a 73 eb b0 4b 77   |2..z...~\..s..Kw|
0x2d8c0:   56 0d 04 4f e1 10 c5 4b  38 36 86 46 8f 2b 47 42   |V..O...K86.F.+GB|
0x2d8d0:   8a 7b 00 5c 3d 66 c1 58  e4 40 82 55 53 5d 43 51   |.{.\=f.X.@.US]CQ|
0x2d8e0:   9e 3b 1d 25 29 26 dc 21  f0 00 9f 2c 47 1d 5e 28   |.;.%)&.!...,G.^(|
0x2d8f0:   42 4d 19 36 f5 50 d8 32  2c 76 9b 3f 9b 6b 5a 3b   |BM.6.P.2,v.?.kZ;|
0x2d900:   26 d6 15 03 91 cb d4 07  48 ed 97 0a ff f0 56 0e   |&.......H.....V.|
0x2d910:   fa a0 11 10 4d bd d0 14  94 9b 93 19 23 86 52 1d   |....M.......#.R.|
0x2d920:   0e 56 2f f1 b9 4b ee f5  60 6d ad f8 d7 70 6c fc   |.V/..K..`m...pl.|
0x2d930:   d2 20 2b e2 65 3d ea e6  bc 1b a9 eb 0b 06 68 ef   |. +.e=........h.|
0x2d940:   b6 bb 27 d7 01 a6 e6 d3  d8 80 a5 de 6f 9d 64 da   |..'.........o.d.|
0x2d950:   6a cd 23 c4 dd d0 e2 c0  04 f6 a1 cd b3 eb 60 c9   |j.#...........`.|
0x2d960:   7e 8d 3e bd c9 90 ff b9  10 b6 bc b4 a7 ab 7d b0   |~.>...........}.|
0x2d970:   a2 fb 3a ae 15 e6 fb aa  cc c0 b8 a7 7b dd 79 a3   |..:.........{.y.|
0x2d980:   c6 60 36 9b 71 7d f7 9f  a8 5b b4 92 1f 46 75 96   |.`6.q}...[...Fu.|
0x2d990:   1a 16 32 88 ad 0b f3 8c  74 2d b0 81 c3 30 71 85   |..2.....t-...0q.|
0x2d9a0:   99 90 8a 5d 2e 8d 4b 59  f7 ab 08 54 40 b6 c9 50   |...]..KY...T@..P|
0x2d9b0:   45 e6 8e 4e f2 fb 4f 4a  2b dd 0c 47 9c c0 cd 43   |E..N..OJ+..G...C|
0x2d9c0:   21 7d 82 7b 96 60 43 7f  4f 46 00 72 f8 5b c1 76   |!}.{.`C.OF.r.[.v|
0x2d9d0:   fd 0b 86 68 4a 16 47 6c  93 30 04 61 24 2d c5 65   |...hJ.Gl.0.a$-.e|
0x2d9e0:   e9 4b 9b 11 5e 56 5a 15  87 70 19 18 30 6d d8 1c   |.K..^VZ..p..0m..|
0x2d9f0:   35 3d 9f 02 82 20 5e 06  5b 06 1d 0b ec 1b dc 0f   |5=... ^.[.......|
0x2da00:   51 a6 93 37 e6 bb 52 33  3f 9d 11 3e 88 80 d0 3a   |Q..7..R3?..>...:|
0x2da10:   8d d0 97 24 3a cd 56 20  e3 eb 15 2d 54 f6 d4 29   |...$:.V ...-T..)|
0x2da20:   79 26 a9 c5 ce 3b 68 c1  17 1d 2b cc a0 00 ea c8   |y&...;h...+.....|
0x2da30:   a5 50 ad d6 12 4d 6c d2  cb 6b 2f df 7c 76 ee db   |.P...Ml..k/.|v..|
0x2da40:   c1 cb a1 e3 76 d6 60 e7  af f0 23 ea 18 ed e2 ee   |....v.`...#.....|
0x2da50:   1d bd a5 f0 aa a0 64 f4  73 86 27 f9 c4 9b e6 fd   |......d.s.'.....|
0x2da60:   09 fd b8 89 be e0 79 8d  67 c6 3a 80 d0 db fb 84   |......y.g.:.....|
0x2da70:   d5 8b bc 9a 62 96 7d 9e  bb b0 3e 93 0c ad ff 97   |....b.}...>.....|
0x2da80:   b1 10 b0 af 06 0d 71 ab  df 2b 32 a6 68 36 f3 a2   |......q..+2.h6..|
0x2da90:   6d 66 b4 bc da 7b 75 b8  03 5d 36 b5 b4 40 f7 b1   |mf...{u..]6..@..|
0x2daa0:   90 36 00 00 90 30 00 00  00 90 34 00 00 00 00 00   |.6...0....4.....|
0x2dab0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2dac0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2dad0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2dae0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2daf0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2db00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2db10:   00 35 95 00 00 00 00 00  f8 83 57 00 00 00 00 00   |.5........W.....|
0x2db20:   3f 8f 3b 00 00 00 00 00  c0 e5 2a 00 00 00 00 00   |?.;.......*.....|
0x2db30:   f0 e0 1f 00 00 00 00 00  40 2a 18 00 00 00 00 00   |........@*......|
0x2db40:   1f 91 12 00 00 00 00 00  fb 66 0e 00 00 00 00 00   |.........f......|
0x2db50:   a0 3f 0b 00 00 00 00 00  2a d4 08 00 00 00 00 00   |.?......*.......|
0x2db60:   2a f4 06 00 00 00 00 00  7a 7d 05 00 00 00 00 00   |*.......z}......|
0x2db70:   75 57 04 00 00 00 00 00  a7 6f 03 00 00 00 00 00   |uW.......o......|
0x2db80:   8d b8 02 00 00 00 00 00  a3 27 02 00 00 00 00 00   |.........'......|
0x2db90:   da b4 01 00 00 00 00 00  ec 59 01 00 00 00 00 00   |.........Y......|
0x2dba0:   ed 11 01 00 00 00 00 00  fa d8 00 00 00 00 00 00   |................|
0x2dbb0:   fa ab 00 00 00 00 00 00  79 88 00 00 00 00 00 00   |........y.......|
0x2dbc0:   7d 6c 00 00 00 00 00 00  76 56 00 00 00 00 00 00   |}l......vV......|
0x2dbd0:   20 45 00 00 00 00 00 00  7c 37 00 00 00 00 00 00   | E......|7......|
0x2dbe0:   bf 2c 00 00 00 00 00 00  47 24 00 00 00 00 00 00   |.,......G$......|
0x2dbf0:   95 1d 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2dc00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2dc10:   f1 8b 00 00 00 00 00 00  85 86 00 00 00 00 00 00   |................|
0x2dc20:   79 80 00 00 00 00 00 00  ba 79 00 00 00 00 00 00   |y........y......|
0x2dc30:   41 72 00 00 00 00 00 00  26 6a 00 00 00 00 00 00   |Ar......&j......|
0x2dc40:   b0 61 00 00 00 00 00 00  3e 59 00 00 00 00 00 00   |.a......>Y......|
0x2dc50:   26 51 00 00 00 00 00 00  9a 49 00 00 00 00 00 00   |&Q.......I......|
0x2dc60:   a6 42 00 00 00 00 00 00  46 3c 00 00 00 00 00 00   |.B......F<......|
0x2dc70:   6e 36 00 00 00 00 00 00  16 31 00 00 00 00 00 00   |n6.......1......|
0x2dc80:   39 2c 00 00 00 00 00 00  d6 27 00 00 00 00 00 00   |9,.......'......|
0x2dc90:   ef 23 00 00 00 00 00 00  83 20 00 00 00 00 00 00   |.#....... ......|
0x2dca0:   90 1d 00 00 00 00 00 00  0c 1b 00 00 00 00 00 00   |................|
0x2dcb0:   eb 18 00 00 00 00 00 00  20 17 00 00 00 00 00 00   |........ .......|
0x2dcc0:   9c 15 00 00 00 00 00 00  54 14 00 00 00 00 00 00   |........T.......|
0x2dcd0:   3d 13 00 00 00 00 00 00  4d 12 00 00 00 00 00 00   |=.......M.......|
0x2dce0:   7f 11 00 00 00 00 00 00  cc 10 00 00 00 00 00 00   |................|
0x2dcf0:   31 10 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |1...............|
0x2dd00:   22 0b 00 00 00 00 00 00  13 00 00 00 00 00 00 00   |"...............|
0x2dd10:   3c 0f 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |<...............|
0x2dd20:   f2 12 00 00 00 00 00 00  22 00 00 00 00 00 00 00   |........".......|
0x2dd30:   a8 16 00 00 00 00 00 00  25 00 00 00 00 00 00 00   |........%.......|
0x2dd40:   fa 19 00 00 00 00 00 00  31 00 00 00 00 00 00 00   |........1.......|
0x2dd50:   14 1e 00 00 00 00 00 00  33 00 00 00 00 00 00 00   |........3.......|
0x2dd60:   c4 22 00 00 00 00 00 00  41 00 00 00 00 00 00 00   |."......A.......|
0x2dd70:   ac 26 00 00 00 00 00 00  43 00 00 00 00 00 00 00   |.&......C.......|
0x2dd80:   cc 29 00 00 00 00 00 00  51 00 00 00 00 00 00 00   |.)......Q.......|
0x2dd90:   88 2c 00 00 00 00 00 00  52 00 00 00 00 00 00 00   |.,......R.......|
0x2dda0:   d4 30 00 00 00 00 00 00  60 00 00 00 00 00 00 00   |.0......`.......|
0x2ddb0:   bc 34 00 00 00 00 00 00  62 00 00 00 00 00 00 00   |.4......b.......|
0x2ddc0:   d6 38 00 00 00 00 00 00  70 00 00 00 00 00 00 00   |.8......p.......|
0x2ddd0:   b8 3d 00 00 00 00 00 00  72 00 00 00 00 00 00 00   |.=......r.......|
0x2dde0:   a0 41 00 00 00 00 00 00  73 00 00 00 00 00 00 00   |.A......s.......|
0x2ddf0:   56 45 00 00 00 00 00 00  74 00 00 00 00 00 00 00   |VE......t.......|
0x2de00:   ae 47 00 00 00 00 00 00  3d 00 00 00 00 00 00 00   |.G......=.......|
0x2de10:   00 4b 00 00 00 00 00 00  75 00 00 00 00 00 00 00   |.K......u.......|
0x2de20:   e8 4e 00 00 00 00 00 00  76 00 00 00 00 00 00 00   |.N......v.......|
0x2de30:   08 52 00 00 00 00 00 00  5a 00 00 00 00 00 00 00   |.R......Z.......|
0x2de40:   b2 57 00 00 00 00 00 00  77 00 00 00 00 00 00 00   |.W......w.......|
0x2de50:   5c 5d 00 00 00 00 00 00  5b 00 00 00 00 00 00 00   |\]......[.......|
0x2de60:   a8 61 00 00 00 00 00 00  6a 00 00 00 00 00 00 00   |.a......j.......|
0x2de70:   84 67 00 00 00 00 00 00  79 00 00 00 00 00 00 00   |.g......y.......|
0x2de80:   fc 6c 00 00 00 00 00 00  6b 00 00 00 00 00 00 00   |.l......k.......|
0x2de90:   4e 70 00 00 00 00 00 00  7a 00 00 00 00 00 00 00   |Np......z.......|
0x2dea0:   04 74 00 00 00 00 00 00  4e 00 00 00 00 00 00 00   |.t......N.......|
0x2deb0:   ec 77 00 00 00 00 00 00  5d 00 00 00 00 00 00 00   |.w......].......|
0x2dec0:   da 7a 00 00 00 00 00 00  6c 00 00 00 00 00 00 00   |.z......l.......|
0x2ded0:   9e 84 00 00 00 00 00 00  7b 00 00 00 00 00 00 00   |........{.......|
0x2dee0:   58 98 00 00 00 00 00 00  7c 00 00 00 00 00 00 00   |X.......|.......|
0x2def0:   04 a6 00 00 00 00 00 00  7d 00 00 00 00 00 00 00   |........}.......|
0x2df00:   ae ab 00 00 00 00 00 00  6e 00 00 00 00 00 00 00   |........n.......|
0x2df10:   f6 b8 00 00 00 00 00 00  5f 00 00 00 00 00 00 00   |........_.......|
0x2df20:   f4 c9 00 00 00 00 00 00  7e 00 00 00 00 00 00 00   |........~.......|
0x2df30:   96 e1 00 00 00 00 00 00  6f 00 00 00 00 00 00 00   |........o.......|
0x2df40:   a0 86 01 00 00 00 00 00  7f 00 00 00 00 00 00 00   |................|
0x2df50:   00 00 00 00 00 01 00 01  00 00 00 00 00 00 00 00   |................|
0x2df60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2df70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2df80:   e0 df 21 00 00 81 29 00  e0 df 21 00 e0 df 21 00   |..!...)...!...!.|
0x2df90:   20 22 31 00 20 22 31 00  00 00 00 00 20 22 31 00   | "1. "1..... "1.|
0x2dfa0:   00 00 00 00 00 81 29 00  20 22 31 00 20 22 31 00   |......). "1. "1.|
0x2dfb0:   00 00 00 00 e0 df 21 00  00 00 00 00 00 00 00 00   |......!.........|
0x2dfc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2dfd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2dfe0:   00 00 00 00 00 00 00 00  80 50 de 19 40 55 20 0e   |.........P..@U .|
0x2dff0:   80 61 c1 0c 80 89 08 07  c0 71 b5 04 40 b7 28 03   |.a.......q..@.(.|
0x2e000:   40 a5 ae 02 a7 3a 00 00  c0 3b 47 03 97 39 00 00   |@....:...;G..9..|
0x2e010:   40 d2 df 03 64 36 00 00  c0 68 78 04 53 35 00 00   |@...d6...hx.S5..|
0x2e020:   40 ff 10 05 52 35 00 00  c0 95 a9 05 41 34 00 00   |@...R5......A4..|
0x2e030:   40 2c 42 06 40 34 00 00  c0 c2 da 06 40 34 00 00   |@,B.@4......@4..|
0x2e040:   40 59 73 07 00 00 00 00  00 00 00 00 00 00 00 00   |@Ys.............|
0x2e050:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e060:   55 55 01 00 2f a1 01 00  55 55 01 00 55 55 01 00   |UU../...UU..UU..|
0x2e070:   09 ed 01 00 09 ed 01 00  09 ed 01 00 09 ed 01 00   |................|
0x2e080:   2f a1 01 00 2f a1 01 00  15 c7 01 00 09 ed 01 00   |/.../...........|
0x2e090:   00 80 00 00 17 61 00 00  09 ed 01 00 2f a1 01 00   |.....a....../...|
0x2e0a0:   00 80 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e0b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e0c0:   90 a1 02 00 45 39 03 00  90 a1 02 00 90 a1 02 00   |....E9..........|
0x2e0d0:   f9 d0 03 00 f9 d0 03 00  00 00 00 00 f9 d0 03 00   |................|
0x2e0e0:   00 00 00 00 45 39 03 00  f9 d0 03 00 f9 d0 03 00   |....E9..........|
0x2e0f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e100:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e110:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e120:   55 55 01 00 2f a1 01 00  55 55 01 00 55 55 01 00   |UU../...UU..UU..|
0x2e130:   09 ed 01 00 09 ed 01 00  00 00 00 00 09 ed 01 00   |................|
0x2e140:   00 00 00 00 2f a1 01 00  15 c7 01 00 09 ed 01 00   |..../...........|
0x2e150:   00 00 00 00 55 55 01 00  00 00 00 00 00 00 00 00   |....UU..........|
0x2e160:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e170:   00 02 00 00 04 04 01 04  03 02 04 04 05 00 07 0a   |................|
0x2e180:   0d 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e190:   00 00 00 00 00 00 01 00  01 00 00 00 01 01 01 01   |................|
0x2e1a0:   01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e1b0:   00 02 00 00 02 02 00 02  00 02 02 02 00 00 00 00   |................|
0x2e1c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e1d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e1e0:   04 00 00 00 07 00 00 00  04 00 00 00 04 00 00 00   |................|
0x2e1f0:   07 00 00 00 07 00 00 00  00 00 00 00 07 00 00 00   |................|
0x2e200:   00 00 00 00 07 00 00 00  07 00 00 00 07 00 00 00   |................|
0x2e210:   00 00 00 00 04 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e220:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e230:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e240:   90 3c e0 02 00 00 00 00  06 00 e9 dc 31 00 f0 8b   |.<..........1...|
0x2e250:   d0 b9 47 0b 00 00 00 00  0f 00 2d 87 03 00 80 db   |..G.......-.....|
0x2e260:   50 c6 90 1c 01 00 00 00  0a 00 42 47 33 00 f2 bc   |P.........BG3...|
0x2e270:   50 fc fe 1d 01 00 00 00  0a 00 9d 2f 33 00 46 a9   |P........../3.F.|
0x2e280:   50 32 6d 1f 01 00 00 00  0a 00 fc 19 33 00 8b 97   |P2m.........3...|
0x2e290:   50 68 db 20 01 00 00 00  0a 00 1f 06 33 00 79 87   |Ph. ........3.y.|
0x2e2a0:   50 9e 49 22 01 00 00 00  09 00 d2 f3 33 00 da 78   |P.I"........3..x|
0x2e2b0:   50 d4 b7 23 01 00 00 00  09 00 e8 e2 33 00 7c 6b   |P..#........3.|k|
0x2e2c0:   50 0a 26 25 01 00 00 00  09 00 3a d3 33 00 39 5f   |P.&%......:.3.9_|
0x2e2d0:   50 40 94 26 01 00 00 00  09 00 a6 c4 33 00 f0 53   |P@.&........3..S|
0x2e2e0:   50 76 02 28 01 00 00 00  0a 00 e7 2c 33 00 0a a7   |Pv.(.......,3...|
0x2e2f0:   50 ac 70 29 01 00 00 00  0a 00 92 1c 33 00 a7 99   |P.p)........3...|
0x2e300:   50 e2 de 2a 01 00 00 00  0a 00 43 0d 33 00 3b 8d   |P..*......C.3.;.|
0x2e310:   50 18 4d 2c 01 00 00 00  09 00 e3 fe 33 00 ac 81   |P.M,........3...|
0x2e320:   50 4e bb 2d 01 00 00 00  09 00 5c f1 33 00 e6 76   |PN.-......\.3..v|
0x2e330:   50 84 29 2f 01 00 00 00  09 00 9c e4 33 00 d3 6c   |P.)/........3..l|
0x2e340:   50 ba 97 30 01 00 00 00  09 00 92 d8 33 00 64 63   |P..0........3.dc|
0x2e350:   50 f0 05 32 01 00 00 00  09 00 2f cd 33 00 88 5a   |P..2....../.3..Z|
0x2e360:   f0 16 ba 02 04 00 00 00  0e 00 82 81 39 00 b0 3f   |............9..?|
0x2e370:   50 3e 66 0b 04 00 00 00  07 00 b6 02 31 00 20 9e   |P>f.........1. .|
0x2e380:   50 74 d4 0c 04 00 00 00  06 00 2e bb 31 00 1c 7c   |Pt..........1..||
0x2e390:   50 c6 90 1c 04 00 00 00  07 00 0c 59 31 00 7a c9   |P..........Y1.z.|
0x2e3a0:   50 fc fe 1d 04 00 00 00  07 00 8c 36 31 00 d8 b7   |P..........61...|
0x2e3b0:   50 32 6d 1f 04 00 00 00  07 00 06 17 31 00 18 a8   |P2m.........1...|
0x2e3c0:   50 68 db 20 04 00 00 00  06 00 1c fa 31 00 f2 99   |Ph. ........1...|
0x2e3d0:   50 9e 49 22 04 00 00 00  06 00 80 df 31 00 2b 8d   |P.I"........1.+.|
0x2e3e0:   50 d4 b7 23 04 00 00 00  06 00 ee c6 31 00 95 81   |P..#........1...|
0x2e3f0:   50 0a 26 25 04 00 00 00  06 00 2d b0 31 00 06 77   |P.&%......-.1..w|
0x2e400:   50 40 94 26 04 00 00 00  06 00 0a 9b 31 00 60 6d   |P@.&........1.`m|
0x2e410:   50 76 02 28 04 00 00 00  07 00 9f 31 31 00 5d b5   |Pv.(.......11.].|
0x2e420:   50 ac 70 29 04 00 00 00  07 00 d8 19 31 00 7e a9   |P.p)........1.~.|
0x2e430:   50 e2 de 2a 04 00 00 00  07 00 95 03 31 00 8c 9e   |P..*........1...|
0x2e440:   50 18 4d 2c 04 00 00 00  06 00 b0 ee 31 00 6e 94   |P.M,........1.n.|
0x2e450:   50 4e bb 2d 04 00 00 00  06 00 0c db 31 00 0d 8b   |PN.-........1...|
0x2e460:   50 84 29 2f 04 00 00 00  06 00 8b c8 31 00 56 82   |P.)/........1.V.|
0x2e470:   50 ba 97 30 04 00 00 00  06 00 17 b7 31 00 37 7a   |P..0........1.7z|
0x2e480:   50 f0 05 32 04 00 00 00  06 00 98 a6 31 00 a2 72   |P..2........1..r|
0x2e490:   50 27 02 04 00 00 00 00  06 00 ce 3f 0e 00 a7 ba   |P'.........?....|
0x2e4a0:   50 35 29 0b 00 00 00 00  06 00 c3 2c 0e 00 ad c2   |P5)........,....|
0x2e4b0:   50 6b 97 0c 00 00 00 00  06 00 59 79 0e 00 b7 a1   |Pk........Yy....|
0x2e4c0:   d0 41 72 1c 00 00 00 00  0f 00 54 8e 03 00 43 be   |.Ar.......T...C.|
0x2e4d0:   d0 77 e0 1d 00 00 00 00  0f 00 6e 8c 03 00 1d c6   |.w........n.....|
0x2e4e0:   d0 ad 4e 1f 00 00 00 00  0f 00 b1 8a 03 00 3f cd   |..N...........?.|
0x2e4f0:   d0 e3 bc 20 00 00 00 00  0f 00 18 89 03 00 c1 d3   |... ............|
0x2e500:   d0 19 2b 22 00 00 00 00  0f 00 9f 87 03 00 b8 d9   |..+"............|
0x2e510:   d0 4f 99 23 00 00 00 00  0f 00 42 86 03 00 34 df   |.O.#......B...4.|
0x2e520:   d0 85 07 25 00 00 00 00  0f 00 fe 84 03 00 44 e4   |...%..........D.|
0x2e530:   d0 bb 75 26 00 00 00 00  0f 00 e6 8d 03 00 0a c0   |..u&............|
0x2e540:   d0 f1 e3 27 00 00 00 00  0f 00 7e 8c 03 00 dd c5   |...'......~.....|
0x2e550:   d0 27 52 29 00 00 00 00  0f 00 2c 8b 03 00 48 cb   |.'R)......,...H.|
0x2e560:   d0 5d c0 2a 00 00 00 00  0f 00 ef 89 03 00 56 d0   |.].*..........V.|
0x2e570:   d0 93 2e 2c 00 00 00 00  0f 00 c5 88 03 00 11 d5   |...,............|
0x2e580:   d0 c9 9c 2d 00 00 00 00  0f 00 ad 87 03 00 7f d9   |...-............|
0x2e590:   d0 ff 0a 2f 00 00 00 00  0f 00 a4 86 03 00 a8 dd   |.../............|
0x2e5a0:   f0 43 eb 03 04 00 00 00  03 00 1c 83 0f 00 19 9c   |.C..............|
0x2e5b0:   90 80 75 0b 04 00 00 00  00 00 eb 25 30 00 2d 00   |..u........%0.-.|
0x2e5c0:   50 26 74 33 04 00 00 00  07 00 93 1b 31 00 59 aa   |P&t3........1.Y.|
0x2e5d0:   90 4a 07 0a 01 00 00 00  03 00 a8 47 30 00 fd 56   |.J.........G0..V|
0x2e5e0:   90 80 75 0b 01 00 00 00  03 00 20 a9 30 00 a5 6c   |..u....... .0..l|
0x2e5f0:   90 b6 e3 0c 01 00 00 00  03 00 dd 4a 30 00 a9 57   |...........J0..W|
0x2e600:   50 26 74 33 01 00 00 00  0a 00 28 1e 33 00 f1 9a   |P&t3......(.3...|
0x2e610:   d0 e1 8e 05 01 00 00 00  0f 00 9c ff 00 00 50 38   |..............P8|
0x2e620:   50 3e 66 0b 01 00 00 00  0a 00 4e 07 33 00 6d 88   |P>f.......N.3.m.|
0x2e630:   50 74 d4 0c 01 00 00 00  09 00 7b d6 33 00 c2 61   |Pt........{.3..a|
0x2e640:   d0 e1 8e 05 04 00 00 00  0f 00 53 a2 3c 00 05 99   |..........S.<...|
0x2e650:   50 c6 90 1c 00 00 00 00  0c 00 37 b7 36 00 e3 49   |P.........7.6..I|
0x2e660:   50 fc fe 1d 00 00 00 00  0c 00 4d a9 36 00 c5 37   |P.........M.6..7|
0x2e670:   50 32 6d 1f 00 00 00 00  0c 00 8f 9c 36 00 5e 27   |P2m.........6.^'|
0x2e680:   50 68 db 20 00 00 00 00  0c 00 da 90 36 00 71 18   |Ph. ........6.q.|
0x2e690:   50 9e 49 22 00 00 00 00  0c 00 0e 86 36 00 ce 0a   |P.I"........6...|
0x2e6a0:   50 d4 b7 23 00 00 00 00  0c 00 12 7c 35 00 4c fe   |P..#.......|5.L.|
0x2e6b0:   50 0a 26 25 00 00 00 00  0c 00 cf 72 35 00 c9 f2   |P.&%.......r5...|
0x2e6c0:   50 40 94 26 00 00 00 00  0c 00 32 6a 35 00 27 e8   |P@.&......2j5.'.|
0x2e6d0:   50 76 02 28 00 00 00 00  0c 00 1a a8 36 00 38 36   |Pv.(........6.86|
0x2e6e0:   50 ac 70 29 00 00 00 00  0c 00 79 9e 36 00 d2 29   |P.p)......y.6..)|
0x2e6f0:   50 e2 de 2a 00 00 00 00  0c 00 71 95 36 00 47 1e   |P..*......q.6.G.|
0x2e700:   50 18 4d 2c 00 00 00 00  0c 00 f5 8c 36 00 82 13   |P.M,........6...|
0x2e710:   50 4e bb 2d 00 00 00 00  0c 00 f7 84 36 00 6f 09   |PN.-........6.o.|
0x2e720:   50 84 29 2f 00 00 00 00  0c 00 6e 7d 35 00 fe ff   |P.)/......n}5...|
0x2e730:   50 ba 97 30 00 00 00 00  0c 00 50 76 35 00 21 f7   |P..0......Pv5.!.|
0x2e740:   50 f0 05 32 00 00 00 00  0c 00 94 6f 35 00 c9 ee   |P..2.......o5...|
0x2e750:   90 3c e0 02 01 00 00 00  03 00 51 9f 30 00 5a 6a   |.<........Q.0.Zj|
0x2e760:   d0 b9 47 0b 01 00 00 00  0f 00 9c ff 00 00 4d 38   |..G...........M8|
0x2e770:   10 29 88 0c 01 00 00 00  02 00 52 f2 0f 00 f1 b9   |.)........R.....|
0x2e780:   50 5d 70 05 00 00 00 00  06 00 8c c5 0e 00 11 7f   |P]p.............|
0x2e790:   50 93 de 06 00 00 00 00  06 00 86 33 0e 00 d7 bf   |P..........3....|
0x2e7a0:   50 bd 53 1c 00 00 00 00  06 00 5b cc 0e 00 e1 7b   |P.S.......[....{|
0x2e7b0:   50 f3 c1 1d 00 00 00 00  06 00 14 aa 0e 00 c6 8b   |P...............|
0x2e7c0:   06 48 07 40 0a eb 0b 11  0c 10 0d 88 10 04 11 30   |.H.@...........0|
0x2e7d0:   12 30 15 aa 16 03 17 80  18 67 19 d4 1a 44 1c 10   |.0.......g...D..|
0x2e7e0:   1d ee 1e 99 21 c5 22 91  24 01 2b 91 2d 01 2f 80   |....!.".$.+.-./.|
0x2e7f0:   31 00 33 00 38 00 39 2f  3a 00 3b 00 00 00 00 00   |1.3.8.9/:.;.....|
0x2e800:   64 01 00 00 00 08 00 00  c0 01 00 00 c7 19 8c 2d   |d..............-|
0x2e810:   0e 45 1b 0e 23 ff 26 82  28 00 30 df 32 df 34 68   |.E..#.&.(.0.2.4h|
0x2e820:   35 18 26 80 27 5f 28 00  29 5f 34 68 35 54 36 7c   |5.&.'_(.)_4h5T6||
0x2e830:   28 00                                              |(.              |
0x2e832:   2e 56 34 78 28 00                                  |.V4x(.          |   ".V4x("
0x2e838:   00 00 00 00 00 00 00 00  00 00 18 26 30 38 3e 44   |...........&08>D|
0x2e848:   48 4c 50 53 56 59 5c 5e  60 62 64 66 68 6a 6b 6d   |HLPSVY\^`bdfhjkm|
0x2e858:   6e 70 71 73 74 75 76 77  78 79 7b 7c 7d 7d 7e 7f   |npqstuvwxy{|}}~.|
0x2e868:   80 81 82 83 83 84 85 86  86 87 88 89 89 8a 8b 8b   |................|
0x2e878:   8c 8c 8d 8e 8e 8f 8f 90  90 91 92 92 93 93 94 94   |................|
0x2e888:   95 95 96 96 96 97 97 98  98 99 99 9a 9a 9a 9b 9b   |................|
0x2e898:   9c 9c 9c 9d 9d 9d 9e 9e  9f 9f 9f a0 a0 a0 a1 a1   |................|
0x2e8a8:   a1 a2 a2 a2 a3 a3 a3 a4  a4 a4 a5 a5 a5 a5 a6 a6   |................|
0x2e8b8:   a6 a7 a7 a7 a7 a8 a8 a8  a9 a9 a9 a9 aa aa aa aa   |................|
0x2e8c8:   ab ab ab ab ac ac ac ac  ad ad ad ad ae ae ae ae   |................|
0x2e8d8:   af af af af af b0 b0 b0  b0 b1 b1 b1 b1 b1 b2 b2   |................|
0x2e8e8:   b2 b2 b2 b3 b3 b3 b3 b3  b4 b4 b4 b4 b4 b5 b5 b5   |................|
0x2e8f8:   b5 b5 b6 b6 b6 b6 b6 b6  b7 b7 b7 b7 b7 b8 b8 b8   |................|
0x2e908:   b8 b8 b8 b9 b9 b9 b9 b9  b9 ba ba ba ba ba ba bb   |................|
0x2e918:   bb bb bb bb bb bc bc bc  bc bc bc bc bd bd bd bd   |................|
0x2e928:   bd bd be be be be be be  be bf bf bf bf bf bf bf   |................|
0x2e938:   c0 c0 c0 c0 c0 c0 c0 c1  78 00 00 00 00 00 00 00   |........x.......|
0x2e948:   7d 00 00 00 00 00 00 00  87 00 00 00 00 00 00 00   |}...............|
0x2e958:   03 03 02 01 03 03 02 01  3c                        |........<       |
; section: .rodata.str1.1
0x2e960:   3c 33 3e 41 53 56 35 32  32 30 3a 44 4d 41 20 4d   |<3>ASV5220:DMA M|
0x2e970:   41 53 4b 20 45 52 52 4f  52 00 70 78 71 33 70 65   |ASK ERROR.pxq3pe|
0x2e980:   2d 69 73 64 62 00 26 64  65 76 69 63 65 45 78 74   |-isdb.&deviceExt|
0x2e990:   65 6e 73 69 6f 6e 2d 3e  6c 6f 63 6b 00 70 78 71   |ension->lock.pxq|
0x2e9a0:   33 70 65 00 26 70 54 6e  69 6d 2d 3e 6c 6f 63 6b   |3pe.&pTnim->lock|
0x2e9b0:   00 70 78 71 33 70 65 25  75 00 70 78 71 33 70 65   |.pxq3pe%u.pxq3pe|
0x2e9c0:   5f 64 74 76 00 41 53 56  35 32 32 30 00 44 65 76   |_dtv.ASV5220.Dev|
0x2e9d0:   69 63 65 45 6e 61 62 6c  65 00 42 44 41 51 75 65   |iceEnable.BDAQue|
0x2e9e0:   75 65 50 72 6f 63 00 25  73 20 25 30 32 78 00 25   |ueProc.%s %02x.%|
0x2e9f0:   30 32 58 00 41 53 56 35  32 32 30 5f 42 63 61 73   |02X.ASV5220_Bcas|
0x2ea00:   54 68 72 65 61 64 00 44  54 56 5f 50 6f 6c 6c 69   |Thread.DTV_Polli|
0x2ea10:   6e 67 54 68 72 65 61 64  00 46 72 65 71 3d 25 64   |ngThread.Freq=%d|
0x2ea20:   20 43 4e 3d 25 64 2e 25  30 32 64 00 25 30 32 58   | CN=%d.%02d.%02X|
0x2ea30:   00 42 4c 41 43 4b 57 49  44 4f 57 00 30 2e 30 2e   |.BLACKWIDOW.0.0.|
0x2ea40:   31 34 2e 32 00 28 4e 4d  49 31 33 31 5f 54 75 6e   |14.2.(NMI131_Tun|
0x2ea50:   65 72 53 65 74 46 72 65  71 75 65 6e 63 79 29 00   |erSetFrequency).|
0x2ea60:   28 54 44 41 32 30 31 34  78 5f 49 32 43 5f 57 72   |(TDA2014x_I2C_Wr|
0x2ea70:   69 74 65 29 20 46 61 69  6c 65 64 20 21 00 28 54   |ite) Failed !.(T|
0x2ea80:   43 39 30 35 32 32 5f 49  6e 69 74 69 61 6c 69 7a   |C90522_Initializ|
0x2ea90:   61 74 69 6f 6e 29 00 28  54 43 39 30 35 32 32 44   |ation).(TC90522D|
0x2eaa0:   65 6d 6f 64 75 6c 61 74  6f 72 47 65 74 43 4e 29   |emodulatorGetCN)|
0x2eab0:   00 28 54 43 39 30 35 32  32 5f 43 68 65 63 6b 4c   |.(TC90522_CheckL|
0x2eac0:   6f 63 6b 29 00 28 4e 4d  49 31 33 31 5f 49 6e 69   |ock).(NMI131_Ini|
0x2ead0:   74 69 61 6c 69 7a 61 74  69 6f 6e 29 00 46 61 69   |tialization).Fai|
0x2eae0:   6c 65 64 2c 20 62 75 73  20 77 72 69 74 65 2e 2e   |led, bus write..|
0x2eaf0:   2e 0a 00 46 61 69 6c 65  64 2c 20 62 75 73 20 72   |...Failed, bus r|
0x2eb00:   65 61 64 2e 2e 2e 0a 00  30 78 32 34 63 20 28 25   |ead.....0x24c (%|
0x2eb10:   30 38 78 29 0a 00 40 20  25 75 3a 20 43 68 69 70   |08x)..@ %u: Chip|
0x2eb20:   20 49 44 20 28 25 30 38  78 29 0a 00 46 61 69 6c   | ID (%08x)..Fail|
0x2eb30:   65 64 2c 20 62 75 73 20  62 75 72 73 74 20 77 72   |ed, bus burst wr|
0x2eb40:   69 74 65 2e 2e 2e 0a 00  2a 2a 2a 20 4e 6f 74 63   |ite.....*** Notc|
0x2eb50:   68 20 44 69 73 61 62 6c  65 20 2a 2a 2a 0a 00 2a   |h Disable ***..*|
0x2eb60:   2a 2a 20 4e 6f 74 63 68  20 45 6e 61 62 6c 65 20   |** Notch Enable |
0x2eb70:   2a 2a 2a 0a 00 46 61 69  6c 65 64 2c 20 69 6e 63   |***..Failed, inc|
0x2eb80:   6f 72 72 65 63 74 20 63  68 69 70 20 69 64 2e 2e   |orrect chip id..|
0x2eb90:   2e 0a 00 40 20 25 75 3a  20 42 65 67 69 6e 20 62   |...@ %u: Begin b|
0x2eba0:   75 73 20 74 65 73 74 2e  0a 00 40 20 25 75 3a 20   |us test...@ %u: |
0x2ebb0:   42 75 72 73 74 20 77 72  69 74 65 20 64 6f 6e 65   |Burst write done|
0x2ebc0:   2e 0a 00 40 20 25 75 3a  20 42 75 73 20 74 65 73   |...@ %u: Bus tes|
0x2ebd0:   74 20 70 61 73 73 65 64  2e 0a 00 ??               |t passed...?    |
; section: .rodata.str1.8
0x2ebe0:   3c 33 3e 42 75 73 20 4d  61 73 74 65 72 69 6e 67   |<3>Bus Mastering|
0x2ebf0:   20 69 73 20 6e 6f 74 20  65 6e 61 62 6c 65 64 0a   | is not enabled.|
0x2ec00:   00 00 00 00 00 00 00 00  2f 75 73 72 2f 73 72 63   |......../usr/src|
0x2ec10:   2f 6b 65 72 6e 65 6c 73  2f 32 2e 36 2e 33 32 2d   |/kernels/2.6.32-|
0x2ec20:   32 37 39 2e 65 6c 36 2e  78 38 36 5f 36 34 2f 61   |279.el6.x86_64/a|
0x2ec30:   72 63 68 2f 78 38 36 2f  69 6e 63 6c 75 64 65 2f   |rch/x86/include/|
0x2ec40:   61 73 6d 2f 64 6d 61 2d  6d 61 70 70 69 6e 67 2e   |asm/dma-mapping.|
0x2ec50:   68 00 00 00 00 00 00 00  25 30 32 78 2d 25 30 32   |h.......%02x-%02|
0x2ec60:   78 25 30 32 78 2d 25 30  32 78 25 30 32 78 2d 50   |x%02x-%02x%02x-P|
0x2ec70:   45 2d 25 30 32 78 25 30  32 78 25 30 32 78 25 30   |E-%02x%02x%02x%0|
0x2ec80:   32 78 25 30 32 78 25 30  32 78 25 30 32 78 00 00   |2x%02x%02x%02x..|
0x2ec90:   49 53 44 42 2d 54 20 46  72 65 71 75 65 6e 63 79   |ISDB-T Frequency|
0x2eca0:   3d 25 64 20 43 4e 3d 25  64 2e 25 30 32 64 20 42   |=%d CN=%d.%02d B|
0x2ecb0:   45 52 5f 41 3d 25 64 2e  25 30 38 64 20 42 45 52   |ER_A=%d.%08d BER|
0x2ecc0:   5f 42 3d 25 64 2e 25 30  38 64 00 00 00 00 00 00   |_B=%d.%08d......|
0x2ecd0:   49 53 44 42 2d 53 20 43  53 20 46 72 65 71 75 65   |ISDB-S CS Freque|
0x2ece0:   6e 63 79 3d 25 64 20 43  4e 3d 25 64 2e 25 30 32   |ncy=%d CN=%d.%02|
0x2ecf0:   64 20 42 45 52 5f 48 69  3d 25 64 2e 25 30 38 64   |d BER_Hi=%d.%08d|
0x2ed00:   20 42 45 52 5f 4c 6f 77  3d 25 64 2e 25 30 38 64   | BER_Low=%d.%08d|
0x2ed10:   20 50 47 4e 55 4d 42 45  52 3d 25 30 33 64 00 00   | PGNUMBER=%03d..|
0x2ed20:   49 53 44 42 2d 53 20 42  53 20 46 72 65 71 75 65   |ISDB-S BS Freque|
0x2ed30:   6e 63 79 3d 25 64 20 43  4e 3d 25 64 2e 25 30 32   |ncy=%d CN=%d.%02|
0x2ed40:   64 20 42 45 52 5f 48 69  3d 25 64 2e 25 30 38 64   |d BER_Hi=%d.%08d|
0x2ed50:   20 42 45 52 5f 4c 6f 77  3d 25 64 2e 25 30 38 64   | BER_Low=%d.%08d|
0x2ed60:   20 50 47 4e 55 4d 42 45  52 3d 25 30 33 64 00 00   | PGNUMBER=%03d..|
0x2ed70:   28 54 44 41 32 30 31 34  78 5f 54 75 6e 65 72 49   |(TDA2014x_TunerI|
0x2ed80:   6e 69 74 69 61 6c 69 7a  61 74 69 6f 6e 29 20 53   |nitialization) S|
0x2ed90:   75 63 63 65 65 64 65 64  20 21 00 00 00 00 00 00   |ucceeded !......|
0x2eda0:   28 54 44 41 32 30 31 34  78 5f 54 75 6e 65 72 49   |(TDA2014x_TunerI|
0x2edb0:   6e 69 74 69 61 6c 69 7a  61 74 69 6f 6e 29 20 46   |nitialization) F|
0x2edc0:   61 69 6c 65 64 20 21 00  28 4e 4d 49 31 33 31 5f   |ailed !.(NMI131_|
0x2edd0:   54 75 6e 65 72 53 65 74  46 72 65 71 75 65 6e 63   |TunerSetFrequenc|
0x2ede0:   79 29 20 52 46 29 20 3a  20 25 64 00 00 00 00 00   |y) RF) : %d.....|
0x2edf0:   28 54 44 41 32 30 31 34  78 5f 49 32 43 5f 52 65   |(TDA2014x_I2C_Re|
0x2ee00:   61 64 29 20 52 65 61 64  20 46 61 69 6c 65 64 20   |ad) Read Failed |
0x2ee10:   21 00 00 00 00 00 00 00  28 54 44 41 32 30 31 34   |!.......(TDA2014|
0x2ee20:   78 5f 49 32 43 5f 52 65  61 64 29 20 57 72 69 74   |x_I2C_Read) Writ|
0x2ee30:   65 20 46 61 69 6c 65 64  20 21 00 00 00 00 00 00   |e Failed !......|
0x2ee40:   28 4e 4d 49 31 33 31 5f  52 65 61 64 52 65 67 69   |(NMI131_ReadRegi|
0x2ee50:   73 74 65 72 29 20 46 61  69 6c 65 64 20 21 00 00   |ster) Failed !..|
0x2ee60:   28 54 43 39 30 35 32 32  44 65 6d 6f 64 75 6c 61   |(TC90522Demodula|
0x2ee70:   74 6f 72 47 65 74 43 4e  29 20 54 75 6e 65 72 44   |torGetCN) TunerD|
0x2ee80:   65 76 69 63 65 49 44 20  3a 20 30 78 25 78 00 00   |eviceID : 0x%x..|
0x2ee90:   28 54 43 39 30 35 32 32  44 65 6d 6f 64 75 6c 61   |(TC90522Demodula|
0x2eea0:   74 6f 72 47 65 74 43 4e  29 20 63 6e 64 61 74 20   |torGetCN) cndat |
0x2eeb0:   3a 20 25 64 00 00 00 00  28 54 43 39 30 35 32 32   |: %d....(TC90522|
0x2eec0:   44 65 6d 6f 64 75 6c 61  74 6f 72 47 65 74 43 4e   |DemodulatorGetCN|
0x2eed0:   29 20 63 6e 6d 63 20 3a  20 25 64 00 00 00 00 00   |) cnmc : %d.....|
0x2eee0:   28 54 43 39 30 35 32 32  44 65 6d 6f 64 75 6c 61   |(TC90522Demodula|
0x2eef0:   74 6f 72 47 65 74 51 75  61 6c 69 74 79 29 00 00   |torGetQuality)..|
0x2ef00:   28 54 43 39 30 35 32 32  44 65 6d 6f 64 75 6c 61   |(TC90522Demodula|
0x2ef10:   74 6f 72 47 65 74 51 75  61 6c 69 74 79 29 20 54   |torGetQuality) T|
0x2ef20:   75 6e 65 72 44 65 76 69  63 65 49 44 20 3a 20 30   |unerDeviceID : 0|
0x2ef30:   78 25 78 00 00 00 00 00  28 54 43 39 30 35 32 32   |x%x.....(TC90522|
0x2ef40:   44 65 6d 6f 64 75 6c 61  74 6f 72 47 65 74 53 74   |DemodulatorGetSt|
0x2ef50:   72 65 6e 67 74 68 29 20  42 65 72 52 65 67 20 3a   |rength) BerReg :|
0x2ef60:   20 25 64 00 00 00 00 00  28 54 43 39 30 35 32 32   | %d.....(TC90522|
0x2ef70:   5f 43 68 65 63 6b 4c 6f  63 6b 29 20 54 75 6e 65   |_CheckLock) Tune|
0x2ef80:   72 44 65 76 69 63 65 49  44 20 3a 20 30 78 25 78   |rDeviceID : 0x%x|
0x2ef90:   00 00 00 00 00 00 00 00  28 54 43 39 30 35 32 32   |........(TC90522|
0x2efa0:   5f 43 68 65 63 6b 4c 6f  63 6b 29 20 44 61 74 61   |_CheckLock) Data|
0x2efb0:   28 30 78 38 30 29 20 3a  20 30 78 25 78 00 00 00   |(0x80) : 0x%x...|
0x2efc0:   28 54 43 39 30 35 32 32  5f 43 68 65 63 6b 4c 6f   |(TC90522_CheckLo|
0x2efd0:   63 6b 29 20 44 61 74 61  28 30 78 42 30 29 20 3a   |ck) Data(0xB0) :|
0x2efe0:   20 30 78 25 78 00 00 00  28 54 43 39 30 35 32 32   | 0x%x...(TC90522|
0x2eff0:   5f 43 68 65 63 6b 4c 6f  63 6b 29 20 4c 6f 63      |_CheckLock) Loc |
0x2efff:   6b 20 3a 20 30 78 25 78  00                        |k : 0x%x.       |   "k : 0x%x"
0x2f008:   28 4e 4d 49 31 33 31 5f  49 6e 69 74 69 61 6c 69   |(NMI131_Initiali|
0x2f018:   7a 61 74 69 6f 6e 29 20  43 68 69 70 49 44 20 3a   |zation) ChipID :|
0x2f028:   20 30 78 25 78 00 00 00  28 4e 4d 49 31 33 31 5f   | 0x%x...(NMI131_|
0x2f038:   49 6e 69 74 69 61 6c 69  7a 61 74 69 6f 6e 29 20   |Initialization) |
0x2f048:   53 75 63 63 65 65 64 65  64 20 21 00 00 00 00 00   |Succeeded !.....|
0x2f058:   28 4e 4d 49 31 33 31 5f  49 6e 69 74 69 61 6c 69   |(NMI131_Initiali|
0x2f068:   7a 61 74 69 6f 6e 29 20  46 61 69 6c 65 64 20 21   |zation) Failed !|
0x2f078:   00 00 00 00 00 00 00 00  2a 2a 2a 2a 2a 2a 2a 2a   |........********|
0x2f088:   2a 2a 2a 2a 2a 2a 2a 2a  2a 2a 2a 2a 2a 2a 2a 2a   |****************|
0x2f098:   2a 2a 2a 2a 2a 2a 2a 2a  2a 2a 2a 2a 2a 2a 2a 2a   |****************|
0x2f0a8:   2a 2a 2a 2a 00 00 00 00  28 4a 61 70 61 6e 34 78   |****....(Japan4x|
0x2f0b8:   34 54 75 6e 65 72 5f 54  75 6e 65 72 49 6e 69 74   |4Tuner_TunerInit|
0x2f0c8:   69 61 6c 69 7a 61 74 69  6f 6e 29 00 00 00 00 00   |ialization).....|
0x2f0d8:   28 4a 61 70 61 6e 34 78  34 54 75 6e 65 72 5f 54   |(Japan4x4Tuner_T|
0x2f0e8:   75 6e 65 72 49 6e 69 74  69 61 6c 69 7a 61 74 69   |unerInitializati|
0x2f0f8:   6f 6e 29 20 54 75 6e 65  72 44 65 76 69 63 65 49   |on) TunerDeviceI|
0x2f108:   44 20 3a 20 30 78 25 78  00 00 00 00 00 00 00 00   |D : 0x%x........|
0x2f118:   28 4a 61 70 61 6e 34 78  34 54 75 6e 65 72 5f 54   |(Japan4x4Tuner_T|
0x2f128:   75 6e 65 72 49 6e 69 74  69 61 6c 69 7a 61 74 69   |unerInitializati|
0x2f138:   6f 6e 29 20 52 65 73 75  6c 74 20 3a 20 30 78 25   |on) Result : 0x%|
0x2f148:   78 00 00 00 00 00 00 00  45 72 72 6f 72 2c 20 77   |x.......Error, w|
0x2f158:   72 69 74 65 20 72 65 67  69 73 74 65 72 28 33 32   |rite register(32|
0x2f168:   29 2c 20 63 61 6e 27 74  20 61 63 63 65 73 73 20   |), can't access |
0x2f178:   63 68 69 70 73 65 74 0a  00 00 00 00 00 00 00 00   |chipset.........|
0x2f188:   4e 6f 74 63 68 20 63 61  6c 63 75 6c 61 74 69 6f   |Notch calculatio|
0x2f198:   6e 20 69 73 20 6e 6f 74  20 73 75 70 70 6f 72 74   |n is not support|
0x2f1a8:   64 20 6f 6e 20 66 69 78  65 64 20 70 6f 69 6e 74   |d on fixed point|
0x2f1b8:   20 64 72 69 76 65 72 2e  0a 00 00 00 00 00 00 00   | driver.........|
0x2f1c8:   45 72 72 6f 72 2c 20 72  65 61 64 20 72 65 67 69   |Error, read regi|
0x2f1d8:   73 74 65 72 28 33 32 29  2c 20 63 61 6e 27 74 20   |ster(32), can't |
0x2f1e8:   61 63 63 65 73 73 20 63  68 69 70 73 65 74 0a 00   |access chipset..|
0x2f1f8:   46 61 69 6c 65 64 2c 20  62 75 73 20 62 75 72 73   |Failed, bus burs|
0x2f208:   74 20 77 72 69 74 65 2c  20 73 69 7a 65 20 74 6f   |t write, size to|
0x2f218:   6f 20 62 69 67 2e 2e 2e  28 25 64 29 0a 00 00 00   |o big...(%d)....|
0x2f228:   2a 2a 2a 20 4e 6f 74 63  68 20 63 61 6e 6e 6f 74   |*** Notch cannot|
0x2f238:   20 77 6f 72 6b 20 6f 6e  20 46 4d 2e 20 2a 2a 2a   | work on FM. ***|
0x2f248:   0a 00 00 00 00 00 00 00  40 20 25 75 3a 20 4d 61   |........@ %u: Ma|
0x2f258:   78 2e 20 62 75 73 20 74  65 73 74 20 6c 65 6e 67   |x. bus test leng|
0x2f268:   74 68 20 69 73 20 30 78  33 63 2e 0a 00 00 00 00   |th is 0x3c......|
0x2f278:   40 20 25 75 3a 20 42 75  73 20 74 65 73 74 20 66   |@ %u: Bus test f|
0x2f288:   61 69 6c 65 64 20 61 74  20 69 20 3d 20 25 64 20   |ailed at i = %d |
0x2f298:   65 78 70 65 63 74 65 64  20 3d 20 25 64 2c 20 76   |expected = %d, v|
0x2f2a8:   61 6c 20 3d 20 25 64 2e  0a 00 ??                  |al = %d...?     |
; section: .modinfo
0x2f2c0:   70 61 72 6d 3d 76 69 64  5f 6c 69 6d 69 74 3a 63   |parm=vid_limit:c|
0x2f2d0:   61 70 74 75 72 65 20 6d  65 6d 6f 72 79 20 6c 69   |apture memory li|
0x2f2e0:   6d 69 74 20 69 6e 20 6d  65 67 61 62 79 74 65 73   |mit in megabytes|
0x2f2f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f300:   70 61 72 6d 74 79 70 65  3d 76 69 64 5f 6c 69 6d   |parmtype=vid_lim|
0x2f310:   69 74 3a 69 6e 74 00 00  00 00 00 00 00 00 00 00   |it:int..........|
0x2f320:   70 61 72 6d 3d 69 72 71  5f 64 65 62 75 67 3a 65   |parm=irq_debug:e|
0x2f330:   6e 61 62 6c 65 20 64 65  62 75 67 20 6d 65 73 73   |nable debug mess|
0x2f340:   61 67 65 73 20 5b 49 52  51 20 68 61 6e 64 6c 65   |ages [IRQ handle|
0x2f350:   72 5d 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |r]..............|
0x2f360:   70 61 72 6d 74 79 70 65  3d 69 72 71 5f 64 65 62   |parmtype=irq_deb|
0x2f370:   75 67 3a 69 6e 74 00 6c  69 63 65 6e 73 65 3d 47   |ug:int.license=G|
0x2f380:   50 4c 00 61 75 74 68 6f  72 3d 00 00 00 00 00 00   |PL.author=......|
0x2f390:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f3a0:   64 65 73 63 72 69 70 74  69 6f 6e 3d 50 58 2d 51   |description=PX-Q|
0x2f3b0:   33 50 45 20 64 72 69 76  65 72 20 6d 6f 64 75 6c   |3PE driver modul|
0x2f3c0:   65 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |e...............|
0x2f3d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f3e0:   73 72 63 76 65 72 73 69  6f 6e 3d 41 36 45 32 41   |srcversion=A6E2A|
0x2f3f0:   32 36 42 39 34 42 46 34  38 32 32 34 36 41 42 32   |26B94BF482246AB2|
0x2f400:   33 36 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |36..............|
0x2f410:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f420:   61 6c 69 61 73 3d 70 63  69 3a 76 30 30 30 30 31   |alias=pci:v00001|
0x2f430:   38 38 42 64 30 30 30 30  35 32 32 30 73 76 30 30   |88Bd00005220sv00|
0x2f440:   30 30 30 42 30 36 73 64  30 30 30 30 30 30 30 32   |000B06sd00000002|
0x2f450:   62 63 2a 73 63 2a 69 2a  00 64 65 70 65 6e 64 73   |bc*sc*i*.depends|
0x2f460:   3d 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |=...............|
0x2f470:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f480:   76 65 72 6d 61 67 69 63  3d 32 2e 36 2e 33 32 2d   |vermagic=2.6.32-|
0x2f490:   32 37 39 2e 65 6c 36 2e  78 38 36 5f 36 34 20 53   |279.el6.x86_64 S|
0x2f4a0:   4d 50 20 6d 6f 64 5f 75  6e 6c 6f 61 64 20 6d 6f   |MP mod_unload mo|
0x2f4b0:   64 76 65 72 73 69 6f 6e  73 20 00 ??               |dversions .?    |
; section: __param
0x2f4c0:   00 00 00 00 00 00 00 00  a4 01 00 00 00 00 00 00   |................|
0x2f4d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f4e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f4f0:   a4 01 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f500:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f510:   00                                                 |.               |
; section: __mcount_loc
0x2f510:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f520:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f530:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f540:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f550:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f560:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f570:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f580:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f590:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f5a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f5b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f5c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f5d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f5e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f5f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f600:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f610:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f620:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f630:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f640:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f650:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f660:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f670:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f680:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f690:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f6a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f6b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f6c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f6d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f6e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f6f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f700:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f710:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f720:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f730:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f740:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f750:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f760:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f770:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f780:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f790:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f7a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f7b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f7c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f7d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f7e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f7f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f800:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f810:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f820:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f830:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f840:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f850:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f860:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f870:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f880:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f890:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f8a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f8b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f8c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f8d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f8e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f8f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f900:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f910:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f920:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f930:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f940:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f950:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f960:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f970:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f980:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f990:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f9a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f9b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f9c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f9d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f9e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f9f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fa00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fa10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fa20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fa30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fa40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fa50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fa60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fa70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fa80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fa90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2faa0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fab0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fac0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fad0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fae0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2faf0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fb00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fb10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fb20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fb30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fb40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fb50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fb60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fb70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fb80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fb90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fba0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fbb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fbc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fbd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fbe0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fbf0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fc00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fc10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fc20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fc30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fc40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fc50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fc60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fc70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fc80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fc90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fca0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fcb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fcc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fcd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fce0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fcf0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fd00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fd10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fd20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fd30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fd40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fd50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fd60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fd70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fd80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fd90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fda0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fdb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fdc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fdd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fde0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fdf0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fe00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fe10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fe20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fe30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fe40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fe50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fe60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fe70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fe80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fe90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fea0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2feb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fec0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fed0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fee0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fef0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ff00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ff10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ff20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ff30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ff40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ff50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ff60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ff70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ff80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ff90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ffa0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ffb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ffc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ffd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ffe0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2fff0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30000:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30010:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30020:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30030:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30040:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30050:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30060:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30070:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30080:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30090:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x300a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x300b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x300c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x300d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x300e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x300f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30100:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30110:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30120:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30130:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30140:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30150:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30160:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30170:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30180:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30190:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x301a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x301b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x301c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x301d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x301e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x301f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30200:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30210:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30220:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30230:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30240:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30250:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30260:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30270:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30280:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30290:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x302a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x302b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x302c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x302d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x302e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x302f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30300:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30310:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30320:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30330:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30340:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30350:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30360:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30370:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30380:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30390:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x303a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x303b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x303c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x303d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x303e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x303f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30400:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30410:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30420:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30430:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30440:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30450:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30460:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30470:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30480:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30490:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x304a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x304b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x304c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x304d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x304e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x304f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30500:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30510:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30520:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30530:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30540:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30550:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30560:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30570:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30580:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30590:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x305a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x305b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x305c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x305d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x305e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x305f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30600:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30610:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30620:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30630:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30640:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30650:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30660:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30670:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30680:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30690:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x306a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x306b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x306c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x306d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x306e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x306f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30700:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30710:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30720:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30730:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30740:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30750:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30760:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30770:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30780:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30790:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x307a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x307b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x307c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x307d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x307e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x307f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30800:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30810:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30820:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30830:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30840:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30850:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30860:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30870:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30880:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30890:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x308a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x308b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x308c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x308d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x308e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x308f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30900:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30910:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30920:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30930:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30940:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30950:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30960:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30970:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30980:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30990:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x309a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x309b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x309c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x309d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x309e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x309f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30a00:   00                                                 |.               |
; section: .parainstructions
0x30a00:   00 00 00 00 00 00 00 00  2e 07 01 00 06            |.............   |
; section: .rheldata
0x30a0c:   06 03 00 00 ??                                     |....?           |
; section: __versions
0x30a20:   40 23 52 14 00 00 00 00  6d 6f 64 75 6c 65 5f 6c   |@#R.....module_l|
0x30a30:   61 79 6f 75 74 00 00 00  00 00 00 00 00 00 00 00   |ayout...........|
0x30a40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30a50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30a60:   19 0c e8 42 00 00 00 00  63 64 65 76 5f 64 65 6c   |...B....cdev_del|
0x30a70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30a80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30a90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30aa0:   5c a4 34 5a 00 00 00 00  5f 5f 6b 6d 61 6c 6c 6f   |\.4Z....__kmallo|
0x30ab0:   63 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |c...............|
0x30ac0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30ad0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30ae0:   63 9f 5a c4 00 00 00 00  63 64 65 76 5f 69 6e 69   |c.Z.....cdev_ini|
0x30af0:   74 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |t...............|
0x30b00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30b10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30b20:   8f 68 ee d6 00 00 00 00  76 6d 61 6c 6c 6f 63 00   |.h......vmalloc.|
0x30b30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30b40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30b50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30b60:   91 fe 80 69 00 00 00 00  70 61 72 61 6d 5f 67 65   |...i....param_ge|
0x30b70:   74 5f 69 6e 74 00 00 00  00 00 00 00 00 00 00 00   |t_int...........|
0x30b80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30b90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30ba0:   15 79 03 d2 00 00 00 00  64 65 76 5f 73 65 74 5f   |.y......dev_set_|
0x30bb0:   64 72 76 64 61 74 61 00  00 00 00 00 00 00 00 00   |drvdata.........|
0x30bc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30bd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30be0:   1f 11 2e fa 00 00 00 00  73 6c 61 62 5f 62 75 66   |........slab_buf|
0x30bf0:   66 65 72 5f 73 69 7a 65  00 00 00 00 00 00 00 00   |fer_size........|
0x30c00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30c10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30c20:   a2 cb 91 d6 00 00 00 00  6d 61 6c 6c 6f 63 5f 73   |........malloc_s|
0x30c30:   69 7a 65 73 00 00 00 00  00 00 00 00 00 00 00 00   |izes............|
0x30c40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30c50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30c60:   82 06 a3 00 00 00 00 00  70 63 69 5f 64 69 73 61   |........pci_disa|
0x30c70:   62 6c 65 5f 64 65 76 69  63 65 00 00 00 00 00 00   |ble_device......|
0x30c80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30c90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30ca0:   5f 3c 92 cf 00 00 00 00  6e 6f 5f 6c 6c 73 65 65   |_<......no_llsee|
0x30cb0:   6b 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |k...............|
0x30cc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30cd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30ce0:   27 27 5e 10 00 00 00 00  5f 5f 74 72 61 63 65 70   |''^.....__tracep|
0x30cf0:   6f 69 6e 74 5f 6b 6d 61  6c 6c 6f 63 00 00 00 00   |oint_kmalloc....|
0x30d00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30d10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30d20:   37 15 dc 7e 00 00 00 00  64 65 76 69 63 65 5f 64   |7..~....device_d|
0x30d30:   65 73 74 72 6f 79 00 00  00 00 00 00 00 00 00 00   |estroy..........|
0x30d40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30d50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30d60:   03 47 36 d3 00 00 00 00  78 38 36 5f 64 6d 61 5f   |.G6.....x86_dma_|
0x30d70:   66 61 6c 6c 62 61 63 6b  5f 64 65 76 00 00 00 00   |fallback_dev....|
0x30d80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30d90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30da0:   c3 b9 02 01 00 00 00 00                            |........        |
0x30da8:   70 63 69 5f 72 65 6c 65  61 73 65 5f 72 65 67 69   |pci_release_regi|   "pci_release_regions"
0x30db8:   6f 6e 73 00                                        |ons.            |
0x30dbc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30dcc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30ddc:   00 00 00 00 01 83 75 03  00 00 00 00 6d 75 74 65   |......u.....mute|
0x30dec:   78 5f 75 6e 6c 6f 63 6b  00 00 00 00 00 00 00 00   |x_unlock........|
0x30dfc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30e0c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30e1c:   00 00 00 00 5e e1 85 74  00 00 00 00 75 6e 72 65   |....^..t....unre|
0x30e2c:   67 69 73 74 65 72 5f 63  68 72 64 65 76 5f 72 65   |gister_chrdev_re|
0x30e3c:   67 69 6f 6e 00 00 00 00  00 00 00 00 00 00 00 00   |gion............|
0x30e4c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30e5c:   00 00 00 00 97 82 9e 99  00 00 00 00 76 66 72 65   |............vfre|
0x30e6c:   65 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |e...............|
0x30e7c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30e8c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30e9c:   00 00 00 00 25 4b 96 ff  00 00 00 00 70 61 72 61   |....%K......para|
0x30eac:   6d 5f 73 65 74 5f 69 6e  74 00 00 00 00 00 00 00   |m_set_int.......|
0x30ebc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30ecc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30edc:   00 00 00 00 f5 5a 2c 3c  00 00 00 00 73 70 72 69   |.....Z,<....spri|
0x30eec:   6e 74 66 00 00 00 00 00  00 00 00 00 00 00 00 00   |ntf.............|
0x30efc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30f0c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30f1c:   00 00 00 00 68 c2 11 7d  00 00 00 00 6a 69 66 66   |....h..}....jiff|
0x30f2c:   69 65 73 00 00 00 00 00  00 00 00 00 00 00 00 00   |ies.............|
0x30f3c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30f4c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30f5c:   00 00 00 00 84 c1 c7 ff  00 00 00 00 5f 5f 69 6e   |............__in|
0x30f6c:   69 74 5f 77 61 69 74 71  75 65 75 65 5f 68 65 61   |it_waitqueue_hea|
0x30f7c:   64 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |d...............|
0x30f8c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30f9c:   00 00 00 00 52 e3 ef 1c  00 00 00 00 77 61 69 74   |....R.......wait|
0x30fac:   5f 66 6f 72 5f 63 6f 6d  70 6c 65 74 69 6f 6e 00   |_for_completion.|
0x30fbc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30fcc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x30fdc:   00 00 00 00 63 90 55 af  00 00 00 00 70 63 69 5f   |....c.U.....pci_|
0x30fec:   73 65 74 5f 6d 61 73 74  65 72 00 00 00 00 00 00   |set_master......|
0x30ffc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3100c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3101c:   00 00 00 00 ff dc 0b de  00 00 00 00 6d 65 6d 73   |............mems|
0x3102c:   65 74 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |et..............|
0x3103c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3104c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3105c:   00 00 00 00 bd 19 10 9f  00 00 00 00 70 63 69 5f   |............pci_|
0x3106c:   73 65 74 5f 64 6d 61 5f  6d 61 73 6b 00 00 00 00   |set_dma_mask....|
0x3107c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3108c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3109c:   00 00 00 00 ae cd 5c f8  00 00 00 00 6b 6d 65 6d   |......\.....kmem|
0x310ac:   5f 63 61 63 68 65 5f 61  6c 6c 6f 63 5f 6e 6f 74   |_cache_alloc_not|
0x310bc:   72 61 63 65 00 00 00 00  00 00 00 00 00 00 00 00   |race............|
0x310cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x310dc:   00 00 00 00 65 50 1a 62  00 00 00 00 70 63 69 5f   |....eP.b....pci_|
0x310ec:   72 65 73 74 6f 72 65 5f  73 74 61 74 65 00 00 00   |restore_state...|
0x310fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3110c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3111c:   00 00 00 00 8e 9a 7f 74  00 00 00 00 70 63 69 5f   |.......t....pci_|
0x3112c:   69 6f 75 6e 6d 61 70 00  00 00 00 00 00 00 00 00   |iounmap.........|
0x3113c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3114c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3115c:   00 00 00 00 39 90 f7 4b  00 00 00 00 5f 5f 6d 75   |....9..K....__mu|
0x3116c:   74 65 78 5f 69 6e 69 74  00 00 00 00 00 00 00 00   |tex_init........|
0x3117c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3118c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3119c:   00 00 00 00 63 73 14 ea  00 00 00 00 70 72 69 6e   |....cs......prin|
0x311ac:   74 6b 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |tk..............|
0x311bc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x311cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x311dc:   00 00 00 00 b6 c5 08 cf  00 00 00 00 6b 74 68 72   |............kthr|
0x311ec:   65 61 64 5f 73 74 6f 70  00 00 00 00 00 00 00 00   |ead_stop........|
0x311fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3120c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3121c:   00 00 00 00 66 a2 f8 85  00 00 00 00 63 6f 70 79   |....f.......copy|
0x3122c:   5f 74 6f 5f 75 73 65 72  00 00 00 00 00 00 00 00   |_to_user........|
0x3123c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3124c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3125c:   00 00 00 00 bc bf c9 7e  00 00 00 00 73 74 72 6e   |.......~....strn|
0x3126c:   63 70 79 00 00 00 00 00  00 00 00 00 00 00 00 00   |cpy.............|
0x3127c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3128c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3129c:   00 00 00 00 9a 0f 39 b4  00 00 00 00 6d 63 6f 75   |......9.....mcou|
0x312ac:   6e 74 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |nt..............|
0x312bc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x312cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x312dc:   00 00 00 00 89 52 30 16  00 00 00 00 77 61 72 6e   |.....R0.....warn|
0x312ec:   5f 73 6c 6f 77 70 61 74  68 5f 6e 75 6c 6c 00 00   |_slowpath_null..|
0x312fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3130c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3131c:   00 00 00 00 95 a7 e8 fe  00 00 00 00 6d 75 74 65   |............mute|
0x3132c:   78 5f 6c 6f 63 6b 00 00  00 00 00 00 00 00 00 00   |x_lock..........|
0x3133c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3134c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3135c:   00 00 00 00 40 af 8c 74  00 00 00 00 64 6f 77 6e   |....@..t....down|
0x3136c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3137c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3138c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3139c:   00 00 00 00 7d cf d2 02  00 00 00 00 64 65 76 69   |....}.......devi|
0x313ac:   63 65 5f 63 72 65 61 74  65 00 00 00 00 00 00 00   |ce_create.......|
0x313bc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x313cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x313dc:   00 00 00 00 c7 6d 9c 85  00 00 00 00 72 65 71 75   |.....m......requ|
0x313ec:   65 73 74 5f 74 68 72 65  61 64 65 64 5f 69 72 71   |est_threaded_irq|
0x313fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3140c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3141c:   00 00 00 00 ca bd d1 a6  00 00 00 00 63 64 65 76   |............cdev|
0x3142c:   5f 61 64 64 00 00 00 00  00 00 00 00 00 00 00 00   |_add............|
0x3143c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3144c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3145c:   00 00 00 00 4e 4f 76 78  00 00 00 00 70 76 5f 69   |....NOvx....pv_i|
0x3146c:   72 71 5f 6f 70 73 00 00  00 00 00 00 00 00 00 00   |rq_ops..........|
0x3147c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3148c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3149c:   00 00 00 00 e6 53 b4 84  00 00 00 00 70 63 69 5f   |.....S......pci_|
0x314ac:   62 75 73 5f 72 65 61 64  5f 63 6f 6e 66 69 67 5f   |bus_read_config_|
0x314bc:   77 6f 72 64 00 00 00 00  00 00 00 00 00 00 00 00   |word............|
0x314cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x314dc:   00 00 00 00 cb f6 fd f0  00 00 00 00 5f 5f 73 74   |............__st|
0x314ec:   61 63 6b 5f 63 68 6b 5f  66 61 69 6c 00 00 00 00   |ack_chk_fail....|
0x314fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3150c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3151c:   00 00 00 00 38 7c 6c 26  00 00 00 00 77 61 6b 65   |....8|l&....wake|
0x3152c:   5f 75 70 5f 70 72 6f 63  65 73 73 00 00 00 00 00   |_up_process.....|
0x3153c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3154c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3155c:   00 00 00 00 35 c5 f7 68  00 00 00 00 70 63 69 5f   |....5..h....pci_|
0x3156c:   75 6e 72 65 67 69 73 74  65 72 5f 64 72 69 76 65   |unregister_drive|
0x3157c:   72 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |r...............|
0x3158c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3159c:   00 00 00 00 fe 05 50 cc  00 00 00 00 6d 73 6c 65   |......P.....msle|
0x315ac:   65 70 5f 69 6e 74 65 72  72 75 70 74 69 62 6c 65   |ep_interruptible|
0x315bc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x315cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x315dc:   00 00 00 00 f7 82 ff f4  00 00 00 00 70 63 69 5f   |............pci_|
0x315ec:   73 65 74 5f 70 6f 77 65  72 5f 73 74 61 74 65 00   |set_power_state.|
0x315fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3160c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3161c:   00 00 00 00 6f 5f 96 d2  00 00 00 00 6b 74 68 72   |....o_......kthr|
0x3162c:   65 61 64 5f 73 68 6f 75  6c 64 5f 73 74 6f 70 00   |ead_should_stop.|
0x3163c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3164c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3165c:   00 00 00 00 ba 0c 7a 03  00 00 00 00 6b 66 72 65   |......z.....kfre|
0x3166c:   65 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |e...............|
0x3167c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3168c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3169c:   00 00 00 00 ce e3 85 c1  00 00 00 00 6b 74 68 72   |............kthr|
0x316ac:   65 61 64 5f 63 72 65 61  74 65 00 00 00 00 00 00   |ead_create......|
0x316bc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x316cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x316dc:   00 00 00 00 64 8c 6c 23  00 00 00 00 6d 65 6d 63   |....d.l#....memc|
0x316ec:   70 79 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |py..............|
0x316fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3170c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3171c:   00 00 00 00 30 0f 09 6d  00 00 00 00 70 63 69 5f   |....0..m....pci_|
0x3172c:   72 65 71 75 65 73 74 5f  72 65 67 69 6f 6e 73 00   |request_regions.|
0x3173c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3174c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3175c:   00 00 00 00 f1 99 18 3f  00 00 00 00 75 70 00 00   |.......?....up..|
0x3176c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3177c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3178c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3179c:   00 00 00 00 f3 b9 07 5f  00 00 00 00 5f 5f 70 63   |......._....__pc|
0x317ac:   69 5f 72 65 67 69 73 74  65 72 5f 64 72 69 76 65   |i_register_drive|
0x317bc:   72 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |r...............|
0x317cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x317dc:   00 00 00 00 02 b0 6b e0  00 00 00 00 63 6c 61 73   |......k.....clas|
0x317ec:   73 5f 64 65 73 74 72 6f  79 00 00 00 00 00 00 00   |s_destroy.......|
0x317fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3180c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3181c:   00 00 00 00 3a bd 56 e4  00 00 00 00 63 6f 6d 70   |....:.V.....comp|
0x3182c:   6c 65 74 65 00 00 00 00  00 00 00 00 00 00 00 00   |lete............|
0x3183c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3184c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3185c:   00 00 00 00 f6 bd 61 39  00 00 00 00 70 63 69 5f   |......a9....pci_|
0x3186c:   63 68 6f 6f 73 65 5f 73  74 61 74 65 00 00 00 00   |choose_state....|
0x3187c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3188c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3189c:   00 00 00 00 c9 34 ae 74  00 00 00 00 70 63 69 5f   |.....4.t....pci_|
0x318ac:   69 6f 6d 61 70 00 00 00  00 00 00 00 00 00 00 00   |iomap...........|
0x318bc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x318cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x318dc:   00 00 00 00 91 dd 2a a1  00 00 00 00 70 63 69 5f   |......*.....pci_|
0x318ec:   65 6e 61 62 6c 65 5f 64  65 76 69 63 65 00 00 00   |enable_device...|
0x318fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3190c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3191c:   00 00 00 00 65 41 65 a2  00 00 00 00 5f 5f 63 6c   |....eAe.....__cl|
0x3192c:   61 73 73 5f 63 72 65 61  74 65 00 00 00 00 00 00   |ass_create......|
0x3193c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3194c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3195c:   00 00 00 00 00 b5 02 33  00 00 00 00 63 6f 70 79   |.......3....copy|
0x3196c:   5f 66 72 6f 6d 5f 75 73  65 72 00 00 00 00 00 00   |_from_user......|
0x3197c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3198c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3199c:   00 00 00 00 26 bb 4c 95  00 00 00 00 76 73 70 72   |....&.L.....vspr|
0x319ac:   69 6e 74 66 00 00 00 00  00 00 00 00 00 00 00 00   |intf............|
0x319bc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x319cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x319dc:   00 00 00 00 3c a4 92 0a  00 00 00 00 64 65 76 5f   |....<.......dev_|
0x319ec:   67 65 74 5f 64 72 76 64  61 74 61 00 00 00 00 00   |get_drvdata.....|
0x319fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31a0c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31a1c:   00 00 00 00 d0 6b 7d 9e  00 00 00 00 5f 5f 75 64   |.....k}.....__ud|
0x31a2c:   65 6c 61 79 00 00 00 00  00 00 00 00 00 00 00 00   |elay............|
0x31a3c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31a4c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31a5c:   00 00 00 00 d2 81 96 6e  00 00 00 00 64 6d 61 5f   |.......n....dma_|
0x31a6c:   6f 70 73 00 00 00 00 00  00 00 00 00 00 00 00 00   |ops.............|
0x31a7c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31a8c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31a9c:   00 00 00 00 9e 7c 53 29  00 00 00 00 61 6c 6c 6f   |.....|S)....allo|
0x31aac:   63 5f 63 68 72 64 65 76  5f 72 65 67 69 6f 6e 00   |c_chrdev_region.|
0x31abc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31acc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31adc:   00 00 00 00 d8 ab 0d f2  00 00 00 00 66 72 65 65   |............free|
0x31aec:   5f 69 72 71 00 00 00 00  00 00 00 00 00 00 00 00   |_irq............|
0x31afc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31b0c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31b1c:   00 00 00 00 fa 16 7f 71  00 00 00 00 70 63 69 5f   |.......q....pci_|
0x31b2c:   73 61 76 65 5f 73 74 61  74 65 00 00 00 00 00 00   |save_state......|
0x31b3c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31b4c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31b5c:   00 00 00 00 00                                     |.....           |
; section: .data
0x31b60:   00 00 00 00 01 00 00 00  02 00 00 00 03 00 00 00   |................|
0x31b70:   04 00 00 00 05 00 00 00  06 00 00 00 07 00 00 00   |................|
0x31b80:   00 00 00 00 00 00 00 00  01 00 00 00 01 00 00 00   |................|
0x31b90:   00 00 00 00 00 00 00 00  01 00 00 00 01 00 00 00   |................|
0x31ba0:   08 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31bb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31bc0:   00 00 00 00 00 00 00 00  78 f2 b2 00 00 00 00 00   |........x.......|
0x31bd0:   01 00 00 00 00 00 00 00  50 88 b3 00 00 00 00 00   |........P.......|
0x31be0:   02 00 00 00 00 00 00 00  28 1e b4 00 00 00 00 00   |........(.......|
0x31bf0:   03 00 00 00 00 00 00 00  00 b4 b4 00 00 00 00 00   |................|
0x31c00:   04 00 00 00 00 00 00 00  d8 49 b5 00 00 00 00 00   |.........I......|
0x31c10:   05 00 00 00 00 00 00 00  b0 df b5 00 00 00 00 00   |................|
0x31c20:   06 00 00 00 00 00 00 00  88 75 b6 00 00 00 00 00   |.........u......|
0x31c30:   07 00 00 00 00 00 00 00  60 0b b7 00 00 00 00 00   |........`.......|
0x31c40:   08 00 00 00 00 00 00 00  38 a1 b7 00 00 00 00 00   |........8.......|
0x31c50:   09 00 00 00 00 00 00 00  10 37 b8 00 00 00 00 00   |.........7......|
0x31c60:   0a 00 00 00 00 00 00 00  e8 cc b8 00 00 00 00 00   |................|
0x31c70:   0b 00 00 00 00 00 00 00  c0 62 b9 00 00 00 00 00   |.........b......|
0x31c80:   0c 00 00 00 00 00 00 00  b8 8b bb 00 00 00 00 00   |................|
0x31c90:   0d 00 00 00 00 00 00 00  f8 27 bc 00 00 00 00 00   |.........'......|
0x31ca0:   0e 00 00 00 00 00 00 00  38 c4 bc 00 00 00 00 00   |........8.......|
0x31cb0:   0f 00 00 00 00 00 00 00  78 60 bd 00 00 00 00 00   |........x`......|
0x31cc0:   10 00 00 00 00 00 00 00  b8 fc bd 00 00 00 00 00   |................|
0x31cd0:   11 00 00 00 00 00 00 00  f8 98 be 00 00 00 00 00   |................|
0x31ce0:   12 00 00 00 00 00 00 00  38 35 bf 00 00 00 00 00   |........85......|
0x31cf0:   13 00 00 00 00 00 00 00  78 d1 bf 00 00 00 00 00   |........x.......|
0x31d00:   14 00 00 00 00 00 00 00  b8 6d c0 00 00 00 00 00   |.........m......|
0x31d10:   15 00 00 00 00 00 00 00  f8 09 c1 00 00 00 00 00   |................|
0x31d20:   16 00 00 00 00 00 00 00  38 a6 c1 00 00 00 00 00   |........8.......|
0x31d30:   17 00 00 00 00 00 00 00  78 42 c2 00 00 00 00 00   |........xB......|
0x31d40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31d50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x31d60:   00 00 00 00 00 00 00 00  d7 6b 01 00 00 00 00 00   |.........k......|
0x31d70:   01 00 00 00 00 00 00 00  47 83 01 00 00 00 00 00   |........G.......|
0x31d80:   02 00 00 00 00 00 00 00  b7 9a 01 00 00 00 00 00   |................|
0x31d90:   03 00 00 00 00 00 00 00  27 b2 01 00 00 00 00 00   |........'.......|
0x31da0:   04 00 00 00 00 00 00 00  97 c9 01 00 00 00 00 00   |................|
0x31db0:   05 00 00 00 00 00 00 00  07 e1 01 00 00 00 00 00   |................|
0x31dc0:   06 00 00 00 00 00 00 00  77 f8 01 00 00 00 00 00   |........w.......|
0x31dd0:   07 00 00 00 00 00 00 00  e7 0f 02 00 00 00 00 00   |................|
0x31de0:   08 00 00 00 00 00 00 00  57 27 02 00 00 00 00 00   |........W'......|
0x31df0:   09 00 00 00 00 00 00 00  c7 3e 02 00 00 00 00 00   |.........>......|
0x31e00:   0a 00 00 00 00 00 00 00  37 56 02 00 00 00 00 00   |........7V......|
0x31e10:   0b 00 00 00 00 00 00 00  a7 6d 02 00 00 00 00 00   |.........m......|
0x31e20:   0c 00 00 00 00 00 00 00  e7 8c 02 00 00 00 00 00   |................|
0x31e30:   0d 00 00 00 00 00 00 00  57 a4 02 00 00 00 00 00   |........W.......|
0x31e40:   0e 00 00 00 00 00 00 00  c7 bb 02 00 00 00 00 00   |................|
0x31e50:   0f 00 00 00 00 00 00 00  37 d3 02 00 00 00 00 00   |........7.......|
0x31e60:   10 00 00 00 00 00 00 00  a7 ea 02 00 00 00 00 00   |................|
0x31e70:   11 00 00 00 00 00 00 00  47 fa 02 00 00 00 00 00   |........G.......|
0x31e80:   12 00 00 00 00 00 00 00  b7 11 03 00 00 00 00 00   |................|
0x31e90:   13 00 00 00 00 00 00 00  27 29 03 00 00 00 00 00   |........')......|
0x31ea0:   14 00 00 00 00 00 00 00  97 40 03 00 00 00 00 00   |.........@......|
0x31eb0:   15 00 00 00 00 00 00 00  07 58 03 00 00 00 00 00   |.........X......|
0x31ec0:   16 00 00 00 00 00 00 00  77 6f 03 00 00 00 00 00   |........wo......|
0x31ed0:   17 00 00 00 00 00 00 00  e7 86 03 00 00 00 00 00   |................|
0x31ee0:   18 00 00 00 00 00 00 00  57 9e 03 00 00 00 00 00   |........W.......|
0x31ef0:   19 00 00 00 00 00 00 00  c7 b5 03 00 00 00 00 00   |................|
0x31f00:   1a 00 00 00 00 00 00 00  37 cd 03 00 00 00 00 00   |........7.......|
0x31f10:   1b 00 00 00 00 00 00 00  a7 e4 03 00 00 00 00 00   |................|
0x31f20:   1c 00 00 00 00 00 00 00  17 fc 03 00 00 00 00 00   |................|
0x31f30:   1d 00 00 00 00 00 00 00  87 13 04 00 00 00 00 00   |................|
0x31f40:   1e 00 00 00 00 00 00 00  f7 2a 04 00 00 00 00 00   |.........*......|
0x31f50:   1f 00 00 00 00 00 00 00  67 42 04 00 00 00 00 00   |........gB......|
0x31f60:   20 00 00 00 00 00 00 00  d7 59 04 00 00 00 00 00   | ........Y......|
0x31f70:   21 00 00 00 00 00 00 00  47 71 04 00 00 00 00 00   |!.......Gq......|
0x31f80:   22 00 00 00 00 00 00 00  b7 88 04 00 00 00 00 00   |"...............|
0x31f90:   23 00 00 00 00 00 00 00  27 a0 04 00 00 00 00 00   |#.......'.......|
0x31fa0:   24 00 00 00 00 00 00 00  97 b7 04 00 00 00 00 00   |$...............|
0x31fb0:   25 00 00 00 00 00 00 00  07 cf 04 00 00 00 00 00   |%...............|
0x31fc0:   26 00 00 00 00 00 00 00  77 e6 04 00 00 00 00 00   |&.......w.......|
0x31fd0:   27 00 00 00 00 00 00 00  e7 fd 04 00 00 00 00 00   |'...............|
0x31fe0:   28 00 00 00 00 00 00 00  57 15 05 00 00 00 00 00   |(.......W.......|
0x31ff0:   29 00 00 00 00 00 00 00  c7 2c 05 00 00 00 00 00   |)........,......|
0x32000:   2a 00 00 00 00 00 00 00  37 44 05 00 00 00 00 00   |*.......7D......|
0x32010:   2b 00 00 00 00 00 00 00  a7 5b 05 00 00 00 00 00   |+........[......|
0x32020:   2c 00 00 00 00 00 00 00  17 73 05 00 00 00 00 00   |,........s......|
0x32030:   2d 00 00 00 00 00 00 00  87 8a 05 00 00 00 00 00   |-...............|
0x32040:   2e 00 00 00 00 00 00 00  f7 a1 05 00 00 00 00 00   |................|
0x32050:   2f 00 00 00 00 00 00 00  67 b9 05 00 00 00 00 00   |/.......g.......|
0x32060:   30 00 00 00 00 00 00 00  d7 d0 05 00 00 00 00 00   |0...............|
0x32070:   31 00 00 00 00 00 00 00  47 e8 05 00 00 00 00 00   |1.......G.......|
0x32080:   32 00 00 00 00 00 00 00  b7 ff 05 00 00 00 00 00   |2...............|
0x32090:   33 00 00 00 00 00 00 00  27 17 06 00 00 00 00 00   |3.......'.......|
0x320a0:   34 00 00 00 00 00 00 00  97 2e 06 00 00 00 00 00   |4...............|
0x320b0:   35 00 00 00 00 00 00 00  07 46 06 00 00 00 00 00   |5........F......|
0x320c0:   36 00 00 00 00 00 00 00  77 5d 06 00 00 00 00 00   |6.......w]......|
0x320d0:   37 00 00 00 00 00 00 00  e7 74 06 00 00 00 00 00   |7........t......|
0x320e0:   38 00 00 00 00 00 00 00  57 8c 06 00 00 00 00 00   |8.......W.......|
0x320f0:   39 00 00 00 00 00 00 00  c7 a3 06 00 00 00 00 00   |9...............|
0x32100:   3a 00 00 00 00 00 00 00  37 bb 06 00 00 00 00 00   |:.......7.......|
0x32110:   3b 00 00 00 00 00 00 00  a7 d2 06 00 00 00 00 00   |;...............|
0x32120:   3c 00 00 00 00 00 00 00  17 ea 06 00 00 00 00 00   |<...............|
0x32130:   3d 00 00 00 00 00 00 00  87 01 07 00 00 00 00 00   |=...............|
0x32140:   3e 00 00 00 00 00 00 00  f7 18 07 00 00 00 00 00   |>...............|
0x32150:   3f 00 00 00 00 00 00 00  37 38 07 00 00 00 00 00   |?.......78......|
0x32160:   40 00 00 00 00 00 00 00  a7 4f 07 00 00 00 00 00   |@........O......|
0x32170:   41 00 00 00 00 00 00 00  17 67 07 00 00 00 00 00   |A........g......|
0x32180:   42 00 00 00 00 00 00 00  87 7e 07 00 00 00 00 00   |B........~......|
0x32190:   43 00 00 00 00 00 00 00  f7 95 07 00 00 00 00 00   |C...............|
0x321a0:   44 00 00 00 00 00 00 00  67 ad 07 00 00 00 00 00   |D.......g.......|
0x321b0:   45 00 00 00 00 00 00 00  d7 c4 07 00 00 00 00 00   |E...............|
0x321c0:   46 00 00 00 00 00 00 00  47 dc 07 00 00 00 00 00   |F.......G.......|
0x321d0:   47 00 00 00 00 00 00 00  b7 f3 07 00 00 00 00 00   |G...............|
0x321e0:   48 00 00 00 00 00 00 00  27 0b 08 00 00 00 00 00   |H.......'.......|
0x321f0:   49 00 00 00 00 00 00 00  97 22 08 00 00 00 00 00   |I........"......|
0x32200:   4a 00 00 00 00 00 00 00  07 3a 08 00 00 00 00 00   |J........:......|
0x32210:   4b 00 00 00 00 00 00 00  77 51 08 00 00 00 00 00   |K.......wQ......|
0x32220:   4c 00 00 00 00 00 00 00  e7 68 08 00 00 00 00 00   |L........h......|
0x32230:   4d 00 00 00 00 00 00 00  57 80 08 00 00 00 00 00   |M.......W.......|
0x32240:   4e 00 00 00 00 00 00 00  c7 97 08 00 00 00 00 00   |N...............|
0x32250:   4f 00 00 00 00 00 00 00  37 af 08 00 00 00 00 00   |O.......7.......|
0x32260:   50 00 00 00 00 00 00 00  a7 c6 08 00 00 00 00 00   |P...............|
0x32270:   51 00 00 00 00 00 00 00  17 de 08 00 00 00 00 00   |Q...............|
0x32280:   52 00 00 00 00 00 00 00  87 f5 08 00 00 00 00 00   |R...............|
0x32290:   53 00 00 00 00 00 00 00  f7 0c 09 00 00 00 00 00   |S...............|
0x322a0:   54 00 00 00 00 00 00 00  67 24 09 00 00 00 00 00   |T.......g$......|
0x322b0:   55 00 00 00 00 00 00 00  d7 3b 09 00 00 00 00 00   |U........;......|
0x322c0:   56 00 00 00 00 00 00 00  47 53 09 00 00 00 00 00   |V.......GS......|
0x322d0:   57 00 00 00 00 00 00 00  b7 6a 09 00 00 00 00 00   |W........j......|
0x322e0:   58 00 00 00 00 00 00 00  27 82 09 00 00 00 00 00   |X.......'.......|
0x322f0:   59 00 00 00 00 00 00 00  97 99 09 00 00 00 00 00   |Y...............|
0x32300:   5a 00 00 00 00 00 00 00  07 b1 09 00 00 00 00 00   |Z...............|
0x32310:   5b 00 00 00 00 00 00 00  77 c8 09 00 00 00 00 00   |[.......w.......|
0x32320:   5c 00 00 00 00 00 00 00  e7 df 09 00 00 00 00 00   |\...............|
0x32330:   5d 00 00 00 00 00 00 00  57 f7 09 00 00 00 00 00   |].......W.......|
0x32340:   5e 00 00 00 00 00 00 00  c7 0e 0a 00 00 00 00 00   |^...............|
0x32350:   5f 00 00 00 00 00 00 00  37 26 0a 00 00 00 00 00   |_.......7&......|
0x32360:   60 00 00 00 00 00 00 00  a7 3d 0a 00 00 00 00 00   |`........=......|
0x32370:   61 00 00 00 00 00 00 00  17 55 0a 00 00 00 00 00   |a........U......|
0x32380:   62 00 00 00 00 00 00 00  87 6c 0a 00 00 00 00 00   |b........l......|
0x32390:   63 00 00 00 00 00 00 00  f7 83 0a 00 00 00 00 00   |c...............|
0x323a0:   64 00 00 00 00 00 00 00  67 9b 0a 00 00 00 00 00   |d.......g.......|
0x323b0:   65 00 00 00 00 00 00 00  d7 b2 0a 00 00 00 00 00   |e...............|
0x323c0:   66 00 00 00 00 00 00 00  47 ca 0a 00 00 00 00 00   |f.......G.......|
0x323d0:   67 00 00 00 00 00 00 00  b7 e1 0a 00 00 00 00 00   |g...............|
0x323e0:   68 00 00 00 00 00 00 00  27 f9 0a 00 00 00 00 00   |h.......'.......|
0x323f0:   69 00 00 00 00 00 00 00  97 10 0b 00 00 00 00 00   |i...............|
0x32400:   6a 00 00 00 00 00 00 00  07 28 0b 00 00 00 00 00   |j........(......|
0x32410:   6b 00 00 00 00 00 00 00  77 3f 0b 00 00 00 00 00   |k.......w?......|
0x32420:   6c 00 00 00 00 00 00 00  e7 56 0b 00 00 00 00 00   |l........V......|
0x32430:   6d 00 00 00 00 00 00 00  57 6e 0b 00 00 00 00 00   |m.......Wn......|
0x32440:   6e 00 00 00 00 00 00 00  c7 85 0b 00 00 00 00 00   |n...............|
0x32450:   6f 00 00 00 00 00 00 00  37 9d 0b 00 00 00 00 00   |o.......7.......|
0x32460:   70 00 00 00 00 00 00 00  a7 b4 0b 00 00 00 00 00   |p...............|
0x32470:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32480:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32490:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x324a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x324b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x324c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x324d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x324e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x324f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32500:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32510:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32520:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32530:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32540:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32550:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32560:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32570:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32580:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32590:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x325a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x325b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x325c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x325d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x325e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x325f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32600:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32610:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32620:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32630:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32640:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32650:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32660:   8b 18 00 00 20 52 00 00  06 0b 00 00 02 00 00 00   |.... R..........|
0x32670:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32680:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x32690:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x326a0:   10 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x326b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x326c0:   d8 4b 7b 6a 1c 99 b7 2e  84 fe 5b ff a0 a0 4f c2   |.K{j......[...O.|
0x326d0:   a0 19 97 76 1e 83 72 d4  18 65 d1 8e 98 21 98 17   |...v..r..e...!..|
0x326e0:   02 db e3 e6 4a 5d 67 90  8c d3 f9 3f 55 87 1f 1a   |....J]g....?U...|
0x326f0:   f9 7c 40 7d 91 b7 77 c2  5c 20 0e d4 b3 59 b0 f4   |.|@}..w.\ ...Y..|
0x32700:   4a f6 b4 72 a5 4b 55 f4  60 4f 9f ef 4f d0 2c fb   |J..r.KU.`O..O.,.|
0x32710:   43 2c 6c 31 78 d6 57 5a  a4 a8 44 50 ea 0f 69 3d   |C,l1x.WZ..DP..i=|
0x32720:   2d 76 7f 69 ba a7 27 a3  d4 8f 61 d9 69 3d c6 77   |-v.i..'...a.i=.w|
0x32730:   b2 a0 2e 31 c6 a4 61 d7  a8 db 85 a4 fc 1a c3 82   |...1..a.........|
0x32740:   1c 73 8b 68 66 85 87 b5  f4 53 43 fd 86 2c 3a a3   |.s.hf....SC..,:.|
0x32750:   ef ea 42 af b7 9d 07 1b  cc a5 ea a3 26 54 cf ac   |..B.........&T..|
0x32760:   77 56 cb e4 9c 99 f4 85  14 49 2e a1 f2 f2 11 a1   |wV.......I......|
0x32770:   37 fd 5e 7e 24 cc c7 3d  1c 6b f2 6c 22 9c b0 01   |7.^~$..=.k.l"...|
0x32780:   c8 24 49 07 6a 89 6f 89  42 7a ec 3b 37 28 02 3a   |.$I.j.o.Bz.;7(.:|
0x32790:   e5 30 1b b7 ea 92 2f 99  36 74 89 be 53 c4 ad 19   |.0..../.6t..S...|
0x327a0:   e7 cc c1 6b 9d 84 9e fa  bb 7d a1 f6 21 75 66 76   |...k.....}..!ufv|
0x327b0:   9f 9a 55 7f 9f 9a 4b 20  27 e6 0b 87 19 fc c1 cb   |..U...K '.......|
0x327c0:   3d 5c 29 ef cb b8 4e 64  b3 54 33 36 d4 6e 36 ce   |=\)...Nd.T36.n6.|
0x327d0:   c6 fb fa 78 10 5e 5e 76  63 9f cc e1 32 c4 89 40   |...x.^^vc...2..@|
0x327e0:   75 75 76 63 24 b2 6c 40  5f d0 5d e6 ce 25 15 27   |uuvc$.l@_.]..%.'|
0x327f0:   7c ab ae 24 f9 3f 7e 8e  9b 27 86 45 6b e6 50 e9   ||..$.?~..'.Ek.P.|
0x32800:   12 f5 bd 6c 3b 4e 0e 4f  eb 10 9b dc e8 d8 ef ab   |...l;N.O........|
0x32810:   8d 1f ec 24 47 79 78 0b  97 5c 47 b1 7d 03 9a b6   |...$Gyx..\G.}...|
0x32820:   23 f4 51 6d e7 70 ae 81  cb d4 89 f8 07 d1 23 4f   |#.Qm.p........#O|
0x32830:   d0 69 88 a6 36 78 2e c7  f3 26 30 b2 a7 a9 e6 78   |.i..6x...&0....x|
0x32840:   48 d5 11 f1 1d 84 cd b1  2b ca ec 94 73 0b 28 55   |H.......+...s.(U|
0x32850:   08 7e 9c 77 a5 31 ee e9  23 ec 38 69 a3 81 89 35   |.~.w.1..#.8i...5|
0x32860:   b0 34 fd 52 ad 7d 15 42  d7 98 bd 9e 85 27 5a 9a   |.4.R.}.B.....'Z.|
0x32870:   1c a5 6c 6b 98 6a 02 6c  03 81 a5 ae 60 99 e4 fd   |..lk.j.l....`...|
0x32880:   4d 67 ae f4 32 00 68 b8  ef 88 ad be 7d 77 0a 3a   |Mg..2.h.....}w.:|
0x32890:   18 a9 60 73 57 d6 be 0f  b4 44 61 3d 9e 2a 57 80   |..`sW....Da=.*W.|
0x328a0:   60 9d 54 1b c4 83 eb a5  1e 26 03 f9 9f 21 5c 96   |`.T......&...!\.|
0x328b0:   14 ad 64 7b d6 58 30 08  9b a8 8d fe 17 ac d1 97   |..d{.X0.........|
0x328c0:   11 fb 33 d5 66 d5 bd 09  cb 4d 68 2f fa f3 8e 29   |..3.f....Mh/...)|
0x328d0:   c6 cb 02 b7 fa a5 cd e9  f4 9d b8 94 6f 9c e1 f7   |............o...|
0x328e0:   f7 e0 29 e1 55 fc 94 5b  00 7d 59 4d 82 7a 07 20   |..).U..[.}YM.z. |
0x328f0:   73 61 a8 f8 8c 3e 56 c4  70 18 3d 85 6b 90 ed ef   |sa...>V.p.=.k...|
0x32900:   71 63 aa fc 05 a5 cc eb  a2 0a 2f a1 28 ad d0 95   |qc......../.(...|
0x32910:   b2 26 ef 76 86 d9 b1 11  49 de fb 12 63 49 34 46   |.&.v....I...cI4F|
0x32920:   49 53 9a 9c ab c6 ae 2f  5b cc e9 36 86 9f e2 f1   |IS...../[..6....|
0x32930:   71 4f 86 a4 bc 97 ff 8d  75 ea cf 7a f1 c6 bb 43   |qO......u..z...C|
0x32940:   54 50 99 9a 57 13 7b 9e  0d 70 4a 6b 6d be c3 b3   |TP..W.{..pJkm...|
0x32950:   6f bc 75 59 7c 26 4e f4  bf 5d 78 0f d3 29 54 86   |o.uY|&N..]x..)T.|
0x32960:   4e 5e 97 86 f7 82 ea a7  7a c3 e6 28 66 46 3b 58   |N^......z..(fF;X|
0x32970:   7c 4c 85 a2 df 6f 07 66  e4 b5 90 c4 37 fd 81 37   ||L...o.f....7..7|
0x32980:   2b 06 cc 30 ac 3a 52 cc  77 39 1c c7 0e f0 92 11   |+..0.:R.w9......|
0x32990:   ba 7e b7 c6 63 e2 8a 67  8b c0 e5 2e eb d8 a5 7f   |.~..c..g........|
0x329a0:   30 05 cd 32 91 d0 b8 03  9e ef ca 70 74 b1 cc ad   |0..2.......pt...|
0x329b0:   c9 77 be d4 8a fd 95 59  da 5e 7b 09 39 08 7a da   |.w.....Y.^{.9.z.|
0x329c0:   03 3e f4 40 c7 ca a2 37  ef 51 74 17 9b 65 18 1e   |.>.@...7.Qt..e..|
0x329d0:   27 1e d4 00 59 4e 25 22  02 b8 92 c0 9e 93 ee e9   |'...YN%"........|
0x329e0:   de 87 4e 2f 63 ee 86 7f  0b 46 60 3f 7e a7 da 81   |..N/c....F`?~...|
0x329f0:   34 15 dd 12 62 4d 24 20  7f dc f9 16 00 da a4 7d   |4...bM$ .......}|
0x32a00:   42 13 db 1e a1 f8 90 53  b0 ed c8 74 f1 23 5e 92   |B......S...t.#^.|
0x32a10:   51 08 ce 34 d9 3d 55 c2  60 71 55 55 57 f5 89 27   |Q..4.=U.`qUUW..'|
0x32a20:   56 07 cf 36 47 a3 ca e7  fe af 8a f0 f2 d3 ae 69   |V..6G..........i|
0x32a30:   2c c6 0c ab 09 9d f4 9b  7a d7 f2 00 80 a9 d4 9d   |,.......z.......|
0x32a40:   42 ec 22 f7 60 b8 df cd  b3 35 10 df e3 7d 00 2e   |B.".`....5...}..|
0x32a50:   a1 47 8e b4 af fe 96 5f  bc 1c 39 8d e1 8e f3 d3   |.G....._..9.....|
0x32a60:   d9 9a 53 15 bd 0d 65 a2  fb fc d9 56 a7 b0 cd af   |..S...e....V....|
0x32a70:   78 09 c1 2a 0f 97 fe 8f  06 ac 8e f8 b5 4b 36 42   |x..*.........K6B|
0x32a80:   ca 93 5a 07 63 a7 ce ef  54 92 b4 8c d7 61 1c 16   |..Z.c...T....a..|
0x32a90:   45 34 fa 5c 5a 5d 34 00  f1 f6 d3 42 29 30 52 8a   |E4.\Z]4....B)0R.|
0x32aa0:   45 38 fe 54 41 81 e8 a3  2f a1 85 ee 07 81 fd cf   |E8.TA.../.......|
0x32ab0:   07 76 bc d0 eb 2b 43 ee  79 80 5a 4b 1f d5 a9 67   |.v...+C.y.ZK...g|
0x32ac0:   77 12 d8 18 98 ef 87 7d  35 58 72 1b cc 48 35 44   |w......}5Xr..H5D|
0x32ad0:   08 8a 40 33 67 60 37 06  ef e4 c1 66 1a 88 fa c1   |..@3g`7....f....|
0x32ae0:   ce b7 7e 4f 1f 34 5b de  a0 d5 f0 04 b6 56 2b 78   |..~O.4[......V+x|
0x32af0:   72 1f d7 06 c7 07 6f b6  c6 cb ee 38 90 01 7d d4   |r.....o....8..}.|
0x32b00:   f0 95 5c 0b ef d2 ba 07  49 44 66 33 56 3f 43 a8   |..\.....IDf3V?C.|
0x32b10:   69 c7 0f ad 39 95 fc 8b  25 0c 2e a3 2f 26 58 9e   |i...9...%.../&X.|
0x32b20:   d7 b0 79 41 1a ca a1 31  c7 d8 fd 1e 6f 32 4c b6   |..yA...1....o2L.|
0x32b30:   4d db 13 95 01 d5 bc 0b  50 a2 84 ec 9c f6 88 25   |M.......P......%|
0x32b40:   59 3c f2 4c 8b 58 3f 16  01 1c 3e 83 e5 b6 cb a3   |Y<.L.X?...>.....|
0x32b50:   76 33 fb 5e 63 7c 13 4e  63 42 64 37 cc 54 29 7c   |v3.^c|.NcBd7.T)||
0x32b60:   80 ee 24 fb 61 7a 11 4a  e1 ca ef 3a 3a 73 0f 30   |..$.az.J...::s.0|
0x32b70:   f5 4b 82 ac 9c a8 cf ed  4d 5c 7e 03 1d 9b e7 fb   |.K......M\~.....|
0x32b80:   fe bf 76 5f 1d dd b4 1b  9a 9c be 98 f1 43 3e 52   |..v_.........C>R|
0x32b90:   94 1d d5 02 c1 bd d4 db  94 65 41 7d 59 d7 ab 63   |.........eA}Y..c|
0x32ba0:   55 28 ee 74 3b 40 57 c6  5a 5b 7f 01 72 3b 47 a0   |U(.t;@W.Z[..r;G.|
0x32bb0:   a1 20 d6 04 00 03 6a bc  23 1a 3c 87 ee 52 2f 70   |. ....j.#.<..R/p|
0x32bc0:   8e 37 ff 56 4e 35 5c d0  8f b9 9d de b0 e6 98 05   |.7.VN5\.........|
0x32bd0:   60 d2 18 83 4d c1 a8 23  45 f3 d7 4a 8d c3 bf 4b   |`...M..#E..J...K|
0x32be0:   0d b7 7f 4d 1a fa 91 51  dd 78 52 5b 1b 4e 30 4e   |...M...Q.xR[.N0N|
0x32bf0:   92 3f f7 46 3d d9 b0 13  ab 62 44 77 93 c9 b5 5f   |.?.F=....bDw..._|
0x32c00:   8b cd 05 b9 f3 1f 77 86  c4 69 4d 65 10 b6 c8 a5   |......w..iMe....|
0x32c10:   48 9a 50 13 c2 55 3c 10  22 c8 e2 20 5e 84 fe c9   |H.P..U<.".. ^...|
0x32c20:   8a dc 12 97 c1 a1 c8 e3  be 67 43 79 0f 52 2c 76   |.........gCy.R,v|
0x32c30:   c3 e9 21 f1 0c e8 8f 6d  7c ae 88 f4 a4 35 49 bc   |..!....m|....5I.|
0x32c40:   ce 17 df 16 91 99 f0 93  31 c3 e7 2a 11 54 2e 72   |........1..*.T.r|
0x32c50:   da e8 2e ef d1 56 3d 12  94 55 71 1d 2e 4b 37 40   |.....V=..Uq..K7@|
0x32c60:   43 fa be a8 84 35 68 e7  db 27 93 31 96 34 5b 08   |C....5h..'.1.4[.|
0x32c70:   d6 6b 87 00 97 22 46 de  c7 3f a3 19 2c 8a 3c d1   |.k..."F..?..,.<.|
0x32c80:   18 a9 18 5d 01 49 92 60  d3 37 b3 01 ce 64 fb f8   |...].I.`.7...d..|
0x32c90:   ea 67 9f 14 3b 9e 25 01  13 fb 30 4e a7 39 41 1f   |.g..;.%...0N.9A.|
0x32ca0:   fa 53 f7 48 8a cb 8f fe  75 99 f4 e8 a0 32 57 02   |.S.H....u....2W.|
0x32cb0:   ee 63 97 18 b5 10 22 88  ff 17 f3 61 31 bf 56 8e   |.c...."....a1.V.|
0x32cc0:   a5 34 39 e1 44 9d 23 04  26 f2 22 55 5a e0 e8 6f   |.49.D.#.&."UZ..o|
0x32cd0:   d8 05 5b b2 78 ed c3 94  fa 22 99 3e 49 8f 36 de   |..[.x....".>I.6.|
0x32ce0:   b7 2e 0d cf 25 b4 71 7f  5f c3 40 06 eb 69 e1 ef   |....%.q._.@..i..|
0x32cf0:   3a af 14 57 eb 76 ee 22  7f a7 88 aa 45 83 2e ca   |:..W.v."....E...|
0x32d00:   3c ad 10 51 85 ec c1 97  71 b5 ac 9c 44 be 54 8d   |<..Q....q...D.T.|
0x32d10:   7d e8 9a 9e 4c 91 3b 10  c9 61 1f fb 24 5b 87 ba   |}...L.;..a..$[..|
0x32d20:   54 9d 70 01 6f 8e 05 31  bf 73 3b cd 5e 8c 30 db   |T.p.o..1.s;.^.0.|
0x32d30:   6c 81 48 25 a2 df a7 c2  dd 55 77 a7 ab d5 82 30   |l.H%.....Uw....0|
0x32d40:   5f 9e 76 04 22 5c b4 55  64 d0 66 33 47 ad 72 b8   |_.v."\.Ud.f3G.r.|
0x32d50:   07 73 b5 2b 1b 6f de 0a  5a e2 02 65 d4 3a 47 1a   |.s.+.o..Z..e.:G.|
0x32d60:   69 90 6a 16 bb ca 8d fd  c0 7c 25 dc 37 56 99 ab   |i.j......|%.7V..|
0x32d70:   7f 82 4e 20 da 27 4c d1  3a 0b c9 46 91 ef f6 7e   |..N .'L.:..F...~|
0x32d80:   ba cb dc fb 0b 73 e6 2e  c2 86 ca c9 a6 fc d0 4b   |.....s.........K|
0x32d90:   55 b0 2a 76 67 aa 4d 5d  cf 7f 23 d9 b5 cb be 12   |U.*vg.M]..#.....|
0x32da0:   c3 ca de f8 79 98 29 0b  fc 50 7d a8 50 a2 6c a9   |....y.)..P}.P.l.|
0x32db0:   54 b9 38 6d 58 b5 73 7c  71 e1 04 60 0a 15 1b 68   |T.8mX.s|q..`...h|
0x32dc0:   a2 f3 ac b3 8b 82 1d 25  6a ee 1a 71 2c 77 df ce   |.......%j..q,w..|
0x32dd0:   c6 d3 ec d3 10 06 08 b7  50 09 cd 40 7e 80 28 cf   |........P..@~.(.|
0x32de0:   50 4a c3 66 77 a6 55 49  66 fa 32 4d 76 b4 40 93   |PJ.fw.UIf.2Mv.@.|
0x32df0:   c7 da fe c8 19 05 0a b4  03 64 1b fd cc ca bc 11   |.........d......|
0x32e00:   cd dc f2 c2 69 b0 79 73  16 53 79 ae fa 30 53 04   |....i.ys.Sy..0S.|
0x32e10:   dc c9 d8 fd 30 76 e8 27  9f cf 58 12 b1 e7 e6 66   |....0v.'..X....f|
0x32e20:   e1 c8 da fe cb ea cd 9d  5c 11 fd 68 d2 c0 a8 0f   |........\..h....|
0x32e30:   26 0c 47 a0 d9 d4 b1 df  08 69 0d e0 8c ba 5c 81   |&.G......i....\.|
0x32e40:   14 26 1b d2 c6 ff e7 a2  ee 8a d2 dd 44 6f ef e6   |.&..........Do..|
0x32e50:   ac 89 58 3d 83 b6 75 79  db a3 80 a6 bb 9d 12 e8   |..X=..uy........|
0x32e60:   6d 55 f9 41 74 46 88 77  3f 44 5b 9d 81 a3 6e aa   |mU.AtF.w?D[...n.|
0x32e70:   03 c7 c6 ec f3 de a5 c1  6c 15 f5 64 7e 59 83 bc   |........l..d~Y..|
0x32e80:   6c 5e eb 5a e7 ee c5 91  5a 2f 81 2a 58 73 d7 c2   |l^.Z....Z/.*Xs..|
0x32e90:   d0 fd b0 a1 31 15 2a 84  41 4a 4f 83 2a 3d 4b 10   |....1.*.AJO.*=K.|
0x32ea0:   d0 f9 b8 ad 09 c9 89 fb  73 20 e3 79 c1 93 0e fa   |........s .y....|
0x32eb0:   96 bb 3c 6b 66 64 c4 1d  d0 c0 46 03 f9 c7 a6 06   |..<kfd....F.....|
0x32ec0:   fe df f4 c7 ae a7 57 4a  ac e8 16 7b 91 5c 85 b9   |......WJ...{.\..|
0x32ed0:   9a 48 df 74 42 18 2c 81  43 5c 6b b5 d2 94 00 f3   |.H.tB.,.C\k.....|
0x32ee0:   60 7a a3 36 6a 7c f4 35  36 6b 09 e6 87 46 b9 9b   |`z.6j|.56k...F..|
0x32ef0:   0d d1 ea d6 a2 50 9c 69  2c 75 35 c4 55 14 15 61   |.....P.i,u5.U..a|
0x32f00:   8a 5c e7 50 d3 9a 2d 0d  a8 fc 3e 47 37 2e 69 23   |.\.P..-...>G7.i#|
0x32f10:   5d 09 41 a5 19 dd a1 c7  f4 b4 ae 9f 40 37 5f 0e   |].A.........@7_.|
0x32f20:   77 7f ad 3f e0 81 1b 20  4b 68 13 f1 30 23 77 32   |w..?... Kh..0#w2|
0x32f30:   61 15 79 81 e1 9c 21 07  96 1f e1 7a f8 e6 e4 65   |a.y...!....z...e|
0x32f40:   04 f6 a0 b9 66 20 3c 99  10 a5 8e af bf a5 62 a0   |....f <.......b.|
0x32f50:   01 fd b2 a2 3e 34 64 ed  be fe 3a 41 a1 48 bd 9d   |....>4d...:A.H..|
0x32f60:   5a 24 17 d8 40 32 60 eb  49 76 37 c7 83 62 f1 f7   |Z$..@2`.Iv7..b..|
0x32f70:   00 86 40 29 22 f0 c7 92  dc e4 0e 6f ef 89 3a d4   |..@)"......o..:.|
0x32f80:   90 72 b3 2e ed 94 31 1f  a0 25 95 34 ba 51 93 a4   |.r....1..%.4.Q..|
0x32f90:   37 d3 ee d0 11 f5 f1 bf  f3 db 70 2e 33 c6 a2 00   |7.........p.3...|
0x32fa0:   20 ea 98 9d 96 78 ec 21  e9 e5 0c 6c 5b 2a 61 2f   | ....x.!...l[*a/|
0x32fb0:   3c d2 e8 d5 cf 4b 96 66  2e a7 8a a9 b7 42 b1 97   |<....K.f.....B..|
0x32fc0:   19 f9 ba ae a5 7d fa 3c  d3 08 d3 51 2c f7 c4 55   |.....}.<...Q,..U|
0x32fd0:   82 20 6f 9c 15 89 09 3b  8d 4e 47 8f 4f d2 8a 3c   |. o....;.NG.O..<|
0x32fe0:   a1 79 a1 35 e0 b1 7b 70  14 c9 56 1b dc 5f 8f b6   |.y.5..{p..V.._..|
0x32ff0:   2d f1 aa b6 05 91 39 13  06 df 7a 21 5d dc 9e 22   |-.....9...z!].."|
0x33000:   a3 03 55 bb ce 58 ac 41  13 d8 68 3a ec a6 64 a5   |..U..X.A..h:..d.|
0x33010:   da 58 ff 44 99 1d 3a 9c  70 79 2d d0 1e 91 08 ff   |.X.D..:.py-.....|
0x33020:   9c 16 7b 82 49 e9 c9 9b  15 da 74 28 d0 43 b7 92   |..{.I.....t(.C..|
0x33030:   93 27 1d d7 12 b0 47 52  e2 13 f9 6e 79 28 7d 3d   |.'....GR...ny(}=|
0x33040:   59 d9 fa ce 59 d1 b9 d3  79 7e 27 df da 41 b3 94   |Y...Y...y~'..A..|
0x33050:   8c 2a 03 c6 a8 1e 38 9f  13 ec 10 7e f7 5a 81 bf   |.*....8....~.Z..|
0x33060:   76 aa 4d e2 32 b1 25 2f  66 8f c3 d2 a5 5e 59 d4   |v.M.2.%/f....^Y.|
0x33070:   eb 93 e5 73 29 9f 1c 38  82 bf eb ca 1f 39 80 6a   |...s)..8.....9.j|
0x33080:   2d 0c b8 b1 57 4b a2 52  7e af f3 c2 fd fe a9 84   |-...WK.R~.......|
0x33090:   f7 8b f1 7f a5 fc c3 84  c6 2c bc 0e b4 44 4e d9   |.........,...DN.|
0x330a0:   ef e3 ad 4b dc 56 3c d1  e8 e8 1a 6c b3 52 53 d2   |...K.V<....l.RS.|
0x330b0:   03 84 fd 7b 2b fb 4a 0a  6a ef 93 e2 42 53 df 5f   |...{+.J.j...BS._|
0x330c0:   d0 2d 04 2c b2 fa c6 87  cb 3e a7 07 89 ed 3e 00   |.-.,.....>....>.|
0x330d0:   a5 4f 57 1d 06 1b 56 f7  7f 85 cc d7 3a 33 8f 6f   |.OW...V.....:3.o|
0x330e0:   c2 19 2a 36 d3 a8 bd ae  a2 5c f4 36 18 e5 be 89   |..*6.....\.6....|
0x330f0:   47 00 b2 b7 95 37 e0 6c  0a 95 58 52 36 2b 9b 63   |G....7.l..XR6+.c|
0x33100:   49 04 b4 b5 13 19 55 f6  1c b1 6e 40 57 51 dc 5e   |I.....U...n@WQ.^|
0x33110:   90 8e 7b f0 c2 e2 d2 8b  4c 03 09 94 f7 82 eb ba   |..{.....L.......|
0x33120:   41 64 e4 85 b9 dc f3 94  62 27 3f 86 4d 35 8a 6c   |Ad......b'?.M5.l|
0x33130:   41 5c c0 99 0c 7f 00 c5  48 6b 55 a0 78 87 61 35   |A\......HkU.x.a5|
0x33140:   4a 62 e1 86 94 6d 97 41  c9 7a c1 25 74 77 e9 4d   |Jb...m.A.z.%tw.M|
0x33150:   3a a2 ce 6a a5 07 c8 74  df 1e 97 17 e7 42 4b da   |:..j...t.....BK.|
0x33160:   5c 7e f3 88 0d 55 3f d0  7d 39 2e 89 04 9d fa b5   |\~...U?.}9......|
0x33170:   52 5a c5 9a 64 95 13 3d  8f d5 b4 ff c2 f3 2f 0f   |RZ..d..=....../.|
0x33180:   8f c8 1e d3 bd 3f ec 68  0f d7 3b 73 b5 d5 1a 1c   |.....?.h..;s....|
0x33190:   88 3e 93 a8 f9 94 9f b0  8a 3f 2b 8a a6 bb 43 2b   |.>.......?+...C+|
0x331a0:   96 ca 1d d2 ef f0 c9 82  61 61 5a a5 83 69 f8 42   |........aaZ..i.B|
0x331b0:   89 2c 88 a1 06 ab be af  f4 18 92 14 d9 1e 39 f4   |.,............9.|
0x331c0:   d7 b8 56 eb dd c4 e7 98  07 07 83 1b 3f db 9f 96   |..V.........?...|
0x331d0:   bb f8 36 cb 5e d1 75 1f  a5 d1 b2 fd 6d 2d 9e 60   |..6.^.u.....m-.`|
0x331e0:   25 d8 83 51 01 8d 8b bc  1b 2f bf 0f 85 45 c2 54   |%..Q...../...E.T|
0x331f0:   ba ea 2d c2 67 d3 76 1e  86 07 0f 96 bf b9 40 2a   |..-.g.v.......@*|
0x33200:   b8 e6 27 c4 1f a1 b1 aa  7b 65 5c a7 09 57 55 d0   |..'.....{e\..WU.|
0x33210:   b1 cc 18 d1 de 31 e5 6f  fa 44 e0 3a e2 e3 37 07   |.....1.o.D.:..7.|
0x33220:   b4 ce 1b d0 5d 15 5f f0  c1 e1 9a e5 c1 ad 5e 20   |....]._.......^ |
0x33230:   fb 53 45 13 47 69 1d ce  9d 11 12 9d 9f 59 d0 5a   |.SE.Gi.......Y.Z|
0x33240:   21 10 37 3d 70 3f 60 e5  43 cf 2f 7f 77 eb b7 8e   |!.7=p?`.C./.w...|
0x33250:   81 4c d8 91 2d ad bb ac  5e 9d 54 56 88 17 b9 7d   |.L..-...^.TV...}|
0x33260:   58 ee a4 4c c2 51 b5 5f  82 47 6f b6 b2 6b fb 43   |X..L.Q._.Go..k.C|
0x33270:   ce d2 09 de 5d 7d 03 c4  d9 e9 96 e1 4d 87 ed b8   |....]}......M...|
0x33280:   59 00 c0 45 71 1d 53 f4  f7 9d d8 db 6b d3 93 92   |Y..Eq.S.....k...|
0x33290:   fd a4 44 e5 9f f3 46 0e  94 53 71 bc 39 4f 41 dc   |..D...F..Sq.9OA.|
0x332a0:   05 ad 48 e1 5f 51 39 d2  ee ff 8b ea 92 0b ab 73   |..H._Q9........s|
0x332b0:   cb 28 8e a3 f8 1d df 79  15 5b f1 35 ea a3 57 27   |.(.....y.[.5..W'|
0x332c0:   eb e0 22 c7 38 8f 88 bd  41 0b 89 1d 62 81 e8 bb   |..".8...A...b...|
0x332d0:   67 cc 91 5f ac f5 43 0d  b6 77 47 ae a1 05 a2 74   |g.._..C..wG....t|
0x332e0:   95 b8 d3 61 1c 2e f7 61  cb 15 14 9f 74 bd ca a5   |...a...a....t...|
0x332f0:   00 ff 33 c8 ec 45 ab 55  d9 29 36 81 26 11 30 f3   |..3..E.U.)6.&.0.|
0x33300:   7f f4 b5 43 45 f5 cf 80  65 23 b5 09 64 6d 72 cd   |...CE...e#..dmr.|
0x33310:   30 56 40 10 87 79 05 c6  a1 b3 6d 41 53 5b 5f d6   |0V@..y....mAS[_.|
0x33320:   a2 ba da 66 36 c3 e2 9b  d6 0f 03 92 63 73 63 c2   |...f6.......csc.|
0x33330:   4c 6e 64 0c 4f f9 c5 86  13 fe 88 eb 2b e2 34 06   |Lnd.O.......+.4.|
0x33340:   31 b5 5c ed d0 e5 5b 05  9d 93 5d 51 ec 67 f1 45   |1.\...[...]Q.g.E|
0x33350:   2c a7 47 e4 f0 bd 2f 29  7b 27 b3 0b 92 b9 cc a7   |,.G.../){'......|
0x33360:   6f 04 3d 3b f6 b9 29 2b  f4 2b 35 80 b0 f5 a6 81   |o.=;..)+.+5.....|
0x33370:   cd 54 cc 9d ac 1f 50 f5  69 13 9d 11 dc 3f 85 69   |.T....P.i....?.i|
0x33380:   c5 a8 cb 69 5b e9 dd 8e  2d 8a c6 d1 89 97 f5 b0   |...i[...-.......|
0x33390:   2a fb 35 ca bf 29 7d ee  66 6d dc 2e 20 a8 51 25   |*.5..)}.fm.. .Q%|
0x333a0:   35 8d 78 f1 40 36 e3 6d  74 11 9e 10 88 65 7e c9   |5.x.@6.mt....e~.|
0x333b0:   31 fd 30 c9 21 50 a4 50  bb 97 5b 53 a4 b5 c6 a1   |1.0.!P.P..[S....|
0x333c0:   4c af 4b e0 53 24 fe 66  1e d0 a3 f2 3f c2 04 16   |L.K.S$.f....?...|
0x333d0:   6f 7c 79 07 6b d1 f9 92  e8 5b 7d b8 1c 90 6d 31   |o|y.k....[}...m1|
0x333e0:   d4 b6 d0 60 96 a3 b2 ab  69 4b e9 3d af 8b e7 be   |...`....iK.=....|
0x333f0:   60 bf 53 e8 7b e1 d1 8a  83 67 d3 2b 2e 9c 73 3b   |`.S.{....g.+..s;|
0x33400:   76 42 5e 1a 38 76 83 4d  7e 75 c8 22 1f 62 f4 46   |vB^.8v.M~u.".b.F|
0x33410:   c7 ec a1 4f 07 e4 5e 06  25 32 22 8d ed 0d ae 70   |...O..^.%2"....p|
0x33420:   89 70 67 0d df 11 59 f2  88 69 da 2c c3 b3 c3 a2   |.pg...Y..i.,....|
0x33430:   9e 0a 32 3e 9c 9f 90 b5  47 e6 9c e7 aa 79 6c c7   |..2>....G....yl.|
0x33440:   4c ef 2b c0 cf 61 11 ca  34 3c 2d 88 c9 b7 c5 a0   |L.+..a..4<-.....|
0x33450:   a1 18 23 31 16 e2 5d 07  a6 0d 8c 1e c4 85 ee b9   |..#1..].........|
0x33460:   3a 8e 81 7c e9 cd f6 52  9f 01 80 e6 3d ad 43 e4   |:..|...R....=.C.|
0x33470:   07 26 10 ed cb f4 e1 45  b3 29 98 fe 5e 74 fd 5a   |.&.....E.)..^t.Z|
0x33480:   a4 7b d2 2f 1b 4a 8b 2f  c7 31 90 f6 a5 5d 13 b4   |.{./.J./.1...]..|
0x33490:   27 32 1c e1 b0 2b 5d f9  48 7e 5c 3a 33 ba 4e e9   |'2...+].H~\:3.N.|
0x334a0:   83 6e 28 d5 1e d4 08 ac  08 d9 3e 58 41 a7 45 e2   |.n(.......>XA.E.|
0x334b0:   27 3e 18 e5 b7 a2 d3 77  13 52 b0 d6 44 2b c8 6f   |'>.....w.R..D+.o|
0x334c0:   d5 c7 4f b2 ba 2e 5e fa  46 65 55 33 a6 ca 97 30   |..O...^.FeU3...0|
0x334d0:   fb 94 7e 83 5e be 2e 8a  b1 0e 85 e3 6c 7b f8 5f   |..~.^.......l{._|
0x334e0:   a9 e9 55 a8 10 56 77 d3  6c 36 64 02 a7 4a 1e b9   |..U..Vw.l6d..J..|
0x334f0:   b4 71 d4 29 93 08 b5 11  a8 9a 00 66 6c 6f f4 53   |.q.).......flo.S|
0x33500:   bc 77 d6 2b 68 bd 2f 8b  c8 ac 12 74 5a 28 c9 6e   |.w.+h./....tZ(.n|
0x33510:   4a b8 93 6e e6 3a 52 f6  3f cb c6 a0 0d 20 2d 8a   |J..n.:R.?.... -.|
0x33520:   24 28 e6 1b b4 1b 4d e9  67 fd d4 b2 86 7e fb 5c   |$(....M.g....~.\|
0x33530:   00 04 fa 07 5a e8 1c b8  af 97 f2 94 18 96 a2 05   |....Z...........|
0x33540:   2a 23 e5 18 6d 7f 98 3c  a2 03 77 11 4c 1d da 7d   |*#..m..<..w.L..}|
0x33550:   6d 0d 09 f4 9b 20 ad 09  4a 55 45 23 5d bf 4d ea   |m.... ..JUE#].M.|
0x33560:   2e 31 eb 16 4c d7 09 ad  69 ec db bd 3f 0f 22 85   |.1..L...i...?.".|
0x33570:   0e 07 f9 04 11 fc e4 40  09 77 ad cb d4 db 98 3f   |.......@.w.....?|
0x33580:   a0 dd b0 4d af 04 b1 15  0e fa 21 47 fe ee 8b 2c   |...M......!G...,|
0x33590:   fa 50 cb 36 18 78 69 cd  7b e9 d8 be 24 b8 bc 1b   |.P.6.xi.{...$...|
0x335a0:   aa de b1 4c f8 21 5b ff  c1 98 f7 91 5a 0c d5 72   |...L.![.....Z..r|
0x335b0:   10 4c c2 3f 46 57 76 d2  5c 50 46 20 d1 cd 63 c4   |.L.?FWv.\PF ..c.|
0x335c0:   80 95 88 75 f4 0f 41 e5  6e 41 49 2f 11 6c 01 a6   |...u..A.nAI/.l..|
0x335d0:   c4 f5 a8 55 e5 9d c6 62  1d 71 af c9 aa 6a f7 50   |...U...b.q...j.P|
0x335e0:   a7 40 32 cf 34 64 65 c1  9e 7d 5d 3b 86 36 c3 64   |.@2.4de..}];.6.d|
0x335f0:   de ee a1 5c ef 9e c7 63  7b cd c4 a2 3e b5 bd 1a   |...\...c{...>...|
0x33600:   de e4 a7 5a 60 5a 73 d7  dd 9e f5 93 9d a1 47 e0   |...Z`Zs.......G.|
0x33610:   c8 db b2 4f d5 0d b6 12  c0 22 68 0e ec c3 90 37   |...O....."h....7|
0x33620:   ce d8 b3 4e bc b7 29 8d  61 59 b7 d1 3e ab b7 10   |...N..).aY..>...|
0x33630:   37 87 70 8d a4 f5 17 b3  75 d0 cf a9 ae 24 cd 6a   |7.p.....u....$.j|
0x33640:   17 f5 5e a3 de 88 3c 98  56 ee 2d 4b 01 44 19 be   |..^...<.V.-K.D..|
0x33650:   58 1c f2 0f 70 54 75 d1  08 97 04 62 f0 4d ea 4d   |X...pTu....b.M.M|
0x33660:   fd 67 2f d2 89 5d 86 22  d7 ad e4 82 88 0f d4 73   |.g/..].".......s|
0x33670:   c6 ca bd 40 a8 eb 1d b9  7d 55 b3 d5 69 1a 2f 88   |...@....}U..i./.|
0x33680:   f7 7c 26 db cc bb 2d 89  15 1b 89 ef 39 68 05 a2   |.|&...-.....9h..|
0x33690:   c0 87 86 7b 37 af d7 73  cf b3 ee 88 b9 b5 4b ec   |...{7..s......K.|
0x336a0:   cc 8b 82 7f 98 d1 0b af  7f 4a b8 de f8 5f e4 43   |.........J..._.C|
0x336b0:   4c 4e c0 3d d9 37 a0 04  de 33 67 01 54 a4 b0 17   |LN.=.7...3g.T...|
0x336c0:   08 e2 a4 59 6e 61 64 c0  b2 4b 4f 29 7b 1d 2c 8b   |...Ynad..KO){.,.|
0x336d0:   f7 52 3c c1 49 ac d4 70  03 86 fc 9a 02 57 e3 44   |.R<.I..p.....W.D|
0x336e0:   c7 10 02 ff 15 20 b8 1c  a5 d6 cd ab 7f 3f 32 95   |..... .......?2.|
0x336f0:   12 f1 ab 56 c1 43 8c 28  dd f4 d3 b5 17 c5 64 c3   |...V.C.(......d.|
0x33700:   0b 77 20 dd 54 28 59 fd  da 77 5b 3d b7 86 5a fd   |.w .T(Y..w[=..Z.|
0x33710:   71 84 73 8e cc ed 1f bb  4e b0 13 75 e5 ab 41 e6   |q.s.....N..u..A.|
0x33720:   d9 19 05 f8 4a 0b 42 e6  cf c1 c0 a6 c1 97 55 f2   |....J.B.......U.|
0x33730:   b1 a8 6f 92 54 2e 5f fb  a1 4b b9 df 36 c1 91 36   |..o.T._..K..6..6|
0x33740:   dc 9f 8e 73 75 b4 dc 78  3a a0 03 65 bc 05 d2 75   |...su..x:..e...u|
0x33750:   f2 84 87 7a a1 c8 f0 54  f2 71 59 3f 97 39 30 97   |...z...T.qY?.90.|
0x33760:   53 ff 58 a5 a1 c2 f2 56  fb f7 d2 b4 57 53 16 b1   |S.X....V....WS..|
0x33770:   88 10 fe 03 0a b9 2c 88  c6 5f 43 25 20 72 fe 59   |......,.._C% r.Y|
0x33780:   ff 08 0a f7 78 36 57 f3  61 05 83 e5 bd 02 27 80   |....x6W.a.....'.|
0x33790:   36 f7 a9 54 3c 96 37 93  48 1f 7c 1a 90 a6 b2 15   |6..T<.7.H.|.....|
0x337a0:   ec bb 92 6f 3d 0c b4 10  d0 5c 42 24 d7 8a 5e f9   |...o=....\B$..^.|
0x337b0:   40 f4 aa 57 eb 4c 89 2d  5a 9a 01 67 ab 33 36 91   |@..W.L.-Z..g.36.|
0x337c0:   16 89 83 7e 53 17 bf 1b  b7 62 a0 c6 7a f1 81 26   |...~S....b..z..&|
0x337d0:   c7 bb 64 99 64 12 4b ef  27 c0 ea 8c c8 9a a6 01   |..d.d.K.'.......|
0x337e0:   05 14 03 fe da 5b 72 d6  3a 2c 6f 09 c9 14 29 8e   |.....[r.:,o...).|
0x337f0:   12 91 8b 76 9c 3a 53 f7  5a 12 79 1f dc 88 ac 0b   |...v.:S.Z.y.....|
0x33800:   b9 9e 79 84 15 6c 94 30  4c 0b 70 16 ea 00 d1 76   |..y..l.0L.p....v|
0x33810:   67 63 2c d1 a7 b7 df 7b  0d e1 df b9 5a 5b e7 40   |gc,....{....Z[.@|
0x33820:   ef a5 6e 93 38 b2 2b 8f  68 19 7e 18 c1 38 35 92   |..n.8.+.h.~..85.|
0x33830:   8d f2 5d a0 ba 79 6c c8  e9 5f b5 d3 0f 99 50 f7   |..]..yl.._....P.|
0x33840:   76 e9 a3 5e 30 fa 13 b7  23 f0 da bc cd 32 37 90   |v..^0...#....27.|
0x33850:   83 e1 52 af b5 b6 de 7a  18 4f 4c 2a e3 1b 2e 89   |..R....z.OL*....|
0x33860:   33 49 7c 3f e8 39 56 96  00 63 7c f6 60 47 dd b9   |3I|?.9V..c|.`G..|
0x33870:   a6 d8 ed ae 03 2f 41 81  1c 7b 64 ee e2 f9 63 07   |...../A..{d...c.|
0x33880:   68 1a 2f 6c 9d 44 2b eb  18 73 6c e6 38 17 8d e9   |h./l.D+..sl.8...|
0x33890:   ba d4 e1 a2 4f 92 fd 3d  e8 bf a0 2a 79 4a d0 b4   |....O..=...*yJ..|
0x338a0:   aa e0 d5 96 26 c7 a8 68  ce dd c2 48 76 41 db bf   |....&..h...HvA..|
0x338b0:   be d0 e5 a6 e1 1c 73 b3  44 53 4c c6 ff cc 56 32   |......s.DSL...V2|
0x338c0:   15 88 b2 f1 58 91 fe 3e  ed b6 a9 23 cc 93 09 6d   |....X..>...#...m|
0x338d0:   e8 b6 83 c0 4c e1 8e 4e  21 66 79 f3 f7 fc 66 02   |....L..N!fy...f.|
0x338e0:   07 9e a8 eb 89 b8 d7 17  04 88 98 12 5d 1a 80 e4   |............]...|
0x338f0:   8a 1c 29 6a cf 7a 15 d5  a4 e3 fc 76 fb f0 6a 0e   |..)j.z.....v..j.|
0x33900:   8c 1e 2b 68 59 e0 8f 4f  ba f1 ee 64 12 ce 57 33   |..+hY..O...d..W3|
0x33910:   4d 5b 6e 2d 78 9d f2 32  72 25 3a b0 3a 29 b3 d7   |M[n-x..2r%:.:)..|
0x33920:   84 2e 1b 58 83 82 ed 2d  84 37 28 a2 08 00 66 01   |...X...-.7(...f.|
0x33930:   7c 32 07 44 36 d3 bc 7c  a6 11 0e 84 b5 a6 3c 58   ||2.D6..|......<X|
0x33940:   8f 2d 18 5b be 57 38 f8  2f 95 8b 01 31 df 44 20   |.-.[.W8./...1.D |
0x33950:   f7 c1 f4 b7 ef 62 0d cd  01 a7 b9 33 aa 49 d3 b7   |.....b.....3.I..|
0x33960:   99 23 16 55 57 c6 a9 69  9b 38 27 ad 41 26 bc d8   |.#.UW..i.8'.A&..|
0x33970:   8f 31 04 47 3e 2c 44 84  71 4e 51 db ff 9c 06 62   |.1.G>,D.qNQ....b|
0x33980:   4a 78 4d 0e f7 7e 11 d1  e9 c2 dd 57 f0 8f 15 71   |JxM..~.....W...q|
0x33990:   c5 03 36 75 c3 a6 c9 09  a4 3b 24 ae eb b8 22 46   |..6u.....;$..."F|
0x339a0:   53 79 4c 0f 95 94 fb 3b  c7 14 0b 81 46 d2 4b 2f   |SyL....;....F.K/|
0x339b0:   c4 0a 3f 7c bc b9 d6 16  1a a6 ba 30 94 67 fd 99   |..?|.......0.g..|
0x339c0:   92 40 75 36 b7 8e e1 21  21 ab b5 3f 7a 05 9f fb   |.@u6...!!..?z...|
0x339d0:   76 60 55 16 34 0a 66 a6  8b 4c 53 d9 30 f4 69 0d   |v`U.4.f..LS.0.i.|
0x339e0:   e0 fa cf 8c db aa c5 05  3d bf a1 2b 40 c8 5d 39   |........=..+@.]9|
0x339f0:   77 69 5c 1f 3d 09 67 a7  a8 27 38 b2 02 ba 23 47   |wi\.=.g..'8...#G|
0x33a00:   7d 6f 5a 19 d5 bc d3 13  dd 16 09 83 cc 43 d9 bd   |}oZ..........C..|
0x33a10:   6c 7a 4f 0c 14 7a 16 d6  54 8c 94 1e 1f 95 0e 6a   |lzO..z..T......j|
0x33a20:   71 7b 4e 0d a7 e6 89 49  a7 54 4b c1 04 b4 29 4d   |q{N....I.TK...)M|
0x33a30:   36 b9 8d ce 7d d8 b7 77  c3 2c 33 b9 62 ca 53 37   |6...}..w.,3.b.S7|
0x33a40:   64 97 a3 e0 9a f3 9c 5c  25 cf d1 5b b2 1d 87 e3   |d......\%..[....|
0x33a50:   bc 3a 0f 4c e7 ba d5 15  00 e8 f8 72 45 ef 74 10   |.:.L.......rE.t.|
0x33a60:   1d e8 d2 91 18 4a 26 e6  e4 07 18 92 77 d1 4a 2e   |.....J&.....w.J.|
0x33a70:   93 75 40 03 87 d2 bd 7d  b7 50 4f c5 90 2b b1 d5   |.u@....}.PO..+..|
0x33a80:   1c ef db 98 bb e2 8d 4d  91 6a 75 ff ae 01 9b ff   |.......M.ju.....|
0x33a90:   c0 4e 7b 38 55 19 77 b7  fa 0d 12 98 f4 4f d5 b1   |.N{8U.w......O..|
0x33aa0:   c0 4a 7f 3c a5 c4 ab 6b  c8 5b 44 ce 57 e1 7a 1e   |.J.<...k.[D.W.z.|
0x33ab0:   06 09 3d 7e 52 70 00 c0  7b 85 9b 11 27 b5 2e 4a   |..=~Rp..{...'..J|
0x33ac0:   ae 6c 59 1a 12 ac c4 04  67 ad b3 39 a7 28 b2 d6   |.lY.....g..9.(..|
0x33ad0:   2a f5 c1 82 66 1c 74 b4  18 20 00 8a 5c e8 7d 19   |*...f.t.. ..\.}.|
0x33ae0:   50 cb ff bc 46 78 18 d8  ed 2e 31 bb b1 36 ac c8   |P...Fx....1..6..|
0x33af0:   bd 63 56 15 36 44 2c ec  f7 30 2f a5 eb 60 fa 9e   |.cV.6D,..0/..`..|
0x33b00:   3a e9 dd 9e ef 96 f9 39  83 b9 a7 2d 21 5f c4 a0   |:......9...-!_..|
0x33b10:   6d bc 8e cd ad d0 bf 7f  3f f1 ef 65 0e 46 df bb   |m.......?..e.F..|
0x33b20:   67 ce f8 bb 0c 8e e2 22  f0 23 3c b6 26 52 cb af   |g......".#<.&R..|
0x33b30:   91 a8 92 d1 f5 90 ff 3f  ed 5a 45 cf 66 96 0f 6b   |.......?.ZE.f..k|
0x33b40:   f4 46 73 30 7a 14 7c bc  3b e1 ff 75 a9 d7 4c 28   |.Fs0z.|.;..u..L(|
0x33b50:   f1 4f 7a 39 aa 40 50 90  95 bb a5 2f cf 34 ae ca   |.Oz9.@P..../.4..|
0x33b60:   aa 91 a5 e6 ac 3e 52 92  12 32 2e a4 f5 12 88 ec   |.....>R..2......|
0x33b70:   10 37 03 40 f6 e3 8c 4c  87 a1 bf 35 a1 fb 60 04   |.7.@...L...5..`.|
0x33b80:   80 c3 f7 b4 11 99 f7 37  cb 60 7f f5 cc 23 b9 dd   |.......7.`...#..|
0x33b90:   e7 61 54 17 f5 f8 97 57  c8 a0 80 0a 5d b7 2c 48   |.aT....W....].,H|
0x33ba0:   f0 5a 6f 2c 7a 7c 14 d4  92 a2 be 34 4d 5b c0 a4   |.Zo,z|.....4M[..|
0x33bb0:   ec 62 57 14 6b 47 29 e9  55 e3 fd 77 e9 32 a8 cc   |.bW.kG).U..w.2..|
0x33bc0:   09 4c 7e 3d 79 71 1f df  f8 43 5c d6 7a 86 1f 7b   |.L~=yq...C\.z..{|
0x33bd0:   b2 ad 99 da 31 85 eb 2b  46 0a 16 9c 61 a3 38 5c   |....1..+F...a.8\|
0x33be0:   91 cc fe bd 4c be d2 12  cf 8d 93 19 ea 2d b7 d3   |....L........-..|
0x33bf0:   1d 44 76 35 31 9d f3 33  dd 9b 85 0f 73 a9 32 56   |.Dv51..3....s.2V|
0x33c00:   b3 b2 84 c7 72 5c 34 f4  d8 94 8c 06 da d6 4f 2b   |....r\4.......O+|
0x33c10:   8a e5 d1 92 ad 11 7f bf  4b 3d 23 a9 b0 e4 79 1d   |........K=#...y.|
0x33c20:   cc a7 93 d0 25 e5 8b 4b  ee 9e 82 08 06 32 ab cf   |....%..K.....2..|
0x33c30:   e3 96 a0 e3 66 a4 cc 0c  29 57 49 c3 67 55 ce aa   |....f...)WI.gU..|
0x33c40:   09 6c 5e 1d 05 dd b3 73  52 3a 26 ac 0c 34 a9 cd   |.l^....sR:&..4..|
0x33c50:   dc 9b af ec bc 12 7e be  c8 b0 b0 3a 09 2b b0 d4   |......~....:.+..|
0x33c60:   8d 8b c9 ac 92 20 c5 b0  47 af 00 99 71 fe d6 4d   |..... ..G...q..M|
0x33c70:   1a 47 96 c6 34 00 19 d1  33 53 ed 2f 78 a3 12 3c   |.G..4...3S./x..<|
0x33c80:   90 d6 0d dd 3f 28 f2 63  1d 7d db 0b ca ec f3 82   |....?(.c.}......|
0x33c90:   2d fb d8 b2 22 8e ae 0b  10 4f 22 a5 74 03 93 c2   |-..."....O".t...|
0x33ca0:   a4 76 8c 23 b6 5e 3e eb  2c 05 fd c6 16 60 0f 2a   |.v.#.^>.,....`.*|
0x33cb0:   f3 59 12 3e e7 b5 c8 4f  3b 9c 51 0e 35 59 22 1c   |.Y.>...O;.Q.5Y".|
0x33cc0:   52 73 b2 fe 6c d9 16 db  87 71 7a 3c 55 f9 a3 e2   |Rs..l....qz<U...|
0x33cd0:   0c b0 83 29 2e 64 f0 96  c9 62 f7 ca bf 68 38 f9   |...).d...b...h8.|
0x33ce0:   d7 a5 ff 88 d9 3c 0a 3a  0f 36 4f 1a 5a d1 48 50   |.....<.:.6O.Z.HP|
0x33cf0:   8f 63 dc 43 fa e8 0c 3e  06 a8 37 4a 77 9a 3f 0a   |.c.C...>..7Jw.?.|
0x33d00:   ed 66 e2 9e 6b 74 9e 2b  0c 39 46 14 ca df a2 15   |.f..kt.+.9F.....|
0x33d10:   69 5b 59 4c 71 eb ef 75  c4 ab 96 7d 9f 8b f9 8e   |i[YLq..u...}....|
0x33d20:   b5 44 75 8d 08 b9 c1 41  33 67 c9 17 80 58 8a 25   |.Du....A3g...X.%|
0x33d30:   32 00 4f 56 57 47 cf bc  07 85 08 60 01 0c a4 11   |2.OVWG.....`....|
0x33d40:   12 05 d6 4f fa 87 31 e1  56 70 d2 05 7a a8 c6 a4   |...O..1.Vp..z...|
0x33d50:   6b ab 15 cd af e0 3b ed  7a 61 14 81 f7 22 e7 9a   |k.....;.za..."..|
0x33d60:   36 31 f2 77 93 f1 fd 69  b4 f9 10 70 86 42 98 39   |61.w...i...p.B.9|
0x33d70:   54 d8 e7 98 58 fb 81 c8  df 69 23 52 b1 5e 57 b3   |T...X....i#R.^W.|
0x33d80:   88 7f 13 c9 a9 10 77 6c  fe ea 9d 86 da 4b 07 d3   |......wl.....K..|
0x33d90:   30 c1 be f6 b7 aa e4 8e  ce 94 66 dd 02 b1 9f ca   |0.........f.....|
0x33da0:   74 a6 1c c3 4c 44 59 58  7a 0e 29 5e f1 1d 17 3a   |t...LDYXz.)^...:|
0x33db0:   bc a1 69 6c 18 19 40 bf  3f e0 11 87 6c b5 a1 17   |..il..@.?...l...|
0x33dc0:   51 d8 a5 e4 ae ac 39 18  a0 48 57 0a e8 3e 28 10   |Q.....9..HW..>(.|
0x33dd0:   bc 6e d5 4d a5 ce 0d c9  18 51 0e 64 98 4e 39 0e   |.n.M.....Q.d.N9.|
0x33de0:   fa 26 41 5c 88 4a c6 b2  ad 15 93 7b 47 a1 f1 77   |.&A\.J.....{G..w|
0x33df0:   c2 aa bd f4 ed a8 af fc  8c 7b 06 9d 0d d3 ab 1b   |.........{......|
0x33e00:   8e d3 33 00 ff 7d 01 c1  02 df b9 be 28 9a dc 41   |..3..}......(..A|
0x33e10:   25 f6 32 f7 4c e4 d8 a6  c1 5f 4c 18 49 8f c7 53   |%.2.L...._L.I..S|
0x33e20:   dc 4b 37 f1 3e a3 d3 5d  c6 9d f9 37 e9 31 6a 6c   |.K7.>..]...7.1jl|
0x33e30:   06 ea fd 7d d7 65 58 af  61 41 60 d9 65 bb e3 6b   |...}.eX.aA`.e..k|
0x33e40:   4f 97 ae 1f 9c 6f 24 0e  3f ec 35 bf 72 b8 ea 65   |O....o$.?.5.r..e|
0x33e50:   52 22 34 f3 e8 82 0f 3c  b9 a3 a1 ae ab 09 ef 63   |R"4....<.......c|
0x33e60:   d8 35 cc aa 0d 43 f1 61  bf d6 8e 6d 9a c0 8e d4   |.5...C.a...m....|
0x33e70:   c6 0a 3c 0a 01 b1 f6 92  c5 30 71 c7 57 df 0a 2c   |..<......0q.W..,|
0x33e80:   33 06 7e 76 a5 83 a7 05  74 f8 fa 35 0c 52 15 cf   |3.~v....t..5.R..|
0x33e90:   a3 f0 0c 2a 5d c1 e7 8c  50 2a 80 90 53 b2 37 f3   |...*]...P*..S.7.|
0x33ea0:   30 09 77 78 c9 78 3f 1c  25 3a ee 2d 1a 02 d8 b0   |0.wx.x?.%:.-....|
0x33eb0:   2a 04 a3 e0 c6 75 36 12  fc 59 91 8e cb 43 30 00   |*....u6..Y...C0.|
0x33ec0:   49 3b 8e d6 f0 fc f4 67  16 44 83 92 5d c5 18 30   |I;.....g.D..]..0|
0x33ed0:   b5 a0 c1 55 77 7b 74 6e  f8 27 6a d5 a4 30 c2 55   |...Uw{tn.'j..0.U|
0x33ee0:   ba 62 74 7a a0 94 bc 17  1a aa dd 0f 71 ac 25 ef   |.btz........q.%.|
0x33ef0:   b6 ad c8 5b 8d 9c fe 6b  46 86 a0 59 e7 1f 5c 48   |...[...kF..Y..\H|
0x33f00:   e1 b1 07 d1 74 d8 fc 9e  c7 c7 48 e9 2d e7 8f 23   |....t.....H.-..#|
0x33f10:   cb 3f b0 0b d5 fd 5c 5e  86 fd 2e ad be 0f 32 f5   |.?....\^......2.|
0x33f20:   13 ad 60 62 6d d7 54 a7  dd 26 c2 ec 04 b3 d4 b8   |..`bm.T..&......|
0x33f30:   9a b6 91 35 1a 39 9c de  9e 69 8b 6b 50 1c ca ac   |...5.9...i.kP...|
0x33f40:   8c 55 1b 30 ed 5d dd a0  3d bd 8d 6f 07 3b be f4   |.U.0.]..=..o.;..|
0x33f50:   74 43 a8 1b 7b a4 7b 64  48 c5 ab a2 bd 48 e4 98   |tC..{.{dH....H..|
0x33f60:   c4 b7 da 47 cf 73 eb 84  10 03 88 69 f1 dc 41 5e   |...G.s.....i..A^|
0x33f70:   36 9f 99 cc b4 67 bb e4  78 a0 b2 45 eb c6 53 42   |6....g..x..E..SB|
0x33f80:   b2 91 73 89 2f 90 06 32  fc db 87 63 ba 79 56 44   |..s./..2...c.yVD|
0x33f90:   63 b5 39 0c 02 a0 68 8f  56 5c da fc 94 57 60 60   |c.9...h.V\...W``|
0x33fa0:   20 fb 70 8b 5c f6 6b 8d  a0 47 bd 4f 08 a5 67 93   | .p.\.k..G.O..g.|
0x33fb0:   12 9a ec 63 ae ce ee 82  10 15 3b 42 6c f2 94 31   |...c......;Bl..1|
0x33fc0:   b1 c7 63 60 74 71 08 cf  cf 80 90 79 a1 e2 fa 8c   |..c`tq.....y....|
0x33fd0:   63 32 5a 4e 6f 98 5f 5c  93 5e 07 6a d0 e8 27 1a   |c2ZNo._\.^.j..'.|
0x33fe0:   31 4e ea 67 9b 4a 25 f9  ea 1f ef da 4e 9d e2 9c   |1N.g.J%.....N...|
0x33ff0:   17 0c 94 33 d8 8d e5 79  4d ef 0b 62 bf 12 b6 0d   |...3...yM..b....|
0x34000:   6c f4 ef 61 e6 37 76 9b  e5 c6 03 9b 40 98 36 04   |l..a.7v.....@.6.|
0x34010:   23 e2 ca ae 86 f0 79 91  7c 65 2a 5c 4d 7c b5 0f   |#.....y.|e*\M|..|
0x34020:   4c e0 92 37 ef 82 ec 77  98 40 33 bb a8 e1 52 b5   |L..7...w.@3...R.|
0x34030:   a3 f0 20 eb c1 61 66 72  03 43 2b ab 9a 36 fc 88   |.. ..afr.C+..6..|
0x34040:   a4 2e 95 c4 17 f7 88 c6  10 f0 a3 5b 6f 62 a7 13   |...........[ob..|
0x34050:   b8 a9 f6 86 ad f4 b6 1b  ec 58 7b cb a1 f8 49 a7   |.........X{...I.|
0x34060:   5e c8 31 35 ea 01 3f a4  74 21 09 57 54 3d 7d a5   |^.15..?.t!.WT=}.|
0x34070:   96 97 5b ae ce dd 5e 06  8c cc bf 3f 0d f9 0c a0   |..[...^....?....|
0x34080:   0b 0c 40 30 ea 36 ec 01  ae fa 9b 05 4e 18 b2 16   |..@0.6......N...|
0x34090:   3a d9 2f 99 50 6a 84 20  a0 03 35 14 b5 78 f2 bc   |:./.Pj. ..5..x..|
0x340a0:   b3 8d be 2c a4 fa 64 90  ee dc 56 0c da e4 1a d2   |...,..d...V.....|
0x340b0:   a0 13 a3 67 93 0c c0 e5  5b 70 9e 37 07 ca 2c f5   |...g....[p.7..,.|
0x340c0:   be b3 63 82 2b d2 54 62  c2 5b ac 7f 6b 48 d2 e9   |..c.+.Tb.[..kH..|
0x340d0:   96 82 b4 48 ca 34 19 24  d5 d6 5a bd de d3 c9 77   |...H.4.$..Z....w|
0x340e0:   90 fe 15 0f 16 cf b5 8f  0e 6f 8a ff 9b a3 60 ee   |.........o....`.|
0x340f0:   da dd de d3 46 c8 b1 e0  a0 16 da f2 54 d4 3a 87   |....F.......T.:.|
0x34100:   db e3 03 7d e6 5a a4 75  0b 68 84 f4 9d 49 25 76   |...}.Z.u.h...I%v|
0x34110:   ba 58 d1 85 4d 2b fa 73  9c b7 ed 88 4d 12 be a7   |.X..M+.s....M...|
0x34120:   c1 74 10 3d a2 05 ce ee  ec e8 87 13 22 62 15 84   |.t.=........"b..|
0x34130:   5e 4f cb 46 c1 0b 33 15  93 29 f0 c3 d5 4f 21 19   |^O.F..3..)...O!.|
0x34140:   09 d8 d2 62 85 f5 6e f4  e3 f3 95 0e 3a 2d 94 96   |...b..n.....:-..|
0x34150:   ba 14 50 97 66 ff 62 45  f6 35 11 2e c4 0c aa 6f   |..P.f.bE.5.....o|
0x34160:   25 f4 ea 4e 7b 39 e6 65  62 31 e0 64 28 74 09 92   |%..N{9.eb1.d(t..|
0x34170:   51 e6 05 a8 75 45 47 22  f6 02 c2 8b 38 bd 83 b9   |Q...uEG"....8...|
0x34180:   f2 12 54 f8 22 b4 e3 57  79 bc 16 a6 29 ed e3 46   |..T."..Wy...)..F|
0x34190:   61 bf 6b 5c ac 20 01 5d  9b 47 4d 92 66 74 fa 62   |a.k\. .].GM.ft.b|
0x341a0:   c3 1d 5e 9c d9 9d d7 ca  25 09 ce 3a 07 fd 0a 75   |..^.....%..:...u|
0x341b0:   c8 68 f1 d0 26 85 30 f2  58 30 17 fb 73 4a 27 cc   |.h..&.0.X0..sJ'.|
0x341c0:   5a a4 79 41 be fd 97 60  eb 76 9a 58 ec c3 20 44   |Z.yA...`.v.X.. D|
0x341d0:   17 d5 d0 d8 60 c9 46 7f  e7 2f f4 ac 40 d3 3e e8   |....`.F../..@.>.|
0x341e0:   53 41 c1 22 e0 02 3d 1e  2e b3 eb 5d 6a 1a 47 33   |SA."..=....]j.G3|
0x341f0:   e3 bc 69 e6 c6 6b 73 bf  04 28 0d 38 dc 40 2b 7d   |..i..ks..(.8.@+}|
0x34200:   6e 32 9d 9e 1f c6 4e a1  6d 98 2e 8a 9b 37 71 14   |n2....N.m....7q.|
0x34210:   8c 33 6a 01 95 1c 29 d6  f0 6d 88 45 90 2c 63 09   |.3j...)..m.E.,c.|
0x34220:   0e 37 6c d4 d8 17 d2 f8  b6 d8 a7 46 0b 82 5c ad   |.7l........F..\.|
0x34230:   b0 fc e0 2a 23 9d 20 55  0f 42 49 fd 84 08 5b 25   |...*#. U.BI...[%|
0x34240:   bb af 82 6f 1d e1 81 12  a8 14 2f d7 95 01 55 2e   |...o....../...U.|
0x34250:   70 36 6e 6e c4 cb b3 5a  f4 80 3e 2d 1f 05 53 fb   |p6nn...Z..>-..S.|
0x34260:   60 ce 37 e0 08 36 ee bb  8d af fd 2f ea 65 e4 ce   |`.7..6...../.e..|
0x34270:   63 3e 97 fa fe 32 1d 4b  6f 51 57 51 f8 e1 1c 07   |c>...2.KoQWQ....|
0x34280:   58 80 eb 13 d1 63 8a 2b  b4 db a5 fc 83 ff ff 50   |X....c.+.......P|
0x34290:   b1 0d b7 af 96 23 03 e7  7e a2 00 d4 a7 dc c3 13   |.....#..~.......|
0x342a0:   6d 77 e5 18 42 fc 93 0f  72 d0 bd 85 3b 34 80 5e   |mw..B...r...;4.^|
0x342b0:   6a a3 7d 2e 53 f3 9d 04  16 b1 1e 78 7d dc 30 e3   |j.}.S......x}.0.|
0x342c0:   87 90 4b 09 ce 30 e8 6e  30 a3 02 6e 06 f4 00 11   |..K..0.n0..n....|
0x342d0:   11 c1 c8 a1 4c b1 e1 ed  98 4c 45 4c 36 2a 65 dc   |....L....LEL6*e.|
0x342e0:   57 76 e7 a2 fe 78 98 36  12 fd 9f 6a a1 ce df 05   |Wv...x.6...j....|
0x342f0:   1c ca c6 aa f5 3a e4 df  02 82 c9 b2 59 b8 78 97   |.....:......Y.x.|
0x34300:   0c 07 4c 81 c5 38 11 fa  c4 69 79 0f f4 64 13 51   |..L..8...iy..d.Q|
0x34310:   96 b2 96 a7 e3 98 d1 1f  d3 0f 3d ca 51 da c5 c6   |..........=.Q...|
0x34320:   29 62 ff db cc 90 28 8b  ad e4 7c 3d c8 3f 88 80   |)b....(...|=.?..|
0x34330:   14 91 a8 5e a6 59 51 50  67 ab fb fa 65 22 9c 48   |...^.YQPg...e".H|
0x34340:   39 1b ad 6c 4f 1a 2f 03  1f ad ff 95 48 56 c4 9b   |9..lO./.....HV..|
0x34350:   53 aa 86 00 25 c0 eb 89  db 8a 32 9c 9e 10 a8 d5   |S...%.....2.....|
0x34360:   22 dc da bc 79 30 0b 39  99 aa f9 40 36 ab 6e e5   |"...y0.9...@6.n.|
0x34370:   0f 99 51 ca 70 80 6b c6  08 94 d5 a4 30 b9 72 f3   |..Q.p.k.....0.r.|
0x34380:   0d 73 14 52 0d c3 bd 51  c8 a6 f3 24 9a be 74 26   |.s.R...Q...$..t&|
0x34390:   2d 39 91 2f 21 ad 00 00  4c fc 6c 9a c8 8c 50 1c   |-9./!...L.l...P.|
0x343a0:   ff 71 16 e8 0f b0 02 ba  6d 9d df c0 de 8c a3 ec   |.q......m.......|
0x343b0:   20 ee fe 86 db 2a 0d ec  a3 1b d2 2c 2f 80 01 4c   | ....*.....,/..L|
0x343c0:   eb 62 fd 61 92 cd 40 aa  7c b2 e9 e7 23 12 bc 1d   |.b.a..@.|...#...|
0x343d0:   c0 5c d3 3f 39 9c d3 a5  62 27 fa a7 29 cd 2a 20   |.\.?9...b'..).* |
0x343e0:   78 ec fa e9 63 e2 76 8d  a4 cf 4a 1a 16 0a ac ba   |x...c.v...J.....|
0x343f0:   c2 96 ae 8b 2a 22 f6 c2  19 2b f2 79 9f 5e 3d 0f   |....*"...+.y.^=.|
0x34400:   0e ef fc 3c e4 b3 14 c8  06 23 0b ed 25 de 34 8c   |...<.....#..%.4.|
0x34410:   20 cc 33 8f 11 be 1e ac  ab 0c cc 80 bd 5f 3f b5   | .3.........._?.|
0x34420:   fa 93 aa e4 3b 29 f8 c9  d4 13 2b b8 3a ba 85 6c   |....;)....+.:..l|
0x34430:   2e 22 76 17 9e a3 fd fb  8d 0b 3b 1f 93 18 b8 72   |."v.......;....r|
0x34440:   f0 95 59 14 34 4d 49 29  2c 83 cb 08 c3 4d 23 a3   |..Y.4MI),....M#.|
0x34450:   79 f8 1b 04 35 73 94 87  88 5b 5b e0 59 a3 97 71   |y...5s...[[.Y..q|
0x34460:   28 29 cc 80 e0 3c c7 70  3e 88 f1 19 27 32 61 1e   |()...<.p>...'2a.|
0x34470:   7b 43 57 4c 40 5d 65 50  d7 3e 99 e5 e7 43 64 43   |{CWL@]eP.>...CdC|
0x34480:   f4 58 c9 dd df ef 62 78  ed 1a a3 cb 0a fd d2 0c   |.X....bx........|
0x34490:   45 37 60 f0 97 87 43 de  28 b4 b2 f9 6e bd 78 e3   |E7`...C.(...n.x.|
0x344a0:   7d a6 d5 7d 2b 67 f3 0e  d3 d7 aa b3 0e 56 16 80   |}..}+g.......V..|
0x344b0:   07 bc 9e 52 01 c4 86 e5  83 1f 91 2a e7 63 31 b9   |...R.......*.c1.|
0x344c0:   6b 7b 7b 78 4b 57 01 89  5c 2d d9 c7 6a 9d 2d 19   |k{{xKW..\-..j.-.|
0x344d0:   7e ac b1 a4 f1 1a 47 34  e5 db 1b d4 e5 86 b3 88   |~.....G4........|
0x344e0:   3e 0d f6 ae 4f b6 ec 6c  91 0b 59 83 d9 2f 2a 31   |>...O..l..Y../*1|
0x344f0:   61 c6 2a 68 4d b2 83 b8  2d 5b 54 11 f2 75 43 7a   |a.*hM...-[T..uCz|
0x34500:   2b 1b 84 6d e3 a7 16 24  a0 05 52 8e 7b 6a b2 3f   |+..m...$..R.{j.?|
0x34510:   e4 c9 7c 50 f6 f9 10 bb  d4 6c 2e 1d 34 f1 63 6b   |..|P.....l..4.ck|
0x34520:   c4 08 c4 4f 14 ce 8d e8  27 07 b5 d1 ab 5a 40 b8   |...O....'....Z@.|
0x34530:   e3 d3 bf f4 1e 31 76 17  6a 71 65 32 89 6e dd eb   |.....1v.jqe2.n..|
0x34540:   6f ca 9b 0f 4c 6d 97 d7  24 15 a8 c6 6f db 52 48   |o...Lm..$...o.RH|
0x34550:   30 49 6e a0 5a 61 26 b0  66 90 88 d7 52 e5 ab c2   |0In.Za&.f...R...|
0x34560:   53 f2 b7 3b 18 e6 06 a1  6e 61 c2 4f a9 46 56 a2   |S..;....na.O.FV.|
0x34570:   4a 1d 51 d3 e8 44 41 ab  61 43 2d df ea cc 7d be   |J.Q..DA.aC-...}.|
0x34580:   3a 4d 01 74 9a e0 34 40  eb 97 00 5c 3e ad 82 ab   |:M.t..4@...\>...|
0x34590:   ab 73 a5 cb 0d 03 3e fa  a4 cc 34 22 ba b5 a6 50   |.s....>...4"...P|
0x345a0:   4d 47 65 ad cc d4 a9 13  67 4f 9c b8 36 46 b1 fd   |MGe.....gO..6F..|
0x345b0:   dc e9 29 aa b9 33 91 48  83 96 5d 69 a4 68 08 55   |..)..3.H..]i.h.U|
0x345c0:   9c 61 b8 dc 74 94 03 fc  c1 1b fe fe 31 70 80 de   |.a..t.......1p..|
0x345d0:   90 c8 21 65 84 45 1c 9e  8c 75 0a e6 24 72 2c ae   |..!e.E...u..$r,.|
0x345e0:   00 da db 2d 43 3f 7d 1a  0d 6b fb a3 60 08 f7 40   |...-C?}..k..`..@|
0x345f0:   c0 71 1f a1 ee 70 dc f8  9c 8c 9e cd be 64 b9 32   |.q...p.......d.2|
0x34600:   3a 86 67 d8 8c 4d c2 2d  ef af 2c 68 95 3e d0 79   |:.g..M.-..,h.>.y|
0x34610:   3f 73 f8 fe 69 2b b5 b3  de 09 e3 e9 a2 2c cd 6e   |?s..i+.......,.n|
0x34620:   46 75 2d 40 66 d2 9b f2  37 27 e0 2b 0b 14 69 d1   |Fu-@f...7'.+..i.|
0x34630:   90 f8 d3 e2 f1 23 36 35  d2 c8 5b f6 86 14 e1 5a   |.....#65..[....Z|
0x34640:   c7 9a 96 9d 79 82 71 3f  83 ae 71 5d 93 1a ea 57   |....y.q?..q]...W|
0x34650:   51 77 97 2a a6 b0 39 d2  1b c0 8b 15 9a 1c 3f e9   |Qw.*..9.......?.|
0x34660:   ad 2f 19 3e 54 ee d8 12  30 7d 89 60 ff ab 0a 20   |./.>T...0}.`... |
0x34670:   61 90 03 01 57 1f 28 e0  d3 d6 f7 86 7f 54 c3 3e   |a...W.(......T.>|
0x34680:   27 f4 ea 0e 0a 8a 48 d3  4c 25 5a 41 6c b1 94 b1   |'.....H.L%ZAl...|
0x34690:   79 b0 56 fb 4e 01 84 90  4a 82 72 9f 52 8d d7 51   |y.V.N...J.r.R..Q|
0x346a0:   26 fe e1 03 aa 90 6c 28  60 3d 23 8f b9 cf 9a e1   |&.....l(`=#.....|
0x346b0:   d6 65 d7 08 a7 9e 67 25  43 a0 de ef 55 80 27 a3   |.e....g%C...U.'.|
0x346c0:   07 54 f0 31 69 ec 0d ac  55 84 c8 f5 81 50 d5 24   |.T.1i...U....P.$|
0x346d0:   bc d0 58 ab ed e2 8e 2a  f0 c4 ea 91 cf 2a 18 d0   |..X....*.....*..|
0x346e0:   35 00 5c 69 39 9c 55 c4  83 1f cc 1f 74 91 c1 4b   |5.\i9.U.....t..K|
0x346f0:   cd de 53 a6 7f e8 bc cb  42 49 14 33 51 38 53 ff   |..S.....BI.3Q8S.|
0x34700:   8e 55 78 ba 81 13 99 87  1e f9 a9 71 26 5d 95 06   |.Ux........q&]..|
0x34710:   fd 8e 5e 34 25 d3 7c ad  bc bc 6c 4a 6f 8b 02 ef   |..^4%.|...lJo...|
0x34720:   31 e8 22 a7 21 2c e8 86  ac fe 9b 90 d5 c7 44 52   |1.".!,........DR|
0x34730:   24 b1 a7 be 6d 53 33 68  69 7b 5c de ef d3 8c fb   |$...mS3hi{\.....|
0x34740:   b2 b6 95 5f b0 2d 60 0d  6b 7f 33 0a 07 8c 5f da   |..._.-`.k.3..._.|
0x34750:   05 9f f9 49 1a e9 ea f3  51 b4 3a 72 d1 e7 11 a8   |...I....Q.:r....|
0x34760:   fb c2 45 bc 8e 09 5a 23  76 79 e6 b4 70 22 21 3c   |..E...Z#vy..p"!<|
0x34770:   3c 4a 33 95 62 69 a5 36  50 55 02 29 66 3e 37 26   |<J3.bi.6PU.)f>7&|
0x34780:   5a 0d ab 9b eb be 32 df  81 73 82 6d 6f 3c e2 98   |Z.....2..s.mo<..|
0x34790:   a4 8a d6 bf 19 04 63 cf  b0 ee 3c ed 5d 20 d8 b6   |......c...<.] ..|
0x347a0:   61 0f 11 f1 1e 02 d9 a5  53 5f 66 f0 66 ed 28 44   |a.......S_f.f.(D|
0x347b0:   e1 e6 7f 92 9f 0f 8f 9d  d9 53 8a a2 39 4f 88 11   |.........S..9O..|
0x347c0:   5a e6 98 cd 05 44 c9 20  86 69 41 c9 e3 f3 d9 01   |Z....D. .iA.....|
0x347d0:   97 cc c6 3a 56 d1 c6 c7  15 7c 01 eb b2 66 e4 07   |...:V....|...f..|
0x347e0:   eb e2 10 46 e0 75 ee 19  b1 cc bc a9 f3 e3 7e 7c   |...F.u........~||
0x347f0:   59 b7 72 00 a4 f6 a1 dc  19 74 df 58 2b 73 cb f1   |Y.r......t.X+s..|
0x34800:   f6 e4 c5 f8 3b 18 ab 66  25 8b 4b 73 af 7c 48 77   |....;..f%.Ks.|Hw|
0x34810:   17 2c 76 ea 48 1e cf bf  00 4e 26 d2 30 71 71 9b   |.,v.H....N&.0qq.|
0x34820:   63 b3 1d d4 b9 fc aa d1  fd aa 1e 89 93 cb a8 00   |c...............|
0x34830:   b5 6f ee e4 37 ff 98 30  09 bb b9 f4 01 f8 b6 d5   |.o..7..0........|
0x34840:   6c 42 ed 26 a5 4b 4a a6  95 4b ae 59 4e 6d 67 81   |lB.&.KJ..K.YNmg.|
0x34850:   13 04 fd a3 8f 98 e4 a3  41 db 46 e1 b4 d9 b5 17   |........A.F.....|
0x34860:   cd 58 89 71 b4 19 78 7e  08 a4 0c 86 16 7a 50 e7   |.X.q..x~.....zP.|
0x34870:   ab c3 45 2e d9 bb 58 a2  c2 cc f0 6b 6b 7f 0d 23   |..E...X....kk..#|
0x34880:   c4 5d d4 b5 6f bc 70 49  a2 f6 de 5d e1 c9 42 c2   |.]..o.pI...]..B.|
0x34890:   df f4 f9 60 1b 9d d6 15  40 e7 ec a4 a5 63 ad a2   |...`....@....c..|
0x348a0:   52 41 74 34 ff 2d 06 85  67 ff a6 7b 81 0d ce 3e   |RAt4.-..g..{...>|
0x348b0:   73 0a 5b aa 5f 58 ed 73  b3 c4 3f d7 5b 2a f7 13   |s.[._X.s..?.[*..|
0x348c0:   b7 ef 71 0a f7 df 81 ad  c5 8c d2 fc d1 36 57 92   |..q..........6W.|
0x348d0:   64 25 ad 3b ae 99 3c 4b  77 4e c1 71 be a8 c6 09   |d%.;..<KwN.q....|
0x348e0:   09 63 a7 47 5e 32 64 b1  ab 0c 96 c9 2b 31 7f 79   |.c.G^2d.....+1.y|
0x348f0:   46 be 61 64 5e 5d b0 b7  ff 01 04 b1 75 58 34 0e   |F.ad^]......uX4.|
0x34900:   27 11 64 5a 57 c8 2c 25  ad 07 9b c0 76 a9 71 93   |'.dZW.,%....v.q.|
0x34910:   59 e8 59 e1 9d ce b3 54  18 7c 08 10 01 79 25 c8   |Y.Y....T.|...y%.|
0x34920:   1c 51 46 cd 75 53 e0 7a  b6 e0 c4 4f ae 5b f6 bb   |.QF.uS.z...O.[..|
0x34930:   6b 2b fd f6 ec a8 1f 74  25 31 27 8e 7e c6 a5 95   |k+.....t%1'.~...|
0x34940:   66 0f 06 6e 1d 4a df 8a  cc fd d3 54 37 4a 06 f7   |f..n.J.....T7J..|
0x34950:   e8 fa a9 ad 25 f9 b8 80  4c dd c2 92 fd b0 8c d6   |....%...L.......|
0x34960:   56 23 32 4a ad d8 a9 46  21 98 5a 96 a2 4d ec a9   |V#2J...F!.Z..M..|
0x34970:   3d c6 da 5f 10 a0 a3 3a  07 79 ca a5 2c 67 f0 66   |=.._...:.y..,g.f|
0x34980:   f0 95 7d ab b0 ea 48 cc  5f 55 49 1b d0 99 e5 36   |..}...H._UI....6|
0x34990:   e3 31 c2 06 d6 e0 f2 5f  98 61 37 e0 dd bd 1e ae   |.1....._.a7.....|
0x349a0:   f2 f1 a4 a4 ac 77 1b e2  1f ca ad af b1 aa b3 26   |.....w.........&|
0x349b0:   61 bd a3 d1 0f 50 40 fb  6a 08 7c 97 a0 13 1b 90   |a....P@.j.|.....|
0x349c0:   dd 2c d5 1d 74 dd f4 82  f3 ab eb d1 a3 9b 90 19   |.,..t...........|
0x349d0:   88 b5 6c 6d 29 c3 96 b6  51 60 f3 88 b1 37 e0 08   |..lm)...Q`...7..|
0x349e0:   9d 4f 24 f9 16 a4 12 7d  4a af b6 15 8c ec 0e c0   |.O$....}J.......|
0x349f0:   f9 8b a8 05 5c 03 f0 14  70 cb d8 80 a4 a2 7c 9a   |....\...p.....|.|
0x34a00:   c9 f3 d1 8b 2d 1d 25 ba  97 79 7d 3f 82 cb 37 ed   |....-.%..y}?..7.|
0x34a10:   02 6d f7 8a 0e 6c bb 63  f5 b6 fc ca 74 d6 20 f6   |.m...l.c....t. .|
0x34a20:   00 ba 49 8f c9 45 fa 68  16 b6 3e 7f a7 72 9f 5b   |..I..E.h..>..r.[|
0x34a30:   90 47 eb 45 1f e9 3d e3  bc 0e e3 e6 a4 fa 14 d2   |.G.E..=.........|
0x34a40:   f6 02 94 16 82 af 37 9f  a6 24 48 b3 b6 f1 19 db   |......7..$H.....|
0x34a50:   0e 04 23 8c b4 e7 da b4  bb de 00 27 b4 24 a7 de   |..#........'.$..|
0x34a60:   4b 8e 37 74 e5 06 1a 4a  7c dd 75 08 0f 12 6e bf   |K.7t...J|.u...n.|
0x34a70:   ef 97 08 84 1a f7 e8 4d  da a2 93 f7 fb d8 70 3b   |.......M......p;|
0x34a80:   9f 7e 07 c6 89 96 db 1c  2c 10 54 7c 1c 90 ff 24   |.~......,.T|...$|
0x34a90:   d7 c2 f2 b4 14 5b 98 5c  8d 27 8a 06 34 cd 1f 06   |.....[.\.'..4...|
0x34aa0:   a9 75 0a cf a8 b2 20 84  4c 77 9a 68 7b 82 af e9   |.u.... .Lw.h{...|
0x34ab0:   15 44 01 1b aa b9 2d 8d  b3 8b fa 17 ef 3c ed 01   |.D....-......<..|
0x34ac0:   4f 65 38 36 fb d3 a4 4f  9b 9d e0 05 03 cf 6a 29   |Oe86...O......j)|
0x34ad0:   d0 cc a2 79 06 51 22 cf  e0 bf 84 ec aa 03 9e f3   |...y.Q".........|
0x34ae0:   bb cf 60 cc b3 8b cc 07  3e 9a 0a 5b 54 db 05 14   |..`.....>..[T...|
0x34af0:   de c7 af 70 13 63 c3 45  6c 42 26 26 b7 48 b1 6d   |...p.c.ElB&&.H.m|
0x34b00:   58 ed b3 bf 42 48 8f 47  20 fd 64 ce 20 8f 48 be   |X...BH.G .d. .H.|
0x34b10:   16 cb 3d 08 06 a3 a5 e7  e8 39 5f a8 5a 1a a1 03   |..=......9_.Z...|
0x34b20:   b3 b6 ae d8 53 37 8e ef  2d cf 85 44 93 60 1c e5   |....S7..-..D.`..|
0x34b30:   08 34 b7 29 8e ee 60 27  ae 0a cb 0d ab 98 b5 fb   |.4.)..`'........|
0x34b40:   09 02 56 a3 5c bf 05 66  b6 67 1f 0b 67 45 94 8f   |..V.\..f.g..gE..|
0x34b50:   36 6e 40 10 1c 35 fb c0  ef 6f 67 2d 7f 0b e6 d5   |6n@..5...og-....|
0x34b60:   e6 d1 b5 62 40 85 2b 50  b8 b4 a1 0e c5 3a 72 70   |...b@.+P.....:rp|
0x34b70:   71 a8 9c 21 a4 7c 3e 00  98 58 3c 34 dd 2c 68 62   |q..!.|>..X<4.,hb|
0x34b80:   b0 40 92 cb fe ec d7 bd  ba d8 78 01 e7 f9 d6 67   |.@........x....g|
0x34b90:   39 43 b6 81 57 be c7 d3  39 6a f8 5c 07 c4 f8 51   |9C..W...9j.\...Q|
0x34ba0:   ba 86 f8 c8 59 08 ad d0  ae 34 e5 3b 98 34 0a 56   |....Y....4.;.4.V|
0x34bb0:   d6 eb 9b 54 5a 52 95 55  a7 e0 b7 bd 3e 94 5f a5   |...TZR.U....>._.|
0x34bc0:   d9 0c c4 db a3 18 28 b3  c0 15 dc 16 af c3 4f cb   |......(.......O.|
0x34bd0:   0b 53 33 e2 34 19 cf e4  d7 55 fe 81 1d 00 4a 16   |.S3.4....U....J.|
0x34be0:   e6 84 4f 52 dd 31 11 9e  2b ea bc 69 a7 66 32 d3   |..OR.1..+..i.f2.|
0x34bf0:   36 e7 09 2c 61 80 d4 5e  d7 8b 4d 8d 3a d1 bf 87   |6..,a..^..M.:...|
0x34c00:   e8 51 f1 57 87 76 6e cd  f2 1e 66 85 47 54 39 07   |.Q.W.vn...f.GT9.|
0x34c10:   bb e3 e3 72 81 12 b7 c2  b9 74 c7 ac 40 6b d5 84   |...r.....t..@k..|
0x34c20:   46 8a dd 2a 63 75 d9 57  1a 4c 9c b5 de b4 4e 63   |F..*cu.W.L....Nc|
0x34c30:   7e 7b ed 98 6a 47 38 dd  2e ed e1 ad c7 ae 9b cd   |~{..jG8.........|
0x34c40:   9d 7a 2f 2d ba 95 ae 33  c2 fc 4c 25 40 7d cf 96   |.z/-...3..L%@}..|
0x34c50:   e3 6a aa 4e 1b 3b ab 0d  56 14 f4 fd f8 af 59 78   |.j.N.;..V.....Yx|
0x34c60:   e6 e0 3d 7b e4 4f da 35  c6 94 5c e5 58 c6 3c 94   |..={.O.5..\.X.<.|
0x34c70:   88 82 5f 19 df 70 e5 0a  0d 5b 93 2a b9 2b d1 79   |.._..p...[.*.+.y|
0x34c80:   13 0d d0 96 b5 06 93 7c  17 5d 95 2c 1b 8d 77 df   |.......|.].,..w.|
0x34c90:   41 33 ee a8 2a b5 20 cf  87 29 e1 58 82 e8 12 ba   |A3..*. ..).X....|
0x34ca0:   d8 ce 13 55 1e a5 30 df  a5 c7 0f b6 1f 91 6b c3   |...U..0.......k.|
0x34cb0:   43 29 f4 b2 d6 69 fc 13  67 01 c9 70 1e 94 6e c6   |C)...i..g..p..n.|
0x34cc0:   98 86 5b 1d 7b c8 5d b2  07 be 75 cc e1 57 ad 05   |..[.{.]...u..W..|
0x34cd0:   8c 76 ab ed 4f 98 0d e2  61 17 df 66 62 d8 22 8a   |.v..O...a..fb.".|
0x34ce0:   00 e7 3b 7d b6 3d a8 47  58 6a a2 1b df 21 db 73   |..;}.=.GXj...!.s|
0x34cf0:   36 14 c9 8f 53 84 11 fe  b3 dd 15 ac d4 2e d4 7c   |6...S..........||
0x34d00:   82 5c 81 c7 c9 0a 9f 70  61 6b a3 1a ae 18 e2 4a   |.\.....pak.....J|
0x34d10:   22 f1 2d 6b 43 bc 29 c6  9b 3d f5 4c ef 5d a7 0f   |".-kC.)..=.L.]..|
0x34d20:   ec ba 67 21 f3 68 fd 12  3d 5f 97 2e 1b 76 8f 27   |..g!.h..=_...v.'|
0x34d30:   d0 9a 47 01 68 9f 0a e5  bc da 12 ab 73 a1 5b f3   |..G.h.......s.[.|
0x34d40:   fa c4 19 5f ee 1d 88 67  46 5c 94 2d fc 5a a0 08   |..._...gF\.-.Z..|
0x34d50:   15 e0 02 44 a2 cd 58 b7  b9 2f e7 5e e4 36 cc 64   |...D..X../.^.6.d|
0x34d60:   06 c1 1d 5b 55 be 2b c4  9a 08 c0 79 29 78 8d 25   |...[U.+....y)x.%|
0x34d70:   76 34 e9 af c9 2e bb 54  78 66 ae 17 df 05 ff 57   |v4.....Txf.....W|
0x34d80:   a8 66 bb fd 91 e2 77 98  38 a3 6a d3 89 df 25 8d   |.f....w.8.j...%.|
0x34d90:   35 f0 32 74 d4 23 b6 59  66 48 80 39 6b 81 7b d3   |5.2t.#.YfH.9k.{.|
0x34da0:   28 df 03 45 ed 36 a3 4c  34 b7 7e c7 2d 44 b9 11   |(..E.6.L4.~.-D..|
0x34db0:   9d 4f 92 d4 54 ab 3e d1  69 47 8f 36 ab c9 33 9b   |.O..T.>.iG.6..3.|
0x34dc0:   42 ed 31 77 50 54 c6 29  42 b9 70 c9 32 45 be 16   |B.1wPT.)B.p.2E..|
0x34dd0:   6f 15 c8 8e bc cb 5e b1  8d 63 ab 12 65 97 6d c5   |o.....^..c..e.m.|
0x34de0:   84 22 ff b9 95 9e 0b e4  67 55 9d 24 ed 13 e9 41   |."......gU.$...A|
0x34df0:   9c 3e e3 a5 b5 fa 6f 80  e3 2d e5 5c eb 19 e3 4b   |.>....o..-.\...K|
0x34e00:   ab 45 98 de 71 a2 37 d8  5c a7 6e d7 f0 16 ec 44   |.E..q.7.\.n....D|
0x34e10:   78 0a d7 91 ca f5 60 8f  55 bc 73 ca f7 15 ef 47   |x.....`.U.s....G|
0x34e20:   d4 62 bf f9 31 6b ff 10  22 e1 28 91 72 9c 66 ce   |.b..1k..".(.r.f.|
0x34e30:   f2 78 a5 e3 46 7a ec 03  17 f2 39 80 03 12 eb 43   |.x..Fz....9....C|
0x34e40:   ed 73 ae e8 ba e9 7c 93  89 43 8b 32 06 11 ea 42   |.s....|..C.2...B|
0x34e50:   31 b4 6e 28 7a 56 c0 2f  a2 74 bc 05 62 79 82 2a   |1.n(zV./.t..by.*|
0x34e60:   0e 89 55 13 fc d7 42 ad  3d f0 27 9e 4c 53 a8 00   |..U...B.=.'.LS..|
0x34e70:   7f fe 20 66 0e 22 b4 5b  f4 22 ea 53 eb f9 03 ab   |.. f.".[.".S....|
0x34e80:   ab 25 f8 be a7 b4 21 ce  eb 31 f9 40 cb dd 27 8f   |.%....!..1.@..'.|
0x34e90:   d0 42 9f d9 e5 f2 67 88  d6 18 d0 69 8a 61 9a 32   |.B....g....i.a.2|
0x34ea0:   b2 24 f9 bf d1 ea 7f 90  68 8b 42 fb 3f 32 cb 63   |.$......h.B.?2.c|
0x34eb0:   e7 55 88 ce d4 eb 7e 91  2d cc 03 ba 9c 96 6c c4   |.U....~.-.....l.|
0x34ec0:   ee 50 8d cb ac bf 2a c5  33 ca 01 b8 fd fb 01 a9   |.P....*.3.......|
0x34ed0:   44 af 73 35 34 34 a6 49  0f 22 e9 50 7f 7e 87 2f   |D.s544.I.".P.~./|
0x34ee0:   93 f6 28 6e bc b7 22 cd  56 e5 2c 95 9c 63 98 30   |..(n..".V.,..c.0|
0x34ef0:   4d b0 72 34 68 70 fa 15  0d 3c f3 4a a8 9a 60 c8   |M.r4hp...<.J..`.|
0x34f00:   83 de 00 46 02 f2 64 8b  76 9d 54 ed 2b 1e e7 4f   |...F..d.v.T.+..O|
0x34f10:   ca 18 c5 83 a1 5f cb 24  be 40 88 31 42 09 f2 5a   |....._.$.@.1B..Z|
0x34f20:   f8 4e 93 d5 6b 11 85 6a  42 c1 08 b1 76 59 a2 0a   |.N..k..jB...vY..|
0x34f30:   26 75 a9 ef f3 94 01 ee  89 88 4f f6 61 34 c9 61   |&u........O.a4.a|
0x34f40:   e6 28 f5 b3 ee 9d 08 e7  24 3f f6 4f 2b ee 17 bf   |.(......$?.O+...|
0x34f50:   88 cb 17 51 dc 8b 1e f1  b2 a5 6c d5 35 e8 1d b5   |...Q......l.5...|
0x34f60:   6b ae 70 36 f0 9b 0e e1  c4 56 9e 27 7e 21 da 72   |k.p6.....V.'~!.r|
0x34f70:   00 3b e7 a1 ae 42 d4 3b  2f 3a f1 48 80 23 d8 70   |.;...B.;/:.H.#.p|
0x34f80:   cd 03 de 98 c7 55 c1 2e  84 ef 26 9f 9c 4b b0 18   |.....U....&..K..|
0x34f90:   5f 96 48 0e 39 c7 53 bc  0c 13 da 63 9e 4d b6 1e   |_.H.9.S....c.M..|
0x34fa0:   a4 d3 0f 49 8c 18 82 6d  a3 82 49 f0 f4 ba 40 e8   |...I...m..I...@.|
0x34fb0:   81 ac 76 30 2c f4 66 89  ba b5 7c c5 54 1f e4 4c   |..v0,.f...|.T..L|
0x34fc0:   71 a0 42 04 e0 a3 36 d9  ae 85 4c f5 ea 8c 76 de   |q.B...6...L...v.|
0x34fd0:   03 22 fc ba 00 90 1a f5  0c 63 aa 13 3e fd 06 ae   |.".......c..>...|
0x34fe0:   f4 12 cf 89 ed a6 33 dc  77 c6 0d b4 a0 5f a4 0c   |......3.w...._..|
0x34ff0:   fe 1c c1 87 ab 6d f9 16  3d 0c c3 7a 21 a4 59 f1   |.....m..=..z!.Y.|
0x35000:   64 7b a7 e1 ee ad 38 d7  ff 45 8d 34 99 30 d5 7d   |d{....8..E.4.0.}|
0x35010:   23 32 ec aa aa 16 80 6f  21 68 af 16 d8 73 88 20   |#2.....o!h...s. |
0x35020:   93 a6 78 3e b6 6e f8 17  98 fb 32 8b e3 6e 97 3f   |..x>.n....2..n.?|
0x35030:   02 09 d5 93 8e 32 a4 4b  6e 29 e0 59 9f 36 cf 67   |.....2.Kn).Y.6.g|
0x35040:   4d 54 8e c8 7c 30 ba 55  b0 eb 22 9b e6 71 8a 22   |MT..|0.U.."..q."|
0x35050:   dd e8 3a 7c c8 68 f2 1d  9c f3 3a 83 ec 6f 94 3c   |..:|.h....:..o.<|
0x35060:   dd 91 08 6d e7 4e bb f1  df 91 08 68 e9 4e bb fb   |...m.N.....h.N..|
0x35070:   e1 91 08 7c eb 4e bb d3  e3 91 08 2c ed 4e bb 73   |...|.N.....,.N.s|
0x35080:   e5 91 08 77 ef 4e bb c5  00 00 00 00 00 00 00 00   |...w.N..........|
0x35090:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x350a0:   da 07 bd 03 fb 47 01 c1  30 2a 3b 0c 60 18 19 1e   |.....G..0*;.`...|
0x350b0:   de 2c 40 e8 c5 5a 15 02  33 bd a9 d1 78 dc df d8   |.,@..Z..3...x...|
0x350c0:   2a 05 76 02 0e 33 14 ed  d2 87 e6 99 b1 81 21 61   |*.v..3........!a|
0x350d0:   88 4c 5c 6a 68 70 6e b3  f4 ef c7 ed fb e3 8d 46   |.L\jhpn........F|
0x350e0:   f4 10 a2 18 1a e3 6c 2c  4d 9e 3a e9 61 e6 fd b8   |......l,M.:.a...|
0x350f0:   c4 e0 f2 e8 ea b0 e1 7f  d4 6f c0 61 32 67 86 06   |.........o.a2g..|
0x35100:   24 00 f2 08 0a 30 01 7f  84 8f b0 81 b2 87 f6 e6   |$....0..........|
0x35110:   f4 d0 42 d8 da 00 d1 cf  c4 5f 90 51 82 57 d6 36   |..B......_.Q.W.6|
0x35120:   5f 33 0a 3e 35 45 36 80  57 00 9d b1 c1 bc 52 af   |_3.>5E6.W.....R.|
0x35130:   bf d3 8a de d5 aa 7f 01  23 58 f2 58 25 51 bb 72   |........#X.X%Q.r|
0x35140:   4f 63 1a 6e 65 ea df 91  b3 e8 82 e8 65 e1 4b 02   |Oc.ne.......e.K.|
0x35150:   61 87 f0 a1 ab bc a5 72  53 28 a0 20 30 2f c4 02   |a......rS(. 0/..|
0x35160:   31 57 e0 d1 db ac d5 62  83 58 f0 50 20 5f b4 f2   |1W.....b.X.P _..|
0x35170:   13 f1 6c 7c f0 25 f6 60  40 75 5c 71 25 7f 1f d9   |..l|.%.`@u\q%...|
0x35180:   13 31 c8 34 44 7a 4f 41  6d be 56 bd 8b bf 1f d8   |.1.4DzOAm.V.....|
0x35190:   84 60 b2 68 63 70 61 36  16 ea 00 2a 3e e2 84 c1   |.`.hcpa6...*>...|
0x351a0:   64 80 b2 88 83 70 81 36  56 0a 60 ca be 02 64 a1   |d....p.6V.`...d.|
0x351b0:   f4 10 42 18 13 00 11 c6  e1 92 b1 52 4d 5d fa 35   |..B........RM].5|
0x351c0:   33 fe 7f d5 e8 08 e9 2e  27 8b a1 63 a9 d4 41 0e   |3.......'..c..A.|
0x351d0:   37 00 38 4f fb f1 16 b9  10 c0 2c 09 b6 bd c4 c5   |7.8O......,.....|
0x351e0:   0c dc e0 ef 98 d8 dc 62  3b ce ec cc b5 4c ab c1   |.......b;....L..|
0x351f0:   ed 17 c1 7c 11 ea 31 d7  64 fe e3 df ad 76 9f c2   |...|..1.d....v..|
0x35200:   56 dc f3 2b 0d 36 7f 5c  59 5c 3c 1b 21 93 95 6a   |V..+.6.\Y\<.!..j|
0x35210:   ec 66 71 61 3e 6a 15 c8  58 90 f6 2e 5d 0c df 42   |.fqa>j..X...]..B|
0x35220:   5b 1f 06 6a 62 fa 63 8d  8e 05 32 bb 72 b4 ca cf   |[..jb.c...2.r...|
0x35230:   90 55 60 9c 50 5c 76 ee  77 7d 10 da 53 33 5e 53   |.U`.P\v.w}..S3^S|
0x35240:   77 61 45 cf 89 8c 83 02  87 11 36 e9 77 a2 e4 d5   |waE.......6.w...|
0x35250:   24 0a d2 84 ad 09 60 71  c8 d2 df ac ea bf 50 4b   |$.....`q......PK|
0x35260:   8e 33 78 59 38 4a f3 8c  b0 60 33 a5 de d4 fd ff   |.3xY8J...`3.....|
0x35270:   55 03 b5 90 21 fb b2 a9  b7 4e 49 5c 29 5f eb 14   |U...!....NI\)_..|
0x35280:   3d 21 1c f7 5e d7 36 7c  d2 03 62 a0 18 a1 fc ee   |=!..^.6|..b.....|
0x35290:   70 be 6a 28 09 00 d5 27  01 a7 c5 8d fc 3c d8 96   |p.j(...'.....<..|
0x352a0:   a0 7d a6 2d 1d 35 f5 41  1c 68 d5 cf 38 2a f9 f8   |.}.-.5.A.h..8*..|
0x352b0:   de 1d 42 ff b0 30 50 be  05 70 b8 19 2d 1c d3 f6   |..B..0P..p..-...|
0x352c0:   9f 55 ca 18 cc e1 01 4c  31 00 a4 aa e0 2e 73 65   |.U.....L1.....se|
0x352d0:   59 07 ad d5 36 54 45 16  1c 5c ac 42 6a c2 23 64   |Y...6TE..\.Bj.#d|
0x352e0:   1f cb 0c f4 ab c3 34 d1  42 a8 12 e6 9d 12 b3 8d   |......4.B.......|
0x352f0:   68 2e f8 05 87 27 0d fd  4d 26 92 8c d0 2a 84 9a   |h....'..M&...*..|
0x35300:   ed 1b d2 b3 c8 95 06 2a  78 32 f9 7c 12 0b a1 1b   |.......*x2.|....|
0x35310:   1d f9 96 77 97 86 59 5d  6f c8 ec 1a 62 f6 4f 0b   |...w..Y]o...b.O.|
0x35320:   22 01 fb 0a 65 d5 8c 7e  89 ff 86 b1 d4 1e db 76   |"...e..~.......v|
0x35330:   a3 0b 86 57 c8 40 78 50  a2 3f 3f 9d 58 49 75 9c   |...W.@xP.??.XIu.|
0x35340:   b1 dd f6 5b ab 8e 6a 88  bf 6b c5 3c 90 9d af e7   |...[..j..k.<....|
0x35350:   cd 6f d4 35 46 c7 44 a2  af 2a c0 ab f9 c9 a4 2e   |.o.5F.D..*......|
0x35360:   68 06 dd 08 06 11 1d 70  c8 6f dc 75 56 a3 4b 6e   |h......p.o.uV.Kn|
0x35370:   81 92 97 8e b1 a4 bd 2a  b9 50 aa ea 8f 8c 8d c1   |.......*.P......|
0x35380:   b0 d3 9f 67 5f 1a 00 23  d2 56 3a 53 16 99 52 08   |...g_..#.V:S..R.|
0x35390:   4a 4e d4 1a f9 b4 24 88  f9 44 f2 0e 1d 76 50 dc   |JN....$..D...vP.|
0x353a0:   51 db ed ab 24 64 e2 02  05 c8 2b 91 51 09 fe a8   |Q...$d....+.Q...|
0x353b0:   a8 c0 24 c1 bf d3 f2 7b  03 91 34 50 51 64 48 d5   |..$....{..4PQdH.|
0x353c0:   97 70 6d 58 e9 f0 66 b8  3b 24 a7 91 d8 6c be f5   |.pmX..f.;$...l..|
0x353d0:   eb 95 d8 66 95 df ba 55  29 83 a8 b0 ea 86 27 00   |...f...U).....'.|
0x353e0:   98 d0 b9 23 5e d8 28 b0  28 19 47 b5 6a 13 e8 ff   |...#^.(.(.G.j...|
0x353f0:   b3 b5 9f ea ba f5 c9 7c  50 92 d9 f3 78 78 ea ab   |.......|P...xx..|
0x35400:   b6 b6 6c ce 15 db 09 ad  73 ae 53 bd 2d b5 26 32   |..l.....s.S.-.&2|
0x35410:   a3 ad 3c ba c0 2f 0d 87  70 6d fb 86 b7 3b e8 84   |..<../..pm...;..|
0x35420:   e0 e6 bb 23 38 82 91 a4  89 60 2b 3c fb 8d 04 cc   |...#8....`+<....|
0x35430:   e9 f4 94 cf cf 60 7f bd  a5 c1 1b 93 c3 8a b1 74   |.....`.........t|
0x35440:   86 ae 7a 35 5a 17 d4 21  a6 e1 a5 d8 c6 73 35 dc   |..z5Z..!.....s5.|
0x35450:   eb 8a 4e ba 34 0a 93 2c  bf 39 47 25 14 b9 df c1   |..N.4..,.9G%....|
0x35460:   f7 91 b1 fa 74 50 a9 3a  d9 ff ea 25 00 e3 c6 e3   |....tP.:...%....|
0x35470:   2c 9b 7d e4 23 cc be 24  ea 1f 7f 95 a0 22 70 9e   |,.}.#..$....."p.|
0x35480:   4e 9c 3b 96 5c cf 90 b4  ef f2 b1 d8 84 39 c8 33   |N.;.\........9.3|
0x35490:   8c 32 6f 5e 84 a5 4e 57  e2 21 be 08 d4 5b f8 50   |.2o^..NW.!...[.P|
0x354a0:   10 02 47 61 2a 2b ed b7  18 8c de 5f db 57 d2 76   |..Ga*+....._.W.v|
0x354b0:   93 16 2a 1f 5a 6c e3 91  2b 48 2e 28 e3 68 73 85   |..*.Zl..+H.(.hs.|
0x354c0:   3b 7a e0 c3 79 4d 65 c9  00 8b ab a1 6a 29 bb 8e   |;z..yMe.....j)..|
0x354d0:   64 13 58 98 b4 29 bb 31  05 b4 0a 31 26 28 30 b0   |d.X..).1...1&(0.|
0x354e0:   e0 6d 94 68 c2 17 ab e1  1d cc 85 10 84 32 aa 31   |.m.h.........2.1|
0x354f0:   32 d6 74 cd 7d 85 c5 ad  2f 90 31 ed bb b2 64 47   |2.t.}.../.1...dG|
0x35500:   f8 c0 87 7f d0 34 98 75  2b 53 d2 62 60 8f a1 5f   |.....4.u+S.b`.._|
0x35510:   d5 56 47 09 66 13 bf 4b  02 89 a2 24 9c 8c b5 19   |.VG.f..K...$....|
0x35520:   65 e1 61 71 4e 2b bd 62  2a 0c 39 f1 fe 2d 8b 89   |e.aqN+.b*.9..-..|
0x35530:   81 30 2e 35 48 41 11 8a  17 c1 16 9b ba be ef c1   |.0.5HA..........|
0x35540:   3e 40 22 30 8c fa ba 25  3b 11 27 e8 04 53 05 53   |>@"0...%;.'..S.S|
0x35550:   0c 35 7e af f4 6d c3 0c  2c 06 29 8d 80 07 d7 ff   |.5~..m..,.).....|
0x35560:   fd c5 79 c0 c3 2e 3d 2c  17 80 92 69 0d 3b 8c 22   |..y...=,...i.;."|
0x35570:   3e 98 13 68 8a 28 84 ab  17 67 7d 0e ff 2c c4 0b   |>..h.(...g}..,..|
0x35580:   39 72 30 c3 ad d4 46 36  ba e5 5f 48 ae 14 06 c1   |9r0...F6.._H....|
0x35590:   02 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x355a0:   78 f2 b2 00 10 63 c5 d6  00 00 00 00 50 88 b3 00   |x....c......P...|
0x355b0:   24 40 e0 e2 e4 f4 e6 44  28 1e b4 00 24 66 e0 e2   |$@.....D(...$f..|
0x355c0:   e4 f4 e6 44 00 b4 b4 00  24 8d e0 20 e4 f4 24 44   |...D....$.. ..$D|
0x355d0:   d8 49 b5 00 24 b3 e0 20  e4 f4 24 44 b0 df b5 00   |.I..$.. ..$D....|
0x355e0:   24 d9 e0 20 e4 f4 24 44  88 75 b6 00 25 00 e0 20   |$.. ..$D.u..%.. |
0x355f0:   e4 f4 24 45 60 0b b7 00  25 26 e0 40 e4 f4 44 45   |..$E`...%&.@..DE|
0x35600:   38 a1 b7 00 25 4c e0 40  e4 f4 44 45 10 37 b8 00   |8...%L.@..DE.7..|
0x35610:   25 73 e0 40 e4 f4 44 45  e8 cc b8 00 25 99 e0 40   |%s.@..DE....%..@|
0x35620:   e4 f4 44 45 c0 62 b9 00  25 bf e0 60 e4 f4 64 45   |..DE.b..%..`..dE|
0x35630:   b8 8b bb 00 26 4d e0 60  e4 f4 64 46 f8 27 bc 00   |....&M.`..dF.'..|
0x35640:   26 75 e0 80 e4 f4 84 46  38 c4 bc 00 26 9d e0 80   |&u.....F8...&...|
0x35650:   e4 f4 84 46 78 60 bd 00  26 c5 e0 80 e4 f4 84 46   |...Fx`..&......F|
0x35660:   b8 fc bd 00 26 ed e0 80  e4 f4 84 46 f8 98 be 00   |....&......F....|
0x35670:   27 15 e0 a0 e4 f4 a4 47  38 35 bf 00 27 3d e0 a0   |'......G85..'=..|
0x35680:   e4 f4 a4 47 78 d1 bf 00  27 65 e0 a0 e4 f4 a4 47   |...Gx...'e.....G|
0x35690:   b8 6d c0 00 27 8d e0 a0  e4 f4 a4 47 f8 09 c1 00   |.m..'......G....|
0x356a0:   27 b5 e0 c0 e4 f4 c4 47  38 a6 c1 00 27 dd e0 c0   |'......G8...'...|
0x356b0:   e4 f4 c4 47 78 42 c2 00  10 0a c5 c4 00 00 00 00   |...GxB..........|
0x356c0:   78 f2 b2 00 28 2a e0 d2  e4 f4 d6 48 50 88 b3 00   |x...(*.....HP...|
0x356d0:   24 40 e0 e2 e4 f4 e6 44  28 1e b4 00 24 67 e0 e2   |$@.....D(...$g..|
0x356e0:   e4 f4 e6 44 00 b4 b4 00  24 8d e0 20 e4 f4 24 44   |...D....$.. ..$D|
0x356f0:   d8 49 b5 00 24 b3 e0 20  e4 f4 24 44 b0 df b5 00   |.I..$.. ..$D....|
0x35700:   24 da e0 20 e4 f4 24 44  88 75 b6 00 25 01 e0 20   |$.. ..$D.u..%.. |
0x35710:   e4 f4 24 45 60 0b b7 00  25 27 c4 44 e4 f4 44 45   |..$E`...%'.D..DE|
0x35720:   38 a1 b7 00 25 4d e0 40  e4 f4 44 45 10 37 b8 00   |8...%M.@..DE.7..|
0x35730:   25 75 e0 40 e4 f4 44 45  e8 cc b8 00 25 9b e0 40   |%u.@..DE....%..@|
0x35740:   e4 f4 44 45 c0 62 b9 00  25 c0 e0 60 e4 f4 64 45   |..DE.b..%..`..dE|
0x35750:   b8 8b bb 00 26 4e e0 60  e4 f4 64 46 f8 27 bc 00   |....&N.`..dF.'..|
0x35760:   26 76 e0 80 e4 f4 84 46  38 c4 bc 00 26 9e e0 80   |&v.....F8...&...|
0x35770:   e4 f4 84 46 78 60 bd 00  26 c6 e0 80 e4 f4 84 46   |...Fx`..&......F|
0x35780:   b8 fc bd 00 26 ee e0 80  e4 f4 84 46 f8 98 be 00   |....&......F....|
0x35790:   27 16 c4 a4 e4 f4 a4 47  38 35 bf 00 27 3e e0 a0   |'......G85..'>..|
0x357a0:   e4 f4 a4 47 78 d1 bf 00  27 66 e0 a0 e4 f4 a4 47   |...Gx...'f.....G|
0x357b0:   b8 6d c0 00 27 8e e0 a0  e4 f4 a4 47 f8 09 c1 00   |.m..'......G....|
0x357c0:   27 b6 e0 c0 e4 f4 c4 47  38 a6 c1 00 27 de e0 c0   |'......G8...'...|
0x357d0:   e4 f4 c4 47 78 42 c2 00  28 06 e0 c0 e4 f4 c4 48   |...GxB..(......H|
0x357e0:   06 2a 07 e8 08 84 0a 20  0b 78 0c 1e 0d 0a 0f 08   |.*..... .x......|
0x357f0:   10 0f 18 40 00 00 00 00  00 00 00 00 00 00 00 00   |...@............|
0x35800:   00 3f 02 00 03 48 04 00  05 04 06 10 2e 15 30 10   |.?...H........0.|
0x35810:   45 58 48 19 52 03 53 44  6a 4b 76 00 78 18 7a 17   |EXH.R.SDjKv.x.z.|
0x35820:   85 06 0f 00 01 00 00 00  28 00 00 00 32 00 00 00   |........(...2...|
0x35830:   20 00 00 00 2e 00 00 00  20 00 00 00 36 00 00 00   | ....... ...6...|
0x35840:   14 00 00 00 1e 00 00 00  0e 00 00 00 1e 00 00 00   |................|
0x35850:   0c 00 00 00 22 00 00 00  0a 08 06 04 02 00 00 00   |...."...........|
0x35860:   5a 76 54 2b cf 03 36 e4  a5 12 07 b3 62 ae 19 01   |ZvT+..6.....b...|
0x35870:   e2 1c 7a 9d bc 86 2c fe  94 e9 a1 ba 31 3f 85 33   |..z...,.....1?.3|
0x35880:   05 02 0a 5e a1 75 15 74  84 df 5a fc 5d 2f 7b 56   |...^.u.t..Z.]/{V|
0x35890:   60 a8 73 6b d5 bb 05 3f  89 1a 76 a3 ba 86 86 6d   |`.sk...?..v....m|
0x358a0:   0f 88 40 55 49 92 4e 7a  a3 52 16 4d 0a a0 ed 66   |..@UI.Nz.R.M...f|
0x358b0:   aa cb 1e 40 5f 43 42 50  84 fe a1 1b c4 b2 b9 1f   |...@_CBP........|
0x358c0:   d0 8a 58 70 0a 16 4e 48  98 f3 ae 7b 19 98 33 83   |..Xp..NH...{..3.|
0x358d0:   29 8d db 62 46 4e 4d 56  a4 62 94 b3 7c 4d 8e 7e   |)..bFNMV.b..|M.~|
0x358e0:   89 3f 19 6c 5e 4f 45 5f  95 e0 0a 6b d1 10 60 e7   |.?.l^OE_...k..`.|
0x358f0:   9e cb db b8 4d c9 4e 69  95 3f 11 0d 6f 66 a2 d4   |....M.Ni.?..of..|
0x35900:   d8 c7 7b 6f f3 7d 44 ea  80 89 5a 19 73 ae c0 19   |..{o.}D...Z.s...|
0x35910:   b4 30 f3 10 e4 7e 4e a9  86 66 27 5a c3 24 38 b0   |.0...~N..f'Z.$8.|
0x35920:   9e 22 da 7a f9 5d 49 b5  a4 5a 72 a2 72 54 90 89   |.".z.]I..Zr.rT..|
0x35930:   2c e3 49 f3 c6 e9 4d 8e  b2 0e fe 77 c0 25 a4 4d   |,.I...M....w.%.M|
0x35940:   ff 81 bd da 8b 4d 4f 49  bc f5 35 78 6c 6c a8 db   |.....MOI..5xll..|
0x35950:   62 55 7f 4c ec 6b 40 6a  97 7c 35 55 b8 f9 9e 7b   |bU.L.k@j.|5U...{|
0x35960:   9b c7 19 1e d3 52 47 53  87 e2 f5 75 0c 80 d2 2d   |.....RGS...u...-|
0x35970:   af 61 43 1d 2f fb 42 00  bd 8d 8e 10 25 71 49 8e   |.aC./.B.....%qI.|
0x35980:   7b 7d cc a7 96 b0 41 22  ac aa ce c9 30 c9 12 a2   |{}....A"....0...|
0x35990:   8c 54 0a b1 7f 60 4a 8f  ac 85 bc 2a fa 5d eb ee   |.T...`J....*.]..|
0x359a0:   6d 46 b4 32 a1 a5 40 b0  bc 64 a4 ad 60 30 e2 ee   |mF.2..@..d..`0..|
0x359b0:   af 16 11 9d bc 66 49 07  a2 7c c9 93 e2 98 73 9c   |.....fI..|....s.|
0x359c0:   00 ef 98 61 4c c6 4a 5e  b5 80 58 ac c7 bc d3 30   |...aL.J^..X....0|
0x359d0:   f2 a3 bb 42 56 52 46 be  85 5c 9e 58 15 97 79 ac   |...BVRF..\.X..y.|
0x359e0:   d8 7a 8b 55 cd 8c 4c d9  b7 45 29 00 81 80 a9 e2   |.z.U..L..E).....|
0x359f0:   a1 7c 50 63 4f a8 47 b4  a4 6d 88 bd d4 16 97 d7   |.|PcO.G..m......|
0x35a00:   8d 6a 96 3a fa 40 4b 19  be 39 6b 92 7c d5 2f 11   |.j.:.@K..9k.|./.|
0x35a10:   3e c7 b3 4f 75 3f 46 3c  9a a8 f9 e6 d1 65 aa e7   |>..Ou?F<.....e..|
0x35a20:   d8 b2 42 e5 a9 a4 48 ca  ac 14 f0 5e 2f 55 0a 20   |..B...H....^/U. |
0x35a30:   ff 6a bf b2 8e 4e 49 e2  b0 8b 4b 9e 89 6e 11 c9   |.j...NI...K..n..|
0x35a40:   58 30 ae 53 f7 16 45 1b  a0 6b f2 b0 5c c7 28 f2   |X0.S..E..k..\.(.|
0x35a50:   2e f4 22 3f 07 20 4d 9d  bd d3 9c 38 9f 2f 75 8c   |.."?. M....8./u.|
0x35a60:   bc 4c 43 c6 6f 6e 4e 57  b6 31 d3 a2 60 bd 75 d4   |.LC.onNW.1..`.u.|
0x35a70:   e1 01 a7 f6 7c 32 49 ce  92 0c 74 8a 68 b8 3c 18   |....|2I...t.h.<.|
0x35a80:   6b 1f 60 85 e6 74 48 74  a0 45 e7 4b a5 67 7d d7   |k.`..tHt.E.K.g}.|
0x35a90:   48 d4 c5 a0 0a 3d 49 0e  ba f6 b9 81 bd b2 60 e8   |H....=I.......`.|
0x35aa0:   47 02 5b 9f 4d dc 40 1e  a6 3f bb 97 6a a6 98 ac   |G.[.M.@..?..j...|
0x35ab0:   92 75 14 32 b6 bb 48 f7  b7 86 82 34 30 44 cf 48   |.u.2..H....40D.H|
0x35ac0:   fd 05 47 08 cb c2 41 4c  aa e6 2b 39 fa 54 1c f4   |..G...AL..+9.T..|
0x35ad0:   d7 7f 8d c2 fc a5 47 11  99 33 b2 0c 32 db a2 bd   |......G..3..2...|
0x35ae0:   ae 29 cb be d5 3c 46 f9  8c 9d fd 35 50 b0 36 6b   |.)...<F....5P.6k|
0x35af0:   de f1 65 88 39 d9 4d 6b  9c 42 b2 d0 59 8b b9 c6   |..e.9.Mk.B..Y...|
0x35b00:   7b dc 67 2b 2c 59 42 7b  98 b4 46 40 be d4 f8 ce   |{.g+,YB{..F@....|
0x35b10:   a4 c4 82 d9 2b 9d 49 1e  88 db ef 8d 1a 7f ed f5   |....+.I.........|
0x35b20:   5f ec df 48 83 4f 4d 8c  b5 84 fd a0 49 f6 90 c7   |_..H.OM.....I...|
0x35b30:   d3 9f 31 4a 4e 47 4c e1  91 de 66 a3 37 ca b5 05   |..1JNGL...f.7...|
0x35b40:   3a ab 85 68 33 05 4f d0  a0 80 81 7e d2 64 e5 0d   |:..h3.O....~.d..|
0x35b50:   83 5b 9a 87 24 14 42 96  95 16 87 c0 94 d1 90 2f   |.[..$.B......../|
0x35b60:   23 26 2a 68 37 4d 43 ff  bb 91 7d 5f 0e 56 69 41   |#&*h7MC...}_.ViA|
0x35b70:   50 2a bb 72 d6 eb 4b c0  b4 a5 62 bf 64 ca 71 84   |P*.r..K...b.d.q.|
0x35b80:   4c 21 8c 12 86 6d 42 c0  9a 92 b2 44 18 1b d6 84   |L!...mB....D....|
0x35b90:   e3 76 2e 56 c4 02 42 92  8f 21 78 7f 47 6c cf ed   |.v.V..B..!x.Gl..|
0x35ba0:   5c 66 05 7a 9a 40 4d 32  a6 e8 bf 85 02 ae 38 89   |\f.z.@M2......8.|
0x35bb0:   3b f7 78 9e 59 7c 44 ca  b2 aa ae 0d 23 92 c5 94   |;.x.Y|D.....#...|
0x35bc0:   6e dd 32 b7 94 e3 4b 1b  84 73 86 1f 61 4e 99 60   |n.2...K..s..aN.`|
0x35bd0:   2d 4c ef d7 58 03 49 d2  a6 d2 8a af 3f de 0c 3d   |-L..X.I.....?..=|
0x35be0:   31 ea 1c e1 2f 95 42 4d  92 fd db 71 81 f7 74 7a   |1.../.BM...q..tz|
0x35bf0:   04 f2 32 3f 6d a7 4d e1  b7 9c 0f f4 ac e5 c9 a5   |..2?m.M.........|
0x35c00:   1a a6 29 cf 91 e8 4f 4b  ac 57 c9 b0 e0 37 f8 8d   |..)...OK.W...7..|
0x35c10:   f8 5a 02 42 b8 5c 45 c0  87 3c 3e 95 cc 55 f9 b1   |.Z.B.\E..<>..U..|
0x35c20:   3d 95 37 37 53 ac 48 03  81 3f eb aa 28 c7 11 df   |=.77S.H..?..(...|
0x35c30:   18 ab ce e4 b3 d5 46 2e  a8 83 46 8e 9a bd 2b cd   |......F...F...+.|
0x35c40:   9d 8f a5 a3 bc 3c 4f cb  94 ab f5 69 c0 0d 62 e0   |.....<O....i..b.|
0x35c50:   85 b1 8e 17 05 8a 43 b4  ae f8 47 c7 23 a0 a2 e2   |......C...G.#...|
0x35c60:   b1 1a 9d dd d9 57 49 c2  a4 07 6d 57 34 ea b5 2c   |.....WI...mW4..,|
0x35c70:   1f d6 f0 d3 fb 3c 43 ed  a3 6d 38 f8 8a e5 68 c4   |.....<C..m8...h.|
0x35c80:   8d 47 f1 e6 e9 a7 4f fc  9e 0e 24 14 a6 e7 5a fc   |.G....O...$...Z.|
0x35c90:   4c 31 d2 e3 50 5d 43 9d  bf 8a bd c2 01 75 3f 90   |L1..P]C......u?.|
0x35ca0:   f3 f4 b2 89 b5 82 4e 0a  ba ff a5 f8 26 fc 24 14   |......N.....&.$.|
0x35cb0:   61 9c 1f 17 f5 00 45 92  98 bc e5 e3 fe 81 20 c6   |a.....E....... .|
0x35cc0:   34 16 be d0 e9 32 43 30  a5 90 83 eb 0d 8a 8c a3   |4....2C0........|
0x35cd0:   70 82 3a 1f 93 06 40 d7  b7 0f ae bc 90 f1 7e 8a   |p.:...@.......~.|
0x35ce0:   43 02 91 55 a6 d5 4c a5  a6 bd bc 50 00 28 64 80   |C..U..L....P.(d.|
0x35cf0:   4d 57 cd 4a a9 bf 4f 1e  8e d6 6b c6 6a 77 70 3e   |MW.J..O...k.jwp>|
0x35d00:   19 2d fb 93 8a 85 4b a5  95 43 87 a8 35 60 88 9d   |.-....K..C..5`..|
0x35d10:   64 53 ce fc 98 e5 46 0a  b6 af 7d cc 64 1e e8 f8   |dS....F...}.d...|
0x35d20:   a1 bb 26 2a d2 48 41 66  98 57 5a ab 5b dc c5 31   |..&*.HAf.WZ.[..1|
0x35d30:   dc 02 a0 ad 19 6f 4f 26  9b 35 71 dc 4d 97 55 46   |.....oO&.5q.M.UF|
0x35d40:   55 a3 ee a9 47 14 4f a1  8f e4 f3 df 90 f0 fb b2   |U...G.O.........|
0x35d50:   d1 9e af 5f 3a 89 47 8a  b7 7a 44 aa 63 2d 88 cd   |..._:.G..zD.c-..|
0x35d60:   82 07 f5 e6 bb fc 43 0c  92 52 e4 5c a1 91 9e 27   |......C..R.\...'|
0x35d70:   cc 84 27 58 70 97 46 f7  a0 3b f7 d1 f2 98 b1 4f   |..'Xp.F..;.....O|
0x35d80:   37 b2 40 ae e3 77 4f 32  a6 2d 2f 16 96 56 f3 e2   |7.@..wO2.-/..V..|
0x35d90:   d6 10 4a ac 5c 8d 4b 06  a1 e0 fb 7a 5d 84 05 1a   |..J.\.K....z]...|
0x35da0:   d4 15 29 13 2e 70 40 64  8b 0c 14 37 1c 37 c4 c9   |..)..p@d...7.7..|
0x35db0:   40 0a 49 b7 51 71 4f d3  ae e3 bb eb 15 f1 2c ca   |@.I.QqO.......,.|
0x35dc0:   02 71 50 7b e0 bc 46 2c  b8 a4 30 38 00 c8 6d a9   |.qP{..F,..08..m.|
0x35dd0:   22 b1 c9 53 11 d6 4f d3  8b 5f 07 eb 9b de a5 ed   |"..S..O.._......|
0x35de0:   df 16 fb 8a 92 1e 45 3a  9e 27 fc b0 fc 2f a5 f9   |......E:.'.../..|
0x35df0:   5c 16 d5 15 26 95 42 63  ae 73 29 ad bc 12 ab 9e   |\...&.Bc.s).....|
0x35e00:   42 02 05 93 65 26 4b 6a  9b 3d 7c bf 12 91 6d 1f   |B...e&Kj.=|...m.|
0x35e10:   2e 99 74 a4 fb 5a 40 78  a1 ec 5a d3 a8 b2 d2 0e   |..t..Z@x..Z.....|
0x35e20:   63 f1 2f 60 d3 59 4c 16  b7 c5 f2 7d 97 5e 70 f5   |c./`.YL....}.^p.|
0x35e30:   a6 c1 2a d1 5e 64 43 9e  b9 61 ef 70 d8 69 62 fd   |..*.^dC..a.p.ib.|
0x35e40:   a5 0f 8a 55 5a a0 44 50  99 4c 09 f5 cb 7e 6f 0d   |...UZ.DP.L...~o.|
0x35e50:   fa 53 54 8b 5d ed 43 8a  a9 35 64 38 77 e7 91 d3   |.ST.].C..5d8w...|
0x35e60:   d2 d7 a2 40 6e 60 4e 07  bb 67 83 37 7f 12 fc b1   |...@n`N..g.7....|
0x35e70:   34 7e a4 d0 98 30 4a e8  90 27 c7 61 54 ad 4f 7d   |4~...0J..'.aT.O}|
0x35e80:   64 42 13 ca 36 b7 4e be  90 0e 48 e5 aa ea 6f c9   |dB..6.N...H...o.|
0x35e90:   59 27 a4 96 98 bd 4a ce  bc d1 45 e2 85 37 72 76   |Y'....J...E..7rv|
0x35ea0:   30 d9 44 9d 1a fe 45 dc  a1 88 de ec cd 41 82 6a   |0.D...E......A.j|
0x35eb0:   0c 99 3d 0b fc c1 41 15  ab 8b 79 ae 2f 2d e0 b1   |..=...A...y./-..|
0x35ec0:   bd 96 ab 44 b0 20 43 9f  89 df 40 01 79 dc 34 e5   |...D. C...@.y.4.|
0x35ed0:   a0 ce 50 83 f3 c9 47 46  a4 30 9e 7d 41 bf c2 f7   |..P...GF.0.}A...|
0x35ee0:   b3 59 f4 a4 c0 dd 4b a3  aa 05 eb 8f 11 74 d2 10   |.Y....K......t..|
0x35ef0:   bf b3 cf 49 de 2c 4e d4  94 82 2e 29 69 e8 bf cd   |...I.,N....)i...|
0x35f00:   41 bb 4e d1 e9 67 45 f8  8f f9 33 5f 43 02 d5 77   |A.N..gE...3_C..w|
0x35f10:   cd cc 18 29 73 ba 4e 80  a9 80 ae 2f 16 5b d5 34   |...)s.N..../.[.4|
0x35f20:   8c f1 ac 28 93 7a 4b 5e  b7 1f 75 d1 ae d3 16 13   |...(.zK^..u.....|
0x35f30:   86 13 fc b7 30 b4 47 5e  a4 d0 79 3d 7b dc a4 79   |....0.G^..y={..y|
0x35f40:   30 86 d5 11 9e ff 49 3b  a4 0c 22 00 49 6e bb 08   |0.....I;..".In..|
0x35f50:   74 d1 7f 38 f3 ac 47 6e  b4 db 30 17 66 bb 83 40   |t..8..Gn..0.f..@|
0x35f60:   b8 12 63 a0 1d 05 40 e2  ae f6 ec 08 62 88 e6 3b   |..c...@.....b..;|
0x35f70:   d6 c8 56 62 cd 52 42 55  85 73 a2 18 a2 9a 29 28   |..Vb.RBU.s....)(|
0x35f80:   d2 87 ef 89 89 43 4c 51  9a 6c 04 73 12 d9 0f d1   |.....CLQ.l.s....|
0x35f90:   24 4c 75 59 90 61 4f d6  9b ed a8 89 b2 8a 28 4c   |$LuY.aO.......(L|
0x35fa0:   e5 83 22 e4 0a ae 47 5f  bf f5 a2 80 10 c3 cf ae   |.."...G_........|
0x35fb0:   ca d1 3a 11 ed bc 4b c7  97 1f e7 c2 03 ad 90 0d   |..:...K.........|
0x35fc0:   65 60 ba be c2 0c 47 a4  b2 f3 3f 1b 40 59 29 fa   |e`....G...?.@Y).|
0x35fd0:   6b c7 d6 55 b7 cf 43 2c  81 b8 9a e9 b1 71 2d 3b   |k..U..C,.....q-;|
0x35fe0:   3b f9 ee 9f 2a 44 4f d5  92 cb 98 e3 f0 60 b9 76   |;...*DO......`.v|
0x35ff0:   d4 ab 5a 7e 21 e3 4c 01  8c 34 f3 d8 93 bc 3a 77   |..Z~!.L..4....:w|
0x36000:   e8 4c 71 05 3e 42 44 8e  ac 26 19 63 1d 78 05 1b   |.Lq.>BD..&.c.x..|
0x36010:   d6 5c 9c 55 5f a6 4a 04  82 1f 59 9b 29 2b 06 80   |.\.U_.J...Y.)+..|
0x36020:   e0 60 1a f1 36 1c 41 47  80 21 15 36 60 87 e0 93   |.`..6.AG.!.6`...|
0x36030:   64 4c 2e 88 e0 a0 49 1a  84 2b 2d a7 7a e0 65 a2   |dL....I..+-.z.e.|
0x36040:   35 1f 4e 6b c1 11 49 85  b8 44 a8 bc 52 cc ea 59   |5.Nk..I..D..R..Y|
0x36050:   95 03 73 a7 e0 de 4a 45  ad 4b 88 67 1a 46 c7 d0   |..s...JE.K.g.F..|
0x36060:   18 81 da d7 0c af 0a 4a  3b 2e 57 26 4d c8 3e a2   |.......J;.W&M.>.|
0x36070:   d2 6d 2e e7 99 54 06 89  35 69 e9 e1 e9 f9 6d b3   |.m...T..5i....m.|
0x36080:   4a 44 68 4c 04 cd 0a ea  35 d9 d7 d6 d0 c4 49 59   |JDhL....5.....IY|
0x36090:   52 b4 9e 77 e6 32 08 a9  1a f8 08 d9 a2 ad 3a 5e   |R..w.2........:^|
0x360a0:   4c f4 10 fa ec d8 0d 7b  22 a6 e4 09 eb ce 51 59   |L......{".....QY|
0x360b0:   55 0e 2d 2e fe b7 09 d6  0b 48 8a 4b cc 8b 2a 5d   |U.-......H.K..*]|
0x360c0:   27 2f 50 a6 66 a9 0a 91  06 0a 81 b1 10 d9 c5 00   |'/P.f...........|
0x360d0:   2f 27 70 09 51 e7 03 a0  31 5f d3 57 d5 53 70 eb   |/'p.Q...1_.W.Sp.|
0x360e0:   8c db c2 55 5b 13 03 a4  07 b4 76 81 5b 48 6b cb   |...U[.....v.[Hk.|
0x360f0:   06 5f 21 fb 2a bb 06 4a  1e 01 3f 8d 27 ef 63 16   |._!.*..J..?.'.c.|
0x36100:   05 a3 67 7d 97 f6 07 73  37 73 8a 3a cc 96 5c fb   |..g}...s7s.:..\.|
0x36110:   94 9e 3b e5 1d a9 06 31  1f 07 8e b3 43 0c 72 d4   |..;....1....C.r.|
0x36120:   8b 0d 5f 98 c9 20 0d ed  28 40 90 ec ad a4 dd e6   |.._.. ..(@......|
0x36130:   7e 1d 34 84 72 23 0a 50  34 09 4e b7 79 0b fd bb   |~.4.r#.P4.N.y...|
0x36140:   8e 9e 37 b8 ed ca 01 26  06 6a 58 c3 ff d7 41 05   |..7....&.jX...A.|
0x36150:   ed e0 a4 38 9d 79 0d 10  22 8f 08 e3 57 83 68 f6   |...8.y.."...W.h.|
0x36160:   9a da 65 b3 bc da 09 ad  3a 6a d4 8d 47 f0 42 96   |..e.....:j..G.B.|
0x36170:   e5 06 df f0 09 cb 00 ae  0d ff 36 3f 6c 4c e5 a6   |..........6?lL..|
0x36180:   94 9c e0 5e 2b ea 0c d7  08 a6 00 71 7f dc 4e b6   |...^+......q..N.|
0x36190:   c1 9a d4 38 30 f4 0e fb  2a d3 0e 8a e0 d7 dc 88   |...80...*.......|
0x361a0:   d7 a0 f4 34 6c c2 0e 97  25 32 9a 73 d3 88 db ac   |...4l...%2.s....|
0x361b0:   b2 f4 a8 7b e0 b8 0e 6e  1c 66 4a 54 a0 f5 2f 5e   |...{...n.fJT../^|
0x361c0:   9b e2 ab 20 20 3d 06 8e  24 9b a2 25 54 0f 53 4d   |...  =..$..%T.SM|
0x361d0:   6e ba 17 51 fd 52 0f 20  12 87 09 3d d1 b8 7a b5   |n..Q.R. ...=..z.|
0x361e0:   c4 d6 42 cc 69 87 0d 6a  0d ae a4 b4 77 03 68 51   |..B.i..j....w.hQ|
0x361f0:   25 a2 d4 b5 2d f2 0c d5  37 7d d5 3e 39 cd 7b 61   |%...-...7}.>9.{a|
0x36200:   90 b9 e2 06 43 9f 0c 28  1a df 30 7f 94 7f 2d 0c   |....C..(..0...-.|
0x36210:   00 1c 77 3b 20 02 00 5f  23 15 29 d3 b2 1d 15 69   |..w; .._#.)....i|
0x36220:   03 bc 5a 0c 52 5d 0f dd  05 a2 d6 97 32 86 6d a1   |..Z.R]......2.m.|
0x36230:   0a 14 a0 e6 50 39 01 98  22 81 a7 8d 13 5d 08 6b   |....P9.."....].k|
0x36240:   29 d0 6e 93 d6 d2 08 ac  0e 44 f8 13 d0 be fe 30   |).n......D.....0|
0x36250:   a6 74 18 92 a0 4a 09 ff  26 a9 87 ca 99 1b 25 a0   |.t...J..&.....%.|
0x36260:   25 ac b5 f8 6c 6f 01 61  37 48 55 4a c7 b0 bc e9   |%...lo.a7HUJ....|
0x36270:   8b c0 54 66 96 f3 05 d5  08 61 45 a3 20 ad 7c 38   |..Tf.....aE. .|8|
0x36280:   61 2d 9f a7 95 f5 0e 6b  02 3e 6d 37 b7 61 d2 bd   |a-.....k.>m7.a..|
0x36290:   08 af 64 0e 35 06 0c dc  2b 7b 32 11 16 29 f6 c3   |..d.5...+{2..)..|
0x362a0:   b0 26 49 30 a3 34 09 ea  3e 05 44 6c fc a1 2d cf   |.&I0.4..>.Dl..-.|
0x362b0:   7a 11 be 2c c7 00 0f 12  2e 3a af 66 d7 0b ff 03   |z..,.....:.f....|
0x362c0:   42 3d f0 30 95 b9 07 ad  39 00 3b 65 6d da 91 65   |B=.0....9.;em..e|
0x362d0:   d5 2c 99 6f 86 ba 08 4c  20 86 57 9c 65 ee 3a e9   |.,.o...L .W.e.:.|
0x362e0:   bb dc 24 99 27 67 07 e0  39 07 57 9a 3b 23 a5 51   |..$.'g..9.W.;#.Q|
0x362f0:   de b3 d8 a5 3c 8f 06 f4  05 1f ff 36 be ab 86 ab   |....<......6....|
0x36300:   d9 2e 4f 19 14 40 07 6e  38 a5 a9 03 04 c8 eb a2   |..O..@.n8.......|
0x36310:   46 04 7f 29 8d 12 08 0b  3f 15 78 7e 7e 1a 15 22   |F..)....?.x~~.."|
0x36320:   bb 19 b3 38 db b7 07 1c  13 9d 09 52 51 7b 17 4b   |...8.......RQ{.K|
0x36330:   ed ea de 28 5c aa 0e 1d  3c 7c 9b c9 08 f8 ed 8b   |...(\...<|......|
0x36340:   e4 c4 27 58 02 79 06 03  20 2c a0 84 e9 9e 6a 56   |..'X.y.. ,....jV|
0x36350:   7b 3a 2e ad 78 e7 0a 9c  08 31 c6 f0 4c 51 38 da   |{:..x....1..LQ8.|
0x36360:   b5 3b 6c f1 91 1c 0d 74  1a 51 30 8e fb c5 9e 86   |.;l....t.Q0.....|
0x36370:   de ac 8d 37 7c 4f 05 d9  17 e7 e7 f9 bf 60 17 ac   |...7|O.......`..|
0x36380:   69 8a c2 e9 a3 fe 04 e2  27 27 11 80 57 1c 2f b2   |i.......''..W./.|
0x36390:   ff 85 97 37 92 73 0a e2  21 74 6a b0 b3 80 7c 63   |...7.s..!tj...|c|
0x363a0:   e3 fa e7 52 41 f6 06 79  26 6b 70 b5 33 e9 ad 7f   |...RA..y&kp.3...|
0x363b0:   b3 52 6f 46 a7 85 04 e3  1d 10 50 ff ac 5d 3a 90   |.RoF......P..]:.|
0x363c0:   a4 f2 fe 98 0f ea 0d fe  0d c3 e5 ac e5 70 6f 21   |.............po!|
0x363d0:   5a e3 2c 75 d1 34 0d b2  13 f5 a5 82 e1 cf bb 67   |Z.,u.4.........g|
0x363e0:   39 37 79 85 f7 65 0d 27  3d 3d 90 c9 b1 1a bf c5   |97y..e.'==......|
0x363f0:   6a be 87 92 a2 d9 05 dc  30 48 a0 7e bc ba ee 17   |j.......0H.~....|
0x36400:   94 4f 77 43 4c ae 06 e7  18 40 13 70 fe 7a 48 49   |.OwCL....@.p.zHI|
0x36410:   3c fb 8a 69 c2 40 06 50  14 26 4a 3e a0 18 97 b0   |<..i.@.P.&J>....|
0x36420:   e2 b6 8c 03 76 2c 09 74  17 67 78 8e d2 af 1d 3f   |....v,.t.gx....?|
0x36430:   23 86 bf 29 b9 a8 0d ab  07 f4 8e 63 5c da ff 67   |#..).......c\..g|
0x36440:   04 c6 66 51 2d 6a 04 d0  23 93 a9 68 7a 5b 38 4b   |..fQ-j..#..hz[8K|
0x36450:   f7 db af fb ef df 02 84  39 a3 e9 34 93 eb 01 60   |........9..4...`|
0x36460:   f4 2c ee e9 f5 04 00 23  33 f7 bc 64 06 98 f8 86   |.,.....#3..d....|
0x36470:   4d 9b da e4 5e 72 04 1b  10 05 ca 80 23 e8 1a dc   |M...^r......#...|
0x36480:   45 fb 2c ee 12 50 06 74  30 64 6d 7e 2e 20 e3 db   |E.,..P.t0dm~. ..|
0x36490:   6e 70 6f a3 f6 8f 0b 6e  25 51 3f cd a2 79 3a 5f   |npo....n%Q?..y:_|
0x364a0:   c2 9e a2 6e ec a2 0d 14  2d 9a 22 0d 74 52 61 6b   |...n....-.".tRak|
0x364b0:   73 e5 49 4a 8d 0e 08 66  25 8a a4 fc 9a 64 fd a0   |s.IJ...f%....d..|
0x364c0:   d1 77 c5 43 95 11 0b ce  1f f4 0a 9c 27 d4 59 ce   |.w.C........'.Y.|
0x364d0:   04 59 7c a9 a3 73 0f 75  12 7b af 91 94 ec ba 41   |.Y|..s.u.{.....A|
0x364e0:   e1 d5 5d b1 01 3c 01 de  2f 24 87 b5 f5 28 eb 6c   |..]..<../$...(.l|
0x364f0:   b1 64 99 43 8f d6 04 06  3d 1b 44 d8 29 97 2b a9   |.d.C....=.D.).+.|
0x36500:   9d c8 d2 50 ba a5 07 80  22 e1 81 7e 51 50 ec 7e   |...P...."..~QP.~|
0x36510:   d6 9b 9a cb d2 7c 0a 4b  28 ce 07 01 fa 09 b7 59   |.....|.K(......Y|
0x36520:   34 0f 61 f5 35 5b 0a 01  0e 11 14 cb d2 64 48 03   |4.a.5[.......dH.|
0x36530:   fb 80 98 dd 8b 23 03 bc  37 f3 de fb e7 9e 97 58   |.....#..7......X|
0x36540:   dd a2 99 b9 1d bc 0e a1  03 91 bc 7c d2 e1 e6 c2   |...........|....|
0x36550:   4d 3a 58 f9 0f a0 0b fc  31 d8 d4 2f 33 59 e9 82   |M:X.....1../3Y..|
0x36560:   5d 85 95 da 04 3e 0f eb  2e 2a f9 53 43 b6 3d 4d   |]....>...*.SC.=M|
0x36570:   00 14 bb 6c f9 a4 07 7c  17 f3 79 07 3d f9 47 43   |...l...|..y.=.GC|
0x36580:   ef 34 51 3d 12 2b 0a 1d  13 ff ef 17 49 c8 b6 9e   |.4Q=.+......I...|
0x36590:   e8 be 2e f9 e1 f2 0d 13  32 e8 33 0c a6 59 e2 0b   |........2.3..Y..|
0x365a0:   bd f3 4a bc 3b 51 08 0e  31 93 d9 88 3f d1 49 74   |..J.;Q..1...?.It|
0x365b0:   66 c2 c4 a1 e5 7e 00 1e  25 af 9a 52 81 fb ea 4e   |f....~..%..R...N|
0x365c0:   59 55 82 b9 3a 80 0a 8f  2f cb 10 e9 31 c6 89 96   |YU..:.../...1...|
0x365d0:   3f 81 aa ba 59 df 00 e5  0c f0 e3 3a 34 69 a2 6a   |?...Y......:4i.j|
0x365e0:   45 0e b0 b8 91 e2 07 20  3f 6b ab af 28 29 0b 1f   |E...... ?k..()..|
0x365f0:   33 4c 8c 28 4e e2 08 95  20 89 4f d0 96 56 0f b7   |3L.(N... .O..V..|
0x36600:   35 47 fa 98 12 c9 06 93  2c 85 aa 51 ad 96 8a de   |5G......,..Q....|
0x36610:   91 5d 67 3f 26 e3 03 d3  25 b2 66 fa 2d a0 91 b3   |.]g?&...%.f.-...|
0x36620:   08 46 17 e8 83 b3 09 e2  2b 0a a5 87 39 72 cb 18   |.F......+...9r..|
0x36630:   e2 3f 7a a5 89 cb 05 8e  22 b2 0f fe 3b 6f b2 8b   |.?z....."...;o..|
0x36640:   f1 0f 3e 4e ea ed 0c f2  21 f3 83 6d d3 bf 3d 54   |..>N....!..m..=T|
0x36650:   60 97 06 4a 5a da 0c 53  0c ad b3 7f 46 e9 2c 8d   |`..JZ..S....F.,.|
0x36660:   56 d7 83 bc ee c5 05 fb  2b 45 58 df 33 ce 4b 2c   |V.......+EX.3.K,|
0x36670:   64 21 67 99 d1 91 03 c8  24 b7 ff 16 92 cb bd 20   |d!g.....$...... |
0x36680:   a1 6c c8 76 10 98 0c 71  15 46 16 2d 83 76 f7 89   |.l.v...q.F.-.v..|
0x36690:   b0 17 14 32 f6 6d 06 b7  34 c1 d2 c5 c7 f8 44 d5   |...2.m..4.....D.|
0x366a0:   0e 4f 63 c2 9d d6 07 b3  0f af f4 be 2b 84 db 9a   |.Oc.........+...|
0x366b0:   c1 fe 0c 31 1c 2b 01 8b  00 34 df 95 fa e7 04 fe   |...1.+...4......|
0x366c0:   68 10 58 2d 93 85 00 f5  39 59 2b 5e 74 07 ad 29   |h.X-....9Y+^t..)|
0x366d0:   8d 4e 88 d3 5f ff 03 a6  2c b3 6f b8 23 1a ce 91   |.N.._...,.o.#...|
0x366e0:   33 00 d0 fc 34 07 0a 89  20 9a 97 9f e1 a1 b6 03   |3...4... .......|
0x366f0:   63 e9 81 9f ac 21 04 5d  2d 83 fe 88 89 af 16 bd   |c....!.]-.......|
0x36700:   d7 84 5a c0 f0 0c 09 ff  11 14 c6 c1 78 01 30 d9   |..Z.........x.0.|
0x36710:   4a db 60 67 24 89 00 c6  01 5d 72 3e 93 9f d1 74   |J.`g$....]r>...t|
0x36720:   d7 b9 a7 51 f1 46 0c 0a  0f c5 69 b2 73 0a 22 66   |...Q.F....i.s."f|
0x36730:   7a 74 a7 17 6b 2c 0a 80  2d b6 76 b0 bc 30 9e 71   |zt..k,..-.v..0.q|
0x36740:   ef f8 54 3c 69 56 0b 08  20 95 6c 73 70 d2 6d 14   |..T<iV.. .lsp.m.|
0x36750:   64 5f eb bc 6a a0 02 77  3f 27 b5 9f b3 2e b2 a4   |d_..j..w?'......|
0x36760:   ef ed ad 0f 46 18 06 a9  39 8a 1b ee f4 1f 07 fa   |....F...9.......|
0x36770:   bc 96 72 2d 8a ca 05 32  25 cc 9a c5 8d fa 6d 7a   |..r-...2%.....mz|
0x36780:   c1 8c c1 95 de ff 04 2a  24 3f 7c 5e ed c0 e9 ca   |.......*$?|^....|
0x36790:   b2 97 99 c2 c3 f9 0f 6c  09 60 99 48 dc 18 29 2e   |.......l.`.H..).|
0x367a0:   54 86 75 1f d5 63 0c ad  01 f7 0a 81 09 7e 4d bd   |T.u..c.......~M.|
0x367b0:   a1 50 4f ef 28 61 06 11  06 a3 1b e8 27 59 28 55   |.PO.(a......'Y(U|
0x367c0:   e4 93 e8 48 53 ef 08 1a  1f bd eb 89 c2 94 3c d2   |...HS.........<.|
0x367d0:   66 ef 80 c2 82 d5 02 90  15 8e d0 46 80 3b 81 f4   |f..........F.;..|
0x367e0:   39 10 0d 24 11 f6 00 6a  1a 5c ed 0a b4 12 a3 94   |9..$...j.\......|
0x367f0:   53 d3 82 de 8c f2 0f 93  32 b4 8f 4c 13 78 3a d8   |S.......2..L.x:.|
0x36800:   7b 7b eb 91 fe 2e 0d ae  3e 4f 76 55 e8 8c e9 a2   |{{......>OvU....|
0x36810:   43 63 79 cd 1c 00 0b 3f  09 dd db d2 49 e1 2e 86   |Ccy....?....I...|
0x36820:   06 7b 9f b7 89 9a 0b bb  12 8a 8b 98 a9 b1 e1 8a   |.{..............|
0x36830:   a1 14 d5 bd e8 19 07 8f  37 b6 a7 44 88 05 0e 6f   |........7..D...o|
0x36840:   54 16 3e fe 0e 1b 04 54  05 80 55 65 63 d3 ee 9e   |T.>....T..Uec...|
0x36850:   64 18 c0 90 66 2c 04 89  17 b0 42 d7 57 7e 16 a3   |d...f,....B.W~..|
0x36860:   40 5b 99 cc 69 54 42 d6  ad 0a 95 27 46 92 6b 73   |@[..iTB....'F.ks|
0x36870:   1c 1a 39 fb 21 d7 4f e5  8b ec 1f 5f d3 79 7a 13   |..9.!.O...._.yz.|
0x36880:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36890:   ??                                                 |?               |
; section: .gnu.linkonce.this_module
0x368a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x368b0:   00 00 00 00 00 00 00 00  70 78 71 33 70 65 5f 64   |........pxq3pe_d|
0x368c0:   74 76 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |tv..............|
0x368d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x368e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x368f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36900:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36910:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36920:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36930:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36940:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36950:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36960:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36970:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36980:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36990:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x369a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x369b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x369c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x369d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x369e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x369f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36a00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36a10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36a20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36a30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36a40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36a50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36a60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36a70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36a80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36a90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36aa0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36ab0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36ac0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x36ad0:   ??                                                 |?               |
; section: .EXTERN
0x3eae0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eaf0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eb00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eb10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eb20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eb30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eb40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eb50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eb60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eb70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eb80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eb90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eba0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ebb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ebc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ebd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ebe0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ebf0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ec00:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ec10:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ec20:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ec30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ec40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ec50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ec60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ec70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ec80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ec90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3eca0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ecb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ecc0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ecd0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ece0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ecf0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ed00:   ??                                                 |?               |
